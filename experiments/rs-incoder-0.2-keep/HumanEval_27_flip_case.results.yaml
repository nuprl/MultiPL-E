name: HumanEval_27_flip_case
language: rust
results:
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A'..='Z'\
    \ => c as char + 'a' - 'A' as char,\n        'a'..='z' => c as char + 'A' - 'a'\
    \ as char,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0369]: cannot add `char` to `char`\n --> /tmp/tmpx3cg4jar.rs:6:32\n\
    \  |\n6 |         'A'..='Z' => c as char + 'a' - 'A' as char,\n  |           \
    \           --------- ^ --- char\n  |                      |\n  |            \
    \          char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpx3cg4jar.rs:7:32\n\
    \  |\n7 |         'a'..='z' => c as char + 'A' - 'a' as char,\n  |           \
    \           --------- ^ --- char\n  |                      |\n  |            \
    \          char\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0369`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars()\n        .map(|c| match c {\n      \
    \      c if c.is_lowercase() => c.to_uppercase(),\n            c if c.is_uppercase()\
    \ => c.to_lowercase(),\n            _ => c,\n        })\n        .collect()\n\
    }\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0308]: `match` arms have incompatible types\n  --> /tmp/tmpmuirml45.rs:8:38\n\
    \   |\n6  |           .map(|c| match c {\n   |  __________________-\n7  | |  \
    \           c if c.is_lowercase() => c.to_uppercase(),\n   | |               \
    \                       ---------------- this is found to be of type `ToUppercase`\n\
    8  | |             c if c.is_uppercase() => c.to_lowercase(),\n   | |        \
    \                              ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`,\
    \ found struct `ToLowercase`\n9  | |             _ => c,\n10 | |         })\n\
    \   | |_________- `match` arms have incompatible types\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A' .. 'Z'\
    \ => c as u8 | 0x20,\n        'a' .. 'z' => c as u8 | 0x21,\n        _ => c,\n\
    \    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpqj8sq0sg.rs:6:9\n\
    \  |\n6 |         'A' .. 'Z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpqj8sq0sg.rs:7:9\n  |\n7 |         'a' .. 'z' => c as u8 | 0x21,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpqj8sq0sg.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'A' .. 'Z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'a' .. 'z' => c as u8 | 0x21,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'a' .. 'z'\
    \ => c as char + 'A' as char,\n        'A' .. 'Z' => c as char + 'a' as char,\n\
    \        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpxycye851.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpxycye851.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as char + 'a'\
    \ as char,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpxycye851.rs:6:33\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpxycye851.rs:7:33\n\
    \  |\n7 |         'A' .. 'Z' => c as char + 'a' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror: aborting due to 4 previous errors\n\nSome errors\
    \ have detailed explanations: E0369, E0658.\nFor more information about an error,\
    \ try `rustc --explain E0369`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars()\n        .map(|c| match c {\n      \
    \      c if c.is_lowercase() => c.to_uppercase(),\n            c if c.is_uppercase()\
    \ => c.to_lowercase(),\n            _ => c,\n        })\n        .collect()\n\
    }\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0308]: `match` arms have incompatible types\n  --> /tmp/tmpe_pwiigg.rs:8:38\n\
    \   |\n6  |           .map(|c| match c {\n   |  __________________-\n7  | |  \
    \           c if c.is_lowercase() => c.to_uppercase(),\n   | |               \
    \                       ---------------- this is found to be of type `ToUppercase`\n\
    8  | |             c if c.is_uppercase() => c.to_lowercase(),\n   | |        \
    \                              ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`,\
    \ found struct `ToLowercase`\n9  | |             _ => c,\n10 | |         })\n\
    \   | |_________- `match` arms have incompatible types\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars()\n        .map(|c| match c {\n      \
    \      'a' .. 'z' => c as char,\n            'A' .. 'Z' => c as char,\n      \
    \      _ => c,\n        })\n        .collect::<String>()\n}\n\nfn main() {\n \
    \   let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\")),\
    \ String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"\
    hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent delights have\
    \ violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    ));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmp1ms4ayyk.rs:7:13\n\
    \  |\n7 |             'a' .. 'z' => c as char,\n  |             ^^^^^^^^^^\n \
    \ |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmp1ms4ayyk.rs:8:13\n  |\n8 |             'A' .. 'Z' => c as char,\n\
    \  |             ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0658`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A'..='Z'\
    \ => c as u8 | 0x20,\n        'a'..='z' => c as u8 | 0x20,\n        _ => c,\n\
    \    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0308]: `match` arms have incompatible types\n --> /tmp/tmprx7vvksx.rs:8:14\n\
    \  |\n5 |       string.chars().map(|c| match c {\n  |  ____________________________-\n\
    6 | |         'A'..='Z' => c as u8 | 0x20,\n  | |                      --------------\
    \ this is found to be of type `u8`\n7 | |         'a'..='z' => c as u8 | 0x20,\n\
    \  | |                      -------------- this is found to be of type `u8`\n\
    8 | |         _ => c,\n  | |              ^ expected `u8`, found `char`\n9 | |\
    \     }).collect()\n  | |_____- `match` arms have incompatible types\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A'..='Z'\
    \ => c as char + 'a' - 'A' as char,\n        'a'..='z' => c as char + 'A' - 'a'\
    \ as char,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0369]: cannot add `char` to `char`\n --> /tmp/tmpp_nayym7.rs:6:32\n\
    \  |\n6 |         'A'..='Z' => c as char + 'a' - 'A' as char,\n  |           \
    \           --------- ^ --- char\n  |                      |\n  |            \
    \          char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpp_nayym7.rs:7:32\n\
    \  |\n7 |         'a'..='z' => c as char + 'A' - 'a' as char,\n  |           \
    \           --------- ^ --- char\n  |                      |\n  |            \
    \          char\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0369`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A'..='Z'\
    \ => c.to_ascii_uppercase(),\n        'a'..='z' => c.to_ascii_lowercase(),\n \
    \       _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Hello!\"`,\n right: `\"hELLO!\"`', /tmp/tmpf_14xx9j.rs:15:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars()\n        .map(|c| match c {\n      \
    \      'a' .. 'z' => c as char + 'A' as char,\n            'A' .. 'Z' => c as\
    \ char + 'a' as char,\n            _ => c,\n        })\n        .collect()\n}\n\
    \nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpib97hb0r.rs:7:13\n\
    \  |\n7 |             'a' .. 'z' => c as char + 'A' as char,\n  |            \
    \ ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpib97hb0r.rs:8:13\n  |\n8 |             'A' .. 'Z' => c as char +\
    \ 'a' as char,\n  |             ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpib97hb0r.rs:7:37\n\
    \  |\n7 |             'a' .. 'z' => c as char + 'A' as char,\n  |            \
    \               --------- ^ ----------- char\n  |                           |\n\
    \  |                           char\n\nerror[E0369]: cannot add `char` to `char`\n\
    \ --> /tmp/tmpib97hb0r.rs:8:37\n  |\n8 |             'A' .. 'Z' => c as char +\
    \ 'a' as char,\n  |                           --------- ^ ----------- char\n \
    \ |                           |\n  |                           char\n\nerror:\
    \ aborting due to 4 previous errors\n\nSome errors have detailed explanations:\
    \ E0369, E0658.\nFor more information about an error, try `rustc --explain E0369`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'a' .. 'z'\
    \ => c.to_ascii_uppercase(),\n        'A' .. 'Z' => c.to_ascii_lowercase(),\n\
    \        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmp4lgrh21i.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c.to_ascii_uppercase(),\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmp4lgrh21i.rs:7:9\n  |\n7 |         'A' .. 'Z' => c.to_ascii_lowercase(),\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0658`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A' .. 'Z'\
    \ => c as u8 | 0x20,\n        'a' .. 'z' => c as u8 | 0x21,\n        _ => c,\n\
    \    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmp_86bx2qp.rs:6:9\n\
    \  |\n6 |         'A' .. 'Z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmp_86bx2qp.rs:7:9\n  |\n7 |         'a' .. 'z' => c as u8 | 0x21,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmp_86bx2qp.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'A' .. 'Z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'a' .. 'z' => c as u8 | 0x21,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A' .. 'Z'\
    \ => c as u8 | 0x20,\n        'a' .. 'z' => c as u8 | 0x21,\n        _ => c,\n\
    \    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmp43ca4jv0.rs:6:9\n\
    \  |\n6 |         'A' .. 'Z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmp43ca4jv0.rs:7:9\n  |\n7 |         'a' .. 'z' => c as u8 | 0x21,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmp43ca4jv0.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'A' .. 'Z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'a' .. 'z' => c as u8 | 0x21,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'a' .. 'z'\
    \ => c as u8 | 32 as u8,\n        'A' .. 'Z' => c as u8 | 42 as u8,\n        _\
    \ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmps2xky49g.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | 32 as u8,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmps2xky49g.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | 42 as\
    \ u8,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmps2xky49g.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ 32 as u8,\n  | |                       ------------------ this is found to be\
    \ of type `u8`\n7 | |         'A' .. 'Z' => c as u8 | 42 as u8,\n  | |       \
    \                ------------------ this is found to be of type `u8`\n8 | |  \
    \       _ => c,\n  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n\
    \  | |_____- `match` arms have incompatible types\n\nerror: aborting due to 3\
    \ previous errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor\
    \ more information about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'a' .. 'z'\
    \ => c as char + 'A' as char,\n        'A' .. 'Z' => c as char + 'a' as char,\n\
    \        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpm2244nrz.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpm2244nrz.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as char + 'a'\
    \ as char,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpm2244nrz.rs:6:33\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpm2244nrz.rs:7:33\n\
    \  |\n7 |         'A' .. 'Z' => c as char + 'a' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror: aborting due to 4 previous errors\n\nSome errors\
    \ have detailed explanations: E0369, E0658.\nFor more information about an error,\
    \ try `rustc --explain E0369`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A' .. 'Z'\
    \ => c as char + 'a' - 'A' as char,\n        'a' .. 'z' => c as char + 'A' - 'a'\
    \ as char,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpbzj58vvq.rs:6:9\n\
    \  |\n6 |         'A' .. 'Z' => c as char + 'a' - 'A' as char,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpbzj58vvq.rs:7:9\n  |\n7 |         'a' .. 'z' => c as char + 'A'\
    \ - 'a' as char,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpbzj58vvq.rs:6:33\n\
    \  |\n6 |         'A' .. 'Z' => c as char + 'a' - 'A' as char,\n  |          \
    \             --------- ^ --- char\n  |                       |\n  |         \
    \              char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpbzj58vvq.rs:7:33\n\
    \  |\n7 |         'a' .. 'z' => c as char + 'A' - 'a' as char,\n  |          \
    \             --------- ^ --- char\n  |                       |\n  |         \
    \              char\n\nerror: aborting due to 4 previous errors\n\nSome errors\
    \ have detailed explanations: E0369, E0658.\nFor more information about an error,\
    \ try `rustc --explain E0369`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars()\n        .map(|c| match c {\n      \
    \      c if c.is_lowercase() => c.to_uppercase(),\n            c if c.is_uppercase()\
    \ => c.to_lowercase(),\n            _ => c,\n        })\n        .collect()\n\
    }\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0308]: `match` arms have incompatible types\n  --> /tmp/tmpw62jr85a.rs:8:38\n\
    \   |\n6  |           .map(|c| match c {\n   |  __________________-\n7  | |  \
    \           c if c.is_lowercase() => c.to_uppercase(),\n   | |               \
    \                       ---------------- this is found to be of type `ToUppercase`\n\
    8  | |             c if c.is_uppercase() => c.to_lowercase(),\n   | |        \
    \                              ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`,\
    \ found struct `ToLowercase`\n9  | |             _ => c,\n10 | |         })\n\
    \   | |_________- `match` arms have incompatible types\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A' .. 'Z'\
    \ => c as u8 | 0x20,\n        'a' .. 'z' => c as u8 | 0x20,\n        _ => c,\n\
    \    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpw7ybp8o6.rs:6:9\n\
    \  |\n6 |         'A' .. 'Z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpw7ybp8o6.rs:7:9\n  |\n7 |         'a' .. 'z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpw7ybp8o6.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'A' .. 'Z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'a' .. 'z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars()\n        .map(|c| match c {\n      \
    \      c if c.is_lowercase() => c.to_uppercase(),\n            c if c.is_uppercase()\
    \ => c.to_lowercase(),\n            _ => c,\n        })\n        .collect()\n\
    }\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0308]: `match` arms have incompatible types\n  --> /tmp/tmpaxcds4zy.rs:8:38\n\
    \   |\n6  |           .map(|c| match c {\n   |  __________________-\n7  | |  \
    \           c if c.is_lowercase() => c.to_uppercase(),\n   | |               \
    \                       ---------------- this is found to be of type `ToUppercase`\n\
    8  | |             c if c.is_uppercase() => c.to_lowercase(),\n   | |        \
    \                              ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`,\
    \ found struct `ToLowercase`\n9  | |             _ => c,\n10 | |         })\n\
    \   | |_________- `match` arms have incompatible types\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A' .. 'Z'\
    \ => c as u8 | 0x20,\n        'a' .. 'z' => c as u8 | 0x20,\n        _ => c,\n\
    \    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpw8ek503a.rs:6:9\n\
    \  |\n6 |         'A' .. 'Z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpw8ek503a.rs:7:9\n  |\n7 |         'a' .. 'z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpw8ek503a.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'A' .. 'Z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'a' .. 'z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'a' .. 'z'\
    \ => c as char + 'A' as char,\n        'A' .. 'Z' => c as char + 'a' as char,\n\
    \        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpad1md13d.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpad1md13d.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as char + 'a'\
    \ as char,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpad1md13d.rs:6:33\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpad1md13d.rs:7:33\n\
    \  |\n7 |         'A' .. 'Z' => c as char + 'a' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror: aborting due to 4 previous errors\n\nSome errors\
    \ have detailed explanations: E0369, E0658.\nFor more information about an error,\
    \ try `rustc --explain E0369`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars()\n        .map(|c| match c {\n      \
    \      c @ b'A' => b'a',\n            c @ b'a' => b'A',\n            _ => c,\n\
    \        })\n        .collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpx0e0zhab.rs:7:17\n  |\n6 |\
    \         .map(|c| match c {\n  |                        - this expression has\
    \ type `char`\n7 |             c @ b'A' => b'a',\n  |                 ^^^^ expected\
    \ `char`, found `u8`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpx0e0zhab.rs:8:17\n\
    \  |\n6 |         .map(|c| match c {\n  |                        - this expression\
    \ has type `char`\n7 |             c @ b'A' => b'a',\n8 |             c @ b'a'\
    \ => b'A',\n  |                 ^^^^ expected `char`, found `u8`\n\nerror[E0308]:\
    \ `match` arms have incompatible types\n  --> /tmp/tmpx0e0zhab.rs:9:18\n   |\n\
    6  |           .map(|c| match c {\n   |  __________________-\n7  | |         \
    \    c @ b'A' => b'a',\n   | |                         ---- this is found to be\
    \ of type `u8`\n8  | |             c @ b'a' => b'A',\n   | |                 \
    \        ---- this is found to be of type `u8`\n9  | |             _ => c,\n \
    \  | |                  ^ expected `u8`, found `char`\n10 | |         })\n   |\
    \ |_________- `match` arms have incompatible types\n\nerror: aborting due to 3\
    \ previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A'..='Z'\
    \ => c as char + 'a' - 'a',\n        'a'..='z' => c as char + 'A' - 'A',\n   \
    \     _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0369]: cannot add `char` to `char`\n --> /tmp/tmpbpv8flws.rs:6:32\n\
    \  |\n6 |         'A'..='Z' => c as char + 'a' - 'a',\n  |                   \
    \   --------- ^ --- char\n  |                      |\n  |                    \
    \  char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpbpv8flws.rs:7:32\n\
    \  |\n7 |         'a'..='z' => c as char + 'A' - 'A',\n  |                   \
    \   --------- ^ --- char\n  |                      |\n  |                    \
    \  char\n\nerror: aborting due to 2 previous errors\n\nFor more information about\
    \ this error, try `rustc --explain E0369`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A'..='Z'\
    \ => c as char + 'a' - 'A' as char,\n        'a'..='z' => c as char + 'A' - 'a'\
    \ as char,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0369]: cannot add `char` to `char`\n --> /tmp/tmp2q5akzce.rs:6:32\n\
    \  |\n6 |         'A'..='Z' => c as char + 'a' - 'A' as char,\n  |           \
    \           --------- ^ --- char\n  |                      |\n  |            \
    \          char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmp2q5akzce.rs:7:32\n\
    \  |\n7 |         'a'..='z' => c as char + 'A' - 'a' as char,\n  |           \
    \           --------- ^ --- char\n  |                      |\n  |            \
    \          char\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0369`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A'..='Z'\
    \ => c as char + 'a' - 'A' as char,\n        'a'..='z' => c as char + 'A' - 'a'\
    \ as char,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0369]: cannot add `char` to `char`\n --> /tmp/tmp20z6rsaw.rs:6:32\n\
    \  |\n6 |         'A'..='Z' => c as char + 'a' - 'A' as char,\n  |           \
    \           --------- ^ --- char\n  |                      |\n  |            \
    \          char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmp20z6rsaw.rs:7:32\n\
    \  |\n7 |         'a'..='z' => c as char + 'A' - 'a' as char,\n  |           \
    \           --------- ^ --- char\n  |                      |\n  |            \
    \          char\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0369`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars()\n        .map(|c| match c {\n      \
    \      'a' .. 'z' => c as char + 'A' as char,\n            'A' .. 'Z' => c as\
    \ char + 'a' as char,\n            _ => c,\n        })\n        .collect()\n}\n\
    \nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpm50wb4c9.rs:7:13\n\
    \  |\n7 |             'a' .. 'z' => c as char + 'A' as char,\n  |            \
    \ ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpm50wb4c9.rs:8:13\n  |\n8 |             'A' .. 'Z' => c as char +\
    \ 'a' as char,\n  |             ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpm50wb4c9.rs:7:37\n\
    \  |\n7 |             'a' .. 'z' => c as char + 'A' as char,\n  |            \
    \               --------- ^ ----------- char\n  |                           |\n\
    \  |                           char\n\nerror[E0369]: cannot add `char` to `char`\n\
    \ --> /tmp/tmpm50wb4c9.rs:8:37\n  |\n8 |             'A' .. 'Z' => c as char +\
    \ 'a' as char,\n  |                           --------- ^ ----------- char\n \
    \ |                           |\n  |                           char\n\nerror:\
    \ aborting due to 4 previous errors\n\nSome errors have detailed explanations:\
    \ E0369, E0658.\nFor more information about an error, try `rustc --explain E0369`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A'..='Z'\
    \ => c as char + 'a' - 'A' as char,\n        'a'..='z' => c as char + 'A' - 'a'\
    \ as char,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0369]: cannot add `char` to `char`\n --> /tmp/tmpm9sftbbx.rs:6:32\n\
    \  |\n6 |         'A'..='Z' => c as char + 'a' - 'A' as char,\n  |           \
    \           --------- ^ --- char\n  |                      |\n  |            \
    \          char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpm9sftbbx.rs:7:32\n\
    \  |\n7 |         'a'..='z' => c as char + 'A' - 'a' as char,\n  |           \
    \           --------- ^ --- char\n  |                      |\n  |            \
    \          char\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0369`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'a' .. 'z'\
    \ => c as char + 'A' as char,\n        'A' .. 'Z' => c as char + 'a' as char,\n\
    \        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpok_r00ev.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpok_r00ev.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as char + 'a'\
    \ as char,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpok_r00ev.rs:6:33\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpok_r00ev.rs:7:33\n\
    \  |\n7 |         'A' .. 'Z' => c as char + 'a' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror: aborting due to 4 previous errors\n\nSome errors\
    \ have detailed explanations: E0369, E0658.\nFor more information about an error,\
    \ try `rustc --explain E0369`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A' .. 'Z'\
    \ => c.to_ascii_uppercase(),\n        'a' .. 'z' => c.to_ascii_lowercase(),\n\
    \        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpgsn909g4.rs:6:9\n\
    \  |\n6 |         'A' .. 'Z' => c.to_ascii_uppercase(),\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpgsn909g4.rs:7:9\n  |\n7 |         'a' .. 'z' => c.to_ascii_lowercase(),\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0658`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'a' .. 'z'\
    \ => c as u8 | 0x20,\n        'A' .. 'Z' => c as u8 | 0x20,\n        _ => c,\n\
    \    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpp_97n5cg.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpp_97n5cg.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpp_97n5cg.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'A' .. 'Z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'a' .. 'z'\
    \ => c as u8 | 0x20,\n        'A' .. 'Z' => c as u8 | 0x20,\n        _ => c,\n\
    \    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmp4y5ub1p0.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmp4y5ub1p0.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmp4y5ub1p0.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'A' .. 'Z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A'..='Z'\
    \ => c as char + 'a' - 'A' as char,\n        'a'..='z' => c as char + 'A' - 'a'\
    \ as char,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0369]: cannot add `char` to `char`\n --> /tmp/tmpirjupj_g.rs:6:32\n\
    \  |\n6 |         'A'..='Z' => c as char + 'a' - 'A' as char,\n  |           \
    \           --------- ^ --- char\n  |                      |\n  |            \
    \          char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpirjupj_g.rs:7:32\n\
    \  |\n7 |         'a'..='z' => c as char + 'A' - 'a' as char,\n  |           \
    \           --------- ^ --- char\n  |                      |\n  |            \
    \          char\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0369`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars()\n        .map(|c| match c {\n      \
    \      c if c.is_lowercase() => c.to_uppercase(),\n            c if c.is_uppercase()\
    \ => c.to_lowercase(),\n            _ => c,\n        })\n        .collect()\n\
    }\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0308]: `match` arms have incompatible types\n  --> /tmp/tmpykh8k3uf.rs:8:38\n\
    \   |\n6  |           .map(|c| match c {\n   |  __________________-\n7  | |  \
    \           c if c.is_lowercase() => c.to_uppercase(),\n   | |               \
    \                       ---------------- this is found to be of type `ToUppercase`\n\
    8  | |             c if c.is_uppercase() => c.to_lowercase(),\n   | |        \
    \                              ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`,\
    \ found struct `ToLowercase`\n9  | |             _ => c,\n10 | |         })\n\
    \   | |_________- `match` arms have incompatible types\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'a' .. 'z'\
    \ => c as u8 | 0x20,\n        'A' .. 'Z' => c as u8 | 0x20,\n        _ => c,\n\
    \    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmp87z6jvfn.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmp87z6jvfn.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmp87z6jvfn.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'A' .. 'Z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A' .. 'Z'\
    \ => c as u8 | 0x20,\n        'a' .. 'z' => c as u8 | 0x21,\n        _ => c,\n\
    \    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmp8ajhxb6j.rs:6:9\n\
    \  |\n6 |         'A' .. 'Z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmp8ajhxb6j.rs:7:9\n  |\n7 |         'a' .. 'z' => c as u8 | 0x21,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmp8ajhxb6j.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'A' .. 'Z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'a' .. 'z' => c as u8 | 0x21,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'a' .. 'z'\
    \ => c as char + 'A' as char,\n        'A' .. 'Z' => c as char + 'a' as char,\n\
    \        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpb3837s8h.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpb3837s8h.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as char + 'a'\
    \ as char,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpb3837s8h.rs:6:33\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpb3837s8h.rs:7:33\n\
    \  |\n7 |         'A' .. 'Z' => c as char + 'a' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror: aborting due to 4 previous errors\n\nSome errors\
    \ have detailed explanations: E0369, E0658.\nFor more information about an error,\
    \ try `rustc --explain E0369`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars()\n        .map(|c| match c {\n      \
    \      c if c.is_lowercase() => c.to_uppercase(),\n            c if c.is_uppercase()\
    \ => c.to_lowercase(),\n            _ => c,\n        })\n        .collect()\n\
    }\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0308]: `match` arms have incompatible types\n  --> /tmp/tmpzd703yrp.rs:8:38\n\
    \   |\n6  |           .map(|c| match c {\n   |  __________________-\n7  | |  \
    \           c if c.is_lowercase() => c.to_uppercase(),\n   | |               \
    \                       ---------------- this is found to be of type `ToUppercase`\n\
    8  | |             c if c.is_uppercase() => c.to_lowercase(),\n   | |        \
    \                              ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`,\
    \ found struct `ToLowercase`\n9  | |             _ => c,\n10 | |         })\n\
    \   | |_________- `match` arms have incompatible types\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars()\n        .map(|c| match c {\n      \
    \      c if c.is_lowercase() => c.to_uppercase(),\n            c if c.is_uppercase()\
    \ => c.to_lowercase(),\n            _ => c,\n        })\n        .collect()\n\
    }\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0308]: `match` arms have incompatible types\n  --> /tmp/tmp7n2d2fsf.rs:8:38\n\
    \   |\n6  |           .map(|c| match c {\n   |  __________________-\n7  | |  \
    \           c if c.is_lowercase() => c.to_uppercase(),\n   | |               \
    \                       ---------------- this is found to be of type `ToUppercase`\n\
    8  | |             c if c.is_uppercase() => c.to_lowercase(),\n   | |        \
    \                              ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`,\
    \ found struct `ToLowercase`\n9  | |             _ => c,\n10 | |         })\n\
    \   | |_________- `match` arms have incompatible types\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars()\n        .map(|c| match c {\n      \
    \      'a' .. 'z' => c as u8 | 0x20,\n            'A' .. 'Z' => c as u8 | 0x20,\n\
    \            _ => c,\n        })\n        .collect()\n}\n\nfn main() {\n    let\
    \ candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\
    \"));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpz77gb632.rs:7:13\n\
    \  |\n7 |             'a' .. 'z' => c as u8 | 0x20,\n  |             ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpz77gb632.rs:8:13\n  |\n8 |             'A' .. 'Z' => c as u8 | 0x20,\n\
    \  |             ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \  --> /tmp/tmpz77gb632.rs:9:18\n   |\n6  |           .map(|c| match c {\n   |\
    \  __________________-\n7  | |             'a' .. 'z' => c as u8 | 0x20,\n   |\
    \ |                           -------------- this is found to be of type `u8`\n\
    8  | |             'A' .. 'Z' => c as u8 | 0x20,\n   | |                     \
    \      -------------- this is found to be of type `u8`\n9  | |             _ =>\
    \ c,\n   | |                  ^ expected `u8`, found `char`\n10 | |         })\n\
    \   | |_________- `match` arms have incompatible types\n\nerror: aborting due\
    \ to 3 previous errors\n\nSome errors have detailed explanations: E0308, E0658.\n\
    For more information about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars()\n        .map(|c| match c {\n      \
    \      'a' .. 'z' => c as char + 'A' as char,\n            'A' .. 'Z' => c as\
    \ char + 'a' as char,\n            _ => c,\n        })\n        .collect()\n}\n\
    \nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmp1wvvxp8m.rs:7:13\n\
    \  |\n7 |             'a' .. 'z' => c as char + 'A' as char,\n  |            \
    \ ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmp1wvvxp8m.rs:8:13\n  |\n8 |             'A' .. 'Z' => c as char +\
    \ 'a' as char,\n  |             ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmp1wvvxp8m.rs:7:37\n\
    \  |\n7 |             'a' .. 'z' => c as char + 'A' as char,\n  |            \
    \               --------- ^ ----------- char\n  |                           |\n\
    \  |                           char\n\nerror[E0369]: cannot add `char` to `char`\n\
    \ --> /tmp/tmp1wvvxp8m.rs:8:37\n  |\n8 |             'A' .. 'Z' => c as char +\
    \ 'a' as char,\n  |                           --------- ^ ----------- char\n \
    \ |                           |\n  |                           char\n\nerror:\
    \ aborting due to 4 previous errors\n\nSome errors have detailed explanations:\
    \ E0369, E0658.\nFor more information about an error, try `rustc --explain E0369`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A'..='Z'\
    \ => c as char + 'a' - 'A' as char,\n        'a'..='z' => (c as char + 'A' - 'a')\
    \ as char,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0369]: cannot add `char` to `char`\n --> /tmp/tmpc9xmc84e.rs:6:32\n\
    \  |\n6 |         'A'..='Z' => c as char + 'a' - 'A' as char,\n  |           \
    \           --------- ^ --- char\n  |                      |\n  |            \
    \          char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpc9xmc84e.rs:7:33\n\
    \  |\n7 |         'a'..='z' => (c as char + 'A' - 'a') as char,\n  |         \
    \              --------- ^ --- char\n  |                       |\n  |        \
    \               char\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0369`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A'..='Z'\
    \ => c as u8 | 0x20,\n        'a'..='z' => c as u8 | 0x21,\n        _ => c,\n\
    \    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0308]: `match` arms have incompatible types\n --> /tmp/tmp62l1dfgf.rs:8:14\n\
    \  |\n5 |       string.chars().map(|c| match c {\n  |  ____________________________-\n\
    6 | |         'A'..='Z' => c as u8 | 0x20,\n  | |                      --------------\
    \ this is found to be of type `u8`\n7 | |         'a'..='z' => c as u8 | 0x21,\n\
    \  | |                      -------------- this is found to be of type `u8`\n\
    8 | |         _ => c,\n  | |              ^ expected `u8`, found `char`\n9 | |\
    \     }).collect()\n  | |_____- `match` arms have incompatible types\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'a' .. 'z'\
    \ => c as char,\n        'A' .. 'Z' => c as char,\n        _ => c,\n    }).collect()\n\
    }\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpcn12252j.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as char,\n  |         ^^^^^^^^^^\n  |\n  = note:\
    \ see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for more information\n\
    \nerror[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpcn12252j.rs:7:9\n\
    \  |\n7 |         'A' .. 'Z' => c as char,\n  |         ^^^^^^^^^^\n  |\n  = note:\
    \ see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for more information\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0658`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'a' .. 'z'\
    \ => c as u8 | 0x20,\n        'A' .. 'Z' => c as u8 | 0x20,\n        _ => c,\n\
    \    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmperc8gnty.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmperc8gnty.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmperc8gnty.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'A' .. 'Z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'a' .. 'z'\
    \ => c as char + 'A' as char,\n        'A' .. 'Z' => c as char + 'a' as char,\n\
    \        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmp8lgjy8ua.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmp8lgjy8ua.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as char + 'a'\
    \ as char,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmp8lgjy8ua.rs:6:33\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmp8lgjy8ua.rs:7:33\n\
    \  |\n7 |         'A' .. 'Z' => c as char + 'a' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror: aborting due to 4 previous errors\n\nSome errors\
    \ have detailed explanations: E0369, E0658.\nFor more information about an error,\
    \ try `rustc --explain E0369`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'a' .. 'z'\
    \ => c as u8 | 0x20,\n        'A' .. 'Z' => c as u8 | 0x20,\n        _ => c,\n\
    \    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpu1jsl90x.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpu1jsl90x.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpu1jsl90x.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'A' .. 'Z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'a' .. 'z'\
    \ => c as char + 'A' as char,\n        'A' .. 'Z' => c as char + 'a' as char,\n\
    \        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpng1kyizq.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpng1kyizq.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as char + 'a'\
    \ as char,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpng1kyizq.rs:6:33\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpng1kyizq.rs:7:33\n\
    \  |\n7 |         'A' .. 'Z' => c as char + 'a' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror: aborting due to 4 previous errors\n\nSome errors\
    \ have detailed explanations: E0369, E0658.\nFor more information about an error,\
    \ try `rustc --explain E0369`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A' .. 'Z'\
    \ => c as u8 | 0x20,\n        'a' .. 'z' => c as u8 | 0x21,\n        _ => c,\n\
    \    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpeg_m5twl.rs:6:9\n\
    \  |\n6 |         'A' .. 'Z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpeg_m5twl.rs:7:9\n  |\n7 |         'a' .. 'z' => c as u8 | 0x21,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpeg_m5twl.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'A' .. 'Z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'a' .. 'z' => c as u8 | 0x21,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars()\n        .map(|c| match c {\n      \
    \      'a' .. 'z' => c as char + 'A' as char,\n            'A' .. 'Z' => c as\
    \ char + 'a' as char,\n            _ => c,\n        })\n        .collect()\n}\n\
    \nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmp9q2sr4rc.rs:7:13\n\
    \  |\n7 |             'a' .. 'z' => c as char + 'A' as char,\n  |            \
    \ ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmp9q2sr4rc.rs:8:13\n  |\n8 |             'A' .. 'Z' => c as char +\
    \ 'a' as char,\n  |             ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmp9q2sr4rc.rs:7:37\n\
    \  |\n7 |             'a' .. 'z' => c as char + 'A' as char,\n  |            \
    \               --------- ^ ----------- char\n  |                           |\n\
    \  |                           char\n\nerror[E0369]: cannot add `char` to `char`\n\
    \ --> /tmp/tmp9q2sr4rc.rs:8:37\n  |\n8 |             'A' .. 'Z' => c as char +\
    \ 'a' as char,\n  |                           --------- ^ ----------- char\n \
    \ |                           |\n  |                           char\n\nerror:\
    \ aborting due to 4 previous errors\n\nSome errors have detailed explanations:\
    \ E0369, E0658.\nFor more information about an error, try `rustc --explain E0369`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A' .. 'Z'\
    \ => c as u8 | 0x20,\n        'a' .. 'z' => c as u8 | 0x21,\n        _ => c,\n\
    \    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpk1rlsvk0.rs:6:9\n\
    \  |\n6 |         'A' .. 'Z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpk1rlsvk0.rs:7:9\n  |\n7 |         'a' .. 'z' => c as u8 | 0x21,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpk1rlsvk0.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'A' .. 'Z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'a' .. 'z' => c as u8 | 0x21,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars()\n        .map(|c| match c {\n      \
    \      c if c.is_lowercase() => c.to_uppercase(),\n            c if c.is_uppercase()\
    \ => c.to_lowercase(),\n            _ => c,\n        })\n        .collect()\n\
    }\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0308]: `match` arms have incompatible types\n  --> /tmp/tmpusz2_e34.rs:8:38\n\
    \   |\n6  |           .map(|c| match c {\n   |  __________________-\n7  | |  \
    \           c if c.is_lowercase() => c.to_uppercase(),\n   | |               \
    \                       ---------------- this is found to be of type `ToUppercase`\n\
    8  | |             c if c.is_uppercase() => c.to_lowercase(),\n   | |        \
    \                              ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`,\
    \ found struct `ToLowercase`\n9  | |             _ => c,\n10 | |         })\n\
    \   | |_________- `match` arms have incompatible types\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars()\n        .map(|c| match c {\n      \
    \      'a' .. 'z' => c as u8 | 32 as u8,\n            'A' .. 'Z' => c as u8 |\
    \ 65 as u8,\n            _ => c,\n        })\n        .collect()\n}\n\nfn main()\
    \ {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpqidgy_eg.rs:7:13\n\
    \  |\n7 |             'a' .. 'z' => c as u8 | 32 as u8,\n  |             ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpqidgy_eg.rs:8:13\n  |\n8 |             'A' .. 'Z' => c as u8 | 65\
    \ as u8,\n  |             ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \  --> /tmp/tmpqidgy_eg.rs:9:18\n   |\n6  |           .map(|c| match c {\n   |\
    \  __________________-\n7  | |             'a' .. 'z' => c as u8 | 32 as u8,\n\
    \   | |                           ------------------ this is found to be of type\
    \ `u8`\n8  | |             'A' .. 'Z' => c as u8 | 65 as u8,\n   | |         \
    \                  ------------------ this is found to be of type `u8`\n9  | |\
    \             _ => c,\n   | |                  ^ expected `u8`, found `char`\n\
    10 | |         })\n   | |_________- `match` arms have incompatible types\n\nerror:\
    \ aborting due to 3 previous errors\n\nSome errors have detailed explanations:\
    \ E0308, E0658.\nFor more information about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'a' .. 'z'\
    \ => c as u8 | 0x20,\n        'A' .. 'Z' => c as u8 | 0x20,\n        _ => c,\n\
    \    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpr68gac3o.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpr68gac3o.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpr68gac3o.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'A' .. 'Z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'a' .. 'z'\
    \ => c as u8 | 0x20,\n        'A' .. 'Z' => c as u8 | 0x20,\n        _ => c,\n\
    \    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpfild8ei4.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpfild8ei4.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpfild8ei4.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'A' .. 'Z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars()\n        .map(|c| match c {\n      \
    \      'a' .. 'z' => c as char + 'A' as char,\n            'A' .. 'Z' => c as\
    \ char + 'a' as char,\n            _ => c,\n        })\n        .collect()\n}\n\
    \nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpgp4ltoau.rs:7:13\n\
    \  |\n7 |             'a' .. 'z' => c as char + 'A' as char,\n  |            \
    \ ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpgp4ltoau.rs:8:13\n  |\n8 |             'A' .. 'Z' => c as char +\
    \ 'a' as char,\n  |             ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpgp4ltoau.rs:7:37\n\
    \  |\n7 |             'a' .. 'z' => c as char + 'A' as char,\n  |            \
    \               --------- ^ ----------- char\n  |                           |\n\
    \  |                           char\n\nerror[E0369]: cannot add `char` to `char`\n\
    \ --> /tmp/tmpgp4ltoau.rs:8:37\n  |\n8 |             'A' .. 'Z' => c as char +\
    \ 'a' as char,\n  |                           --------- ^ ----------- char\n \
    \ |                           |\n  |                           char\n\nerror:\
    \ aborting due to 4 previous errors\n\nSome errors have detailed explanations:\
    \ E0369, E0658.\nFor more information about an error, try `rustc --explain E0369`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars()\n        .map(|c| match c {\n      \
    \      c if c.is_lowercase() => c.to_uppercase(),\n            c if c.is_uppercase()\
    \ => c.to_lowercase(),\n            _ => c,\n        })\n        .collect()\n\
    }\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0308]: `match` arms have incompatible types\n  --> /tmp/tmpk3yjfz25.rs:8:38\n\
    \   |\n6  |           .map(|c| match c {\n   |  __________________-\n7  | |  \
    \           c if c.is_lowercase() => c.to_uppercase(),\n   | |               \
    \                       ---------------- this is found to be of type `ToUppercase`\n\
    8  | |             c if c.is_uppercase() => c.to_lowercase(),\n   | |        \
    \                              ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`,\
    \ found struct `ToLowercase`\n9  | |             _ => c,\n10 | |         })\n\
    \   | |_________- `match` arms have incompatible types\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A' .. 'Z'\
    \ => c as u8 | 0x20,\n        'a' .. 'z' => c as u8 | 0x21,\n        _ => c,\n\
    \    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmp0_q4tiks.rs:6:9\n\
    \  |\n6 |         'A' .. 'Z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmp0_q4tiks.rs:7:9\n  |\n7 |         'a' .. 'z' => c as u8 | 0x21,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmp0_q4tiks.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'A' .. 'Z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'a' .. 'z' => c as u8 | 0x21,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A'..='Z'\
    \ => c as char + 'a' - 'A' as char,\n        'a'..='z' => c as char + 'A' - 'a'\
    \ as char,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0369]: cannot add `char` to `char`\n --> /tmp/tmp0cf2_t9d.rs:6:32\n\
    \  |\n6 |         'A'..='Z' => c as char + 'a' - 'A' as char,\n  |           \
    \           --------- ^ --- char\n  |                      |\n  |            \
    \          char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmp0cf2_t9d.rs:7:32\n\
    \  |\n7 |         'a'..='z' => c as char + 'A' - 'a' as char,\n  |           \
    \           --------- ^ --- char\n  |                      |\n  |            \
    \          char\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0369`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A'..='Z'\
    \ => c as char + 'a' - 'A' as char,\n        'a'..='z' => c as char + 'A' - 'a'\
    \ as char,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0369]: cannot add `char` to `char`\n --> /tmp/tmp78bs8juw.rs:6:32\n\
    \  |\n6 |         'A'..='Z' => c as char + 'a' - 'A' as char,\n  |           \
    \           --------- ^ --- char\n  |                      |\n  |            \
    \          char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmp78bs8juw.rs:7:32\n\
    \  |\n7 |         'a'..='z' => c as char + 'A' - 'a' as char,\n  |           \
    \           --------- ^ --- char\n  |                      |\n  |            \
    \          char\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0369`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A' .. 'Z'\
    \ => c as u8 | 0x20,\n        'a' .. 'z' => c as u8 | 0x20,\n        _ => c,\n\
    \    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmptr4m_50q.rs:6:9\n\
    \  |\n6 |         'A' .. 'Z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmptr4m_50q.rs:7:9\n  |\n7 |         'a' .. 'z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmptr4m_50q.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'A' .. 'Z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'a' .. 'z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'a' .. 'z'\
    \ => c as char + 'A' as char,\n        'A' .. 'Z' => c as char + 'a' as char,\n\
    \        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpdtpafzyq.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpdtpafzyq.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as char + 'a'\
    \ as char,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpdtpafzyq.rs:6:33\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpdtpafzyq.rs:7:33\n\
    \  |\n7 |         'A' .. 'Z' => c as char + 'a' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror: aborting due to 4 previous errors\n\nSome errors\
    \ have detailed explanations: E0369, E0658.\nFor more information about an error,\
    \ try `rustc --explain E0369`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'a' .. 'z'\
    \ => c as char + 'A' as char,\n        'A' .. 'Z' => c as char + 'a' as char,\n\
    \        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpqca2p5yh.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpqca2p5yh.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as char + 'a'\
    \ as char,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpqca2p5yh.rs:6:33\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpqca2p5yh.rs:7:33\n\
    \  |\n7 |         'A' .. 'Z' => c as char + 'a' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror: aborting due to 4 previous errors\n\nSome errors\
    \ have detailed explanations: E0369, E0658.\nFor more information about an error,\
    \ try `rustc --explain E0369`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'a' .. 'z'\
    \ => c as char + 'A' as char,\n        'A' .. 'Z' => c as char + 'a' as char,\n\
    \        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpr5sdlloy.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpr5sdlloy.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as char + 'a'\
    \ as char,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpr5sdlloy.rs:6:33\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpr5sdlloy.rs:7:33\n\
    \  |\n7 |         'A' .. 'Z' => c as char + 'a' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror: aborting due to 4 previous errors\n\nSome errors\
    \ have detailed explanations: E0369, E0658.\nFor more information about an error,\
    \ try `rustc --explain E0369`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A'..='Z'\
    \ => c as char + 'a' - 'a',\n        'a'..='z' => c as char + 'A' - 'A',\n   \
    \     _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0369]: cannot add `char` to `char`\n --> /tmp/tmphb5zy69i.rs:6:32\n\
    \  |\n6 |         'A'..='Z' => c as char + 'a' - 'a',\n  |                   \
    \   --------- ^ --- char\n  |                      |\n  |                    \
    \  char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmphb5zy69i.rs:7:32\n\
    \  |\n7 |         'a'..='z' => c as char + 'A' - 'A',\n  |                   \
    \   --------- ^ --- char\n  |                      |\n  |                    \
    \  char\n\nerror: aborting due to 2 previous errors\n\nFor more information about\
    \ this error, try `rustc --explain E0369`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars()\n        .map(|c| match c {\n      \
    \      c if c.is_lowercase() => c.to_uppercase(),\n            c if c.is_uppercase()\
    \ => c.to_lowercase(),\n            _ => c,\n        })\n        .collect()\n\
    }\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0308]: `match` arms have incompatible types\n  --> /tmp/tmp5xmu0vaw.rs:8:38\n\
    \   |\n6  |           .map(|c| match c {\n   |  __________________-\n7  | |  \
    \           c if c.is_lowercase() => c.to_uppercase(),\n   | |               \
    \                       ---------------- this is found to be of type `ToUppercase`\n\
    8  | |             c if c.is_uppercase() => c.to_lowercase(),\n   | |        \
    \                              ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`,\
    \ found struct `ToLowercase`\n9  | |             _ => c,\n10 | |         })\n\
    \   | |_________- `match` arms have incompatible types\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars()\n        .map(|c| match c {\n      \
    \      c if c.is_lowercase() => c.to_uppercase(),\n            c if c.is_uppercase()\
    \ => c.to_lowercase(),\n            _ => c,\n        })\n        .collect()\n\
    }\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0308]: `match` arms have incompatible types\n  --> /tmp/tmptvghibpu.rs:8:38\n\
    \   |\n6  |           .map(|c| match c {\n   |  __________________-\n7  | |  \
    \           c if c.is_lowercase() => c.to_uppercase(),\n   | |               \
    \                       ---------------- this is found to be of type `ToUppercase`\n\
    8  | |             c if c.is_uppercase() => c.to_lowercase(),\n   | |        \
    \                              ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`,\
    \ found struct `ToLowercase`\n9  | |             _ => c,\n10 | |         })\n\
    \   | |_________- `match` arms have incompatible types\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars()\n        .map(|c| match c {\n      \
    \      'a' .. 'z' => c as char + 'A' as char,\n            'A' .. 'Z' => c as\
    \ char + 'a' as char,\n            _ => c,\n        })\n        .collect()\n}\n\
    \nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmp_fh84yax.rs:7:13\n\
    \  |\n7 |             'a' .. 'z' => c as char + 'A' as char,\n  |            \
    \ ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmp_fh84yax.rs:8:13\n  |\n8 |             'A' .. 'Z' => c as char +\
    \ 'a' as char,\n  |             ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmp_fh84yax.rs:7:37\n\
    \  |\n7 |             'a' .. 'z' => c as char + 'A' as char,\n  |            \
    \               --------- ^ ----------- char\n  |                           |\n\
    \  |                           char\n\nerror[E0369]: cannot add `char` to `char`\n\
    \ --> /tmp/tmp_fh84yax.rs:8:37\n  |\n8 |             'A' .. 'Z' => c as char +\
    \ 'a' as char,\n  |                           --------- ^ ----------- char\n \
    \ |                           |\n  |                           char\n\nerror:\
    \ aborting due to 4 previous errors\n\nSome errors have detailed explanations:\
    \ E0369, E0658.\nFor more information about an error, try `rustc --explain E0369`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars()\n        .map(|c| match c {\n      \
    \      c if c.is_lowercase() => c.to_uppercase(),\n            c if c.is_uppercase()\
    \ => c.to_lowercase(),\n            _ => c,\n        })\n        .collect()\n\
    }\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0308]: `match` arms have incompatible types\n  --> /tmp/tmpyn2d95df.rs:8:38\n\
    \   |\n6  |           .map(|c| match c {\n   |  __________________-\n7  | |  \
    \           c if c.is_lowercase() => c.to_uppercase(),\n   | |               \
    \                       ---------------- this is found to be of type `ToUppercase`\n\
    8  | |             c if c.is_uppercase() => c.to_lowercase(),\n   | |        \
    \                              ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`,\
    \ found struct `ToLowercase`\n9  | |             _ => c,\n10 | |         })\n\
    \   | |_________- `match` arms have incompatible types\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars()\n        .map(|c| match c {\n      \
    \      c if c.is_lowercase() => c.to_uppercase(),\n            c if c.is_uppercase()\
    \ => c.to_lowercase(),\n            _ => c,\n        })\n        .collect()\n\
    }\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0308]: `match` arms have incompatible types\n  --> /tmp/tmp92n4an2q.rs:8:38\n\
    \   |\n6  |           .map(|c| match c {\n   |  __________________-\n7  | |  \
    \           c if c.is_lowercase() => c.to_uppercase(),\n   | |               \
    \                       ---------------- this is found to be of type `ToUppercase`\n\
    8  | |             c if c.is_uppercase() => c.to_lowercase(),\n   | |        \
    \                              ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`,\
    \ found struct `ToLowercase`\n9  | |             _ => c,\n10 | |         })\n\
    \   | |_________- `match` arms have incompatible types\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'a' .. 'z'\
    \ => c as char + 'A' as char,\n        'A' .. 'Z' => c as char + 'a' as char,\n\
    \        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpmshdizgh.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpmshdizgh.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as char + 'a'\
    \ as char,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpmshdizgh.rs:6:33\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpmshdizgh.rs:7:33\n\
    \  |\n7 |         'A' .. 'Z' => c as char + 'a' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror: aborting due to 4 previous errors\n\nSome errors\
    \ have detailed explanations: E0369, E0658.\nFor more information about an error,\
    \ try `rustc --explain E0369`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'a' .. 'z'\
    \ => c as u8 | 0x20,\n        'A' .. 'Z' => c as u8 | 0x20,\n        _ => c,\n\
    \    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmp_x_wo0vq.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmp_x_wo0vq.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmp_x_wo0vq.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'A' .. 'Z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A'..='Z'\
    \ => c as u8 | 0x20,\n        'a'..='z' => c as u8 | 0x20,\n        _ => c,\n\
    \    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0308]: `match` arms have incompatible types\n --> /tmp/tmpaldq_ir2.rs:8:14\n\
    \  |\n5 |       string.chars().map(|c| match c {\n  |  ____________________________-\n\
    6 | |         'A'..='Z' => c as u8 | 0x20,\n  | |                      --------------\
    \ this is found to be of type `u8`\n7 | |         'a'..='z' => c as u8 | 0x20,\n\
    \  | |                      -------------- this is found to be of type `u8`\n\
    8 | |         _ => c,\n  | |              ^ expected `u8`, found `char`\n9 | |\
    \     }).collect()\n  | |_____- `match` arms have incompatible types\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A'..='Z'\
    \ => c as char + 'a' - 'A' as char,\n        'a'..='z' => c as char + 'A' - 'a'\
    \ as char,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0369]: cannot add `char` to `char`\n --> /tmp/tmp9sgo3pfg.rs:6:32\n\
    \  |\n6 |         'A'..='Z' => c as char + 'a' - 'A' as char,\n  |           \
    \           --------- ^ --- char\n  |                      |\n  |            \
    \          char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmp9sgo3pfg.rs:7:32\n\
    \  |\n7 |         'a'..='z' => c as char + 'A' - 'a' as char,\n  |           \
    \           --------- ^ --- char\n  |                      |\n  |            \
    \          char\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0369`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A' .. 'Z'\
    \ => c as u8 | 0x20,\n        'a' .. 'z' => c as u8 | 0x20,\n        _ => c,\n\
    \    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmplamsnj40.rs:6:9\n\
    \  |\n6 |         'A' .. 'Z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmplamsnj40.rs:7:9\n  |\n7 |         'a' .. 'z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmplamsnj40.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'A' .. 'Z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'a' .. 'z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'a' .. 'z'\
    \ => c as char + 'A' as char,\n        'A' .. 'Z' => c as char + 'a' as char,\n\
    \        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmprntcth03.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmprntcth03.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as char + 'a'\
    \ as char,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmprntcth03.rs:6:33\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmprntcth03.rs:7:33\n\
    \  |\n7 |         'A' .. 'Z' => c as char + 'a' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror: aborting due to 4 previous errors\n\nSome errors\
    \ have detailed explanations: E0369, E0658.\nFor more information about an error,\
    \ try `rustc --explain E0369`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars()\n        .map(|c| match c {\n      \
    \      'a' .. 'z' => c as char + 'A' as char,\n            'A' .. 'Z' => c as\
    \ char + 'a' as char,\n            _ => c,\n        })\n        .collect()\n}\n\
    \nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpf3kz9_6f.rs:7:13\n\
    \  |\n7 |             'a' .. 'z' => c as char + 'A' as char,\n  |            \
    \ ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpf3kz9_6f.rs:8:13\n  |\n8 |             'A' .. 'Z' => c as char +\
    \ 'a' as char,\n  |             ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpf3kz9_6f.rs:7:37\n\
    \  |\n7 |             'a' .. 'z' => c as char + 'A' as char,\n  |            \
    \               --------- ^ ----------- char\n  |                           |\n\
    \  |                           char\n\nerror[E0369]: cannot add `char` to `char`\n\
    \ --> /tmp/tmpf3kz9_6f.rs:8:37\n  |\n8 |             'A' .. 'Z' => c as char +\
    \ 'a' as char,\n  |                           --------- ^ ----------- char\n \
    \ |                           |\n  |                           char\n\nerror:\
    \ aborting due to 4 previous errors\n\nSome errors have detailed explanations:\
    \ E0369, E0658.\nFor more information about an error, try `rustc --explain E0369`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A'..='Z'\
    \ => c as char + 'a' - 'a',\n        'a'..='z' => c as char + 'A' - 'A',\n   \
    \     _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0369]: cannot add `char` to `char`\n --> /tmp/tmpohn128f9.rs:6:32\n\
    \  |\n6 |         'A'..='Z' => c as char + 'a' - 'a',\n  |                   \
    \   --------- ^ --- char\n  |                      |\n  |                    \
    \  char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpohn128f9.rs:7:32\n\
    \  |\n7 |         'a'..='z' => c as char + 'A' - 'A',\n  |                   \
    \   --------- ^ --- char\n  |                      |\n  |                    \
    \  char\n\nerror: aborting due to 2 previous errors\n\nFor more information about\
    \ this error, try `rustc --explain E0369`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'a' .. 'z'\
    \ => c as u8 | 0x20,\n        'A' .. 'Z' => c as u8 | 0x20,\n        _ => c,\n\
    \    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpatjdz6m1.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpatjdz6m1.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpatjdz6m1.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'A' .. 'Z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars()\n        .map(|c| match c {\n      \
    \      c if c.is_lowercase() => c.to_uppercase(),\n            c if c.is_uppercase()\
    \ => c.to_lowercase(),\n            _ => c,\n        })\n        .collect()\n\
    }\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0308]: `match` arms have incompatible types\n  --> /tmp/tmp_8g4k0zw.rs:8:38\n\
    \   |\n6  |           .map(|c| match c {\n   |  __________________-\n7  | |  \
    \           c if c.is_lowercase() => c.to_uppercase(),\n   | |               \
    \                       ---------------- this is found to be of type `ToUppercase`\n\
    8  | |             c if c.is_uppercase() => c.to_lowercase(),\n   | |        \
    \                              ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`,\
    \ found struct `ToLowercase`\n9  | |             _ => c,\n10 | |         })\n\
    \   | |_________- `match` arms have incompatible types\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'a' .. 'z'\
    \ => c as u8 | 0x20,\n        'A' .. 'Z' => c as u8 | 0x20,\n        _ => c,\n\
    \    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmp1r3e6b6n.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmp1r3e6b6n.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmp1r3e6b6n.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'A' .. 'Z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars()\n        .map(|c| match c {\n      \
    \      'a' .. 'z' => c.to_ascii_uppercase(),\n            'A' .. 'Z' => c.to_ascii_lowercase(),\n\
    \            _ => c,\n        })\n        .collect()\n}\n\nfn main() {\n    let\
    \ candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\
    \"));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpxhskopbw.rs:7:13\n\
    \  |\n7 |             'a' .. 'z' => c.to_ascii_uppercase(),\n  |             ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpxhskopbw.rs:8:13\n  |\n8 |             'A' .. 'Z' => c.to_ascii_lowercase(),\n\
    \  |             ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0658`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'a' .. 'z'\
    \ => c as u8 | 0x20,\n        'A' .. 'Z' => c as u8 | 0x20,\n        _ => c,\n\
    \    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmptnu14zk2.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmptnu14zk2.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmptnu14zk2.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'A' .. 'Z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars()\n        .map(|c| match c {\n      \
    \      c if c.is_lowercase() => c.to_uppercase(),\n            c if c.is_uppercase()\
    \ => c.to_lowercase(),\n            _ => c,\n        })\n        .collect()\n\
    }\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0308]: `match` arms have incompatible types\n  --> /tmp/tmps600rwj6.rs:8:38\n\
    \   |\n6  |           .map(|c| match c {\n   |  __________________-\n7  | |  \
    \           c if c.is_lowercase() => c.to_uppercase(),\n   | |               \
    \                       ---------------- this is found to be of type `ToUppercase`\n\
    8  | |             c if c.is_uppercase() => c.to_lowercase(),\n   | |        \
    \                              ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`,\
    \ found struct `ToLowercase`\n9  | |             _ => c,\n10 | |         })\n\
    \   | |_________- `match` arms have incompatible types\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'a' .. 'z'\
    \ => c as char + 'A' as char,\n        'A' .. 'Z' => c as char + 'a' as char,\n\
    \        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpop3x87lh.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpop3x87lh.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as char + 'a'\
    \ as char,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpop3x87lh.rs:6:33\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpop3x87lh.rs:7:33\n\
    \  |\n7 |         'A' .. 'Z' => c as char + 'a' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror: aborting due to 4 previous errors\n\nSome errors\
    \ have detailed explanations: E0369, E0658.\nFor more information about an error,\
    \ try `rustc --explain E0369`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'a' .. 'z'\
    \ => c.to_ascii_uppercase(),\n        'A' .. 'Z' => c.to_ascii_lowercase(),\n\
    \        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpxduue2hd.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c.to_ascii_uppercase(),\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpxduue2hd.rs:7:9\n  |\n7 |         'A' .. 'Z' => c.to_ascii_lowercase(),\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0658`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars()\n        .map(|c| match c {\n      \
    \      c if c.is_lowercase() => c.to_uppercase(),\n            c if c.is_uppercase()\
    \ => c.to_lowercase(),\n            _ => c,\n        })\n        .collect()\n\
    }\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0308]: `match` arms have incompatible types\n  --> /tmp/tmpxlp62dar.rs:8:38\n\
    \   |\n6  |           .map(|c| match c {\n   |  __________________-\n7  | |  \
    \           c if c.is_lowercase() => c.to_uppercase(),\n   | |               \
    \                       ---------------- this is found to be of type `ToUppercase`\n\
    8  | |             c if c.is_uppercase() => c.to_lowercase(),\n   | |        \
    \                              ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`,\
    \ found struct `ToLowercase`\n9  | |             _ => c,\n10 | |         })\n\
    \   | |_________- `match` arms have incompatible types\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'a' .. 'z'\
    \ => c as char + 'A' as char,\n        'A' .. 'Z' => c as char + 'a' as char,\n\
    \        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpek05t9pi.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpek05t9pi.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as char + 'a'\
    \ as char,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpek05t9pi.rs:6:33\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpek05t9pi.rs:7:33\n\
    \  |\n7 |         'A' .. 'Z' => c as char + 'a' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror: aborting due to 4 previous errors\n\nSome errors\
    \ have detailed explanations: E0369, E0658.\nFor more information about an error,\
    \ try `rustc --explain E0369`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A' .. 'Z'\
    \ => c as u8 | 0x20,\n        'a' .. 'z' => c as u8 | 0x21,\n        _ => c,\n\
    \    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpntxysi9q.rs:6:9\n\
    \  |\n6 |         'A' .. 'Z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpntxysi9q.rs:7:9\n  |\n7 |         'a' .. 'z' => c as u8 | 0x21,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpntxysi9q.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'A' .. 'Z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'a' .. 'z' => c as u8 | 0x21,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars()\n        .map(|c| match c {\n      \
    \      'a' .. 'z' => c as u8 | 32 as u8,\n            _ => c,\n        })\n  \
    \      .collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpw_v8im5s.rs:7:13\n\
    \  |\n7 |             'a' .. 'z' => c as u8 | 32 as u8,\n  |             ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpw_v8im5s.rs:8:18\n  |\n6 |           .map(|c| match c {\n  |  __________________-\n\
    7 | |             'a' .. 'z' => c as u8 | 32 as u8,\n  | |                   \
    \        ------------------ this is found to be of type `u8`\n8 | |          \
    \   _ => c,\n  | |                  ^ expected `u8`, found `char`\n9 | |     \
    \    })\n  | |_________- `match` arms have incompatible types\n\nerror: aborting\
    \ due to 2 previous errors\n\nSome errors have detailed explanations: E0308, E0658.\n\
    For more information about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars()\n        .map(|c| match c {\n      \
    \      'a' .. 'z' => c as char + 'A' as char,\n            'A' .. 'Z' => c as\
    \ char + 'a' as char,\n            _ => c,\n        })\n        .collect()\n}\n\
    \nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpwzahvjb3.rs:7:13\n\
    \  |\n7 |             'a' .. 'z' => c as char + 'A' as char,\n  |            \
    \ ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpwzahvjb3.rs:8:13\n  |\n8 |             'A' .. 'Z' => c as char +\
    \ 'a' as char,\n  |             ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpwzahvjb3.rs:7:37\n\
    \  |\n7 |             'a' .. 'z' => c as char + 'A' as char,\n  |            \
    \               --------- ^ ----------- char\n  |                           |\n\
    \  |                           char\n\nerror[E0369]: cannot add `char` to `char`\n\
    \ --> /tmp/tmpwzahvjb3.rs:8:37\n  |\n8 |             'A' .. 'Z' => c as char +\
    \ 'a' as char,\n  |                           --------- ^ ----------- char\n \
    \ |                           |\n  |                           char\n\nerror:\
    \ aborting due to 4 previous errors\n\nSome errors have detailed explanations:\
    \ E0369, E0658.\nFor more information about an error, try `rustc --explain E0369`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A'..='Z'\
    \ => (c as u8 - 'A' as u8 + 'a' as u8) as char,\n        'a'..='z' => (c as u8\
    \ - 'a' as u8 + 'A' as u8) as char,\n        _ => c,\n    }).collect()\n}\n\n\
    fn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'a' .. 'z'\
    \ => c.to_ascii_uppercase(),\n        'A' .. 'Z' => c.to_ascii_lowercase(),\n\
    \        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpe3ca8e1e.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c.to_ascii_uppercase(),\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpe3ca8e1e.rs:7:9\n  |\n7 |         'A' .. 'Z' => c.to_ascii_lowercase(),\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0658`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'a' .. 'z'\
    \ => c.to_ascii_uppercase(),\n        'A' .. 'Z' => c.to_ascii_lowercase(),\n\
    \        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpg_h1_2yu.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c.to_ascii_uppercase(),\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpg_h1_2yu.rs:7:9\n  |\n7 |         'A' .. 'Z' => c.to_ascii_lowercase(),\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0658`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars()\n        .map(|c| match c {\n      \
    \      'a' .. 'z' => c as char + 'A' as char,\n            'A' .. 'Z' => c as\
    \ char + 'a' as char,\n            _ => c,\n        })\n        .collect()\n}\n\
    \nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmp1b17m6dl.rs:7:13\n\
    \  |\n7 |             'a' .. 'z' => c as char + 'A' as char,\n  |            \
    \ ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmp1b17m6dl.rs:8:13\n  |\n8 |             'A' .. 'Z' => c as char +\
    \ 'a' as char,\n  |             ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmp1b17m6dl.rs:7:37\n\
    \  |\n7 |             'a' .. 'z' => c as char + 'A' as char,\n  |            \
    \               --------- ^ ----------- char\n  |                           |\n\
    \  |                           char\n\nerror[E0369]: cannot add `char` to `char`\n\
    \ --> /tmp/tmp1b17m6dl.rs:8:37\n  |\n8 |             'A' .. 'Z' => c as char +\
    \ 'a' as char,\n  |                           --------- ^ ----------- char\n \
    \ |                           |\n  |                           char\n\nerror:\
    \ aborting due to 4 previous errors\n\nSome errors have detailed explanations:\
    \ E0369, E0658.\nFor more information about an error, try `rustc --explain E0369`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'a' .. 'z'\
    \ => c as u8 | 0x20,\n        'A' .. 'Z' => c as u8 | 0x20,\n        _ => c,\n\
    \    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmps60cu4jo.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmps60cu4jo.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmps60cu4jo.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'A' .. 'Z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars()\n        .map(|c| match c {\n      \
    \      'a' .. 'z' => c as u8 | 32 as u8,\n            'A' .. 'Z' => c as u8 |\
    \ 65 as u8,\n            _ => c,\n        })\n        .collect()\n}\n\nfn main()\
    \ {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpa1l8ns30.rs:7:13\n\
    \  |\n7 |             'a' .. 'z' => c as u8 | 32 as u8,\n  |             ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpa1l8ns30.rs:8:13\n  |\n8 |             'A' .. 'Z' => c as u8 | 65\
    \ as u8,\n  |             ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \  --> /tmp/tmpa1l8ns30.rs:9:18\n   |\n6  |           .map(|c| match c {\n   |\
    \  __________________-\n7  | |             'a' .. 'z' => c as u8 | 32 as u8,\n\
    \   | |                           ------------------ this is found to be of type\
    \ `u8`\n8  | |             'A' .. 'Z' => c as u8 | 65 as u8,\n   | |         \
    \                  ------------------ this is found to be of type `u8`\n9  | |\
    \             _ => c,\n   | |                  ^ expected `u8`, found `char`\n\
    10 | |         })\n   | |_________- `match` arms have incompatible types\n\nerror:\
    \ aborting due to 3 previous errors\n\nSome errors have detailed explanations:\
    \ E0308, E0658.\nFor more information about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A'..='Z'\
    \ => c.to_ascii_uppercase(),\n        'a'..='z' => c.to_ascii_lowercase(),\n \
    \       _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Hello!\"`,\n right: `\"hELLO!\"`', /tmp/tmp3f1qcy0r.rs:15:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A' .. 'Z'\
    \ => c as u8 | 0x20,\n        'a' .. 'z' => c as u8 | 0x20,\n        _ => c,\n\
    \    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpm9z0wo99.rs:6:9\n\
    \  |\n6 |         'A' .. 'Z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpm9z0wo99.rs:7:9\n  |\n7 |         'a' .. 'z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpm9z0wo99.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'A' .. 'Z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'a' .. 'z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'a' .. 'z'\
    \ => c.to_ascii_uppercase(),\n        'A' .. 'Z' => c.to_ascii_lowercase(),\n\
    \        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpz4ox9m0b.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c.to_ascii_uppercase(),\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpz4ox9m0b.rs:7:9\n  |\n7 |         'A' .. 'Z' => c.to_ascii_lowercase(),\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0658`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars()\n        .map(|c| match c {\n      \
    \      'a' .. 'z' => c as u8 | 32 as u8,\n            'A' .. 'Z' => c as u8 |\
    \ 32 as u8,\n            _ => c,\n        })\n        .collect()\n}\n\nfn main()\
    \ {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpf8x6wqhz.rs:7:13\n\
    \  |\n7 |             'a' .. 'z' => c as u8 | 32 as u8,\n  |             ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpf8x6wqhz.rs:8:13\n  |\n8 |             'A' .. 'Z' => c as u8 | 32\
    \ as u8,\n  |             ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \  --> /tmp/tmpf8x6wqhz.rs:9:18\n   |\n6  |           .map(|c| match c {\n   |\
    \  __________________-\n7  | |             'a' .. 'z' => c as u8 | 32 as u8,\n\
    \   | |                           ------------------ this is found to be of type\
    \ `u8`\n8  | |             'A' .. 'Z' => c as u8 | 32 as u8,\n   | |         \
    \                  ------------------ this is found to be of type `u8`\n9  | |\
    \             _ => c,\n   | |                  ^ expected `u8`, found `char`\n\
    10 | |         })\n   | |_________- `match` arms have incompatible types\n\nerror:\
    \ aborting due to 3 previous errors\n\nSome errors have detailed explanations:\
    \ E0308, E0658.\nFor more information about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars()\n        .map(|c| match c {\n      \
    \      c if c.is_lowercase() => c.to_uppercase(),\n            c if c.is_uppercase()\
    \ => c.to_lowercase(),\n            _ => c,\n        })\n        .collect()\n\
    }\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0308]: `match` arms have incompatible types\n  --> /tmp/tmpcl1xxvkh.rs:8:38\n\
    \   |\n6  |           .map(|c| match c {\n   |  __________________-\n7  | |  \
    \           c if c.is_lowercase() => c.to_uppercase(),\n   | |               \
    \                       ---------------- this is found to be of type `ToUppercase`\n\
    8  | |             c if c.is_uppercase() => c.to_lowercase(),\n   | |        \
    \                              ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`,\
    \ found struct `ToLowercase`\n9  | |             _ => c,\n10 | |         })\n\
    \   | |_________- `match` arms have incompatible types\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars()\n        .map(|c| match c {\n      \
    \      c if c.is_lowercase() => c.to_uppercase(),\n            c if c.is_uppercase()\
    \ => c.to_lowercase(),\n            _ => c,\n        })\n        .collect()\n\
    }\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0308]: `match` arms have incompatible types\n  --> /tmp/tmpj50qnuvj.rs:8:38\n\
    \   |\n6  |           .map(|c| match c {\n   |  __________________-\n7  | |  \
    \           c if c.is_lowercase() => c.to_uppercase(),\n   | |               \
    \                       ---------------- this is found to be of type `ToUppercase`\n\
    8  | |             c if c.is_uppercase() => c.to_lowercase(),\n   | |        \
    \                              ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`,\
    \ found struct `ToLowercase`\n9  | |             _ => c,\n10 | |         })\n\
    \   | |_________- `match` arms have incompatible types\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A'..='Z'\
    \ => c as char + 'a' - 'A' as char,\n        'a'..='z' => c as char + 'A' - 'a'\
    \ as char,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0369]: cannot add `char` to `char`\n --> /tmp/tmpbh5jlpyj.rs:6:32\n\
    \  |\n6 |         'A'..='Z' => c as char + 'a' - 'A' as char,\n  |           \
    \           --------- ^ --- char\n  |                      |\n  |            \
    \          char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpbh5jlpyj.rs:7:32\n\
    \  |\n7 |         'a'..='z' => c as char + 'A' - 'a' as char,\n  |           \
    \           --------- ^ --- char\n  |                      |\n  |            \
    \          char\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0369`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A'..='Z'\
    \ => (c as u8 + 'a' as u8) as char,\n        'a'..='z' => (c as u8 + 'A' as u8)\
    \ as char,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"\xA9\xA6\\u{ad}\\u{ad}\xB0!\"`,\n right: `\"hELLO!\"`', /tmp/tmpb5lfc5an.rs:15:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'a' .. 'z'\
    \ => c as u8 | 32 as u8,\n        'A' .. 'Z' => c as u8 | 32 as u8,\n        _\
    \ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpnbfwtbtz.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | 32 as u8,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpnbfwtbtz.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | 32 as\
    \ u8,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpnbfwtbtz.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ 32 as u8,\n  | |                       ------------------ this is found to be\
    \ of type `u8`\n7 | |         'A' .. 'Z' => c as u8 | 32 as u8,\n  | |       \
    \                ------------------ this is found to be of type `u8`\n8 | |  \
    \       _ => c,\n  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n\
    \  | |_____- `match` arms have incompatible types\n\nerror: aborting due to 3\
    \ previous errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor\
    \ more information about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A'..='Z'\
    \ => c as char + 'a' - 'A' as char,\n        'a'..='z' => (c as char + 'A' - 'a')\
    \ as char,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0369]: cannot add `char` to `char`\n --> /tmp/tmp72k087os.rs:6:32\n\
    \  |\n6 |         'A'..='Z' => c as char + 'a' - 'A' as char,\n  |           \
    \           --------- ^ --- char\n  |                      |\n  |            \
    \          char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmp72k087os.rs:7:33\n\
    \  |\n7 |         'a'..='z' => (c as char + 'A' - 'a') as char,\n  |         \
    \              --------- ^ --- char\n  |                       |\n  |        \
    \               char\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0369`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars()\n        .map(|c| match c {\n      \
    \      'a' .. 'z' => c as char + 'A' as char,\n            'A' .. 'Z' => c as\
    \ char + 'a' as char,\n            _ => c,\n        })\n        .collect()\n}\n\
    \nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpwus15s2t.rs:7:13\n\
    \  |\n7 |             'a' .. 'z' => c as char + 'A' as char,\n  |            \
    \ ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpwus15s2t.rs:8:13\n  |\n8 |             'A' .. 'Z' => c as char +\
    \ 'a' as char,\n  |             ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpwus15s2t.rs:7:37\n\
    \  |\n7 |             'a' .. 'z' => c as char + 'A' as char,\n  |            \
    \               --------- ^ ----------- char\n  |                           |\n\
    \  |                           char\n\nerror[E0369]: cannot add `char` to `char`\n\
    \ --> /tmp/tmpwus15s2t.rs:8:37\n  |\n8 |             'A' .. 'Z' => c as char +\
    \ 'a' as char,\n  |                           --------- ^ ----------- char\n \
    \ |                           |\n  |                           char\n\nerror:\
    \ aborting due to 4 previous errors\n\nSome errors have detailed explanations:\
    \ E0369, E0658.\nFor more information about an error, try `rustc --explain E0369`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'a' .. 'z'\
    \ => c as u8 | 0x20,\n        'A' .. 'Z' => c as u8 | 0x20,\n        _ => c,\n\
    \    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmp0ziy_tj_.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmp0ziy_tj_.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmp0ziy_tj_.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'A' .. 'Z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A' .. 'Z'\
    \ => c as u8 | 0x20,\n        'a' .. 'z' => c as u8 | 0x20,\n        _ => c,\n\
    \    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpam481kaj.rs:6:9\n\
    \  |\n6 |         'A' .. 'Z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpam481kaj.rs:7:9\n  |\n7 |         'a' .. 'z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpam481kaj.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'A' .. 'Z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'a' .. 'z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars()\n        .map(|c| match c {\n      \
    \      c if c.is_lowercase() => c.to_uppercase(),\n            c if c.is_uppercase()\
    \ => c.to_lowercase(),\n            _ => c,\n        })\n        .collect()\n\
    }\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0308]: `match` arms have incompatible types\n  --> /tmp/tmp3gf6qwe5.rs:8:38\n\
    \   |\n6  |           .map(|c| match c {\n   |  __________________-\n7  | |  \
    \           c if c.is_lowercase() => c.to_uppercase(),\n   | |               \
    \                       ---------------- this is found to be of type `ToUppercase`\n\
    8  | |             c if c.is_uppercase() => c.to_lowercase(),\n   | |        \
    \                              ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`,\
    \ found struct `ToLowercase`\n9  | |             _ => c,\n10 | |         })\n\
    \   | |_________- `match` arms have incompatible types\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A'..='Z'\
    \ => c as u8 | 0x20,\n        'a'..='z' => c as u8 | 0x20,\n        _ => c,\n\
    \    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0308]: `match` arms have incompatible types\n --> /tmp/tmpjwiw9rcz.rs:8:14\n\
    \  |\n5 |       string.chars().map(|c| match c {\n  |  ____________________________-\n\
    6 | |         'A'..='Z' => c as u8 | 0x20,\n  | |                      --------------\
    \ this is found to be of type `u8`\n7 | |         'a'..='z' => c as u8 | 0x20,\n\
    \  | |                      -------------- this is found to be of type `u8`\n\
    8 | |         _ => c,\n  | |              ^ expected `u8`, found `char`\n9 | |\
    \     }).collect()\n  | |_____- `match` arms have incompatible types\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars()\n        .map(|c| match c {\n      \
    \      c if c.is_lowercase() => c.to_uppercase(),\n            c if c.is_uppercase()\
    \ => c.to_lowercase(),\n            _ => c,\n        })\n        .collect()\n\
    }\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0308]: `match` arms have incompatible types\n  --> /tmp/tmpvnp7e36l.rs:8:38\n\
    \   |\n6  |           .map(|c| match c {\n   |  __________________-\n7  | |  \
    \           c if c.is_lowercase() => c.to_uppercase(),\n   | |               \
    \                       ---------------- this is found to be of type `ToUppercase`\n\
    8  | |             c if c.is_uppercase() => c.to_lowercase(),\n   | |        \
    \                              ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`,\
    \ found struct `ToLowercase`\n9  | |             _ => c,\n10 | |         })\n\
    \   | |_________- `match` arms have incompatible types\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A' .. 'Z'\
    \ => c as u8 | 0x20,\n        'a' .. 'z' => c as u8 | 0x20,\n        _ => c,\n\
    \    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpkzvr5402.rs:6:9\n\
    \  |\n6 |         'A' .. 'Z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpkzvr5402.rs:7:9\n  |\n7 |         'a' .. 'z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpkzvr5402.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'A' .. 'Z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'a' .. 'z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars()\n        .map(|c| match c {\n      \
    \      c if c.is_lowercase() => c.to_uppercase(),\n            c if c.is_uppercase()\
    \ => c.to_lowercase(),\n            _ => c,\n        })\n        .collect()\n\
    }\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0308]: `match` arms have incompatible types\n  --> /tmp/tmpxy9a98sk.rs:8:38\n\
    \   |\n6  |           .map(|c| match c {\n   |  __________________-\n7  | |  \
    \           c if c.is_lowercase() => c.to_uppercase(),\n   | |               \
    \                       ---------------- this is found to be of type `ToUppercase`\n\
    8  | |             c if c.is_uppercase() => c.to_lowercase(),\n   | |        \
    \                              ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`,\
    \ found struct `ToLowercase`\n9  | |             _ => c,\n10 | |         })\n\
    \   | |_________- `match` arms have incompatible types\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars()\n        .map(|c| match c {\n      \
    \      'a' .. 'z' => c as u8 | 0x20,\n            'A' .. 'Z' => c as u8 | 0x20,\n\
    \            _ => c,\n        })\n        .collect()\n}\n\nfn main() {\n    let\
    \ candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\
    \"));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpzmaiq7ia.rs:7:13\n\
    \  |\n7 |             'a' .. 'z' => c as u8 | 0x20,\n  |             ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpzmaiq7ia.rs:8:13\n  |\n8 |             'A' .. 'Z' => c as u8 | 0x20,\n\
    \  |             ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \  --> /tmp/tmpzmaiq7ia.rs:9:18\n   |\n6  |           .map(|c| match c {\n   |\
    \  __________________-\n7  | |             'a' .. 'z' => c as u8 | 0x20,\n   |\
    \ |                           -------------- this is found to be of type `u8`\n\
    8  | |             'A' .. 'Z' => c as u8 | 0x20,\n   | |                     \
    \      -------------- this is found to be of type `u8`\n9  | |             _ =>\
    \ c,\n   | |                  ^ expected `u8`, found `char`\n10 | |         })\n\
    \   | |_________- `match` arms have incompatible types\n\nerror: aborting due\
    \ to 3 previous errors\n\nSome errors have detailed explanations: E0308, E0658.\n\
    For more information about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars()\n        .map(|c| match c {\n      \
    \      c if c.is_lowercase() => c.to_uppercase(),\n            c if c.is_uppercase()\
    \ => c.to_lowercase(),\n            _ => c,\n        })\n        .collect()\n\
    }\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0308]: `match` arms have incompatible types\n  --> /tmp/tmpzuastps1.rs:8:38\n\
    \   |\n6  |           .map(|c| match c {\n   |  __________________-\n7  | |  \
    \           c if c.is_lowercase() => c.to_uppercase(),\n   | |               \
    \                       ---------------- this is found to be of type `ToUppercase`\n\
    8  | |             c if c.is_uppercase() => c.to_lowercase(),\n   | |        \
    \                              ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`,\
    \ found struct `ToLowercase`\n9  | |             _ => c,\n10 | |         })\n\
    \   | |_________- `match` arms have incompatible types\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A' .. 'Z'\
    \ => c as u8 | 0x20,\n        'a' .. 'z' => c as u8 | 0x21,\n        _ => c,\n\
    \    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpybyqwkae.rs:6:9\n\
    \  |\n6 |         'A' .. 'Z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpybyqwkae.rs:7:9\n  |\n7 |         'a' .. 'z' => c as u8 | 0x21,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpybyqwkae.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'A' .. 'Z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'a' .. 'z' => c as u8 | 0x21,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A'..='Z'\
    \ => c.to_ascii_uppercase(),\n        'a'..='z' => c.to_ascii_lowercase(),\n \
    \       _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Hello!\"`,\n right: `\"hELLO!\"`', /tmp/tmpqrmrst5t.rs:15:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars()\n        .map(|c| match c {\n      \
    \      c if c.is_lowercase() => c.to_uppercase(),\n            c if c.is_uppercase()\
    \ => c.to_lowercase(),\n            _ => c,\n        })\n        .collect()\n\
    }\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0308]: `match` arms have incompatible types\n  --> /tmp/tmpgxbux7hp.rs:8:38\n\
    \   |\n6  |           .map(|c| match c {\n   |  __________________-\n7  | |  \
    \           c if c.is_lowercase() => c.to_uppercase(),\n   | |               \
    \                       ---------------- this is found to be of type `ToUppercase`\n\
    8  | |             c if c.is_uppercase() => c.to_lowercase(),\n   | |        \
    \                              ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`,\
    \ found struct `ToLowercase`\n9  | |             _ => c,\n10 | |         })\n\
    \   | |_________- `match` arms have incompatible types\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars()\n        .map(|c| match c {\n      \
    \      'a' .. 'z' => c as char + 'A' as char,\n            'A' .. 'Z' => c as\
    \ char + 'a' as char,\n            _ => c,\n        })\n        .collect()\n}\n\
    \nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmprrub67z4.rs:7:13\n\
    \  |\n7 |             'a' .. 'z' => c as char + 'A' as char,\n  |            \
    \ ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmprrub67z4.rs:8:13\n  |\n8 |             'A' .. 'Z' => c as char +\
    \ 'a' as char,\n  |             ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmprrub67z4.rs:7:37\n\
    \  |\n7 |             'a' .. 'z' => c as char + 'A' as char,\n  |            \
    \               --------- ^ ----------- char\n  |                           |\n\
    \  |                           char\n\nerror[E0369]: cannot add `char` to `char`\n\
    \ --> /tmp/tmprrub67z4.rs:8:37\n  |\n8 |             'A' .. 'Z' => c as char +\
    \ 'a' as char,\n  |                           --------- ^ ----------- char\n \
    \ |                           |\n  |                           char\n\nerror:\
    \ aborting due to 4 previous errors\n\nSome errors have detailed explanations:\
    \ E0369, E0658.\nFor more information about an error, try `rustc --explain E0369`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars()\n        .map(|c| match c {\n      \
    \      'a' .. 'z' => c as char + 'A' as char,\n            'A' .. 'Z' => c as\
    \ char + 'a' as char,\n            _ => c,\n        })\n        .collect()\n}\n\
    \nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpr04nc1fu.rs:7:13\n\
    \  |\n7 |             'a' .. 'z' => c as char + 'A' as char,\n  |            \
    \ ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpr04nc1fu.rs:8:13\n  |\n8 |             'A' .. 'Z' => c as char +\
    \ 'a' as char,\n  |             ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpr04nc1fu.rs:7:37\n\
    \  |\n7 |             'a' .. 'z' => c as char + 'A' as char,\n  |            \
    \               --------- ^ ----------- char\n  |                           |\n\
    \  |                           char\n\nerror[E0369]: cannot add `char` to `char`\n\
    \ --> /tmp/tmpr04nc1fu.rs:8:37\n  |\n8 |             'A' .. 'Z' => c as char +\
    \ 'a' as char,\n  |                           --------- ^ ----------- char\n \
    \ |                           |\n  |                           char\n\nerror:\
    \ aborting due to 4 previous errors\n\nSome errors have detailed explanations:\
    \ E0369, E0658.\nFor more information about an error, try `rustc --explain E0369`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars()\n        .map(|c| match c {\n      \
    \      'a' .. 'z' => c as char + 'A' as char,\n            'A' .. 'Z' => c as\
    \ char + 'a' as char,\n            _ => c,\n        })\n        .collect()\n}\n\
    \nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpefkr45am.rs:7:13\n\
    \  |\n7 |             'a' .. 'z' => c as char + 'A' as char,\n  |            \
    \ ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpefkr45am.rs:8:13\n  |\n8 |             'A' .. 'Z' => c as char +\
    \ 'a' as char,\n  |             ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpefkr45am.rs:7:37\n\
    \  |\n7 |             'a' .. 'z' => c as char + 'A' as char,\n  |            \
    \               --------- ^ ----------- char\n  |                           |\n\
    \  |                           char\n\nerror[E0369]: cannot add `char` to `char`\n\
    \ --> /tmp/tmpefkr45am.rs:8:37\n  |\n8 |             'A' .. 'Z' => c as char +\
    \ 'a' as char,\n  |                           --------- ^ ----------- char\n \
    \ |                           |\n  |                           char\n\nerror:\
    \ aborting due to 4 previous errors\n\nSome errors have detailed explanations:\
    \ E0369, E0658.\nFor more information about an error, try `rustc --explain E0369`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars()\n        .map(|c| match c {\n      \
    \      c if c.is_lowercase() => c.to_uppercase(),\n            c if c.is_uppercase()\
    \ => c.to_lowercase(),\n            _ => c,\n        })\n        .collect()\n\
    }\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0308]: `match` arms have incompatible types\n  --> /tmp/tmpz2sh3fuw.rs:8:38\n\
    \   |\n6  |           .map(|c| match c {\n   |  __________________-\n7  | |  \
    \           c if c.is_lowercase() => c.to_uppercase(),\n   | |               \
    \                       ---------------- this is found to be of type `ToUppercase`\n\
    8  | |             c if c.is_uppercase() => c.to_lowercase(),\n   | |        \
    \                              ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`,\
    \ found struct `ToLowercase`\n9  | |             _ => c,\n10 | |         })\n\
    \   | |_________- `match` arms have incompatible types\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars()\n        .map(|c| match c {\n      \
    \      'a' .. 'z' => c as char,\n            'A' .. 'Z' => c as char,\n      \
    \      _ => c,\n        })\n        .collect::<String>()\n}\n\nfn main() {\n \
    \   let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\")),\
    \ String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"\
    hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent delights have\
    \ violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    ));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpcd0jekjz.rs:7:13\n\
    \  |\n7 |             'a' .. 'z' => c as char,\n  |             ^^^^^^^^^^\n \
    \ |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpcd0jekjz.rs:8:13\n  |\n8 |             'A' .. 'Z' => c as char,\n\
    \  |             ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0658`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars()\n        .map(|c| match c {\n      \
    \      'a' .. 'z' => c as u8 | 0x20,\n            'A' .. 'Z' => c as u8 | 0x20,\n\
    \            _ => c,\n        })\n        .collect::<String>()\n}\n\nfn main()\
    \ {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpoozd1a6y.rs:7:13\n\
    \  |\n7 |             'a' .. 'z' => c as u8 | 0x20,\n  |             ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpoozd1a6y.rs:8:13\n  |\n8 |             'A' .. 'Z' => c as u8 | 0x20,\n\
    \  |             ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \  --> /tmp/tmpoozd1a6y.rs:9:18\n   |\n6  |           .map(|c| match c {\n   |\
    \  __________________-\n7  | |             'a' .. 'z' => c as u8 | 0x20,\n   |\
    \ |                           -------------- this is found to be of type `u8`\n\
    8  | |             'A' .. 'Z' => c as u8 | 0x20,\n   | |                     \
    \      -------------- this is found to be of type `u8`\n9  | |             _ =>\
    \ c,\n   | |                  ^ expected `u8`, found `char`\n10 | |         })\n\
    \   | |_________- `match` arms have incompatible types\n\nerror: aborting due\
    \ to 3 previous errors\n\nSome errors have detailed explanations: E0308, E0658.\n\
    For more information about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A' .. 'Z'\
    \ => c as u8 | 0x20,\n        'a' .. 'z' => c as u8 | 0x21,\n        _ => c,\n\
    \    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpzzm0ct0l.rs:6:9\n\
    \  |\n6 |         'A' .. 'Z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpzzm0ct0l.rs:7:9\n  |\n7 |         'a' .. 'z' => c as u8 | 0x21,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpzzm0ct0l.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'A' .. 'Z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'a' .. 'z' => c as u8 | 0x21,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A' .. 'Z'\
    \ => c as u8 | 0x20,\n        'a' .. 'z' => c as u8 | 0x20,\n        _ => c,\n\
    \    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmp82vtl3q7.rs:6:9\n\
    \  |\n6 |         'A' .. 'Z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmp82vtl3q7.rs:7:9\n  |\n7 |         'a' .. 'z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmp82vtl3q7.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'A' .. 'Z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'a' .. 'z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A'..='Z'\
    \ => c as u8 | 0x20,\n        'a'..='z' => c as u8 | 0x20,\n        _ => c,\n\
    \    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0308]: `match` arms have incompatible types\n --> /tmp/tmp_wg_yrny.rs:8:14\n\
    \  |\n5 |       string.chars().map(|c| match c {\n  |  ____________________________-\n\
    6 | |         'A'..='Z' => c as u8 | 0x20,\n  | |                      --------------\
    \ this is found to be of type `u8`\n7 | |         'a'..='z' => c as u8 | 0x20,\n\
    \  | |                      -------------- this is found to be of type `u8`\n\
    8 | |         _ => c,\n  | |              ^ expected `u8`, found `char`\n9 | |\
    \     }).collect()\n  | |_____- `match` arms have incompatible types\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'a' .. 'z'\
    \ => c as u8 | 32 as u8,\n        'A' .. 'Z' => c as u8 | 32 as u8,\n        _\
    \ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpxj31qm8r.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | 32 as u8,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpxj31qm8r.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | 32 as\
    \ u8,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpxj31qm8r.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ 32 as u8,\n  | |                       ------------------ this is found to be\
    \ of type `u8`\n7 | |         'A' .. 'Z' => c as u8 | 32 as u8,\n  | |       \
    \                ------------------ this is found to be of type `u8`\n8 | |  \
    \       _ => c,\n  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n\
    \  | |_____- `match` arms have incompatible types\n\nerror: aborting due to 3\
    \ previous errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor\
    \ more information about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A'..='Z'\
    \ => c as char,\n        'a'..='z' => c as char,\n        _ => c,\n    }).collect()\n\
    }\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Hello!\"`,\n right: `\"hELLO!\"`', /tmp/tmpr3c_kcj8.rs:15:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A' .. 'Z'\
    \ => c as char,\n        'a' .. 'z' => c as char,\n        _ => c,\n    }).collect::<String>().to_lowercase()\n\
    }\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpb_vci446.rs:6:9\n\
    \  |\n6 |         'A' .. 'Z' => c as char,\n  |         ^^^^^^^^^^\n  |\n  = note:\
    \ see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for more information\n\
    \nerror[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpb_vci446.rs:7:9\n\
    \  |\n7 |         'a' .. 'z' => c as char,\n  |         ^^^^^^^^^^\n  |\n  = note:\
    \ see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for more information\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0658`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'a' .. 'z'\
    \ => c as u8 | 0x20,\n        'A' .. 'Z' => c as u8 | 0x20,\n        _ => c,\n\
    \    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpci3uo0c0.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpci3uo0c0.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpci3uo0c0.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'A' .. 'Z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A'..='Z'\
    \ => c as u8 | 0x20,\n        'a'..='z' => c as u8 | 0x20,\n        _ => c,\n\
    \    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0308]: `match` arms have incompatible types\n --> /tmp/tmpmjxmua1l.rs:8:14\n\
    \  |\n5 |       string.chars().map(|c| match c {\n  |  ____________________________-\n\
    6 | |         'A'..='Z' => c as u8 | 0x20,\n  | |                      --------------\
    \ this is found to be of type `u8`\n7 | |         'a'..='z' => c as u8 | 0x20,\n\
    \  | |                      -------------- this is found to be of type `u8`\n\
    8 | |         _ => c,\n  | |              ^ expected `u8`, found `char`\n9 | |\
    \     }).collect()\n  | |_____- `match` arms have incompatible types\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A' .. 'Z'\
    \ => c as u8 | 0x20,\n        'a' .. 'z' => c as u8 | 0x20,\n        _ => c,\n\
    \    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmp142s3sn6.rs:6:9\n\
    \  |\n6 |         'A' .. 'Z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmp142s3sn6.rs:7:9\n  |\n7 |         'a' .. 'z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmp142s3sn6.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'A' .. 'Z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'a' .. 'z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'a' .. 'z'\
    \ => c as u8 | 0x20,\n        'A' .. 'Z' => c as u8 | 0x20,\n        _ => c,\n\
    \    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpt0ylhpf6.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpt0ylhpf6.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpt0ylhpf6.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'A' .. 'Z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A'..='Z'\
    \ => c as char + 'a' - 'A' as char,\n        'a'..='z' => c as char + 'A' - 'a'\
    \ as char,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0369]: cannot add `char` to `char`\n --> /tmp/tmp7m33xcyf.rs:6:32\n\
    \  |\n6 |         'A'..='Z' => c as char + 'a' - 'A' as char,\n  |           \
    \           --------- ^ --- char\n  |                      |\n  |            \
    \          char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmp7m33xcyf.rs:7:32\n\
    \  |\n7 |         'a'..='z' => c as char + 'A' - 'a' as char,\n  |           \
    \           --------- ^ --- char\n  |                      |\n  |            \
    \          char\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0369`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars()\n        .map(|c| match c {\n      \
    \      c if c.is_lowercase() => c.to_uppercase(),\n            c if c.is_uppercase()\
    \ => c.to_lowercase(),\n            _ => c,\n        })\n        .collect()\n\
    }\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0308]: `match` arms have incompatible types\n  --> /tmp/tmpz6spk8r7.rs:8:38\n\
    \   |\n6  |           .map(|c| match c {\n   |  __________________-\n7  | |  \
    \           c if c.is_lowercase() => c.to_uppercase(),\n   | |               \
    \                       ---------------- this is found to be of type `ToUppercase`\n\
    8  | |             c if c.is_uppercase() => c.to_lowercase(),\n   | |        \
    \                              ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`,\
    \ found struct `ToLowercase`\n9  | |             _ => c,\n10 | |         })\n\
    \   | |_________- `match` arms have incompatible types\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars()\n        .map(|c| match c {\n      \
    \      'a' .. 'z' => c as char + 'A' as char,\n            'A' .. 'Z' => c as\
    \ char + 'a' as char,\n            _ => c,\n        })\n        .collect()\n}\n\
    \nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpkbrfev7_.rs:7:13\n\
    \  |\n7 |             'a' .. 'z' => c as char + 'A' as char,\n  |            \
    \ ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpkbrfev7_.rs:8:13\n  |\n8 |             'A' .. 'Z' => c as char +\
    \ 'a' as char,\n  |             ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpkbrfev7_.rs:7:37\n\
    \  |\n7 |             'a' .. 'z' => c as char + 'A' as char,\n  |            \
    \               --------- ^ ----------- char\n  |                           |\n\
    \  |                           char\n\nerror[E0369]: cannot add `char` to `char`\n\
    \ --> /tmp/tmpkbrfev7_.rs:8:37\n  |\n8 |             'A' .. 'Z' => c as char +\
    \ 'a' as char,\n  |                           --------- ^ ----------- char\n \
    \ |                           |\n  |                           char\n\nerror:\
    \ aborting due to 4 previous errors\n\nSome errors have detailed explanations:\
    \ E0369, E0658.\nFor more information about an error, try `rustc --explain E0369`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A' .. 'Z'\
    \ => c as u8 | 0x20,\n        'a' .. 'z' => c as u8 | 0x21,\n        _ => c,\n\
    \    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmp98v47c9s.rs:6:9\n\
    \  |\n6 |         'A' .. 'Z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmp98v47c9s.rs:7:9\n  |\n7 |         'a' .. 'z' => c as u8 | 0x21,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmp98v47c9s.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'A' .. 'Z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'a' .. 'z' => c as u8 | 0x21,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'a' .. 'z'\
    \ => c as u8 | 0x20,\n        'A' .. 'Z' => c as u8 | 0x20,\n        _ => c,\n\
    \    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpdae_pl_j.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpdae_pl_j.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpdae_pl_j.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'A' .. 'Z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars()\n        .map(|c| match c {\n      \
    \      'a' .. 'z' => c as char + 'A' as char,\n            'A' .. 'Z' => c as\
    \ char + 'a' as char,\n            _ => c,\n        })\n        .collect()\n}\n\
    \nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmplrs_jksh.rs:7:13\n\
    \  |\n7 |             'a' .. 'z' => c as char + 'A' as char,\n  |            \
    \ ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmplrs_jksh.rs:8:13\n  |\n8 |             'A' .. 'Z' => c as char +\
    \ 'a' as char,\n  |             ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmplrs_jksh.rs:7:37\n\
    \  |\n7 |             'a' .. 'z' => c as char + 'A' as char,\n  |            \
    \               --------- ^ ----------- char\n  |                           |\n\
    \  |                           char\n\nerror[E0369]: cannot add `char` to `char`\n\
    \ --> /tmp/tmplrs_jksh.rs:8:37\n  |\n8 |             'A' .. 'Z' => c as char +\
    \ 'a' as char,\n  |                           --------- ^ ----------- char\n \
    \ |                           |\n  |                           char\n\nerror:\
    \ aborting due to 4 previous errors\n\nSome errors have detailed explanations:\
    \ E0369, E0658.\nFor more information about an error, try `rustc --explain E0369`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A' .. 'Z'\
    \ => c as u8 | 0x20,\n        'a' .. 'z' => c as u8 | 0x21,\n        _ => c,\n\
    \    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpqefo6k2m.rs:6:9\n\
    \  |\n6 |         'A' .. 'Z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpqefo6k2m.rs:7:9\n  |\n7 |         'a' .. 'z' => c as u8 | 0x21,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpqefo6k2m.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'A' .. 'Z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'a' .. 'z' => c as u8 | 0x21,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A'..='Z'\
    \ => c as char + 'a' - 'A' as char,\n        'a'..='z' => c as char + 'A' - 'a'\
    \ as char,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0369]: cannot add `char` to `char`\n --> /tmp/tmptwqlgb_e.rs:6:32\n\
    \  |\n6 |         'A'..='Z' => c as char + 'a' - 'A' as char,\n  |           \
    \           --------- ^ --- char\n  |                      |\n  |            \
    \          char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmptwqlgb_e.rs:7:32\n\
    \  |\n7 |         'a'..='z' => c as char + 'A' - 'a' as char,\n  |           \
    \           --------- ^ --- char\n  |                      |\n  |            \
    \          char\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0369`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'a' .. 'z'\
    \ => c as char + 'A' as char,\n        'A' .. 'Z' => c as char + 'a' as char,\n\
    \        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmp1yvyt34f.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmp1yvyt34f.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as char + 'a'\
    \ as char,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmp1yvyt34f.rs:6:33\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmp1yvyt34f.rs:7:33\n\
    \  |\n7 |         'A' .. 'Z' => c as char + 'a' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror: aborting due to 4 previous errors\n\nSome errors\
    \ have detailed explanations: E0369, E0658.\nFor more information about an error,\
    \ try `rustc --explain E0369`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'a' .. 'z'\
    \ => c as u8 | 0x20,\n        'A' .. 'Z' => c as u8 | 0x20,\n        _ => c,\n\
    \    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpychno39u.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpychno39u.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpychno39u.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'A' .. 'Z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'a' .. 'z'\
    \ => c as char + 'A' as char,\n        'A' .. 'Z' => c as char + 'a' as char,\n\
    \        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpcvz693je.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpcvz693je.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as char + 'a'\
    \ as char,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpcvz693je.rs:6:33\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpcvz693je.rs:7:33\n\
    \  |\n7 |         'A' .. 'Z' => c as char + 'a' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror: aborting due to 4 previous errors\n\nSome errors\
    \ have detailed explanations: E0369, E0658.\nFor more information about an error,\
    \ try `rustc --explain E0369`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A' .. 'Z'\
    \ => c as u8 | 0x20,\n        'a' .. 'z' => c as u8 | 0x20,\n        _ => c,\n\
    \    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpussu6b53.rs:6:9\n\
    \  |\n6 |         'A' .. 'Z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpussu6b53.rs:7:9\n  |\n7 |         'a' .. 'z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpussu6b53.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'A' .. 'Z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'a' .. 'z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A'..='Z'\
    \ => c as u8 | 0x20,\n        'a'..='z' => c as u8 | 0x20,\n        _ => c,\n\
    \    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0308]: `match` arms have incompatible types\n --> /tmp/tmpq2omrw55.rs:8:14\n\
    \  |\n5 |       string.chars().map(|c| match c {\n  |  ____________________________-\n\
    6 | |         'A'..='Z' => c as u8 | 0x20,\n  | |                      --------------\
    \ this is found to be of type `u8`\n7 | |         'a'..='z' => c as u8 | 0x20,\n\
    \  | |                      -------------- this is found to be of type `u8`\n\
    8 | |         _ => c,\n  | |              ^ expected `u8`, found `char`\n9 | |\
    \     }).collect()\n  | |_____- `match` arms have incompatible types\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars()\n        .map(|c| match c {\n      \
    \      'a' .. 'z' => c as u8 | 0x20,\n            'A' .. 'Z' => c as u8 | 0x20,\n\
    \            _ => c,\n        })\n        .collect()\n}\n\nfn main() {\n    let\
    \ candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\
    \"));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpmjiart0z.rs:7:13\n\
    \  |\n7 |             'a' .. 'z' => c as u8 | 0x20,\n  |             ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpmjiart0z.rs:8:13\n  |\n8 |             'A' .. 'Z' => c as u8 | 0x20,\n\
    \  |             ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \  --> /tmp/tmpmjiart0z.rs:9:18\n   |\n6  |           .map(|c| match c {\n   |\
    \  __________________-\n7  | |             'a' .. 'z' => c as u8 | 0x20,\n   |\
    \ |                           -------------- this is found to be of type `u8`\n\
    8  | |             'A' .. 'Z' => c as u8 | 0x20,\n   | |                     \
    \      -------------- this is found to be of type `u8`\n9  | |             _ =>\
    \ c,\n   | |                  ^ expected `u8`, found `char`\n10 | |         })\n\
    \   | |_________- `match` arms have incompatible types\n\nerror: aborting due\
    \ to 3 previous errors\n\nSome errors have detailed explanations: E0308, E0658.\n\
    For more information about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars()\n        .map(|c| match c {\n      \
    \      c if c.is_lowercase() => c.to_uppercase(),\n            c if c.is_uppercase()\
    \ => c.to_lowercase(),\n            _ => c,\n        })\n        .collect()\n\
    }\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0308]: `match` arms have incompatible types\n  --> /tmp/tmpmlfwtkfc.rs:8:38\n\
    \   |\n6  |           .map(|c| match c {\n   |  __________________-\n7  | |  \
    \           c if c.is_lowercase() => c.to_uppercase(),\n   | |               \
    \                       ---------------- this is found to be of type `ToUppercase`\n\
    8  | |             c if c.is_uppercase() => c.to_lowercase(),\n   | |        \
    \                              ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`,\
    \ found struct `ToLowercase`\n9  | |             _ => c,\n10 | |         })\n\
    \   | |_________- `match` arms have incompatible types\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'a' .. 'z'\
    \ => c as u8 | 0x20,\n        'A' .. 'Z' => c as u8 | 0x20,\n        _ => c,\n\
    \    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpasdq93vm.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpasdq93vm.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpasdq93vm.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'A' .. 'Z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars()\n        .map(|c| match c {\n      \
    \      'a' .. 'z' => c as u8 | 0x20,\n            'A' .. 'Z' => c as u8 | 0x20,\n\
    \            _ => c,\n        })\n        .collect()\n}\n\nfn main() {\n    let\
    \ candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\
    \"));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpds_ljwdl.rs:7:13\n\
    \  |\n7 |             'a' .. 'z' => c as u8 | 0x20,\n  |             ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpds_ljwdl.rs:8:13\n  |\n8 |             'A' .. 'Z' => c as u8 | 0x20,\n\
    \  |             ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \  --> /tmp/tmpds_ljwdl.rs:9:18\n   |\n6  |           .map(|c| match c {\n   |\
    \  __________________-\n7  | |             'a' .. 'z' => c as u8 | 0x20,\n   |\
    \ |                           -------------- this is found to be of type `u8`\n\
    8  | |             'A' .. 'Z' => c as u8 | 0x20,\n   | |                     \
    \      -------------- this is found to be of type `u8`\n9  | |             _ =>\
    \ c,\n   | |                  ^ expected `u8`, found `char`\n10 | |         })\n\
    \   | |_________- `match` arms have incompatible types\n\nerror: aborting due\
    \ to 3 previous errors\n\nSome errors have detailed explanations: E0308, E0658.\n\
    For more information about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars()\n        .map(|c| match c {\n      \
    \      c if c.is_lowercase() => c.to_uppercase(),\n            c if c.is_uppercase()\
    \ => c.to_lowercase(),\n            _ => c,\n        })\n        .collect()\n\
    }\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0308]: `match` arms have incompatible types\n  --> /tmp/tmp8chosf4s.rs:8:38\n\
    \   |\n6  |           .map(|c| match c {\n   |  __________________-\n7  | |  \
    \           c if c.is_lowercase() => c.to_uppercase(),\n   | |               \
    \                       ---------------- this is found to be of type `ToUppercase`\n\
    8  | |             c if c.is_uppercase() => c.to_lowercase(),\n   | |        \
    \                              ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`,\
    \ found struct `ToLowercase`\n9  | |             _ => c,\n10 | |         })\n\
    \   | |_________- `match` arms have incompatible types\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars()\n        .map(|c| match c {\n      \
    \      'a' .. 'z' => c as char + 'A' as char,\n            'A' .. 'Z' => c as\
    \ char + 'a' as char,\n            _ => c,\n        })\n        .collect()\n}\n\
    \nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpbn65np0t.rs:7:13\n\
    \  |\n7 |             'a' .. 'z' => c as char + 'A' as char,\n  |            \
    \ ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpbn65np0t.rs:8:13\n  |\n8 |             'A' .. 'Z' => c as char +\
    \ 'a' as char,\n  |             ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpbn65np0t.rs:7:37\n\
    \  |\n7 |             'a' .. 'z' => c as char + 'A' as char,\n  |            \
    \               --------- ^ ----------- char\n  |                           |\n\
    \  |                           char\n\nerror[E0369]: cannot add `char` to `char`\n\
    \ --> /tmp/tmpbn65np0t.rs:8:37\n  |\n8 |             'A' .. 'Z' => c as char +\
    \ 'a' as char,\n  |                           --------- ^ ----------- char\n \
    \ |                           |\n  |                           char\n\nerror:\
    \ aborting due to 4 previous errors\n\nSome errors have detailed explanations:\
    \ E0369, E0658.\nFor more information about an error, try `rustc --explain E0369`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A'..='Z'\
    \ => c as char + 'a' - 'A' as char,\n        'a'..='z' => c as char + 'A' - 'a'\
    \ as char,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0369]: cannot add `char` to `char`\n --> /tmp/tmpy2odh2yd.rs:6:32\n\
    \  |\n6 |         'A'..='Z' => c as char + 'a' - 'A' as char,\n  |           \
    \           --------- ^ --- char\n  |                      |\n  |            \
    \          char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpy2odh2yd.rs:7:32\n\
    \  |\n7 |         'a'..='z' => c as char + 'A' - 'a' as char,\n  |           \
    \           --------- ^ --- char\n  |                      |\n  |            \
    \          char\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0369`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'a' .. 'z'\
    \ => c as u8 | 0x20,\n        'A' .. 'Z' => c as u8 | 0x20,\n        _ => c,\n\
    \    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmp_l7l4cv8.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmp_l7l4cv8.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmp_l7l4cv8.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'A' .. 'Z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A'..='Z'\
    \ => c as char + 'a' - 'A' as char,\n        'a'..='z' => c as char + 'A' - 'a'\
    \ as char,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0369]: cannot add `char` to `char`\n --> /tmp/tmpbk0teton.rs:6:32\n\
    \  |\n6 |         'A'..='Z' => c as char + 'a' - 'A' as char,\n  |           \
    \           --------- ^ --- char\n  |                      |\n  |            \
    \          char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpbk0teton.rs:7:32\n\
    \  |\n7 |         'a'..='z' => c as char + 'A' - 'a' as char,\n  |           \
    \           --------- ^ --- char\n  |                      |\n  |            \
    \          char\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0369`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A'..='Z'\
    \ => c as char + 'a' - 'A' as char,\n        'a'..='z' => c as char + 'A' - 'a'\
    \ as char,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0369]: cannot add `char` to `char`\n --> /tmp/tmpavg14_h1.rs:6:32\n\
    \  |\n6 |         'A'..='Z' => c as char + 'a' - 'A' as char,\n  |           \
    \           --------- ^ --- char\n  |                      |\n  |            \
    \          char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpavg14_h1.rs:7:32\n\
    \  |\n7 |         'a'..='z' => c as char + 'A' - 'a' as char,\n  |           \
    \           --------- ^ --- char\n  |                      |\n  |            \
    \          char\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0369`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A' .. 'Z'\
    \ => c as u8 | 0x20,\n        'a' .. 'z' => c as u8 | 0x20,\n        _ => c,\n\
    \    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmphja17m0l.rs:6:9\n\
    \  |\n6 |         'A' .. 'Z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmphja17m0l.rs:7:9\n  |\n7 |         'a' .. 'z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmphja17m0l.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'A' .. 'Z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'a' .. 'z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars()\n        .map(|c| match c {\n      \
    \      c if c.is_lowercase() => c.to_uppercase(),\n            c if c.is_uppercase()\
    \ => c.to_lowercase(),\n            _ => c,\n        })\n        .collect()\n\
    }\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0308]: `match` arms have incompatible types\n  --> /tmp/tmp1mc3ksbn.rs:8:38\n\
    \   |\n6  |           .map(|c| match c {\n   |  __________________-\n7  | |  \
    \           c if c.is_lowercase() => c.to_uppercase(),\n   | |               \
    \                       ---------------- this is found to be of type `ToUppercase`\n\
    8  | |             c if c.is_uppercase() => c.to_lowercase(),\n   | |        \
    \                              ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`,\
    \ found struct `ToLowercase`\n9  | |             _ => c,\n10 | |         })\n\
    \   | |_________- `match` arms have incompatible types\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'a' .. 'z'\
    \ => c as char + 'A' as char,\n        'A' .. 'Z' => c as char + 'a' as char,\n\
    \        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpanaaad6x.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpanaaad6x.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as char + 'a'\
    \ as char,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpanaaad6x.rs:6:33\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpanaaad6x.rs:7:33\n\
    \  |\n7 |         'A' .. 'Z' => c as char + 'a' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror: aborting due to 4 previous errors\n\nSome errors\
    \ have detailed explanations: E0369, E0658.\nFor more information about an error,\
    \ try `rustc --explain E0369`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A' .. 'Z'\
    \ => c.to_ascii_uppercase(),\n        'a' .. 'z' => c.to_ascii_lowercase(),\n\
    \        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpg2k7j17x.rs:6:9\n\
    \  |\n6 |         'A' .. 'Z' => c.to_ascii_uppercase(),\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpg2k7j17x.rs:7:9\n  |\n7 |         'a' .. 'z' => c.to_ascii_lowercase(),\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0658`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'a' .. 'z'\
    \ => c as char + 'A' as char,\n        'A' .. 'Z' => c as char + 'a' as char,\n\
    \        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmps9r01gcg.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmps9r01gcg.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as char + 'a'\
    \ as char,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmps9r01gcg.rs:6:33\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmps9r01gcg.rs:7:33\n\
    \  |\n7 |         'A' .. 'Z' => c as char + 'a' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror: aborting due to 4 previous errors\n\nSome errors\
    \ have detailed explanations: E0369, E0658.\nFor more information about an error,\
    \ try `rustc --explain E0369`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars()\n        .map(|c| match c {\n      \
    \      'a' .. 'z' => c as char + 'A' as char,\n            'A' .. 'Z' => c as\
    \ char + 'a' as char,\n            _ => c,\n        })\n        .collect()\n}\n\
    \nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpljz7b_9b.rs:7:13\n\
    \  |\n7 |             'a' .. 'z' => c as char + 'A' as char,\n  |            \
    \ ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpljz7b_9b.rs:8:13\n  |\n8 |             'A' .. 'Z' => c as char +\
    \ 'a' as char,\n  |             ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpljz7b_9b.rs:7:37\n\
    \  |\n7 |             'a' .. 'z' => c as char + 'A' as char,\n  |            \
    \               --------- ^ ----------- char\n  |                           |\n\
    \  |                           char\n\nerror[E0369]: cannot add `char` to `char`\n\
    \ --> /tmp/tmpljz7b_9b.rs:8:37\n  |\n8 |             'A' .. 'Z' => c as char +\
    \ 'a' as char,\n  |                           --------- ^ ----------- char\n \
    \ |                           |\n  |                           char\n\nerror:\
    \ aborting due to 4 previous errors\n\nSome errors have detailed explanations:\
    \ E0369, E0658.\nFor more information about an error, try `rustc --explain E0369`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars()\n        .map(|c| match c {\n      \
    \      c if c.is_lowercase() => c.to_uppercase(),\n            c if c.is_uppercase()\
    \ => c.to_lowercase(),\n            _ => c,\n        })\n        .collect()\n\
    }\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0308]: `match` arms have incompatible types\n  --> /tmp/tmp2243663v.rs:8:38\n\
    \   |\n6  |           .map(|c| match c {\n   |  __________________-\n7  | |  \
    \           c if c.is_lowercase() => c.to_uppercase(),\n   | |               \
    \                       ---------------- this is found to be of type `ToUppercase`\n\
    8  | |             c if c.is_uppercase() => c.to_lowercase(),\n   | |        \
    \                              ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`,\
    \ found struct `ToLowercase`\n9  | |             _ => c,\n10 | |         })\n\
    \   | |_________- `match` arms have incompatible types\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'a' .. 'z'\
    \ => c as u8 | 0x20,\n        'A' .. 'Z' => c as u8 | 0x20,\n        _ => c,\n\
    \    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpg6gazlo4.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpg6gazlo4.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpg6gazlo4.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'A' .. 'Z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'a' .. 'z'\
    \ => c as char + 'A' as char,\n        'A' .. 'Z' => c as char + 'a' as char,\n\
    \        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpez5e5vfm.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpez5e5vfm.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as char + 'a'\
    \ as char,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpez5e5vfm.rs:6:33\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpez5e5vfm.rs:7:33\n\
    \  |\n7 |         'A' .. 'Z' => c as char + 'a' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror: aborting due to 4 previous errors\n\nSome errors\
    \ have detailed explanations: E0369, E0658.\nFor more information about an error,\
    \ try `rustc --explain E0369`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'a' .. 'z'\
    \ => c as u8 | 0x20,\n        'A' .. 'Z' => c as u8 | 0x20,\n        _ => c,\n\
    \    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpl4m3apl5.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpl4m3apl5.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpl4m3apl5.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'A' .. 'Z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A' .. 'Z'\
    \ => c.to_ascii_uppercase(),\n        'a' .. 'z' => c.to_ascii_lowercase(),\n\
    \        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmprt65n2rp.rs:6:9\n\
    \  |\n6 |         'A' .. 'Z' => c.to_ascii_uppercase(),\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmprt65n2rp.rs:7:9\n  |\n7 |         'a' .. 'z' => c.to_ascii_lowercase(),\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0658`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A' .. 'Z'\
    \ => c as u8 | 0x20,\n        'a' .. 'z' => c as u8 | 0x21,\n        _ => c,\n\
    \    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpsl6f_189.rs:6:9\n\
    \  |\n6 |         'A' .. 'Z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpsl6f_189.rs:7:9\n  |\n7 |         'a' .. 'z' => c as u8 | 0x21,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpsl6f_189.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'A' .. 'Z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'a' .. 'z' => c as u8 | 0x21,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A' .. 'Z'\
    \ => c as u8 | 0x20,\n        'a' .. 'z' => c as u8 | 0x21,\n        _ => c,\n\
    \    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmph_632vjo.rs:6:9\n\
    \  |\n6 |         'A' .. 'Z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmph_632vjo.rs:7:9\n  |\n7 |         'a' .. 'z' => c as u8 | 0x21,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmph_632vjo.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'A' .. 'Z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'a' .. 'z' => c as u8 | 0x21,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'a' .. 'z'\
    \ => c as u8 | 0x20,\n        'A' .. 'Z' => c as u8 | 0x20,\n        _ => c,\n\
    \    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpj4pnnzsy.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpj4pnnzsy.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpj4pnnzsy.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'A' .. 'Z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'a' .. 'z'\
    \ => c as char,\n        'A' .. 'Z' => c as char,\n        _ => c,\n    }).collect::<String>().to_lowercase()\n\
    }\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpq235fl4a.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as char,\n  |         ^^^^^^^^^^\n  |\n  = note:\
    \ see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for more information\n\
    \nerror[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpq235fl4a.rs:7:9\n\
    \  |\n7 |         'A' .. 'Z' => c as char,\n  |         ^^^^^^^^^^\n  |\n  = note:\
    \ see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for more information\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0658`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'a' .. 'z'\
    \ => c as char + 'A' as char,\n        'A' .. 'Z' => c as char + 'a' as char,\n\
    \        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmphoop_g8d.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmphoop_g8d.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as char + 'a'\
    \ as char,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmphoop_g8d.rs:6:33\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmphoop_g8d.rs:7:33\n\
    \  |\n7 |         'A' .. 'Z' => c as char + 'a' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror: aborting due to 4 previous errors\n\nSome errors\
    \ have detailed explanations: E0369, E0658.\nFor more information about an error,\
    \ try `rustc --explain E0369`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A'..='Z'\
    \ => c as char + 'a' - 'A' as char,\n        'a'..='z' => c as char + 'A' - 'a'\
    \ as char,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0369]: cannot add `char` to `char`\n --> /tmp/tmp1ld__wfv.rs:6:32\n\
    \  |\n6 |         'A'..='Z' => c as char + 'a' - 'A' as char,\n  |           \
    \           --------- ^ --- char\n  |                      |\n  |            \
    \          char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmp1ld__wfv.rs:7:32\n\
    \  |\n7 |         'a'..='z' => c as char + 'A' - 'a' as char,\n  |           \
    \           --------- ^ --- char\n  |                      |\n  |            \
    \          char\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0369`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A'..='Z'\
    \ => c as char + 'a' - 'A' as char,\n        'a'..='z' => c as char + 'A' - 'a'\
    \ as char,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0369]: cannot add `char` to `char`\n --> /tmp/tmpwwgf5atq.rs:6:32\n\
    \  |\n6 |         'A'..='Z' => c as char + 'a' - 'A' as char,\n  |           \
    \           --------- ^ --- char\n  |                      |\n  |            \
    \          char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpwwgf5atq.rs:7:32\n\
    \  |\n7 |         'a'..='z' => c as char + 'A' - 'a' as char,\n  |           \
    \           --------- ^ --- char\n  |                      |\n  |            \
    \          char\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0369`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A' .. 'Z'\
    \ => c as u8 | 0x20,\n        'a' .. 'z' => c as u8 | 0x20,\n        _ => c,\n\
    \    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpp97deiq9.rs:6:9\n\
    \  |\n6 |         'A' .. 'Z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpp97deiq9.rs:7:9\n  |\n7 |         'a' .. 'z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpp97deiq9.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'A' .. 'Z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'a' .. 'z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A'..='Z'\
    \ => c.to_ascii_uppercase(),\n        'a'..='z' => c.to_ascii_lowercase(),\n \
    \       _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Hello!\"`,\n right: `\"hELLO!\"`', /tmp/tmpj3_vhdhx.rs:15:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A' .. 'Z'\
    \ => c.to_ascii_uppercase(),\n        'a' .. 'z' => c.to_ascii_lowercase(),\n\
    \        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpv62l44_j.rs:6:9\n\
    \  |\n6 |         'A' .. 'Z' => c.to_ascii_uppercase(),\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpv62l44_j.rs:7:9\n  |\n7 |         'a' .. 'z' => c.to_ascii_lowercase(),\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0658`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars()\n        .map(|c| match c {\n      \
    \      'a' .. 'z' => c as char,\n            'A' .. 'Z' => c as char,\n      \
    \      _ => c,\n        })\n        .collect::<String>()\n}\n\nfn main() {\n \
    \   let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\")),\
    \ String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"\
    hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent delights have\
    \ violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    ));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpofow6htx.rs:7:13\n\
    \  |\n7 |             'a' .. 'z' => c as char,\n  |             ^^^^^^^^^^\n \
    \ |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpofow6htx.rs:8:13\n  |\n8 |             'A' .. 'Z' => c as char,\n\
    \  |             ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0658`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'a' .. 'z'\
    \ => c as u8 | 0x20,\n        'A' .. 'Z' => c as u8 | 0x20,\n        _ => c,\n\
    \    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmp5an133om.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmp5an133om.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmp5an133om.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'A' .. 'Z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A' .. 'Z'\
    \ => c as u8 | 0x20,\n        'a' .. 'z' => c as u8 | 0x20,\n        _ => c,\n\
    \    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmp3pi372ap.rs:6:9\n\
    \  |\n6 |         'A' .. 'Z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmp3pi372ap.rs:7:9\n  |\n7 |         'a' .. 'z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmp3pi372ap.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'A' .. 'Z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'a' .. 'z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A' .. 'Z'\
    \ => c as u8 | 0x20,\n        'a' .. 'z' => c as u8 | 0x20,\n        _ => c,\n\
    \    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpcai0jmcx.rs:6:9\n\
    \  |\n6 |         'A' .. 'Z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpcai0jmcx.rs:7:9\n  |\n7 |         'a' .. 'z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpcai0jmcx.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'A' .. 'Z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'a' .. 'z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A' .. 'Z'\
    \ => c as u8 | 0x20,\n        'a' .. 'z' => c as u8 | 0x20,\n        _ => c,\n\
    \    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpxo1khnpu.rs:6:9\n\
    \  |\n6 |         'A' .. 'Z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpxo1khnpu.rs:7:9\n  |\n7 |         'a' .. 'z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpxo1khnpu.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'A' .. 'Z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'a' .. 'z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'a' .. 'z'\
    \ => c as char + 'A' as char,\n        'A' .. 'Z' => c as char + 'a' as char,\n\
    \        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpv6fzcdgb.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpv6fzcdgb.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as char + 'a'\
    \ as char,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpv6fzcdgb.rs:6:33\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpv6fzcdgb.rs:7:33\n\
    \  |\n7 |         'A' .. 'Z' => c as char + 'a' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror: aborting due to 4 previous errors\n\nSome errors\
    \ have detailed explanations: E0369, E0658.\nFor more information about an error,\
    \ try `rustc --explain E0369`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars()\n        .map(|c| match c {\n      \
    \      c if c.is_lowercase() => c.to_uppercase(),\n            c if c.is_uppercase()\
    \ => c.to_lowercase(),\n            _ => c,\n        })\n        .collect()\n\
    }\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0308]: `match` arms have incompatible types\n  --> /tmp/tmp1wuo6ugy.rs:8:38\n\
    \   |\n6  |           .map(|c| match c {\n   |  __________________-\n7  | |  \
    \           c if c.is_lowercase() => c.to_uppercase(),\n   | |               \
    \                       ---------------- this is found to be of type `ToUppercase`\n\
    8  | |             c if c.is_uppercase() => c.to_lowercase(),\n   | |        \
    \                              ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`,\
    \ found struct `ToLowercase`\n9  | |             _ => c,\n10 | |         })\n\
    \   | |_________- `match` arms have incompatible types\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A'..='Z'\
    \ => c as char + 'a' - 'A' as char,\n        'a'..='z' => c as char + 'A' - 'a'\
    \ as char,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate\
    \ = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0369]: cannot add `char` to `char`\n --> /tmp/tmpl2sq8xy_.rs:6:32\n\
    \  |\n6 |         'A'..='Z' => c as char + 'a' - 'A' as char,\n  |           \
    \           --------- ^ --- char\n  |                      |\n  |            \
    \          char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpl2sq8xy_.rs:7:32\n\
    \  |\n7 |         'a'..='z' => c as char + 'A' - 'a' as char,\n  |           \
    \           --------- ^ --- char\n  |                      |\n  |            \
    \          char\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0369`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'a' .. 'z'\
    \ => c as u8 | 0x20,\n        'A' .. 'Z' => c as u8 | 0x20,\n        _ => c,\n\
    \    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpbmfny_uw.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpbmfny_uw.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpbmfny_uw.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'A' .. 'Z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars()\n        .map(|c| match c {\n      \
    \      c if c.is_lowercase() => c.to_uppercase(),\n            c if c.is_uppercase()\
    \ => c.to_lowercase(),\n            _ => c,\n        })\n        .collect()\n\
    }\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0308]: `match` arms have incompatible types\n  --> /tmp/tmpn4w4q7w7.rs:8:38\n\
    \   |\n6  |           .map(|c| match c {\n   |  __________________-\n7  | |  \
    \           c if c.is_lowercase() => c.to_uppercase(),\n   | |               \
    \                       ---------------- this is found to be of type `ToUppercase`\n\
    8  | |             c if c.is_uppercase() => c.to_lowercase(),\n   | |        \
    \                              ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`,\
    \ found struct `ToLowercase`\n9  | |             _ => c,\n10 | |         })\n\
    \   | |_________- `match` arms have incompatible types\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars()\n        .map(|c| match c {\n      \
    \      c if c.is_lowercase() => c.to_uppercase(),\n            c if c.is_uppercase()\
    \ => c.to_lowercase(),\n            _ => c,\n        })\n        .collect()\n\
    }\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0308]: `match` arms have incompatible types\n  --> /tmp/tmpk9cy8kod.rs:8:38\n\
    \   |\n6  |           .map(|c| match c {\n   |  __________________-\n7  | |  \
    \           c if c.is_lowercase() => c.to_uppercase(),\n   | |               \
    \                       ---------------- this is found to be of type `ToUppercase`\n\
    8  | |             c if c.is_uppercase() => c.to_lowercase(),\n   | |        \
    \                              ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`,\
    \ found struct `ToLowercase`\n9  | |             _ => c,\n10 | |         })\n\
    \   | |_________- `match` arms have incompatible types\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars()\n        .map(|c| match c {\n      \
    \      'a' .. 'z' => c as char + 'A' as char,\n            'A' .. 'Z' => c as\
    \ char + 'a' as char,\n            _ => c,\n        })\n        .collect()\n}\n\
    \nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpwbjzws8d.rs:7:13\n\
    \  |\n7 |             'a' .. 'z' => c as char + 'A' as char,\n  |            \
    \ ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpwbjzws8d.rs:8:13\n  |\n8 |             'A' .. 'Z' => c as char +\
    \ 'a' as char,\n  |             ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpwbjzws8d.rs:7:37\n\
    \  |\n7 |             'a' .. 'z' => c as char + 'A' as char,\n  |            \
    \               --------- ^ ----------- char\n  |                           |\n\
    \  |                           char\n\nerror[E0369]: cannot add `char` to `char`\n\
    \ --> /tmp/tmpwbjzws8d.rs:8:37\n  |\n8 |             'A' .. 'Z' => c as char +\
    \ 'a' as char,\n  |                           --------- ^ ----------- char\n \
    \ |                           |\n  |                           char\n\nerror:\
    \ aborting due to 4 previous errors\n\nSome errors have detailed explanations:\
    \ E0369, E0658.\nFor more information about an error, try `rustc --explain E0369`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars()\n        .map(|c| match c {\n      \
    \      'a' .. 'z' => c as char,\n            'A' .. 'Z' => c as char,\n      \
    \      _ => c,\n        })\n        .collect::<String>()\n}\n\nfn main() {\n \
    \   let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\")),\
    \ String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"\
    hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent delights have\
    \ violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    ));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpvdi1qrm_.rs:7:13\n\
    \  |\n7 |             'a' .. 'z' => c as char,\n  |             ^^^^^^^^^^\n \
    \ |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpvdi1qrm_.rs:8:13\n  |\n8 |             'A' .. 'Z' => c as char,\n\
    \  |             ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0658`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars()\n        .map(|c| match c {\n      \
    \      c if c.is_lowercase() => c.to_uppercase(),\n            c if c.is_uppercase()\
    \ => c.to_lowercase(),\n            _ => c,\n        })\n        .collect()\n\
    }\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0308]: `match` arms have incompatible types\n  --> /tmp/tmprxc4v822.rs:8:38\n\
    \   |\n6  |           .map(|c| match c {\n   |  __________________-\n7  | |  \
    \           c if c.is_lowercase() => c.to_uppercase(),\n   | |               \
    \                       ---------------- this is found to be of type `ToUppercase`\n\
    8  | |             c if c.is_uppercase() => c.to_lowercase(),\n   | |        \
    \                              ^^^^^^^^^^^^^^^^ expected struct `ToUppercase`,\
    \ found struct `ToLowercase`\n9  | |             _ => c,\n10 | |         })\n\
    \   | |_________- `match` arms have incompatible types\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars()\n        .map(|c| match c {\n      \
    \      'a' .. 'z' => c as char + 'A' as char,\n            'A' .. 'Z' => c as\
    \ char + 'a' as char,\n            _ => c,\n        })\n        .collect()\n}\n\
    \nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpwuysn_rq.rs:7:13\n\
    \  |\n7 |             'a' .. 'z' => c as char + 'A' as char,\n  |            \
    \ ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpwuysn_rq.rs:8:13\n  |\n8 |             'A' .. 'Z' => c as char +\
    \ 'a' as char,\n  |             ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpwuysn_rq.rs:7:37\n\
    \  |\n7 |             'a' .. 'z' => c as char + 'A' as char,\n  |            \
    \               --------- ^ ----------- char\n  |                           |\n\
    \  |                           char\n\nerror[E0369]: cannot add `char` to `char`\n\
    \ --> /tmp/tmpwuysn_rq.rs:8:37\n  |\n8 |             'A' .. 'Z' => c as char +\
    \ 'a' as char,\n  |                           --------- ^ ----------- char\n \
    \ |                           |\n  |                           char\n\nerror:\
    \ aborting due to 4 previous errors\n\nSome errors have detailed explanations:\
    \ E0369, E0658.\nFor more information about an error, try `rustc --explain E0369`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars()\n        .map(|c| match c {\n      \
    \      'a' .. 'z' => c.to_ascii_uppercase(),\n            'A' .. 'Z' => c.to_ascii_lowercase(),\n\
    \            _ => c,\n        })\n        .collect()\n}\n\nfn main() {\n    let\
    \ candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\
    \"));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"hELLO!\"\
    ));\n    assert_eq!(candidate(String::from(\"These violent delights have violent\
    \ ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpvgkxwaig.rs:7:13\n\
    \  |\n7 |             'a' .. 'z' => c.to_ascii_uppercase(),\n  |             ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpvgkxwaig.rs:8:13\n  |\n8 |             'A' .. 'Z' => c.to_ascii_lowercase(),\n\
    \  |             ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0658`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A'..='Z'\
    \ => c.to_ascii_uppercase(),\n        'a'..='z' => c.to_ascii_lowercase(),\n \
    \       _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Hello!\"`,\n right: `\"hELLO!\"`', /tmp/tmpeczn4q6z.rs:15:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'a' .. 'z'\
    \ => c as u8 | 32 as u8,\n        _ => c,\n    }).collect()\n}\n\nfn main() {\n\
    \    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\")),\
    \ String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")), String::from(\"\
    hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent delights have\
    \ violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    ));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmp8cjgzzsr.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as u8 | 32 as u8,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmp8cjgzzsr.rs:7:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'a' .. 'z' => c as u8 |\
    \ 32 as u8,\n  | |                       ------------------ this is found to be\
    \ of type `u8`\n7 | |         _ => c,\n  | |              ^ expected `u8`, found\
    \ `char`\n8 | |     }).collect()\n  | |_____- `match` arms have incompatible types\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0308, E0658.\nFor more information about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'a' .. 'z'\
    \ => c.to_ascii_uppercase(),\n        'A' .. 'Z' => c.to_ascii_lowercase(),\n\
    \        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmplv3sm3s6.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c.to_ascii_uppercase(),\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmplv3sm3s6.rs:7:9\n  |\n7 |         'A' .. 'Z' => c.to_ascii_lowercase(),\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0658`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'a' .. 'z'\
    \ => c as char + 'A' as char,\n        'A' .. 'Z' => c as char + 'a' as char,\n\
    \        _ => c,\n    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    Hello!\")), String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"\
    These violent delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpk4vapz8h.rs:6:9\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |         ^^^^^^^^^^\n\
    \  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpk4vapz8h.rs:7:9\n  |\n7 |         'A' .. 'Z' => c as char + 'a'\
    \ as char,\n  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpk4vapz8h.rs:6:33\n\
    \  |\n6 |         'a' .. 'z' => c as char + 'A' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror[E0369]: cannot add `char` to `char`\n --> /tmp/tmpk4vapz8h.rs:7:33\n\
    \  |\n7 |         'A' .. 'Z' => c as char + 'a' as char,\n  |                \
    \       --------- ^ ----------- char\n  |                       |\n  |       \
    \                char\n\nerror: aborting due to 4 previous errors\n\nSome errors\
    \ have detailed explanations: E0369, E0658.\nFor more information about an error,\
    \ try `rustc --explain E0369`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfn flip_case(string:\
    \ String) -> String {\n    string.chars().map(|c| match c {\n        'A' .. 'Z'\
    \ => c as u8 | 0x20,\n        'a' .. 'z' => c as u8 | 0x20,\n        _ => c,\n\
    \    }).collect()\n}\n\nfn main() {\n    let candidate = flip_case;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"Hello!\")),\
    \ String::from(\"hELLO!\"));\n    assert_eq!(candidate(String::from(\"These violent\
    \ delights have violent ends\")), String::from(\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\"));\n}\n"
  stdout: ''
  stderr: "error[E0658]: exclusive range pattern syntax is experimental\n --> /tmp/tmpbqe86z32.rs:6:9\n\
    \  |\n6 |         'A' .. 'Z' => c as u8 | 0x20,\n  |         ^^^^^^^^^^\n  |\n\
    \  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854> for\
    \ more information\n\nerror[E0658]: exclusive range pattern syntax is experimental\n\
    \ --> /tmp/tmpbqe86z32.rs:7:9\n  |\n7 |         'a' .. 'z' => c as u8 | 0x20,\n\
    \  |         ^^^^^^^^^^\n  |\n  = note: see issue #37854 <https://github.com/rust-lang/rust/issues/37854>\
    \ for more information\n\nerror[E0308]: `match` arms have incompatible types\n\
    \ --> /tmp/tmpbqe86z32.rs:8:14\n  |\n5 |       string.chars().map(|c| match c\
    \ {\n  |  ____________________________-\n6 | |         'A' .. 'Z' => c as u8 |\
    \ 0x20,\n  | |                       -------------- this is found to be of type\
    \ `u8`\n7 | |         'a' .. 'z' => c as u8 | 0x20,\n  | |                   \
    \    -------------- this is found to be of type `u8`\n8 | |         _ => c,\n\
    \  | |              ^ expected `u8`, found `char`\n9 | |     }).collect()\n  |\
    \ |_____- `match` arms have incompatible types\n\nerror: aborting due to 3 previous\
    \ errors\n\nSome errors have detailed explanations: E0308, E0658.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError

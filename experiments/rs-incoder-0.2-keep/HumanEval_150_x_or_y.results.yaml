name: HumanEval_150_x_or_y
language: rust
results:
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpeyi82e49.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp7a0i988j.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpg1brr9ao.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpvqhjouvv.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpjkgc1nt7.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpngoxp_8e.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmprumdph32.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpvvskpjj3.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmprt1bem1t.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpv5usxko3.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmprpx3q3f7.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp_sl7edh8.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpgwrvq12q.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmptrfu5u40.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmplv9agylq.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpd3_3a5zk.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpm1vplugt.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpfcbisuh6.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpftasxm2o.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpyzvghmjm.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp9g9263_u.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp9l5eh1v2.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpvpfv08b7.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpxvkdo5db.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpegz4v6n7.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp8fq24e87.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpulah_nvg.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp5b5yvnm9.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpbv95cirz.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmptdl_mzm0.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpioefw1ok.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpy322f6oy.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpnbd3cfq9.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpnq5urwm4.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpoqul_2b4.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpow4s2iz0.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpqb0g12do.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpff_nf7rm.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp3keac02c.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpkikum6ow.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpd8xgoh5p.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpnhgk3v86.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp8q_k5yq2.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpxgerz1d2.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpmn5eba1i.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp1sp_m7m0.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpsnemw92p.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp8v_y230a.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpf_b9qhcw.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp4xk1p64b.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpkcvu2cxl.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmptk0765v5.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmphjs6nakt.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpzqzc_9eg.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpr1vvvumd.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp0kzr2cal.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp1ec7gt3b.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpxrvy59jg.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpsfilkv2m.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpjltgtk6v.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpjzktuuua.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp8__9b13r.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmprxzlp5w5.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp3ukpa47j.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp3mu2gpid.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpj568plwy.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpp1c19hd5.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpvd85503n.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpo75qwmc8.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpkk4f3j8_.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpk5fwjkw6.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp08biwm99.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpozju0552.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpkmxnttc5.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmprg4gn6ew.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpfpnetbmd.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpnk1lwfmk.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpwvjur0y6.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmphkbbx9bf.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp9qhglkun.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpf9v9pu1y.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp6hmpnfpl.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpeh82s2if.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpbv78jnzd.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpm9n42vxd.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpwi9p12n6.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpzu8ymhij.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp6cnq5b64.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpahrqi45g.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpxkm3iqmd.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp_d5xllpx.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp1v1orcoc.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpip8e96c_.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpdd55tz0c.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpxofj9v2n.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpz59wnq28.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp3ulrgdka.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpbbme_kl0.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp7iv0mvcn.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmplmagtgsm.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp4hr4fjbc.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpre7inj58.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp_znfbj6u.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpn80ros_z.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpb2u807eu.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpuhe4jhwl.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpwtbxyy5x.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpj2mexvh3.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpn2la83on.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpf6rxvw1w.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpyor6vpui.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpx1mtczrs.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpefhpp1ln.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpv7yo265l.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpphp0e6ls.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmps8avz4f9.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmphqkkgoek.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpy1xbfgvc.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp4j2vw7kd.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpcog535q4.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpmwjc027n.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp0hzrq09l.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmphv8fn4zm.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpxlbmfde9.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp_jpfpcz9.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmppamupegc.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpkb2mndfc.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpvp9hft4m.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp2wo2l8c5.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp63970ec6.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmptb5kpjus.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpz65jpc1s.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp0dmlk88k.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpbo9t16dy.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpof9vdn1m.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp8ay4guri.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmphj9uc34r.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpoja5q_tg.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp9a8eqfmp.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpyq973cx7.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpvkesedjr.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmps4r4orxr.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpu4xf_3wn.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpfngrg3xu.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpvxn6fztc.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpkzrhabya.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpiew0t6xu.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp4aggl74j.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpvhf6q87e.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpeh7oj7ly.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpig8b2_j3.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp7vspvye_.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp44w2xjf3.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp3p7jw0ck.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmph4gjst5y.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpvock3f28.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp20c79nc1.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpgpd4rbk5.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp8v2s0yrt.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpiepybfvi.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp4b2kxnut.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpvuvyqtzd.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpqfpwagm7.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp8crwm0jr.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpnlk27o1t.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp35i1aka7.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpfhc3g46u.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp1810lj1w.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp7ec2i8fe.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp244sphmv.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpa3gqbtsf.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp3n_b8yw1.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmps2hu52f0.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpn14wv7tr.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp4k2xejvw.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpq5i1mb4s.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp52amz3hv.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp_re3fto9.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpmbzaow9t.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpuxu10b8e.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpisboxite.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmphvp1fxly.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmprr9nvkd8.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpx2sz4cp4.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp0ei4hpdk.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpqr7dne7e.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpya6a2lit.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp2c9g665z.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpdyrx0rdb.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpk6j54pj7.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp1dzc0314.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpvm19rtc8.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp123dbckr.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpp3ews6_t.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp8xs52197.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpqhfzr55x.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpd9slnb0l.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpejgg0t0z.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmp116rxzcv.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// A simple program which should return the value of x if n is \n///\
    \ a prime number and should return the value of y otherwise.\n/// Examples:\n\
    /// for x_or_y(7, 34, 12) == 34\n/// for x_or_y(15, 8, 5) == 5\nfn x_or_y(n: isize,\
    \ x: isize, y: isize) -> isize {\n    if n % 2 == 0 {\n        x\n    } else {\n\
    \        y\n    }\n}\n\nfn main() {\n    let candidate = x_or_y;\n    assert_eq!(candidate(7,\
    \ 34, 12), 34);\n    assert_eq!(candidate(15, 8, 5), 5);\n    assert_eq!(candidate(3,\
    \ 33, 5212), 33);\n    assert_eq!(candidate(1259, 3, 52), 3);\n    assert_eq!(candidate(7919,\
    \ -1, 12), -1);\n    assert_eq!(candidate(3609, 1245, 583), 583);\n    assert_eq!(candidate(91,\
    \ 56, 129), 129);\n    assert_eq!(candidate(6, 34, 1234), 1234);\n    assert_eq!(candidate(1,\
    \ 2, 0), 0);\n    assert_eq!(candidate(2, 2, 0), 2);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `34`', /tmp/tmpkx4a11_r.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception

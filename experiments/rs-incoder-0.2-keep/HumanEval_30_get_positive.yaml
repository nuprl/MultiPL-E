name: HumanEval_30_get_positive
language: rust
prompt: "/// Return only positive numbers in the list.\n/// >>> get_positive([-1,\
  \ 2, -4, 5, 6])\n/// [2, 5, 6]\n/// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0,\
  \ 123, 1, -10])\n/// [5, 3, 2, 3, 9, 123, 1]\nfn get_positive(l: Vec<isize>) ->\
  \ Vec<isize> {\n"
tests: "}\n\nfn main() {\n    let candidate = get_positive;\n    assert_eq!(candidate(vec![-1,\
  \ -2, 4, 5, 6]), vec![4, 5, 6]);\n    assert_eq!(candidate(vec![5, 3, -5, 2, 3,\
  \ 3, 9, 0, 123, 1, -10]), vec![5, 3, 2, 3, 3, 9, 123, 1]);\n    assert_eq!(candidate(vec![-1,\
  \ -2]), Vec::<isize>::new());\n    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n\
  }\n"
completions: ['    l.iter().filter(|&x| x > 0).collect()', '    l.iter().filter(|&x|
    x > 0).collect()', '    l.iter().filter(|&x| x > 0).collect()', '    l.iter().filter(|x|
    x > 0).collect()', '    l.iter().filter(|&x| x > 0).collect()', '    l.iter().filter(|&x|
    x > 0).collect()', '    l.iter().filter(|&x| x > 0).collect()', "    let mut v\
    \ = l.iter().cloned().collect::<Vec<_>>();\n    v.sort_unstable();\n    v.dedup();\n\
    \    v", '    l.iter().filter(|&x| x > 0).collect()', '    l.iter().filter(|&x|
    x > 0).collect()', '    l.iter().filter(|&x| x > 0).collect()', '    l.iter().filter(|&x|
    x > 0).collect()', '    l.iter().filter(|&x| x > 0).collect()', '    l.iter().filter(|x|
    x > 0).collect()', '    l.iter().filter(|&x| x > 0).collect()', '    l.iter().filter(|&x|
    x > 0).collect()', "    let mut positive = Vec::new();\n    for el in l {\n  \
    \      if el > 0 {\n            positive.push(el);\n        }\n    }\n    positive",
  '    l.iter().filter(|&x| x > 0).collect()', '    l.iter().filter(|&x| x > 0).collect()',
  '    l.iter().filter(|&x| x > 0).collect()', '    l.iter().filter(|&x| x > 0).collect()',
  "    let mut result = Vec::new();\n    for x in l {\n        if x >= 0 {\n     \
    \       result.push(x);\n        }\n    }\n    result", '    l.iter().filter(|&x|
    x > 0).collect()', "    let mut result = vec![];\n    for x in l {\n        if\
    \ x >= 0 {\n            result.push(x);\n        }\n    }\n    result", '    l.iter().filter(|&x|
    x > 0).collect()', '    l.iter().filter(|&x| x > 0).collect()', '    l.iter().filter(|&x|
    x > 0).collect()', "    let mut positive = vec![];\n    for x in l {\n       \
    \ if x > 0 {\n            positive.push(x);\n        }\n    }\n    positive",
  '    l.iter().filter(|&x| x > 0).collect()', '    l.iter().filter(|&x| x > 0).collect()',
  '    l.iter().filter(|&x| x > 0).collect()', '    l.iter().filter(|&x| x > 0).collect()',
  "    let mut v = l.iter().cloned().collect::<Vec<_>>();\n    v.sort_unstable();\n\
    \    v.dedup();\n    v", "    let mut positive = Vec::new();\n    for x in l {\n\
    \        if x > 0 {\n            positive.push(x);\n        }\n    }\n    positive",
  "    let mut result = vec![];\n    for x in l {\n        if x >= 0 {\n         \
    \   result.push(x);\n        }\n    }\n    result", '    l.iter().filter(|&x|
    x > 0).collect()', '    l.iter().filter(|&x| x > 0).collect()', "    let mut positive\
    \ = Vec::new();\n    for x in l {\n        if x > 0 {\n            positive.push(x);\n\
    \        }\n    }\n    positive", "    let mut result = Vec::new();\n    for x\
    \ in l {\n        if x >= 0 {\n            result.push(x);\n        }\n    }\n\
    \    result", "    let mut positive = Vec::new();\n    for x in l {\n        if\
    \ x >= 0 {\n            positive.push(x);\n        }\n    }\n    positive", '    l.iter().filter(|&x|
    x > 0).collect()', "    let mut result = Vec::new();\n    for x in l {\n     \
    \   if x >= 0 {\n            result.push(x);\n        }\n    }\n    result", " \
    \   let mut positive = vec![];\n    for x in l {\n        if x >= 0 {\n      \
    \      positive.push(x);\n        }\n    }\n    positive", '    l.iter().filter(|&x|
    x > 0).collect()', '    l.iter().filter(|&x| x > 0).collect()', '    l.iter().filter(|&x|
    x > 0).collect()', '    l.iter().filter(|&x| x > 0).collect()', "    let mut positive\
    \ = Vec::new();\n    for x in l {\n        if x >= 0 {\n            positive.push(x);\n\
    \        }\n    }\n    positive", '    l.iter().filter(|&x| x >= 0).collect()',
  '    l.iter().filter(|&x| x > 0).collect()', "    let mut positive = Vec::new();\n\
    \    for x in l {\n        if x > 0 {\n            positive.push(x);\n       \
    \ }\n    }\n    positive", '    l.iter().filter(|&x| x > 0).collect()', "    let\
    \ mut positive = Vec::new();\n    for x in l {\n        if x >= 0 {\n        \
    \    positive.push(x);\n        }\n    }\n    positive", '    l.iter().filter(|&x|
    x > 0).collect()', "    let mut res = Vec::new();\n    for x in l {\n        if\
    \ x >= 0 {\n            res.push(x);\n        }\n    }\n    res", '    l.iter().filter(|&x|
    x > 0).collect()', "    let mut res = Vec::new();\n    for x in l {\n        if\
    \ x >= 0 {\n            res.push(x);\n        }\n    }\n    res", '    l.iter().filter(|&x|
    x > 0).collect()', "    let mut res = vec![];\n    for x in l {\n        if x\
    \ >= 0 {\n            res.push(x);\n        }\n    }\n    res", "    let mut positive\
    \ = Vec::new();\n    for el in l {\n        if el > 0 {\n            positive.push(el);\n\
    \        }\n    }\n    positive", "    let mut positive = vec![];\n    for x in\
    \ l {\n        if x >= 0 {\n            positive.push(x);\n        }\n    }\n\
    \    positive", '    l.iter().filter(|&x| x > 0).collect()', '    l.iter().filter(|&x|
    x > 0).collect()', '    l.iter().filter(|&x| x > 0).collect()', '    l.iter().filter(|&x|
    x > 0).collect()', '    l.iter().filter(|&x| x >= 0).collect()', '    l.iter().filter(|&x|
    x > 0).collect()', '    l.iter().filter(|&x| x > 0).collect()', '    l.iter().filter(|&x|
    x > 0).collect()', '    l.iter().filter(|&x| x > 0).collect()', '    l.iter().filter(|&x|
    x > 0).collect()', '    l.iter().filter(|&x| x > 0).collect()', '    l.iter().filter(|&x|
    x > 0).collect()', "    let mut positive = vec![];\n    for x in l {\n       \
    \ if x >= 0 {\n            positive.push(x);\n        }\n    }\n    positive",
  '    l.iter().filter(|&x| x > 0).collect()', '    l.iter().filter(|&x| x > 0).collect()',
  '    l.iter().filter(|&x| x > 0).collect()', '    l.iter().filter(|&x| x > 0).collect()',
  '    l.iter().filter(|&x| x > 0).collect()', '    l.iter().filter(|&x| x > 0).collect()',
  "    let mut res = vec![];\n    for x in l {\n        if x >= 0 {\n            res.push(x);\n\
    \        }\n    }\n    res", '    l.iter().filter(|&x| x > 0).collect()', "  \
    \  let mut positive = Vec::new();\n    for x in l {\n        if x >= 0 {\n   \
    \         positive.push(x);\n        }\n    }\n    positive", '    l.iter().filter(|&x|
    x >= 0).collect()', '    l.iter().filter(|&x| x > 0).collect()', '    l.iter().filter(|&x|
    x > 0).collect()', "    let mut result = vec![];\n    for x in l {\n        if\
    \ x >= 0 {\n            result.push(x);\n        }\n    }\n    result", '    l.iter().filter(|x|
    x >= 0).collect()', '    l.iter().filter(|&x| x > 0).collect()', "    let mut\
    \ res = vec![];\n    for x in l {\n        if x >= 0 {\n            res.push(x);\n\
    \        }\n    }\n    res", '    l.iter().filter(|&x| x > 0).collect()', '    l.iter().filter(|&x|
    x > 0).collect()', '    l.iter().filter(|&x| x > 0).collect()', '    l.iter().filter(|&x|
    x > 0).collect()', '    l.iter().filter(|&x| x > 0).collect()', "    let mut res\
    \ = vec![];\n    for x in l {\n        if x >= 0 {\n            res.push(x);\n\
    \        }\n    }\n    res", '    l.iter().filter(|&x| x > 0).collect()', '    l.iter().filter(|&x|
    x >= 0).collect()', '    l.iter().filter(|x| x > 0).collect()', "    let mut positive\
    \ = Vec::new();\n    for x in l {\n        if x >= 0 {\n            positive.push(x);\n\
    \        }\n    }\n    positive", '    l.iter().filter(|x| x > 0).collect()',
  '    l.iter().filter(|x| x > 0).collect()', '    l.iter().filter(|&x| x > 0).collect()',
  "    let mut positive = vec![];\n    for x in l {\n        if x >= 0 {\n       \
    \     positive.push(x);\n        }\n    }\n    positive", "    let mut res = vec![];\n\
    \    for x in l {\n        if x >= 0 {\n            res.push(x);\n        }\n\
    \    }\n    res", '    l.iter().filter(|&x| x > 0).collect()', '    l.iter().filter(|&x|
    x > 0).collect()', "    let mut result = Vec::new();\n    for x in l {\n     \
    \   if x >= 0 {\n            result.push(x);\n        }\n    }\n    result", '    l.iter().filter(|&x|
    x > 0).collect()', '    l.iter().filter(|&x| x > 0).collect()', "    let mut result\
    \ = vec![];\n    for i in l {\n        if i > 0 {\n            result.push(i);\n\
    \        }\n    }\n    result", '    l.iter().filter(|&x| x >= 0).collect()',
  "    let mut res = Vec::new();\n    let mut i = 0;\n    while i < l.len() {\n  \
    \      if l[i] > 0 {\n            res.push(l[i]);\n        }\n        i += 1;\n\
    \    }\n    res", "    let mut positive = Vec::new();\n    for x in l {\n    \
    \    if x >= 0 {\n            positive.push(x);\n        }\n    }\n    positive",
  '    l.iter().filter(|&x| x > 0).collect()', '    l.iter().filter(|&x| x > 0).collect()',
  "    let mut res = vec![];\n    for x in l {\n        if x >= 0 {\n            res.push(x);\n\
    \        }\n    }\n    res", "    let mut result = vec![];\n    for x in l {\n\
    \        if x >= 0 {\n            result.push(x);\n        }\n    }\n    result",
  '    l.iter().filter(|x| x > 0).collect()', '    l.iter().filter(|&x| x > 0).collect()',
  '    l.iter().filter(|&x| x > 0).collect()', '    l.iter().filter(|&x| x > 0).collect()',
  '    l.iter().filter(|&x| x > 0).collect()', '    l.iter().filter(|&x| x > 0).collect()',
  "    let mut positive = Vec::new();\n    for x in l {\n        if x >= 0 {\n   \
    \         positive.push(x);\n        }\n    }\n    positive", "    let mut positive\
    \ = Vec::new();\n    for x in l {\n        if x >= 0 {\n            positive.push(x);\n\
    \        }\n    }\n    positive", "    let mut res = vec![];\n    for x in l {\n\
    \        if x >= 0 {\n            res.push(x);\n        }\n    }\n    res", " \
    \   let mut positive = vec![];\n    for x in l {\n        if x >= 0 {\n      \
    \      positive.push(x);\n        }\n    }\n    positive", '    l.iter().filter(|&x|
    x > 0).collect()', "    let mut positive = Vec::new();\n    for x in l {\n   \
    \     if x >= 0 {\n            positive.push(x);\n        }\n    }\n    positive",
  '    l.iter().filter(|&x| x > 0).collect()', '    l.iter().filter(|&x| x > 0).collect()',
  '    l.iter().filter(|&x| x > 0).collect()', '    l.iter().filter(|&x| x > 0).collect()',
  '    l.iter().filter(|&x| x > 0).collect()', "    let mut result = vec![];\n   \
    \ for x in l {\n        if x >= 0 {\n            result.push(x);\n        }\n\
    \    }\n    result", '    l.iter().filter(|&x| x > 0).collect()', '    l.iter().filter(|&x|
    x > 0).collect()', '    l.iter().filter(|&x| x > 0).collect()', '    l.iter().filter(|&x|
    x > 0).collect()', '    l.iter().filter(|&x| x > 0).collect()', '    l.iter().filter(|&x|
    x > 0).collect()', '    l.iter().filter(|&x| x > 0).collect()', '    l.iter().filter(|&x|
    x > 0).collect()', '    l.iter().filter(|&x| x > 0).collect()', "    let mut positive\
    \ = Vec::new();\n    for x in l {\n        if x > 0 {\n            positive.push(x);\n\
    \        }\n    }\n    positive", "    let mut positive = Vec::new();\n    for\
    \ el in l {\n        if el > 0 {\n            positive.push(el);\n        }\n\
    \    }\n    positive", '    l.iter().filter(|&x| x >= 0).collect()', '    l.iter().filter(|&x|
    x > 0).collect()', '    l.iter().filter(|&x| x > 0).collect()', '    l.iter().filter(|&x|
    x > 0).collect()', '    l.iter().filter(|&x| x > 0).collect()', '    l.iter().filter(|&x|
    x > 0).collect()', '    l.iter().filter(|&x| x > 0).collect()', '    l.iter().filter(|x|
    x > 0).collect()', '    l.iter().filter(|x| x > 0).collect()', '    l.iter().filter(|&x|
    x > 0).collect()', '    l.iter().filter(|x| x > 0).collect()', '    l.iter().filter(|&x|
    x > 0).collect()', '    l.iter().filter(|x| x >= 0).collect()', '    l.iter().filter(|&x|
    x > 0).collect()', '    l.iter().filter(|&x| x > 0).collect()', "    let mut res\
    \ = vec![];\n    for x in l {\n        if x >= 0 {\n            res.push(x);\n\
    \        }\n    }\n    res", '    l.iter().filter(|&x| x > 0).collect()', "  \
    \  let mut result = Vec::new();\n    for x in l {\n        if x >= 0 {\n     \
    \       result.push(x);\n        }\n    }\n    result", "    let mut positive\
    \ = Vec::new();\n    for x in l {\n        if x >= 0 {\n            positive.push(x);\n\
    \        }\n    }\n    positive", '    l.iter().filter(|&x| x > 0).collect()',
  "    let mut positive = Vec::new();\n    for x in l {\n        if x >= 0 {\n   \
    \         positive.push(x);\n        }\n    }\n    positive", '    l.iter().filter(|&x|
    x >= 0).collect()', "    let mut res = Vec::new();\n    let mut pos = 0;\n   \
    \ for x in l {\n        if x >= 0 {\n            res.push(pos);\n            pos\
    \ += 1;\n        } else {\n            pos += 1;\n        }\n    }\n    res.push(pos);\n\
    \    res", '    l.iter().filter(|&x| x > 0).collect()', "    let mut positive\
    \ = Vec::new();\n    for n in l {\n        if n >= 0 {\n            positive.push(n);\n\
    \        }\n    }\n    positive", '    l.iter().filter(|&x| x > 0).collect()',
  '    l.iter().filter(|&x| x > 0).collect()', '    l.iter().filter(|&x| x >= 0).collect()',
  '    l.iter().filter(|&x| x > 0).collect()', "    let mut positive = Vec::new();\n\
    \    for x in l {\n        if x > 0 {\n            positive.push(x);\n       \
    \ }\n    }\n    positive", '    l.iter().filter(|&x| x > 0).collect()', '    l.iter().filter(|x|
    x > 0).collect()', "    let mut result = vec![];\n    for x in l {\n        if\
    \ x >= 0 {\n            result.push(x);\n        }\n    }\n    result", '    l.iter().filter(|&x|
    x > 0).collect()', '    l.iter().filter(|&x| x > 0).collect()', '    l.iter().filter(|&x|
    x > 0).collect()', '    l.iter().filter(|&x| x > 0).collect()', '    l.iter().filter(|x|
    x > 0).collect()', '    l.iter().filter(|&x| x > 0).collect()', '    l.iter().filter(|&x|
    x > 0).collect()', '    l.iter().filter(|&x| x > 0).collect()', '    l.iter().filter(|&x|
    x > 0).collect()', "    let mut positive = vec![];\n    for x in l {\n       \
    \ if x >= 0 {\n            positive.push(x);\n        }\n    }\n    positive",
  '    l.iter().filter(|&x| x > 0).collect()', '    l.iter().filter(|&x| x > 0).collect()',
  "    let mut v = l;\n    v.sort();\n    v.iter().filter(|&x| x >= 0).collect()",
  "    let mut positive = Vec::new();\n    for x in l {\n        if x >= 0 {\n   \
    \         positive.push(x);\n        }\n    }\n    positive", "    let mut positive\
    \ = vec![];\n    for x in l {\n        if x >= 0 {\n            positive.push(x);\n\
    \        }\n    }\n    positive", '    l.iter().filter(|&x| x > 0).collect()',
  '    l.iter().filter(|&x| x > 0).collect()', '    l.iter().filter(|&x| x > 0).collect()',
  "    let mut positive = Vec::new();\n    for x in l {\n        if x >= 0 {\n   \
    \         positive.push(x);\n        }\n    }\n    positive", '    l.iter().filter(|&x|
    x > 0).collect()']
stop_tokens:
- "\n}"

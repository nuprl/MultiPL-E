name: HumanEval_6_parse_nested_parens
language: rust
prompt: "/// Input to this function is a string represented multiple groups for nested\
  \ parentheses separated by spaces.\n/// For each of the group, output the deepest\
  \ level of nesting of parentheses.\n/// E.g. (()()) has maximum two levels of nesting\
  \ while ((())) has three.\n/// >>> parse_nested_parens('(()()) ((())) () ((())()())')\n\
  /// [2, 3, 1, 3]\nfn parse_nested_parens(paren_string: String) -> Vec<isize> {\n"
tests: "}\n\nfn main() {\n    let candidate = parse_nested_parens;\n    assert_eq!(candidate(String::from(\"\
  (()()) ((())) () ((())()())\")), vec![2, 3, 1, 3]);\n    assert_eq!(candidate(String::from(\"\
  () (()) ((())) (((())))\")), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(String::from(\"\
  (()(())((())))\")), vec![4]);\n}\n"
completions: ["    let mut levels = Vec::new();\n    let mut paren_count = 0;\n  \
    \  let mut paren_level = 0;\n    let mut paren_start = 0;\n    let mut paren_end\
    \ = 0;\n    let mut paren_levels = Vec::new();\n    let mut paren_levels_len =\
    \ paren_levels;\n    let mut paren_levels_len = paren_levels;\n    let mut paren_levels_len\
    \ = paren_levels;\n    let mut paren_levels_len = paren_levels;\n    let mut paren_levels_len\
    \ = paren_levels;\n    let mut paren_levels_len = paren_levels;\n    let mut paren_levels_len\
    \ = paren_levels;\n    let mut paren_levels_len = paren_levels;\n    let mut paren_levels_len\
    \ = paren_levels;\n    let mut paren_levels_len = paren_levels;\n    let mut paren_levels_len\
    \ = paren_levels;\n    let mut paren_levels_len = paren_levels;\n    let mut paren_levels_len\
    \ = paren_levels;\n    let mut paren_levels_len = paren_levels;\n    let mut paren_levels_len\
    \ = paren_levels;\n    let mut paren_levels_len = paren_levels;\n    let mut paren_levels_len\
    \ = paren_levels;\n    let mut paren_levels_len = paren_levels;\n    let mut paren_levels_len\
    \ = paren_levels;\n    let mut paren_levels_len = paren_levels;\n    let mut paren_levels_len\
    \ = paren_levels;\n    let mut paren_levels_len = paren_levels;\n    let mut paren_levels_len\
    \ = paren_levels;\n    let mut paren_levels_len = paren_levels;\n    let mut paren_levels_len\
    \ = paren_levels;\n    let mut paren_levels_len = paren_levels;\n    let mut paren_levels_len\
    \ = paren_levels;\n    let mut paren_levels_len = paren_levels;\n    let mut paren_levels_len\
    \ = paren_levels;\n    let mut paren_levels_len = paren_levels;\n    let mut paren_levels_len\
    \ = paren_levels;\n    let mut paren_levels_len = paren_levels;\n    let mut paren_levels_len\
    \ = paren_levels;\n    let mut paren_levels_len = paren_levels;\n    let mut paren_levels_len\
    \ = paren_levels;\n    let mut paren", "    let mut paren_levels = vec![];\n \
    \   let mut paren_level = 0;\n    let mut paren_levels_stack = vec![];\n    let\
    \ mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_size = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_pos = 0;\n    let\
    \ mut paren_levels_stack_size = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_size\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_size = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_pos = 0;\n    let\
    \ mut paren_levels_stack_size = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_size\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_size = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_pos = 0;\n    let\
    \ mut paren_levels_stack_size = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_", "    let mut paren_levels = Vec::new();\n    let mut paren_level\
    \ = 0;\n    let mut paren_level_index = 0;\n    let mut paren_level_chars = vec![];\n\
    \    let mut paren_level_char_index = 0;\n    let mut paren_level_char_length\
    \ = 0;\n    let mut paren_level_char_char_length = 0;\n    let mut paren_level_char_char_char_length\
    \ = 0;\n    let mut paren_level_char_char_char_char_length = 0;\n    let mut paren_level_char_char_char_char_char_length\
    \ = 0;\n    let mut paren_level_char_char_char_char_char_char_length = 0;\n  \
    \  let mut paren_level_char_char_char_char_char_char_char_length = 0;\n    let\
    \ mut paren_level_char_char_char_char_char_char_char_char_length = 0;\n    let\
    \ mut paren_level_char_char_char_char_char_char_char_char_char_length = 0;\n \
    \   let mut paren_level_char_char_char_char_char_char_char_char_char_char_length\
    \ = 0;\n    let mut paren_level_char_char_char_char_char_char_char_char_char_char_char_length\
    \ = 0;\n    let mut paren_level_char_char_char_char_char_char_char_char_char_char_char_length\
    \ = 0;\n    let mut paren_level_char_char_char_char_char_char_char_char_char_char_char_char_length\
    \ = 0;\n    let mut paren_level_char_char_char_char_char_char_char_char_char_char_char_char_char_length\
    \ = 0;\n    let mut paren_level_char_char_char_char_char_char_char_char_char_char_char_char_char_char_length\
    \ = 0;\n    let mut paren_level_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_length\
    \ = 0;\n    let mut paren_level_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_length\
    \ = 0;\n    let mut paren_level_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_length\
    \ = 0;\n    let mut paren_level_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_length\
    \ = 0;\n    let mut paren_level_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_length\
    \ = 0;\n    let mut paren_level_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_length\
    \ = 0;\n    let mut paren_level_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_length\
    \ = 0;\n    let mut paren_level_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_",
  "    let mut paren_levels = vec![];\n    let mut paren_level = 0;\n    let mut paren_levels_stack\
    \ = vec![];\n    let mut paren_levels_stack_len = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr = paren_levels_stack_len;\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_bottom = paren_levels_stack_len;\n\
    \    let mut paren_levels_stack_top = paren_levels_stack_len;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_top = paren_levels_stack_len;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_len;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_len;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_top = paren_levels_stack_len;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_len;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_len;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_top = paren_levels_stack_len;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_len;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_len;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_top = paren_levels_stack_len;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_len;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_len;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_top = paren_levels_stack_len;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_len;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_len;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_top = paren_levels_stack_len;\n\
    \    let mut paren_levels_stack_", "    let mut paren_levels = Vec::new();\n \
    \   let mut paren_level = 0;\n    let mut paren_levels_stack = Vec::new();\n \
    \   let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_size =\
    \ paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_pos = 0;\n    let mut paren_levels_stack = Vec::new();\n\
    \    let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_size\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_pos = 0;\n    let mut paren_levels_stack = Vec::new();\n\
    \    let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_size\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_pos = 0;\n    let mut paren_levels_stack = Vec::new();\n\
    \    let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_size\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_pos = 0;\n    let mut paren_levels_stack = Vec::new();\n\
    \    let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_size\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_pos = 0;\n    let mut paren_levels_stack = Vec::new();\n\
    \    let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_size\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren", " \
    \   let mut paren_stack: Vec<isize> = vec![];\n    let mut paren_level: usize\
    \ = 0;\n    let mut paren_levels: Vec<isize> = vec![];\n    let mut paren_levels_len:\
    \ usize = 0;\n    let mut paren_levels_lens: Vec<isize> = vec![];\n    let mut\
    \ paren_levels_lens_len: usize = 0;\n    let mut paren_levels_lens_lens: Vec<isize>\
    \ = vec![];\n    let mut paren_levels_lens_lens_len: usize = 0;\n    let mut paren_levels_lens_lens_lens:\
    \ Vec<isize> = vec![];\n    let mut paren_levels_lens_lens_lens_len: usize = 0;\n\
    \    let mut paren_levels_lens_lens_lens_lens: Vec<isize> = vec![];\n    let mut\
    \ paren_levels_lens_lens_lens_lens_len: usize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens:\
    \ Vec<isize> = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_len:\
    \ usize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens: Vec<isize>\
    \ = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_len: usize\
    \ = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens: Vec<isize>\
    \ = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_len:\
    \ usize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens:\
    \ Vec<isize> = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens:\
    \ Vec<isize> = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens:\
    \ Vec<isize> = vec![];\n    let mut paren_levels_lens_lens_", "    let mut paren_stack\
    \ = Vec::new();\n    let mut paren_count = 0;\n    let mut paren_level = 0;\n\
    \    let mut paren_levels = Vec::new();\n    let mut paren_levels_len = 0;\n \
    \   let mut paren_levels_lens = Vec::new();\n    let mut paren_levels_lens_len\
    \ = 0;\n    let mut paren_levels_lens_len2 = 0;\n    let mut paren_levels_lens_len3\
    \ = 0;\n    let mut paren_levels_lens_len4 = 0;\n    let mut paren_levels_lens_len5\
    \ = 0;\n    let mut paren_levels_lens_len6 = 0;\n    let mut paren_levels_lens_len7\
    \ = 0;\n    let mut paren_levels_lens_len8 = 0;\n    let mut paren_levels_lens_len9\
    \ = 0;\n    let mut paren_levels_lens_len10 = 0;\n    let mut paren_levels_lens_len11\
    \ = 0;\n    let mut paren_levels_lens_len12 = 0;\n    let mut paren_levels_lens_len13\
    \ = 0;\n    let mut paren_levels_lens_len14 = 0;\n    let mut paren_levels_lens_len15\
    \ = 0;\n    let mut paren_levels_lens_len16 = 0;\n    let mut paren_levels_lens_len17\
    \ = 0;\n    let mut paren_levels_lens_len18 = 0;\n    let mut paren_levels_lens_len19\
    \ = 0;\n    let mut paren_levels_lens_len20 = 0;\n    let mut paren_levels_lens_len21\
    \ = 0;\n    let mut paren_levels_lens_len22 = 0;\n    let mut paren_levels_lens_len23\
    \ = 0;\n    let mut paren_levels_lens_len24 = 0;\n    let mut paren_levels_lens_len25\
    \ = 0;\n    let mut paren_levels_lens_len26 = 0;\n    let mut paren_levels_lens_len27\
    \ = 0;\n    let mut paren_levels_lens_len28 = 0;\n    let mut paren_levels_lens_len29\
    \ = 0;\n    let mut paren_levels_lens_len30 = 0;\n    let mut paren_levels_lens_len31\
    \ = 0;\n    let mut paren_levels_lens_len32 = 0;\n    let mut paren_levels_lens_len33\
    \ = 0;\n    let mut paren_levels_lens_len34 = 0;\n    let mut paren_levels_lens_len35\
    \ = 0;", "    let mut paren_levels = vec![];\n    let mut paren_level = 0;\n \
    \   let mut paren_level_count = 0;\n    let mut paren_level_stack = vec![];\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_len = paren_level_stack.len();\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_", "    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_level_count =\
    \ 0;\n    let mut paren_level_char_count = 0;\n    let mut paren_level_char_pos\
    \ = 0;\n    let mut paren_level_char_pos_count = 0;\n    let mut paren_level_char_pos_count_max\
    \ = 0;\n    let mut paren_level_char_pos_count_max_index = 0;\n    let mut paren_level_char_pos_count_max_index2\
    \ = 0;\n    let mut paren_level_char_pos_count_max_index3 = 0;\n    let mut paren_level_char_pos_count_max_index4\
    \ = 0;\n    let mut paren_level_char_pos_count_max_index5 = 0;\n    let mut paren_level_char_pos_count_max_index6\
    \ = 0;\n    let mut paren_level_char_pos_count_max_index7 = 0;\n    let mut paren_level_char_pos_count_max_index8\
    \ = 0;\n    let mut paren_level_char_pos_count_max_index9 = 0;\n    let mut paren_level_char_pos_count_max_index10\
    \ = 0;\n    let mut paren_level_char_pos_count_max_index11 = 0;\n    let mut paren_level_char_pos_count_max_index12\
    \ = 0;\n    let mut paren_level_char_pos_count_max_index13 = 0;\n    let mut paren_level_char_pos_count_max_index14\
    \ = 0;\n    let mut paren_level_char_pos_count_max_index15 = 0;\n    let mut paren_level_char_pos_count_max_index16\
    \ = 0;\n    let mut paren_level_char_pos_count_max_index17 = 0;\n    let mut paren_level_char_pos_count_max_index18\
    \ = 0;\n    let mut paren_level_char_pos_count_max_index19 = 0;\n    let mut paren_level_char_pos_count_max_index20\
    \ = 0;\n    let mut paren_level_char_pos_count_max_index21 = 0;\n    let mut paren_level_char_pos_count_max_index22\
    \ = 0;\n    let mut paren_level_char_pos_count_max_index23 = 0;\n    let mut paren_level_char_pos_count_max_index24\
    \ = 0;\n    let mut paren_level_char_pos_count_max_index25 = 0;\n    let mut paren_level_char_pos_count_max_index26\
    \ = 0;\n    let mut paren_level_char_pos_count_max_index27 = 0;\n    let mut paren_level_char_pos_count_max_index28\
    \ = 0;\n    let mut paren_level_char_pos_count_max_index29 = 0;\n    let mut paren_level_char_pos_count_max_index30\
    \ = 0;\n    let mut paren_level_char_pos_count_max_index31 = 0;\n    let mut paren_level_char_pos_count_max_index32",
  "    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_level", "    let mut paren_stack\
    \ = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_nesting_level\
    \ = 0;\n    let mut paren_nesting_levels = Vec::new();\n    let mut paren_nesting_levels_len\
    \ = paren_nesting_levels.len();\n    let mut paren_nesting_levels_lens = paren_nesting_levels_len.clone();\n\
    \    let mut paren_nesting_levels_lens_len = paren_nesting_levels_lens.len();\n\
    \    let mut paren_nesting_levels_lens_len = 0;\n    let mut paren_nesting_levels_lens_lens\
    \ = paren_nesting_levels_lens_len.clone();\n    let mut paren_nesting_levels_lens_lens_len\
    \ = paren_nesting_levels_lens_lens.len();\n    let mut paren_nesting_levels_lens_lens_len\
    \ = 0;\n    let mut paren_nesting_levels_lens_lens_lens = paren_nesting_levels_lens_lens_len.clone();\n\
    \    let mut paren_nesting_levels_lens_lens_lens_len = paren_nesting_levels_lens_lens_lens.len();\n\
    \    let mut paren_nesting_levels_lens_lens_lens_len = 0;\n    let mut paren_nesting_levels_lens_lens_lens_lens\
    \ = paren_nesting_levels_lens_lens_lens_len.clone();\n    let mut paren_nesting_levels_lens_lens_lens_lens_len\
    \ = paren_nesting_levels_lens_lens_lens_lens.len();\n    let mut paren_nesting_levels_lens_lens_lens_lens_len\
    \ = 0;\n    let mut paren_nesting_levels_lens_lens_lens_lens_lens = paren_nesting_levels_lens_lens_lens_lens_lens_len.clone();\n\
    \    let mut paren_nesting_levels_lens_lens_lens_lens_lens_len = paren_nesting_levels_lens_lens_lens_lens_lens_lens.len();\n\
    \    let mut paren_nesting_levels_lens_lens_lens_lens_lens_len = 0;\n    let mut\
    \ paren_nesting_levels_lens_lens_lens_lens_lens_lens = paren_nesting_levels_lens_lens_lens_lens_lens_lens_lens_.clone();\n\
    \    let mut paren_nesting_levels_lens_len", "    let mut levels = Vec::new();\n\
    \    let mut paren_level = 0;\n    let mut paren_level_count = 0;\n    let mut\
    \ paren_level_stack = Vec::new();\n    let mut paren_level_stack_pos = 0;\n  \
    \  let mut paren_level_stack_len = paren_level_stack.len();\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_", "    let mut level = 0;\n    let mut paren_stack = Vec::new();\n\
    \    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let\
    \ mut paren_levels_len = paren_stack.len();\n    let mut paren_levels_len_ptr\
    \ = paren_levels_len as *const isize;\n    let mut paren_levels_ptr = paren_levels_len_ptr\
    \ as *const Vec<isize>;\n    let mut paren_levels_ptr_len = paren_levels_ptr as\
    \ *const usize;\n    let mut paren_levels_ptr_len_copy = paren_levels_len_ptr\
    \ as *const usize;\n    let mut paren_levels_ptr_len_copy_copy = paren_levels_ptr_len_copy\
    \ as *const usize;\n    let mut paren_levels_ptr_len_copy_copy_copy = paren_levels_ptr_len_copy_copy\
    \ as *const usize;\n    let mut paren_levels_ptr_len_copy_copy_copy_copy = paren_levels_ptr_len_copy_copy_copy\
    \ as *const usize;\n    let mut paren_levels_ptr_len_copy_copy_copy_copy_copy\
    \ = paren_levels_ptr_len_copy_copy_copy_copy_copy as *const usize;\n    let mut\
    \ paren_levels_ptr_len_copy_copy_copy_copy_copy_copy_copy = paren_levels_ptr_len_copy_copy_copy_copy_copy_copy_copy\
    \ as *const usize;\n    let mut paren_levels_ptr_len_copy_copy_copy_copy_copy_copy_copy_copy\
    \ = paren_levels_ptr_len_copy_copy_copy_copy_copy_copy_copy_copy as *const usize;\n\
    \    let mut paren_levels_ptr_len_copy_copy_copy_copy_copy_copy_copy_copy_copy\
    \ = paren_levels_ptr_len_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy as\
    \ *const usize;\n    let mut paren_levels_ptr_len_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy\
    \ = paren_levels_ptr_len_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy\
    \ as *const usize;\n    let mut paren_levels_ptr_len_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy\
    \ = paren_levels_ptr_len_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy\
    \ as *const usize;\n    let mut paren_levels_ptr_len_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy\
    \ = paren_levels_ptr_len_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_",
  "    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_level_count = 0;\n    let mut paren_level_char_count = 0;\n    let mut\
    \ paren_level_chars = Vec::new();\n    let mut paren_level_char: char;\n    let\
    \ mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_", "    let mut paren_levels = Vec::new();\n   \
    \ let mut paren_level = 0;\n    let mut paren_levels_stack = Vec::new();\n   \
    \ let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_size = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr = paren_levels_stack;\n    let mut paren_levels_stack_ptr_pos\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_ptr_size = paren_levels_stack_ptr.len();\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack_ptr + paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_ptr_end_pos = paren_levels_stack_ptr_end;\n  \
    \  let mut paren_levels_stack_ptr_end_size = paren_levels_stack_ptr_end - paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_ptr_end_ptr = paren_levels_stack_ptr_end;\n  \
    \  let mut paren_levels_stack_ptr_end_ptr_pos = paren_levels_stack_ptr_end_ptr;\n\
    \    let mut paren_levels_stack_ptr_end_ptr_size = paren_levels_stack_ptr_end_ptr\
    \ - paren_levels_stack_ptr_end;\n    let mut paren_levels_stack_ptr_end_ptr_end\
    \ = paren_levels_stack_ptr_end_ptr + paren_levels_stack_ptr_end_size;\n    let\
    \ mut paren_levels_stack_ptr_end_ptr_end_pos = paren_levels_stack_ptr_end_ptr_end;\n\
    \    let mut paren_levels_stack_ptr_end_ptr_end_size = paren_levels_stack_ptr_end_ptr_end\
    \ - paren_levels_stack_ptr_end_ptr;\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr\
    \ = paren_levels_stack_ptr_end_ptr_end;\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr_pos\
    \ = paren_levels_stack_ptr_end_ptr_end_ptr;\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr_size\
    \ = paren_levels_stack_ptr_end_ptr_end_ptr - paren_levels_stack_ptr_end_ptr_end;\n\
    \    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end = paren_levels_stack_ptr_end_ptr_end_ptr\
    \ + paren_levels_stack_ptr_end_ptr_end_size;", "    let mut paren_levels = Vec::new();\n\
    \    let mut paren_level = 0;\n    let mut paren_level_index = 0;\n    let mut\
    \ paren_level_stack = Vec::new();\n    let mut paren_level_stack_pos = 0;\n  \
    \  let mut paren_level_stack_len = paren_level_stack.len();\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_",
  "    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_nesting = 0;\n    let mut paren_nesting_level = 0;\n    let mut paren_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nest", "    let mut level = 0;\n    let mut paren_stack =\
    \ vec![];\n    let mut paren_stack_len = paren_string.len();\n    let mut paren_stack_pos\
    \ = 0;\n    let mut paren_stack_char = paren_string[paren_stack_pos];\n    let\
    \ mut paren_stack_char_pos = 0;\n    let mut paren_stack_char_len = paren_string[paren_stack_char_pos].len();\n\
    \    let mut paren_stack_char_pos = 0;\n    let mut paren_stack_char_len = paren_string[paren_stack_char_pos].len();\n\
    \    let mut paren_stack_char_pos = 0;\n    let mut paren_stack_char_len = paren_string[paren_stack_char_pos].len();\n\
    \    let mut paren_stack_char_pos = 0;\n    let mut paren_stack_char_len = paren_string[paren_stack_char_pos].len();\n\
    \    let mut paren_stack_char_pos = 0;\n    let mut paren_stack_char_len = paren_string[paren_stack_char_pos].len();\n\
    \    let mut paren_stack_char_pos = 0;\n    let mut paren_stack_char_len = paren_string[paren_stack_char_pos].len();\n\
    \    let mut paren_stack_char_pos = 0;\n    let mut paren_stack_char_len = paren_string[paren_stack_char_pos].len();\n\
    \    let mut paren_stack_char_pos = 0;\n    let mut paren_stack_char_len = paren_string[paren_stack_char_pos].len();\n\
    \    let mut paren_stack_char_pos = 0;\n    let mut paren_stack_char_len = paren_string[paren_stack_char_pos].len();\n\
    \    let mut paren_stack_char_pos = 0;\n    let mut paren_stack_char_len = paren_string[paren_stack_char_pos].len();\n\
    \    let mut paren_stack_char_pos = 0;\n    let mut paren_stack_char_len = paren_string[paren_stack_char_pos].len();\n\
    \    let mut paren_stack_char_pos = 0;\n    let mut paren_stack_char_len = paren_string[paren_stack_char_pos].len();\n\
    \    let mut paren_stack_char_pos = 0;\n    let mut paren_stack_char_len = paren_string[paren_stack_char_pos].len();\n\
    \    let mut paren_stack_char_pos = 0;\n    let mut paren_stack_char_len = paren_string[paren_stack_char_pos].len();\n\
    \    let mut paren_stack_char_pos = 0;\n    let mut paren_stack_char_len = paren_string[paren_stack_char_pos].len();\n\
    \    let mut paren_stack_char_", "    let mut paren_levels = vec![];\n    let\
    \ mut paren_level = 0;\n    let mut paren_levels_stack = vec![];\n    let mut\
    \ paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_len = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack_len - 1;\n    let mut\
    \ paren_levels_stack_bottom = paren_levels_stack_len - 1;\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack_len - 1;\n    let mut paren_levels_stack_bottom = paren_levels_stack_len\
    \ - 1;\n    let mut paren_levels_stack_top = paren_levels_stack_len - 1;\n   \
    \ let mut paren_levels_stack_bottom = paren_levels_stack_len - 1;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_len - 1;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_len - 1;\n    let mut paren_levels_stack_top = paren_levels_stack_len\
    \ - 1;\n    let mut paren_levels_stack_bottom = paren_levels_stack_len - 1;\n\
    \    let mut paren_levels_stack_top = paren_levels_stack_len - 1;\n    let mut\
    \ paren_levels_stack_bottom = paren_levels_stack_len - 1;\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack_len - 1;\n    let mut paren_levels_stack_bottom = paren_levels_stack_len\
    \ - 1;\n    let mut paren_levels_stack_top = paren_levels_stack_len - 1;\n   \
    \ let mut paren_levels_stack_bottom = paren_levels_stack_len - 1;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_len - 1;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_len - 1;\n    let mut paren_levels_stack_top = paren_levels_stack_len\
    \ - 1;\n    let mut paren_levels_stack_bottom = paren_levels_stack_len - 1;\n\
    \    let mut paren_levels_stack_top = paren_levels_stack_len - 1;\n    let mut\
    \ paren_levels_stack_bottom = paren_levels_stack_len - 1;\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack_len - 1;\n    let mut paren_levels_stack_bottom = paren_levels_stack_len\
    \ - 1;\n    let mut paren_levels_stack_top = paren_levels_stack_len - 1;\n   \
    \ let mut paren_levels_stack_bottom = paren_levels_stack_", "    let mut paren_stack:\
    \ Vec<isize> = vec![];\n    let mut paren_level: usize = 0;\n    let mut paren_level_count:\
    \ usize = 0;\n    let mut paren_level_max_count: usize = 0;\n    let mut paren_level_max_level:\
    \ usize = 0;\n    let mut paren_level_max_level_char: char = '(';\n    let mut\
    \ paren_level_max_level_char_count: usize = 0;\n    let mut paren_level_max_level_char_counts:\
    \ Vec<usize> = vec![];\n    let mut paren_level_max_level_char_counts_index: usize\
    \ = 0;\n    let mut paren_level_max_level_char_counts_index: usize = 0;\n    let\
    \ mut paren_level_max_level_char_counts_index: usize = 0;\n    let mut paren_level_max_level_char_counts_index:\
    \ usize = 0;\n    let mut paren_level_max_level_char_counts_index: usize = 0;\n\
    \    let mut paren_level_max_level_char_counts_index: usize = 0;\n    let mut\
    \ paren_level_max_level_char_counts_index: usize = 0;\n    let mut paren_level_max_level_char_counts_index:\
    \ usize = 0;\n    let mut paren_level_max_level_char_counts_index: usize = 0;\n\
    \    let mut paren_level_max_level_char_counts_index: usize = 0;\n    let mut\
    \ paren_level_max_level_char_counts_index: usize = 0;\n    let mut paren_level_max_level_char_counts_index:\
    \ usize = 0;\n    let mut paren_level_max_level_char_counts_index: usize = 0;\n\
    \    let mut paren_level_max_level_char_counts_index: usize = 0;\n    let mut\
    \ paren_level_max_level_char_counts_index: usize = 0;\n    let mut paren_level_max_level_char_counts_index:\
    \ usize = 0;\n    let mut paren_level_max_level_char_counts_index: usize = 0;\n\
    \    let mut paren_level_max_level_char_counts_index: usize = 0;\n    let mut\
    \ paren_level_max_level_char_counts_index: usize = 0;\n    let mut paren_level_max_level_char_counts_index:\
    \ usize = 0;\n    let mut paren_level_max_level_char_counts_index: usize = 0;\n\
    \    let mut paren_level_max_level_char_counts_index: usize = 0;\n    let mut\
    \ paren_level_max_level_char_counts_index: usize = 0;\n    let mut paren_level_max_level_char_counts_index:\
    \ usize = 0;\n    let mut paren_level_max_level_char_counts_index: ", "    let\
    \ mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_levels_stack\
    \ = Vec::new();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_level",
  "    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_level", "    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_level_count =\
    \ 0;\n    let mut paren_level_char_count = 0;\n    let mut paren_level_chars =\
    \ Vec::new();\n    let mut paren_level_char: char;\n    let mut paren_level_chars:\
    \ Vec<char>;\n    let mut paren_level_char: char;\n    let mut paren_level_chars:\
    \ Vec<char>;\n    let mut paren_level_char: char;\n    let mut paren_level_chars:\
    \ Vec<char>;\n    let mut paren_level_char: char;\n    let mut paren_level_chars:\
    \ Vec<char>;\n    let mut paren_level_char: char;\n    let mut paren_level_chars:\
    \ Vec<char>;\n    let mut paren_level_char: char;\n    let mut paren_level_chars:\
    \ Vec<char>;\n    let mut paren_level_char: char;\n    let mut paren_level_chars:\
    \ Vec<char>;\n    let mut paren_level_char: char;\n    let mut paren_level_chars:\
    \ Vec<char>;\n    let mut paren_level_char: char;\n    let mut paren_level_chars:\
    \ Vec<char>;\n    let mut paren_level_char: char;\n    let mut paren_level_chars:\
    \ Vec<char>;\n    let mut paren_level_char: char;\n    let mut paren_level_chars:\
    \ Vec<char>;\n    let mut paren_level_char: char;\n    let mut paren_level_chars:\
    \ Vec<char>;\n    let mut paren_level_char: char;\n    let mut paren_level_chars:\
    \ Vec<char>;\n    let mut paren_level_char: char;\n    let mut paren_level_chars:\
    \ Vec<char>;\n    let mut paren_level_char: char;\n    let mut paren_level_chars:\
    \ Vec<char>;\n    let mut paren_level_char: char;\n    let mut paren_level_chars:\
    \ Vec<char>;\n    let mut paren_level_char: char;\n    let mut paren_level_chars:\
    \ Vec<char>;\n    let mut paren_level_char: char;\n    let mut paren_level_chars:\
    \ Vec<char>;\n    let mut paren_level_char: char;\n    let mut paren_level_chars:\
    \ Vec<char>;\n    let mut paren_level_char: char;\n    let mut paren_level_chars:\
    \ Vec<char>;\n", "    let mut paren_levels = Vec::new();\n    let mut paren_level\
    \ = 0;\n    let mut paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_ptr\
    \ = 0;\n    let mut paren_levels_stack_len = paren_levels_stack.len();\n    let\
    \ mut paren_levels_stack_top = paren_levels_stack_ptr;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_top = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_ptr;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_ptr;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_top = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_ptr;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_ptr;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_top = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_ptr;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_ptr;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_top = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_ptr;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_ptr;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_top = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_ptr;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_ptr;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_top = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_ptr;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_ptr;\n    let mut paren_levels_stack_bottom\
    \ = paren_level", "    let mut level = 0;\n    let mut paren_stack = Vec::new();\n\
    \    let mut paren_stack_len = paren_string.len();\n    let mut paren_stack_pos\
    \ = 0;\n    let mut paren_stack_char = paren_string[paren_stack_pos];\n    while\
    \ paren_stack_pos < paren_string.len() {\n        if paren_stack_char == ')' {\n\
    \            paren_stack.pop();\n            paren_stack_len -= paren_stack.len();\n\
    \            paren_stack_pos += 1;\n            level -= 1;\n        } else if\
    \ paren_stack_char == '(' {\n            paren_stack.push(level);\n          \
    \  paren_stack_len += 1;\n            paren_stack_pos += 1;\n            level\
    \ += 1;\n        } else {\n            paren_stack_pos += 1;\n        }\n    \
    \    paren_stack_char = paren_string[paren_stack_pos];\n    }\n    paren_stack",
  "    let mut level = 0;\n    let mut paren_stack: Vec<isize> = vec![];\n    for\
    \ paren in paren_string.chars() {\n        if paren == '(' {\n            paren_stack.push(level);\n\
    \            level += 1;\n        } else if paren == ')' {\n            level\
    \ -= 1;\n            if level == 0 {\n                paren_stack.pop();\n   \
    \         }\n        } else {\n            level += 1;\n        }\n    }\n   \
    \ paren_stack", "    let mut levels = Vec::new();\n    let mut paren_count = 0;\n\
    \    let mut paren_level = 0;\n    let mut paren_nesting = 0;\n    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_ptr\
    \ = 0;\n    let mut paren_levels_ptr = paren_levels_stack.as_mut_ptr();\n    let\
    \ mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len()\
    \ - 1);\n    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len()\
    \ - 1);\n    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len()\
    \ - 1);\n    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len()\
    \ - 1);\n    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len()\
    \ - 1);\n    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len()\
    \ - 1);\n    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len()\
    \ - 1);\n    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len()\
    \ - 1);\n    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len()\
    \ - 1);\n    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len()\
    \ - 1);\n    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len()\
    \ - 1);\n    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len()\
    \ - 1);\n    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len()\
    \ - 1);\n    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len()\
    \ - 1);\n    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len()\
    \ - 1);\n    let mut paren_levels_ptr_end = paren_levels_ptr.", "    let mut level\
    \ = 0;\n    let mut paren_levels = Vec::new();\n    let mut paren_levels_stack\
    \ = Vec::new();\n    let mut paren_levels_stack_size = Vec::new();\n    let mut\
    \ paren_levels_stack_ptr = Vec::new();\n    let mut paren_levels_stack_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr = Vec::new();\n  \
    \  let mut paren_levels_stack_ptr_ptr_ptr_ptr = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n  \
    \  let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr =\
    \ Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new", "    let mut paren_levels = Vec::new();\n    let mut paren_level\
    \ = 0;\n    let mut paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_ptr\
    \ = 0;\n    let mut paren_levels_stack_ptr_max = paren_levels_stack.len();\n \
    \   let mut paren_levels_stack_ptr_cur = 0;\n    let mut paren_levels_stack_ptr_max2\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_cur2 = 0;\n\
    \    let mut paren_levels_stack_ptr_max3 = paren_levels_stack.len();\n    let\
    \ mut paren_levels_stack_ptr_cur3 = 0;\n    let mut paren_levels_stack_ptr_max4\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_cur4 = 0;\n\
    \    let mut paren_levels_stack_ptr_max5 = paren_levels_stack.len();\n    let\
    \ mut paren_levels_stack_ptr_cur5 = 0;\n    let mut paren_levels_stack_ptr_max6\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_cur6 = 0;\n\
    \    let mut paren_levels_stack_ptr_max7 = paren_levels_stack.len();\n    let\
    \ mut paren_levels_stack_ptr_cur7 = 0;\n    let mut paren_levels_stack_ptr_max8\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_cur8 = 0;\n\
    \    let mut paren_levels_stack_ptr_max9 = paren_levels_stack.len();\n    let\
    \ mut paren_levels_stack_ptr_cur9 = 0;\n    let mut paren_levels_stack_ptr_max10\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_cur10 = 0;\n\
    \    let mut paren_levels_stack_ptr_max11 = paren_levels_stack.len();\n    let\
    \ mut paren_levels_stack_ptr_cur11 = 0;\n    let mut paren_levels_stack_ptr_max12\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_cur12 = 0;\n\
    \    let mut paren_levels_stack_ptr_max13 = paren_levels_stack.len();\n    let\
    \ mut paren_levels_stack_ptr_cur13 = 0;\n    let mut paren_levels_stack_ptr_max14\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr", "    let mut\
    \ paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_level_index\
    \ = 0;\n    let mut paren_level_indexes: Vec<isize> = Vec::new();\n    let mut\
    \ paren_level_indexes_len = 0;\n    let mut paren_level_indexes_len_index = 0;\n\
    \    let mut paren_level_indexes_len_indexes = 0;\n    let mut paren_level_indexes_len_indexe\
    \ = 0;\n    let mut paren_level_indexes_len_index = 0;\n    let mut paren_level_indexes_len_indexe\
    \ = 0;\n    let mut paren_level_indexes_len_indexe = 0;\n    let mut paren_level_indexes_len_indexe\
    \ = 0;\n    let mut paren_level_indexes_len_indexe = 0;\n    let mut paren_level_indexes_len_indexe\
    \ = 0;\n    let mut paren_level_indexes_len_indexe = 0;\n    let mut paren_level_indexes_len_indexe\
    \ = 0;\n    let mut paren_level_indexes_len_indexe = 0;\n    let mut paren_level_indexes_len_indexe\
    \ = 0;\n    let mut paren_level_indexes_len_indexe = 0;\n    let mut paren_level_indexes_len_indexe\
    \ = 0;\n    let mut paren_level_indexes_len_indexe = 0;\n    let mut paren_level_indexes_len_indexe\
    \ = 0;\n    let mut paren_level_indexes_len_indexe = 0;\n    let mut paren_level_indexes_len_indexe\
    \ = 0;\n    let mut paren_level_indexes_len_indexe = 0;\n    let mut paren_level_indexes_len_indexe\
    \ = 0;\n    let mut paren_level_indexes_len_indexe = 0;\n    let mut paren_level_indexes_len_indexe\
    \ = 0;\n    let mut paren_level_indexes_len_indexe = 0;\n    let mut paren_level_indexes_len_indexe\
    \ = 0;\n    let mut paren_level_indexes_len_indexe = 0;\n    let mut paren_level_indexes_len_indexe\
    \ = 0;\n    let mut paren_level_indexes_len_indexe = 0;\n    let mut paren_level_indexes_len_indexe\
    \ = 0;\n    let mut paren_level_indexes_len_indexe = 0;\n    let mut paren_level_indexes_len_indexe\
    \ = 0;\n    let mut paren_level_indexes_len_indexe = 0;\n    let mut paren_level_indexes_len_indexe\
    \ = 0;\n    let mut paren_level_indexes_len_indexe = 0;\n    let mut paren_level_indexes_len_indexe\
    \ = 0;", "    let mut level = 0;\n    let mut paren_stack = Vec::new();\n    let\
    \ mut paren_stack_len = paren_string.len();\n    let mut paren_stack_pos = 0;\n\
    \    let mut paren_stack_len = paren_string.len();\n    let mut paren_stack_pos\
    \ = 0;\n    let mut paren_stack_len = paren_string.len();\n    let mut paren_stack_pos\
    \ = 0;\n    let mut paren_stack_len = paren_string.len();\n    let mut paren_stack_pos\
    \ = 0;\n    let mut paren_stack_len = paren_string.len();\n    let mut paren_stack_pos\
    \ = 0;\n    let mut paren_stack_len = paren_string.len();\n    let mut paren_stack_pos\
    \ = 0;\n    let mut paren_stack_len = paren_string.len();\n    let mut paren_stack_pos\
    \ = 0;\n    let mut paren_stack_len = paren_string.len();\n    let mut paren_stack_pos\
    \ = 0;\n    let mut paren_stack_len = paren_string.len();\n    let mut paren_stack_pos\
    \ = 0;\n    let mut paren_stack_len = paren_string.len();\n    let mut paren_stack_pos\
    \ = 0;\n    let mut paren_stack_len = paren_string.len();\n    let mut paren_stack_pos\
    \ = 0;\n    let mut paren_stack_len = paren_string.len();\n    let mut paren_stack_pos\
    \ = 0;\n    let mut paren_stack_len = paren_string.len();\n    let mut paren_stack_pos\
    \ = 0;\n    let mut paren_stack_len = paren_string.len();\n    let mut paren_stack_pos\
    \ = 0;\n    let mut paren_stack_len = paren_string.len();\n    let mut paren_stack_pos\
    \ = 0;\n    let mut paren_stack_len = paren_string.len();\n    let mut paren_stack_pos\
    \ = 0;\n    let mut paren_stack_len = paren_string.len();\n    let mut paren_stack_pos\
    \ = 0;\n    let mut paren_stack_len = paren_string.len();\n    let mut paren_stack_pos\
    \ = 0;\n    let mut paren_stack_len = paren_string.len();\n    let mut paren_stack_pos\
    \ = 0;\n    let mut paren_stack_len = paren_string.len();\n    let mut paren_stack_pos\
    \ = 0;\n    let mut paren_stack_len = paren_string.len();\n    let mut paren_stack_pos\
    \ = 0;\n    let mut paren_stack_len = paren_string.len();\n    let mut paren_stack_pos\
    \ = 0;\n    let mut paren_stack_len = paren_string.", "    let mut paren_stack:\
    \ Vec<isize> = vec![];\n    let mut paren_level: usize = 0;\n    let mut paren_levels:\
    \ Vec<isize> = vec![];\n    let mut paren_levels_len: usize = 0;\n    let mut\
    \ paren_levels_lens: Vec<isize> = vec![];\n    let mut paren_levels_lens_len:\
    \ usize = 0;\n    let mut paren_levels_lens_lens: Vec<isize> = vec![];\n    let\
    \ mut paren_levels_lens_lens_len: usize = 0;\n    let mut paren_levels_lens_lens_lens:\
    \ Vec<isize> = vec![];\n    let mut paren_levels_lens_lens_lens_len: usize = 0;\n\
    \    let mut paren_levels_lens_lens_lens_lens: Vec<isize> = vec![];\n    let mut\
    \ paren_levels_lens_lens_lens_lens_len: usize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens:\
    \ Vec<isize> = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_len:\
    \ usize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens: Vec<isize>\
    \ = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_len: usize\
    \ = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens: Vec<isize>\
    \ = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_len:\
    \ usize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens:\
    \ Vec<isize> = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens:\
    \ Vec<isize> = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens:\
    \ Vec<isize> = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_",
  "    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_level_count = 0;\n    let mut paren_level_char_count = 0;\n    let mut\
    \ paren_level_chars = Vec::new();\n    let mut paren_level_char: char;\n    let\
    \ mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_len = paren_level_char_count + paren_level_char_count;\n\
    \    let mut paren_level_char_pos = paren_level_char_len;\n    let mut paren_level_char_pos\
    \ = paren_level_char_len;\n    let mut paren_level_char_pos = paren_level_char_len;\n\
    \    let mut paren_level_char_pos = paren_level_char_len;\n    let mut paren_level_char_pos\
    \ = paren_level_char_len;\n    let mut paren_level_char_pos = paren_level_char_len;\n\
    \    let mut paren_level_char_pos = paren_level_char_len;\n    let mut paren_level_char_pos\
    \ = paren_level_char_len;\n    let mut paren_level_char_pos = paren_level_char_len;\n\
    \    let mut paren_level_char_pos = paren_level_char_len;\n    let mut paren_level_char_pos\
    \ = paren_level_char_len;\n    let mut paren_level_char_pos = paren_level_char_len;\n\
    \    let mut paren_level_char_pos = paren_level_char_len;\n    let mut paren_level_char_pos\
    \ = paren_level_char_len;\n    let mut paren_level_char_pos = paren_level_char_len;\n\
    \    let mut paren_level_char_pos = paren_level_char_len;\n    let mut paren_level_char_pos\
    \ = paren_level_char_len;\n    let mut paren_level_char_pos = paren_level_char_len;\n\
    \    let mut paren_level_char_pos = paren_level_char_len;\n    let mut paren_level_char_pos\
    \ = paren_level_char_len;\n    let mut paren_level_char_pos = paren_level_char_len;\n\
    \    let mut paren_level_char_pos = paren_level_char_len;\n    let mut paren_level_char_pos\
    \ = paren_level_char_len;\n    let mut paren_level_char_pos = paren_level_char_len;\n\
    \    let mut paren_level_char_pos = paren_level_char_len;\n    let mut paren_level_char_pos\
    \ = paren_level_char_len;\n    let mut paren_level_char_pos = paren_level_char_len;\n\
    \    let mut paren_level_char_pos = paren_level_char_len;\n    let mut paren_level_char_pos\
    \ = paren_", "    let mut paren_levels = Vec::new();\n    let mut paren_level\
    \ = 0;\n    let mut paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_level",
  "    let mut paren_levels = vec![];\n    let mut paren_level = 0;\n    let mut paren_levels_stack\
    \ = vec![];\n    let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_size\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack", "    let mut levels\
    \ = Vec::new();\n    let mut paren_stack = Vec::new();\n    let mut paren_level\
    \ = 0;\n    let mut paren_level_count = 0;\n    let mut paren_level_max_count\
    \ = 0;\n    let mut paren_level_max_count_index = 0;\n    let mut paren_level_max_count_index2\
    \ = 0;\n    let mut paren_level_max_count_index3 = 0;\n    let mut paren_level_max_count_index4\
    \ = 0;\n    let mut paren_level_max_count_index5 = 0;\n    let mut paren_level_max_count_index6\
    \ = 0;\n    let mut paren_level_max_count_index7 = 0;\n    let mut paren_level_max_count_index8\
    \ = 0;\n    let mut paren_level_max_count_index9 = 0;\n    let mut paren_level_max_count_index10\
    \ = 0;\n    let mut paren_level_max_count_index11 = 0;\n    let mut paren_level_max_count_index12\
    \ = 0;\n    let mut paren_level_max_count_index13 = 0;\n    let mut paren_level_max_count_index14\
    \ = 0;\n    let mut paren_level_max_count_index15 = 0;\n    let mut paren_level_max_count_index16\
    \ = 0;\n    let mut paren_level_max_count_index17 = 0;\n    let mut paren_level_max_count_index18\
    \ = 0;\n    let mut paren_level_max_count_index19 = 0;\n    let mut paren_level_max_count_index20\
    \ = 0;\n    let mut paren_level_max_count_index21 = 0;\n    let mut paren_level_max_count_index22\
    \ = 0;\n    let mut paren_level_max_count_index23 = 0;\n    let mut paren_level_max_count_index24\
    \ = 0;\n    let mut paren_level_max_count_index25 = 0;\n    let mut paren_level_max_count_index26\
    \ = 0;\n    let mut paren_level_max_count_index27 = 0;\n    let mut paren_level_max_count_index28\
    \ = 0;\n    let mut paren_level_max_count_index29 = 0;\n    let mut paren_level_max_count_index30\
    \ = 0;\n    let mut paren_level_max_count_index31 = 0;\n    let mut paren_level_max_count_index32\
    \ = 0;\n    let mut paren_level_max_count_index33 = 0;\n    let mut paren_level_max_count_index34\
    \ = 0;\n    let mut paren_level_max_count_index35 = 0;\n    let mut paren_level_max_count_index36\
    \ = 0;\n    let mut paren_level_max_count_index37 = 0;\n    let mut paren_level_max_count_index38\
    \ = 0;\n    let mut paren_level_max_count_index39 = 0;\n    let ", "    let mut\
    \ paren_levels = vec![];\n    let mut paren_level = 0;\n    let mut paren_levels_stack\
    \ = vec![];\n    let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_size\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack", "    let mut paren_stack:\
    \ Vec<isize> = vec![];\n    let mut paren_level: usize = 0;\n    let mut paren_levels:\
    \ Vec<isize> = vec![];\n    let mut paren_levels_len: usize = 0;\n    let mut\
    \ paren_levels_lens: Vec<isize> = vec![];\n    let mut paren_levels_lens_len:\
    \ usize = 0;\n    let mut paren_levels_lens_lens: Vec<isize> = vec![];\n    let\
    \ mut paren_levels_lens_lens_len: usize = 0;\n    let mut paren_levels_lens_lens_lens:\
    \ Vec<isize> = vec![];\n    let mut paren_levels_lens_lens_lens_len: usize = 0;\n\
    \    let mut paren_levels_lens_lens_lens_lens: Vec<isize> = vec![];\n    let mut\
    \ paren_levels_lens_lens_lens_lens_len: usize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens:\
    \ Vec<isize> = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_len:\
    \ usize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens: Vec<isize>\
    \ = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_len: usize\
    \ = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens: Vec<isize>\
    \ = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_len:\
    \ usize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens:\
    \ Vec<isize> = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_:\
    \ usize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens:\
    \ Vec<isize> = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_len",
  "    let mut paren_stack: Vec<isize> = vec![];\n    let mut paren_level: isize =\
    \ 0;\n    let mut paren_levels: Vec<isize> = vec![];\n    let mut paren_levels_len:\
    \ isize = 0;\n    let mut paren_levels_lens: Vec<isize> = vec![];\n    let mut\
    \ paren_levels_lens_len: isize = 0;\n    let mut paren_levels_lens_lens: Vec<isize>\
    \ = vec![];\n    let mut paren_levels_lens_lens_len: isize = 0;\n    let mut paren_levels_lens_lens_lens:\
    \ Vec<isize> = vec![];\n    let mut paren_levels_lens_lens_lens_len: isize = 0;\n\
    \    let mut paren_levels_lens_lens_lens_lens: Vec<isize> = vec![];\n    let mut\
    \ paren_levels_lens_lens_lens_lens_len: isize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens:\
    \ isize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_len: isize = 0;\n\
    \    let mut paren_levels_lens_lens_lens_lens_lens_lens: isize = 0;\n    let mut\
    \ paren_levels_lens_lens_lens_lens_lens_lens_len: isize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_:\
    \ isize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_:\
    \ isize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_:\
    \ isize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_:\
    \ isize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_:\
    \ isize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_:\
    \ isize = 0;\n    let mut paren_levels_lens_lens_lens_len", "    let mut level\
    \ = 0;\n    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n\
    \    let mut paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n", "    let mut levels =\
    \ Vec::new();\n    let mut level = 0;\n    let mut paren_chars = paren_string.chars();\n\
    \    let mut paren_chars_iter = paren_chars.iter();\n    let mut paren_chars_next\
    \ = paren_chars_iter.next();\n    while paren_chars_next.is_some() {\n       \
    \ if paren_chars_next.unwrap() == '(' {\n            level += 1;\n        }\n\
    \        if paren_chars_next.unwrap() == ')' {\n            level -= 1;\n    \
    \    }\n        levels.push(level);\n        paren_chars = paren_chars.chain(paren_chars_iter);\n\
    \        paren_chars_next = paren_chars_iter.next();\n    }\n    levels", "  \
    \  let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_level_index = 0;\n    let mut paren_level_string = paren_string;\n   \
    \ let mut paren_level_string_index = 0;\n    while paren_level_string_index <\
    \ paren_string.len() {\n        let mut paren_level_string = paren_string;\n \
    \       let mut paren_level_string_index = 0;\n        while paren_level_string_index\
    \ < paren_string.len() {\n            let mut paren_level_string = paren_string;\n\
    \            let mut paren_level_string_index = 0;\n            while paren_level_string_index\
    \ < paren_string.len() {\n                let mut paren_level_string = paren_string;\n\
    \                let mut paren_level_string_index = 0;\n                while\
    \ paren_level_string_index < paren_string.len() {\n                    let mut\
    \ paren_level_string = paren_string;\n                    let mut paren_level_string_index\
    \ = 0;\n                    while paren_level_string_index < paren_string.len()\
    \ {\n                        let mut paren_level_string = paren_string;\n    \
    \                    let mut paren_level_string_index = 0;\n                 \
    \       while paren_level_string_index < paren_string.len() {\n              \
    \              let mut paren_level_string = paren_string;\n                  \
    \          let mut paren_level_string_index = 0;\n                           \
    \ while paren_level_string_index < paren_string.len() {\n                    \
    \            let mut paren_level_string = paren_string;\n                    \
    \            let mut paren_level_string_index = 0;\n                         \
    \       while paren_level_string_index < paren_string.len() {\n              \
    \                      let mut paren_level_string = paren_string;\n          \
    \                          let mut paren_level_string_index = 0;\n           \
    \                         while paren_level_string_index < paren_string.len()\
    \ {\n                                        let mut paren_level_string = paren_string;\n\
    \                                        let mut paren_level_string_index = 0;\n\
    \                                        while paren_level_string_index < paren_string.len()\
    \ {\n                                            let mut paren_level_string =\
    \ paren_string;\n                                            let mut paren_level_string_index\
    \ = 0;\n                                            while paren_level_string_index\
    \ < paren_string.len() {\n                                                let\
    \ mut paren_level_string = paren_string;\n                                   \
    \             let mut paren_level_string_index = 0;\n                        \
    \                        while paren_level_string_index < paren_string.len() {\n\
    \                                                    let mut paren_level_string\
    \ = paren_string;\n                                                    let mut\
    \ paren_level_string_index = 0;\n                                            \
    \        while paren_level_string_index < paren_string.len() {", "    let mut\
    \ level = 0;\n    let mut paren_levels = Vec::new();\n    let mut paren_level\
    \ = 0;\n    let mut paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_pos\
    \ = 0;\n    let mut paren_levels_stack_size = paren_levels_stack.len();\n    let\
    \ mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_",
  "    let mut level = 0usize;\n    let mut paren_level = 0usize;\n    let mut paren_nesting\
    \ = 0usize;\n    let mut paren_nesting_level = 0usize;\n    let mut paren_nesting_nesting\
    \ = 0usize;\n    let mut paren_nesting_nesting_level = 0usize;\n    let mut paren_nesting_nesting_nesting\
    \ = 0usize;\n    let mut paren_nesting_nesting_nesting_level = 0usize;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting = 0usize;\n    let mut paren_nesting_nesting_nesting_level\
    \ = 0usize;\n    let mut paren_nesting_nesting_nesting_nesting = 0usize;\n   \
    \ let mut paren_nesting_nesting_nesting_level = 0usize;\n    let mut paren_nesting_nesting_nesting_nesting\
    \ = 0usize;\n    let mut paren_nesting_nesting_nesting_level = 0usize;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting = 0usize;\n    let mut paren_nesting_nesting_nesting_level\
    \ = 0usize;\n    let mut paren_nesting_nesting_nesting = 0usize;\n    let mut\
    \ paren_nesting_nesting_level = 0usize;\n    let mut paren_nesting_nesting = 0usize;\n\
    \    let mut paren_nesting_level = 0usize;\n    let mut paren_level = 0usize;\n\
    \    let mut paren_nesting = 0usize;\n    let mut paren_nesting_level = 0usize;\n\
    \    let mut paren_nesting_nesting = 0usize;\n    let mut paren_nesting_nesting_level\
    \ = 0usize;\n    let mut paren_nesting_nesting_nesting = 0usize;\n    let mut\
    \ paren_nesting_nesting_nesting_level = 0usize;\n    let mut paren_nesting_nesting_nesting_level\
    \ = 0usize;\n    let mut paren_nesting_nesting_nesting_level = 0usize;\n    let\
    \ mut paren_nesting_nesting_nesting_level = 0usize;\n    let mut paren_nesting_nesting_nesting_level\
    \ = 0usize;\n    let mut paren_nesting_nesting_nesting_level = 0usize;\n    let\
    \ mut paren_nesting_nesting_nesting_level = 0usize;\n    let mut paren_nesting_nesting_nesting_level\
    \ = 0usize;\n    let mut paren_nesting_nesting_nesting_level = 0usize;\n    let\
    \ mut paren_nesting_nest", "    let mut paren_levels = Vec::new();\n    let mut\
    \ paren_level = 0;\n    let mut paren_levels_stack = Vec::new();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_level", "    let mut paren_stack: Vec<isize> = vec![];\n  \
    \  let mut paren_level: isize = 0;\n    let mut paren_level_count: isize = 0;\n\
    \    for paren in paren_string.chars() {\n        if paren == ')' {\n        \
    \    paren_stack.push(paren_level);\n            paren_level_count = paren_level_count;\n\
    \            paren_level_count = paren_level_count + 1;\n        } else if paren\
    \ == '(' {\n            paren_stack.push(paren_level);\n            paren_level_count\
    \ = paren_level_count;\n            paren_level_count = paren_level_count - 1;\n\
    \        } else {\n            paren_level_count = paren_level_count;\n      \
    \  }\n    }\n    paren_stack.push(paren_level_count);\n    paren_stack", "   \
    \ let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_level_index = 0;\n    let mut paren_level_char = 0;\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_char_length = 0;\n    let mut paren_level_char_length_index\
    \ = 0;\n    let mut paren_level_char_length_value = 0;\n    let mut paren_level_char_length_value_index\
    \ = 0;\n    let mut paren_level_char_length_value_index = 0;\n    let mut paren_level_char_length_value_index\
    \ = 0;\n    let mut paren_level_char_length_value_index = 0;\n    let mut paren_level_char_length_value_index\
    \ = 0;\n    let mut paren_level_char_length_value_index = 0;\n    let mut paren_level_char_length_value_index\
    \ = 0;\n    let mut paren_level_char_length_value_index = 0;\n    let mut paren_level_char_length_value_index\
    \ = 0;\n    let mut paren_level_char_length_value_index = 0;\n    let mut paren_level_char_length_value_index\
    \ = 0;\n    let mut paren_level_char_length_value_index = 0;\n    let mut paren_level_char_length_value_index\
    \ = 0;\n    let mut paren_level_char_length_value_index = 0;\n    let mut paren_level_char_length_value_index\
    \ = 0;\n    let mut paren_level_char_length_value_index = 0;\n    let mut paren_level_char_length_value_index\
    \ = 0;\n    let mut paren_level_char_length_value_index = 0;\n    let mut paren_level_char_length_value_index\
    \ = 0;\n    let mut paren_level_char_length_value_index = 0;\n    let mut paren_level_char_length_value_index\
    \ = 0;\n    let mut paren_level_char_length_value_index = 0;\n    let mut paren_level_char_length_value_index\
    \ = 0;\n    let mut paren_level_char_length_value_index = 0;\n    let mut paren_level_char_length_value_index\
    \ = 0;\n    let mut paren_level_char_length_value_index = 0;\n    let mut paren_level_char_length_value_index\
    \ = 0;\n    let mut paren_level_char_length_value_index = 0;\n    let mut paren_level_char_length_value_index\
    \ = 0;\n    let mut paren_level_char_length_value_index = 0;\n    let mut paren_level_char_length_value_index\
    \ = 0;\n    let mut paren_level_char_length_value_index = 0;\n    let mut paren_level_char_length_value_index\
    \ = 0;\n    let mut paren_level_char_length_value_index = 0;\n    let mut paren_level_char_length_value_index\
    \ = 0;\n    let mut paren_level_char_length_value_index = 0;\n", "    let mut\
    \ levels = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_levels_len = paren_string.len();\n    let mut\
    \ paren_levels_pos = 0;\n    let mut paren_levels_len = paren_string.len();\n\
    \    let mut paren_levels_pos = 0;\n    let mut paren_levels_len = paren_string.len();\n\
    \    let mut paren_levels_pos = 0;\n    let mut paren_levels_len = paren_string.len();\n\
    \    let mut paren_levels_pos = 0;\n    let mut paren_levels_len = paren_string.len();\n\
    \    let mut paren_levels_pos = 0;\n    let mut paren_levels_len = paren_string.len();\n\
    \    let mut paren_levels_pos = 0;\n    let mut paren_levels_len = paren_string.len();\n\
    \    let mut paren_levels_pos = 0;\n    let mut paren_levels_len = paren_string.len();\n\
    \    let mut paren_levels_pos = 0;\n    let mut paren_levels_len = paren_string.len();\n\
    \    let mut paren_levels_pos = 0;\n    let mut paren_levels_len = paren_string.len();\n\
    \    let mut paren_levels_pos = 0;\n    let mut paren_levels_len = paren_string.len();\n\
    \    let mut paren_levels_pos = 0;\n    let mut paren_levels_len = paren_string.len();\n\
    \    let mut paren_levels_pos = 0;\n    let mut paren_levels_len = paren_string.len();\n\
    \    let mut paren_levels_pos = 0;\n    let mut paren_levels_len = paren_string.len();\n\
    \    let mut paren_levels_pos = 0;\n    let mut paren_levels_len = paren_string.len();\n\
    \    let mut paren_levels_pos = 0;\n    let mut paren_levels_len = paren_string.len();\n\
    \    let mut paren_levels_pos = 0;\n    let mut paren_levels_len = paren_string.len();\n\
    \    let mut paren_levels_pos = 0;\n    let mut paren_levels_len = paren_string.len();\n\
    \    let mut paren_levels_pos = 0;\n    let mut paren_levels_len = paren_string.len();\n\
    \    let mut paren_levels_pos = 0;\n    let mut paren_levels_len = paren_string.len();\n\
    \    let mut paren_levels_pos = 0;\n    let mu", "    let mut paren_stack: Vec<isize>\
    \ = vec![];\n    let mut paren_level: isize = 0;\n    let mut paren_levels: Vec<isize>\
    \ = vec![];\n    let mut paren_levels_len: isize = 0;\n    let mut paren_levels_lens:\
    \ Vec<isize> = vec![];\n    let mut paren_levels_lens_len: isize = 0;\n    let\
    \ mut paren_levels_lens_lens: Vec<isize> = vec![];\n    let mut paren_levels_lens_lens_len:\
    \ isize = 0;\n    let mut paren_levels_lens_lens_lens: Vec<isize> = vec![];\n\
    \    let mut paren_levels_lens_lens_lens_len: isize = 0;\n    let mut paren_levels_lens_lens_lens_lens:\
    \ Vec<isize> = vec![];\n    let mut paren_levels_lens_lens_lens_lens_len: isize\
    \ = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens: isize = 0;\n    let\
    \ mut paren_levels_lens_lens_lens_lens_lens_len: isize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_len:\
    \ isize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_len:\
    \ isize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_len:\
    \ isize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_:\
    \ isize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_:\
    \ isize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_:\
    \ isize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_:\
    \ isize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_",
  "    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_ptr = 0;\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end_ptr\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end_ptr = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr_end_ptr = paren_levels_stack.len();\n    let\
    \ mut paren_levels_stack_ptr_end_ptr = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_ptr_end_ptr = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end_ptr\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end_ptr = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr_end_ptr = paren_levels_stack.len();\n    let\
    \ mut paren_levels_stack_ptr_end_ptr = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_ptr_end_ptr = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end_ptr\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end_ptr = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr_end_ptr = paren_levels_stack.len();\n    let\
    \ mut paren_levels_stack_ptr_end_ptr = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_ptr_end_ptr = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end_ptr\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end_ptr = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr_end_ptr = paren_levels_stack.len();\n    let\
    \ mut paren_levels_stack_ptr_end_ptr = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_ptr_end_ptr = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr",
  "    let mut level = 0;\n    let mut paren_level = 0;\n    let mut paren_nesting\
    \ = 0;\n    let mut paren_nesting_level = 0;\n    let mut paren_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level", "    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_levels_stack\
    \ = Vec::new();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_level",
  "    let mut paren_levels = vec![];\n    let mut paren_level = 0;\n    let mut paren_nesting\
    \ = 0;\n    let mut paren_nesting_level = 0;\n    let mut paren_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_", "    let mut paren_stack: Vec<isize> = vec![];\n\
    \    let mut paren_level: isize = 0;\n    let mut paren_level_count: usize = 0;\n\
    \    let mut paren_level_char: char = '(';\n    for paren in paren_string.chars()\
    \ {\n        if paren_level_char == paren {\n            paren_level_count +=\
    \ 1;\n        } else {\n            paren_level_count -= 1;\n            if paren_level_count\
    \ == 0 {\n                paren_stack.push(paren_level);\n                paren_level_count\
    \ = 1;\n                paren_level_char = paren;\n            }\n        }\n\
    \    }\n    paren_stack.push(paren_level);\n    paren_stack", "    let mut level\
    \ = 0;\n    let mut paren_level = 0;\n    let mut paren_nesting = 0;\n    let\
    \ mut paren_nesting_level = 0;\n    let mut paren_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level", "    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_level_count =\
    \ 0;\n    let mut paren_level_char_count = 0;\n    let mut paren_level_char =\
    \ 0;\n    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_pos_count\
    \ = 0;\n    let mut paren_level_char_pos_char = 0;\n    let mut paren_level_char_pos_char_pos\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_count = 0;\n    let mut paren_level_char_pos_char_pos_char\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_count\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char = 0;\n    let\
    \ mut paren_level_char_pos_char_pos_char_pos_char_pos = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos_count\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char = 0;\n\
    \    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos = 0;\n \
    \   let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_count = 0;\n\
    \    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_char = 0;\n\
    \    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_count\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_count\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_count\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_count\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_",
  "    let mut paren_stack: Vec<isize> = vec![];\n    let mut paren_level: isize =\
    \ 0;\n    let mut paren_level_count: isize = 0;\n    let mut paren_level_max:\
    \ isize = 0;\n    let mut paren_level_max_count: isize = 0;\n    let mut paren_level_max_count:\
    \ isize = 0;\n    let mut paren_level_max_count: isize = 0;\n    let mut paren_level_max_count:\
    \ isize = 0;\n    let mut paren_level_max_count: isize = 0;\n    let mut paren_level_max_count:\
    \ isize = 0;\n    let mut paren_level_max_count: isize = 0;\n    let mut paren_level_max_count:\
    \ isize = 0;\n    let mut paren_level_max_count: isize = 0;\n    let mut paren_level_max_count:\
    \ isize = 0;\n    let mut paren_level_max_count: isize = 0;\n    let mut paren_level_max_count:\
    \ isize = 0;\n    let mut paren_level_max_count: isize = 0;\n    let mut paren_level_max_count:\
    \ isize = 0;\n    let mut paren_level_max_count: isize = 0;\n    let mut paren_level_max_count:\
    \ isize = 0;\n    let mut paren_level_max_count: isize = 0;\n    let mut paren_level_max_count:\
    \ isize = 0;\n    let mut paren_level_max_count: isize = 0;\n    let mut paren_level_max_count:\
    \ isize = 0;\n    let mut paren_level_max_count: isize = 0;\n    let mut paren_level_max_count:\
    \ isize = 0;\n    let mut paren_level_max_count: isize = 0;\n    let mut paren_level_max_count:\
    \ isize = 0;\n    let mut paren_level_max_count: isize = 0;\n    let mut paren_level_max_count:\
    \ isize = 0;\n    let mut paren_level_max_count: isize = 0;\n    let mut paren_level_max_count:\
    \ isize = 0;\n    let mut paren_level_max_count: isize = 0;\n    let mut paren_level_max_count:\
    \ isize = 0;\n    let mut paren_level_max_count: isize = 0;\n    let mut paren_level_max_count:\
    \ isize = 0;\n    let mut paren_level_max_count: isize = 0;\n    let mut paren_level_max_count:\
    \ isize = 0;\n    let mut paren_level_max_count: isize = 0;\n    let mut paren_level_max_count:\
    \ isize = 0;\n    let mut paren_level_max_count: isize = 0;\n    let mut paren_level_max_count:\
    \ isize = 0;\n    let mut paren", "    let mut paren_levels = Vec::new();\n  \
    \  let mut paren_level = 0;\n    let mut paren_level_index = 0;\n    let mut paren_level_indexes:\
    \ Vec<isize> = Vec::new();\n    let mut paren_level_indexes_len = 0;\n    let\
    \ mut paren_level_indexes_len_index = 0;\n    let mut paren_level_indexes_len_indexes\
    \ = 0;\n    let mut paren_level_indexes_len_indexe = 0;\n    let mut paren_level_indexes_len_indexes_len\
    \ = 0;\n    let mut paren_level_indexes_len_indexes_len_index = 0;\n    let mut\
    \ paren_level_indexes_len_indexes_len_indexes = 0;\n    let mut paren_level_indexes_len_indexes_len_indexe\
    \ = 0;\n    let mut paren_level_indexes_len_indexes_len_indexes_len = 0;\n   \
    \ let mut paren_level_indexes_len_indexes_len_indexes_len_index = 0;\n    let\
    \ mut paren_level_indexes_len_indexes_len_indexes_len_indexes = 0;\n    let mut\
    \ paren_level_indexes_len_indexes_len_indexes_len_indexe = 0;\n    let mut paren_level_indexes_len_indexes_len_indexes_len_indexes_len\
    \ = 0;\n    let mut paren_level_indexes_len_indexes_len_indexes_len_indexes_len_index\
    \ = 0;\n    let mut paren_level_indexes_len_indexes_len_indexes_len_indexes_len_indexes\
    \ = 0;\n    let mut paren_level_indexes_len_indexes_len_indexes_len_indexes_len_indexe\
    \ = 0;\n    let mut paren_level_indexes_len_indexes_len_indexes_len_indexes_len_indexes_len\
    \ = 0;\n    let mut paren_level_indexes_len_indexes_len_indexes_len_indexes_len_indexes_len_index\
    \ = 0;\n    let mut paren_level_indexes_len_indexes_len_indexes_len_indexes_len_indexes_len_indexes\
    \ = 0;\n    let mut paren_level_indexes_len_indexes_len_indexes_len_indexes_len_indexes_len_index\
    \ = 0;\n    let mut paren_level_indexes_len_indexes_len_indexes_len_indexes_len_indexes_len_indexes_len_index\
    \ = 0;\n    let mut paren_level_indexes_len_indexes_len_indexes_len_indexes_len_indexes_len_indexes_len_index\
    \ = 0;\n    let mut paren_level_indexes_len_indexes_len_indexes_len_indexes_len_indexes_len_indexes_len_indexes\
    \ = 0;\n    let mut paren_level_indexes_len_indexes_len_indexes_len_indexes_",
  "    let mut paren_stack = Vec::new();\n    let mut paren_depth = 0;\n    let mut\
    \ paren_level = 0;\n    let mut paren_level_count = 0;\n    let mut paren_level_char_count\
    \ = 0;\n    let mut paren_level_chars = Vec::new();\n    let mut paren_level_chars\
    \ = paren_level_chars.clone();\n    let mut paren_level_chars = paren_level_chars.clone();\n\
    \    let mut paren_level_chars = paren_level_chars.clone();\n    let mut paren_level_chars\
    \ = paren_level_chars.clone();\n    let mut paren_level_chars = paren_level_chars.clone();\n\
    \    let mut paren_level_chars = paren_level_chars.clone();\n    let mut paren_level_chars\
    \ = paren_level_chars.clone();\n    let mut paren_level_chars = paren_level_chars.clone();\n\
    \    let mut paren_level_chars = paren_level_chars.clone();\n    let mut paren_level_chars\
    \ = paren_level_chars.clone();\n    let mut paren_level_chars = paren_level_chars.clone();\n\
    \    let mut paren_level_chars = paren_level_chars.clone();\n    let mut paren_level_chars\
    \ = paren_level_chars.clone();\n    let mut paren_level_chars = paren_level_chars.clone();\n\
    \    let mut paren_level_chars = paren_level_chars.clone();\n    let mut paren_level_chars\
    \ = paren_level_chars.clone();\n    let mut paren_level_chars = paren_level_chars.clone();\n\
    \    let mut paren_level_chars = paren_level_chars.clone();\n    let mut paren_level_chars\
    \ = paren_level_chars.clone();\n    let mut paren_level_chars = paren_level_chars.clone();\n\
    \    let mut paren_level_chars = paren_level_chars.clone();\n    let mut paren_level_chars\
    \ = paren_level_chars.clone();\n    let mut paren_level_chars = paren_level_chars.clone();\n\
    \    let mut paren_level_chars = paren_level_chars.clone();\n    let mut paren_level_chars\
    \ = paren_level_chars.clone();\n    let mut paren_level_chars = paren_level_chars.clone();\n\
    \    let mut paren_level_chars = paren_level_chars.clone();\n    let mut paren_level_chars\
    \ = paren_level_chars.clone();\n    let mut paren_level_chars = paren_level_chars.clone();\n\
    \    let mut paren_level_chars = paren_level_chars.clone();\n    let mut ", " \
    \   let mut levels = Vec::new();\n    let mut paren_count = paren_string.chars().filter(|c|\
    \ *c != '(').count();\n    let mut paren_level = 0;\n    let mut paren_nesting\
    \ = 0;\n    let mut paren_nesting_level = 0;\n    let mut paren_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_nesting_", "    let\
    \ mut level = 0;\n    let mut paren_stack = vec![];\n    let mut paren_levels\
    \ = vec![];\n    let mut paren_level = 0;\n    let mut paren_level_count = 0;\n\
    \    let mut paren_level_stack = vec![];\n    let mut paren_level_stack_count\
    \ = 0;\n    let mut paren_level_stack_depth = 0;\n    let mut paren_level_stack_depth_max\
    \ = 0;\n    let mut paren_level_stack_depth_max_index = 0;\n    let mut paren_level_stack_depth_max_index2\
    \ = 0;\n    let mut paren_level_stack_depth_max_index3 = 0;\n    let mut paren_level_stack_depth_max_index4\
    \ = 0;\n    let mut paren_level_stack_depth_max_index5 = 0;\n    let mut paren_level_stack_depth_max_index6\
    \ = 0;\n    let mut paren_level_stack_depth_max_index7 = 0;\n    let mut paren_level_stack_depth_max_index8\
    \ = 0;\n    let mut paren_level_stack_depth_max_index9 = 0;\n    let mut paren_level_stack_depth_max_index10\
    \ = 0;\n    let mut paren_level_stack_depth_max_index11 = 0;\n    let mut paren_level_stack_depth_max_index12\
    \ = 0;\n    let mut paren_level_stack_depth_max_index13 = 0;\n    let mut paren_level_stack_depth_max_index14\
    \ = 0;\n    let mut paren_level_stack_depth_max_index15 = 0;\n    let mut paren_level_stack_depth_max_index16\
    \ = 0;\n    let mut paren_level_stack_depth_max_index17 = 0;\n    let mut paren_level_stack_depth_max_index18\
    \ = 0;\n    let mut paren_level_stack_depth_max_index19 = 0;\n    let mut paren_level_stack_depth_max_index20\
    \ = 0;\n    let mut paren_level_stack_depth_max_index21 = 0;\n    let mut paren_level_stack_depth_max_index22\
    \ = 0;\n    let mut paren_level_stack_depth_max_index23 = 0;\n    let mut paren_level_stack_depth_max_index24\
    \ = 0;\n    let mut paren_level_stack_depth_max_index25 = 0;\n    let mut paren_level_stack_depth_max_index26\
    \ = 0;\n    let mut paren_level_stack_depth_max_index27 = 0;\n    let mut paren_level_stack_depth_max_index28\
    \ = 0;\n    let mut paren_level_stack_depth_max_index29 = 0;\n    let mut paren_level_stack_depth_max_index30\
    \ = 0;\n    let mut paren_level_stack_depth", "    let mut paren_levels = Vec::new();\n\
    \    let mut paren_level = 0;\n    let mut paren_levels_stack = Vec::new();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let ", "    let mut level = 0;\n    let mut paren_levels = Vec::new();\n\
    \    let mut paren_level = 0;\n    let mut paren_level_count = 0;\n    let mut\
    \ paren_level_stack = Vec::new();\n    let mut paren_level_stack_pos = 0;\n  \
    \  let mut paren_level_stack_len = paren_level_stack.len();\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren",
  "    let mut paren_levels = vec![];\n    let mut paren_level = 0;\n    let mut paren_level_count\
    \ = 0;\n    let mut paren_level_char_count = 0;\n    let mut paren_level_char_pos\
    \ = 0;\n    let mut paren_level_char_pos_count = 0;\n    let mut paren_level_char_pos_count_max\
    \ = 0;\n    let mut paren_level_char_pos_count_max_index = 0;\n    let mut paren_level_char_pos_count_max_index2\
    \ = 0;\n    let mut paren_level_char_pos_count_max_index3 = 0;\n    let mut paren_level_char_pos_count_max_index4\
    \ = 0;\n    let mut paren_level_char_pos_count_max_index5 = 0;\n    let mut paren_level_char_pos_count_max_index6\
    \ = 0;\n    let mut paren_level_char_pos_count_max_index7 = 0;\n    let mut paren_level_char_pos_count_max_index8\
    \ = 0;\n    let mut paren_level_char_pos_count_max_index9 = 0;\n    let mut paren_level_char_pos_count_max_index10\
    \ = 0;\n    let mut paren_level_char_pos_count_max_index11 = 0;\n    let mut paren_level_char_pos_count_max_index12\
    \ = 0;\n    let mut paren_level_char_pos_count_max_index13 = 0;\n    let mut paren_level_char_pos_count_max_index14\
    \ = 0;\n    let mut paren_level_char_pos_count_max_index15 = 0;\n    let mut paren_level_char_pos_count_max_index16\
    \ = 0;\n    let mut paren_level_char_pos_count_max_index17 = 0;\n    let mut paren_level_char_pos_count_max_index18\
    \ = 0;\n    let mut paren_level_char_pos_count_max_index19 = 0;\n    let mut paren_level_char_pos_count_max_index20\
    \ = 0;\n    let mut paren_level_char_pos_count_max_index21 = 0;\n    let mut paren_level_char_pos_count_max_index22\
    \ = 0;\n    let mut paren_level_char_pos_count_max_index23 = 0;\n    let mut paren_level_char_pos_count_max_index24\
    \ = 0;\n    let mut paren_level_char_pos_count_max_index25 = 0;\n    let mut paren_level_char_pos_count_max_index26\
    \ = 0;\n    let mut paren_level_char_pos_count_max_index27 = 0;\n    let mut paren_level_char_pos_count_max_index28\
    \ = 0;\n    let mut paren_level_char_pos_count_max_index29 = 0;\n    let mut paren_level_char_pos_count_max_index30\
    \ = 0;\n    let mut paren_level_char_pos_count_max_index31 = 0;\n    let mut paren_level_char_pos_count_max_index32\
    \ = 0;", "    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n\
    \    let mut paren_level_index = 0;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string_index = 0;\n    let mut paren_level_string = paren_string;\n\
    \    while paren_level_string_index < paren_string.len() {\n        let mut paren_level_string\
    \ = paren_string;\n        let mut paren_level_string_index = 0;\n        while\
    \ paren_level_string_index < paren_string.len() {\n            let mut paren_level_string\
    \ = paren_string;\n            let mut paren_level_string_index = 0;\n       \
    \     while paren_level_string_index < paren_string.len() {\n                let\
    \ mut paren_level_string = paren_string;\n                let mut paren_level_string_index\
    \ = 0;\n                while paren_level_string_index < paren_string.len() {\n\
    \                    let mut paren_level_string = paren_string;\n            \
    \        let mut paren_level_string_index = 0;\n                    while paren_level_string_index\
    \ < paren_string.len() {\n                        let mut paren_level_string =\
    \ paren_string;\n                        let mut paren_level_string_index = 0;\n\
    \                        while paren_level_string_index < paren_string.len() {\n\
    \                            let mut paren_level_string = paren_string;\n    \
    \                        let mut paren_level_string_index = 0;\n             \
    \               while paren_level_string_index < paren_string.len() {\n      \
    \                          let mut paren_level_string = paren_string;\n      \
    \                          let mut paren_level_string_index = 0;\n           \
    \                     while paren_level_string_index < paren_string.len() {\n\
    \                                    let mut paren_level_string = paren_string;\n\
    \                                    let mut paren_level_string_index = 0;\n \
    \                                   while paren_level_string_index < paren_string.len()\
    \ {\n                                        let mut paren_level_string = paren_string;\n\
    \                                        let mut paren_level_string_index = 0;\n\
    \                                        while paren_level_string_index < paren_string.len()\
    \ {\n                                            let mut paren_level_string =\
    \ paren_string;\n                                            let mut paren_level_string_index\
    \ = 0;\n                                            while paren_level_string_index\
    \ < paren_string.len() {\n                                                let\
    \ mut paren_level_string = paren_string;\n                                   \
    \             let mut paren_level_string_index = 0;\n                        \
    \                        while paren_level_string_index < paren_string.len() {\n\
    \                                                    let mut paren_level_string\
    \ = paren_string;\n                                                    let mut\
    \ paren_level_string_index = 0;\n                                            \
    \        ", "    let mut paren_levels = vec![];\n    let mut paren_level = 0;\n\
    \    let mut paren_levels_stack = vec![];\n    let mut paren_levels_stack_pos\
    \ = 0;\n    let mut paren_levels_stack_len = paren_levels_stack.len();\n    let\
    \ mut paren_levels_stack_max_len = paren_levels_stack.len();\n    let mut paren_levels_stack_max_pos\
    \ = 0;\n    let mut paren_levels_stack_max_len = paren_levels_stack.len();\n \
    \   let mut paren_levels_stack_max_pos = 0;\n    let mut paren_levels_stack_max_len\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_max_pos = 0;\n \
    \   let mut paren_levels_stack_max_len = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_max_pos = 0;\n    let mut paren_levels_stack_max_len = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_max_pos = 0;\n    let mut paren_levels_stack_max_len\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_max_pos = 0;\n \
    \   let mut paren_levels_stack_max_len = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_max_pos = 0;\n    let mut paren_levels_stack_max_len = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_max_pos = 0;\n    let mut paren_levels_stack_max_len\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_max_pos = 0;\n \
    \   let mut paren_levels_stack_max_len = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_max_pos = 0;\n    let mut paren_levels_stack_max_len = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_max_pos = 0;\n    let mut paren_levels_stack_max_len\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_max_pos = 0;\n \
    \   let mut paren_levels_stack_max_len = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_max_pos = 0;\n    let mut paren_levels_stack_max_len = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_max_pos = 0;\n    let mut paren_levels_stack_max_len\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_max_pos = 0;\n \
    \   let mu", "    let mut paren_levels = Vec::new();\n    let mut paren_level\
    \ = 0;\n    let mut paren_level_count = 0;\n    let mut paren_level_char_count\
    \ = 0;\n    let mut paren_level_chars = Vec::new();\n    let mut paren_level_char:\
    \ char;\n    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len\
    \ = paren_level_chars.len();\n    let mut paren_level_char_pos = 0;\n    let mut\
    \ paren_level_char_len = paren_level_chars.len();\n    let mut paren_level_char_pos\
    \ = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n    let mut\
    \ paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_", "    let mut paren_levels = Vec::new();\n   \
    \ let mut paren_level = 0;\n    let mut paren_level_count = 0;\n    let mut paren_level_char_count\
    \ = 0;\n    let mut paren_level_chars = Vec::new();\n    let mut paren_level_char:\
    \ char;\n    let mut paren_level_char_next: char;\n    let mut paren_level_char_next_next:\
    \ char;\n    let mut paren_level_char_next_next_next: char;\n    let mut paren_level_char_next_next_next_next:\
    \ char;\n    let mut paren_level_char_next_next_next_next_next: char;\n    let\
    \ mut paren_level_char_next_next_next_next_next_next: char;\n    let mut paren_level_char_next_next_next_next_next_next_next:\
    \ char;\n    let mut paren_level_char_next_next_next_next_next_next_next_next:\
    \ char;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next:\
    \ char;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next:\
    \ char;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_next:\
    \ char;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_next_next:\
    \ char;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_next_next:\
    \ char;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_next_next:\
    \ char;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_next_next_next:\
    \ char;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_next_next_next_next:\
    \ char;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next:\
    \ char;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next:\
    \ char;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next:\
    \ char;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next:\
    \ char;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next:\
    \ char;\n    let mut paren_level_char_next_next_next_next_next_", "    let mut\
    \ paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_levels_stack\
    \ = Vec::new();\n    let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_len\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr = paren_levels_stack_len;\n\
    \    let mut paren_levels_stack_top = paren_levels_stack_len;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_len = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr = paren_levels_stack_len;\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_bottom = paren_levels_stack_len;\n\
    \    let mut paren_levels_stack_len = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_top = paren_levels_stack_len;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_len;\n    let mut\
    \ paren_levels_stack_len = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_top = paren_levels_stack_len;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_len;\n    let mut\
    \ paren_levels_stack_len = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_top = paren_levels_stack_len;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_len;\n    let mut\
    \ paren_levels_stack_len = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_top = paren_levels_stack_len;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_len;\n    let mut\
    \ paren_levels_stack_len = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_top = paren_level",
  "    let mut level = 0;\n    let mut paren_levels = Vec::new();\n    let mut paren_levels_len\
    \ = paren_levels.len();\n    let mut paren_levels_stack = Vec::new();\n    let\
    \ mut paren_levels_stack_len = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_ptr_end = paren_levels_stack_len;\n\
    \    let mut paren_levels_stack_ptr_start = paren_levels_stack_ptr;\n    let mut\
    \ paren_levels_stack_ptr_start_end = paren_levels_stack_ptr;\n    let mut paren_levels_stack_ptr_start_end_end\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_ptr_start_end_end_end\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_ptr_start_end_end_end_end\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_ptr_start_end_end_end_end_end\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_ptr_start_end_end_end_end_end_end\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_ptr_start_end_end_end_end_end_end_end\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_ptr_start_end_end_end_end_end_end_end_end\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_ptr_start_end_end_end_end_end_end_end_end_end\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_ptr_start_end_end_end_end_end_end_end_end_end_end_end\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_ptr_start_end_end_end_end_end_end_end_end_end_end_end\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_ptr_start_end_end_end_end_end_end_end_end_end_end_end_end\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_ptr_start_end_end_end_end_end_end_end_end_end_end_end_end_end\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_ptr_start_end_end_end_end_end_end_end_end_end_end_end_end_end_end\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_ptr_start_end_end_end_end_end_end_end_end_end_",
  "    let mut levels = Vec::new();\n    let mut open_braces = 0;\n    let mut close_braces\
    \ = 0;\n    let mut paren_level = 0;\n    let mut paren_nesting = 0;\n    let\
    \ mut paren_nesting_level = 0;\n    let mut paren_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let mut ",
  "    let mut paren_stack = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_levels = Vec::new();\n    let mut paren_levels_len = paren_stack.len();\n\
    \    let mut paren_levels_lens = paren_levels_len.clone();\n    let mut paren_levels_lens_len\
    \ = paren_levels_lens.len();\n    let mut paren_levels_lens_lens = paren_levels_lens_len.clone();\n\
    \    let mut paren_levels_lens_lens_len = paren_levels_lens_lens.len();\n    let\
    \ mut paren_levels_lens_lens_lens_len = paren_levels_lens_lens_lens.len();\n \
    \   let mut paren_levels_lens_lens_lens_lens_len = paren_levels_lens_lens_lens_lens.len();\n\
    \    let mut paren_levels_lens_lens_lens_lens_lens_len = paren_levels_lens_lens_lens_lens_lens.len();\n\
    \    let mut paren_levels_lens_lens_lens_lens_lens_lens_len = paren_levels_lens_lens_lens_lens_lens_lens.len();\n\
    \    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_len = paren_levels_lens_lens_lens_lens_lens_lens_lens.len();\n\
    \    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_len = paren_levels_lens_lens_lens_lens_lens_lens_lens_lens.len();\n\
    \    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\
    \ = paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens.len();\n  \
    \  let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\
    \ = paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens.len();\n\
    \    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_len\
    \ = paren_levels_lens_lens_lens_lens_lens_lens_", "    let mut level = 0;\n  \
    \  let mut paren_level = 0;\n    let mut paren_levels: Vec<isize> = Vec::new();\n\
    \    let mut paren_levels_len = 0;\n    let mut paren_levels_lens: Vec<isize>\
    \ = Vec::new();\n    let mut paren_levels_lens_len = 0;\n    let mut paren_levels_lens_len2\
    \ = 0;\n    let mut paren_levels_lens_len3 = 0;\n    let mut paren_levels_lens_len4\
    \ = 0;\n    let mut paren_levels_lens_len5 = 0;\n    let mut paren_levels_lens_len6\
    \ = 0;\n    let mut paren_levels_lens_len7 = 0;\n    let mut paren_levels_lens_len8\
    \ = 0;\n    let mut paren_levels_lens_len9 = 0;\n    let mut paren_levels_lens_len10\
    \ = 0;\n    let mut paren_levels_lens_len11 = 0;\n    let mut paren_levels_lens_len12\
    \ = 0;\n    let mut paren_levels_lens_len13 = 0;\n    let mut paren_levels_lens_len14\
    \ = 0;\n    let mut paren_levels_lens_len15 = 0;\n    let mut paren_levels_lens_len16\
    \ = 0;\n    let mut paren_levels_lens_len17 = 0;\n    let mut paren_levels_lens_len18\
    \ = 0;\n    let mut paren_levels_lens_len19 = 0;\n    let mut paren_levels_lens_len20\
    \ = 0;\n    let mut paren_levels_lens_len21 = 0;\n    let mut paren_levels_lens_len22\
    \ = 0;\n    let mut paren_levels_lens_len23 = 0;\n    let mut paren_levels_lens_len24\
    \ = 0;\n    let mut paren_levels_lens_len25 = 0;\n    let mut paren_levels_lens_len26\
    \ = 0;\n    let mut paren_levels_lens_len27 = 0;\n    let mut paren_levels_lens_len28\
    \ = 0;\n    let mut paren_levels_lens_len29 = 0;\n    let mut paren_levels_lens_len30\
    \ = 0;\n    let mut paren_levels_lens_len31 = 0;\n    let mut paren_levels_lens_len32\
    \ = 0;\n    let mut paren_levels_lens_len33 = 0;\n    let mut paren_levels_lens_len34\
    \ = 0;\n    let mut paren_levels_lens_len35 = 0;\n", "    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_level_count =\
    \ 0;\n    let mut paren_level_char_count = 0;\n    let mut paren_level_chars =\
    \ Vec::new();\n    let mut paren_level_char: char;\n    let mut paren_level_char_pos\
    \ = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n    let mut\
    \ paren_level_char_pos_end = 0;\n    let mut paren_level_char_len_end = 0;\n \
    \   let mut paren_level_char_pos_start = 0;\n    let mut paren_level_char_len_start\
    \ = 0;\n    let mut paren_level_char_pos_end = 0;\n    let mut paren_level_char_len_end\
    \ = 0;\n    let mut paren_level_char_pos_start = 0;\n    let mut paren_level_char_len_start\
    \ = 0;\n    let mut paren_level_char_pos_end = 0;\n    let mut paren_level_char_len_end\
    \ = 0;\n    let mut paren_level_char_pos_start = 0;\n    let mut paren_level_char_len_start\
    \ = 0;\n    let mut paren_level_char_pos_end = 0;\n    let mut paren_level_char_len_end\
    \ = 0;\n    let mut paren_level_char_pos_start = 0;\n    let mut paren_level_char_len_start\
    \ = 0;\n    let mut paren_level_char_pos_end = 0;\n    let mut paren_level_char_len_end\
    \ = 0;\n    let mut paren_level_char_pos_start = 0;\n    let mut paren_level_char_len_start\
    \ = 0;\n    let mut paren_level_char_pos_end = 0;\n    let mut paren_level_char_len_end\
    \ = 0;\n    let mut paren_level_char_pos_start = 0;\n    let mut paren_level_char_len_start\
    \ = 0;\n    let mut paren_level_char_pos_end = 0;\n    let mut paren_level_char_len_end\
    \ = 0;\n    let mut paren_level_char_pos_start = 0;\n    let mut paren_level_char_len_start\
    \ = 0;\n    let mut paren_level_char_pos_end = 0;\n    let mut paren_level_char_len_end\
    \ = 0;\n    let mut paren_level_char_pos_start = 0;\n    let mut paren_level_char_len_start\
    \ = 0;\n    let mut paren_level_char_pos_end = 0;\n    let mut paren_level_char_len_end\
    \ = 0;\n    let mut paren_level_char_pos_start = 0;\n    let mut paren_level_char_len_start\
    \ = 0;\n    let mut paren_level_char_pos_end = 0;\n    let mut paren_level_char_len_end\
    \ = 0;\n    let mut paren_", "    let mut paren_stack = Vec::new();\n    let mut\
    \ paren_depth = 0;\n    let mut paren_level = 0;\n    let mut paren_level_count\
    \ = 0;\n    let mut paren_level_max_count = 0;\n    let mut paren_level_max_depth\
    \ = 0;\n    let mut paren_level_max_depth_count = 0;\n    let mut paren_level_max_depth_max_count\
    \ = 0;\n    let mut paren_level_max_depth_max_depth = 0;\n    let mut paren_level_max_depth_max_depth_count\
    \ = 0;\n    let mut paren_level_max_depth_max_depth_max_count = 0;\n    let mut\
    \ paren_level_max_depth_max_depth_max_depth = 0;\n    let mut paren_level_max_depth_max_depth_max_depth_count\
    \ = 0;\n    let mut paren_level_max_depth_max_depth_max_depth_max_count = 0;\n\
    \    let mut paren_level_max_depth_max_depth_max_depth_max_depth = 0;\n    let\
    \ mut paren_level_max_depth_max_depth_max_depth_max_count = 0;\n    let mut paren_level_max_depth_max_depth_max_depth_max_depth\
    \ = 0;\n    let mut paren_level_max_depth_max_depth_max_depth_max_depth_count\
    \ = 0;\n    let mut paren_level_max_depth_max_depth_max_depth_max_depth_max_count\
    \ = 0;\n    let mut paren_level_max_depth_max_depth_max_depth_max_depth_max_depth\
    \ = 0;\n    let mut paren_level_max_depth_max_depth_max_depth_max_depth_max_count\
    \ = 0;\n    let mut paren_level_max_depth_max_depth_max_depth_max_depth_max_depth\
    \ = 0;\n    let mut paren_level_max_depth_max_depth_max_depth_max_depth_max_depth_count\
    \ = 0;\n    let mut paren_level_max_depth_max_depth_max_depth_max_depth_max_depth_max_count\
    \ = 0;\n    let mut paren_level_max_depth_max_depth_max_depth_max_depth_max_depth_max_depth\
    \ = 0;\n    let mut paren_level_max_depth_max_depth_max_depth_max_depth_max_depth_max_count\
    \ = 0;\n    let mut paren_level_max_depth_max_depth_max_depth_max_depth_max_depth_max_depth\
    \ = 0;\n    let mut paren_level_max_depth_max_depth_max_depth_max_depth_max_depth_max_count\
    \ = 0;\n    let mut paren_level_max_depth_max_depth_max_depth_max_depth_max_depth_max_depth\
    \ = 0;\n    let mut paren_level_max_depth_max_depth_max_depth_max_depth_max_depth_max_depth_count\
    \ = 0;\n    let mut paren_level_max_depth_max_depth_max_depth_max_depth_max_depth_max_depth_max_count\
    \ = 0;\n    let mut paren_level_max_depth_max_depth_max_depth_max_depth_max_depth_max_depth_max_depth\
    \ = 0;\n    let mut paren_level_max_depth_max_depth_max_depth_max_depth_max_depth_max_depth_max_count\
    \ = 0;", "    let mut level = 0usize;\n    let mut paren_stack: Vec<isize> = vec![];\n\
    \    let mut paren_levels: Vec<isize> = vec![];\n    let mut paren_levels_stack:\
    \ Vec<isize> = vec![];\n    let mut paren_levels_stack_size: usize = 0;\n    let\
    \ mut paren_levels_size: usize = 0;\n    let mut paren_levels_size: usize = 0;\n\
    \    let mut paren_levels_size: usize = 0;\n    let mut paren_levels_size: usize\
    \ = 0;\n    let mut paren_levels_size: usize = 0;\n    let mut paren_levels_size:\
    \ usize = 0;\n    let mut paren_levels_size: usize = 0;\n    let mut paren_levels_size:\
    \ usize = 0;\n    let mut paren_levels_size: usize = 0;\n    let mut paren_levels_size:\
    \ usize = 0;\n    let mut paren_levels_size: usize = 0;\n    let mut paren_levels_size:\
    \ usize = 0;\n    let mut paren_levels_size: usize = 0;\n    let mut paren_levels_size:\
    \ usize = 0;\n    let mut paren_levels_size: usize = 0;\n    let mut paren_levels_size:\
    \ usize = 0;\n    let mut paren_levels_size: usize = 0;\n    let mut paren_levels_size:\
    \ usize = 0;\n    let mut paren_levels_size: usize = 0;\n    let mut paren_levels_size:\
    \ usize = 0;\n    let mut paren_levels_size: usize = 0;\n    let mut paren_levels_size:\
    \ usize = 0;\n    let mut paren_levels_size: usize = 0;\n    let mut paren_levels_size:\
    \ usize = 0;\n    let mut paren_levels_size: usize = 0;\n    let mut paren_levels_size:\
    \ usize = 0;\n    let mut paren_levels_size: usize = 0;\n    let mut paren_levels_size:\
    \ usize = 0;\n    let mut paren_levels_size: usize = 0;\n    let mut paren_levels_size:\
    \ usize = 0;\n    let mut paren_levels_size: usize = 0;\n    let mut paren_levels_size:\
    \ usize = 0;\n    let mut paren_levels_size: usize = 0;\n    let mut paren_levels_size:\
    \ usize = 0;\n    let mut paren_levels_size: usize = 0;\n    let mut paren_levels_size:\
    \ usize = 0;\n    let mut paren_", "    let mut paren_levels = vec![];\n    let\
    \ mut paren_level = 0;\n    let mut paren_level_index = 0;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_char: char;\n    let mut paren_level_char_next:\
    \ char;\n    let mut paren_level_char_next_next: char;\n    let mut paren_level_char_next_next_next:\
    \ char;\n    let mut paren_level_char_next_next_next_next: char;\n    let mut\
    \ paren_level_char_next_next_next_next_next: char;\n    let mut paren_level_char_next_next_next_next_next_next:\
    \ char;\n    let mut paren_level_char_next_next_next_next_next_next_next: char;\n\
    \    let mut paren_level_char_next_next_next_next_next_next_next_next: char;\n\
    \    let mut paren_level_char_next_next_next_next_next_next_next_next_next: char;\n\
    \    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next:\
    \ char;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_next:\
    \ char;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_next_next:\
    \ char;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_next_next_next:\
    \ char;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_next_next_next:\
    \ char;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_next_next_next_next:\
    \ char;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next:\
    \ char;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next:\
    \ char;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next:\
    \ char;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next:\
    \ char;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next:\
    \ char;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next:\
    \ char;\n    let mut paren_level_char_next_next_next_next_next_next_next_", " \
    \   let mut paren_levels = vec![];\n    let mut paren_level = 0;\n    let mut\
    \ paren_levels_stack = vec![];\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_",
  "    let mut level = 0;\n    let mut paren_levels = Vec::new();\n    let mut paren_levels_stack\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr = Vec::new();\n    let mut\
    \ paren_levels_ptr = Vec::new();\n    let mut paren_levels_ptr_end = Vec::new();\n\
    \    let mut paren_levels_ptr_end_ptr = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr = Vec::new();\n\
    \    let mut paren_levels_ptr_end_ptr_end_ptr_end = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end = Vec::new();\n\
    \    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr = Vec::new();\n\
    \    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end = Vec::new();\n\
    \    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr = Vec::new();\n\
    \    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end = Vec::new();\n\
    \    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_", " \
    \   let mut level = 0;\n    let mut paren_levels = vec![];\n    let mut paren_levels_stack\
    \ = vec![];\n    let mut paren_levels_stack_ptr = 0;\n    let mut paren_levels_ptr\
    \ = 0;\n    let mut paren_levels_ptr_next = 0;\n    let mut paren_levels_ptr_next_next\
    \ = 0;\n    let mut paren_levels_ptr_next_next_next = 0;\n    let mut paren_levels_ptr_next_next_next_next\
    \ = 0;\n    let mut paren_levels_ptr_next_next_next_next_next = 0;\n    let mut\
    \ paren_levels_ptr_next_next_next_next_next_next = 0;\n    let mut paren_levels_ptr_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_levels_ptr_next_next_next_next_next_next_next_next =\
    \ 0;\n    let mut paren_levels_ptr_next_next_next_next_next_next_next_next = 0;\n\
    \    let mut paren_levels_ptr_next_next_next_next_next_next_next_next_next = 0;\n\
    \    let mut paren_levels_ptr_next_next_next_next_next_next_next_next_next = 0;\n\
    \    let mut paren_levels_ptr_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_levels_ptr_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_levels_ptr_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_levels_ptr_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_levels_ptr_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_levels_ptr_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_levels_ptr_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_levels_ptr_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_levels_ptr_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_levels_ptr_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_levels_ptr_next_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_levels_ptr_next_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n", "    let mut paren_levels = Vec::new();\n    let mut paren_level =\
    \ 0;\n    let mut paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_pos\
    \ = 0;\n    let mut paren_levels_stack_len = paren_levels_stack.len();\n    let\
    \ mut paren_levels_stack_top = paren_levels_stack_len;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_top = paren_levels_stack_len;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_len;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_len;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_top = paren_levels_stack_len;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_len;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_len;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_top = paren_levels_stack_len;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_len;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_len;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_top = paren_levels_stack_len;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_len;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_len;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_top = paren_levels_stack_len;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_len;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_len;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_top = paren_levels_stack_len;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_len;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_len;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_top = paren_levels_stack_len;\n\
    \    let mut paren_", "    let mut paren_levels = vec![];\n    let mut paren_level\
    \ = 0;\n    let mut paren_level_count = 0;\n    let mut paren_level_char_count\
    \ = 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_char\
    \ = 0;\n    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len\
    \ = paren_string.len();\n    let mut paren_level_char_len = paren_level_char_len.saturating_sub(paren_level_char_pos);\n\
    \    let mut paren_level_char_pos = paren_level_char_len;\n    let mut paren_level_char_pos\
    \ = paren_level_char_pos.saturating_sub(paren_level_char_count);\n    let mut\
    \ paren_level_char_pos = paren_level_char_pos.saturating_sub(paren_level_count);\n\
    \    let mut paren_level_char_pos = paren_level_char_pos.saturating_sub(paren_level);\n\
    \    let mut paren_level_char_pos = paren_level_char_pos.saturating_sub(paren_level);\n\
    \    let mut paren_level_char_pos = paren_level_char_pos.saturating_sub(paren_level);\n\
    \    let mut paren_level_char_pos = paren_level_char_pos.saturating_sub(paren_level);\n\
    \    let mut paren_level_char_pos = paren_level_char_pos.saturating_sub(paren_level);\n\
    \    let mut paren_level_char_pos = paren_level_char_pos.saturating_sub(paren_level);\n\
    \    let mut paren_level_char_pos = paren_level_char_pos.saturating_sub(paren_level);\n\
    \    let mut paren_level_char_pos = paren_level_char_pos.saturating_sub(paren_level);\n\
    \    let mut paren_level_char_pos = paren_level_char_pos.saturating_sub(paren_level);\n\
    \    let mut paren_level_char_pos = paren_level_char_pos.saturating_sub(paren_level);\n\
    \    let mut paren_level_char_pos = paren_level_char_pos.saturating_sub(paren_level);\n\
    \    let mut paren_level_char_pos = paren_level_char_pos.saturating_sub(paren_level);\n\
    \    let mut paren_level_char_pos = paren_level_char_pos.saturating_sub(paren_level);\n\
    \    let mut paren_level_char_pos = paren_level_char_pos.saturating_sub(paren_level);\n\
    \    let mut paren_level_char_pos = paren_level_char_pos.saturating_sub(paren_level);\n\
    \    let mut paren_level_char_pos = paren_level_char_pos.saturating_sub(paren_level);\n\
    \    let mut paren_level_char_pos = paren_", "    let mut level = 0;\n    let\
    \ mut paren_levels = Vec::new();\n    let mut paren_levels_stack = Vec::new();\n\
    \    let mut paren_levels_stack_ptr = Vec::new();\n    let mut paren_levels_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end = Vec::new();\n    let mut paren_levels_ptr_end_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end = Vec::new();\n    let\
    \ mut paren_levels_ptr_end_ptr_end_ptr = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr = Vec::new();\n\
    \    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end = Vec::new();\n    let\
    \ mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr = Vec::new();\n    let\
    \ mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end = Vec::new();\n   \
    \ let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr = Vec::new();\n\
    \    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end = Vec::new();\n\
    \    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_",
  "    let mut level = 0;\n    let mut paren_stack = Vec::new();\n    let mut paren_stack_len\
    \ = paren_string.len();\n    let mut paren_stack_pos = 0;\n    let mut paren_stack_char\
    \ = paren_string[paren_stack_pos];\n    while paren_stack_pos < paren_stack_len\
    \ {\n        if paren_stack_char == ')' {\n            level += 1;\n         \
    \   paren_stack.pop();\n            paren_stack_pos = paren_stack_len;\n     \
    \       paren_stack_char = paren_string[paren_stack_pos];\n        } else if paren_stack_char\
    \ == '(' {\n            level += 1;\n            paren_stack.push(level);\n  \
    \          paren_stack_pos = paren_stack_len;\n            paren_stack_char =\
    \ paren_string[paren_stack_pos];\n        } else {\n            paren_stack_pos\
    \ += 1;\n            paren_stack_char = paren_string[paren_stack_pos];\n     \
    \   }\n    }\n    paren_stack", "    let mut paren_levels = Vec::new();\n    let\
    \ mut paren_level = 0;\n    let mut paren_levels_stack = Vec::new();\n    let\
    \ mut paren_levels_stack_ptr = 0;\n    let mut paren_levels_stack_len = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack_ptr;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_top = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_ptr;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_ptr;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_top = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_ptr;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_ptr;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_top = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_ptr;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_ptr;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_top = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_ptr;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_ptr;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_top = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_ptr;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_ptr;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_top = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_ptr;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_ptr;\n    let mut paren_levels_stack_bottom\
    \ = paren_level", "    let mut paren_levels = Vec::new();\n    let mut paren_level\
    \ = 0;\n    let mut paren_level_count = 0;\n    let mut paren_level_char_count\
    \ = 0;\n    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_pos_count\
    \ = 0;\n    let mut paren_level_char_pos_count_max = 0;\n    let mut paren_level_char_pos_count_max_max\
    \ = 0;\n    let mut paren_level_char_pos_count_min = 0;\n    let mut paren_level_char_pos_count_min_max\
    \ = 0;\n    let mut paren_level_char_pos_count_min = 0;\n    let mut paren_level_char_pos_count_min\
    \ = 0;\n    let mut paren_level_char_pos_count_min = 0;\n    let mut paren_level_char_pos_count_min\
    \ = 0;\n    let mut paren_level_char_pos_count_min = 0;\n    let mut paren_level_char_pos_count_min\
    \ = 0;\n    let mut paren_level_char_pos_count_min = 0;\n    let mut paren_level_char_pos_count_min\
    \ = 0;\n    let mut paren_level_char_pos_count_min = 0;\n    let mut paren_level_char_pos_count_min\
    \ = 0;\n    let mut paren_level_char_pos_count_min = 0;\n    let mut paren_level_char_pos_count_min\
    \ = 0;\n    let mut paren_level_char_pos_count_min = 0;\n    let mut paren_level_char_pos_count_min\
    \ = 0;\n    let mut paren_level_char_pos_count_min = 0;\n    let mut paren_level_char_pos_count_min\
    \ = 0;\n    let mut paren_level_char_pos_count_min = 0;\n    let mut paren_level_char_pos_count_min\
    \ = 0;\n    let mut paren_level_char_pos_count_min = 0;\n    let mut paren_level_char_pos_count_min\
    \ = 0;\n    let mut paren_level_char_pos_count_min = 0;\n    let mut paren_level_char_pos_count_min\
    \ = 0;\n    let mut paren_level_char_pos_count_min = 0;\n    let mut paren_level_char_pos_count_min\
    \ = 0;\n    let mut paren_level_char_pos_count_min = 0;\n    let mut paren_level_char_pos_count_min\
    \ = 0;\n    let mut paren_level_char_pos_count_min = 0;\n    let mut paren_level_char_pos_count_min\
    \ = 0;\n    let mut paren_level_char_pos_count_min = 0;\n    let mut paren_level_char_pos_count_min\
    \ = 0;\n    let mut paren_level_char_pos_count_min = 0;\n    let mut paren_level_char_pos_count_min\
    \ = 0;\n    let mut paren_level_char_pos_count_min = 0;\n    let mut paren_level_char_",
  "    let mut paren_level = 0;\n    let mut paren_levels = Vec::new();\n    let mut\
    \ paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_ptr = 0;\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr_end = ", "    let mut paren_levels = Vec::new();\n\
    \    let mut paren_level = 0;\n    let mut paren_level_count = 0;\n    let mut\
    \ paren_level_char_count = 0;\n    let mut paren_level_chars = Vec::new();\n \
    \   let mut paren_level_char = 0;\n    let mut paren_level_char_pos = 0;\n   \
    \ let mut paren_level_char_pos_count = 0;\n    let mut paren_level_char_pos_char_count\
    \ = 0;\n    let mut paren_level_char_pos_chars = Vec::new();\n    let mut paren_level_char_pos_char\
    \ = 0;\n    let mut paren_level_char_pos_char_pos = 0;\n    let mut paren_level_char_pos_char_pos_count\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_count = 0;\n    let mut\
    \ paren_level_char_pos_char_pos_chars = Vec::new();\n    let mut paren_level_char_pos_char_pos_char\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_count\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_count = 0;\n \
    \   let mut paren_level_char_pos_char_pos_char_pos_chars = Vec::new();\n    let\
    \ mut paren_level_char_pos_char_pos_char_pos_char = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos_count = 0;\n\
    \    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_count = 0;\n\
    \    let mut paren_level_char_pos_char_pos_char_pos_char_pos_chars = Vec::new();\n\
    \    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char = 0;\n    let\
    \ mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos = 0;\n    let mut\
    \ paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_count = 0;\n    let\
    \ mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_char_count = 0;\n\
    \    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_chars =\
    \ Vec::new();\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_char\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_count\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_count\
    \ = 0;", "    let mut levels = Vec::new();\n    let mut paren_level = 0;\n   \
    \ let mut paren_levels = Vec::new();\n    let mut paren_levels_stack = Vec::new();\n\
    \    let mut paren_levels_stack_size = Vec::new();\n    let mut paren_levels_stack_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_end = Vec::new();\n    let\
    \ mut paren_levels_stack_ptr_end_ptr = Vec::new();\n    let mut paren_levels_stack_ptr_end_ptr_end\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end = Vec::new();\n    let\
    \ mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr = Vec::new();\n    let mut\
    \ paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end = Vec::new();\n    let mut\
    \ paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr = Vec::new();\n    let\
    \ mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr =\
    \ Vec::new();\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end\
    \ = Vec", "    let mut paren_stack: Vec<isize> = vec![];\n    let mut paren_level:\
    \ isize = 0;\n    let mut paren_level_count: isize = 0;\n    let mut paren_level_max:\
    \ isize = 0;\n    let mut paren_level_max_count: isize = 0;\n    let mut paren_level_max_index:\
    \ usize = 0;\n    let mut paren_level_max_index: usize = 0;\n    let mut paren_level_max_index:\
    \ usize = 0;\n    let mut paren_level_max_index: usize = 0;\n    let mut paren_level_max_index:\
    \ usize = 0;\n    let mut paren_level_max_index: usize = 0;\n    let mut paren_level_max_index:\
    \ usize = 0;\n    let mut paren_level_max_index: usize = 0;\n    let mut paren_level_max_index:\
    \ usize = 0;\n    let mut paren_level_max_index: usize = 0;\n    let mut paren_level_max_index:\
    \ usize = 0;\n    let mut paren_level_max_index: usize = 0;\n    let mut paren_level_max_index:\
    \ usize = 0;\n    let mut paren_level_max_index: usize = 0;\n    let mut paren_level_max_index:\
    \ usize = 0;\n    let mut paren_level_max_index: usize = 0;\n    let mut paren_level_max_index:\
    \ usize = 0;\n    let mut paren_level_max_index: usize = 0;\n    let mut paren_level_max_index:\
    \ usize = 0;\n    let mut paren_level_max_index: usize = 0;\n    let mut paren_level_max_index:\
    \ usize = 0;\n    let mut paren_level_max_index: usize = 0;\n    let mut paren_level_max_index:\
    \ usize = 0;\n    let mut paren_level_max_index: usize = 0;\n    let mut paren_level_max_index:\
    \ usize = 0;\n    let mut paren_level_max_index: usize = 0;\n    let mut paren_level_max_index:\
    \ usize = 0;\n    let mut paren_level_max_index: usize = 0;\n    let mut paren_level_max_index:\
    \ usize = 0;\n    let mut paren_level_max_index: usize = 0;\n    let mut paren_level_max_index:\
    \ usize = 0;\n    let mut paren_level_max_index: usize = 0;\n    let mut paren_level_max_index:\
    \ usize = 0;\n    let mut paren_level_max_index: usize = 0;\n    let mut paren_level_max_index:\
    \ usize = 0;\n    let mut paren_level_max_index: usize = 0;\n    let mut paren_level_max_index:\
    \ usize = 0;\n    let mut paren", "    let mut paren_levels = Vec::new();\n  \
    \  let mut paren_level = 0;\n    let mut paren_nesting = 0;\n    let mut paren_nesting_level\
    \ = 0;\n    let mut paren_nesting_levels = Vec::new();\n    let mut paren_nesting_level\
    \ = 0;\n    let mut paren_nesting_levels = Vec::new();\n    let mut paren_nesting_level\
    \ = 0;\n    let mut paren_nesting_levels = Vec::new();\n    let mut paren_nesting_level\
    \ = 0;\n    let mut paren_nesting_levels = Vec::new();\n    let mut paren_nesting_level\
    \ = 0;\n    let mut paren_nesting_levels = Vec::new();\n    let mut paren_nesting_level\
    \ = 0;\n    let mut paren_nesting_levels = Vec::new();\n    let mut paren_nesting_level\
    \ = 0;\n    let mut paren_nesting_levels = Vec::new();\n    let mut paren_nesting_level\
    \ = 0;\n    let mut paren_nesting_levels = Vec::new();\n    let mut paren_nesting_level\
    \ = 0;\n    let mut paren_nesting_levels = Vec::new();\n    let mut paren_nesting_level\
    \ = 0;\n    let mut paren_nesting_levels = Vec::new();\n    let mut paren_nesting_level\
    \ = 0;\n    let mut paren_nesting_levels = Vec::new();\n    let mut paren_nesting_level\
    \ = 0;\n    let mut paren_nesting_levels = Vec::new();\n    let mut paren_nesting_level\
    \ = 0;\n    let mut paren_nesting_levels = Vec::new();\n    let mut paren_nesting_level\
    \ = 0;\n    let mut paren_nesting_levels = Vec::new();\n    let mut paren_nesting_level\
    \ = 0;\n    let mut paren_nesting_levels = Vec::new();\n    let mut paren_nesting_level\
    \ = 0;\n    let mut paren_nesting_levels = Vec::new();\n    let mut paren_nesting_level\
    \ = 0;\n    let mut paren_nesting_levels = Vec::new();\n    let mut paren_nesting_level\
    \ = 0;\n    let mut paren_nesting_levels = Vec::new();\n    let mut paren_nesting_level\
    \ = 0;\n    let mut paren_nesting_levels = Vec::new();\n    let mut paren_nesting_level\
    \ = 0;\n    let mut paren_nesting_levels = Vec::new();\n    let mut ", "    let\
    \ mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_nesting\
    \ = 0;\n    let mut paren_nesting_level = 0;\n    let mut paren_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nest", "    let mut level = 0;\n    let mut paren_stack =\
    \ Vec::new();\n    let mut paren_stack_len = paren_string.len();\n    let mut\
    \ paren_stack_pos = 0;\n    let mut paren_stack_char = paren_string[paren_stack_pos];\n\
    \    while paren_stack_pos < paren_string.len() {\n        if paren_stack_char\
    \ == ')' {\n            paren_stack.pop();\n            paren_stack_len -= paren_stack.len();\n\
    \            if paren_stack.len() == 0 {\n                level += 1;\n      \
    \      }\n        }\n        if paren_stack_char == '(' {\n            paren_stack.push(level);\n\
    \            paren_stack_len += 1;\n        }\n        paren_stack_pos += 1;\n\
    \        paren_stack_char = paren_string[paren_stack_pos];\n    }\n    paren_stack",
  "    let mut paren_level = 0;\n    let mut paren_nesting = 0;\n    let mut paren_levels:\
    \ Vec<isize> = Vec::new();\n    let mut paren_nesting_levels: Vec<isize> = Vec::new();\n\
    \    let mut paren_levels_stack: Vec<isize> = Vec::new();\n    let mut paren_nesting_levels_stack:\
    \ Vec<isize> = Vec::new();\n    let mut paren_levels_stack_size = 0;\n    let\
    \ mut paren_nesting_levels_stack_size = 0;\n    let mut paren_levels_stack_ptr\
    \ = 0;\n    let mut paren_nesting_levels_stack_ptr = 0;\n    let mut paren_levels_stack_ptr_next\
    \ = 0;\n    let mut paren_nesting_levels_stack_ptr_next = 0;\n    let mut paren_levels_stack_ptr_next_next\
    \ = 0;\n    let mut paren_nesting_levels_stack_ptr_next_next = 0;\n    let mut\
    \ paren_levels_stack_ptr_next_next_next = 0;\n    let mut paren_nesting_levels_stack_ptr_next_next_next\
    \ = 0;\n    let mut paren_levels_stack_ptr_next_next_next_next = 0;\n    let mut\
    \ paren_nesting_levels_stack_ptr_next_next_next_next = 0;\n    let mut paren_levels_stack_ptr_next_next_next_next_next\
    \ = 0;\n    let mut paren_nesting_levels_stack_ptr_next_next_next_next_next =\
    \ 0;\n    let mut paren_levels_stack_ptr_next_next_next_next_next_next = 0;\n\
    \    let mut paren_nesting_levels_stack_ptr_next_next_next_next_next_next = 0;\n\
    \    let mut paren_levels_stack_ptr_next_next_next_next_next_next_next = 0;\n\
    \    let mut paren_nesting_levels_stack_ptr_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_levels_stack_ptr_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_nesting_levels_stack_ptr_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_levels_stack_ptr_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_levels_stack_ptr_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_levels_stack_ptr_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_levels_stack_ptr_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;", "    let mut paren_level = 0;\n    let mut paren_levels = Vec::new();\n\
    \    let mut paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr = Vec::new();\n    let\
    \ mut paren_levels_stack_ptr_ptr_ptr = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n    let\
    \ mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n    let mut\
    \ paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n    let mut\
    \ paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n    let\
    \ mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr =\
    \ Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr",
  "    let mut paren_stack = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_levels = Vec::new();\n    let mut paren_levels_size = Vec::new();\n  \
    \  let mut paren_levels_size_ptr = Vec::new();\n    let mut paren_levels_size_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_size_ptr_ptr_ptr = Vec::new();\n   \
    \ let mut paren_levels_size_ptr_ptr_ptr_ptr = Vec::new();\n    let mut paren_levels_size_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_size_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_size_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n   \
    \ let mut paren_levels_size_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n  \
    \  let mut paren_levels_size_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_size_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_size_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_size_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_size_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_size_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_size_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_size_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_size_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_size_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_size_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr",
  "    let mut paren_stack: Vec<isize> = vec![];\n    let mut paren_level: isize =\
    \ 0;\n    let mut paren_level_count: isize = 0;\n    let mut paren_level_char:\
    \ char;\n    let mut paren_level_char_count: usize = 0;\n    let mut paren_level_char_next:\
    \ char;\n    let mut paren_level_char_next_count: usize = 0;\n    let mut paren_level_char_next_next:\
    \ char;\n    let mut paren_level_char_next_next_count: usize = 0;\n    let mut\
    \ paren_level_char_next_next_next: char;\n    let mut paren_level_char_next_next_next_count:\
    \ usize = 0;\n    let mut paren_level_char_next_next_next_next: char;\n    let\
    \ mut paren_level_char_next_next_next_next_count: usize = 0;\n    let mut paren_level_char_next_next_next_next_next:\
    \ char;\n    let mut paren_level_char_next_next_next_next_next_count: usize =\
    \ 0;\n    let mut paren_level_char_next_next_next_next_next_next: char;\n    let\
    \ mut paren_level_char_next_next_next_next_next_next_count: usize = 0;\n    let\
    \ mut paren_level_char_next_next_next_next_next_next_next: char;\n    let mut\
    \ paren_level_char_next_next_next_next_next_next_next_count: usize = 0;\n    let\
    \ mut paren_level_char_next_next_next_next_next_next_next_next: char;\n    let\
    \ mut paren_level_char_next_next_next_next_next_next_next_next_count: usize =\
    \ 0;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next:\
    \ char;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_count:\
    \ usize = 0;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next:\
    \ char;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_count:\
    \ usize = 0;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_count:\
    \ usize = 0;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_count:\
    \ usize = 0;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_count:\
    \ usize = 0;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_count:\
    \ usize = 0;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_count:\
    \ usize", "    let mut levels = Vec::new();\n    let mut level = 0;\n    let mut\
    \ paren_level = 0;\n    let mut paren_levels = Vec::new();\n    let mut paren_level\
    \ = 0;\n    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n\
    \    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let\
    \ mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_levels = Vec::new();\n\
    \    let mut paren_level = 0;\n    let mut paren_levels = Vec::new();\n    let\
    \ mut paren_level = 0;\n    let mut paren_levels = Vec::new();\n    let mut paren_level\
    \ = 0;\n    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n\
    \    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let\
    \ mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_levels = Vec::new();\n\
    \    let mut paren_level = 0;\n    let mut paren_levels = Vec::new();\n    let\
    \ mut paren_level = 0;\n    let mut paren_levels = Vec::new();\n    let mut paren_level\
    \ = 0;\n    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n\
    \    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let\
    \ mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_levels = Vec::new();\n\
    \    let mut paren_level = 0;\n    let mut paren_levels = Vec::new();\n    let\
    \ mut paren_level = 0;\n    let mut paren_levels = Vec::new();\n    let mut paren_level\
    \ = 0;\n    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n\
    \    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let\
    \ mut paren_levels = Vec", "    let mut paren_levels = Vec::new();\n    let mut\
    \ paren_level = 0;\n    let mut paren_levels_stack = Vec::new();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_level", "    let mut level = 0;\n    let mut paren_levels =\
    \ vec![];\n    let mut paren_levels_stack = vec![];\n    let mut paren_levels_stack_size\
    \ = vec![];\n    let mut paren_levels_stack_ptr = vec![];\n    let mut paren_levels_stack_ptr_ptr\
    \ = vec![];\n    let mut paren_levels_stack_ptr_ptr_ptr = vec![];\n    let mut\
    \ paren_levels_stack_ptr_ptr_ptr_ptr = vec![];\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr\
    \ = vec![];\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr = vec![];\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr = vec![];\n    let\
    \ mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = vec![];\n    let mut\
    \ paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = vec![];\n    let mut\
    \ paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = vec![];\n    let\
    \ mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = vec![];\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = vec![];\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = vec![];\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = vec![];\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = vec![];\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = vec![];\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = vec![];\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = vec![];\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = vec![];\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = vec![];\n    let mut ", "    let mut levels = vec![];\n    let mut paren_level\
    \ = 0;\n    let mut paren_nesting = 0;\n    let mut paren_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting = 0;\n    let mut paren_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_", "    let mut paren_levels\
    \ = vec![];\n    let mut paren_level = 0;\n    let mut paren_levels_stack = vec![];\n\
    \    let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_len =\
    \ paren_levels_stack.len();\n    let mut paren_levels_stack_ptr = paren_levels_stack_len;\n\
    \    let mut paren_levels_stack_top = paren_levels_stack_ptr;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_top = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_ptr;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_ptr;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_top = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_ptr;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_ptr;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_top = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_ptr;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_ptr;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_top = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_ptr;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_ptr;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_top = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_ptr;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_ptr;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_top = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_ptr;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_ptr", "    let mut level = 0usize;\n\
    \    let mut paren_stack = Vec::new();\n    let mut paren_levels = Vec::new();\n\
    \    let mut paren_levels_len = Vec::new();\n    let mut paren_levels_len_count\
    \ = Vec::new();\n    let mut paren_levels_len_max = Vec::new();\n    let mut paren_levels_len_max_count\
    \ = Vec::new();\n    let mut paren_levels_len_max_index = Vec::new();\n    let\
    \ mut paren_levels_len_max_index2 = Vec::new();\n    let mut paren_levels_len_max_index3\
    \ = Vec::new();\n    let mut paren_levels_len_max_index4 = Vec::new();\n    let\
    \ mut paren_levels_len_max_index5 = Vec::new();\n    let mut paren_levels_len_max_index6\
    \ = Vec::new();\n    let mut paren_levels_len_max_index7 = Vec::new();\n    let\
    \ mut paren_levels_len_max_index8 = Vec::new();\n    let mut paren_levels_len_max_index9\
    \ = Vec::new();\n    let mut paren_levels_len_max_index10 = Vec::new();\n    let\
    \ mut paren_levels_len_max_index11 = Vec::new();\n    let mut paren_levels_len_max_index12\
    \ = Vec::new();\n    let mut paren_levels_len_max_index13 = Vec::new();\n    let\
    \ mut paren_levels_len_max_index14 = Vec::new();\n    let mut paren_levels_len_max_index15\
    \ = Vec::new();\n    let mut paren_levels_len_max_index16 = Vec::new();\n    let\
    \ mut paren_levels_len_max_index17 = Vec::new();\n    let mut paren_levels_len_max_index18\
    \ = Vec::new();\n    let mut paren_levels_len_max_index19 = Vec::new();\n    let\
    \ mut paren_levels_len_max_index20 = Vec::new();\n    let mut paren_levels_len_max_index21\
    \ = Vec::new();\n    let mut paren_levels_len_max_index22 = Vec::new();\n    let\
    \ mut paren_levels_len_max_index23 = Vec::new();\n    let mut paren_levels_len_max_index24\
    \ = Vec::new();\n    let mut paren_levels_len_max_index25 = Vec::new();\n    let\
    \ mut paren_levels_len_max_index26", "    let mut paren_levels = vec![];\n   \
    \ let mut paren_level = 0;\n    let mut paren_level_count = 0;\n    let mut paren_level_char_count\
    \ = 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_char\
    \ = 0;\n    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len\
    \ = paren_level_char.len();\n    let mut paren_level_char_pos = 0;\n    let mut\
    \ paren_level_char_len = paren_level_char.len();\n    let mut paren_level_char_pos\
    \ = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n    let mut\
    \ paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let ", "    let mut paren_levels =\
    \ Vec::new();\n    let mut paren_level = 0;\n    let mut paren_level_count = 0;\n\
    \    let mut paren_level_char_count = 0;\n    let mut paren_level_chars = Vec::new();\n\
    \    let mut paren_level_char: char;\n    let mut paren_level_char_next: char;\n\
    \    let mut paren_level_char_next_next: char;\n    let mut paren_level_char_next_next_next:\
    \ char;\n    let mut paren_level_char_next_next_next_next: char;\n    let mut\
    \ paren_level_char_next_next_next_next_next: char;\n    let mut paren_level_char_next_next_next_next_next_next:\
    \ char;\n    let mut paren_level_char_next_next_next_next_next_next_next: char;\n\
    \    let mut paren_level_char_next_next_next_next_next_next_next_next: char;\n\
    \    let mut paren_level_char_next_next_next_next_next_next_next_next_next: char;\n\
    \    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next:\
    \ char;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_next:\
    \ char;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_next_next:\
    \ char;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_next_next:\
    \ char;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_next_next:\
    \ char;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_next_next_next:\
    \ char;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_next_next_next_next:\
    \ char;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next:\
    \ char;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next:\
    \ char;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next:\
    \ char;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next:\
    \ char;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next:\
    \ char;\n    let mut paren_level_char_next_next_next_next_next_", "    let mut\
    \ paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_level_count\
    \ = 0;\n    let mut paren_level_char_count = 0;\n    let mut paren_level_chars\
    \ = Vec::new();\n    let mut paren_level_char: char;\n    let mut paren_level_char_pos\
    \ = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n    let mut\
    \ paren_level_char_len = paren_level_chars.len();\n    let mut paren_level_char_pos\
    \ = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n    let mut\
    \ paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_", "    let\
    \ mut level = 0;\n    let mut paren_level = 0;\n    let mut paren_levels = Vec::new();\n\
    \    let mut paren_levels_size = paren_string.len();\n    let mut paren_levels_pos\
    \ = 0;\n    let mut paren_levels_len = paren_levels_size;\n    let mut paren_levels_pos\
    \ = 0;\n    let mut paren_levels_len = paren_levels_size;\n    let mut paren_levels_pos\
    \ = 0;\n    let mut paren_levels_len = paren_levels_size;\n    let mut paren_levels_pos\
    \ = 0;\n    let mut paren_levels_len = paren_levels_size;\n    let mut paren_levels_pos\
    \ = 0;\n    let mut paren_levels_len = paren_levels_size;\n    let mut paren_levels_pos\
    \ = 0;\n    let mut paren_levels_len = paren_levels_size;\n    let mut paren_levels_pos\
    \ = 0;\n    let mut paren_levels_len = paren_levels_size;\n    let mut paren_levels_pos\
    \ = 0;\n    let mut paren_levels_len = paren_levels_size;\n    let mut paren_levels_pos\
    \ = 0;\n    let mut paren_levels_len = paren_levels_size;\n    let mut paren_levels_pos\
    \ = 0;\n    let mut paren_levels_len = paren_levels_size;\n    let mut paren_levels_pos\
    \ = 0;\n    let mut paren_levels_len = paren_levels_size;\n    let mut paren_levels_pos\
    \ = 0;\n    let mut paren_levels_len = paren_levels_size;\n    let mut paren_levels_pos\
    \ = 0;\n    let mut paren_levels_len = paren_levels_size;\n    let mut paren_levels_pos\
    \ = 0;\n    let mut paren_levels_len = paren_levels_size;\n    let mut paren_levels_pos\
    \ = 0;\n    let mut paren_levels_len = paren_levels_size;\n    let mut paren_levels_pos\
    \ = 0;\n    let mut paren_levels_len = paren_levels_size;\n    let mut paren_levels_pos\
    \ = 0;\n    let mut paren_levels_len = paren_levels_size;\n    let mut paren_levels_pos\
    \ = 0;\n    let mut paren_levels_len = paren_levels_size;\n    let mut paren_levels_pos\
    \ = 0;\n    let mut paren_levels_len = paren_levels_size;\n    let mut paren_levels_pos\
    \ = 0;\n    let mut paren_level", "    let mut paren_levels = Vec::new();\n  \
    \  let mut paren_level = 0;\n    let mut paren_levels_stack = Vec::new();\n  \
    \  let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_len = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack_top - 1;\n    let mut paren_levels_stack_top = paren_levels_stack_top\
    \ - 1;\n    let mut paren_levels_stack_top = paren_levels_stack_top - 1;\n   \
    \ let mut paren_levels_stack_top = paren_levels_stack_top - 1;\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack_top - 1;\n    let mut paren_levels_stack_top = paren_levels_stack_top\
    \ - 1;\n    let mut paren_levels_stack_top = paren_levels_stack_top - 1;\n   \
    \ let mut paren_levels_stack_top = paren_levels_stack_top - 1;\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack_top - 1;\n    let mut paren_levels_stack_top = paren_levels_stack_top\
    \ - 1;\n    let mut paren_levels_stack_top = paren_levels_stack_top - 1;\n   \
    \ let mut paren_levels_stack_top = paren_levels_stack_top - 1;\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack_top - 1;\n    let mut paren_levels_stack_top = paren_levels_stack_top\
    \ - 1;\n    let mut paren_levels_stack_top = paren_levels_stack_top - 1;\n   \
    \ let mut paren_levels_stack_top = paren_levels_stack_top - 1;\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack_top - 1;\n    let mut paren_levels_stack_top = paren_levels_stack_top\
    \ - 1;\n    let mut paren_levels_stack_top = paren_levels_stack_top - 1;\n   \
    \ let mut paren_levels_stack_top = paren_levels_stack_top - 1;\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack_top - 1;\n    let mut paren_levels_stack_top = paren_levels_stack_top\
    \ - 1;\n    let mut paren_levels_stack_top = paren_levels_stack_top - 1;\n   \
    \ let mut paren_levels_stack_top = paren_levels_stack_top - 1;\n    let ", " \
    \   let mut levels = Vec::new();\n    let mut level = 0;\n    let mut paren_level\
    \ = 0;\n    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n\
    \    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let\
    \ mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_levels = Vec::new();\n\
    \    let mut paren_level = 0;\n    let mut paren_levels = Vec::new();\n    let\
    \ mut paren_level = 0;\n    let mut paren_levels = Vec::new();\n    let mut paren_level\
    \ = 0;\n    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n\
    \    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let\
    \ mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_levels = Vec::new();\n\
    \    let mut paren_level = 0;\n    let mut paren_levels = Vec::new();\n    let\
    \ mut paren_level = 0;\n    let mut paren_levels = Vec::new();\n    let mut paren_level\
    \ = 0;\n    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n\
    \    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let\
    \ mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_levels = Vec::new();\n\
    \    let mut paren_level = 0;\n    let mut paren_levels = Vec::new();\n    let\
    \ mut paren_level = 0;\n    let mut paren_levels = Vec::new();\n    let mut paren_level\
    \ = 0;\n    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n\
    \    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let\
    \ mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_levels\
    \ = Vec", "    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n\
    \    let mut paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let ", " \
    \   let mut level = 0;\n    let mut paren_levels = Vec::new();\n    let mut paren_levels_stack\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr = Vec::new();\n    let mut\
    \ paren_levels_ptr = Vec::new();\n    let mut paren_levels_ptr_end = Vec::new();\n\
    \    let mut paren_levels_ptr_end_ptr = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr = Vec::new();\n\
    \    let mut paren_levels_ptr_end_ptr_end_ptr_end = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end = Vec::new();\n\
    \    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr = Vec::new();\n\
    \    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end = Vec::new();\n\
    \    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr = Vec::new();\n\
    \    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end = Vec::new();\n\
    \    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_", " \
    \   let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let\
    \ mut paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_pos = paren_levels_stack.len();\n    let mut paren_levels_stack_len\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_pos = paren_levels_stack.len();\n    let mut paren_levels_stack_len\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_pos = paren_levels_stack.len();\n    let mut paren_levels_stack_len\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_pos = paren_levels_stack.len();\n    let mut paren_levels_stack_len\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_pos = paren_levels_stack.len();\n    let mut paren_levels_stack_len\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_pos = paren_levels_stack.len();\n    let mut paren_levels_stack_len\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_pos = paren_levels_stack.len();\n    let mut paren_levels_stack_len\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_pos = paren_levels_stack.len();\n    let mut paren_levels_stack_len\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_pos = paren_levels_stack.len();\n    let mut paren_levels_stack_len\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mu", "    let mut paren_stack: Vec<isize> = vec![];\n    let mut paren_level:\
    \ isize = 0;\n    let mut paren_level_count: usize = 0;\n    let mut paren_levels:\
    \ Vec<isize> = vec![];\n    let mut paren_levels_count: usize = 0;\n    let mut\
    \ paren_levels_string: String = String::new();\n    let mut paren_levels_string_count:\
    \ usize = 0;\n    let mut paren_levels_strings: Vec<String> = vec![];\n    let\
    \ mut paren_levels_strings_count: usize = 0;\n    let mut paren_levels_strings_count:\
    \ usize = 0;\n    let mut paren_levels_strings_string: String = String::new();\n\
    \    let mut paren_levels_strings_string_count: usize = 0;\n    let mut paren_levels_strings_strings:\
    \ Vec<String> = vec![];\n    let mut paren_levels_strings_strings_count: usize\
    \ = 0;\n    let mut paren_levels_strings_strings_count: usize = 0;\n    let mut\
    \ paren_levels_strings_strings_string: String = String::new();\n    let mut paren_levels_strings_strings_strings_count:\
    \ usize = 0;\n    let mut paren_levels_strings_strings_strings_count: usize =\
    \ 0;\n    let mut paren_levels_strings_strings_strings_string: String = String::new();\n\
    \    let mut paren_levels_strings_strings_strings_strings_count: usize = 0;\n\
    \    let mut paren_levels_strings_strings_strings_strings_count: usize = 0;\n\
    \    let mut paren_levels_strings_strings_strings_strings_string: String = String::new();\n\
    \    let mut paren_levels_strings_strings_strings_strings_strings_count: usize\
    \ = 0;\n    let mut paren_levels_strings_strings_strings_strings_strings_count:\
    \ usize = 0;\n    let mut paren_levels_strings_strings_strings_strings_strings_string:\
    \ String = String::new();\n    let mut paren_levels_strings_strings_strings_strings_strings_strings_count:\
    \ usize = 0;\n    let mut paren_levels_strings_strings_strings_strings_strings_strings_count:\
    \ usize = 0;\n    let mut paren_levels_strings_strings_strings_strings_strings_strings_string:\
    \ String = String::new();\n", "    let mut paren_levels = Vec::new();\n    let\
    \ mut paren_level = 0;\n    let mut paren_levels_stack = Vec::new();\n    let\
    \ mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_level", "    let mut paren_levels = Vec::new();\n    let mut\
    \ paren_level = 0;\n    let mut paren_levels_stack = Vec::new();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_level", "    let mut paren_stack: Vec<isize> = vec![];\n  \
    \  let mut paren_level: isize = 0;\n    let mut paren_level_count: isize = 0;\n\
    \    for paren in paren_string.chars() {\n        if paren == '(' {\n        \
    \    paren_stack.push(paren_level);\n            paren_level_count = paren_level_count;\n\
    \            paren_level += 1;\n        } else if paren == ')' {\n           \
    \ paren_level -= 1;\n            if paren_level == 0 {\n                paren_stack.push(paren_level_count);\n\
    \                paren_level_count += 1;\n            }\n        } else {\n  \
    \          paren_level_count += 1;\n        }\n    }\n    paren_stack", "    let\
    \ mut paren_level = 0;\n    let mut paren_nesting = 0;\n    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_nestings = Vec::new();\n    let mut paren_levels_stack\
    \ = Vec::new();\n    let mut paren_nestings_stack = Vec::new();\n    let mut paren_levels_stack_ptr\
    \ = paren_levels_stack.len();\n    let mut paren_nestings_stack_ptr = paren_nestings_stack.len();\n\
    \    let mut paren_levels_ptr = paren_levels.len();\n    let mut paren_nestings_ptr\
    \ = paren_nestings.len();\n    let mut paren_levels_ptr = paren_levels.len();\n\
    \    let mut paren_nestings_ptr = paren_nestings.len();\n    let mut paren_levels_ptr\
    \ = paren_levels.len();\n    let mut paren_nestings_ptr = paren_nestings.len();\n\
    \    let mut paren_levels_ptr = paren_levels.len();\n    let mut paren_nestings_ptr\
    \ = paren_nestings.len();\n    let mut paren_levels_ptr = paren_levels.len();\n\
    \    let mut paren_nestings_ptr = paren_nestings.len();\n    let mut paren_levels_ptr\
    \ = paren_levels.len();\n    let mut paren_nestings_ptr = paren_nestings.len();\n\
    \    let mut paren_levels_ptr = paren_levels.len();\n    let mut paren_nestings_ptr\
    \ = paren_nestings.len();\n    let mut paren_levels_ptr = paren_levels.len();\n\
    \    let mut paren_nestings_ptr = paren_nestings.len();\n    let mut paren_levels_ptr\
    \ = paren_levels.len();\n    let mut paren_nestings_ptr = paren_nestings.len();\n\
    \    let mut paren_levels_ptr = paren_levels.len();\n    let mut paren_nestings_ptr\
    \ = paren_nestings.len();\n    let mut paren_levels_ptr = paren_levels.len();\n\
    \    let mut paren_nestings_ptr = paren_nestings.len();\n    let mut paren_levels_ptr\
    \ = paren_levels.len();\n    let mut paren_nestings_ptr = paren_nestings.len();\n\
    \    let mut paren_levels_", "    let mut paren_levels = Vec::new();\n    let\
    \ mut paren_level = 0;\n    let mut paren_level_count = 0;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_char: char;\n    let mut paren_level_char_count\
    \ = 0;\n    while paren_level_char_count < paren_string.len() {\n        paren_level_char\
    \ = paren_level_string[paren_level_char_count];\n        paren_level_char_count\
    \ = paren_level_char_count + 1;\n        if paren_level_char == ' ' {\n      \
    \      paren_level_char_count = paren_level_char_count + 1;\n            paren_level_string\
    \ = paren_level_string.clone();\n            paren_level_string.truncate(paren_level_char_count);\n\
    \            paren_level_string.push_str(\" \");\n            paren_level_string.push_str(paren_level_string[paren_level_char_count..]);\n\
    \            paren_level_string.truncate(paren_level_char_count);\n          \
    \  paren_level_string.push_str(\" \");\n            paren_level_string.push_str(paren_level_string[paren_level_char_count..]);\n\
    \            paren_level_string.truncate(paren_level_char_count);\n          \
    \  paren_level_string.push_str(\" \");\n            paren_level_string.push_str(paren_level_string[paren_level_char_count..]);\n\
    \            paren_level_string.truncate(paren_level_char_count);\n          \
    \  paren_level_string.push_str(\" \");\n            paren_level_string.push_str(paren_level_string[paren_level_char_count..]);\n\
    \            paren_level_string.truncate(paren_level_char_count);\n          \
    \  paren_level_string.push_str(\" \");\n            paren_level_string.push_str(paren_level_string[paren_level_char_count..]);\n\
    \            paren_level_string.truncate(paren_level_char_count);\n          \
    \  paren_level_string.push_str(\" \");\n            paren_level_string.push_str(paren_level_string[paren_level_char_count..]);\n\
    \            paren_level_string.truncate(paren_level_char_count);\n          \
    \  paren_level_string.push_str(\" \");\n            paren_level_string.push_str(paren_level_string[paren_level_char_count..]);\n\
    \            paren_level_string.truncate(paren_level_char_count);\n          \
    \  paren_level_string.push_str(\" \");\n            paren_level_string.push_str(paren_level_string",
  "    let mut level = 0;\n    let mut paren_stack = Vec::new();\n    let mut paren_stack_len\
    \ = paren_string.len();\n    let mut paren_stack_pos = 0;\n    let mut paren_stack_char\
    \ = paren_string[paren_stack_pos];\n    let mut paren_stack_char_pos = 0;\n  \
    \  let mut paren_stack_char_len = paren_string[paren_stack_char_pos].len();\n\
    \    let mut paren_stack_char_pos = 0;\n    let mut paren_stack_char_len = paren_string[paren_stack_char_pos].len();\n\
    \    let mut paren_stack_char_pos = 0;\n    let mut paren_stack_char_len = paren_string[paren_stack_char_pos].len();\n\
    \    let mut paren_stack_char_pos = 0;\n    let mut paren_stack_char_len = paren_string[paren_stack_char_pos].len();\n\
    \    let mut paren_stack_char_pos = 0;\n    let mut paren_stack_char_len = paren_string[paren_stack_char_pos].len();\n\
    \    let mut paren_stack_char_pos = 0;\n    let mut paren_stack_char_len = paren_string[paren_stack_char_pos].len();\n\
    \    let mut paren_stack_char_pos = 0;\n    let mut paren_stack_char_len = paren_string[paren_stack_char_pos].len();\n\
    \    let mut paren_stack_char_pos = 0;\n    let mut paren_stack_char_len = paren_string[paren_stack_char_pos].len();\n\
    \    let mut paren_stack_char_pos = 0;\n    let mut paren_stack_char_len = paren_string[paren_stack_char_pos].len();\n\
    \    let mut paren_stack_char_pos = 0;\n    let mut paren_stack_char_len = paren_string[paren_stack_char_pos].len();\n\
    \    let mut paren_stack_char_pos = 0;\n    let mut paren_stack_char_len = paren_string[paren_stack_char_pos].len();\n\
    \    let mut paren_stack_char_pos = 0;\n    let mut paren_stack_char_len = paren_string[paren_stack_char_pos].len();\n\
    \    let mut paren_stack_char_pos = 0;\n    let mut paren_stack_char_len = paren_string[paren_stack_char_pos].len();\n\
    \    let mut paren_stack_char_pos = 0;\n    let mut paren_stack_char_len = paren_string[paren_stack_char_pos].len();\n\
    \    let mut paren_stack_char_pos = 0;\n    let mut paren_stack_char_len = paren_string[paren_stack_char_pos].len();\n\
    \    let mut paren_stack_", "    let mut paren_stack: Vec<isize> = vec![];\n \
    \   let mut paren_level: isize = 0;\n    let mut paren_level_count: isize = 0;\n\
    \    let mut paren_level_max_count: isize = 0;\n    let mut paren_level_max_level:\
    \ isize = 0;\n    let mut paren_level_max_level_count: isize = 0;\n    let mut\
    \ paren_level_max_level_max_count: isize = 0;\n    let mut paren_level_max_level_max_level:\
    \ isize = 0;\n    let mut paren_level_max_level_max_level_count: isize = 0;\n\
    \    let mut paren_level_max_level_max_level_max_level: isize = 0;\n    let mut\
    \ paren_level_max_level_max_level_max_level_count: isize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_level:\
    \ isize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_level_count:\
    \ isize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_level_max_level:\
    \ isize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_level_max_level_count:\
    \ isize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_level_max_level_max_level:\
    \ isize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_level_max_level_count:\
    \ isize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_level_max_level_max_level:\
    \ isize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_level_max_level_max_level_count:\
    \ isize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_level_max_level_max_level_max_level:\
    \ isize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_level_max_level_max_level_max_level_count:\
    \ isize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_level_max_level_max_level_max_level_max_level:\
    \ isize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_level_max_level_max_level_max_level_count:\
    \ isize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_level_max_level_max_level_max_level_max_level:\
    \ isize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_level_max_level_max_level_max_level_max_level_count:\
    \ isize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_level_max_level_max_level_max_level_max_level_max_level:\
    \ isize = 0;\n    let ", "    let mut paren_levels = Vec::new();\n    let mut\
    \ paren_level = 0;\n    let mut paren_level_count = 0;\n    let mut paren_level_char_count\
    \ = 0;\n    let mut paren_level_char = 0;\n    let mut paren_level_char_pos =\
    \ 0;\n    let mut paren_level_char_pos_count = 0;\n    let mut paren_level_char_pos_char\
    \ = 0;\n    let mut paren_level_char_pos_char_pos = 0;\n    let mut paren_level_char_pos_char_pos_count\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char = 0;\n    let mut paren_level_char_pos_char_pos_char_pos\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_count = 0;\n    let\
    \ mut paren_level_char_pos_char_pos_char_pos_char = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos_count = 0;\n\
    \    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char = 0;\n    let\
    \ mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos = 0;\n    let mut\
    \ paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_count = 0;\n    let\
    \ mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_char = 0;\n   \
    \ let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos =\
    \ 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_count\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_count\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_count\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_count\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_",
  "    let mut level = 0;\n    let mut paren_levels = Vec::new();\n    let mut paren_level\
    \ = 0;\n    let mut paren_level_count = 0;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren", "    let mut paren_levels = Vec::new();\n    let\
    \ mut paren_level = 0;\n    let mut paren_nesting = 0;\n    let mut paren_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting = 0;\n    let mut paren_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nest", "    let mut levels = Vec::new();\n \
    \   let mut paren_stack = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_levels = Vec::new();\n    let mut paren_levels_len = paren_levels;\n \
    \   let mut paren_levels_len_len = paren_levels_len;\n    let mut paren_levels_len_len_len\
    \ = paren_levels_len_len;\n    let mut paren_levels_len_len_len_len = paren_levels_len_len_len;\n\
    \    let mut paren_levels_len_len_len_len_len = paren_levels_len_len_len_len;\n\
    \    let mut paren_levels_len_len_len_len_len_len = paren_levels_len_len_len_len_len_len;\n\
    \    let mut paren_levels_len_len_len_len_len_len_len_len = paren_levels_len_len_len_len_len_len_len_len_len;\n\
    \    let mut paren_levels_len_len_len_len_len_len_len_len_len_len = paren_levels_len_len_len_len_len_len_len_len_len_len_len;\n\
    \    let mut paren_levels_len_len_len_len_len_len_len_len_len_len_len_len = paren_levels_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len;\n\
    \    let mut paren_levels_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = paren_levels_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_",
  "    let mut levels = vec![];\n    let mut paren_level = 0;\n    let mut paren_nesting\
    \ = 0;\n    for paren in paren_string.chars() {\n        if paren == '(' {\n \
    \           paren_nesting += 1;\n            levels.push(paren_nesting);\n   \
    \     } else if paren == ')' {\n            paren_nesting -= 1;\n            if\
    \ paren_nesting == 0 {\n                levels.push(paren_level);\n          \
    \  }\n        }\n    }\n    levels.reverse()", "    let mut levels = vec![];\n\
    \    let mut paren_count = 0;\n    for paren in paren_string.chars() {\n     \
    \   if paren == '(' {\n            paren_count += 1;\n        }\n        if paren\
    \ == ')' {\n            paren_count -= 1;\n        }\n        if paren_count ==\
    \ 0 {\n            levels.push(paren_count);\n        }\n    }\n    levels.sort_unstable();\n\
    \    levels", "    let mut level = 0;\n    let mut paren_stack: Vec<isize> = vec![];\n\
    \    for paren in paren_string.chars().filter_map(|c| match c {\n        '(' |\
    \ ')' | ' ' => false,\n        _ => true,\n    }) {\n        if paren == ' ' {\n\
    \            paren_stack.push(level);\n            level += 1;\n        } else\
    \ {\n            level -= 1;\n            if paren_stack.len() == 0 {\n      \
    \          panic!(\"Unexpected paren encountered while parsing nested parens.\"\
    );\n            }\n            paren_stack.pop();\n        }\n    }\n    paren_stack",
  "    let mut level = 0;\n    let mut paren_levels = Vec::new();\n    let mut paren_level\
    \ = 0;\n    let mut paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_top\
    \ = -1;\n    let mut paren_levels_stack_size = -1;\n    let mut paren_levels_stack_top\
    \ = -1;\n    let mut paren_levels_stack_size = -1;\n    let mut paren_levels_stack_top\
    \ = -1;\n    let mut paren_levels_stack_size = -1;\n    let mut paren_levels_stack_top\
    \ = -1;\n    let mut paren_levels_stack_size = -1;\n    let mut paren_levels_stack_top\
    \ = -1;\n    let mut paren_levels_stack_size = -1;\n    let mut paren_levels_stack_top\
    \ = -1;\n    let mut paren_levels_stack_size = -1;\n    let mut paren_levels_stack_top\
    \ = -1;\n    let mut paren_levels_stack_size = -1;\n    let mut paren_levels_stack_top\
    \ = -1;\n    let mut paren_levels_stack_size = -1;\n    let mut paren_levels_stack_top\
    \ = -1;\n    let mut paren_levels_stack_size = -1;\n    let mut paren_levels_stack_top\
    \ = -1;\n    let mut paren_levels_stack_size = -1;\n    let mut paren_levels_stack_top\
    \ = -1;\n    let mut paren_levels_stack_size = -1;\n    let mut paren_levels_stack_top\
    \ = -1;\n    let mut paren_levels_stack_size = -1;\n    let mut paren_levels_stack_top\
    \ = -1;\n    let mut paren_levels_stack_size = -1;\n    let mut paren_levels_stack_top\
    \ = -1;\n    let mut paren_levels_stack_size = -1;\n    let mut paren_levels_stack_top\
    \ = -1;\n    let mut paren_levels_stack_size = -1;\n    let mut paren_levels_stack_top\
    \ = -1;\n    let mut paren_levels_stack_size = -1;\n    let mut paren_levels_stack_top\
    \ = -1;\n    let mut paren_levels_stack_size = -1;\n    let mut paren_levels_stack_top\
    \ = -1;\n    let mut paren_levels_stack_size = -1;\n    let mut paren_levels_stack_top\
    \ = -1;\n    let mut paren_levels_stack_size = -1;\n    let mut paren_levels_stack_top\
    \ = -1;\n    let mut paren_levels_stack_size = -1;\n    let mut paren_levels_stack_top\
    \ = -1;\n    let mut paren_levels_stack_size = -1;\n    let mut paren_levels_stack_top\
    \ = -1;", "    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n\
    \    let mut paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_level",
  "    let mut paren_stack: Vec<isize> = vec![];\n    let mut paren_level: isize =\
    \ 0;\n    let mut paren_level_count: isize = 0;\n    for paren in paren_string.chars()\
    \ {\n        if paren == '(' {\n            paren_stack.push(paren_level);\n \
    \           paren_level_count = paren_level_count;\n        } else if paren ==\
    \ ')' {\n            paren_level_count = paren_stack.pop();\n            if paren_level_count\
    \ == 0 {\n                paren_level_count = paren_level_count;\n           \
    \ }\n        }\n        paren_level = paren_level + 1;\n    }\n    paren_level_count",
  "    let mut paren_levels = vec![0];\n    let mut paren_level = 0;\n    let mut\
    \ paren_levels_len = paren_string.len();\n    let mut paren_levels_ptr = paren_levels_len\
    \ as *const isize;\n    let mut paren_levels_ptr_end = paren_levels_ptr + paren_levels_len;\n\
    \    let mut paren_levels_ptr_end_ptr = paren_levels_ptr_end as *const isize;\n\
    \    let mut paren_levels_ptr_end_ptr_end = paren_levels_ptr_end_ptr + paren_levels_len;\n\
    \    let mut paren_levels_ptr_end_ptr_end_ptr = paren_levels_ptr_end_ptr_end as\
    \ *const isize;\n    let mut paren_levels_ptr_end_ptr_end_ptr_end = paren_levels_ptr_end_ptr_end_ptr\
    \ + paren_levels_len;\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr =\
    \ paren_levels_ptr_end_ptr_end_ptr_end as *const isize;\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end\
    \ = paren_levels_ptr_end_ptr_end_ptr_end_ptr + paren_levels_len;\n    let mut\
    \ paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr = paren_levels_ptr_end_ptr_end_ptr_end_ptr_end\
    \ as *const isize;\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end\
    \ = paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr + paren_levels_len;\n   \
    \ let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr = paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end\
    \ as *const isize;\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end\
    \ = paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr + paren_levels_len;\n\
    \    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end as *const ",
  "    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_pos = 0;\n\
    \    let mut paren_levels_stack_len = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_top = paren_levels_stack_len;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_len;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_len;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_top = paren_levels_stack_len;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_len;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_len;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_top = paren_levels_stack_len;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_len;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_len;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_top = paren_levels_stack_len;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_len;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_len;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_top = paren_levels_stack_len;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_len;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_len;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_top = paren_levels_stack_len;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_len;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_len;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_top = paren_level",
  "    let mut paren_stack: Vec<isize> = vec![];\n    let mut paren_level: isize =\
    \ 0;\n    let mut paren_levels: Vec<isize> = vec![];\n    let mut paren_levels_len:\
    \ usize = 0;\n    let mut paren_levels_lens: Vec<usize> = vec![];\n    let mut\
    \ paren_levels_lens_len: usize = 0;\n    let mut paren_levels_lens_lens: Vec<usize>\
    \ = vec![];\n    let mut paren_levels_lens_lens_len: usize = 0;\n    let mut paren_levels_lens_lens_lens:\
    \ Vec<usize> = vec![];\n    let mut paren_levels_lens_lens_lens_len: usize = 0;\n\
    \    let mut paren_levels_lens_lens_lens_lens: Vec<usize> = vec![];\n    let mut\
    \ paren_levels_lens_lens_lens_lens_len: usize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens:\
    \ Vec<usize> = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_len:\
    \ usize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens: Vec<usize>\
    \ = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_len: usize\
    \ = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens: Vec<usize>\
    \ = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_len:\
    \ usize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens:\
    \ Vec<usize> = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_:\
    \ usize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens:\
    \ Vec<usize> = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_len",
  "    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_nesting = 0;\n    let mut paren_nesting_level = 0;\n    let mut paren_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nest", "    let mut level = 0;\n    let mut paren_levels =\
    \ vec![];\n    let mut paren_levels_len = 0;\n    let mut paren_levels_len2 =\
    \ 0;\n    let mut paren_levels_len3 = 0;\n    let mut paren_levels_len4 = 0;\n\
    \    let mut paren_levels_len5 = 0;\n    let mut paren_levels_len6 = 0;\n    let\
    \ mut paren_levels_len7 = 0;\n    let mut paren_levels_len8 = 0;\n    let mut\
    \ paren_levels_len9 = 0;\n    let mut paren_levels_len10 = 0;\n    let mut paren_levels_len11\
    \ = 0;\n    let mut paren_levels_len12 = 0;\n    let mut paren_levels_len13 =\
    \ 0;\n    let mut paren_levels_len14 = 0;\n    let mut paren_levels_len15 = 0;\n\
    \    let mut paren_levels_len16 = 0;\n    let mut paren_levels_len17 = 0;\n  \
    \  let mut paren_levels_len18 = 0;\n    let mut paren_levels_len19 = 0;\n    let\
    \ mut paren_levels_len20 = 0;\n    let mut paren_levels_len21 = 0;\n    let mut\
    \ paren_levels_len22 = 0;\n    let mut paren_levels_len23 = 0;\n    let mut paren_levels_len24\
    \ = 0;\n    let mut paren_levels_len25 = 0;\n    let mut paren_levels_len26 =\
    \ 0;\n    let mut paren_levels_len27 = 0;\n    let mut paren_levels_len28 = 0;\n\
    \    let mut paren_levels_len29 = 0;\n    let mut paren_levels_len30 = 0;\n  \
    \  let mut paren_levels_len31 = 0;\n    let mut paren_levels_len32 = 0;\n    let\
    \ mut paren_levels_len33 = 0;\n    let mut paren_levels_len34 = 0;\n    let mut\
    \ paren_levels_len35 = 0;\n    let mut paren_levels_len36 = 0;\n    let mut paren_levels_len37\
    \ = 0;\n    let mut paren_levels_len38 = 0;\n    let mut paren_levels_len39 =\
    \ 0;\n    let mut paren_levels_len40 = 0;\n    let mut paren_levels_len41 = 0;\n\
    \    let mut paren_levels_len42 = 0;\n    let mut paren_levels_len43 = 0;\n  \
    \  let mut paren_levels_len44 = 0;\n    let mut paren_levels_len45 = 0;\n    let\
    \ mut paren_", "    let mut paren_stack = Vec::new();\n    let mut paren_level\
    \ = 0;\n    let mut paren_level_count = 0;\n    let mut paren_level_max_count\
    \ = 0;\n    let mut paren_level_max_count_index = 0;\n    let mut paren_level_max_count_index2\
    \ = 0;\n    let mut paren_level_max_count_index3 = 0;\n    let mut paren_level_max_count_index4\
    \ = 0;\n    let mut paren_level_max_count_index5 = 0;\n    let mut paren_level_max_count_index6\
    \ = 0;\n    let mut paren_level_max_count_index7 = 0;\n    let mut paren_level_max_count_index8\
    \ = 0;\n    let mut paren_level_max_count_index9 = 0;\n    let mut paren_level_max_count_index10\
    \ = 0;\n    let mut paren_level_max_count_index11 = 0;\n    let mut paren_level_max_count_index12\
    \ = 0;\n    let mut paren_level_max_count_index13 = 0;\n    let mut paren_level_max_count_index14\
    \ = 0;\n    let mut paren_level_max_count_index15 = 0;\n    let mut paren_level_max_count_index16\
    \ = 0;\n    let mut paren_level_max_count_index17 = 0;\n    let mut paren_level_max_count_index18\
    \ = 0;\n    let mut paren_level_max_count_index19 = 0;\n    let mut paren_level_max_count_index20\
    \ = 0;\n    let mut paren_level_max_count_index21 = 0;\n    let mut paren_level_max_count_index22\
    \ = 0;\n    let mut paren_level_max_count_index23 = 0;\n    let mut paren_level_max_count_index24\
    \ = 0;\n    let mut paren_level_max_count_index25 = 0;\n    let mut paren_level_max_count_index26\
    \ = 0;\n    let mut paren_level_max_count_index27 = 0;\n    let mut paren_level_max_count_index28\
    \ = 0;\n    let mut paren_level_max_count_index29 = 0;\n    let mut paren_level_max_count_index30\
    \ = 0;\n    let mut paren_level_max_count_index31 = 0;\n    let mut paren_level_max_count_index32\
    \ = 0;\n    let mut paren_level_max_count_index33 = 0;\n    let mut paren_level_max_count_index34\
    \ = 0;\n    let mut paren_level_max_count_index35 = 0;\n    let mut paren_level_max_count_index36\
    \ = 0;\n    let mut paren_level_max_count_index37 = 0;\n    let mut paren_level_max_count_index38\
    \ = 0;\n    let mut paren_level_max_count_index39 = 0;\n    let mut paren_level_max_count_index40\
    \ = 0;", "    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n\
    \    let mut paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_end = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_end = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_end = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_end = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_end = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_end = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_end = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_end = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_end = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren", "    let mut levels = Vec::new();\n    let mut level = 0;\n    let\
    \ mut paren_level = 0;\n    let mut paren_nesting = 0;\n    let mut paren_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting = 0;\n    let mut paren_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren", "    let mut level = 0;\n    let mut paren_stack =\
    \ Vec::new();\n    let mut paren_stack_len = paren_string.len();\n    let mut\
    \ paren_stack_pos = 0;\n    let mut paren_stack_end = paren_string.len();\n  \
    \  let mut paren_stack_start = paren_stack_pos;\n    let mut paren_stack_char\
    \ = paren_string[paren_stack_pos];\n    while paren_stack_pos < paren_stack_end\
    \ {\n        if paren_stack_char == ')' {\n            paren_stack.pop();\n  \
    \          paren_stack_end = paren_stack_pos;\n            paren_stack_start =\
    \ paren_stack_pos;\n            paren_stack_char = paren_string[paren_stack_pos];\n\
    \            level -= 1;\n        } else if paren_stack_char == '(' {\n      \
    \      paren_stack.push(level);\n            paren_stack_pos = paren_stack_end;\n\
    \            paren_stack_char = paren_string[paren_stack_pos];\n            level\
    \ += 1;\n        } else {\n            paren_stack_pos += 1;\n            paren_stack_char\
    \ = paren_string[paren_stack_pos];\n        }\n    }\n    paren_stack", "    let\
    \ mut paren_stack: Vec<isize> = vec![];\n    let mut paren_level: isize = 0;\n\
    \    for paren in paren_string.chars() {\n        if paren == '(' {\n        \
    \    paren_stack.push(paren_level);\n            paren_level += 1;\n        }\
    \ else if paren == ')' {\n            paren_level -= 1;\n            if paren_level\
    \ == 0 {\n                paren_stack.push(paren_level);\n            }\n    \
    \    }\n    }\n    paren_stack", "    let mut paren_level = 0;\n    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_size\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr = Vec::new();\n    let mut\
    \ paren_levels_stack_ptr_ptr = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr = Vec::new();\n    let mut\
    \ paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr",
  "    let mut paren_levels = vec![];\n    let mut paren_level = 0;\n    let mut paren_level_count\
    \ = 0;\n    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren", "    let mut paren_levels = vec![];\n    let mut paren_level\
    \ = 0;\n    let mut paren_level_count = 0;\n    let mut paren_level_char_count\
    \ = 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_char:\
    \ char;\n    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len\
    \ = paren_string.chars().count();\n    let mut paren_level_char_pos = 0;\n   \
    \ let mut paren_level_char_len = paren_string.chars().count();\n    let mut paren_level_char_pos\
    \ = 0;\n    let mut paren_level_char_len = paren_string.chars().count();\n   \
    \ let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_string.chars().count();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_string.chars().count();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_string.chars().count();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_string.chars().count();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_string.chars().count();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_string.chars().count();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_string.chars().count();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_string.chars().count();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_string.chars().count();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_string.chars().count();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_string.chars().count();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_string.chars().count();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_string.chars().count();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_string.chars().count();\n\
    \    let mut paren_level_char_pos = 0;", "    let mut paren_levels = vec![];\n\
    \    let mut paren_level = 0;\n    let mut paren_levels_stack = vec![];\n    let\
    \ mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_len = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_max_len = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_max_pos = paren_levels_stack_len;\n    let mut paren_levels_stack_max_pos_index\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_max_pos_index2 = 0;\n\
    \    let mut paren_levels_stack_max_pos_index3 = 0;\n    let mut paren_levels_stack_max_pos_index4\
    \ = 0;\n    let mut paren_levels_stack_max_pos_index5 = 0;\n    let mut paren_levels_stack_max_pos_index6\
    \ = 0;\n    let mut paren_levels_stack_max_pos_index7 = 0;\n    let mut paren_levels_stack_max_pos_index8\
    \ = 0;\n    let mut paren_levels_stack_max_pos_index9 = 0;\n    let mut paren_levels_stack_max_pos_index10\
    \ = 0;\n    let mut paren_levels_stack_max_pos_index11 = 0;\n    let mut paren_levels_stack_max_pos_index12\
    \ = 0;\n    let mut paren_levels_stack_max_pos_index13 = 0;\n    let mut paren_levels_stack_max_pos_index14\
    \ = 0;\n    let mut paren_levels_stack_max_pos_index15 = 0;\n    let mut paren_levels_stack_max_pos_index16\
    \ = 0;\n    let mut paren_levels_stack_max_pos_index17 = 0;\n    let mut paren_levels_stack_max_pos_index18\
    \ = 0;\n    let mut paren_levels_stack_max_pos_index19 = 0;\n    let mut paren_levels_stack_max_pos_index20\
    \ = 0;\n    let mut paren_levels_stack_max_pos_index21 = 0;\n    let mut paren_levels_stack_max_pos_index22\
    \ = 0;\n    let mut paren_levels_stack_max_pos_index23 = 0;\n    let mut paren_levels_stack_max_pos_index24\
    \ = 0;\n    let mut paren_levels_stack_max_pos_index25 = 0;\n    let mut paren_levels_stack_max_pos_index26\
    \ = 0;\n    let mut paren_levels_stack_max_pos_index27 = 0;\n    let mut paren_levels_stack_max_pos_index28\
    \ = 0;\n    let mut paren_levels_stack_max_pos_index29 = 0;\n    let mut paren_levels_stack_max_pos_index",
  "    let mut paren_stack: Vec<isize> = vec![];\n    let mut paren_level: isize =\
    \ 0;\n    let mut paren_levels: Vec<isize> = vec![];\n    let mut paren_levels_len:\
    \ usize = 0;\n    let mut paren_levels_lens: Vec<usize> = vec![];\n    let mut\
    \ paren_levels_lens_len: usize = 0;\n    let mut paren_levels_lens_lens: Vec<usize>\
    \ = vec![];\n    let mut paren_levels_lens_lens_len: usize = 0;\n    let mut paren_levels_lens_lens_lens:\
    \ Vec<usize> = vec![];\n    let mut paren_levels_lens_lens_lens_len: usize = 0;\n\
    \    let mut paren_levels_lens_lens_lens_lens: Vec<usize> = vec![];\n    let mut\
    \ paren_levels_lens_lens_lens_lens_len: usize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens:\
    \ Vec<usize> = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_len:\
    \ usize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens: Vec<usize>\
    \ = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_len: usize\
    \ = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens: Vec<usize>\
    \ = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_len:\
    \ usize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens:\
    \ Vec<usize> = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens:\
    \ Vec<usize> = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens:\
    \ Vec<usize> = vec![];\n    let mut paren_levels_lens_lens_lens_lens_", "    let\
    \ mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_levels_stack\
    \ = Vec::new();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_curr = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_curr\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_curr = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_curr\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_curr = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_curr\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_curr = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_curr\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_curr = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_curr\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_curr = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_curr\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_curr = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_level",
  "    let mut level = 0usize;\n    let mut paren_level = 0usize;\n    let mut paren_nesting\
    \ = 0usize;\n    let mut paren_nesting_level = 0usize;\n    let mut paren_nesting_nesting\
    \ = 0usize;\n    let mut paren_nesting_nesting_level = 0usize;\n    let mut paren_nesting_nesting_nesting\
    \ = 0usize;\n    let mut paren_nesting_nesting_nesting_level = 0usize;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting = 0usize;\n    let mut paren_nesting_nesting_nesting_level\
    \ = 0usize;\n    let mut paren_nesting_nesting_nesting_nesting = 0usize;\n   \
    \ let mut paren_nesting_nesting_nesting_level = 0usize;\n    let mut paren_nesting_nesting_nesting_nesting\
    \ = 0usize;\n    let mut paren_nesting_nesting_nesting_level = 0usize;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting = 0usize;\n    let mut paren_nesting_nesting_nesting_level\
    \ = 0usize;\n    let mut paren_nesting_nesting_nesting = 0usize;\n    let mut\
    \ paren_nesting_nesting_level = 0usize;\n    let mut paren_nesting_nesting = 0usize;\n\
    \    let mut paren_nesting_level = 0usize;\n    let mut paren_level = 0usize;\n\
    \    let mut paren_nesting = 0usize;\n    let mut paren_nesting_level = 0usize;\n\
    \    let mut paren_nesting_nesting = 0usize;\n    let mut paren_nesting_nesting_level\
    \ = 0usize;\n    let mut paren_nesting_nesting_nesting = 0usize;\n    let mut\
    \ paren_nesting_nesting_nesting_level = 0usize;\n    let mut paren_nesting_nesting_nesting_nesting\
    \ = 0usize;\n    let mut paren_nesting_nesting_nesting_level = 0usize;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting = 0usize;\n    let mut paren_nesting_nesting_nesting_level\
    \ = 0usize;\n    let mut paren_nesting_nesting_nesting = 0usize;\n    let mut\
    \ paren_nesting_nesting_level = 0usize;\n    let mut paren_nesting_nesting = 0usize;\n\
    \    let mut paren_nesting_level = 0usize;\n    let mut paren_level = 0usize;\n\
    \    let mut paren_nest", "    let mut paren_levels = Vec::new();\n    let mut\
    \ paren_level = 0;\n    let mut paren_level_index = 0;\n    let mut paren_level_stack\
    \ = Vec::new();\n    let mut paren_level_stack_pointer = 0;\n    let mut paren_level_stack_pointer_pointer\
    \ = 0;\n    let mut paren_level_stack_pointer_pointer_pointer = 0;\n    let mut\
    \ paren_level_stack_pointer_pointer_pointer_pointer = 0;\n    let mut paren_level_stack_pointer_pointer_pointer_pointer_pointer\
    \ = 0;\n    let mut paren_level_stack_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = 0;\n    let mut paren_level_stack_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = 0;\n    let mut paren_level_stack_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = 0;\n    let mut paren_level_stack_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = 0;\n    let mut paren_level_stack_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = 0;\n    let mut paren_level_stack_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = 0;\n    let mut paren_level_stack_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = 0;\n    let mut paren_level_stack_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = 0;\n    let mut paren_level_stack_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = 0;\n    let mut paren_level_stack_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = 0;\n    let mut paren_level_stack_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = 0;\n    let mut paren_level_stack_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer\
    \ = 0;\n    let mut paren_level_stack_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer_pointer",
  "    let mut paren_stack = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_levels = Vec::new();\n    let mut paren_levels_size = Vec::new();\n  \
    \  let mut paren_levels_size_ptr = Vec::new();\n    let mut paren_levels_size_max\
    \ = Vec::new();\n    let mut paren_levels_size_max_ptr = Vec::new();\n    let\
    \ mut paren_levels_size_min = Vec::new();\n    let mut paren_levels_size_min_ptr\
    \ = Vec::new();\n    let mut paren_levels_size_sum = Vec::new();\n    let mut\
    \ paren_levels_size_sum_ptr = Vec::new();\n    let mut paren_levels_size_avg =\
    \ Vec::new();\n    let mut paren_levels_size_avg_ptr = Vec::new();\n    let mut\
    \ paren_levels_size_max = Vec::new();\n    let mut paren_levels_size_max_ptr =\
    \ Vec::new();\n    let mut paren_levels_size_min = Vec::new();\n    let mut paren_levels_size_min_ptr\
    \ = Vec::new();\n    let mut paren_levels_size_sum = Vec::new();\n    let mut\
    \ paren_levels_size_sum_ptr = Vec::new();\n    let mut paren_levels_size_avg =\
    \ Vec::new();\n    let mut paren_levels_size_avg_ptr = Vec::new();\n    let mut\
    \ paren_levels_size_max = Vec::new();\n    let mut paren_levels_size_max_ptr =\
    \ Vec::new();\n    let mut paren_levels_size_min = Vec::new();\n    let mut paren_levels_size_min_ptr\
    \ = Vec::new();\n    let mut paren_levels_size_sum = Vec::new();\n    let mut\
    \ paren_levels_size_sum_ptr = Vec::new();\n    let mut paren_levels_size_avg =\
    \ Vec::new();\n    let mut paren_levels_size_avg_ptr = Vec::new();\n    let mut\
    \ paren_levels_size_max = Vec::new();\n    let mut paren_levels_size_max_ptr =\
    \ Vec::new();\n    let mut paren_levels_size_min = Vec::new();\n    let mut paren_levels_size_min_ptr\
    \ = Vec::new();\n    let mut paren_levels_size_sum = Vec::new();\n    let mut\
    \ paren_levels_size_sum_ptr = Vec::new();", "    let mut paren_stack: Vec<isize>\
    \ = vec![];\n    let mut paren_level: isize = 0;\n    for paren in paren_string.chars()\
    \ {\n        if paren == '(' {\n            paren_stack.push(paren_level);\n \
    \           paren_level += 1;\n        } else if paren == ')' {\n            paren_level\
    \ -= 1;\n            if paren_level == 0 {\n                paren_stack.push(paren_level);\n\
    \            }\n        }\n    }\n    paren_stack", "    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_levels_stack\
    \ = Vec::new();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let ", " \
    \   let mut level = 0;\n    let mut paren_levels = Vec::new();\n    let mut paren_levels_stack\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr = 0;\n    let mut paren_levels_ptr\
    \ = paren_levels_stack.as_mut_ptr();\n    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_", "    let mut paren_levels = Vec::new();\n    let\
    \ mut paren_level = 0;\n    let mut paren_levels_stack = Vec::new();\n    let\
    \ mut paren_levels_stack_ptr = 0;\n    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_ptr_end_ptr = paren_levels_stack_ptr_end;\n    let mut paren_levels_stack_ptr_end_ptr\
    \ = paren_levels_stack_ptr_end;\n    let mut paren_levels_stack_ptr_end_ptr =\
    \ paren_levels_stack_ptr_end;\n    let mut paren_levels_stack_ptr_end_ptr = paren_levels_stack_ptr_end;\n\
    \    let mut paren_levels_stack_ptr_end_ptr = paren_levels_stack_ptr_end;\n  \
    \  let mut paren_levels_stack_ptr_end_ptr = paren_levels_stack_ptr_end;\n    let\
    \ mut paren_levels_stack_ptr_end_ptr = paren_levels_stack_ptr_end;\n    let mut\
    \ paren_levels_stack_ptr_end_ptr = paren_levels_stack_ptr_end;\n    let mut paren_levels_stack_ptr_end_ptr\
    \ = paren_levels_stack_ptr_end;\n    let mut paren_levels_stack_ptr_end_ptr =\
    \ paren_levels_stack_ptr_end;\n    let mut paren_levels_stack_ptr_end_ptr = paren_levels_stack_ptr_end;\n\
    \    let mut paren_levels_stack_ptr_end_ptr = paren_levels_stack_ptr_end;\n  \
    \  let mut paren_levels_stack_ptr_end_ptr = paren_levels_stack_ptr_end;\n    let\
    \ mut paren_levels_stack_ptr_end_ptr = paren_levels_stack_ptr_end;\n    let mut\
    \ paren_levels_stack_ptr_end_ptr = paren_levels_stack_ptr_end;\n    let mut paren_levels_stack_ptr_end_ptr\
    \ = paren_levels_stack_ptr_end;\n    let mut paren_levels_stack_ptr_end_ptr =\
    \ paren_levels_stack_ptr_end;\n    let mut paren_levels_stack_ptr_end_ptr = paren_levels_stack_ptr_end;\n\
    \    let mut paren_levels_stack_ptr_end_ptr = paren_levels_stack_ptr_end;\n  \
    \  let mut paren_levels_stack_ptr_end_", "    let mut levels = Vec::new();\n \
    \   let mut paren_count = 0;\n    let mut paren_level = 0;\n    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_levels_len = paren_levels;\n    let mut paren_levels_len\
    \ = paren_levels;\n    let mut paren_levels_len = paren_levels;\n    let mut paren_levels_len\
    \ = paren_levels;\n    let mut paren_levels_len = paren_levels;\n    let mut paren_levels_len\
    \ = paren_levels;\n    let mut paren_levels_len = paren_levels;\n    let mut paren_levels_len\
    \ = paren_levels;\n    let mut paren_levels_len = paren_levels;\n    let mut paren_levels_len\
    \ = paren_levels;\n    let mut paren_levels_len = paren_levels;\n    let mut paren_levels_len\
    \ = paren_levels;\n    let mut paren_levels_len = paren_levels;\n    let mut paren_levels_len\
    \ = paren_levels;\n    let mut paren_levels_len = paren_levels;\n    let mut paren_levels_len\
    \ = paren_levels;\n    let mut paren_levels_len = paren_levels;\n    let mut paren_levels_len\
    \ = paren_levels;\n    let mut paren_levels_len = paren_levels;\n    let mut paren_levels_len\
    \ = paren_levels;\n    let mut paren_levels_len = paren_levels;\n    let mut paren_levels_len\
    \ = paren_levels;\n    let mut paren_levels_len = paren_levels;\n    let mut paren_levels_len\
    \ = paren_levels;\n    let mut paren_levels_len = paren_levels;\n    let mut paren_levels_len\
    \ = paren_levels;\n    let mut paren_levels_len = paren_levels;\n    let mut paren_levels_len\
    \ = paren_levels;\n    let mut paren_levels_len = paren_levels;\n    let mut paren_levels_len\
    \ = paren_levels;\n    let mut paren_levels_len = paren_levels;\n    let mut paren_levels_len\
    \ = paren_levels;\n    let mut paren_levels_len = paren_levels;\n    let mut paren_levels_len\
    \ = paren_levels;\n    let mut paren_levels_len = paren_levels;\n    let mut paren_levels_len\
    \ = paren_levels;\n    let mut paren_levels_", "    let mut level = 0;\n    let\
    \ mut paren_stack = Vec::new();\n    let mut paren_stack_size = paren_stack.len();\n\
    \    let mut paren_stack_pos = 0;\n    let mut paren_stack_end = paren_stack_size;\n\
    \    let mut paren_stack_top = paren_stack_size;\n    let mut paren_stack_top\
    \ = paren_stack_size;\n    let mut paren_stack_top = paren_stack_size;\n    let\
    \ mut paren_stack_top = paren_stack_size;\n    let mut paren_stack_top = paren_stack_size;\n\
    \    let mut paren_stack_top = paren_stack_size;\n    let mut paren_stack_top\
    \ = paren_stack_size;\n    let mut paren_stack_top = paren_stack_size;\n    let\
    \ mut paren_stack_top = paren_stack_size;\n    let mut paren_stack_top = paren_stack_size;\n\
    \    let mut paren_stack_top = paren_stack_size;\n    let mut paren_stack_top\
    \ = paren_stack_size;\n    let mut paren_stack_top = paren_stack_size;\n    let\
    \ mut paren_stack_top = paren_stack_size;\n    let mut paren_stack_top = paren_stack_size;\n\
    \    let mut paren_stack_top = paren_stack_size;\n    let mut paren_stack_top\
    \ = paren_stack_size;\n    let mut paren_stack_top = paren_stack_size;\n    let\
    \ mut paren_stack_top = paren_stack_size;\n    let mut paren_stack_top = paren_stack_size;\n\
    \    let mut paren_stack_top = paren_stack_size;\n    let mut paren_stack_top\
    \ = paren_stack_size;\n    let mut paren_stack_top = paren_stack_size;\n    let\
    \ mut paren_stack_top = paren_stack_size;\n    let mut paren_stack_top = paren_stack_size;\n\
    \    let mut paren_stack_top = paren_stack_size;\n    let mut paren_stack_top\
    \ = paren_stack_size;\n    let mut paren_stack_top = paren_stack_size;\n    let\
    \ mut paren_stack_top = paren_stack_size;\n    let mut paren_stack_top = paren_stack_size;\n\
    \    let mut paren_stack_top = paren_stack_size;\n    let mut paren_stack_top\
    \ = paren_stack_size;\n    let mut paren_stack_top = paren_stack_size;\n    let\
    \ mut paren_stack_top = paren_stack_size;\n    let mut paren_stack_top = paren_stack_size;\n\
    \    let mut paren", "    let mut paren_stack = Vec::new();\n    let mut paren_depth\
    \ = 0;\n    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n\
    \    let mut paren_levels_len = 0;\n    let mut paren_levels_len2 = 0;\n    let\
    \ mut paren_levels_len3 = 0;\n    let mut paren_levels_len4 = 0;\n    let mut\
    \ paren_levels_len5 = 0;\n    let mut paren_levels_len6 = 0;\n    let mut paren_levels_len7\
    \ = 0;\n    let mut paren_levels_len8 = 0;\n    let mut paren_levels_len9 = 0;\n\
    \    let mut paren_levels_len10 = 0;\n    let mut paren_levels_len11 = 0;\n  \
    \  let mut paren_levels_len12 = 0;\n    let mut paren_levels_len13 = 0;\n    let\
    \ mut paren_levels_len14 = 0;\n    let mut paren_levels_len15 = 0;\n    let mut\
    \ paren_levels_len16 = 0;\n    let mut paren_levels_len17 = 0;\n    let mut paren_levels_len18\
    \ = 0;\n    let mut paren_levels_len19 = 0;\n    let mut paren_levels_len20 =\
    \ 0;\n    let mut paren_levels_len21 = 0;\n    let mut paren_levels_len22 = 0;\n\
    \    let mut paren_levels_len23 = 0;\n    let mut paren_levels_len24 = 0;\n  \
    \  let mut paren_levels_len25 = 0;\n    let mut paren_levels_len26 = 0;\n    let\
    \ mut paren_levels_len27 = 0;\n    let mut paren_levels_len28 = 0;\n    let mut\
    \ paren_levels_len29 = 0;\n    let mut paren_levels_len30 = 0;\n    let mut paren_levels_len31\
    \ = 0;\n    let mut paren_levels_len32 = 0;\n    let mut paren_levels_len33 =\
    \ 0;\n    let mut paren_levels_len34 = 0;\n    let mut paren_levels_len35 = 0;\n\
    \    let mut paren_levels_len36 = 0;\n    let mut paren_levels_len37 = 0;\n  \
    \  let mut paren_levels_len38 = 0;\n    let mut paren_levels_len39 = 0;\n    let\
    \ mut paren_levels_len40 = 0;\n    let mut paren_levels_len41 = 1;\n    let mut\
    \ paren_levels_len42 = 1;\n    let mut paren_levels_len43 = 1;\n    let mut paren",
  "    let mut paren_stack = Vec::new();\n    let mut paren_depth = 0;\n    let mut\
    \ paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_levels_len\
    \ = 0;\n    let mut paren_levels_len2 = 0;\n    let mut paren_levels_len3 = 0;\n\
    \    let mut paren_levels_len4 = 0;\n    let mut paren_levels_len5 = 0;\n    let\
    \ mut paren_levels_len6 = 0;\n    let mut paren_levels_len7 = 0;\n    let mut\
    \ paren_levels_len8 = 0;\n    let mut paren_levels_len9 = 0;\n    let mut paren_levels_len10\
    \ = 0;\n    let mut paren_levels_len11 = 0;\n    let mut paren_levels_len12 =\
    \ 0;\n    let mut paren_levels_len13 = 0;\n    let mut paren_levels_len14 = 0;\n\
    \    let mut paren_levels_len15 = 0;\n    let mut paren_levels_len16 = 0;\n  \
    \  let mut paren_levels_len17 = 0;\n    let mut paren_levels_len18 = 0;\n    let\
    \ mut paren_levels_len19 = 0;\n    let mut paren_levels_len20 = 0;\n    let mut\
    \ paren_levels_len21 = 0;\n    let mut paren_levels_len22 = 0;\n    let mut paren_levels_len23\
    \ = 0;\n    let mut paren_levels_len24 = 0;\n    let mut paren_levels_len25 =\
    \ 0;\n    let mut paren_levels_len26 = 0;\n    let mut paren_levels_len27 = 0;\n\
    \    let mut paren_levels_len28 = 0;\n    let mut paren_levels_len29 = 0;\n  \
    \  let mut paren_levels_len30 = 0;\n    let mut paren_levels_len31 = 0;\n    let\
    \ mut paren_levels_len32 = 0;\n    let mut paren_levels_len33 = 0;\n    let mut\
    \ paren_levels_len34 = 0;\n    let mut paren_levels_len35 = 0;\n    let mut paren_levels_len36\
    \ = 0;\n    let mut paren_levels_len37 = 0;\n    let mut paren_levels_len38 =\
    \ 0;\n    let mut paren_levels_len39 = 0;\n    let mut paren_levels_len40 = 0;\n\
    \    let mut paren_levels_len41 = 1;\n    let mut paren_levels_len42 = 1;\n  \
    \  let mut paren_levels_len43 = 1;\n    let mut paren", "    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_level_count =\
    \ 0;\n    let mut paren_level_char_count = 0;\n    let mut paren_level_chars =\
    \ Vec::new();\n    let mut paren_level_char = 0;\n    let mut paren_level_char_pos\
    \ = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n    let mut\
    \ paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;", "    let mut paren_levels = vec![];\n\
    \    let mut paren_level = 0;\n    let mut paren_level_index = 0;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string_index = 0;\n\
    \    let mut paren_level_string_len = 0;\n    let mut paren_level_string_len_index\
    \ = 0;\n    let mut paren_level_string_len_len = 0;\n    let mut paren_level_string_len_len_index\
    \ = 0;\n    let mut paren_level_string_len_len_len = 0;\n    let mut paren_level_string_len_len_index\
    \ = 0;\n    let mut paren_level_string_len_len_len = 0;\n    let mut paren_level_string_len_len_index\
    \ = 0;\n    let mut paren_level_string_len_len_len = 0;\n    let mut paren_level_string_len_len_index\
    \ = 0;\n    let mut paren_level_string_len_len_len = 0;\n    let mut paren_level_string_len_len_index\
    \ = 0;\n    let mut paren_level_string_len_len_len = 0;\n    let mut paren_level_string_len_len_index\
    \ = 0;\n    let mut paren_level_string_len_len_len = 0;\n    let mut paren_level_string_len_len_index\
    \ = 0;\n    let mut paren_level_string_len_len_len = 0;\n    let mut paren_level_string_len_len_index\
    \ = 0;\n    let mut paren_level_string_len_len_len = 0;\n    let mut paren_level_string_len_len_index\
    \ = 0;\n    let mut paren_level_string_len_len_len = 0;\n    let mut paren_level_string_len_len_index\
    \ = 0;\n    let mut paren_level_string_len_len_len = 0;\n    let mut paren_level_string_len_len_index\
    \ = 0;\n    let mut paren_level_string_len_len_len = 0;\n    let mut paren_level_string_len_len_index\
    \ = 0;\n    let mut paren_level_string_len_len_len = 0;\n    let mut paren_level_string_len_len_index\
    \ = 0;\n    let mut paren_level_string_len_len_len = 0;\n    let mut paren_level_string_len_len_index\
    \ = 0;\n    let mut paren_level_string_len_len_len = 0;\n    let mut paren_level_string_len_len_index\
    \ = 0;\n    let mut paren_level_string_len_len_len = 0;\n    let mut paren_level_string_len_len_index\
    \ = 0;\n    let mut paren_level_string_len_len_len = 0;\n    let mut paren_level_string_len_len_index\
    \ = 0;\n    let mut paren_level_string_len_len_len = 0;\n    let mut paren_level_string_len_len_index\
    \ = 0;\n    let mut paren_level_string_len_len_len", "    let mut paren_stack:\
    \ Vec<isize> = vec![];\n    let mut paren_level: isize = 0;\n    for paren in\
    \ paren_string.chars() {\n        if paren == '(' {\n            paren_stack.push(paren_level);\n\
    \            paren_level += 1;\n        } else if paren == ')' {\n           \
    \ paren_level -= 1;\n            if paren_level == 0 {\n                paren_stack.push(paren_level);\n\
    \            }\n        } else {\n            paren_level += 1;\n        }\n \
    \   }\n    paren_stack", "    let mut paren_stack: Vec<isize> = vec![];\n    let\
    \ mut paren_level: isize = 0;\n    let mut paren_levels: Vec<isize> = vec![];\n\
    \    let mut paren_levels_len: usize = 0;\n    let mut paren_levels_lens: Vec<usize>\
    \ = vec![];\n    let mut paren_levels_lens_len: usize = 0;\n    let mut paren_levels_lens_lens:\
    \ Vec<usize> = vec![];\n    let mut paren_levels_lens_lens_len: usize = 0;\n \
    \   let mut paren_levels_lens_lens_lens: Vec<usize> = vec![];\n    let mut paren_levels_lens_lens_lens_len:\
    \ usize = 0;\n    let mut paren_levels_lens_lens_lens_lens: Vec<usize> = vec![];\n\
    \    let mut paren_levels_lens_lens_lens_lens_len: usize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens:\
    \ Vec<usize> = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_len:\
    \ usize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens: Vec<usize>\
    \ = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_len: usize\
    \ = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens: Vec<usize>\
    \ = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_len:\
    \ usize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens:\
    \ Vec<usize> = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens:\
    \ Vec<usize> = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens:\
    \ Vec<usize> = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_",
  "    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_pos = 0;\n\
    \    let mut paren_levels_stack_size = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_ptr = paren_levels_stack;\n    let mut paren_levels_stack_ptr_pos\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_ptr_size = paren_levels_stack_ptr.len();\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack_ptr + paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_ptr_end_pos = paren_levels_stack_ptr_end;\n  \
    \  let mut paren_levels_stack_ptr_end_size = paren_levels_stack_ptr_end - paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_ptr_end_ptr = paren_levels_stack_ptr_end;\n  \
    \  let mut paren_levels_stack_ptr_end_ptr_pos = paren_levels_stack_ptr_end_ptr;\n\
    \    let mut paren_levels_stack_ptr_end_ptr_size = paren_levels_stack_ptr_end_ptr\
    \ - paren_levels_stack_ptr_end;\n    let mut paren_levels_stack_ptr_end_ptr_end\
    \ = paren_levels_stack_ptr_end_ptr + paren_levels_stack_ptr_end_size;\n    let\
    \ mut paren_levels_stack_ptr_end_ptr_end_pos = paren_levels_stack_ptr_end_ptr_end;\n\
    \    let mut paren_levels_stack_ptr_end_ptr_end_size = paren_levels_stack_ptr_end_ptr_end\
    \ - paren_levels_stack_ptr_end_ptr;\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr\
    \ = paren_levels_stack_ptr_end_ptr_end;\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr_pos\
    \ = paren_levels_stack_ptr_end_ptr_end_ptr;\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr_size\
    \ = paren_levels_stack_ptr_end_ptr_end_ptr - paren_levels_stack_ptr_end_ptr_end;\n\
    \    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end = paren_levels_stack_ptr_end_ptr_end_ptr\
    \ + paren_levels_stack_ptr_end_ptr_end_size;", "    let mut paren_stack: Vec<isize>\
    \ = vec![];\n    let mut paren_level: isize = 0;\n    let mut paren_level_count:\
    \ usize = 0;\n    let mut paren_level_max_count: usize = 0;\n    let mut paren_level_max_level:\
    \ isize = 0;\n    let mut paren_level_max_level_count: usize = 0;\n    let mut\
    \ paren_level_max_level_max_count: usize = 0;\n    let mut paren_level_max_level_max_level:\
    \ isize = 0;\n    let mut paren_level_max_level_max_level_count: usize = 0;\n\
    \    let mut paren_level_max_level_max_level_max_count: usize = 0;\n    let mut\
    \ paren_level_max_level_max_level_max_level: isize = 0;\n    let mut paren_level_max_level_max_level_max_level_count:\
    \ usize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_count:\
    \ usize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_level:\
    \ isize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_level_count:\
    \ usize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_level_max_count:\
    \ usize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_level_max_level:\
    \ isize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_level_max_level_count:\
    \ usize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_level_max_level_max_count:\
    \ usize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_level_max_level_max_level:\
    \ isize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_level_max_level_max_level_count:\
    \ usize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_level_max_level_max_level_max_count:\
    \ usize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_level_max_level_max_level_max_level:\
    \ isize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_level_max_level_max_level_max_level_count:\
    \ usize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_level_max_level_max_level_max_level_max_level_max_count:\
    \ usize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_level_max_level_max_level_max_level_max_level_max_level:\
    \ isize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_level_max_level_",
  "    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_level",
  "    let mut paren_stack: Vec<isize> = vec![];\n    let mut paren_level: isize =\
    \ 0;\n    let mut paren_level_count: usize = 0;\n    let mut paren_level_max:\
    \ usize = 0;\n    let mut paren_level_max_count: usize = 0;\n    let mut paren_level_max_index:\
    \ usize = 0;\n    let mut paren_level_max_index: usize = 0;\n    let mut paren_level_max_index:\
    \ usize = 0;\n    let mut paren_level_max_index: usize = 0;\n    let mut paren_level_max_index:\
    \ usize = 0;\n    let mut paren_level_max_index: usize = 0;\n    let mut paren_level_max_index:\
    \ usize = 0;\n    let mut paren_level_max_index: usize = 0;\n    let mut paren_level_max_index:\
    \ usize = 0;\n    let mut paren_level_max_index: usize = 0;\n    let mut paren_level_max_index:\
    \ usize = 0;\n    let mut paren_level_max_index: usize = 0;\n    let mut paren_level_max_index:\
    \ usize = 0;\n    let mut paren_level_max_index: usize = 0;\n    let mut paren_level_max_index:\
    \ usize = 0;\n    let mut paren_level_max_index: usize = 0;\n    let mut paren_level_max_index:\
    \ usize = 0;\n    let mut paren_level_max_index: usize = 0;\n    let mut paren_level_max_index:\
    \ usize = 0;\n    let mut paren_level_max_index: usize = 0;\n    let mut paren_level_max_index:\
    \ usize = 0;\n    let mut paren_level_max_index: usize = 0;\n    let mut paren_level_max_index:\
    \ usize = 0;\n    let mut paren_level_max_index: usize = 0;\n    let mut paren_level_max_index:\
    \ usize = 0;\n    let mut paren_level_max_index: usize = 0;\n    let mut paren_level_max_index:\
    \ usize = 0;\n    let mut paren_level_max_index: usize = 0;\n    let mut paren_level_max_index:\
    \ usize = 0;\n    let mut paren_level_max_index: usize = 0;\n    let mut paren_level_max_index:\
    \ usize = 0;\n    let mut paren_level_max_index: usize = 0;\n    let mut paren_level_max_index:\
    \ usize = 0;\n    let mut paren_level_max_index: usize = 0;\n    let mut paren_level_max_index:\
    \ usize = 0;\n    let mut paren_level_max_index: usize = 0;\n    let mut paren_level_max_index:\
    \ usize = 0;\n    let mut paren", "    let mut paren_levels = Vec::new();\n  \
    \  let mut paren_level = 0;\n    let mut paren_levels_stack = Vec::new();\n  \
    \  let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_end = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_end = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr = paren_levels_stack.len();\n    let mut paren_levels_stack_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_end = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_end = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr = paren_levels_stack.len();\n    let mut paren_levels_stack_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_end = paren_levels_stack.len();\n\
    \    let mut paren_level", "    let mut paren_levels = Vec::new();\n    let mut\
    \ paren_level = 0;\n    let mut paren_level_count = 0;\n    let mut paren_level_string\
    \ = paren_string.clone();\n    let mut paren_level_string = paren_level_string.chars().filter(|c|\
    \ c != '(' && c != ')').collect::<String>();\n    let mut paren_level_string =\
    \ paren_level_string.chars().filter(|c| c != '[' && c != ']').collect::<String>();\n\
    \    let mut paren_level_string = paren_level_string.chars().filter(|c| c != '{'\
    \ && c != '}').collect::<String>();\n    let mut paren_level_string = paren_level_string.chars().filter(|c|\
    \ c != ' ').collect::<String>();\n    let mut paren_level_string = paren_level_string.chars().filter(|c|\
    \ c != '\\t').collect::<String>();\n    let mut paren_level_string = paren_level_string.chars().filter(|c|\
    \ c != '\\n').collect::<String>();\n    let mut paren_level_string = paren_level_string.chars().filter(|c|\
    \ c != '\\r').collect::<String>();\n    let mut paren_level_string = paren_level_string.chars().filter(|c|\
    \ c != '\\f').collect::<String>();\n    let mut paren_level_string = paren_level_string.chars().filter(|c|\
    \ c != '\\v').collect::<String>();\n    let mut paren_level_string = paren_level_string.chars().filter(|c|\
    \ c != '\\a').collect::<String>();\n    let mut paren_level_string = paren_level_string.chars().filter(|c|\
    \ c != '\\e').collect::<String>();\n    let mut paren_level_string = paren_level_string.chars().filter(|c|\
    \ c != '\\o').collect::<String>();\n    let mut paren_level_string = paren_level_string.chars().filter(|c|\
    \ c != '\\i').collect::<String>();\n    let mut paren_level_string = paren_level_string.chars().filter(|c|\
    \ c != '\\c').collect::<String>();\n    let mut paren_level_string = paren_level_string.chars().filter(|c|\
    \ c != '\\o').collect::<String>();\n    let mut paren_level_string = paren_level_string.chars().filter(",
  "    let mut paren_stack = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_levels = Vec::new();\n    let mut paren_levels_size = paren_stack.len();\n\
    \    let mut paren_levels_index = paren_stack.len();\n    let mut paren_levels_size\
    \ = paren_stack.len();\n    let mut paren_levels_index = paren_stack.len();\n\
    \    let mut paren_levels_size = paren_stack.len();\n    let mut paren_levels_index\
    \ = paren_stack.len();\n    let mut paren_levels_size = paren_stack.len();\n \
    \   let mut paren_levels_index = paren_stack.len();\n    let mut paren_levels_size\
    \ = paren_stack.len();\n    let mut paren_levels_index = paren_stack.len();\n\
    \    let mut paren_levels_size = paren_stack.len();\n    let mut paren_levels_index\
    \ = paren_stack.len();\n    let mut paren_levels_size = paren_stack.len();\n \
    \   let mut paren_levels_index = paren_stack.len();\n    let mut paren_levels_size\
    \ = paren_stack.len();\n    let mut paren_levels_index = paren_stack.len();\n\
    \    let mut paren_levels_size = paren_stack.len();\n    let mut paren_levels_index\
    \ = paren_stack.len();\n    let mut paren_levels_size = paren_stack.len();\n \
    \   let mut paren_levels_index = paren_stack.len();\n    let mut paren_levels_size\
    \ = paren_stack.len();\n    let mut paren_levels_index = paren_stack.len();\n\
    \    let mut paren_levels_size = paren_stack.len();\n    let mut paren_levels_index\
    \ = paren_stack.len();\n    let mut paren_levels_size = paren_stack.len();\n \
    \   let mut paren_levels_index = paren_stack.len();\n    let mut paren_levels_size\
    \ = paren_stack.len();\n    let mut paren_levels_index = paren_stack.len();\n\
    \    let mut paren_levels_size = paren_stack.len();\n    let mut paren_levels_index\
    \ = paren_stack.len();\n    let mut paren_levels_size = paren_stack.len();\n \
    \   let mut paren_levels_index = paren_stack.len();\n    let mut paren_levels_size\
    \ = paren_stack.len();\n    let mut paren_levels_index = paren_stack.len();\n\
    \    let mut paren", "    let mut level = 0;\n    let mut paren_stack = Vec::new();\n\
    \    let mut paren_stack_len = paren_string.len();\n    let mut paren_stack_pos\
    \ = 0;\n    let mut paren_stack_end = paren_string.len();\n    let mut paren_stack_char\
    \ = paren_string[paren_stack_pos];\n    while paren_stack_pos < paren_stack_end\
    \ {\n        if paren_stack_char == '(' {\n            paren_stack.push(level);\n\
    \            paren_stack_pos += 1;\n            paren_stack_char = paren_string[paren_stack_pos];\n\
    \            level += 1;\n        } else if paren_stack_char == ')' {\n      \
    \      level -= 1;\n            if level == 0 {\n                paren_stack_end\
    \ = paren_stack_pos;\n                paren_stack_char = paren_string[paren_stack_end];\n\
    \            } else {\n                paren_stack_pos += 1;\n               \
    \ paren_stack_char = paren_string[paren_stack_pos];\n            }\n        }\
    \ else {\n            paren_stack_pos += 1;\n            paren_stack_char = paren_string[paren_stack_pos];\n\
    \        }\n    }\n    paren_stack", "    let mut paren_levels = vec![];\n   \
    \ let mut paren_level = 0;\n    let mut paren_levels_stack = vec![];\n    let\
    \ mut paren_levels_stack_ptr = 0;\n    let mut paren_levels_stack_ptr_max = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr_max_ptr = paren_levels_stack_ptr_max.clone();\n\
    \    let mut paren_levels_stack_ptr_max_ptr = paren_levels_stack_ptr_max.clone();\n\
    \    let mut paren_levels_stack_ptr_max_ptr = paren_levels_stack_ptr_max.clone();\n\
    \    let mut paren_levels_stack_ptr_max_ptr = paren_levels_stack_ptr_max.clone();\n\
    \    let mut paren_levels_stack_ptr_max_ptr = paren_levels_stack_ptr_max.clone();\n\
    \    let mut paren_levels_stack_ptr_max_ptr = paren_levels_stack_ptr_max.clone();\n\
    \    let mut paren_levels_stack_ptr_max_ptr = paren_levels_stack_ptr_max.clone();\n\
    \    let mut paren_levels_stack_ptr_max_ptr = paren_levels_stack_ptr_max.clone();\n\
    \    let mut paren_levels_stack_ptr_max_ptr = paren_levels_stack_ptr_max.clone();\n\
    \    let mut paren_levels_stack_ptr_max_ptr = paren_levels_stack_ptr_max.clone();\n\
    \    let mut paren_levels_stack_ptr_max_ptr = paren_levels_stack_ptr_max.clone();\n\
    \    let mut paren_levels_stack_ptr_max_ptr = paren_levels_stack_ptr_max.clone();\n\
    \    let mut paren_levels_stack_ptr_max_ptr = paren_levels_stack_ptr_max.clone();\n\
    \    let mut paren_levels_stack_ptr_max_ptr = paren_levels_stack_ptr_max.clone();\n\
    \    let mut paren_levels_stack_ptr_max_ptr = paren_levels_stack_ptr_max.clone();\n\
    \    let mut paren_levels_stack_ptr_max_ptr = paren_levels_stack_ptr_max.clone();\n\
    \    let mut paren_levels_stack_ptr_max_ptr = paren_levels_stack_ptr_max.clone();\n\
    \    let mut paren_levels_stack_ptr_max_ptr = paren_levels_stack_ptr_max.clone();\n\
    \    let mut paren_levels_stack_ptr_max_ptr = paren_levels_stack_ptr_max.clone();\n\
    \    let mut paren_levels_stack_ptr_max_ptr = ", "    let mut paren_stack = Vec::new();\n\
    \    let mut paren_depth = 0;\n    let mut paren_levels = Vec::new();\n    let\
    \ mut paren_level = 0;\n    let mut paren_levels_len = paren_stack.len();\n  \
    \  let mut paren_levels_len_ptr = paren_levels_len;\n    let mut paren_levels_len_ptr_ptr\
    \ = paren_levels_len_ptr;\n    let mut paren_levels_len_ptr_ptr_ptr = paren_levels_len_ptr_ptr;\n\
    \    let mut paren_levels_len_ptr_ptr_ptr_ptr = paren_levels_len_ptr_ptr_ptr;\n\
    \    let mut paren_levels_len_ptr_ptr_ptr_ptr_ptr = paren_levels_len_ptr_ptr_ptr_ptr_ptr;\n\
    \    let mut paren_levels_len_ptr_ptr_ptr_ptr_ptr_ptr = paren_levels_len_ptr_ptr_ptr_ptr_ptr_ptr;\n\
    \    let mut paren_levels_len_ptr_ptr_ptr_ptr_ptr_ptr_ptr = paren_levels_len_ptr_ptr_ptr_ptr_ptr_ptr_ptr;\n\
    \    let mut paren_levels_len_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = paren_levels_len_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr;\n\
    \    let mut paren_levels_len_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = paren_levels_len_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr;\n\
    \    let mut paren_levels_len_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = paren_levels_len_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr;\n    let mut\
    \ paren_levels_len_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = paren_levels_len_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr;\n\
    \    let mut paren_levels_len_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = paren_levels_len_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr;\n\
    \    let mut paren_levels_len_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = paren_levels_len_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr;\n\
    \    let mut paren_levels_len_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = paren_levels_len_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr",
  "    let mut paren_stack: Vec<isize> = vec![];\n    let mut paren_level = 0;\n \
    \   let mut paren_level_count: usize = 0;\n    let mut paren_level_max_count:\
    \ usize = 0;\n    let mut paren_level_max_level: usize = 0;\n    let mut paren_level_max_level_char:\
    \ char = '(';\n    let mut paren_level_max_level_char_pos: usize = 0;\n    let\
    \ mut paren_level_max_level_char_len: usize = 0;\n    let mut paren_level_max_level_char_len_pos:\
    \ usize = 0;\n    let mut paren_level_max_level_char_len_len: usize = 0;\n   \
    \ let mut paren_level_max_level_char_len_pos_len: usize = 0;\n    let mut paren_level_max_level_char_len_pos_pos_len:\
    \ usize = 0;\n    let mut paren_level_max_level_char_pos_len: usize = 0;\n   \
    \ let mut paren_level_max_level_char_pos_pos_len: usize = 0;\n    let mut paren_level_max_level_char_pos_pos_pos_len:\
    \ usize = 0;\n    let mut paren_level_max_level_char_pos_pos_pos_pos_len: usize\
    \ = 0;\n    let mut paren_level_max_level_char_pos_pos_pos_pos_len: usize = 0;\n\
    \    let mut paren_level_max_level_char_pos_pos_pos_pos_pos_len: usize = 0;\n\
    \    let mut paren_level_max_level_char_pos_pos_pos_pos_pos_pos_len: usize = 0;\n\
    \    let mut paren_level_max_level_char_pos_pos_pos_pos_pos_pos_pos_len: usize\
    \ = 0;\n    let mut paren_level_max_level_char_pos_pos_pos_pos_pos_pos_pos_pos_len:\
    \ usize = 0;\n    let mut paren_level_max_level_char_pos_pos_pos_pos_pos_pos_pos_pos_pos_len:\
    \ usize = 0;\n    let mut paren_level_max_level_char_pos_pos_pos_pos_pos_pos_pos_pos_pos_pos_len:\
    \ usize = 0;\n    let mut paren_level_max_level_char_pos_pos_pos_pos_pos_pos_pos_pos_pos_pos_pos_len:\
    \ usize = 0;\n    let mut paren_level_max_level_char_pos_pos_pos_pos_pos_pos_pos_pos_pos_pos_pos_pos_len:\
    \ usize = 0;\n    let mut paren_level_max_level_char_pos_pos_pos_pos_pos_pos_pos_pos_pos_pos_pos_pos_len:\
    \ usize = 0;\n    let mut paren_level_max_level_char_pos_pos_pos_pos_pos_pos_pos_pos_pos_pos_pos_pos_pos_len:\
    \ usize = 0;\n    let mut paren_level_", "    let mut paren_levels = vec![0];\n\
    \    let mut paren_level = 0;\n    let mut paren_level_index = 0;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string_index = 0;\n\
    \    let mut paren_level_string_len = 0;\n    let mut paren_level_string_len_index\
    \ = 0;\n    let mut paren_level_string_len_len = 0;\n    let mut paren_level_string_len_len_index\
    \ = 0;\n    let mut paren_level_string_len_len_len = 0;\n    let mut paren_level_string_len_len_index\
    \ = 0;\n    let mut paren_level_string_len_len_len = 0;\n    let mut paren_level_string_len_len_index\
    \ = 0;\n    let mut paren_level_string_len_len_len = 0;\n    let mut paren_level_string_len_len_index\
    \ = 0;\n    let mut paren_level_string_len_len_len = 0;\n    let mut paren_level_string_len_len_index\
    \ = 0;\n    let mut paren_level_string_len_len_len = 0;\n    let mut paren_level_string_len_len_index\
    \ = 0;\n    let mut paren_level_string_len_len_len = 0;\n    let mut paren_level_string_len_len_index\
    \ = 0;\n    let mut paren_level_string_len_len_len = 0;\n    let mut paren_level_string_len_len_index\
    \ = 0;\n    let mut paren_level_string_len_len_len = 0;\n    let mut paren_level_string_len_len_index\
    \ = 0;\n    let mut paren_level_string_len_len_len = 0;\n    let mut paren_level_string_len_len_index\
    \ = 0;\n    let mut paren_level_string_len_len_len = 0;\n    let mut paren_level_string_len_len_index\
    \ = 0;\n    let mut paren_level_string_len_len_len = 0;\n    let mut paren_level_string_len_len_index\
    \ = 0;\n    let mut paren_level_string_len_len_len = 0;\n    let mut paren_level_string_len_len_index\
    \ = 0;\n    let mut paren_level_string_len_len_len = 0;\n    let mut paren_level_string_len_len_index\
    \ = 0;\n    let mut paren_level_string_len_len_len = 0;\n    let mut paren_level_string_len_len_index\
    \ = 0;\n    let mut paren_level_string_len_len_len = 0;\n    let mut paren_level_string_len_len_index\
    \ = 0;\n    let mut paren_level_string_len_len_len = 0;\n    let mut paren_level_string_len_len_index\
    \ = 0;\n    let mut paren_level_string_len_len_len = 0;\n    let mut paren_level_string_len_len_index\
    \ = 0;\n    let mut paren_level_string_len_len_len", "    let mut levels = Vec::new();\n\
    \    let mut paren_count = 0;\n    let mut paren_level = 0;\n    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_ptr\
    \ = 0;\n    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n \
    \   let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end\
    \ = paren_", "    let mut paren_stack: Vec<isize> = vec![];\n    let mut paren_level:\
    \ usize = 0;\n    let mut paren_level_count: usize = 0;\n    let mut paren_level_string:\
    \ String = String::new();\n    let mut paren_level_string_len: usize = 0;\n  \
    \  let mut paren_level_char: char = 0;\n    let mut paren_level_char_len: usize\
    \ = 0;\n    let mut paren_level_char_pos: usize = 0;\n    let mut paren_level_char_pos_len:\
    \ usize = 0;\n    let mut paren_level_char_pos_len2: usize = 0;\n    let mut paren_level_char_pos_len3:\
    \ usize = 0;\n    let mut paren_level_char_pos_len4: usize = 0;\n    let mut paren_level_char_pos_len5:\
    \ usize = 0;\n    let mut paren_level_char_pos_len6: usize = 0;\n    let mut paren_level_char_pos_len7:\
    \ usize = 0;\n    let mut paren_level_char_pos_len8: usize = 0;\n    let mut paren_level_char_pos_len9:\
    \ usize = 0;\n    let mut paren_level_char_pos_len10: usize = 0;\n    let mut\
    \ paren_level_char_pos_len11: usize = 0;\n    let mut paren_level_char_pos_len12:\
    \ usize = 0;\n    let mut paren_level_char_pos_len13: usize = 0;\n    let mut\
    \ paren_level_char_pos_len14: usize = 0;\n    let mut paren_level_char_pos_len15:\
    \ usize = 0;\n    let mut paren_level_char_pos_len16: usize = 0;\n    let mut\
    \ paren_level_char_pos_len17: usize = 0;\n    let mut paren_level_char_pos_len18:\
    \ usize = 0;\n    let mut paren_level_char_pos_len19: usize = 0;\n    let mut\
    \ paren_level_char_pos_len20: usize = 0;\n    let mut paren_level_char_pos_len21:\
    \ usize = 0;\n    let mut paren_level_char_pos_len22: usize = 0;\n    let mut\
    \ paren_level_char_pos_len23: usize = 0;\n    let mut paren_level_char_pos_len24:\
    \ usize = 0;\n    let mut paren_level_char_pos_len25: usize = 0;\n    let mut\
    \ paren_level_char_pos_len26: usize = 0;\n    let mut paren_level_char_pos_len27:\
    \ usize = 0;\n    let mut paren_level_char_pos_", "    let mut paren_level = 0;\n\
    \    let mut paren_nesting = 0;\n    let mut paren_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting = 0;\n    let mut paren_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nest", "    let mut level = 0;\n    let mut\
    \ paren_stack = Vec::new();\n    let mut paren_stack_size = paren_stack.len();\n\
    \    let mut paren_stack_top = paren_stack_size;\n    let mut paren_stack_top\
    \ = paren_stack_size;\n    let mut paren_stack_top = paren_stack_size;\n    let\
    \ mut paren_stack_top = paren_stack_size;\n    let mut paren_stack_top = paren_stack_size;\n\
    \    let mut paren_stack_top = paren_stack_size;\n    let mut paren_stack_top\
    \ = paren_stack_size;\n    let mut paren_stack_top = paren_stack_size;\n    let\
    \ mut paren_stack_top = paren_stack_size;\n    let mut paren_stack_top = paren_stack_size;\n\
    \    let mut paren_stack_top = paren_stack_size;\n    let mut paren_stack_top\
    \ = paren_stack_size;\n    let mut paren_stack_top = paren_stack_size;\n    let\
    \ mut paren_stack_top = paren_stack_size;\n    let mut paren_stack_top = paren_stack_size;\n\
    \    let mut paren_stack_top = paren_stack_size;\n    let mut paren_stack_top\
    \ = paren_stack_size;\n    let mut paren_stack_top = paren_stack_size;\n    let\
    \ mut paren_stack_top = paren_stack_size;\n    let mut paren_stack_top = paren_stack_size;\n\
    \    let mut paren_stack_top = paren_stack_size;\n    let mut paren_stack_top\
    \ = paren_stack_size;\n    let mut paren_stack_top = paren_stack_size;\n    let\
    \ mut paren_stack_top = paren_stack_size;\n    let mut paren_stack_top = paren_stack_size;\n\
    \    let mut paren_stack_top = paren_stack_size;\n    let mut paren_stack_top\
    \ = paren_stack_size;\n    let mut paren_stack_top = paren_stack_size;\n    let\
    \ mut paren_stack_top = paren_stack_size;\n    let mut paren_stack_top = paren_stack_size;\n\
    \    let mut paren_stack_top = paren_stack_size;\n    let mut paren_stack_top\
    \ = paren_stack_size;\n    let mut paren_stack_top = paren_stack_size;\n    let\
    \ mut paren_stack_top = paren_stack_size;\n    let mut paren_stack_top = paren_stack_size;\n\
    \    let mut paren_stack_top = paren_stack_size;\n    let mut paren_stack_top\
    \ = paren_stack_size;\n", "    let mut paren_stack: Vec<isize> = vec![];\n   \
    \ let mut paren_level: isize = 0;\n    let mut paren_levels: Vec<isize> = vec![];\n\
    \    let mut paren_levels_size: isize = 0;\n    let mut paren_levels_size: isize\
    \ = 0;\n    let mut paren_levels_size: isize = 0;\n    let mut paren_levels_size:\
    \ isize = 0;\n    let mut paren_levels_size: isize = 0;\n    let mut paren_levels_size:\
    \ isize = 0;\n    let mut paren_levels_size: isize = 0;\n    let mut paren_levels_size:\
    \ isize = 0;\n    let mut paren_levels_size: isize = 0;\n    let mut paren_levels_size:\
    \ isize = 0;\n    let mut paren_levels_size: isize = 0;\n    let mut paren_levels_size:\
    \ isize = 0;\n    let mut paren_levels_size: isize = 0;\n    let mut paren_levels_size:\
    \ isize = 0;\n    let mut paren_levels_size: isize = 0;\n    let mut paren_levels_size:\
    \ isize = 0;\n    let mut paren_levels_size: isize = 0;\n    let mut paren_levels_size:\
    \ isize = 0;\n    let mut paren_levels_size: isize = 0;\n    let mut paren_levels_size:\
    \ isize = 0;\n    let mut paren_levels_size: isize = 0;\n    let mut paren_levels_size:\
    \ isize = 0;\n    let mut paren_levels_size: isize = 0;\n    let mut paren_levels_size:\
    \ isize = 0;\n    let mut paren_levels_size: isize = 0;\n    let mut paren_levels_size:\
    \ isize = 0;\n    let mut paren_levels_size: isize = 0;\n    let mut paren_levels_size:\
    \ isize = 0;\n    let mut paren_levels_size: isize = 0;\n    let mut paren_levels_size:\
    \ isize = 0;\n    let mut paren_levels_size: isize = 0;\n    let mut paren_levels_size:\
    \ isize = 0;\n    let mut paren_levels_size: isize = 0;\n    let mut paren_levels_size:\
    \ isize = 0;\n    let mut paren_levels_size: isize = 0;\n    let mut paren_levels_size:\
    \ isize = 0;\n    let mut paren_levels_size: isize = 0;\n    let mut paren_levels_size:\
    \ isize = 0;\n    let mut paren_levels_size: isize = 0;", "    let mut paren_stack\
    \ = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_levels = Vec::new();\n\
    \    let mut paren_levels_size = paren_stack.len();\n    let mut paren_levels_sizes\
    \ = Vec::new();\n    let mut paren_levels_sizes_size = paren_levels_sizes.len();\n\
    \    let mut paren_levels_sizes_sizes = paren_levels_sizes_sizes.len();\n    let\
    \ mut paren_levels_sizes_sizes_size = paren_levels_sizes_sizes_sizes.len();\n\
    \    let mut paren_levels_sizes_sizes_sizes_size = paren_levels_sizes_sizes_sizes_sizes.len();\n\
    \    let mut paren_levels_sizes_sizes_sizes_sizes_size = paren_levels_sizes_sizes_sizes_sizes_sizes.len();\n\
    \    let mut paren_levels_sizes_sizes_sizes_sizes_sizes_size = paren_levels_sizes_sizes_sizes_sizes_sizes_sizes.len();\n\
    \    let mut paren_levels_sizes_sizes_sizes_sizes_sizes_sizes_size = paren_levels_sizes_sizes_sizes_sizes_sizes_sizes_sizes.len();\n\
    \    let mut paren_levels_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_size\
    \ = paren_levels_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes.len();\n\
    \    let mut paren_levels_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_size\
    \ = paren_levels_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes.len();\n\
    \    let mut paren_levels_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_size\
    \ = paren_levels_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes.len();\n\
    \    let mut paren_levels_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_size\
    \ = paren_levels_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes_sizes.len();\n\
    \    let mut paren_levels_size", "    let mut levels = Vec::new();\n    let mut\
    \ paren_count = 0;\n    let mut paren_level = 0;\n    let mut paren_levels = Vec::new();\n\
    \    let mut paren_levels_len = paren_levels;\n    let mut paren_levels_ptr =\
    \ paren_levels_len;\n    let mut paren_levels_ptr_next = paren_levels_ptr;\n \
    \   let mut paren_levels_ptr_next = paren_levels_ptr;\n    let mut paren_levels_ptr_next\
    \ = paren_levels_ptr;\n    let mut paren_levels_ptr_next = paren_levels_ptr;\n\
    \    let mut paren_levels_ptr_next = paren_levels_ptr;\n    let mut paren_levels_ptr_next\
    \ = paren_levels_ptr;\n    let mut paren_levels_ptr_next = paren_levels_ptr;\n\
    \    let mut paren_levels_ptr_next = paren_levels_ptr;\n    let mut paren_levels_ptr_next\
    \ = paren_levels_ptr;\n    let mut paren_levels_ptr_next = paren_levels_ptr;\n\
    \    let mut paren_levels_ptr_next = paren_levels_ptr;\n    let mut paren_levels_ptr_next\
    \ = paren_levels_ptr;\n    let mut paren_levels_ptr_next = paren_levels_ptr;\n\
    \    let mut paren_levels_ptr_next = paren_levels_ptr;\n    let mut paren_levels_ptr_next\
    \ = paren_levels_ptr;\n    let mut paren_levels_ptr_next = paren_levels_ptr;\n\
    \    let mut paren_levels_ptr_next = paren_levels_ptr;\n    let mut paren_levels_ptr_next\
    \ = paren_levels_ptr;\n    let mut paren_levels_ptr_next = paren_levels_ptr;\n\
    \    let mut paren_levels_ptr_next = paren_levels_ptr;\n    let mut paren_levels_ptr_next\
    \ = paren_levels_ptr;\n    let mut paren_levels_ptr_next = paren_levels_ptr;\n\
    \    let mut paren_levels_ptr_next = paren_levels_ptr;\n    let mut paren_levels_ptr_next\
    \ = paren_levels_ptr;\n    let mut paren_levels_ptr_next = paren_levels_ptr;\n\
    \    let mut paren_levels_ptr_next = paren_levels_ptr;\n    let mut paren_", " \
    \   let mut paren_levels = vec![];\n    let mut paren_level = 0;\n    let mut\
    \ paren_level_count = 0;\n    let mut paren_level_char_count = 0;\n    let mut\
    \ paren_level_chars = vec![];\n    let mut paren_level_char: char;\n    let mut\
    \ paren_level_char_length = 0;\n    let mut paren_level_char_length_count = 0;\n\
    \    let mut paren_level_char_lengths = vec![];\n    let mut paren_level_char_length:\
    \ usize;\n    let mut paren_level_char_length_count = 0;\n    let mut paren_level_char_lengths\
    \ = vec![];\n    let mut paren_level_char_length: usize;\n    let mut paren_level_char_length_count\
    \ = 0;\n    let mut paren_level_char_lengths = vec![];\n    let mut paren_level_char_length:\
    \ usize;\n    let mut paren_level_char_length_count = 0;\n    let mut paren_level_char_lengths\
    \ = vec![];\n    let mut paren_level_char_length: usize;\n    let mut paren_level_char_length_count\
    \ = 0;\n    let mut paren_level_char_lengths = vec![];\n    let mut paren_level_char_length:\
    \ usize;\n    let mut paren_level_char_length_count = 0;\n    let mut paren_level_char_lengths\
    \ = vec![];\n    let mut paren_level_char_length: usize;\n    let mut paren_level_char_length_count\
    \ = 0;\n    let mut paren_level_char_lengths = vec![];\n    let mut paren_level_char_length:\
    \ usize;\n    let mut paren_level_char_length_count = 0;\n    let mut paren_level_char_lengths\
    \ = vec![];\n    let mut paren_level_char_length: usize;\n    let mut paren_level_char_length_count\
    \ = 0;\n    let mut paren_level_char_lengths = vec![];\n    let mut paren_level_char_length:\
    \ usize;\n    let mut paren_level_char_length_count = 0;\n    let mut paren_level_char_lengths\
    \ = vec![];\n    let mut paren_level_char_length: usize;\n    let mut paren_level_char_length_count\
    \ = 0;\n    let mut paren_level_char_lengths = vec![];\n    let mut paren_level_char_length:\
    \ usize;\n    let mut paren_level_char_length_count = 0;\n    let mut paren_level_char_lengths\
    \ = vec![];\n    let mut paren_level_char_length: usize;\n    let mut paren_level_char_length_count",
  "    let mut paren_stack: Vec<isize> = vec![];\n    let mut paren_level: isize =\
    \ 0;\n    let mut paren_level_count: usize = 0;\n    for paren in paren_string.chars()\
    \ {\n        if paren == '(' {\n            paren_stack.push(paren_level);\n \
    \           paren_level_count = 1;\n        } else if paren == ')' {\n       \
    \     paren_level_count = paren_stack.pop();\n            if paren_level_count\
    \ == 0 {\n                paren_level_count = paren_level;\n            }\n  \
    \      }\n        paren_level += paren_level_count;\n    }\n    paren_level",
  "    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_level_count = 0;\n    let mut paren_level_char_count = 0;\n    let mut\
    \ paren_level_chars = Vec::new();\n    let mut paren_level_char: char;\n    let\
    \ mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_", "    let mut paren_levels = Vec::new();\n   \
    \ let mut paren_level = 0;\n    let mut paren_level_count = 0;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    while paren_level_count\
    \ < MAX_NESTING_DEPTH {\n        let mut paren_level_string = paren_string;\n\
    \        let mut paren_level_string = paren_string;\n        let mut paren_level_string\
    \ = paren_string;\n        let mut paren_level_string = paren_string;\n      \
    \  let mut paren_level_string = paren_string;\n        let mut paren_level_string\
    \ = paren_string;\n        let mut paren_level_string = paren_string;\n      \
    \  let mut paren_level_string = paren_string;\n        let mut paren_level_string\
    \ = paren_string;\n        let mut paren_level_string = paren_string;\n      \
    \  let mut paren_level_string = paren_string;\n        let mut paren_level_string\
    \ = paren_string;\n        let mut paren_level_string = paren_string;\n      \
    \  let mut paren_level_string = paren_string;\n        let mut paren_level_string\
    \ = paren_string;\n        let mut paren_level_string = paren_string;\n      \
    \  let mut paren_level_string = paren_string;\n        let mut paren_level_string\
    \ = paren_string;\n        let mut paren_level_string = paren_string;\n      \
    \  let mut paren_level_string = paren_string;\n        let mut paren_level_string\
    \ = paren_string;\n        let mut paren_level_string = paren_string;\n      \
    \  let mut paren_level_string = paren_string;\n        let mut paren_level_string\
    \ = paren_string;\n        let mut paren_level_string = paren_string;\n      \
    \  let mut paren_level_string = paren_string;\n        let mut paren_level_string\
    \ = paren_string;\n        let mut paren_level_string = paren_string;\n      \
    \  let mut paren_level_string = paren_string;\n        let mut paren_level_string\
    \ = paren_string;\n        let mut paren_level_string = paren_string;\n      \
    \  let mut paren_level_string = paren_string;\n        let mut paren_level_string\
    \ = paren_string;\n        let mut paren_level_string = paren_string;\n      \
    \  let mut paren_level_string = paren_string;\n        let mut paren_level_string\
    \ = paren_string;\n        let mut paren_level_string = paren_string;\n      \
    \  let mu", "    let mut paren_stack: Vec<isize> = vec![];\n    let mut paren_level:\
    \ usize = 0;\n    let mut paren_level_count: usize = 0;\n    let mut paren_level_max_count:\
    \ usize = 0;\n    let mut paren_level_max_level: usize = 0;\n    let mut paren_level_max_level_count:\
    \ usize = 0;\n    let mut paren_level_max_level_max_count: usize = 0;\n    let\
    \ mut paren_level_max_level_max_level: usize = 0;\n    let mut paren_level_max_level_max_level_count:\
    \ usize = 0;\n    let mut paren_level_max_level_max_level_max_count: usize = 0;\n\
    \    let mut paren_level_max_level_max_level_max_level: usize = 0;\n    let mut\
    \ paren_level_max_level_max_level_max_level_count: usize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_count:\
    \ usize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_level:\
    \ usize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_level_count:\
    \ usize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_level_max_count:\
    \ usize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_level_max_level:\
    \ usize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_level_max_level_count:\
    \ usize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_level_max_level_max_count:\
    \ usize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_level_max_level_max_level:\
    \ usize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_level_max_level_max_level_count:\
    \ usize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_level_max_level_max_level_max_count:\
    \ usize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_level_max_level_max_level_max_level:\
    \ usize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_level_max_level_max_level_count:\
    \ usize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_level_max_level_max_level_max_level_max_count:\
    \ usize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_level_max_level_max_level_max_level_max_level:\
    \ usize = 0;\n    let mut paren_level_max_level_max_level_max_level_max_level_max_level_max_level_max_level_count: ",
  "    let mut paren_stack = Vec::new();\n    let mut paren_level = 0;\n    for paren\
    \ in paren_string.chars() {\n        if paren == '(' {\n            paren_stack.push(paren_level);\n\
    \            paren_level += 1;\n        } else if paren == ')' {\n           \
    \ paren_level -= 1;\n            if paren_level == 0 {\n                paren_stack.push(paren_level);\n\
    \            }\n        }\n    }\n    paren_stack", "    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_level_index =\
    \ 0;\n    let mut paren_level_indexes: Vec<isize> = Vec::new();\n    let mut paren_level_indexes_len\
    \ = 0;\n    let mut paren_level_indexes_len_index = 0;\n    let mut paren_level_indexes_len_indexes\
    \ = 0;\n    let mut paren_level_indexes_len_indexe = 0;\n    let mut paren_level_indexes_len_index\
    \ = 0;\n    let mut paren_level_indexes_len_indexe = 0;\n    let mut paren_level_indexes_len_indexe\
    \ = 0;\n    let mut paren_level_indexes_len_indexe = 0;\n    let mut paren_level_indexes_len_indexe\
    \ = 0;\n    let mut paren_level_indexes_len_indexe = 0;\n    let mut paren_level_indexes_len_indexe\
    \ = 0;\n    let mut paren_level_indexes_len_indexe = 0;\n    let mut paren_level_indexes_len_indexe\
    \ = 0;\n    let mut paren_level_indexes_len_indexe = 0;\n    let mut paren_level_indexes_len_indexe\
    \ = 0;\n    let mut paren_level_indexes_len_indexe = 0;\n    let mut paren_level_indexes_len_indexe\
    \ = 0;\n    let mut paren_level_indexes_len_indexe = 0;\n    let mut paren_level_indexes_len_indexe\
    \ = 0;\n    let mut paren_level_indexes_len_indexe = 0;\n    let mut paren_level_indexes_len_indexe\
    \ = 0;\n    let mut paren_level_indexes_len_indexe = 0;\n    let mut paren_level_indexes_len_indexe\
    \ = 0;\n    let mut paren_level_indexes_len_indexe = 0;\n    let mut paren_level_indexes_len_indexe\
    \ = 0;\n    let mut paren_level_indexes_len_indexe = 0;\n    let mut paren_level_indexes_len_indexe\
    \ = 0;\n    let mut paren_level_indexes_len_indexe = 0;\n    let mut paren_level_indexes_len_indexe\
    \ = 0;\n    let mut paren_level_indexes_len_indexe = 0;\n    let mut paren_level_indexes_len_indexe\
    \ = 0;\n    let mut paren_level_indexes_len_indexe = 0;\n    let mut paren_level_indexes_len_indexe\
    \ = 0;\n    let mut paren_level_indexes_len_indexe = 0;\n    let mut paren_level_indexes_len_indexe\
    \ = 0;\n    let mut paren_level_indexes_len_indexe = 0;", "    let mut paren_levels\
    \ = vec![];\n    let mut paren_level = 0;\n    let mut paren_levels_iter = paren_string.char_indices().rev();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n", "    let mut\
    \ paren_stack = vec![];\n    let mut paren_level = 0;\n    let mut paren_nesting\
    \ = 0;\n    for paren in paren_string.chars() {\n        if paren == '(' {\n \
    \           paren_stack.push(paren_level);\n            paren_level += 1;\n  \
    \          paren_nesting += 1;\n        } else if paren == ')' {\n           \
    \ paren_level -= 1;\n            paren_nesting -= 1;\n            if paren_nesting\
    \ == 0 {\n                paren_stack.push(paren_level);\n            }\n    \
    \    } else if paren == ' ' {\n            if paren_nesting == 0 {\n         \
    \       paren_stack.push(paren_level);\n            }\n        }\n    }\n    paren_stack",
  "    let mut paren_stack: Vec<isize> = vec![];\n    let mut paren_level: usize =\
    \ 0;\n    let mut paren_levels: Vec<isize> = vec![];\n    let mut paren_levels_len:\
    \ usize = 0;\n    let mut paren_levels_lens: Vec<isize> = vec![];\n    let mut\
    \ paren_levels_lens_len: usize = 0;\n    let mut paren_levels_lens_lens: Vec<isize>\
    \ = vec![];\n    let mut paren_levels_lens_lens_len: usize = 0;\n    let mut paren_levels_lens_lens_lens:\
    \ Vec<isize> = vec![];\n    let mut paren_levels_lens_lens_lens_len: usize = 0;\n\
    \    let mut paren_levels_lens_lens_lens_lens: Vec<isize> = vec![];\n    let mut\
    \ paren_levels_lens_lens_lens_lens_len: usize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens:\
    \ Vec<isize> = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_len:\
    \ usize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens: Vec<isize>\
    \ = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_len: usize\
    \ = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens: Vec<isize>\
    \ = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_len:\
    \ usize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens:\
    \ Vec<isize> = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens:\
    \ Vec<isize> = vec![];\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens:\
    \ Vec<isize> = vec![];\n    let mut paren_levels_lens_lens_lens_", "    let mut\
    \ paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_level_count\
    \ = 0;\n    let mut paren_level_char_count = 0;\n    let mut paren_level_char_pos\
    \ = 0;\n    let mut paren_level_char_pos_count = 0;\n    let mut paren_level_char_pos_count_max\
    \ = 0;\n    let mut paren_level_char_pos_count_max_index = 0;\n    let mut paren_level_char_pos_count_max_index2\
    \ = 0;\n    let mut paren_level_char_pos_count_max_index3 = 0;\n    let mut paren_level_char_pos_count_max_index4\
    \ = 0;\n    let mut paren_level_char_pos_count_max_index5 = 0;\n    let mut paren_level_char_pos_count_max_index6\
    \ = 0;\n    let mut paren_level_char_pos_count_max_index7 = 0;\n    let mut paren_level_char_pos_count_max_index8\
    \ = 0;\n    let mut paren_level_char_pos_count_max_index9 = 0;\n    let mut paren_level_char_pos_count_max_index10\
    \ = 0;\n    let mut paren_level_char_pos_count_max_index11 = 0;\n    let mut paren_level_char_pos_count_max_index12\
    \ = 0;\n    let mut paren_level_char_pos_count_max_index13 = 0;\n    let mut paren_level_char_pos_count_max_index14\
    \ = 0;\n    let mut paren_level_char_pos_count_max_index15 = 0;\n    let mut paren_level_char_pos_count_max_index16\
    \ = 0;\n    let mut paren_level_char_pos_count_max_index17 = 0;\n    let mut paren_level_char_pos_count_max_index18\
    \ = 0;\n    let mut paren_level_char_pos_count_max_index19 = 0;\n    let mut paren_level_char_pos_count_max_index20\
    \ = 0;\n    let mut paren_level_char_pos_count_max_index21 = 0;\n    let mut paren_level_char_pos_count_max_index22\
    \ = 0;\n    let mut paren_level_char_pos_count_max_index23 = 0;\n    let mut paren_level_char_pos_count_max_index24\
    \ = 0;\n    let mut paren_level_char_pos_count_max_index25 = 0;\n    let mut paren_level_char_pos_count_max_index26\
    \ = 0;\n    let mut paren_level_char_pos_count_max_index27 = 0;\n    let mut paren_level_char_pos_count_max_index28\
    \ = 0;\n    let mut paren_level_char_pos_count_max_index29 = 0;\n    let mut paren_level_char_pos_count_max_index30\
    \ = 0;\n    let mut paren_level_char_pos_count_max_index31 = 0;\n    let mut paren_level_char_pos_count_max_index32",
  "    let mut paren_level = 0;\n    let mut paren_levels = Vec::new();\n    let mut\
    \ paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_len = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mu", "    let mut paren_stack: Vec<isize> = vec![];\n    let mut paren_depth:\
    \ usize = 0;\n    let mut paren_level: usize = 0;\n    let mut paren_levels: Vec<isize>\
    \ = vec![];\n    let mut paren_levels_len: usize = 0;\n    let mut paren_levels_lens:\
    \ Vec<isize> = vec![];\n    let mut paren_levels_lens_len: usize = 0;\n    let\
    \ mut paren_levels_lens_lens: Vec<isize> = vec![];\n    let mut paren_levels_lens_lens_len:\
    \ usize = 0;\n    let mut paren_levels_lens_lens_lens: Vec<isize> = vec![];\n\
    \    let mut paren_levels_lens_lens_lens_len: usize = 0;\n    let mut paren_levels_lens_lens_lens_lens:\
    \ Vec<isize> = vec![];\n    let mut paren_levels_lens_lens_lens_lens_len: usize\
    \ = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens: Vec<isize> = vec![];\n\
    \    let mut paren_levels_lens_lens_lens_lens_lens_len: usize = 0;\n    let mut\
    \ paren_levels_lens_lens_lens_lens_lens_lens_len: usize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_len:\
    \ usize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_:\
    \ usize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_:\
    \ usize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_:\
    \ usize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_:\
    \ usize = 0;\n    let mut paren_levels_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_lens_:\
    \ usize", "    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n\
    \    let mut paren_level_count = 0;\n    let mut paren_level_stack = Vec::new();\n\
    \    let mut paren_level_stack_pos = 0;\n    let mut paren_level_stack_len = paren_level_stack.len();\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_", "    let mut paren_levels = vec![];\n\
    \    let mut paren_level = 0;\n    let mut paren_level_index = 0;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string_index = 0;\n\
    \    let mut paren_level_string_len = 0;\n    let mut paren_level_string_len_index\
    \ = 0;\n    let mut paren_level_string_len_len = 0;\n    while paren_level_string_index\
    \ < paren_string.len() {\n        let mut paren_level_string = paren_string;\n\
    \        let mut paren_level_string_index = paren_level_string_len_index;\n  \
    \      let mut paren_level_string_len = 0;\n        let mut paren_level_string_len_index\
    \ = 0;\n        let mut paren_level_string_len_len = 0;\n        while paren_level_string_len_index\
    \ < paren_level_string.len() {\n            let mut paren_level_string = paren_string;\n\
    \            let mut paren_level_string_index = paren_level_string_len_index;\n\
    \            let mut paren_level_string_len = 0;\n            let mut paren_level_string_len_index\
    \ = 0;\n            let mut paren_level_string_len_len = 0;\n            while\
    \ paren_level_string_len_len < paren_level_string.len() {\n                let\
    \ mut paren_level_string = paren_string;\n                let mut paren_level_string_index\
    \ = paren_level_string_len_index;\n                let mut paren_level_string_len\
    \ = 0;\n                let mut paren_level_string_len_index = 0;\n          \
    \      let mut paren_level_string_len_len = 0;\n                while paren_level_string_len_len\
    \ < paren_level_string.len() {\n                    let mut paren_level_string\
    \ = paren_string;\n                    let mut paren_level_string_index = paren_level_string_len_index;\n\
    \                    let mut paren_level_string_len = 0;\n                   \
    \ let mut paren_level_string_len_index = 0;\n                    let mut paren_level_string_len_len\
    \ = 0;\n                    while paren_level_string_len_len < paren_level_string.len()\
    \ {\n                        let mut paren_level_string = paren_string;\n    \
    \                    let mut paren_level_string_index = paren_level_string_len_index;\n\
    \                        let mut paren_level_string_len = 0;\n               \
    \         let mut paren_level_string_len_index = 0;\n                        let\
    \ mut paren_level_string_len_len = 0;\n                        while paren_level_string_len_len\
    \ < paren_level_string.len() {\n                            let mut paren_level_string\
    \ = paren_string;\n                            let mut paren_level", "    let\
    \ mut level = 0;\n    let mut paren_levels = Vec::new();\n    let mut paren_levels_stack\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr = Vec::new();\n    let mut\
    \ paren_levels_ptr = Vec::new();\n    let mut paren_levels_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_ptr_ptr_ptr = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new", "    let mut paren_stack: Vec<isize> = vec![];\n    let mut paren_level:\
    \ isize = 0;\n    let mut paren_level_count: isize = 0;\n    let mut paren_level_string:\
    \ String = String::new();\n    let mut paren_level_string_len: usize = 0;\n  \
    \  for c in paren_string.chars() {\n        if c == '(' {\n            paren_stack.push(paren_level);\n\
    \            paren_level_string.push(c);\n            paren_level_string_len +=\
    \ 1;\n            paren_level_count += 1;\n        } else if c == ')' {\n    \
    \        paren_level -= 1;\n            if paren_level == 0 {\n              \
    \  paren_stack.push(paren_level);\n                paren_level_string.push(c);\n\
    \                paren_level_string_len += 1;\n                paren_level_count\
    \ += 1;\n            } else {\n                paren_level_string[paren_level_string_len..].push(')');\n\
    \            }\n        }\n    }\n    if paren_level_string.len() != paren_level_string_len\
    \ {\n        return vec![];\n    }\n    paren_stack.push(paren_level);\n    paren_level_string.push(')');\n\
    \    paren_level_string_len += 1;\n    paren_level_count += 1;\n    paren_level_string\n\
    \        .split_whitespace()\n        .map(|s| s.parse().unwrap())\n        .collect()",
  "    let mut level = 0;\n    let mut paren_levels = Vec::new();\n    let mut paren_levels_stack\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr = 0;\n    let mut paren_levels_ptr\
    \ = 0;\n    let mut paren_levels_ptr_end = paren_levels_ptr;\n    let mut paren_levels_ptr_end_ptr\
    \ = paren_levels_ptr;\n    let mut paren_levels_ptr_end_ptr_end = paren_levels_ptr;\n\
    \    let mut paren_levels_ptr_end_ptr_end_ptr = paren_levels_ptr;\n    let mut\
    \ paren_levels_ptr_end_ptr_end_ptr_end = paren_levels_ptr;\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr\
    \ = paren_levels_ptr;\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end\
    \ = paren_levels_ptr;\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = paren_levels_ptr;\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end\
    \ = paren_levels_ptr;\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = paren_levels_ptr;\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end\
    \ = paren_levels_ptr;\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = paren_levels_ptr;\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end\
    \ = paren_levels_ptr;\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = paren_levels_ptr;\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end\
    \ = paren_levels_ptr;\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = paren_levels_ptr;\n    let mut ", "    let mut level = 0;\n    let mut paren_stack\
    \ = Vec::new();\n    let mut paren_stack_len = paren_string.len();\n    let mut\
    \ paren_stack_pos = 0;\n    let mut paren_stack_char = paren_string[paren_stack_pos];\n\
    \    while paren_stack_pos < paren_string.len() {\n        if paren_stack_char\
    \ == ')' {\n            paren_stack.pop();\n            paren_stack_len -= 1;\n\
    \            paren_stack_pos += 1;\n            level -= 1;\n        } else if\
    \ paren_stack_char == '(' {\n            paren_stack.push(level);\n          \
    \  paren_stack_len += 1;\n            paren_stack_pos += 1;\n            level\
    \ += 1;\n        } else {\n            paren_stack_pos += 1;\n            paren_stack_char\
    \ = paren_string[paren_stack_pos];\n        }\n    }\n    paren_stack", "    let\
    \ mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_level_index\
    \ = 0;\n    let mut paren_level_string = paren_string;\n    let mut paren_level_string_index\
    \ = 0;\n    let mut paren_level_string = paren_string;\n    while paren_level_string_index\
    \ < paren_string.len() {\n        let mut paren_level_string = paren_string;\n\
    \        let mut paren_level_string_index = 0;\n        while paren_level_string_index\
    \ < paren_string.len() {\n            let mut paren_level_string = paren_string;\n\
    \            let mut paren_level_string_index = 0;\n            while paren_level_string_index\
    \ < paren_string.len() {\n                let mut paren_level_string = paren_string;\n\
    \                let mut paren_level_string_index = 0;\n                while\
    \ paren_level_string_index < paren_string.len() {\n                    let mut\
    \ paren_level_string = paren_string;\n                    let mut paren_level_string_index\
    \ = 0;\n                    while paren_level_string_index < paren_string.len()\
    \ {\n                        let mut paren_level_string = paren_string;\n    \
    \                    let mut paren_level_string_index = 0;\n                 \
    \       while paren_level_string_index < paren_string.len() {\n              \
    \              let mut paren_level_string = paren_string;\n                  \
    \          let mut paren_level_string_index = 0;\n                           \
    \ while paren_level_string_index < paren_string.len() {\n                    \
    \            let mut paren_level_string = paren_string;\n                    \
    \            let mut paren_level_string_index = 0;\n                         \
    \       while paren_level_string_index < paren_string.len() {\n              \
    \                      let mut paren_level_string = paren_string;\n          \
    \                          let mut paren_level_string_index = 0;\n           \
    \                         while paren_level_string_index < paren_string.len()\
    \ {\n                                        let mut paren_level_string = paren_string;\n\
    \                                        let mut paren_level_string_index = 0;\n\
    \                                        while paren_level_string_index < paren_string.len()\
    \ {\n                                            let mut paren_level_string =\
    \ paren_string;\n                                            let mut paren_level_string_index\
    \ = 0;\n                                            while paren_level_string_index\
    \ < paren_string.len() {\n                                                let\
    \ mut paren_level_string = paren_string;\n                                   \
    \             let mut paren_level_string_index = 0;\n                        \
    \                        while paren_level_string_index < paren_string.len() {\n\
    \                                                    let mut paren_level_string\
    \ = paren_string;\n                                                    let mut\
    \ paren_level_string_index = 0;\n                                            \
    \        "]
stop_tokens:
- "\n}"

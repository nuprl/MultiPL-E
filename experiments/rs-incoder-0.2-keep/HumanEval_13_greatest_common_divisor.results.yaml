name: HumanEval_13_greatest_common_divisor
language: rust
results:
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpjf04fy2o.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp_7y4t9vu.rs:10:9\n   |\n\
    6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |         \
    \                                          ----- expected `isize` because of return\
    \ type\n...\n10 |         a.checked_div(b)\n   |         ^^^^^^^^^^^^^^^^ expected\
    \ `isize`, found enum `Option`\n   |\n   = note: expected type `isize`\n     \
    \         found enum `Option<isize>`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpssfayser.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpebm_zhjf.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    if a > b {\n        greatest_common_divisor(b,\
    \ a)\n    } else {\n        greatest_common_divisor(a, a)\n    }\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp2pac8bmm.rs:10:9\n   |\n\
    6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |         \
    \                                          ----- expected `isize` because of return\
    \ type\n...\n10 |         a.checked_div(b)\n   |         ^^^^^^^^^^^^^^^^ expected\
    \ `isize`, found enum `Option`\n   |\n   = note: expected type `isize`\n     \
    \         found enum `Option<isize>`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n\n    let mut greatest_common_divisor\
    \ = a.clone();\n    let mut a = a;\n    let mut b = b;\n\n    while a != 0 {\n\
    \        let mut remainder = a % b;\n        a = b;\n        b = remainder;\n\
    \    }\n\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'attempt to calculate the remainder with a divisor\
    \ of zero', /tmp/tmpbll5p1lj.rs:16:29\nnote: run with `RUST_BACKTRACE=1` environment\
    \ variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    let mut greatest_common_divisor\
    \ = 1;\n    let mut a = a % b;\n    while a != 0 {\n        greatest_common_divisor\
    \ = greatest_common_divisor % a;\n        a = a % b;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ greatest_common_divisor = 1;\n    let mut a_mod_b = 0;\n    while a > 0 && b\
    \ > 0 {\n        if a % b == 0 {\n            greatest_common_divisor += 1;\n\
    \            a /= b;\n        } else {\n            a %= b;\n        }\n     \
    \   a_mod_b += 1;\n        b /= 2;\n    }\n    greatest_common_divisor\n}\n\n\
    fn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "warning: variable `a_mod_b` is assigned to, but never used\n --> /tmp/tmpbuc0l7wm.rs:8:13\n\
    \  |\n8 |     let mut a_mod_b = 0;\n  |             ^^^^^^^\n  |\n  = note: `#[warn(unused_variables)]`\
    \ on by default\n  = note: consider using `_a_mod_b` instead\n\nerror[E0384]:\
    \ cannot assign to immutable argument `a`\n  --> /tmp/tmpbuc0l7wm.rs:12:13\n \
    \  |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |   \
    \                         - help: consider making this binding mutable: `mut a`\n\
    ...\n12 |             a /= b;\n   |             ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmpbuc0l7wm.rs:14:13\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n14 |             a %= b;\n   |             ^^^^^^ cannot assign to\
    \ immutable argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n\
    \  --> /tmp/tmpbuc0l7wm.rs:17:9\n   |\n6  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                                      - help: consider\
    \ making this binding mutable: `mut b`\n...\n17 |         b /= 2;\n   |      \
    \   ^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to 3 previous\
    \ errors; 1 warning emitted\n\nFor more information about this error, try `rustc\
    \ --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ result = a;\n    while result % b != 0 {\n        result = result / b;\n   \
    \ }\n    result\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpj4z68ysk.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b).unwrap_or(a)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpk777s5_6.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n\n    let mut greatest_common_divisor\
    \ = a as isize;\n\n    while greatest_common_divisor < b {\n        greatest_common_divisor\
    \ *= a;\n    }\n\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `1`', /tmp/tmp31o5eb3t.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if b ==\
    \ 0 {\n        return a;\n    }\n    if a == 0 {\n        return b;\n    }\n \
    \   let mut greatest_common_divisor = a;\n    let mut remainder = b % a;\n   \
    \ while remainder != 0 {\n        greatest_common_divisor = remainder;\n     \
    \   remainder = b % a;\n    }\n    greatest_common_divisor\n}\n\nfn main() {\n\
    \    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7),\
    \ 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14),\
    \ 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    if a > b {\n        (a, b) = (b,\
    \ a)\n    }\n    let mut greatest_common_divisor = a;\n    let mut remainder =\
    \ a % b;\n    while remainder != 0 {\n        greatest_common_divisor += b;\n\
    \        remainder -= b;\n    }\n    greatest_common_divisor\n}\n\nfn main() {\n\
    \    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7),\
    \ 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14),\
    \ 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmpv98jlj9m.rs:11:10\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n11 |         (a, b) = (b, a)\n   |          ^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpv98jlj9m.rs:11:13\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n11 |         (a, b) = (b, a)\n   |             ^ cannot assign\
    \ to immutable argument\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if b ==\
    \ 0 {\n        a\n    } else {\n        greatest_common_divisor(b, a % b)\n  \
    \  }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpjaswm3ud.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmps1wiza1s.rs:10:9\n   |\n\
    6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |         \
    \                                          ----- expected `isize` because of return\
    \ type\n...\n10 |         a.checked_div(b)\n   |         ^^^^^^^^^^^^^^^^ expected\
    \ `isize`, found enum `Option`\n   |\n   = note: expected type `isize`\n     \
    \         found enum `Option<isize>`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b)\n \
    \   }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpjhe7tgke.rs:10:11\n   |\n10 |         a.gcd(b)\n   |  \
    \         ^^^ method not found in `isize`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    let mut greatest_common_divisor\
    \ = a.abs() as isize;\n    while greatest_common_divisor < b {\n        greatest_common_divisor\
    \ += a;\n    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `1`', /tmp/tmp38m42tlv.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ gcd = a;\n    while gcd < b {\n        gcd *= 2;\n    }\n    gcd\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `1`', /tmp/tmpu33b9290.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ gcd = a;\n    while gcd < b {\n        gcd *= 2;\n    }\n    gcd\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `1`', /tmp/tmpzs6uvejv.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ greatest_common_divisor = 1;\n    while a > 0 && b > 0 {\n        if a > b {\n\
    \            a %= b;\n        } else {\n            b %= a;\n        }\n     \
    \   greatest_common_divisor *= a;\n    }\n    greatest_common_divisor\n}\n\nfn\
    \ main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmp5foyx85q.rs:10:13\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n10 |             a %= b;\n   |             ^^^^^^ cannot assign to\
    \ immutable argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n\
    \  --> /tmp/tmp5foyx85q.rs:12:13\n   |\n6  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                                      - help: consider\
    \ making this binding mutable: `mut b`\n...\n12 |             b %= a;\n   |  \
    \           ^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpby09ly6a.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ greatest_common_divisor = 1;\n    while a > 0 && b > 0 {\n        if a > b {\n\
    \            greatest_common_divisor += 1;\n        }\n        a -= 1;\n     \
    \   b -= 1;\n    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmphi0z6cff.rs:12:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n12 |         a -= 1;\n   |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmphi0z6cff.rs:13:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n13 |         b -= 1;\n   |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    let mut greatest_common_divisor\
    \ = 1;\n    let mut a = a % b;\n    while a > 0 {\n        greatest_common_divisor\
    \ = greatest_common_divisor % a;\n        a = a / b;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmps8erk4pn.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpw42yz14v.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmph5lpghjj.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b).unwrap_or(a)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmp97a9ejmr.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b).unwrap_or(a)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpo0gf4zc3.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpcpi7qzzi.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n\n    let mut greatest_common_divisor\
    \ = a.clone();\n    let mut a = a.clone();\n    let mut b = b.clone();\n\n   \
    \ while a != 0 {\n        if b == 0 {\n            return greatest_common_divisor;\n\
    \        }\n\n        if a > b {\n            a -= b;\n        } else {\n    \
    \        b -= a;\n        }\n\n        greatest_common_divisor += 1;\n    }\n\n\
    \    greatest_common_divisor\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `1`', /tmp/tmpy0v4m42q.rs:34:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpd3l1s_vg.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n\n    let mut greatest_common_divisor\
    \ = a as isize;\n    let mut a = a % b;\n    while a > 0 {\n        greatest_common_divisor\
    \ = a as isize;\n        a = b as isize;\n        b = greatest_common_divisor\
    \ % b;\n    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpp4o5e15t.rs:16:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n16 |         b = greatest_common_divisor % b;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ cannot assign to immutable argument\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b).unwrap_or(a)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpehusjl9d.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmp8650l_ny.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b).unwrap_or(a)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpg1wszxrp.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        greatest_common_divisor(a,\
    \ a)\n    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n\n    let mut gcd = a;\n    while gcd\
    \ != 0 && b != 0 {\n        if a % gcd == 0 && b % gcd == 0 {\n            gcd\
    \ /= gcd / gcd % b;\n        } else {\n            gcd /= gcd % b;\n        }\n\
    \    }\n    gcd\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpnvdqpimu.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpw2caemqq.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n\n    let mut greatest_common_divisor\
    \ = 1;\n    let mut a = a % greatest_common_divisor;\n    let mut b = b % greatest_common_divisor;\n\
    \n    while a != 0 && b != 0 {\n        if a > b {\n            greatest_common_divisor\
    \ = b;\n            b = b % greatest_common_divisor;\n        } else {\n     \
    \       greatest_common_divisor = a;\n            a = a % greatest_common_divisor;\n\
    \        }\n    }\n\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmpkh5t8fir.rs:31:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    let mut greatest_common_divisor\
    \ = a.clone();\n    while greatest_common_divisor < b {\n        greatest_common_divisor\
    \ += a;\n    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `1`', /tmp/tmpum9usjpy.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmptcqvm9h4.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ greatest_common_divisor = a;\n    let mut remainder = b;\n\n    while remainder\
    \ != 0 {\n        if remainder % greatest_common_divisor == 0 {\n            greatest_common_divisor\
    \ += 1;\n        } else {\n            remainder -= greatest_common_divisor;\n\
    \        }\n    }\n\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ greatest_common_divisor = a;\n    while greatest_common_divisor > b {\n    \
    \    greatest_common_divisor -= b;\n    }\n    greatest_common_divisor\n}\n\n\
    fn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpzrqgbsei.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b).unwrap_or(a)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmphvu0rh7_.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b).unwrap_or(a)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpikh3smpy.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b).unwrap_or(1)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpq_8bq0fp.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ greatest_common_divisor = a;\n    let mut remainder = b;\n    while remainder\
    \ != 0 {\n        remainder %= greatest_common_divisor;\n        greatest_common_divisor\
    \ += 1;\n    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpsuczcbwp.rs:10:9\n   |\n\
    6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |         \
    \                                          ----- expected `isize` because of return\
    \ type\n...\n10 |         a.checked_div(b)\n   |         ^^^^^^^^^^^^^^^^ expected\
    \ `isize`, found enum `Option`\n   |\n   = note: expected type `isize`\n     \
    \         found enum `Option<isize>`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmprc_xjqro.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n\n    let mut greatest_common_divisor\
    \ = 1;\n    let mut a = a % greatest_common_divisor;\n    let mut b = b % greatest_common_divisor;\n\
    \n    while a != 0 && b != 0 {\n        if a > b {\n            greatest_common_divisor\
    \ = greatest_common_divisor + 1;\n            a = a % greatest_common_divisor;\n\
    \        } else {\n            greatest_common_divisor = greatest_common_divisor\
    \ + 1;\n            b = b % greatest_common_divisor;\n        }\n    }\n\n   \
    \ greatest_common_divisor\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmpja8yd895.rs:31:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n\n    let mut greatest_common_divisor\
    \ = a % b;\n    while greatest_common_divisor != 0 {\n        greatest_common_divisor\
    \ = a % greatest_common_divisor;\n        a = b;\n        b = greatest_common_divisor;\n\
    \    }\n\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmpoqldx6pe.rs:14:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n14 |         a = b;\n   |         ^^^^^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpoqldx6pe.rs:15:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n15 |         b = greatest_common_divisor;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ cannot assign to immutable argument\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ greatest_common_divisor = a;\n    while greatest_common_divisor > b {\n    \
    \    greatest_common_divisor -= b;\n    }\n    greatest_common_divisor\n}\n\n\
    fn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpo9ymfj_r.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp9sedakek.rs:10:9\n   |\n\
    6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |         \
    \                                          ----- expected `isize` because of return\
    \ type\n...\n10 |         a.checked_div(b)\n   |         ^^^^^^^^^^^^^^^^ expected\
    \ `isize`, found enum `Option`\n   |\n   = note: expected type `isize`\n     \
    \         found enum `Option<isize>`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).gcd(b).unwrap()\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpckj9ophn.rs:7:13\n  |\n7 |     (a / b).gcd(b).unwrap()\n\
    \  |             ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmptn511h0_.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n\n    let mut greatest_common_divisor\
    \ = a % b;\n    while greatest_common_divisor != 0 {\n        greatest_common_divisor\
    \ = b;\n        b = a % b;\n        a = greatest_common_divisor;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpcbzd5p9u.rs:14:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n14 |         b = a % b;\n   |         ^^^^^^^^^ cannot assign\
    \ to immutable argument\n\nerror[E0384]: cannot assign to immutable argument `a`\n\
    \  --> /tmp/tmpcbzd5p9u.rs:15:9\n   |\n6  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                            - help: consider making\
    \ this binding mutable: `mut a`\n...\n15 |         a = greatest_common_divisor;\n\
    \   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot assign to immutable argument\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpn2q8dro7.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpuhppfmak.rs:7:13\n  |\n7 |     (a / b).floor()\n  |    \
    \         ^^^^^ help: there is an associated function with a similar name: `div_floor`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n\n    let mut greatest_common_divisor\
    \ = a;\n    let mut a = a % b;\n    while a > 0 {\n        greatest_common_divisor\
    \ = b;\n        b = a % b;\n        a = a / b;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpumi7axpn.rs:15:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n15 |         b = a % b;\n   |         ^^^^^^^^^ cannot assign\
    \ to immutable argument\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpfq8ipu7v.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpzwx_lf3t.rs:10:9\n   |\n\
    6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |         \
    \                                          ----- expected `isize` because of return\
    \ type\n...\n10 |         a.checked_div(b)\n   |         ^^^^^^^^^^^^^^^^ expected\
    \ `isize`, found enum `Option`\n   |\n   = note: expected type `isize`\n     \
    \         found enum `Option<isize>`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpjozkrsgw.rs:10:9\n   |\n\
    6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |         \
    \                                          ----- expected `isize` because of return\
    \ type\n...\n10 |         a.checked_div(b)\n   |         ^^^^^^^^^^^^^^^^ expected\
    \ `isize`, found enum `Option`\n   |\n   = note: expected type `isize`\n     \
    \         found enum `Option<isize>`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpzi69vslg.rs:10:9\n   |\n\
    6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |         \
    \                                          ----- expected `isize` because of return\
    \ type\n...\n10 |         a.checked_div(b)\n   |         ^^^^^^^^^^^^^^^^ expected\
    \ `isize`, found enum `Option`\n   |\n   = note: expected type `isize`\n     \
    \         found enum `Option<isize>`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ greatest_divisor = 0;\n    let mut a_divisor = 1;\n    let mut b_divisor = 1;\n\
    \n    while a_divisor < b {\n        if a % a_divisor == 0 && b % b_divisor ==\
    \ 0 {\n            greatest_divisor = a_divisor;\n            break;\n       \
    \ }\n\n        a_divisor += 1;\n        b_divisor += 1;\n    }\n\n    greatest_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmp6xpkchvc.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ greatest_common_divisor = 1;\n    while a > 0 && b > 0 {\n        if a > b {\n\
    \            greatest_common_divisor += 1;\n            a -= 1;\n        } else\
    \ {\n            b -= 1;\n        }\n    }\n    greatest_common_divisor\n}\n\n\
    fn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmprfc9wd69.rs:11:13\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n11 |             a -= 1;\n   |             ^^^^^^ cannot assign to\
    \ immutable argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n\
    \  --> /tmp/tmprfc9wd69.rs:13:13\n   |\n6  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                                      - help: consider\
    \ making this binding mutable: `mut b`\n...\n13 |             b -= 1;\n   |  \
    \           ^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    let mut greatest_common_divisor\
    \ = a;\n    let mut greatest_common_divisor_2 = b;\n    while greatest_common_divisor\
    \ > greatest_common_divisor_2 {\n        greatest_common_divisor -= greatest_common_divisor_2;\n\
    \        greatest_common_divisor_2 -= greatest_common_divisor;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpqxn1mt0q.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ gcd = a;\n    while gcd < b {\n        gcd *= gcd - 1;\n    }\n    gcd\n}\n\n\
    fn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `30`,\n right: `1`', /tmp/tmpl1y85vca.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n\n    let mut greatest_common_divisor\
    \ = a.clone();\n    let mut a = a.clone();\n    let mut b = b.clone();\n\n   \
    \ while a != 0 {\n        let mut remainder = a.clone();\n        a %= b;\n  \
    \      greatest_common_divisor = remainder;\n    }\n\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpxhyv02sf.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpsmc7i2kn.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        greatest_common_divisor(a,\
    \ a)\n    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpj6b3uqlz.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpfa2ug27i.rs:10:9\n   |\n\
    6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |         \
    \                                          ----- expected `isize` because of return\
    \ type\n...\n10 |         a.checked_div(b)\n   |         ^^^^^^^^^^^^^^^^ expected\
    \ `isize`, found enum `Option`\n   |\n   = note: expected type `isize`\n     \
    \         found enum `Option<isize>`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpsz_ttjiw.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n\n    let mut greatest_common_divisor\
    \ = a as isize;\n    let mut a = a as isize;\n    let mut b = b as isize;\n  \
    \  while a > 0 && b > 0 {\n        if a > b {\n            a %= b;\n        }\
    \ else {\n            b %= a;\n        }\n        greatest_common_divisor += 1;\n\
    \    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `5`,\n right: `1`', /tmp/tmpkgqdq3rl.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmp4ptupb7t.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    let mut greatest_common_divisor\
    \ = a % b;\n    while greatest_common_divisor != 0 {\n        greatest_common_divisor\
    \ = b;\n        b = a % b;\n        a = greatest_common_divisor;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmp2lvufgxm.rs:13:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n13 |         b = a % b;\n   |         ^^^^^^^^^ cannot assign\
    \ to immutable argument\n\nerror[E0384]: cannot assign to immutable argument `a`\n\
    \  --> /tmp/tmp2lvufgxm.rs:14:9\n   |\n6  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                            - help: consider making\
    \ this binding mutable: `mut a`\n...\n14 |         a = greatest_common_divisor;\n\
    \   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot assign to immutable argument\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpk59xgh81.rs:10:9\n   |\n\
    6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |         \
    \                                          ----- expected `isize` because of return\
    \ type\n...\n10 |         a.checked_div(b)\n   |         ^^^^^^^^^^^^^^^^ expected\
    \ `isize`, found enum `Option`\n   |\n   = note: expected type `isize`\n     \
    \         found enum `Option<isize>`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmp76l4j32e.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ greatest_divisor = 0;\n    let mut a_divisor = 1;\n    let mut b_divisor = 1;\n\
    \n    while a_divisor < b {\n        if a % a_divisor == 0 && b % b_divisor ==\
    \ 0 {\n            greatest_divisor = a_divisor;\n            break;\n       \
    \ }\n        a_divisor += 1;\n        b_divisor += 1;\n    }\n\n    greatest_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmpv1ga5owy.rs:26:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmp1pgr7q9b.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    let mut greatest_common_divisor\
    \ = a % b;\n    while greatest_common_divisor != 0 {\n        greatest_common_divisor\
    \ = b;\n        b = a % b;\n        a = greatest_common_divisor;\n    }\n    a\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpk43vwk5k.rs:13:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n13 |         b = a % b;\n   |         ^^^^^^^^^ cannot assign\
    \ to immutable argument\n\nerror[E0384]: cannot assign to immutable argument `a`\n\
    \  --> /tmp/tmpk43vwk5k.rs:14:9\n   |\n6  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                            - help: consider making\
    \ this binding mutable: `mut a`\n...\n14 |         a = greatest_common_divisor;\n\
    \   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot assign to immutable argument\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        greatest_common_divisor(a,\
    \ a)\n    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmp17py584g.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n\n    let mut greatest_common_divisor\
    \ = a;\n    let mut greatest_common_divisor_2 = b;\n\n    while greatest_common_divisor\
    \ > greatest_common_divisor_2 {\n        greatest_common_divisor -= greatest_common_divisor_2;\n\
    \        greatest_common_divisor_2 -= greatest_common_divisor;\n    }\n\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpxqsky5tk.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ greatest_common_divisor = a;\n    while greatest_common_divisor > b {\n    \
    \    greatest_common_divisor -= b;\n    }\n    greatest_common_divisor\n}\n\n\
    fn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpgfpuy78_.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    let mut greatest_common_divisor\
    \ = 1;\n    let mut a = a % greatest_common_divisor;\n    let mut b = b % greatest_common_divisor;\n\
    \    while a != 0 && b != 0 {\n        if a > b {\n            greatest_common_divisor\
    \ = b;\n            b = b % greatest_common_divisor;\n        } else {\n     \
    \       greatest_common_divisor = a;\n            a = a % greatest_common_divisor;\n\
    \        }\n    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmpnfaywrz_.rs:28:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpkqxevrxj.rs:10:9\n   |\n\
    6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |         \
    \                                          ----- expected `isize` because of return\
    \ type\n...\n10 |         a.checked_div(b)\n   |         ^^^^^^^^^^^^^^^^ expected\
    \ `isize`, found enum `Option`\n   |\n   = note: expected type `isize`\n     \
    \         found enum `Option<isize>`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b).unwrap_or(a)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpgowd5oi_.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpxkhygqg2.rs:10:9\n   |\n\
    6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |         \
    \                                          ----- expected `isize` because of return\
    \ type\n...\n10 |         a.checked_div(b)\n   |         ^^^^^^^^^^^^^^^^ expected\
    \ `isize`, found enum `Option`\n   |\n   = note: expected type `isize`\n     \
    \         found enum `Option<isize>`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b).unwrap_or(a)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpw1lazts3.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ greatest_common_divisor = 1;\n    while a > 0 && b > 0 {\n        if a > b {\n\
    \            greatest_common_divisor += 1;\n        }\n        a -= b;\n     \
    \   b -= a;\n    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmp4mzdce7c.rs:12:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n12 |         a -= b;\n   |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmp4mzdce7c.rs:13:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n13 |         b -= a;\n   |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n\n    let mut greatest_common_divisor\
    \ = a % b;\n    while greatest_common_divisor != 0 {\n        greatest_common_divisor\
    \ -= b;\n    }\n\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ a = a;\n    let mut b = b;\n    while a > b {\n        a = a % b;\n        b\
    \ = b % a;\n    }\n    a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpb_t3gf99.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    let mut greatest_common_divisor\
    \ = a;\n    let mut a = a % b;\n    while a != 0 {\n        greatest_common_divisor\
    \ = b;\n        b = a % b;\n        a = a / b;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmp6yqdzw4a.rs:14:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n14 |         b = a % b;\n   |         ^^^^^^^^^ cannot assign\
    \ to immutable argument\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b).unwrap_or(1)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpuq39x910.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ a = a;\n    let mut b = b;\n    while a > b {\n        a = a % b;\n        b\
    \ = b % a;\n    }\n    a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpflj4_snl.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpov0yiq79.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b)\n \
    \   }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpsg5aw2es.rs:10:11\n   |\n10 |         a.gcd(b)\n   |  \
    \         ^^^ method not found in `isize`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b)\n \
    \   }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpn1tgs6o5.rs:10:11\n   |\n10 |         a.gcd(b)\n   |  \
    \         ^^^ method not found in `isize`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    let mut greatest_common_divisor\
    \ = a.clone();\n    while greatest_common_divisor < b {\n        greatest_common_divisor\
    \ += a;\n    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `1`', /tmp/tmpvwmbhefv.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpc5ex7x4e.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        greatest_common_divisor(a,\
    \ a)\n    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        greatest_common_divisor(a,\
    \ a)\n    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpbrwpb_ib.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n\n    let mut greatest_common_divisor\
    \ = a.clone();\n    let mut remainder = b.clone();\n\n    while remainder != 0\
    \ {\n        if remainder % a == 0 && remainder % b == 0 {\n            greatest_common_divisor\
    \ += 1;\n        }\n\n        remainder /= b;\n    }\n\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp_3g24p0r.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n\n    let mut greatest_common_divisor\
    \ = a % b;\n    while greatest_common_divisor != 0 {\n        greatest_common_divisor\
    \ = b % greatest_common_divisor;\n    }\n    greatest_common_divisor\n}\n\nfn\
    \ main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpjthpyfqe.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ greatest_common_divisor = 1;\n    let mut a = a;\n    let mut b = b;\n    while\
    \ a > b {\n        greatest_common_divisor <<= 1;\n        if a > b {\n      \
    \      greatest_common_divisor += 1;\n        }\n        a -= b;\n        b +=\
    \ a;\n    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmp2icjp8gj.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmp2_s78sdn.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b).unwrap_or(a)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpzw0o8shi.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    let mut greatest_common_divisor\
    \ = a.clone();\n    while greatest_common_divisor < b {\n        greatest_common_divisor\
    \ += a;\n    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `1`', /tmp/tmpg_tu4ybf.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ greatest_common_divisor = a;\n    while greatest_common_divisor < b {\n    \
    \    greatest_common_divisor += a;\n    }\n    greatest_common_divisor\n}\n\n\
    fn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `1`', /tmp/tmp9mo1v4a0.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n\n    let mut greatest_common_divisor\
    \ = 1;\n    let mut a = a % greatest_common_divisor;\n    let mut b = b % greatest_common_divisor;\n\
    \n    while a != 0 && b != 0 {\n        if a > b {\n            greatest_common_divisor\
    \ = b;\n            b = b % greatest_common_divisor;\n        } else {\n     \
    \       greatest_common_divisor = a;\n            a = a % greatest_common_divisor;\n\
    \        }\n    }\n\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmpjg09_khc.rs:31:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    let mut greatest_common_divisor\
    \ = 1;\n    let mut a_minus_b = a - b;\n    while a_minus_b > 0 {\n        greatest_common_divisor\
    \ *= a_minus_b;\n        a_minus_b -= 1;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmpze80jcqn.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        greatest_common_divisor(a,\
    \ a)\n    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n\n    let mut greatest_common_divisor\
    \ = a;\n    let mut a = a % b;\n    while a != 0 {\n        greatest_common_divisor\
    \ = b;\n        b = a % b;\n        a = a / b;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpvn260z2i.rs:15:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n15 |         b = a % b;\n   |         ^^^^^^^^^ cannot assign\
    \ to immutable argument\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b).unwrap_or(a)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpgfgq2hqs.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpdx3qsouy.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpb8xklqpk.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ gcd = 1;\n    while a > 0 && b > 0 {\n        if a > b {\n            a %= b;\n\
    \        } else {\n            b %= a;\n        }\n        gcd *= b;\n    }\n\
    \    gcd\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n   \
    \ assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n   \
    \ assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmpa8wrdyw7.rs:10:13\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n10 |             a %= b;\n   |             ^^^^^^ cannot assign to\
    \ immutable argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n\
    \  --> /tmp/tmpa8wrdyw7.rs:12:13\n   |\n6  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                                      - help: consider\
    \ making this binding mutable: `mut b`\n...\n12 |             b %= a;\n   |  \
    \           ^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n\n    let mut greatest_common_divisor\
    \ = a % b;\n    while greatest_common_divisor != 0 {\n        greatest_common_divisor\
    \ = b % greatest_common_divisor;\n    }\n    greatest_common_divisor\n}\n\nfn\
    \ main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp_u9qh98x.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpvt2oysv4.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp8a3qyn79.rs:10:9\n   |\n\
    6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |         \
    \                                          ----- expected `isize` because of return\
    \ type\n...\n10 |         a.checked_div(b)\n   |         ^^^^^^^^^^^^^^^^ expected\
    \ `isize`, found enum `Option`\n   |\n   = note: expected type `isize`\n     \
    \         found enum `Option<isize>`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpcu_ailt1.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpumfsucx2.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmp3qcm29uk.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpfrll9xsf.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b)\n \
    \   }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmptpfp2ubp.rs:10:11\n   |\n10 |         a.gcd(b)\n   |  \
    \         ^^^ method not found in `isize`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ greatest_common_divisor = a;\n    while greatest_common_divisor > b {\n    \
    \    greatest_common_divisor -= b;\n    }\n    greatest_common_divisor\n}\n\n\
    fn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpdwpd1uro.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmp41giz4dv.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n\n    let mut greatest_common_divisor\
    \ = a % b;\n    while greatest_common_divisor != 0 {\n        greatest_common_divisor\
    \ = b;\n        b = a % b;\n        a = greatest_common_divisor;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmph_8rgru5.rs:14:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n14 |         b = a % b;\n   |         ^^^^^^^^^ cannot assign\
    \ to immutable argument\n\nerror[E0384]: cannot assign to immutable argument `a`\n\
    \  --> /tmp/tmph_8rgru5.rs:15:9\n   |\n6  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                            - help: consider making\
    \ this binding mutable: `mut a`\n...\n15 |         a = greatest_common_divisor;\n\
    \   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot assign to immutable argument\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmp_48z4k_y.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    let mut greatest_common_divisor\
    \ = a;\n    let mut remainder = a % b;\n    while remainder != 0 {\n        greatest_common_divisor\
    \ = remainder;\n        remainder = a % b;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ gcd = a;\n    while gcd < b {\n        gcd *= a;\n    }\n    gcd\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `1`', /tmp/tmp974bny7i.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpto7797r1.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmplvcb9hj1.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpqt3_685y.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ dividend = a;\n    let mut divisor = b;\n    while dividend > divisor * 2 {\n\
    \        dividend /= 2;\n        divisor /= 2;\n    }\n    divisor\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `7`,\n right: `1`', /tmp/tmppwo7lv2o.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmppti1004s.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if b ==\
    \ 0 {\n        a\n    } else {\n        greatest_common_divisor(b, a % b)\n  \
    \  }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b).unwrap_or(a)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpynrzf1rg.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        greatest_common_divisor(a,\
    \ a)\n    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if b ==\
    \ 0 {\n        return a;\n    }\n\n    if a > b {\n        greatest_common_divisor(b,\
    \ a)\n    } else {\n        greatest_common_divisor(a, (b % a))\n    }\n}\n\n\
    fn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    let mut greatest_common_divisor\
    \ = 1;\n    while a > 0 && b > 0 {\n        if a % b == 0 {\n            greatest_common_divisor\
    \ += b;\n        }\n        a /= b;\n        b /= 2;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmpz09msdgu.rs:15:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n15 |         a /= b;\n   |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpz09msdgu.rs:16:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n16 |         b /= 2;\n   |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n\n    let mut greatest_common_divisor\
    \ = a % b;\n    while greatest_common_divisor != 0 {\n        greatest_common_divisor\
    \ = b;\n        b = a % b;\n        a = greatest_common_divisor;\n    }\n\n  \
    \  greatest_common_divisor\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpkylmhhlg.rs:14:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n14 |         b = a % b;\n   |         ^^^^^^^^^ cannot assign\
    \ to immutable argument\n\nerror[E0384]: cannot assign to immutable argument `a`\n\
    \  --> /tmp/tmpkylmhhlg.rs:15:9\n   |\n6  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                            - help: consider making\
    \ this binding mutable: `mut a`\n...\n15 |         a = greatest_common_divisor;\n\
    \   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot assign to immutable argument\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ n = 0;\n    while a > 0 && b > 0 {\n        if a > b {\n            a %= b;\n\
    \        } else {\n            b %= a;\n        }\n        n += 1;\n    }\n  \
    \  n\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmpr0lio7x6.rs:10:13\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n10 |             a %= b;\n   |             ^^^^^^ cannot assign to\
    \ immutable argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n\
    \  --> /tmp/tmpr0lio7x6.rs:12:13\n   |\n6  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                                      - help: consider\
    \ making this binding mutable: `mut b`\n...\n12 |             b %= a;\n   |  \
    \           ^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ greatest_common_divisor = a;\n    while greatest_common_divisor > b {\n    \
    \    greatest_common_divisor -= b;\n    }\n    greatest_common_divisor\n}\n\n\
    fn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpkn8tq3kl.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if b ==\
    \ 0 {\n        return a;\n    }\n    greatest_common_divisor(b, a%b)\n}\n\nfn\
    \ main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ greatest_common_divisor = a;\n    while greatest_common_divisor > b {\n    \
    \    greatest_common_divisor -= b;\n    }\n    greatest_common_divisor\n}\n\n\
    fn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpkbhmowwn.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    let mut greatest_common_divisor\
    \ = a % b;\n    while greatest_common_divisor != 0 {\n        greatest_common_divisor\
    \ = b;\n        b = a % b;\n        a = greatest_common_divisor;\n    }\n    a\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpjws_i5hu.rs:13:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n13 |         b = a % b;\n   |         ^^^^^^^^^ cannot assign\
    \ to immutable argument\n\nerror[E0384]: cannot assign to immutable argument `a`\n\
    \  --> /tmp/tmpjws_i5hu.rs:14:9\n   |\n6  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                            - help: consider making\
    \ this binding mutable: `mut a`\n...\n14 |         a = greatest_common_divisor;\n\
    \   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot assign to immutable argument\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    let mut greatest_common_divisor\
    \ = 1;\n    let mut a = a % greatest_common_divisor;\n    let mut b = b % greatest_common_divisor;\n\
    \    while a != 0 && b != 0 {\n        if a > b {\n            greatest_common_divisor\
    \ = b;\n            b = b % greatest_common_divisor;\n        } else {\n     \
    \       greatest_common_divisor = a;\n            a = a % greatest_common_divisor;\n\
    \        }\n    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmphrvwtz20.rs:28:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ gcd = a;\n    while gcd < b {\n        gcd *= 2;\n    }\n    gcd\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `1`', /tmp/tmp2dv2s8et.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmprjm3mde5.rs:10:9\n   |\n\
    6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |         \
    \                                          ----- expected `isize` because of return\
    \ type\n...\n10 |         a.checked_div(b)\n   |         ^^^^^^^^^^^^^^^^ expected\
    \ `isize`, found enum `Option`\n   |\n   = note: expected type `isize`\n     \
    \         found enum `Option<isize>`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ greatest_common_divisor = 1;\n    while a > 0 && b > 0 {\n        if a > b {\n\
    \            greatest_common_divisor += a;\n            a -= b;\n        } else\
    \ {\n            greatest_common_divisor += b;\n            b -= a;\n        }\n\
    \    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmp31a6l6uf.rs:11:13\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n11 |             a -= b;\n   |             ^^^^^^ cannot assign to\
    \ immutable argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n\
    \  --> /tmp/tmp31a6l6uf.rs:14:13\n   |\n6  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                                      - help: consider\
    \ making this binding mutable: `mut b`\n...\n14 |             b -= a;\n   |  \
    \           ^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    loop {\n        let mut a = a %\
    \ b;\n        if a == 0 {\n            return b;\n        }\n        b = b;\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "warning: variable does not need to be mutable\n  --> /tmp/tmp_wfdf48a.rs:11:13\n\
    \   |\n11 |         let mut a = a % b;\n   |             ----^\n   |         \
    \    |\n   |             help: remove this `mut`\n   |\n   = note: `#[warn(unused_mut)]`\
    \ on by default\n\nerror[E0384]: cannot assign to immutable argument `b`\n  -->\
    \ /tmp/tmp_wfdf48a.rs:15:9\n   |\n6  | fn greatest_common_divisor(a: isize, b:\
    \ isize) -> isize {\n   |                                      - help: consider\
    \ making this binding mutable: `mut b`\n...\n15 |         b = b;\n   |       \
    \  ^^^^^ cannot assign to immutable argument\n\nerror: aborting due to previous\
    \ error; 1 warning emitted\n\nFor more information about this error, try `rustc\
    \ --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n\n    let mut greatest_common_divisor\
    \ = a.abs() as isize;\n    let mut a_mod_b = a % b;\n    while a_mod_b != 0 {\n\
    \        greatest_common_divisor += 1;\n        a_mod_b -= b;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ dividend = a;\n    let mut divisor = b;\n    while dividend > divisor {\n  \
    \      dividend -= divisor;\n    }\n    dividend\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpgtry3ebd.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp5z1xpp3y.rs:10:9\n   |\n\
    6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |         \
    \                                          ----- expected `isize` because of return\
    \ type\n...\n10 |         a.checked_div(b)\n   |         ^^^^^^^^^^^^^^^^ expected\
    \ `isize`, found enum `Option`\n   |\n   = note: expected type `isize`\n     \
    \         found enum `Option<isize>`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n\n    let mut greatest_common_divisor\
    \ = a % b;\n    while greatest_common_divisor != 0 {\n        greatest_common_divisor\
    \ = b;\n        b = a % b;\n        a = greatest_common_divisor;\n    }\n\n  \
    \  greatest_common_divisor\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpoa37xwi7.rs:14:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n14 |         b = a % b;\n   |         ^^^^^^^^^ cannot assign\
    \ to immutable argument\n\nerror[E0384]: cannot assign to immutable argument `a`\n\
    \  --> /tmp/tmpoa37xwi7.rs:15:9\n   |\n6  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                            - help: consider making\
    \ this binding mutable: `mut a`\n...\n15 |         a = greatest_common_divisor;\n\
    \   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot assign to immutable argument\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).gcd(b).unwrap()\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpt05n1_p7.rs:7:13\n  |\n7 |     (a / b).gcd(b).unwrap()\n\
    \  |             ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmprneo3c83.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ gcd = a;\n    while gcd != 0 {\n        gcd = b % gcd;\n        b = gcd;\n \
    \   }\n    b\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpm52d3doc.rs:10:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n10 |         b = gcd;\n   |         ^^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpe58hlh8a.rs:10:9\n   |\n\
    6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |         \
    \                                          ----- expected `isize` because of return\
    \ type\n...\n10 |         a.checked_div(b)\n   |         ^^^^^^^^^^^^^^^^ expected\
    \ `isize`, found enum `Option`\n   |\n   = note: expected type `isize`\n     \
    \         found enum `Option<isize>`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpoil_tirm.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    let mut greatest_common_divisor\
    \ = a;\n    let mut a = a % b;\n    while a != 0 {\n        greatest_common_divisor\
    \ = b;\n        b = a % b;\n        a = a / b;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpigbf59fd.rs:14:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n14 |         b = a % b;\n   |         ^^^^^^^^^ cannot assign\
    \ to immutable argument\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ gcd = a;\n    while gcd > b {\n        gcd -= b;\n    }\n    gcd\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpst_o6u7e.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpbquprtpe.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmpng71rg64.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ a = a;\n    let mut b = b;\n    while a > b {\n        a = a % b;\n        b\
    \ = b % a;\n    }\n    a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpjdkdhmmy.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpnea8o3cd.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ greatest_common_divisor = 1;\n    let mut a_mod_b = 0;\n    while a > 0 && b\
    \ > 0 {\n        if a % b == 0 {\n            greatest_common_divisor += 1;\n\
    \        }\n        a /= b;\n        a_mod_b /= b;\n    }\n    if a == 0 {\n \
    \       greatest_common_divisor = a_mod_b\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmpx86iw9sw.rs:13:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n13 |         a /= b;\n   |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpqmc7pz4i.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    let mut greatest_common_divisor\
    \ = 1;\n    let mut a = a % greatest_common_divisor;\n    let mut b = b % greatest_common_divisor;\n\
    \    while a != 0 && b != 0 {\n        if a > b {\n            greatest_common_divisor\
    \ = greatest_common_divisor + 1;\n            a = a % greatest_common_divisor;\n\
    \        } else {\n            greatest_common_divisor = greatest_common_divisor\
    \ + 1;\n            b = b % greatest_common_divisor;\n        }\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmpaye1_ekv.rs:28:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n\n    let mut greatest_common_divisor\
    \ = a % b;\n    let mut a = a / b;\n\n    while a != 0 {\n        greatest_common_divisor\
    \ = greatest_common_divisor + 1;\n        a = a / b;\n    }\n\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp67omw6kh.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b).unwrap_or(a)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpz2m2u8wj.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpqg8af4mc.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpw48_gwwn.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n\n    let mut greatest_common_divisor\
    \ = a;\n    let mut a_mod_b = a % b;\n    while a_mod_b != 0 {\n        greatest_common_divisor\
    \ = a_mod_b;\n        a_mod_b = a % b;\n    }\n    greatest_common_divisor\n}\n\
    \nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    let mut greatest_common_divisor\
    \ = a as isize;\n    while greatest_common_divisor > b {\n        greatest_common_divisor\
    \ -= b;\n    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpkn6fbh79.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).gcd(b).unwrap()\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpge4veq2q.rs:7:13\n  |\n7 |     (a / b).gcd(b).unwrap()\n\
    \  |             ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmp1ksl2mx2.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ a = a;\n    let mut b = b;\n    while a > b {\n        a = a % b;\n        b\
    \ = b % a;\n    }\n    a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp1z415eec.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if b ==\
    \ 0 {\n        return a;\n    }\n    let mut greatest_common_divisor = a % b;\n\
    \    while greatest_common_divisor != 0 {\n        greatest_common_divisor = b;\n\
    \        b = a % b;\n        a = greatest_common_divisor;\n    }\n    a\n}\n\n\
    fn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpfpw7w_w_.rs:13:9\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n13 |         b = a % b;\n   |         ^^^^^^^^^ cannot assign\
    \ to immutable argument\n\nerror[E0384]: cannot assign to immutable argument `a`\n\
    \  --> /tmp/tmpfpw7w_w_.rs:14:9\n   |\n6  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                            - help: consider making\
    \ this binding mutable: `mut a`\n...\n14 |         a = greatest_common_divisor;\n\
    \   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot assign to immutable argument\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n\n    let mut greatest_common_divisor\
    \ = a;\n    let mut greatest_common_divisor_2 = b;\n\n    while greatest_common_divisor\
    \ > greatest_common_divisor_2 {\n        greatest_common_divisor_2 -= greatest_common_divisor;\n\
    \        greatest_common_divisor %= greatest_common_divisor_2;\n    }\n\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpw_u224_f.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).ceil()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0599]: no method named `ceil` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpdt73jh_n.rs:7:13\n  |\n7 |     (a / b).ceil() as isize\n\
    \  |             ^^^^ help: there is an associated function with a similar name:\
    \ `div_ceil`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmph_oxsw79.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmp1nam5xbk.rs:7:13\n  |\n7 |     (a / b).floor()\n  |    \
    \         ^^^^^ help: there is an associated function with a similar name: `div_floor`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmptjf7raw5.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpijfo5_99.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a ==\
    \ 0 || b == 0 {\n        return 0;\n    }\n    if a > b {\n        (a, b) = (b,\
    \ a)\n    }\n    let mut greatest_common_divisor = a as isize;\n    let mut remainder\
    \ = a % b;\n    while remainder != 0 {\n        greatest_common_divisor += 1;\n\
    \        remainder = remainder % b;\n    }\n    greatest_common_divisor\n}\n\n\
    fn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmpwcglfi0y.rs:11:10\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n11 |         (a, b) = (b, a)\n   |          ^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpwcglfi0y.rs:11:13\n\
    \   |\n6  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n11 |         (a, b) = (b, a)\n   |             ^ cannot assign\
    \ to immutable argument\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmp6e1lpht3.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        greatest_common_divisor(a,\
    \ a)\n    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ greatest_common_divisor = a;\n    while greatest_common_divisor > b {\n    \
    \    greatest_common_divisor -= b;\n    }\n    greatest_common_divisor\n}\n\n\
    fn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpqah32hrl.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    let mut\
    \ greatest_divisor = 0;\n    let mut a_divisor = 1;\n    let mut b_divisor = 1;\n\
    \    while a_divisor < b {\n        if a % a_divisor == 0 && b % b_divisor ==\
    \ 0 {\n            greatest_divisor = a_divisor;\n            break;\n       \
    \ }\n        a_divisor *= a;\n        b_divisor *= b;\n    }\n    greatest_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmpo6_f66te.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b).unwrap_or(a)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpny0l_k59.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b).unwrap_or(a)\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpxtk9pkh2.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    if a < b\
    \ {\n        greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n\
    \    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n  --> /tmp/tmp5axqdxy4.rs:10:11\n   |\n10 |         a.gcd(b).unwrap()\n\
    \   |           ^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return a greatest common divisor of two integers a and b\n/// >>>\
    \ greatest_common_divisor(3, 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n\
    /// 5\nfn greatest_common_divisor(a: isize, b: isize) -> isize {\n    (a / b).floor()\
    \ as isize\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n \
    \   assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n \
    \   assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  stdout: ''
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmp31var7f9.rs:7:13\n  |\n7 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ help: there is an associated function with a similar name:\
    \ `div_floor`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError

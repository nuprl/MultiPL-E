name: HumanEval_83_starts_one_ends
language: rust
results:
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    n / 10 + 1\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `18`', /tmp/tmpm6co4emg.rs:10:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n > 0);\n    debug_assert!(n % 10 == 1);\n   \
    \ let mut count = 0;\n    while n >= 10 {\n        n /= 10;\n        count +=\
    \ 1;\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmpyw3piez7.rs:8:9\n\
    \  |\n3 | fn starts_one_ends(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n8 |         n /= 10;\n \
    \ |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    while n > 0 {\n        count += n /\
    \ 10;\n        n /= 10;\n    }\n    count\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmp47riz00y.rs:7:9\n\
    \  |\n3 | fn starts_one_ends(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n7 |         n /= 10;\n \
    \ |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match n {\n        0 => 0,\n        1 => 1,\n        _ => n,\n\
    \    }\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmp9g0muf41.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n >= 0);\n    debug_assert!(n <= 9);\n    debug_assert!(n\
    \ % 10 == 0);\n    let mut count = 0;\n    let mut i = 1;\n    while i <= n {\n\
    \        if i % 10 == 1 {\n            i += 1;\n            count += 1;\n    \
    \    }\n        i += 1;\n    }\n    count\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: n % 10 == 0', /tmp/tmp3nlw7f4c.rs:6:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match n {\n        1 => 1,\n        _ => n,\n    }\n}\n\nfn\
    \ main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmphkxigsvf.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n < 1 {\n        return 0;\n    }\n    let mut count = 0;\n\
    \    while n > 0 {\n        if n % 10 == 1 {\n            count += 1;\n      \
    \  }\n        n /= 10;\n    }\n    count\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmp2f43g609.rs:12:9\n\
    \   |\n3  | fn starts_one_ends(n: isize) -> isize {\n   |                    -\
    \ help: consider making this binding mutable: `mut n`\n...\n12 |         n /=\
    \ 10;\n   |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match n {\n        0 => 0,\n        _ => 1 + starts_one_ends(n\
    \ - 1),\n    }\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmp_svdl9p_.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n >= 0);\n    let mut count = 0;\n    while n\
    \ > 0 {\n        count += n / 10;\n        n /= 10;\n    }\n    count\n}\n\nfn\
    \ main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmpce95829q.rs:8:9\n\
    \  |\n3 | fn starts_one_ends(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n8 |         n /= 10;\n \
    \ |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n > 0);\n    let mut count = 0;\n    while n >\
    \ 0 {\n        if n % 10 == 1 {\n            count += 1;\n        }\n        n\
    \ /= 10;\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpqridhgwu.rs:10:9\n\
    \   |\n3  | fn starts_one_ends(n: isize) -> isize {\n   |                    -\
    \ help: consider making this binding mutable: `mut n`\n...\n10 |         n /=\
    \ 10;\n   |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match n {\n        0 => 0,\n        1 => 1,\n        _ => 1\
    \ + starts_one_ends(n - 1),\n    }\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmpabqjzczz.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n > 0);\n    let mut count = 0;\n    while n >\
    \ 0 {\n        count += n / 10;\n        n /= 10;\n    }\n    count\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmpughudmfb.rs:8:9\n\
    \  |\n3 | fn starts_one_ends(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n8 |         n /= 10;\n \
    \ |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n >= 0);\n    let mut count = 0;\n    while n\
    \ != 0 {\n        if n % 10 == 1 {\n            count += 1;\n        }\n     \
    \   n /= 10;\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmp6l3mehp3.rs:10:9\n\
    \   |\n3  | fn starts_one_ends(n: isize) -> isize {\n   |                    -\
    \ help: consider making this binding mutable: `mut n`\n...\n10 |         n /=\
    \ 10;\n   |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    while n != 0 {\n        if n % 10 ==\
    \ 1 {\n            count += 1;\n        }\n        n /= 10;\n    }\n    count\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmpb6k4l0wy.rs:9:9\n\
    \  |\n3 | fn starts_one_ends(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n9 |         n /= 10;\n \
    \ |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n < 0 {\n        panic!(\"starts_one_ends called with negative\
    \ n\");\n    }\n    if n == 0 {\n        return 0;\n    }\n    let mut count =\
    \ 0;\n    let mut i = 1;\n    while i <= n {\n        if i % 10 == 1 {\n     \
    \       count += 1;\n        }\n        i += 1;\n    }\n    count\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `18`', /tmp/tmpdh6jnxjp.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    while n > 0 {\n        count += n /\
    \ 10;\n        n /= 10;\n    }\n    count\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmpifqx354n.rs:7:9\n\
    \  |\n3 | fn starts_one_ends(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n7 |         n /= 10;\n \
    \ |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    while n != 0 {\n        if n % 10 ==\
    \ 1 {\n            count += 1;\n        }\n        n /= 10;\n    }\n    count\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmp0__9s003.rs:9:9\n\
    \  |\n3 | fn starts_one_ends(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n9 |         n /= 10;\n \
    \ |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match n {\n        0 => 0,\n        _ => 1 + starts_one_ends(n\
    \ - 1),\n    }\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmpfw860w4m.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    while n > 0 {\n        if n % 10 ==\
    \ 1 {\n            count += 1;\n        }\n        n /= 10;\n    }\n    count\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmps_wog12i.rs:9:9\n\
    \  |\n3 | fn starts_one_ends(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n9 |         n /= 10;\n \
    \ |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n > 0);\n    debug_assert!(n % 10 == 1);\n   \
    \ (1..n).filter(|x| x % 10 == 1).count()\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp5pylrj1w.rs:6:5\n  |\n3 |\
    \ fn starts_one_ends(n: isize) -> isize {\n  |                               \
    \  ----- expected `isize` because of return type\n...\n6 |     (1..n).filter(|x|\
    \ x % 10 == 1).count()\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected\
    \ `isize`, found `usize`\n  |\nhelp: you can convert a `usize` to an `isize` and\
    \ panic if the converted value doesn't fit\n  |\n6 |     (1..n).filter(|x| x %\
    \ 10 == 1).count().try_into().unwrap()\n  |                                  \
    \         ++++++++++++++++++++\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match n {\n        0 => 0,\n        _ => if n % 10 == 1 {\n\
    \            1\n        } else {\n            starts_one_ends(n / 10) + 1\n  \
    \      }\n    }\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `18`', /tmp/tmpfdf00o9e.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n > 0);\n    let mut count = 0;\n    while n >\
    \ 0 {\n        if n % 10 == 1 {\n            count += 1;\n        }\n        n\
    \ /= 10;\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmplu8770rq.rs:10:9\n\
    \   |\n3  | fn starts_one_ends(n: isize) -> isize {\n   |                    -\
    \ help: consider making this binding mutable: `mut n`\n...\n10 |         n /=\
    \ 10;\n   |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n < 1 {\n        return 0;\n    }\n    let mut count = 0;\n\
    \    while n > 0 {\n        if n % 10 == 1 {\n            count += 1;\n      \
    \  }\n        n /= 10;\n    }\n    count\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpz2vwt3bu.rs:12:9\n\
    \   |\n3  | fn starts_one_ends(n: isize) -> isize {\n   |                    -\
    \ help: consider making this binding mutable: `mut n`\n...\n12 |         n /=\
    \ 10;\n   |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n >= 0);\n    debug_assert!(n <= 9);\n\n    let\
    \ mut count = 0;\n    let mut i = 1;\n    while i <= n {\n        if i / 10 ==\
    \ 1 {\n            count += 1;\n        }\n        i += 1;\n    }\n    count\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpdeu9c4g0.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n >= 0);\n    let mut count = 0;\n    while n\
    \ != 1 {\n        n /= 10;\n        count += 1;\n    }\n    count\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmp4_ydxz1m.rs:7:9\n\
    \  |\n3 | fn starts_one_ends(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n7 |         n /= 10;\n \
    \ |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n >= 0);\n    let mut count = 0;\n    while n\
    \ != 0 {\n        if n % 10 == 1 {\n            count += 1;\n        }\n     \
    \   n /= 10;\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmphvgbkbnw.rs:10:9\n\
    \   |\n3  | fn starts_one_ends(n: isize) -> isize {\n   |                    -\
    \ help: consider making this binding mutable: `mut n`\n...\n10 |         n /=\
    \ 10;\n   |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n >= 0);\n    debug_assert!(n <= 9);\n    debug_assert!(n\
    \ % 10 == 0);\n\n    let mut count = 0;\n    let mut i = 1;\n    while i <= n\
    \ {\n        if i % 10 == 1 {\n            count += 1;\n        }\n        i +=\
    \ 1;\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: n % 10 == 0', /tmp/tmpoof66ooh.rs:6:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match n {\n        0 => 0,\n        1 => 1,\n        _ => n,\n\
    \    }\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmpj802hh07.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match n {\n        0 => 0,\n        _ => 1,\n    }\n}\n\nfn\
    \ main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `18`', /tmp/tmpd9sp2qqp.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n > 0);\n    let mut count = 0;\n    while n >\
    \ 0 {\n        if n % 10 == 1 {\n            count += 1;\n        }\n        n\
    \ /= 10;\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmp34w8hck9.rs:10:9\n\
    \   |\n3  | fn starts_one_ends(n: isize) -> isize {\n   |                    -\
    \ help: consider making this binding mutable: `mut n`\n...\n10 |         n /=\
    \ 10;\n   |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    n / 10 + 1\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `18`', /tmp/tmpxt3pihrm.rs:10:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    while n != 0 {\n        if n % 10 ==\
    \ 1 {\n            count += 1;\n        }\n        n /= 10;\n    }\n    count\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmpzdf4bvvs.rs:9:9\n\
    \  |\n3 | fn starts_one_ends(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n9 |         n /= 10;\n \
    \ |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n > 0);\n    let mut count = 0;\n    while n !=\
    \ 1 {\n        if n % 10 == 1 {\n            count += 1;\n        }\n        n\
    \ /= 10;\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpwgkpjmfx.rs:10:9\n\
    \   |\n3  | fn starts_one_ends(n: isize) -> isize {\n   |                    -\
    \ help: consider making this binding mutable: `mut n`\n...\n10 |         n /=\
    \ 10;\n   |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match n {\n        0 => 0,\n        _ => 1 + starts_one_ends(n\
    \ - 1),\n    }\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmpg24bqx16.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match n {\n        0 => 0,\n        _ => 1,\n    }\n}\n\nfn\
    \ main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `18`', /tmp/tmpkd4zguqt.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    while n > 0 {\n        if n % 10 ==\
    \ 1 {\n            count += 1;\n        }\n        n /= 10;\n    }\n    count\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmpcx7rqhda.rs:9:9\n\
    \  |\n3 | fn starts_one_ends(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n9 |         n /= 10;\n \
    \ |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    while n > 0 {\n        if n % 10 ==\
    \ 1 {\n            count += 1;\n        }\n        n /= 10;\n    }\n    count\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmpkpl9dkat.rs:9:9\n\
    \  |\n3 | fn starts_one_ends(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n9 |         n /= 10;\n \
    \ |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n >= 0);\n    debug_assert!(n <= 9);\n    let\
    \ mut count = 0;\n    for i in 1..=n {\n        if i / 10 == 1 {\n           \
    \ count += 1;\n        }\n        if i / 10 == 0 {\n            count += 1;\n\
    \        }\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmpfti_bdwb.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    while n != 0 {\n        if n % 10 ==\
    \ 1 {\n            count += 1;\n        }\n        n /= 10;\n    }\n    count\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmp2duw5lz9.rs:9:9\n\
    \  |\n3 | fn starts_one_ends(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n9 |         n /= 10;\n \
    \ |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    while n > 0 {\n        if n % 10 ==\
    \ 1 {\n            count += 1;\n        }\n        n /= 10;\n    }\n    count\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmpru93_hp_.rs:9:9\n\
    \  |\n3 | fn starts_one_ends(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n9 |         n /= 10;\n \
    \ |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match n {\n        0 => 0,\n        _ => 1,\n    }\n}\n\nfn\
    \ main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `18`', /tmp/tmpaxgb0krl.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    while n != 0 {\n        if n % 10 ==\
    \ 1 {\n            count += 1;\n        }\n        n /= 10;\n    }\n    count\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmp8tu5qiiz.rs:9:9\n\
    \  |\n3 | fn starts_one_ends(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n9 |         n /= 10;\n \
    \ |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n < 10 {\n        return n;\n    }\n\n    let mut count =\
    \ 0;\n    let mut i = 1;\n    while i <= n {\n        if i % 10 == 1 {\n     \
    \       count += 1;\n        }\n        i += 1;\n    }\n    count\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmpfzcp6aa8.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n < 1 {\n        return 0;\n    }\n    if n == 1 {\n    \
    \    return 1;\n    }\n    if n % 2 == 0 {\n        return starts_one_ends(n /\
    \ 2) + 1;\n    }\n    return starts_one_ends(n / 2) + 1;\n}\n\nfn main() {\n \
    \   let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmp5f2nj433.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n > 0);\n    debug_assert!(n % 10 == 1);\n\n \
    \   let mut count = 0;\n    let mut i = 1;\n    while i <= n {\n        if i %\
    \ 10 == 1 {\n            count += 1;\n        }\n        i += 1;\n    }\n    count\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: n % 10 == 1', /tmp/tmp7usr9cb4.rs:5:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match n {\n        0 => 0,\n        1 => 1,\n        _ => n,\n\
    \    }\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmphn3d5zzy.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n > 0);\n    let mut count = 0;\n    while n >\
    \ 0 {\n        count += n / 10;\n        n /= 10;\n    }\n    count\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmpgcd9uj7i.rs:8:9\n\
    \  |\n3 | fn starts_one_ends(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n8 |         n /= 10;\n \
    \ |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n < 0 {\n        panic!(\"starts_one_ends called with negative\
    \ n\");\n    }\n    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n \
    \       return 1;\n    }\n    if n == 2 {\n        return 2;\n    }\n    if n\
    \ == 3 {\n        return 3;\n    }\n    if n == 4 {\n        return 4;\n    }\n\
    \    if n == 5 {\n        return 5;\n    }\n    if n == 6 {\n        return 6;\n\
    \    }\n    if n == 7 {\n        return 7;\n    }\n    if n == 8 {\n        return\
    \ 8;\n    }\n    if n == 9 {\n        return 9;\n    }\n    if n == 10 {\n   \
    \     return 10;\n    }\n    if n == 11 {\n        return 11;\n    }\n    if n\
    \ == 12 {\n        return 12;\n    }\n    if n == 13 {\n        return 13;\n \
    \   }\n    if n == 14 {\n        return 14;\n    }\n    if n == 15 {\n       \
    \ return 15;\n    }\n    if n == 16 {\n        return 16;\n    }\n    if n ==\
    \ 17 {\n        return 17;\n    }\n    if n == 18 {\n        return 18;\n    }\n\
    \    if n == 19 {\n        return 19;\n    }\n    if n == 20 {\n        return\
    \ 20;\n    }\n    if n == 21 {\n        return 21;\n    }\n    if n == 22 {\n\
    \        return 22;\n    }\n    if n == 23 {\n        return 23;\n    }\n    if\
    \ n == 24 {\n        return 24;\n    }\n    if n == 25 {\n        return 25;\n\
    \    }\n    if n == 26 {\n        return 26;\n    }\n    if n == 27 {\n      \
    \  return 27;\n    }\n    if n == 28 {\n        return 28;\n    }\n    if n ==\
    \ 29 {\n        return 29;\n    }\n    if n == 30 {\n        return 30;\n    }\n\
    \    if n == 31 {\n        return 31;\n    }\n    if n == 32 {\n        return\
    \ 32;\n    }\n    if n == 33 {\n        return 33;\n    }\n    if n == 34 {\n\
    \        return 34;\n    }\n    if n == 35 {\n        return 35;\n    }\n    if\
    \ n == 36 {\n        return 36;\n    }\n    if n == 37 {\n        return 37;\n\
    \    }\n    if n == 38 {\n        return 38;\n    }\n    if n == 39 {\n      \
    \  return 39;\n    }\n    if n == 40 {\n        return 40;\n    }\n    if n ==\
    \ 41 {\n        return 41;\n    }\n    if n == 42 {\n        return 42;\n    }\n\
    \    if n == 43 {\n        return 43;\n    }\n    if n == 44 {\n        return\
    \ 44;\n    }\n    if n == 45 {\n        return 45;\n    }\n    if n == 46 {\n\
    \        return 46;\n\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmpa3ec7j6y.rs:157:3\n\
    \    |\n3   | fn starts_one_ends(n: isize) -> isize {\n    |                 \
    \                      - unclosed delimiter\n...\n145 |     if n == 46 {\n   \
    \ |                - this delimiter might not be properly closed...\n...\n148\
    \ | }\n    | - ...as it matches this but it has different indentation\n...\n157\
    \ | }\n    |   ^\n\nerror[E0308]: mismatched types\n --> /tmp/tmpa3ec7j6y.rs:3:33\n\
    \  |\n3 | fn starts_one_ends(n: isize) -> isize {\n  |    ---------------    \
    \          ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns\
    \ `()` as its body has no tail or `return` expression\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match n {\n        0 => 0,\n        _ => 1 + starts_one_ends(n\
    \ - 1),\n    }\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmpe1_nmhjc.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match n {\n        0 => 0,\n        _ => 1 + starts_one_ends(n\
    \ - 1),\n    }\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmpxa8pomnd.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n >= 0);\n    let mut count = 0;\n    while n\
    \ != 0 {\n        if n % 10 == 1 {\n            count += 1;\n        }\n     \
    \   n /= 10;\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpuvzk8rzh.rs:10:9\n\
    \   |\n3  | fn starts_one_ends(n: isize) -> isize {\n   |                    -\
    \ help: consider making this binding mutable: `mut n`\n...\n10 |         n /=\
    \ 10;\n   |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n > 0);\n    debug_assert!(n % 10 == 0);\n   \
    \ let mut count = 0;\n    while n > 0 {\n        count += n / 10;\n        n /=\
    \ 10;\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmpr08axi0f.rs:9:9\n\
    \  |\n3 | fn starts_one_ends(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n9 |         n /= 10;\n \
    \ |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match n {\n        0 => 0,\n        1 => 1,\n        _ => n,\n\
    \    }\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmphmdhsg_r.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n > 0);\n    let mut count = 0;\n    while n !=\
    \ 1 {\n        n /= 10;\n        count += 1;\n    }\n    count\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmpr6m12vpb.rs:7:9\n\
    \  |\n3 | fn starts_one_ends(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n7 |         n /= 10;\n \
    \ |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n < 1 {\n        return 0;\n    }\n    let mut count = 0;\n\
    \    while n > 0 {\n        if n % 10 == 1 {\n            count += 1;\n      \
    \  }\n        n /= 10;\n    }\n    count\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpdo6jgsju.rs:12:9\n\
    \   |\n3  | fn starts_one_ends(n: isize) -> isize {\n   |                    -\
    \ help: consider making this binding mutable: `mut n`\n...\n12 |         n /=\
    \ 10;\n   |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n >= 0);\n    let mut count = 0;\n    while n\
    \ > 0 {\n        if n % 10 == 1 {\n            count += 1;\n        }\n      \
    \  n /= 10;\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpaxbuf51j.rs:10:9\n\
    \   |\n3  | fn starts_one_ends(n: isize) -> isize {\n   |                    -\
    \ help: consider making this binding mutable: `mut n`\n...\n10 |         n /=\
    \ 10;\n   |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match n {\n        0 => 0,\n        _ => 1 + starts_one_ends(n\
    \ - 1),\n    }\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmpg7fm7lg3.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match n {\n        0 => 0,\n        _ => 1 + starts_one_ends(n\
    \ - 1),\n    }\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmpmu8th76c.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match n {\n        1 => 1,\n        _ => n,\n    }\n}\n\nfn\
    \ main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmph9kfwz0m.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match n {\n        0 => 0,\n        _ => 1 + starts_one_ends(n\
    \ - 1),\n    }\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmpyuz27iph.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n >= 0);\n    let mut count = 0;\n    while n\
    \ != 0 {\n        if n % 10 == 1 {\n            count += 1;\n        }\n     \
    \   n /= 10;\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmp_06jciy1.rs:10:9\n\
    \   |\n3  | fn starts_one_ends(n: isize) -> isize {\n   |                    -\
    \ help: consider making this binding mutable: `mut n`\n...\n10 |         n /=\
    \ 10;\n   |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n < 1 {\n        return 0;\n    }\n    if n == 1 {\n    \
    \    return 1;\n    }\n    if n == 2 {\n        return 2;\n    }\n    if n ==\
    \ 3 {\n        return 3;\n    }\n    if n == 4 {\n        return 4;\n    }\n \
    \   if n == 5 {\n        return 5;\n    }\n    if n == 6 {\n        return 6;\n\
    \    }\n    if n == 7 {\n        return 7;\n    }\n    if n == 8 {\n        return\
    \ 8;\n    }\n    if n == 9 {\n        return 9;\n    }\n    if n == 10 {\n   \
    \     return 10;\n    }\n    if n == 11 {\n        return 11;\n    }\n    if n\
    \ == 12 {\n        return 12;\n    }\n    if n == 13 {\n        return 13;\n \
    \   }\n    if n == 14 {\n        return 14;\n    }\n    if n == 15 {\n       \
    \ return 15;\n    }\n    if n == 16 {\n        return 16;\n    }\n    if n ==\
    \ 17 {\n        return 17;\n    }\n    if n == 18 {\n        return 18;\n    }\n\
    \    if n == 19 {\n        return 19;\n    }\n    if n == 20 {\n        return\
    \ 20;\n    }\n    if n == 21 {\n        return 21;\n    }\n    if n == 22 {\n\
    \        return 22;\n    }\n    if n == 23 {\n        return 23;\n    }\n    if\
    \ n == 24 {\n        return 24;\n    }\n    if n == 25 {\n        return 25;\n\
    \    }\n    if n == 26 {\n        return 26;\n    }\n    if n == 27 {\n      \
    \  return 27;\n    }\n    if n == 28 {\n        return 28;\n    }\n    if n ==\
    \ 29 {\n        return 29;\n    }\n    if n == 30 {\n        return 30;\n    }\n\
    \    if n == 31 {\n        return 31;\n    }\n    if n == 32 {\n        return\
    \ 32;\n    }\n    if n == 33 {\n        return 33;\n    }\n    if n == 34 {\n\
    \        return 34;\n    }\n    if n == 35 {\n        return 35;\n    }\n    if\
    \ n == 36 {\n        return 36;\n    }\n    if n == 37 {\n        return 37;\n\
    \    }\n    if n == 38 {\n        return 38;\n    }\n    if n == 39 {\n      \
    \  return 39;\n    }\n    if n == 40 {\n        return 40;\n    }\n    if n ==\
    \ 41 {\n        return 41;\n    }\n    if n == 42 {\n        return 42;\n    }\n\
    \    if n == 43 {\n        return 43;\n    }\n    if n == 44 {\n        return\
    \ 44;\n    }\n    if n == 45 {\n        return 45;\n    }\n    if n == 46 {\n\
    \        return 46;\n    }\n    if n == 47 {\n        return 47;\n    }\n    if\
    \ n == 48 {\n        return 48;\n\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmp4qpggoum.rs:160:3\n\
    \    |\n3   | fn starts_one_ends(n: isize) -> isize {\n    |                 \
    \                      - unclosed delimiter\n...\n148 |     if n == 48 {\n   \
    \ |                - this delimiter might not be properly closed...\n...\n151\
    \ | }\n    | - ...as it matches this but it has different indentation\n...\n160\
    \ | }\n    |   ^\n\nerror[E0308]: mismatched types\n --> /tmp/tmp4qpggoum.rs:3:33\n\
    \  |\n3 | fn starts_one_ends(n: isize) -> isize {\n  |    ---------------    \
    \          ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns\
    \ `()` as its body has no tail or `return` expression\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n >= 0);\n    debug_assert!(n <= 9);\n    debug_assert!(n\
    \ % 10 == 1);\n    debug_assert!(n / 10 >= 1);\n    debug_assert!(n / 10 <= 9);\n\
    \    debug_assert!(n % 10 == 0);\n    debug_assert!(n / 10 >= 1);\n    debug_assert!(n\
    \ / 10 <= 9);\n    debug_assert!(n % 10 == 0);\n    debug_assert!(n / 10 >= 1);\n\
    \    debug_assert!(n / 10 <= 9);\n    debug_assert!(n % 10 == 0);\n    debug_assert!(n\
    \ / 10 >= 1);\n    debug_assert!(n / 10 <= 9);\n    debug_assert!(n % 10 == 0);\n\
    \    debug_assert!(n / 10 >= 1);\n    debug_assert!(n / 10 <= 9);\n    debug_assert!(n\
    \ % 10 == 0);\n    debug_assert!(n / 10 >= 1);\n    debug_assert!(n / 10 <= 9);\n\
    \    debug_assert!(n % 10 == 0);\n    debug_assert!(n / 10 >= 1);\n    debug_assert!(n\
    \ / 10 <= 9);\n    debug_assert!(n % 10 == 0);\n    debug_assert!(n / 10 >= 1);\n\
    \    debug_assert!(n / 10 <= 9);\n    debug_assert!(n % 10 == 0);\n    debug_assert!(n\
    \ / 10 >= 1);\n    debug_assert!(n / 10 <= 9);\n    debug_assert!(n % 10 == 0);\n\
    \    debug_assert!(n / 10 >= 1);\n    debug_assert!(n / 10 <= 9);\n    debug_assert!(n\
    \ % 10 == 0);\n    debug_assert!(n / 10 >= 1);\n    debug_assert!(n / 10 <= 9);\n\
    \    debug_assert!(n % 10 == 0);\n    debug_assert!(n / 10 >= 1);\n    debug_assert!(n\
    \ / 10 <= 9);\n    debug_assert!(n % 10 == 0);\n    debug_assert!(n / 10 >= 1);\n\
    \    debug_assert!(n / 10 <= 9);\n    debug_assert!(n % 10 == 0);\n    debug_assert!(n\
    \ / 10 >= 1);\n    debug_assert!(n / 10 <= 9);\n    debug_assert!(n % 10 == 0);\n\
    \    debug_assert!(n / 10 >= 1);\n    debug_assert!(n / 10 <= 9);\n    debug_assert!(n\
    \ % 10 == 0);\n    debug_assert!(n / 10 >= 1);\n    debug_assert!(n / 10 <= 9);\n\
    \    debug_assert!(n % 10 == 0);\n    debug_assert!(n / 10 >= 1);\n    debug_assert!(n\
    \ / 10 <= 9);\n    debug_assert\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "error[E0423]: expected value, found macro `debug_assert`\n  --> /tmp/tmpdm91gqw_.rs:57:5\n\
    \   |\n57 |     debug_assert\n   |     ^^^^^^^^^^^^ not a value\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0423`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n < 0 {\n        panic!(\"starts_one_ends called with negative\
    \ n: {}\", n);\n    }\n    let mut count = 0;\n    while n != 0 {\n        n /=\
    \ 10;\n        count += 1;\n    }\n    count\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmp3fbynebm.rs:9:9\n\
    \  |\n3 | fn starts_one_ends(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n9 |         n /= 10;\n \
    \ |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match n {\n        1 => 1,\n        _ => n,\n    }\n}\n\nfn\
    \ main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmplrwja3yd.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match n {\n        0 => 0,\n        _ => 1,\n    }\n}\n\nfn\
    \ main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `18`', /tmp/tmp0f15qf16.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match n {\n        0 => 0,\n        _ => 1,\n    }\n}\n\nfn\
    \ main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `18`', /tmp/tmpgfh0po7n.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n >= 0);\n    debug_assert!(n <= 10);\n    let\
    \ mut count = 0;\n    for d in 1..=n {\n        if d == 1 {\n            count\
    \ += 1;\n        } else if d == n {\n            count += 2;\n        } else {\n\
    \            count += 3;\n        }\n    }\n    count\n}\n\nfn main() {\n    let\
    \ candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `18`', /tmp/tmphyfgssmh.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n > 0);\n    let mut count = 0;\n    while n >\
    \ 0 {\n        if n % 10 == 1 {\n            count += 1;\n        }\n        n\
    \ /= 10;\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmp8ervqib4.rs:10:9\n\
    \   |\n3  | fn starts_one_ends(n: isize) -> isize {\n   |                    -\
    \ help: consider making this binding mutable: `mut n`\n...\n10 |         n /=\
    \ 10;\n   |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n > 0);\n    let mut count = 0;\n    while n !=\
    \ 0 {\n        if n % 10 == 1 {\n            count += 1;\n        }\n        n\
    \ /= 10;\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmps8zljtkk.rs:10:9\n\
    \   |\n3  | fn starts_one_ends(n: isize) -> isize {\n   |                    -\
    \ help: consider making this binding mutable: `mut n`\n...\n10 |         n /=\
    \ 10;\n   |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n > 0);\n    let mut count = 0;\n    while n !=\
    \ 1 {\n        n /= 10;\n        count += 1;\n    }\n    count\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmp5twkn_4j.rs:7:9\n\
    \  |\n3 | fn starts_one_ends(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n7 |         n /= 10;\n \
    \ |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n < 1 {\n        return 0;\n    }\n    let mut count = 0;\n\
    \    while n > 1 {\n        if n % 10 == 1 {\n            count += 1;\n      \
    \  }\n        n /= 10;\n    }\n    count\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpwelu9mya.rs:12:9\n\
    \   |\n3  | fn starts_one_ends(n: isize) -> isize {\n   |                    -\
    \ help: consider making this binding mutable: `mut n`\n...\n12 |         n /=\
    \ 10;\n   |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n > 0);\n    debug_assert!(n % 10 == 0);\n   \
    \ let mut count = 0;\n    while n > 0 {\n        if n % 10 == 1 {\n          \
    \  count += 1;\n        }\n        n /= 10;\n    }\n    count\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpx8tp40dh.rs:11:9\n\
    \   |\n3  | fn starts_one_ends(n: isize) -> isize {\n   |                    -\
    \ help: consider making this binding mutable: `mut n`\n...\n11 |         n /=\
    \ 10;\n   |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    while n > 0 {\n        if n % 10 ==\
    \ 1 {\n            count += 1;\n        }\n        n /= 10;\n    }\n    count\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmpb7npu0ym.rs:9:9\n\
    \  |\n3 | fn starts_one_ends(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n9 |         n /= 10;\n \
    \ |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n > 0);\n    debug_assert!(n % 10 == 1);\n   \
    \ let mut n = 0;\n    while n > 0 {\n        n /= 10;\n        n += n % 2 == 0;\n\
    \    }\n    n\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0277]: cannot add-assign `bool` to `{integer}`\n --> /tmp/tmpjz1n420w.rs:9:11\n\
    \  |\n9 |         n += n % 2 == 0;\n  |           ^^ no implementation for `{integer}\
    \ += bool`\n  |\n  = help: the trait `AddAssign<bool>` is not implemented for\
    \ `{integer}`\n  = help: the following other types implement trait `AddAssign<Rhs>`:\n\
    \            <f32 as AddAssign<&f32>>\n            <f32 as AddAssign>\n      \
    \      <f64 as AddAssign<&f64>>\n            <f64 as AddAssign>\n            <i128\
    \ as AddAssign<&i128>>\n            <i128 as AddAssign>\n            <i16 as AddAssign<&i16>>\n\
    \            <i16 as AddAssign>\n          and 20 others\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match n {\n        0 => 0,\n        1 => 1,\n        _ => n,\n\
    \    }\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmpkcezngiu.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    n / 10 + 1\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `18`', /tmp/tmpjnua3snf.rs:10:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match n {\n        0 => 0,\n        _ => 1,\n    }\n}\n\nfn\
    \ main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `18`', /tmp/tmpegb4yzn8.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    n / 10 + 1\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `18`', /tmp/tmpajmvis_n.rs:10:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match n {\n        0 => 0,\n        _ => 1 + starts_one_ends(n\
    \ - 1),\n    }\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmphlppyvyq.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match n {\n        0 => 0,\n        _ => if n % 10 == 1 {\n\
    \            1\n        } else {\n            starts_one_ends(n / 10)\n      \
    \  }\n    }\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `18`', /tmp/tmp9fhjrg6l.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n < 0 {\n        panic!(\"starts_one_ends called with negative\
    \ n\");\n    }\n    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n \
    \       return 1;\n    }\n    let mut count = 0;\n    let mut i = 1;\n    while\
    \ i <= n {\n        if i / i == 1 {\n            count += 1;\n        }\n    \
    \    i += 1;\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmpegkaa4uq.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match n {\n        0 => 0,\n        _ => 1 + starts_one_ends(n\
    \ - 1),\n    }\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmpwm3jpdp4.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n >= 0);\n    let mut n1 = n;\n    while n1 >\
    \ 0 {\n        if n1 % 10 == 1 {\n            n1 /= 10;\n        } else {\n  \
    \          return n1;\n        }\n    }\n    n1\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmptv6oyb4u.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    while n > 0 {\n        if n % 10 ==\
    \ 1 {\n            count += 1;\n        }\n        n /= 10;\n    }\n    count\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmpqg90jkuz.rs:9:9\n\
    \  |\n3 | fn starts_one_ends(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n9 |         n /= 10;\n \
    \ |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    while n != 0 {\n        if n % 10 ==\
    \ 1 {\n            count += 1;\n        }\n        n /= 10;\n    }\n    count\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmpmtm9rs2e.rs:9:9\n\
    \  |\n3 | fn starts_one_ends(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n9 |         n /= 10;\n \
    \ |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n >= 0);\n    let mut count = 0;\n    while n\
    \ != 1 {\n        n /= 10;\n        count += 1;\n    }\n    count\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmpzv_jw45c.rs:7:9\n\
    \  |\n3 | fn starts_one_ends(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n7 |         n /= 10;\n \
    \ |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n > 0);\n    let mut count = 0;\n    while n !=\
    \ 1 {\n        n /= 10;\n        count += 1;\n    }\n    count\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmpv9awk56j.rs:7:9\n\
    \  |\n3 | fn starts_one_ends(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n7 |         n /= 10;\n \
    \ |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match n {\n        0 => 0,\n        _ => 1,\n    }\n}\n\nfn\
    \ main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `18`', /tmp/tmpyy4b2zty.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n < 0 {\n        0\n    } else {\n        let mut n = 1u64;\n\
    \        let mut start = 0;\n        while n <= n {\n            if n % 10 ==\
    \ 1 {\n                start += 1;\n            }\n            n += 1;\n     \
    \   }\n        start\n    }\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match n {\n        0 => 0,\n        _ => 1 + starts_one_ends(n\
    \ - 1),\n    }\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmpf30tlacb.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n < 0 {\n        panic!(\"starts_one_ends called with negative\
    \ n\");\n    }\n    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n \
    \       return 1;\n    }\n    if n % 2 == 0 {\n        return starts_one_ends(n\
    \ - 1) + 1;\n    }\n    return starts_one_ends(n / 2) + 1;\n}\n\nfn main() {\n\
    \    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmp6n2ccii8.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n < 0 {\n        panic!(\"starts_one_ends called with negative\
    \ n\");\n    }\n    if n == 0 {\n        return 0;\n    }\n    let mut count =\
    \ 0;\n    let mut i = 1;\n    while i <= n {\n        if i % 10 == 1 {\n     \
    \       i += 1;\n            count += 1;\n        }\n        i += 1;\n    }\n\
    \    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `18`', /tmp/tmp5yurt5b2.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match n {\n        0 => 0,\n        1 => 1,\n        _ => n,\n\
    \    }\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmp7wknkkhw.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match n {\n        0 => 0,\n        _ => 1,\n    }\n}\n\nfn\
    \ main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `18`', /tmp/tmpzypo4087.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match n {\n        0 => 0,\n        _ => 1 + starts_one_ends(n\
    \ - 1),\n    }\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmpguoyqe3y.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match n {\n        0 => 0,\n        _ => 1 + starts_one_ends(n\
    \ - 1),\n    }\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmpo4nznd_k.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match n {\n        0 => 0,\n        _ => 1 + starts_one_ends(n\
    \ - 1),\n    }\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmpp412_svv.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match n {\n        0 => 0,\n        _ => 1,\n    }\n}\n\nfn\
    \ main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `18`', /tmp/tmpfmyz0l4b.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n >= 0);\n    let mut count = 0;\n    while n\
    \ != 0 {\n        count += n / 10;\n        n %= 10;\n    }\n    count\n}\n\n\
    fn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmpcat3agop.rs:8:9\n\
    \  |\n3 | fn starts_one_ends(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n8 |         n %= 10;\n \
    \ |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match n {\n        1 => 1,\n        _ => n * (n - 1) / 2,\n\
    \    }\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `18`', /tmp/tmpsqs87x9a.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n < 0 {\n        0\n    } else {\n        1 + starts_one_ends(n\
    \ - 1)\n    }\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpg29xg87f.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n >= 0);\n    let mut count = 0;\n    while n\
    \ != 0 {\n        if n % 10 == 1 {\n            count += 1;\n        }\n     \
    \   n /= 10;\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpkq30v20_.rs:10:9\n\
    \   |\n3  | fn starts_one_ends(n: isize) -> isize {\n   |                    -\
    \ help: consider making this binding mutable: `mut n`\n...\n10 |         n /=\
    \ 10;\n   |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n >= 0);\n    let mut count = 0;\n    while n\
    \ != 0 {\n        if n % 10 == 1 {\n            count += 1;\n        }\n     \
    \   n /= 10;\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpdw8ayaua.rs:10:9\n\
    \   |\n3  | fn starts_one_ends(n: isize) -> isize {\n   |                    -\
    \ help: consider making this binding mutable: `mut n`\n...\n10 |         n /=\
    \ 10;\n   |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match n {\n        1 => 1,\n        _ => n,\n    }\n}\n\nfn\
    \ main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmpeqlryjiy.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match n {\n        0 => 0,\n        _ => 1,\n    }\n}\n\nfn\
    \ main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `18`', /tmp/tmp42ogfwtj.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    while n > 0 {\n        if n % 10 ==\
    \ 1 {\n            count += 1;\n        }\n        n /= 10;\n    }\n    count\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmprieps4uy.rs:9:9\n\
    \  |\n3 | fn starts_one_ends(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n9 |         n /= 10;\n \
    \ |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 0 {\n        return 0;\n    }\n\n    let mut count =\
    \ 0;\n    let mut i = 1;\n    while i <= n {\n        if i / 10 == 1 {\n     \
    \       i += 1;\n        } else {\n            i += 2;\n        }\n        count\
    \ += 1;\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `18`', /tmp/tmp38lkx63j.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n > 0);\n    let mut count = 0;\n    while n !=\
    \ 1 {\n        if n % 10 == 1 {\n            count += 1;\n        }\n        n\
    \ /= 10;\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmp4zgjy9ik.rs:10:9\n\
    \   |\n3  | fn starts_one_ends(n: isize) -> isize {\n   |                    -\
    \ help: consider making this binding mutable: `mut n`\n...\n10 |         n /=\
    \ 10;\n   |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match n {\n        0 => 0,\n        _ => 1 + starts_one_ends(n\
    \ - 1),\n    }\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmpvxe38mya.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match n {\n        0 => 0,\n        _ => 1 + starts_one_ends(n\
    \ - 1),\n    }\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmpviomebmc.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n < 0 {\n        panic!(\"starts_one_ends called with negative\
    \ n\");\n    }\n    if n == 0 {\n        return 0;\n    }\n    let mut count =\
    \ 0;\n    while n != 0 {\n        n /= 10;\n        count += 1;\n    }\n    count\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpr9005wdz.rs:12:9\n\
    \   |\n3  | fn starts_one_ends(n: isize) -> isize {\n   |                    -\
    \ help: consider making this binding mutable: `mut n`\n...\n12 |         n /=\
    \ 10;\n   |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n >= 0);\n    debug_assert!(n <= 9);\n    let\
    \ mut count = 0;\n    while n != 0 {\n        n /= 10;\n        count += 1;\n\
    \    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n  \
    \  assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmp_73ruhbz.rs:8:9\n\
    \  |\n3 | fn starts_one_ends(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n8 |         n /= 10;\n \
    \ |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match n {\n        0 => 0,\n        _ => n,\n    }\n}\n\nfn\
    \ main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmp4ulekbbp.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match n {\n        0 => 0,\n        _ => n,\n    }\n}\n\nfn\
    \ main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmpo71xyqhz.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match n {\n        0 => 0,\n        _ => if n % 10 == 1 {\n\
    \            1\n        } else {\n            starts_one_ends(n / 10) + 1\n  \
    \      }\n    }\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `18`', /tmp/tmpxsk1uxe5.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match n {\n        0 => 0,\n        _ => n,\n    }\n}\n\nfn\
    \ main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmp0q9pizrr.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match n {\n        0 => 0,\n        _ => 1 + starts_one_ends(n\
    \ - 1),\n    }\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmpuw_qszqt.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n < 0 {\n        panic!(\"starts_one_ends called with negative\
    \ n\");\n    }\n    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n \
    \       return 1;\n    }\n    if n % 2 == 0 {\n        return starts_one_ends(n\
    \ / 2) + 1;\n    }\n    return starts_one_ends(n / 2) + starts_one_ends(n / 2);\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmpbynaey8y.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match n {\n        0 => 0,\n        _ => n,\n    }\n}\n\nfn\
    \ main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmp_0esc899.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n > 0);\n    let mut count = 0;\n    while n >\
    \ 0 {\n        if n % 10 == 1 {\n            count += 1;\n        }\n        n\
    \ /= 10;\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpocm9c68r.rs:10:9\n\
    \   |\n3  | fn starts_one_ends(n: isize) -> isize {\n   |                    -\
    \ help: consider making this binding mutable: `mut n`\n...\n10 |         n /=\
    \ 10;\n   |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n > 0);\n    debug_assert!(n % 10 == 1);\n   \
    \ debug_assert!(n / 10 > 0);\n\n    let mut count = 0;\n    for i in 1..n / 10\
    \ {\n        if i % 10 == 1 {\n            count += 1;\n        }\n    }\n   \
    \ count += n / 10 - 1;\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: n / 10 > 0', /tmp/tmpo4gh7b7j.rs:6:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    n.checked_mul(10).unwrap().checked_sub(1isize).unwrap()\n}\n\
    \nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `1`', /tmp/tmpwrw8o4il.rs:9:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    while n > 0 {\n        if n % 10 ==\
    \ 1 {\n            count += 1;\n        }\n        n /= 10;\n    }\n    count\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmpjs8588t1.rs:9:9\n\
    \  |\n3 | fn starts_one_ends(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n9 |         n /= 10;\n \
    \ |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n > 0);\n    let mut count = 0;\n    while n >\
    \ 0 {\n        if n % 10 == 1 {\n            count += 1;\n        }\n        n\
    \ /= 10;\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpoph0c141.rs:10:9\n\
    \   |\n3  | fn starts_one_ends(n: isize) -> isize {\n   |                    -\
    \ help: consider making this binding mutable: `mut n`\n...\n10 |         n /=\
    \ 10;\n   |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    while n > 0 {\n        if n % 10 ==\
    \ 1 {\n            count += 1;\n        }\n        n /= 10;\n    }\n    count\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmpkanal2_d.rs:9:9\n\
    \  |\n3 | fn starts_one_ends(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n9 |         n /= 10;\n \
    \ |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n > 0);\n    let mut count = 0;\n    while n !=\
    \ 0 {\n        if n % 10 == 1 {\n            count += 1;\n        }\n        n\
    \ /= 10;\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpyyx7u1mv.rs:10:9\n\
    \   |\n3  | fn starts_one_ends(n: isize) -> isize {\n   |                    -\
    \ help: consider making this binding mutable: `mut n`\n...\n10 |         n /=\
    \ 10;\n   |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    n.checked_mul(10).unwrap().checked_add((n - 1).checked_mul(10).unwrap()).unwrap()\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmpeu2rz2b5.rs:9:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match n {\n        0 => 0,\n        _ => 1 + starts_one_ends(n\
    \ - 1),\n    }\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmp4stpa0ez.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    while n != 1 {\n        if n % 10 ==\
    \ 1 {\n            count += 1;\n        }\n        n /= 10;\n    }\n    count\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmp6nafvlef.rs:9:9\n\
    \  |\n3 | fn starts_one_ends(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n9 |         n /= 10;\n \
    \ |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n >= 0);\n    let mut count = 0;\n    while n\
    \ != 0 {\n        if n % 10 == 1 {\n            count += 1;\n        }\n     \
    \   n /= 10;\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmptrqea5bt.rs:10:9\n\
    \   |\n3  | fn starts_one_ends(n: isize) -> isize {\n   |                    -\
    \ help: consider making this binding mutable: `mut n`\n...\n10 |         n /=\
    \ 10;\n   |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match n {\n        0 => 0,\n        _ => 1 + starts_one_ends(n\
    \ - 1),\n    }\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmpvq435cox.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n < 0 {\n        0\n    } else {\n        if n % 10 == 1\
    \ {\n            1\n        } else {\n            1 + starts_one_ends(n / 10)\n\
    \        }\n    }\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n  \
    \  assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n < 0 {\n        panic!(\"starts_one_ends: n must be positive\"\
    );\n    }\n\n    let mut count = 0;\n    let mut i = 1;\n    while i <= n {\n\
    \        if i % 10 == 1 {\n            count += 1;\n        }\n        i += 1;\n\
    \    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n  \
    \  assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `18`', /tmp/tmp560ohgpz.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match n {\n        0 => 0,\n        1 => 1,\n        _ => n,\n\
    \    }\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmpc0nycfjj.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n >= 0);\n    let mut n1 = n;\n    let mut n2\
    \ = n;\n    while n2 > 0 {\n        if n2 % 10 == 1 {\n            n1 += 1;\n\
    \        }\n        n2 /= 10;\n    }\n    n1\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpqk8amz_b.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    while n != 0 {\n        if n % 10 ==\
    \ 1 {\n            count += 1;\n        }\n        n /= 10;\n    }\n    count\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmpcr8hoc_i.rs:9:9\n\
    \  |\n3 | fn starts_one_ends(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n9 |         n /= 10;\n \
    \ |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    while n > 0 {\n        count += n /\
    \ 10;\n        n /= 10;\n    }\n    count\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmpymkmhrr8.rs:7:9\n\
    \  |\n3 | fn starts_one_ends(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n7 |         n /= 10;\n \
    \ |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n < 1 {\n        return 0;\n    }\n\n    let mut count =\
    \ 0;\n    let mut i = 1;\n    while i <= n {\n        if i / 10 == 1 {\n     \
    \       i += 1;\n        } else {\n            i += 2;\n        }\n        count\
    \ += 1;\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `18`', /tmp/tmp3a_ryi6n.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n < 0 {\n        panic!(\"starts_one_ends called with negative\
    \ n\");\n    }\n    if n == 0 {\n        return 0;\n    }\n    let mut count =\
    \ 0;\n    let mut last_digit = n % 10;\n    while n > 0 {\n        if last_digit\
    \ == 1 {\n            count += 1;\n        }\n        last_digit = n % 10;\n \
    \       n /= 10;\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmphfc9bi47.rs:17:9\n\
    \   |\n3  | fn starts_one_ends(n: isize) -> isize {\n   |                    -\
    \ help: consider making this binding mutable: `mut n`\n...\n17 |         n /=\
    \ 10;\n   |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match n {\n        0 => 0,\n        _ => n,\n    }\n}\n\nfn\
    \ main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmpsf9u8_ld.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match n {\n        0 => 0,\n        _ => 1,\n    }\n}\n\nfn\
    \ main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `18`', /tmp/tmpwlbzje9d.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match n {\n        0 => 0,\n        _ => 1 + starts_one_ends(n\
    \ - 1),\n    }\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmpqkc_lmau.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n >= 0);\n    let mut count = 0;\n    while n\
    \ > 0 {\n        if n % 10 == 1 {\n            count += 1;\n        }\n      \
    \  n /= 10;\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpfrf5s4r8.rs:10:9\n\
    \   |\n3  | fn starts_one_ends(n: isize) -> isize {\n   |                    -\
    \ help: consider making this binding mutable: `mut n`\n...\n10 |         n /=\
    \ 10;\n   |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n > 0);\n    let mut count = 0;\n    while n >\
    \ 0 {\n        if n % 10 == 1 {\n            count += 1;\n        }\n        n\
    \ /= 10;\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpjk6mez_u.rs:10:9\n\
    \   |\n3  | fn starts_one_ends(n: isize) -> isize {\n   |                    -\
    \ help: consider making this binding mutable: `mut n`\n...\n10 |         n /=\
    \ 10;\n   |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n   \
    \     return 1;\n    }\n    if n % 2 == 0 {\n        return starts_one_ends(n\
    \ / 2) + 1;\n    }\n    starts_one_ends(n / 2)\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmpq96y8vbv.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n >= 0);\n    let mut count = 0;\n    while n\
    \ != 0 {\n        if n % 10 == 1 {\n            count += 1;\n        }\n     \
    \   n /= 10;\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmptj1sgnqg.rs:10:9\n\
    \   |\n3  | fn starts_one_ends(n: isize) -> isize {\n   |                    -\
    \ help: consider making this binding mutable: `mut n`\n...\n10 |         n /=\
    \ 10;\n   |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    while n > 0 {\n        if n % 10 ==\
    \ 1 {\n            count += 1;\n        }\n        n /= 10;\n    }\n    count\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmpses70fez.rs:9:9\n\
    \  |\n3 | fn starts_one_ends(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n9 |         n /= 10;\n \
    \ |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n >= 0);\n    debug_assert!(n <= 9);\n    debug_assert!(n\
    \ % 10 == 0);\n\n    let mut count = 0;\n    let mut i = 1;\n    while i <= n\
    \ {\n        if i % 10 == 1 {\n            count += 1;\n        }\n        i +=\
    \ 1;\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: n % 10 == 0', /tmp/tmp7t39ej_p.rs:6:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n >= 0);\n    let mut count = 0;\n    while n\
    \ != 0 {\n        if n % 10 == 1 {\n            count += 1;\n        }\n     \
    \   n /= 10;\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmptc9g2rsv.rs:10:9\n\
    \   |\n3  | fn starts_one_ends(n: isize) -> isize {\n   |                    -\
    \ help: consider making this binding mutable: `mut n`\n...\n10 |         n /=\
    \ 10;\n   |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n >= 0);\n    let mut count = 0;\n    while n\
    \ > 0 {\n        if n % 10 == 1 {\n            count += 1;\n        }\n      \
    \  n /= 10;\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmph20hgbgv.rs:10:9\n\
    \   |\n3  | fn starts_one_ends(n: isize) -> isize {\n   |                    -\
    \ help: consider making this binding mutable: `mut n`\n...\n10 |         n /=\
    \ 10;\n   |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n > 0);\n    let mut count = 0;\n    while n !=\
    \ 1 {\n        n /= 10;\n        count += 1;\n    }\n    count\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmpaeu6ttfr.rs:7:9\n\
    \  |\n3 | fn starts_one_ends(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n7 |         n /= 10;\n \
    \ |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match n {\n        0 => 0,\n        _ => 1,\n    }\n}\n\nfn\
    \ main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `18`', /tmp/tmpftn3mpzn.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n < 10 { return 1 }\n    if n < 100 { return 2 }\n    if\
    \ n < 1000 { return 3 }\n    if n < 10000 { return 4 }\n    if n < 100000 { return\
    \ 5 }\n    if n < 1000000 { return 6 }\n    if n < 10000000 { return 7 }\n   \
    \ if n < 100000000 { return 8 }\n    if n < 1000000000 { return 9 }\n    if n\
    \ < 10000000000 { return 10 }\n    if n < 100000000000 { return 11 }\n    if n\
    \ < 1000000000000 { return 12 }\n    if n < 10000000000000 { return 13 }\n   \
    \ if n < 100000000000000 { return 14 }\n    if n < 1000000000000000 { return 15\
    \ }\n    if n < 10000000000000000 { return 16 }\n    if n < 100000000000000000\
    \ { return 17 }\n    if n < 1000000000000000010 { return 18 }\n    if n < 10000000000000000100\
    \ { return 19 }\n    if n < 100000000000000001000 { return 20 }\n    if n < 1000000000000000010000\
    \ { return 21 }\n    if n < 10000000000000000100000 { return 22 }\n    if n <\
    \ 100000000000000001000000 { return 23 }\n    if n < 1000000000000000010000000\
    \ { return 24 }\n    if n < 10000000000000000100000010 { return 25 }\n    if n\
    \ < 100000000000000001000000100 { return 26 }\n    if n < 1000000000000000010000001000\
    \ { return 27 }\n    if n < 10000000000000000100000010000 { return 28 }\n    if\
    \ n < 100000000000000001000000100000 { return 29 }\n    if n < 1000000000000000010000001000000\
    \ { return 30 }\n    if n < 10000000000000000100000010000000 { return 31 }\n \
    \   if n < 10000000000000000100000000 { return 32 }\n    if n < 100000000000000001000000000\
    \ { return 33 }\n    if n < 1000000000000000010000000010 { return 34 }\n    if\
    \ n < 10000000000000000100000000100 { return 35 }\n    if n < 100000000000000001000000001000\
    \ { return 36 }\n    if n < 1000000000000000010000000010000 { return 37 }\n  \
    \  if n < 10000000000000000100000000100000 { return 38 }\n    if n < 100000000000000001000000001000000\
    \ { return 39 }\n    if n < 1000000000000000010000000010000000 { return 40 }\n\
    \    if n < 10000000000000000100000000100000010 { return 41 }\n    if n < 100000000000000001000000001000000100\
    \ { return 42 }\n    if n < 1000000000000000010000000010000001000 { return 43\
    \ }\n    if n < 10000000000000000100000000100000010000 { return 44 }\n    if n\
    \ < 100000000000000001000000001000000100000 { return 45 }\n    if n < 1000000000000000010000000010000001000000\
    \ { return 46 }\n    if n < 10000000000000000100000000100000010000000 { return\
    \ 47 }\n    if \n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error: integer literal is too large\n  --> /tmp/tmpcwlnfpdn.rs:49:12\n\
    \   |\n49 |     if n < 1000000000000000010000000010000001000000 { return 46 }\n\
    \   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: integer literal\
    \ is too large\n  --> /tmp/tmpcwlnfpdn.rs:50:12\n   |\n50 |     if n < 10000000000000000100000000100000010000000\
    \ { return 47 }\n   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\
    error: expected expression, found `}`\n  --> /tmp/tmpcwlnfpdn.rs:52:1\n   |\n\
    52 | }\n   | ^ expected expression\n\nerror: aborting due to 3 previous errors\n\
    \n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    while n != 0 {\n        if n % 10 ==\
    \ 1 {\n            count += 1;\n        }\n        n /= 10;\n    }\n    count\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmpr5k1kcjo.rs:9:9\n\
    \  |\n3 | fn starts_one_ends(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n9 |         n /= 10;\n \
    \ |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match n {\n        0 => 0,\n        _ => if n % 10 == 1 {\n\
    \            1\n        } else {\n            1 + starts_one_ends(n / 10)\n  \
    \      }\n    }\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `18`', /tmp/tmp_d3_31ff.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n >= 0);\n    let mut count = 0;\n    while n\
    \ != 0 {\n        if n % 10 == 1 {\n            count += 1;\n        }\n     \
    \   n /= 10;\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmp1yed77r0.rs:10:9\n\
    \   |\n3  | fn starts_one_ends(n: isize) -> isize {\n   |                    -\
    \ help: consider making this binding mutable: `mut n`\n...\n10 |         n /=\
    \ 10;\n   |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n >= 0);\n    let mut count = 0;\n    while n\
    \ != 1 {\n        if n % 10 == 1 {\n            count += 1;\n        }\n     \
    \   n /= 10;\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpa3xtsc9y.rs:10:9\n\
    \   |\n3  | fn starts_one_ends(n: isize) -> isize {\n   |                    -\
    \ help: consider making this binding mutable: `mut n`\n...\n10 |         n /=\
    \ 10;\n   |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    while n != 0 {\n        if n % 10 ==\
    \ 1 {\n            count += 1;\n        }\n        n /= 10;\n    }\n    count\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmp1r2uqpdl.rs:9:9\n\
    \  |\n3 | fn starts_one_ends(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n9 |         n /= 10;\n \
    \ |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    while n != 0 {\n        if n % 10 ==\
    \ 1 {\n            count += 1;\n        }\n        n /= 10;\n    }\n    count\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmpy4y6pazm.rs:9:9\n\
    \  |\n3 | fn starts_one_ends(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n9 |         n /= 10;\n \
    \ |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n >= 0);\n    debug_assert!(n <= 9);\n    debug_assert!(n\
    \ % 10 == 1);\n    let mut count = 0;\n    let mut i = 1;\n    while i <= n {\n\
    \        if i % 10 == 1 {\n            count += 1;\n        }\n        i += 1;\n\
    \    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n  \
    \  assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: n % 10 == 1', /tmp/tmpsuv7aior.rs:6:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n > 0);\n    let mut count = 0;\n    while n >\
    \ 0 {\n        if n % 10 == 1 {\n            count += 1;\n        }\n        n\
    \ /= 10;\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpma7uzvny.rs:10:9\n\
    \   |\n3  | fn starts_one_ends(n: isize) -> isize {\n   |                    -\
    \ help: consider making this binding mutable: `mut n`\n...\n10 |         n /=\
    \ 10;\n   |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n >= 0);\n    debug_assert!(n % 10 == 0);\n  \
    \  let mut count = 0;\n    while n != 0 {\n        count += n / 10;\n        n\
    \ /= 10;\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmp9wjp16m8.rs:9:9\n\
    \  |\n3 | fn starts_one_ends(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n9 |         n /= 10;\n \
    \ |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match n {\n        0 => 0,\n        _ => if n % 10 == 1 {\n\
    \            1\n        } else {\n            1 + starts_one_ends(n / 10)\n  \
    \      }\n    }\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `18`', /tmp/tmps6i5ox19.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n > 0);\n    let mut count = 0;\n    let mut i\
    \ = 1;\n    while i <= n {\n        if i / 10 == 1 {\n            i += 1;\n  \
    \      } else {\n            i += 2;\n        }\n        count += 1;\n    }\n\
    \    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `18`', /tmp/tmpi2xc1578.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n > 0);\n    let mut count = 0;\n    let mut last_digit\
    \ = n % 10;\n    while n > 0 {\n        if last_digit == 1 {\n            count\
    \ += 1;\n        }\n        last_digit = n % 10;\n        n /= 10;\n    }\n  \
    \  count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmp7ejlf2j4.rs:12:9\n\
    \   |\n3  | fn starts_one_ends(n: isize) -> isize {\n   |                    -\
    \ help: consider making this binding mutable: `mut n`\n...\n12 |         n /=\
    \ 10;\n   |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n < 1 {\n        return 0;\n    }\n    let mut count = 0;\n\
    \    let mut i = 1;\n    while i <= n {\n        if i % 10 == 1 {\n          \
    \  i += 1;\n            count += 1;\n        }\n        i += 1;\n    }\n    count\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `18`', /tmp/tmpst0xrgf3.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n < 10 {\n        return 0;\n    }\n    let mut count = 0;\n\
    \    while n != 0 {\n        n /= 10;\n        count += 1;\n    }\n    count\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmp6xw6fui_.rs:9:9\n\
    \  |\n3 | fn starts_one_ends(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n9 |         n /= 10;\n \
    \ |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n < 0 {\n        return 0;\n    }\n    if n == 0 {\n    \
    \    return 1;\n    }\n    if n == 1 {\n        return 1;\n    }\n    if n % 2\
    \ == 0 {\n        return starts_one_ends(n / 2) + 1;\n    }\n    return starts_one_ends(n\
    \ / 2) + starts_one_ends(n / 2);\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmpazfytib_.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n < 0 {\n        0\n    } else {\n        n / 10 + 1\n  \
    \  }\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `18`', /tmp/tmpqfu0jf51.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n < 1 {\n        return 0;\n    }\n    let mut count = 0;\n\
    \    while n > 0 {\n        n /= 10;\n        count += 1;\n    }\n    count\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmp1z8eetlj.rs:9:9\n\
    \  |\n3 | fn starts_one_ends(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n9 |         n /= 10;\n \
    \ |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n < 10 { return 1 }\n    if n < 100 { return 2 }\n    if\
    \ n < 1000 { return 3 }\n    if n < 10000 { return 4 }\n    if n < 100000 { return\
    \ 5 }\n    if n < 1000000 { return 6 }\n    if n < 10000000 { return 7 }\n   \
    \ if n < 100000000 { return 8 }\n    if n < 1000000000 { return 9 }\n    if n\
    \ < 10000000000 { return 10 }\n    if n < 100000000000 { return 11 }\n    if n\
    \ < 1000000000000 { return 12 }\n    if n < 10000000000000 { return 13 }\n   \
    \ if n < 100000000000000 { return 14 }\n    if n < 1000000000000000 { return 15\
    \ }\n    if n < 10000000000000000 { return 16 }\n    if n < 100000000000000000\
    \ { return 17 }\n    if n < 1000000000000000000 { return 18 }\n    if n < 10000000000000000000\
    \ { return 19 }\n    if n < 100000000000000000000 { return 20 }\n    if n < 1000000000000000000000\
    \ { return 21 }\n    if n < 10000000000000000000000 { return 22 }\n    if n <\
    \ 100000000000000000000000 { return 23 }\n    if n < 1000000000000000000000000\
    \ { return 24 }\n    if n < 10000000000000000000000000 { return 25 }\n    if n\
    \ < 100000000000000000000000000 { return 26 }\n    if n < 1000000000000000000000000000\
    \ { return 27 }\n    if n < 10000000000000000000000000000 { return 28 }\n    if\
    \ n < 100000000000000000000000000000 { return 29 }\n    if n < 1000000000000000000000000000000\
    \ { return 30 }\n    if n < 10000000000000000000000000000000 { return 31 }\n \
    \   if n < 100000000000000000000000000000000 { return 32 }\n    if n < 1000000000000000000000000000000000\
    \ { return 33 }\n    if n < 10000000000000000000000000000000000 { return 34 }\n\
    \    if n < 100000000000000000000000000000000000 { return 35 }\n    if n < 1000000000000000000000000000000000000\
    \ { return 36 }\n    if n < 10000000000000000000000000000000000000 { return 37\
    \ }\n    if n < 100000000000000000000000000000000000000 { return 38 }\n    if\
    \ n < 1000000000000000000000000000000000000000 { return 39 }\n    if n < 10000000000000000000000000000000000000000\
    \ { return 40 }\n    if n < 100000000000000000000000000000000000000000 { return\
    \ 41 }\n    if n < 1000000000000000000000000000000000000000000 { return 42 }\n\
    \    if n < 10000000000000000000000000000000000000000000 { return 43 }\n    if\
    \ n < 100000000000000000000000000000000000000000000 { return 44 }\n    if n <\
    \ 1000000000000000000000000000000000000000000000 { return 45 }\n    if n < 1000000000000000000000000000000000000000\
    \ { return 46 }\n    if n < 10000000000000000000000000000000000000000 { return\
    \ 47 }\n    if n < 100000000000000000000000000000000000000000 { return 48 }\n\
    \    if n < 1000000000000000000000000000000000000000000 { return 49 }\n    if\
    \ n < 10000000000000000000000000000000000000000000 { return 50 }\n    if n < 10000000000000000000000000000000000\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error: integer literal is too large\n  --> /tmp/tmpd1b7u1uw.rs:42:12\n\
    \   |\n42 |     if n < 1000000000000000000000000000000000000000 { return 39 }\n\
    \   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: integer literal\
    \ is too large\n  --> /tmp/tmpd1b7u1uw.rs:43:12\n   |\n43 |     if n < 10000000000000000000000000000000000000000\
    \ { return 40 }\n   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\
    error: integer literal is too large\n  --> /tmp/tmpd1b7u1uw.rs:44:12\n   |\n44\
    \ |     if n < 100000000000000000000000000000000000000000 { return 41 }\n   |\
    \            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: integer literal\
    \ is too large\n  --> /tmp/tmpd1b7u1uw.rs:45:12\n   |\n45 |     if n < 1000000000000000000000000000000000000000000\
    \ { return 42 }\n   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\
    \nerror: integer literal is too large\n  --> /tmp/tmpd1b7u1uw.rs:46:12\n   |\n\
    46 |     if n < 10000000000000000000000000000000000000000000 { return 43 }\n \
    \  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: integer\
    \ literal is too large\n  --> /tmp/tmpd1b7u1uw.rs:47:12\n   |\n47 |     if n <\
    \ 100000000000000000000000000000000000000000000 { return 44 }\n   |          \
    \  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: integer literal is\
    \ too large\n  --> /tmp/tmpd1b7u1uw.rs:48:12\n   |\n48 |     if n < 1000000000000000000000000000000000000000000000\
    \ { return 45 }\n   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\
    \nerror: integer literal is too large\n  --> /tmp/tmpd1b7u1uw.rs:49:12\n   |\n\
    49 |     if n < 1000000000000000000000000000000000000000 { return 46 }\n   | \
    \           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: integer literal\
    \ is too large\n  --> /tmp/tmpd1b7u1uw.rs:50:12\n   |\n50 |     if n < 10000000000000000000000000000000000000000\
    \ { return 47 }\n   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\
    error: integer literal is too large\n  --> /tmp/tmpd1b7u1uw.rs:51:12\n   |\n51\
    \ |     if n < 100000000000000000000000000000000000000000 { return 48 }\n   |\
    \            ^^^^^^^^^^^^^^^^^^^^^^^^"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n >= 0);\n    debug_assert!(n <= 9);\n    let\
    \ mut count = 0;\n    let mut i = 1;\n    while i <= n {\n        if i / 10 ==\
    \ 1 {\n            i += 1;\n            continue;\n        }\n        if i % 10\
    \ == 1 {\n            i += 1;\n            count += 1;\n            continue;\n\
    \        }\n        i += 1;\n    }\n    count\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `18`', /tmp/tmpj7hk14aj.rs:26:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    while n != 0 {\n        if n % 10 ==\
    \ 1 {\n            count += 1;\n        }\n        n /= 10;\n    }\n    count\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmpsy9tk2w5.rs:9:9\n\
    \  |\n3 | fn starts_one_ends(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n9 |         n /= 10;\n \
    \ |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n >= 0);\n    debug_assert!(n <= 10);\n    let\
    \ mut count = 0;\n    while n != 0 {\n        if n % 10 == 1 {\n            count\
    \ += 1;\n        }\n        n /= 10;\n    }\n    count\n}\n\nfn main() {\n   \
    \ let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmp8k1o2wrj.rs:11:9\n\
    \   |\n3  | fn starts_one_ends(n: isize) -> isize {\n   |                    -\
    \ help: consider making this binding mutable: `mut n`\n...\n11 |         n /=\
    \ 10;\n   |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match n {\n        0 => 0,\n        1 => 1,\n        _ => n,\n\
    \    }\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmpdaohs9mq.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    while n > 0 {\n        if n % 10 ==\
    \ 1 {\n            count += 1;\n        }\n        n /= 10;\n    }\n    count\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmpffdfu229.rs:9:9\n\
    \  |\n3 | fn starts_one_ends(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n9 |         n /= 10;\n \
    \ |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n > 0);\n    let mut count = 0;\n    while n !=\
    \ 1 {\n        n /= 10;\n        count += 1;\n    }\n    count\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmp2b1abgqx.rs:7:9\n\
    \  |\n3 | fn starts_one_ends(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n7 |         n /= 10;\n \
    \ |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n > 0);\n    let mut count = 0;\n    while n !=\
    \ 1 {\n        n /= 10;\n        count += 1;\n    }\n    count\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmp4lij2jit.rs:7:9\n\
    \  |\n3 | fn starts_one_ends(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n7 |         n /= 10;\n \
    \ |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match n {\n        0 => 0,\n        _ => n,\n    }\n}\n\nfn\
    \ main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmpmqb9uw55.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match n {\n        0 => 0,\n        _ => 1 + starts_one_ends(n\
    \ - 1),\n    }\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmp5rs13ude.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n > 0);\n    let mut count = 0;\n    while n !=\
    \ 1 {\n        if n % 10 == 1 {\n            count += 1;\n        }\n        n\
    \ /= 10;\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpgzz1r6si.rs:10:9\n\
    \   |\n3  | fn starts_one_ends(n: isize) -> isize {\n   |                    -\
    \ help: consider making this binding mutable: `mut n`\n...\n10 |         n /=\
    \ 10;\n   |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n >= 0);\n    debug_assert!(n <= 10);\n    let\
    \ mut n = 0;\n    while n <= 9 {\n        if n % 10 == 1 {\n            n += 1;\n\
    \        } else {\n            n += 1;\n        }\n    }\n    n\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmpm3sft4dh.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n >= 0);\n    let mut count = 0;\n    while n\
    \ != 0 {\n        if n % 10 == 1 {\n            count += 1;\n        }\n     \
    \   n /= 10;\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmph2julubx.rs:10:9\n\
    \   |\n3  | fn starts_one_ends(n: isize) -> isize {\n   |                    -\
    \ help: consider making this binding mutable: `mut n`\n...\n10 |         n /=\
    \ 10;\n   |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match n {\n        1 => 1,\n        _ => n,\n    }\n}\n\nfn\
    \ main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmpfsomm0po.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n > 0);\n    let mut count = 0;\n    while n !=\
    \ 1 {\n        n /= 10;\n        count += 1;\n    }\n    count\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmpcmphub52.rs:7:9\n\
    \  |\n3 | fn starts_one_ends(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n7 |         n /= 10;\n \
    \ |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    while n != 0 {\n        if n % 10 ==\
    \ 1 {\n            count += 1;\n        }\n        n /= 10;\n    }\n    count\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmpv3jigfm3.rs:9:9\n\
    \  |\n3 | fn starts_one_ends(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n9 |         n /= 10;\n \
    \ |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    while n != 0 {\n        if n % 10 ==\
    \ 1 {\n            count += 1;\n        }\n        n /= 10;\n    }\n    count\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmpqi3c16hl.rs:9:9\n\
    \  |\n3 | fn starts_one_ends(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n9 |         n /= 10;\n \
    \ |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n > 0);\n    debug_assert!(n % 10 == 1);\n   \
    \ let mut count = 0;\n    for i in 1..n {\n        if i % 10 == 1 {\n        \
    \    count += 1;\n        }\n    }\n    count\n}\n\nfn main() {\n    let candidate\
    \ = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpehl2wdmh.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n < 0 {\n        panic!(\"starts_one_ends: n must be positive\"\
    );\n    }\n    if n < 10 {\n        return 1;\n    }\n    if n < 100 {\n     \
    \   return 2;\n    }\n    if n < 1000 {\n        return 3;\n    }\n    if n <\
    \ 10000 {\n        return 4;\n    }\n    if n < 100000 {\n        return 5;\n\
    \    }\n    if n < 1000000 {\n        return 6;\n    }\n    if n < 10000000 {\n\
    \        return 7;\n    }\n    if n < 100000000 {\n        return 8;\n    }\n\
    \    if n < 1000000000 {\n        return 9;\n    }\n    if n < 10000000000 {\n\
    \        return 10;\n    }\n    if n < 100000000000 {\n        return 11;\n  \
    \  }\n    if n < 1000000000000 {\n        return 12;\n    }\n    if n < 10000000000000\
    \ {\n        return 13;\n    }\n    if n < 100000000000000 {\n        return 14;\n\
    \    }\n    if n < 1000000000000000 {\n        return 15;\n    }\n    if n < 10000000000000000\
    \ {\n        return 16;\n    }\n    if n < 100000000000000000 {\n        return\
    \ 17;\n    }\n    if n < 1000000000000000000 {\n        return 18;\n    }\n  \
    \  if n < 10000000000000000000 {\n        return 19;\n    }\n    if n < 100000000000000000000\
    \ {\n        return 20;\n    }\n    if n < 1000000000000000000000 {\n        return\
    \ 21;\n    }\n    if n < 10000000000000000000000 {\n        return 22;\n    }\n\
    \    if n < 100000000000000000000000 {\n        return 23;\n    }\n    if n <\
    \ 1000000000000000000000000 {\n        return 24;\n    }\n    if n < 10000000000000000000000000\
    \ {\n        return 25;\n    }\n    if n < 100000000000000000000000000 {\n   \
    \     return 26;\n    }\n    if n < 1000000000000000000000000000 {\n        return\
    \ 27;\n    }\n    if n < 10000000000000000000000000000 {\n        return 28;\n\
    \    }\n    if n < 100000000000000000000000000000 {\n        return 29;\n    }\n\
    \    if n < 1000000000000000000000000000000 {\n        return 30;\n    }\n   \
    \ if n < 10000000000000000000000000000000 {\n        return 31;\n    }\n    if\
    \ n < 100000000000000000000000000000000 {\n        return 32;\n    }\n    if n\
    \ < 1000000000000000000000000000000000 {\n        return 33;\n    }\n    if n\
    \ < 10000000000000000000000000000000000 {\n        return 34;\n    }\n    if n\
    \ < 100000000000000000000000000000000000 {\n        return 35;\n    }\n    if\
    \ n < 1000000000000000000000000000000000000 {\n        return 36;\n    }\n   \
    \ if n < 10000000000000000000000000000000000000 {\n        return 37;\n    }\n\
    \    if n < 100000000000000000000000000000000000000 {\n        return 38;\n  \
    \  }\n    if n < 1000000000000000000000000000000000000000 {\n        return 39;\n\
    \    }\n    if n < 10000000000000000000000000000000000000000\n}\n\nfn main() {\n\
    \    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error: integer literal is too large\n   --> /tmp/tmpu1d_fq6f.rs:121:12\n\
    \    |\n121 |     if n < 1000000000000000000000000000000000000000 {\n    |   \
    \         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: integer literal is\
    \ too large\n   --> /tmp/tmpu1d_fq6f.rs:124:12\n    |\n124 |     if n < 10000000000000000000000000000000000000000\n\
    \    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: expected\
    \ `{`, found `}`\n   --> /tmp/tmpu1d_fq6f.rs:125:1\n    |\n124 |     if n < 10000000000000000000000000000000000000000\n\
    \    |     -- this `if` expression has a condition, but no block\n125 | }\n  \
    \  | ^ expected `{`\n\nerror: aborting due to 3 previous errors\n\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n > 0);\n    let mut count = 0;\n    while n !=\
    \ 1 {\n        n /= 10;\n        count += 1;\n    }\n    count\n}\n\nfn main()\
    \ {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n\
    \    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4),\
    \ 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmpdvbm5rpa.rs:7:9\n\
    \  |\n3 | fn starts_one_ends(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n7 |         n /= 10;\n \
    \ |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    n / 10 + 1\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `18`', /tmp/tmpp0rer95k.rs:10:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    n / 10 + 1\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `18`', /tmp/tmp95fe8t4j.rs:10:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n >= 0);\n    let mut count = 0;\n    while n\
    \ != 0 {\n        if n % 10 == 1 {\n            count += 1;\n        }\n     \
    \   n /= 10;\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmpbchpn9pn.rs:10:9\n\
    \   |\n3  | fn starts_one_ends(n: isize) -> isize {\n   |                    -\
    \ help: consider making this binding mutable: `mut n`\n...\n10 |         n /=\
    \ 10;\n   |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match n {\n        0 => 0,\n        1 => 1,\n        _ => n,\n\
    \    }\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmpt4rj_ur4.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    debug_assert!(n >= 0);\n    let mut count = 0;\n    while n\
    \ != 0 {\n        if n % 10 == 1 {\n            count += 1;\n        }\n     \
    \   n /= 10;\n    }\n    count\n}\n\nfn main() {\n    let candidate = starts_one_ends;\n\
    \    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3),\
    \ 180);\n    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n\
    }\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n  --> /tmp/tmp2g_8_918.rs:10:9\n\
    \   |\n3  | fn starts_one_ends(n: isize) -> isize {\n   |                    -\
    \ help: consider making this binding mutable: `mut n`\n...\n10 |         n /=\
    \ 10;\n   |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    let mut count = 0;\n    while n != 0 {\n        if n % 10 ==\
    \ 1 {\n            count += 1;\n        }\n        n /= 10;\n    }\n    count\n\
    }\n\nfn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmpekhtjoyj.rs:9:9\n\
    \  |\n3 | fn starts_one_ends(n: isize) -> isize {\n  |                    - help:\
    \ consider making this binding mutable: `mut n`\n...\n9 |         n /= 10;\n \
    \ |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n < 0 {\n        0\n    } else {\n        let mut n = 1\n\
    \        while n < n {\n            n <<= 1\n        }\n        n\n    }\n}\n\n\
    fn main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "error: expected `;`, found keyword `while`\n --> /tmp/tmpmh5fcrdw.rs:7:22\n\
    \  |\n7 |         let mut n = 1\n  |                      ^ help: add `;` here\n\
    8 |         while n < n {\n  |         ----- unexpected token\n\nerror: aborting\
    \ due to previous error\n\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    if n == 0 {\n        return 0;\n    }\n    if n == 1 {\n   \
    \     return 1;\n    }\n    if n % 2 == 0 {\n        return starts_one_ends(n\
    \ / 2) + 1;\n    }\n    return starts_one_ends(n / 2);\n}\n\nfn main() {\n   \
    \ let candidate = starts_one_ends;\n    assert_eq!(candidate(1), 1);\n    assert_eq!(candidate(2),\
    \ 18);\n    assert_eq!(candidate(3), 180);\n    assert_eq!(candidate(4), 1800);\n\
    \    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmp18z_bt88.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// Given a positive integer n, return the count of the numbers of n-digit\n\
    /// positive integers that start or end with 1.\nfn starts_one_ends(n: isize)\
    \ -> isize {\n    match n {\n        1 => 1,\n        _ => n,\n    }\n}\n\nfn\
    \ main() {\n    let candidate = starts_one_ends;\n    assert_eq!(candidate(1),\
    \ 1);\n    assert_eq!(candidate(2), 18);\n    assert_eq!(candidate(3), 180);\n\
    \    assert_eq!(candidate(4), 1800);\n    assert_eq!(candidate(5), 18000);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `18`', /tmp/tmp9_9pw113.rs:13:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception

name: HumanEval_35_max_element
language: rust
results:
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max_by_key(|&x| x).unwrap()\n\
    }\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpw0qj4de5.rs:7:5\n  |\n6 |\
    \ fn max_element(l: Vec<isize>) -> isize {\n  |                              \
    \    ----- expected `isize` because of return type\n7 |     l.iter().max_by_key(|&x|\
    \ x).unwrap()\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`,\
    \ found `&isize`\n  |\nhelp: consider dereferencing the borrow\n  |\n7 |     *l.iter().max_by_key(|&x|\
    \ x).unwrap()\n  |     +\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpecpqgu_u.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpecpqgu_u.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max_by_key(|&x| x).unwrap()\n\
    }\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpiub8xs53.rs:7:5\n  |\n6 |\
    \ fn max_element(l: Vec<isize>) -> isize {\n  |                              \
    \    ----- expected `isize` because of return type\n7 |     l.iter().max_by_key(|&x|\
    \ x).unwrap()\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`,\
    \ found `&isize`\n  |\nhelp: consider dereferencing the borrow\n  |\n7 |     *l.iter().max_by_key(|&x|\
    \ x).unwrap()\n  |     +\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l.iter().rev() {\n        if i > max {\n            max = i;\n        }\n  \
    \  }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpdwokgfjj.rs:9:16\n  |\n9 |\
    \         if i > max {\n  |                ^^^\n  |                |\n  |    \
    \            expected `&isize`, found `isize`\n  |                help: consider\
    \ borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpdwokgfjj.rs:10:19\n\
    \   |\n7  |     let mut max = l[0];\n   |                   ---- expected due\
    \ to this value\n...\n10 |             max = i;\n   |                   ^ expected\
    \ `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n\
    10 |             max = *i;\n   |                   +\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l.iter().rev() {\n        if i > max {\n            max = i;\n        }\n  \
    \  }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpxo1rvapf.rs:9:16\n  |\n9 |\
    \         if i > max {\n  |                ^^^\n  |                |\n  |    \
    \            expected `&isize`, found `isize`\n  |                help: consider\
    \ borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpxo1rvapf.rs:10:19\n\
    \   |\n7  |     let mut max = l[0];\n   |                   ---- expected due\
    \ to this value\n...\n10 |             max = i;\n   |                   ^ expected\
    \ `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n\
    10 |             max = *i;\n   |                   +\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l.iter().rev() {\n        if *i > max {\n            max = *i;\n        }\n\
    \    }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l.iter().rev() {\n        if i > max {\n            max = i;\n        }\n  \
    \  }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpqapnbqe2.rs:9:16\n  |\n9 |\
    \         if i > max {\n  |                ^^^\n  |                |\n  |    \
    \            expected `&isize`, found `isize`\n  |                help: consider\
    \ borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpqapnbqe2.rs:10:19\n\
    \   |\n7  |     let mut max = l[0];\n   |                   ---- expected due\
    \ to this value\n...\n10 |             max = i;\n   |                   ^ expected\
    \ `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n\
    10 |             max = *i;\n   |                   +\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l.iter().rev() {\n        if *i > max {\n            max = *i;\n        }\n\
    \    }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max_elem = l[0];\n    for\
    \ i in l.iter().rev() {\n        if i > max_elem {\n            max_elem = i;\n\
    \        }\n    }\n    max_elem\n}\n\nfn main() {\n    let candidate = max_element;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp29z4s6hd.rs:9:16\n  |\n9 |\
    \         if i > max_elem {\n  |                ^^^^^^^^\n  |                |\n\
    \  |                expected `&isize`, found `isize`\n  |                help:\
    \ consider borrowing here: `&max_elem`\n\nerror[E0308]: mismatched types\n  -->\
    \ /tmp/tmp29z4s6hd.rs:10:24\n   |\n7  |     let mut max_elem = l[0];\n   |   \
    \                     ---- expected due to this value\n...\n10 |             max_elem\
    \ = i;\n   |                        ^ expected `isize`, found `&isize`\n   |\n\
    help: consider dereferencing the borrow\n   |\n10 |             max_elem = *i;\n\
    \   |                        +\n\nerror: aborting due to 2 previous errors\n\n\
    For more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max_value = l[0];\n    for\
    \ value in l {\n        if value > max_value {\n            max_value = value;\n\
    \        }\n    }\n    max_value\n}\n\nfn main() {\n    let candidate = max_element;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max_value = l[0];\n    for\
    \ i in l.iter().rev() {\n        if *i > max_value {\n            max_value =\
    \ *i;\n        }\n    }\n    max_value\n}\n\nfn main() {\n    let candidate =\
    \ max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l.iter().rev() {\n        if i > max {\n            max = i;\n        }\n  \
    \  }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp37q9980b.rs:9:16\n  |\n9 |\
    \         if i > max {\n  |                ^^^\n  |                |\n  |    \
    \            expected `&isize`, found `isize`\n  |                help: consider\
    \ borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp37q9980b.rs:10:19\n\
    \   |\n7  |     let mut max = l[0];\n   |                   ---- expected due\
    \ to this value\n...\n10 |             max = i;\n   |                   ^ expected\
    \ `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n\
    10 |             max = *i;\n   |                   +\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l.iter().rev() {\n        if i > max {\n            max = i;\n        }\n  \
    \  }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpea_sx4a3.rs:9:16\n  |\n9 |\
    \         if i > max {\n  |                ^^^\n  |                |\n  |    \
    \            expected `&isize`, found `isize`\n  |                help: consider\
    \ borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpea_sx4a3.rs:10:19\n\
    \   |\n7  |     let mut max = l[0];\n   |                   ---- expected due\
    \ to this value\n...\n10 |             max = i;\n   |                   ^ expected\
    \ `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n\
    10 |             max = *i;\n   |                   +\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp7d9r2lgb.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp7d9r2lgb.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max_by_key(|&x| x).unwrap()\n\
    }\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmphxm31vy6.rs:7:5\n  |\n6 |\
    \ fn max_element(l: Vec<isize>) -> isize {\n  |                              \
    \    ----- expected `isize` because of return type\n7 |     l.iter().max_by_key(|&x|\
    \ x).unwrap()\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`,\
    \ found `&isize`\n  |\nhelp: consider dereferencing the borrow\n  |\n7 |     *l.iter().max_by_key(|&x|\
    \ x).unwrap()\n  |     +\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for &x\
    \ in l {\n        if x > max {\n            max = x;\n        }\n    }\n    max\n\
    }\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpkqz7fml8.rs:8:9\n  |\n8 |\
    \     for &x in l {\n  |         ^^    - this expression has type `Option<isize>`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |         help:\
    \ you can probably remove the explicit borrow: `x`\n  |\n  = note:   expected\
    \ type `isize`\n          found reference `&_`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpe1isf8we.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpe1isf8we.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max_value = l[0];\n    for\
    \ i in l.iter().rev() {\n        if *i > max_value {\n            max_value =\
    \ *i;\n        }\n    }\n    max_value\n}\n\nfn main() {\n    let candidate =\
    \ max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp_v0zos3x.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp_v0zos3x.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l.iter().rev() {\n        if i > max {\n            max = i;\n        }\n  \
    \  }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpfobuwg12.rs:9:16\n  |\n9 |\
    \         if i > max {\n  |                ^^^\n  |                |\n  |    \
    \            expected `&isize`, found `isize`\n  |                help: consider\
    \ borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpfobuwg12.rs:10:19\n\
    \   |\n7  |     let mut max = l[0];\n   |                   ---- expected due\
    \ to this value\n...\n10 |             max = i;\n   |                   ^ expected\
    \ `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n\
    10 |             max = *i;\n   |                   +\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l.iter().rev() {\n        if *i > max {\n            max = *i;\n        }\n\
    \    }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for &x\
    \ in l {\n        if x > max {\n            max = x;\n        }\n    }\n    max\n\
    }\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpowrvnton.rs:8:9\n  |\n8 |\
    \     for &x in l {\n  |         ^^    - this expression has type `Option<isize>`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |         help:\
    \ you can probably remove the explicit borrow: `x`\n  |\n  = note:   expected\
    \ type `isize`\n          found reference `&_`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l.iter().rev() {\n        if *i > max {\n            max = *i;\n        }\n\
    \    }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max_value = l[0];\n    for\
    \ i in l.iter().rev() {\n        if i > max_value {\n            max_value = i;\n\
    \        }\n    }\n    max_value\n}\n\nfn main() {\n    let candidate = max_element;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp95deioe9.rs:9:16\n  |\n9 |\
    \         if i > max_value {\n  |                ^^^^^^^^^\n  |              \
    \  |\n  |                expected `&isize`, found `isize`\n  |               \
    \ help: consider borrowing here: `&max_value`\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmp95deioe9.rs:10:25\n   |\n7  |     let mut max_value = l[0];\n \
    \  |                         ---- expected due to this value\n...\n10 |      \
    \       max_value = i;\n   |                         ^ expected `isize`, found\
    \ `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n10 |        \
    \     max_value = *i;\n   |                         +\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap()\n}\n\nfn\
    \ main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp3fb9t6wc.rs:7:5\n  |\n6 |\
    \ fn max_element(l: Vec<isize>) -> isize {\n  |                              \
    \    ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap()\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap()\n \
    \ |     +\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpktxaeq2r.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpktxaeq2r.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l.iter().rev() {\n        if *i > max {\n            max = *i;\n        }\n\
    \    }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max_value = l[0];\n    for\
    \ i in l.iter().rev() {\n        if *i > max_value {\n            max_value =\
    \ *i;\n        }\n    }\n    max_value\n}\n\nfn main() {\n    let candidate =\
    \ max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max_value = l[0];\n    for\
    \ i in l.iter().rev() {\n        if i > max_value {\n            max_value = i;\n\
    \        }\n    }\n    max_value\n}\n\nfn main() {\n    let candidate = max_element;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsih40zse.rs:9:16\n  |\n9 |\
    \         if i > max_value {\n  |                ^^^^^^^^^\n  |              \
    \  |\n  |                expected `&isize`, found `isize`\n  |               \
    \ help: consider borrowing here: `&max_value`\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmpsih40zse.rs:10:25\n   |\n7  |     let mut max_value = l[0];\n \
    \  |                         ---- expected due to this value\n...\n10 |      \
    \       max_value = i;\n   |                         ^ expected `isize`, found\
    \ `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n10 |        \
    \     max_value = *i;\n   |                         +\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap()\n}\n\nfn\
    \ main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4kuf641g.rs:7:5\n  |\n6 |\
    \ fn max_element(l: Vec<isize>) -> isize {\n  |                              \
    \    ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap()\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap()\n \
    \ |     +\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l.iter().rev() {\n        if i > max {\n            max = i;\n        }\n  \
    \  }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpipkha1uc.rs:9:16\n  |\n9 |\
    \         if i > max {\n  |                ^^^\n  |                |\n  |    \
    \            expected `&isize`, found `isize`\n  |                help: consider\
    \ borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpipkha1uc.rs:10:19\n\
    \   |\n7  |     let mut max = l[0];\n   |                   ---- expected due\
    \ to this value\n...\n10 |             max = i;\n   |                   ^ expected\
    \ `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n\
    10 |             max = *i;\n   |                   +\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l.iter().rev() {\n        if i > max {\n            max = i;\n        }\n  \
    \  }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpqtxniagj.rs:9:16\n  |\n9 |\
    \         if i > max {\n  |                ^^^\n  |                |\n  |    \
    \            expected `&isize`, found `isize`\n  |                help: consider\
    \ borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpqtxniagj.rs:10:19\n\
    \   |\n7  |     let mut max = l[0];\n   |                   ---- expected due\
    \ to this value\n...\n10 |             max = i;\n   |                   ^ expected\
    \ `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n\
    10 |             max = *i;\n   |                   +\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max_value = l[0];\n    for\
    \ i in l.iter().rev() {\n        if *i > max_value {\n            max_value =\
    \ *i;\n        }\n    }\n    max_value\n}\n\nfn main() {\n    let candidate =\
    \ max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max_val = l[0];\n    for\
    \ &x in l {\n        if x > max_val {\n            max_val = x;\n        }\n \
    \   }\n    max_val\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpq29jdc2g.rs:8:9\n  |\n8 |\
    \     for &x in l {\n  |         ^^    - this expression has type `Option<isize>`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |         help:\
    \ you can probably remove the explicit borrow: `x`\n  |\n  = note:   expected\
    \ type `isize`\n          found reference `&_`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap()\n}\n\nfn\
    \ main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpim9hfzhl.rs:7:5\n  |\n6 |\
    \ fn max_element(l: Vec<isize>) -> isize {\n  |                              \
    \    ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap()\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap()\n \
    \ |     +\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max_val = l[0];\n    for\
    \ i in l.iter().rev() {\n        if i > max_val {\n            max_val = i;\n\
    \        }\n    }\n    max_val\n}\n\nfn main() {\n    let candidate = max_element;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp0vs21ahi.rs:9:16\n  |\n9 |\
    \         if i > max_val {\n  |                ^^^^^^^\n  |                |\n\
    \  |                expected `&isize`, found `isize`\n  |                help:\
    \ consider borrowing here: `&max_val`\n\nerror[E0308]: mismatched types\n  -->\
    \ /tmp/tmp0vs21ahi.rs:10:23\n   |\n7  |     let mut max_val = l[0];\n   |    \
    \                   ---- expected due to this value\n...\n10 |             max_val\
    \ = i;\n   |                       ^ expected `isize`, found `&isize`\n   |\n\
    help: consider dereferencing the borrow\n   |\n10 |             max_val = *i;\n\
    \   |                       +\n\nerror: aborting due to 2 previous errors\n\n\
    For more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(l.len())\n\
    }\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpcjwj0rp2.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(l.len())\n  |                              ^^^^^^^\
    \ expected `&isize`, found `usize`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpcjwj0rp2.rs:7:5\n\
    \  |\n6 | fn max_element(l: Vec<isize>) -> isize {\n  |                      \
    \            ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(l.len())\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n\
    \  |\nhelp: consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(l.len())\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l.iter().rev() {\n        if *i > max {\n            max = *i;\n        }\n\
    \    }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l.iter().rev() {\n        if i > max {\n            max = i;\n        }\n  \
    \  }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp5g2676vm.rs:9:16\n  |\n9 |\
    \         if i > max {\n  |                ^^^\n  |                |\n  |    \
    \            expected `&isize`, found `isize`\n  |                help: consider\
    \ borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp5g2676vm.rs:10:19\n\
    \   |\n7  |     let mut max = l[0];\n   |                   ---- expected due\
    \ to this value\n...\n10 |             max = i;\n   |                   ^ expected\
    \ `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n\
    10 |             max = *i;\n   |                   +\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max_elem = l[0];\n    for\
    \ i in l.iter().rev() {\n        if *i > max_elem {\n            max_elem = *i;\n\
    \        }\n    }\n    max_elem\n}\n\nfn main() {\n    let candidate = max_element;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l.iter().rev() {\n        if *i > max {\n            max = *i;\n        }\n\
    \    }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l.iter().rev() {\n        if *i > max {\n            max = *i;\n        }\n\
    \    }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l.iter().rev() {\n        if *i > max {\n            max = *i;\n        }\n\
    \    }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max_elem = l[0];\n    for\
    \ i in l.iter().rev() {\n        if *i > max_elem {\n            max_elem = *i;\n\
    \        }\n    }\n    max_elem\n}\n\nfn main() {\n    let candidate = max_element;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpb8u_dwn_.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpb8u_dwn_.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l.iter().rev() {\n        if *i > max {\n            max = *i;\n        }\n\
    \    }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(l.len())\n\
    }\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmplgskt2k_.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(l.len())\n  |                              ^^^^^^^\
    \ expected `&isize`, found `usize`\n\nerror[E0308]: mismatched types\n --> /tmp/tmplgskt2k_.rs:7:5\n\
    \  |\n6 | fn max_element(l: Vec<isize>) -> isize {\n  |                      \
    \            ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(l.len())\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n\
    \  |\nhelp: consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(l.len())\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4cvbl5jw.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp4cvbl5jw.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp2n5l27ko.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp2n5l27ko.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max_elem = l[0];\n    for\
    \ i in l.iter().rev() {\n        if *i > max_elem {\n            max_elem = *i;\n\
    \        }\n    }\n    max_elem\n}\n\nfn main() {\n    let candidate = max_element;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpb213yfpn.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpb213yfpn.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpt9hbnig_.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpt9hbnig_.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l.iter().rev() {\n        if *i > max {\n            max = *i;\n        }\n\
    \    }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpb9qdr476.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpb9qdr476.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max_unwrap_or(0)\n}\n\n\
    fn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0599]: no method named `max_unwrap_or` found for struct `std::slice::Iter`\
    \ in the current scope\n --> /tmp/tmptk0b0dhn.rs:7:14\n  |\n7 |     l.iter().max_unwrap_or(0)\n\
    \  |              ^^^^^^^^^^^^^ method not found in `std::slice::Iter<'_, isize>`\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0599`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l.iter().rev() {\n        if i > max {\n            max = i;\n        }\n  \
    \  }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmphccq3y91.rs:9:16\n  |\n9 |\
    \         if i > max {\n  |                ^^^\n  |                |\n  |    \
    \            expected `&isize`, found `isize`\n  |                help: consider\
    \ borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmphccq3y91.rs:10:19\n\
    \   |\n7  |     let mut max = l[0];\n   |                   ---- expected due\
    \ to this value\n...\n10 |             max = i;\n   |                   ^ expected\
    \ `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n\
    10 |             max = *i;\n   |                   +\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l.iter().rev() {\n        if i > max {\n            max = i;\n        }\n  \
    \  }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmper1u2cgi.rs:9:16\n  |\n9 |\
    \         if i > max {\n  |                ^^^\n  |                |\n  |    \
    \            expected `&isize`, found `isize`\n  |                help: consider\
    \ borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmper1u2cgi.rs:10:19\n\
    \   |\n7  |     let mut max = l[0];\n   |                   ---- expected due\
    \ to this value\n...\n10 |             max = i;\n   |                   ^ expected\
    \ `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n\
    10 |             max = *i;\n   |                   +\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmptd6ai9m5.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmptd6ai9m5.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpb6ik7i9e.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpb6ik7i9e.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpcfu0i7sl.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpcfu0i7sl.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l.iter().rev() {\n        if i > max {\n            max = i;\n        }\n  \
    \  }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpwom7tgy_.rs:9:16\n  |\n9 |\
    \         if i > max {\n  |                ^^^\n  |                |\n  |    \
    \            expected `&isize`, found `isize`\n  |                help: consider\
    \ borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpwom7tgy_.rs:10:19\n\
    \   |\n7  |     let mut max = l[0];\n   |                   ---- expected due\
    \ to this value\n...\n10 |             max = i;\n   |                   ^ expected\
    \ `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n\
    10 |             max = *i;\n   |                   +\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp1_r5assd.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp1_r5assd.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l.iter().rev() {\n        if i > max {\n            max = i;\n        }\n  \
    \  }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp9l2g6t23.rs:9:16\n  |\n9 |\
    \         if i > max {\n  |                ^^^\n  |                |\n  |    \
    \            expected `&isize`, found `isize`\n  |                help: consider\
    \ borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp9l2g6t23.rs:10:19\n\
    \   |\n7  |     let mut max = l[0];\n   |                   ---- expected due\
    \ to this value\n...\n10 |             max = i;\n   |                   ^ expected\
    \ `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n\
    10 |             max = *i;\n   |                   +\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l.iter().rev() {\n        if i > max {\n            max = i;\n        }\n  \
    \  }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp22ptds4r.rs:9:16\n  |\n9 |\
    \         if i > max {\n  |                ^^^\n  |                |\n  |    \
    \            expected `&isize`, found `isize`\n  |                help: consider\
    \ borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp22ptds4r.rs:10:19\n\
    \   |\n7  |     let mut max = l[0];\n   |                   ---- expected due\
    \ to this value\n...\n10 |             max = i;\n   |                   ^ expected\
    \ `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n\
    10 |             max = *i;\n   |                   +\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l.iter().rev() {\n        if *i > max {\n            max = *i;\n        }\n\
    \    }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpszbeltyf.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpszbeltyf.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpigyks3f5.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpigyks3f5.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max_elem = l[0];\n    for\
    \ i in l.iter().rev() {\n        if i > max_elem {\n            max_elem = i;\n\
    \        }\n    }\n    max_elem\n}\n\nfn main() {\n    let candidate = max_element;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4gspffay.rs:9:16\n  |\n9 |\
    \         if i > max_elem {\n  |                ^^^^^^^^\n  |                |\n\
    \  |                expected `&isize`, found `isize`\n  |                help:\
    \ consider borrowing here: `&max_elem`\n\nerror[E0308]: mismatched types\n  -->\
    \ /tmp/tmp4gspffay.rs:10:24\n   |\n7  |     let mut max_elem = l[0];\n   |   \
    \                     ---- expected due to this value\n...\n10 |             max_elem\
    \ = i;\n   |                        ^ expected `isize`, found `&isize`\n   |\n\
    help: consider dereferencing the borrow\n   |\n10 |             max_elem = *i;\n\
    \   |                        +\n\nerror: aborting due to 2 previous errors\n\n\
    For more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l.iter().rev() {\n        if i > max {\n            max = i;\n        }\n  \
    \  }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp4cjcjbs4.rs:9:16\n  |\n9 |\
    \         if i > max {\n  |                ^^^\n  |                |\n  |    \
    \            expected `&isize`, found `isize`\n  |                help: consider\
    \ borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp4cjcjbs4.rs:10:19\n\
    \   |\n7  |     let mut max = l[0];\n   |                   ---- expected due\
    \ to this value\n...\n10 |             max = i;\n   |                   ^ expected\
    \ `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n\
    10 |             max = *i;\n   |                   +\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpzfdag0ab.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpzfdag0ab.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l.iter().rev() {\n        if *i > max {\n            max = *i;\n        }\n\
    \    }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l.iter().rev() {\n        if i > max {\n            max = i;\n        }\n  \
    \  }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpgj6e6os1.rs:9:16\n  |\n9 |\
    \         if i > max {\n  |                ^^^\n  |                |\n  |    \
    \            expected `&isize`, found `isize`\n  |                help: consider\
    \ borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpgj6e6os1.rs:10:19\n\
    \   |\n7  |     let mut max = l[0];\n   |                   ---- expected due\
    \ to this value\n...\n10 |             max = i;\n   |                   ^ expected\
    \ `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n\
    10 |             max = *i;\n   |                   +\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l.iter().rev() {\n        if *i > max {\n            max = *i;\n        }\n\
    \    }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmptfnm152g.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmptfnm152g.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpd9ikx_jk.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpd9ikx_jk.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l.iter().rev() {\n        if i > max {\n            max = i;\n        }\n  \
    \  }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpkm1dstm3.rs:9:16\n  |\n9 |\
    \         if i > max {\n  |                ^^^\n  |                |\n  |    \
    \            expected `&isize`, found `isize`\n  |                help: consider\
    \ borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpkm1dstm3.rs:10:19\n\
    \   |\n7  |     let mut max = l[0];\n   |                   ---- expected due\
    \ to this value\n...\n10 |             max = i;\n   |                   ^ expected\
    \ `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n\
    10 |             max = *i;\n   |                   +\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpawtm99l2.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpawtm99l2.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max_value = l[0];\n    for\
    \ &x in l {\n        if x > max_value {\n            max_value = x;\n        }\n\
    \    }\n    max_value\n}\n\nfn main() {\n    let candidate = max_element;\n  \
    \  assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpy428s435.rs:8:9\n  |\n8 |\
    \     for &x in l {\n  |         ^^    - this expression has type `Option<isize>`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |         help:\
    \ you can probably remove the explicit borrow: `x`\n  |\n  = note:   expected\
    \ type `isize`\n          found reference `&_`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpvyo78i64.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpvyo78i64.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l.iter().rev() {\n        if *i > max {\n            max = *i;\n        }\n\
    \    }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp91pjxcut.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp91pjxcut.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max_value = l[0];\n    for\
    \ i in l.iter().rev() {\n        if i > max_value {\n            max_value = i;\n\
    \        }\n    }\n    max_value\n}\n\nfn main() {\n    let candidate = max_element;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpcp6o40ao.rs:9:16\n  |\n9 |\
    \         if i > max_value {\n  |                ^^^^^^^^^\n  |              \
    \  |\n  |                expected `&isize`, found `isize`\n  |               \
    \ help: consider borrowing here: `&max_value`\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmpcp6o40ao.rs:10:25\n   |\n7  |     let mut max_value = l[0];\n \
    \  |                         ---- expected due to this value\n...\n10 |      \
    \       max_value = i;\n   |                         ^ expected `isize`, found\
    \ `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n10 |        \
    \     max_value = *i;\n   |                         +\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpaj7dzcs1.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpaj7dzcs1.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max_elem = l[0];\n    for\
    \ i in l.iter().rev() {\n        if *i > max_elem {\n            max_elem = *i;\n\
    \        }\n    }\n    max_elem\n}\n\nfn main() {\n    let candidate = max_element;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpd_fpmot5.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpd_fpmot5.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp51swnips.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp51swnips.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpgjybppn6.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpgjybppn6.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpaumm2t43.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpaumm2t43.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max_by_key(|&x| x).unwrap()\n\
    }\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpx7wo17rb.rs:7:5\n  |\n6 |\
    \ fn max_element(l: Vec<isize>) -> isize {\n  |                              \
    \    ----- expected `isize` because of return type\n7 |     l.iter().max_by_key(|&x|\
    \ x).unwrap()\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`,\
    \ found `&isize`\n  |\nhelp: consider dereferencing the borrow\n  |\n7 |     *l.iter().max_by_key(|&x|\
    \ x).unwrap()\n  |     +\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for &x\
    \ in l {\n        if x > max {\n            max = x;\n        }\n    }\n    max\n\
    }\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp5b1wchao.rs:8:9\n  |\n8 |\
    \     for &x in l {\n  |         ^^    - this expression has type `Option<isize>`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |         help:\
    \ you can probably remove the explicit borrow: `x`\n  |\n  = note:   expected\
    \ type `isize`\n          found reference `&_`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpnyd2cm33.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpnyd2cm33.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l.iter().rev() {\n        if *i > max {\n            max = *i;\n        }\n\
    \    }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max_elem = l[0];\n    for\
    \ i in l.iter().rev() {\n        if *i > max_elem {\n            max_elem = *i;\n\
    \        }\n    }\n    max_elem\n}\n\nfn main() {\n    let candidate = max_element;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpgxzn7ppb.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpgxzn7ppb.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp7pbhja6m.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp7pbhja6m.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap()\n}\n\nfn\
    \ main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp5337ez7v.rs:7:5\n  |\n6 |\
    \ fn max_element(l: Vec<isize>) -> isize {\n  |                              \
    \    ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap()\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap()\n \
    \ |     +\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpvohqti51.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpvohqti51.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l.iter().rev() {\n        if *i > max {\n            max = *i;\n        }\n\
    \    }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpbp24ntj6.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpbp24ntj6.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpvn61155p.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpvn61155p.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max_by_key(|x| x).unwrap()\n\
    }\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpbh38grm3.rs:7:5\n  |\n6 |\
    \ fn max_element(l: Vec<isize>) -> isize {\n  |                              \
    \    ----- expected `isize` because of return type\n7 |     l.iter().max_by_key(|x|\
    \ x).unwrap()\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found\
    \ `&isize`\n  |\nhelp: consider dereferencing the borrow\n  |\n7 |     *l.iter().max_by_key(|x|\
    \ x).unwrap()\n  |     +\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmps1hfaxze.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmps1hfaxze.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l.iter().rev() {\n        if i > max {\n            max = i;\n        }\n  \
    \  }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp73zs1zt7.rs:9:16\n  |\n9 |\
    \         if i > max {\n  |                ^^^\n  |                |\n  |    \
    \            expected `&isize`, found `isize`\n  |                help: consider\
    \ borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp73zs1zt7.rs:10:19\n\
    \   |\n7  |     let mut max = l[0];\n   |                   ---- expected due\
    \ to this value\n...\n10 |             max = i;\n   |                   ^ expected\
    \ `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n\
    10 |             max = *i;\n   |                   +\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpny_d2rmz.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpny_d2rmz.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max_elem = l[0];\n    for\
    \ i in l.iter().rev() {\n        if i > max_elem {\n            max_elem = i;\n\
    \        }\n    }\n    max_elem\n}\n\nfn main() {\n    let candidate = max_element;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp8yffllob.rs:9:16\n  |\n9 |\
    \         if i > max_elem {\n  |                ^^^^^^^^\n  |                |\n\
    \  |                expected `&isize`, found `isize`\n  |                help:\
    \ consider borrowing here: `&max_elem`\n\nerror[E0308]: mismatched types\n  -->\
    \ /tmp/tmp8yffllob.rs:10:24\n   |\n7  |     let mut max_elem = l[0];\n   |   \
    \                     ---- expected due to this value\n...\n10 |             max_elem\
    \ = i;\n   |                        ^ expected `isize`, found `&isize`\n   |\n\
    help: consider dereferencing the borrow\n   |\n10 |             max_elem = *i;\n\
    \   |                        +\n\nerror: aborting due to 2 previous errors\n\n\
    For more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l.iter().rev() {\n        if i > max {\n            max = i;\n        }\n  \
    \  }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpu4kt48k0.rs:9:16\n  |\n9 |\
    \         if i > max {\n  |                ^^^\n  |                |\n  |    \
    \            expected `&isize`, found `isize`\n  |                help: consider\
    \ borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpu4kt48k0.rs:10:19\n\
    \   |\n7  |     let mut max = l[0];\n   |                   ---- expected due\
    \ to this value\n...\n10 |             max = i;\n   |                   ^ expected\
    \ `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n\
    10 |             max = *i;\n   |                   +\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmph9t42zz7.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmph9t42zz7.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp666j855t.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp666j855t.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max_value = l[0];\n    for\
    \ i in l.iter().rev() {\n        if *i > max_value {\n            max_value =\
    \ *i;\n        }\n    }\n    max_value\n}\n\nfn main() {\n    let candidate =\
    \ max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l.iter().rev() {\n        if i > max {\n            max = i;\n        }\n  \
    \  }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpdl3_wjj9.rs:9:16\n  |\n9 |\
    \         if i > max {\n  |                ^^^\n  |                |\n  |    \
    \            expected `&isize`, found `isize`\n  |                help: consider\
    \ borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpdl3_wjj9.rs:10:19\n\
    \   |\n7  |     let mut max = l[0];\n   |                   ---- expected due\
    \ to this value\n...\n10 |             max = i;\n   |                   ^ expected\
    \ `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n\
    10 |             max = *i;\n   |                   +\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp9btktk_6.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp9btktk_6.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max_value = l[0];\n    for\
    \ i in l.iter().rev() {\n        if *i > max_value {\n            max_value =\
    \ *i;\n        }\n    }\n    max_value\n}\n\nfn main() {\n    let candidate =\
    \ max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max_value = l[0];\n    for\
    \ i in l.iter().rev() {\n        if i > max_value {\n            max_value = i;\n\
    \        }\n    }\n    max_value\n}\n\nfn main() {\n    let candidate = max_element;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpkg0mpm4w.rs:9:16\n  |\n9 |\
    \         if i > max_value {\n  |                ^^^^^^^^^\n  |              \
    \  |\n  |                expected `&isize`, found `isize`\n  |               \
    \ help: consider borrowing here: `&max_value`\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmpkg0mpm4w.rs:10:25\n   |\n7  |     let mut max_value = l[0];\n \
    \  |                         ---- expected due to this value\n...\n10 |      \
    \       max_value = i;\n   |                         ^ expected `isize`, found\
    \ `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n10 |        \
    \     max_value = *i;\n   |                         +\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpd95j4dp2.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpd95j4dp2.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp_udcrwgm.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp_udcrwgm.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l.iter().rev() {\n        if i > max {\n            max = i;\n        }\n  \
    \  }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpdxpsco53.rs:9:16\n  |\n9 |\
    \         if i > max {\n  |                ^^^\n  |                |\n  |    \
    \            expected `&isize`, found `isize`\n  |                help: consider\
    \ borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpdxpsco53.rs:10:19\n\
    \   |\n7  |     let mut max = l[0];\n   |                   ---- expected due\
    \ to this value\n...\n10 |             max = i;\n   |                   ^ expected\
    \ `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n\
    10 |             max = *i;\n   |                   +\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l.iter().rev() {\n        if *i > max {\n            max = *i;\n        }\n\
    \    }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpanxsls93.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpanxsls93.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max_value = l[0];\n    for\
    \ i in l.iter().rev() {\n        if *i > max_value {\n            max_value =\
    \ *i;\n        }\n    }\n    max_value\n}\n\nfn main() {\n    let candidate =\
    \ max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l.iter().rev() {\n        if *i > max {\n            max = *i;\n        }\n\
    \    }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max_value = l[0];\n    for\
    \ i in l.iter().rev() {\n        if *i > max_value {\n            max_value =\
    \ *i;\n        }\n    }\n    max_value\n}\n\nfn main() {\n    let candidate =\
    \ max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l.iter().rev() {\n        if i > max {\n            max = i;\n        }\n  \
    \  }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp9pa8vyb6.rs:9:16\n  |\n9 |\
    \         if i > max {\n  |                ^^^\n  |                |\n  |    \
    \            expected `&isize`, found `isize`\n  |                help: consider\
    \ borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp9pa8vyb6.rs:10:19\n\
    \   |\n7  |     let mut max = l[0];\n   |                   ---- expected due\
    \ to this value\n...\n10 |             max = i;\n   |                   ^ expected\
    \ `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n\
    10 |             max = *i;\n   |                   +\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpuq28lklr.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpuq28lklr.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpo1glfcbb.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpo1glfcbb.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l.iter().rev() {\n        if *i > max {\n            max = *i;\n        }\n\
    \    }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max_by_key(|&x| x).unwrap()\n\
    }\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp99m_83ph.rs:7:5\n  |\n6 |\
    \ fn max_element(l: Vec<isize>) -> isize {\n  |                              \
    \    ----- expected `isize` because of return type\n7 |     l.iter().max_by_key(|&x|\
    \ x).unwrap()\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`,\
    \ found `&isize`\n  |\nhelp: consider dereferencing the borrow\n  |\n7 |     *l.iter().max_by_key(|&x|\
    \ x).unwrap()\n  |     +\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max_value = l[0];\n    for\
    \ &x in l {\n        if x > max_value {\n            max_value = x;\n        }\n\
    \    }\n    max_value\n}\n\nfn main() {\n    let candidate = max_element;\n  \
    \  assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpqlszuec2.rs:8:9\n  |\n8 |\
    \     for &x in l {\n  |         ^^    - this expression has type `Option<isize>`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |         help:\
    \ you can probably remove the explicit borrow: `x`\n  |\n  = note:   expected\
    \ type `isize`\n          found reference `&_`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpjuoe22a9.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpjuoe22a9.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l.iter().rev() {\n        if i > max {\n            max = i;\n        }\n  \
    \  }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp387ljxr4.rs:9:16\n  |\n9 |\
    \         if i > max {\n  |                ^^^\n  |                |\n  |    \
    \            expected `&isize`, found `isize`\n  |                help: consider\
    \ borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp387ljxr4.rs:10:19\n\
    \   |\n7  |     let mut max = l[0];\n   |                   ---- expected due\
    \ to this value\n...\n10 |             max = i;\n   |                   ^ expected\
    \ `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n\
    10 |             max = *i;\n   |                   +\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l.iter().rev() {\n        if *i > max {\n            max = *i;\n        }\n\
    \    }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l.iter().rev() {\n        if i > max {\n            max = i;\n        }\n  \
    \  }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpqbfvsob6.rs:9:16\n  |\n9 |\
    \         if i > max {\n  |                ^^^\n  |                |\n  |    \
    \            expected `&isize`, found `isize`\n  |                help: consider\
    \ borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpqbfvsob6.rs:10:19\n\
    \   |\n7  |     let mut max = l[0];\n   |                   ---- expected due\
    \ to this value\n...\n10 |             max = i;\n   |                   ^ expected\
    \ `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n\
    10 |             max = *i;\n   |                   +\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap()\n}\n\nfn\
    \ main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpxsnve5cd.rs:7:5\n  |\n6 |\
    \ fn max_element(l: Vec<isize>) -> isize {\n  |                              \
    \    ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap()\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap()\n \
    \ |     +\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp2c7dxe7f.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp2c7dxe7f.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l.iter().rev() {\n        if *i > max {\n            max = *i;\n        }\n\
    \    }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l.iter().rev() {\n        if i > max {\n            max = i;\n        }\n  \
    \  }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpv8qohkiu.rs:9:16\n  |\n9 |\
    \         if i > max {\n  |                ^^^\n  |                |\n  |    \
    \            expected `&isize`, found `isize`\n  |                help: consider\
    \ borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpv8qohkiu.rs:10:19\n\
    \   |\n7  |     let mut max = l[0];\n   |                   ---- expected due\
    \ to this value\n...\n10 |             max = i;\n   |                   ^ expected\
    \ `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n\
    10 |             max = *i;\n   |                   +\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max_value = l[0];\n    let\
    \ mut max_idx = 1;\n    for &i in l {\n        if i > max_value {\n          \
    \  max_value = i;\n            max_idx = 1;\n        }\n        if i == max_value\
    \ {\n            max_idx++;\n        }\n    }\n    max_idx\n}\n\nfn main() {\n\
    \    let candidate = max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n\
    \    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n\
    }\n"
  stdout: ''
  stderr: "error: Rust has no postfix increment operator\n  --> /tmp/tmpcxqe2txh.rs:15:20\n\
    \   |\n15 |             max_idx++;\n   |                    ^^ not a valid postfix\
    \ operator\n   |\nhelp: use `+= 1` instead\n   |\n15 |             { let tmp =\
    \ max_idx; max_idx += 1; tmp };\n   |             +++++++++++        ~~~~~~~~~~~~~~~~~~~~~\n\
    15 -             max_idx++;\n15 +             max_idx += 1;\n   | \n\nerror[E0308]:\
    \ mismatched types\n --> /tmp/tmpcxqe2txh.rs:9:9\n  |\n9 |     for &i in l {\n\
    \  |         ^^    - this expression has type `Option<isize>`\n  |         |\n\
    \  |         expected `isize`, found reference\n  |         help: you can probably\
    \ remove the explicit borrow: `i`\n  |\n  = note:   expected type `isize`\n  \
    \        found reference `&_`\n\nerror: aborting due to 2 previous errors\n\n\
    For more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l.iter().rev() {\n        if i > max {\n            max = i;\n        }\n  \
    \  }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp7udet09v.rs:9:16\n  |\n9 |\
    \         if i > max {\n  |                ^^^\n  |                |\n  |    \
    \            expected `&isize`, found `isize`\n  |                help: consider\
    \ borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp7udet09v.rs:10:19\n\
    \   |\n7  |     let mut max = l[0];\n   |                   ---- expected due\
    \ to this value\n...\n10 |             max = i;\n   |                   ^ expected\
    \ `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n\
    10 |             max = *i;\n   |                   +\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l.iter().rev() {\n        if i > max {\n            max = i;\n        }\n  \
    \  }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpfvqgji9m.rs:9:16\n  |\n9 |\
    \         if i > max {\n  |                ^^^\n  |                |\n  |    \
    \            expected `&isize`, found `isize`\n  |                help: consider\
    \ borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpfvqgji9m.rs:10:19\n\
    \   |\n7  |     let mut max = l[0];\n   |                   ---- expected due\
    \ to this value\n...\n10 |             max = i;\n   |                   ^ expected\
    \ `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n\
    10 |             max = *i;\n   |                   +\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpdgukd1d6.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpdgukd1d6.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(l.len())\n\
    }\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp8i01aooy.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(l.len())\n  |                              ^^^^^^^\
    \ expected `&isize`, found `usize`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp8i01aooy.rs:7:5\n\
    \  |\n6 | fn max_element(l: Vec<isize>) -> isize {\n  |                      \
    \            ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(l.len())\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n\
    \  |\nhelp: consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(l.len())\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l.iter().rev() {\n        if i > max {\n            max = i;\n        }\n  \
    \  }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp0br0gcdb.rs:9:16\n  |\n9 |\
    \         if i > max {\n  |                ^^^\n  |                |\n  |    \
    \            expected `&isize`, found `isize`\n  |                help: consider\
    \ borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp0br0gcdb.rs:10:19\n\
    \   |\n7  |     let mut max = l[0];\n   |                   ---- expected due\
    \ to this value\n...\n10 |             max = i;\n   |                   ^ expected\
    \ `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n\
    10 |             max = *i;\n   |                   +\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max_value = l[0];\n    for\
    \ i in l.iter().rev() {\n        if *i > max_value {\n            max_value =\
    \ *i;\n        }\n    }\n    max_value\n}\n\nfn main() {\n    let candidate =\
    \ max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpu4w4epqo.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpu4w4epqo.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpzqbnzdns.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpzqbnzdns.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(l.len())\n\
    }\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpt0i27tcz.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(l.len())\n  |                              ^^^^^^^\
    \ expected `&isize`, found `usize`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpt0i27tcz.rs:7:5\n\
    \  |\n6 | fn max_element(l: Vec<isize>) -> isize {\n  |                      \
    \            ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(l.len())\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n\
    \  |\nhelp: consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(l.len())\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp1elzgbxd.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp1elzgbxd.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max_by_key(|&x| x).unwrap()\n\
    }\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmppdblo6pm.rs:7:5\n  |\n6 |\
    \ fn max_element(l: Vec<isize>) -> isize {\n  |                              \
    \    ----- expected `isize` because of return type\n7 |     l.iter().max_by_key(|&x|\
    \ x).unwrap()\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`,\
    \ found `&isize`\n  |\nhelp: consider dereferencing the borrow\n  |\n7 |     *l.iter().max_by_key(|&x|\
    \ x).unwrap()\n  |     +\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l.iter().rev() {\n        if *i > max {\n            max = *i;\n        }\n\
    \    }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max_value = l[0];\n    for\
    \ i in l.iter().rev() {\n        if i > max_value {\n            max_value = i;\n\
    \        }\n    }\n    max_value\n}\n\nfn main() {\n    let candidate = max_element;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp6_clh75h.rs:9:16\n  |\n9 |\
    \         if i > max_value {\n  |                ^^^^^^^^^\n  |              \
    \  |\n  |                expected `&isize`, found `isize`\n  |               \
    \ help: consider borrowing here: `&max_value`\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmp6_clh75h.rs:10:25\n   |\n7  |     let mut max_value = l[0];\n \
    \  |                         ---- expected due to this value\n...\n10 |      \
    \       max_value = i;\n   |                         ^ expected `isize`, found\
    \ `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n10 |        \
    \     max_value = *i;\n   |                         +\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l.iter().rev() {\n        if i > max {\n            max = i;\n        }\n  \
    \  }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp5mrz_o_9.rs:9:16\n  |\n9 |\
    \         if i > max {\n  |                ^^^\n  |                |\n  |    \
    \            expected `&isize`, found `isize`\n  |                help: consider\
    \ borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp5mrz_o_9.rs:10:19\n\
    \   |\n7  |     let mut max = l[0];\n   |                   ---- expected due\
    \ to this value\n...\n10 |             max = i;\n   |                   ^ expected\
    \ `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n\
    10 |             max = *i;\n   |                   +\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp_h79l_9r.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp_h79l_9r.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpphm836jk.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpphm836jk.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpbprqe0ua.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpbprqe0ua.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l.iter().rev() {\n        if *i > max {\n            max = *i;\n        }\n\
    \    }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpqvkpyfx8.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpqvkpyfx8.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp71n4lwju.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp71n4lwju.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpb5yn4_i8.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpb5yn4_i8.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpk29y41cd.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpk29y41cd.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpaue6_3c1.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpaue6_3c1.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp738i8jiq.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp738i8jiq.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(l.len())\n\
    }\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpu88dla24.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(l.len())\n  |                              ^^^^^^^\
    \ expected `&isize`, found `usize`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpu88dla24.rs:7:5\n\
    \  |\n6 | fn max_element(l: Vec<isize>) -> isize {\n  |                      \
    \            ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(l.len())\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n\
    \  |\nhelp: consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(l.len())\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpeuznb5w8.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpeuznb5w8.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l.iter().rev() {\n        if *i > max {\n            max = *i;\n        }\n\
    \    }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for &x\
    \ in l {\n        if x > max {\n            max = x;\n        }\n    }\n    max\n\
    }\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpkr8pvjmy.rs:8:9\n  |\n8 |\
    \     for &x in l {\n  |         ^^    - this expression has type `Option<isize>`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |         help:\
    \ you can probably remove the explicit borrow: `x`\n  |\n  = note:   expected\
    \ type `isize`\n          found reference `&_`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpnb91nlug.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpnb91nlug.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp_v0n9wt5.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp_v0n9wt5.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l.iter().rev() {\n        if i > max {\n            max = i;\n        }\n  \
    \  }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpo217p61h.rs:9:16\n  |\n9 |\
    \         if i > max {\n  |                ^^^\n  |                |\n  |    \
    \            expected `&isize`, found `isize`\n  |                help: consider\
    \ borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpo217p61h.rs:10:19\n\
    \   |\n7  |     let mut max = l[0];\n   |                   ---- expected due\
    \ to this value\n...\n10 |             max = i;\n   |                   ^ expected\
    \ `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n\
    10 |             max = *i;\n   |                   +\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max_val = l[0];\n    for\
    \ &x in l {\n        if x > max_val {\n            max_val = x;\n        }\n \
    \   }\n    max_val\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpu1kv9zwp.rs:8:9\n  |\n8 |\
    \     for &x in l {\n  |         ^^    - this expression has type `Option<isize>`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |         help:\
    \ you can probably remove the explicit borrow: `x`\n  |\n  = note:   expected\
    \ type `isize`\n          found reference `&_`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp8klhee0b.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp8klhee0b.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap()\n}\n\nfn\
    \ main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp0xxhtas2.rs:7:5\n  |\n6 |\
    \ fn max_element(l: Vec<isize>) -> isize {\n  |                              \
    \    ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap()\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap()\n \
    \ |     +\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l.iter().rev() {\n        if *i > max {\n            max = *i;\n        }\n\
    \    }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap()\n}\n\nfn\
    \ main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpkbyj7pu5.rs:7:5\n  |\n6 |\
    \ fn max_element(l: Vec<isize>) -> isize {\n  |                              \
    \    ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap()\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap()\n \
    \ |     +\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l.iter().rev() {\n        if *i > max {\n            max = *i;\n        }\n\
    \    }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp9qw5849i.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp9qw5849i.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp6cm0gv1c.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp6cm0gv1c.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l.iter().rev() {\n        if i > max {\n            max = i;\n        }\n  \
    \  }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpckzfi74z.rs:9:16\n  |\n9 |\
    \         if i > max {\n  |                ^^^\n  |                |\n  |    \
    \            expected `&isize`, found `isize`\n  |                help: consider\
    \ borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpckzfi74z.rs:10:19\n\
    \   |\n7  |     let mut max = l[0];\n   |                   ---- expected due\
    \ to this value\n...\n10 |             max = i;\n   |                   ^ expected\
    \ `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n\
    10 |             max = *i;\n   |                   +\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max_value = l[0];\n    for\
    \ i in l.iter().rev() {\n        if i > max_value {\n            max_value = i;\n\
    \        }\n    }\n    max_value\n}\n\nfn main() {\n    let candidate = max_element;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpcvmgleih.rs:9:16\n  |\n9 |\
    \         if i > max_value {\n  |                ^^^^^^^^^\n  |              \
    \  |\n  |                expected `&isize`, found `isize`\n  |               \
    \ help: consider borrowing here: `&max_value`\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmpcvmgleih.rs:10:25\n   |\n7  |     let mut max_value = l[0];\n \
    \  |                         ---- expected due to this value\n...\n10 |      \
    \       max_value = i;\n   |                         ^ expected `isize`, found\
    \ `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n10 |        \
    \     max_value = *i;\n   |                         +\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max_elem = l[0];\n    for\
    \ i in l.iter().rev() {\n        if *i > max_elem {\n            max_elem = *i;\n\
    \        }\n    }\n    max_elem\n}\n\nfn main() {\n    let candidate = max_element;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l.iter().rev() {\n        if i > max {\n            max = i;\n        }\n  \
    \  }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpv90ynraj.rs:9:16\n  |\n9 |\
    \         if i > max {\n  |                ^^^\n  |                |\n  |    \
    \            expected `&isize`, found `isize`\n  |                help: consider\
    \ borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpv90ynraj.rs:10:19\n\
    \   |\n7  |     let mut max = l[0];\n   |                   ---- expected due\
    \ to this value\n...\n10 |             max = i;\n   |                   ^ expected\
    \ `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n\
    10 |             max = *i;\n   |                   +\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l.iter().rev() {\n        if *i > max {\n            max = *i;\n        }\n\
    \    }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp8gurok29.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp8gurok29.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l.iter().rev() {\n        if *i > max {\n            max = *i;\n        }\n\
    \    }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for &x\
    \ in l {\n        if x > max {\n            max = x;\n        }\n    }\n    max\n\
    }\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpg1cpklv8.rs:8:9\n  |\n8 |\
    \     for &x in l {\n  |         ^^    - this expression has type `Option<isize>`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |         help:\
    \ you can probably remove the explicit borrow: `x`\n  |\n  = note:   expected\
    \ type `isize`\n          found reference `&_`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max_val = l[0];\n    for\
    \ i in l.iter().rev() {\n        if i > max_val {\n            max_val = i;\n\
    \        }\n    }\n    max_val\n}\n\nfn main() {\n    let candidate = max_element;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpl1srphma.rs:9:16\n  |\n9 |\
    \         if i > max_val {\n  |                ^^^^^^^\n  |                |\n\
    \  |                expected `&isize`, found `isize`\n  |                help:\
    \ consider borrowing here: `&max_val`\n\nerror[E0308]: mismatched types\n  -->\
    \ /tmp/tmpl1srphma.rs:10:23\n   |\n7  |     let mut max_val = l[0];\n   |    \
    \                   ---- expected due to this value\n...\n10 |             max_val\
    \ = i;\n   |                       ^ expected `isize`, found `&isize`\n   |\n\
    help: consider dereferencing the borrow\n   |\n10 |             max_val = *i;\n\
    \   |                       +\n\nerror: aborting due to 2 previous errors\n\n\
    For more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l.iter().rev() {\n        if i > max {\n            max = i;\n        }\n  \
    \  }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp85538cgc.rs:9:16\n  |\n9 |\
    \         if i > max {\n  |                ^^^\n  |                |\n  |    \
    \            expected `&isize`, found `isize`\n  |                help: consider\
    \ borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp85538cgc.rs:10:19\n\
    \   |\n7  |     let mut max = l[0];\n   |                   ---- expected due\
    \ to this value\n...\n10 |             max = i;\n   |                   ^ expected\
    \ `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n\
    10 |             max = *i;\n   |                   +\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l.iter().rev() {\n        if i > max {\n            max = i;\n        }\n  \
    \  }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmprqjqm6uy.rs:9:16\n  |\n9 |\
    \         if i > max {\n  |                ^^^\n  |                |\n  |    \
    \            expected `&isize`, found `isize`\n  |                help: consider\
    \ borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmprqjqm6uy.rs:10:19\n\
    \   |\n7  |     let mut max = l[0];\n   |                   ---- expected due\
    \ to this value\n...\n10 |             max = i;\n   |                   ^ expected\
    \ `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n\
    10 |             max = *i;\n   |                   +\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpzn32rxuq.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpzn32rxuq.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap()\n}\n\nfn\
    \ main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpo1se37ms.rs:7:5\n  |\n6 |\
    \ fn max_element(l: Vec<isize>) -> isize {\n  |                              \
    \    ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap()\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap()\n \
    \ |     +\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max_value = l[0];\n    for\
    \ i in l.iter().rev() {\n        if i > max_value {\n            max_value = i;\n\
    \        }\n    }\n    max_value\n}\n\nfn main() {\n    let candidate = max_element;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpd4hyyuf8.rs:9:16\n  |\n9 |\
    \         if i > max_value {\n  |                ^^^^^^^^^\n  |              \
    \  |\n  |                expected `&isize`, found `isize`\n  |               \
    \ help: consider borrowing here: `&max_value`\n\nerror[E0308]: mismatched types\n\
    \  --> /tmp/tmpd4hyyuf8.rs:10:25\n   |\n7  |     let mut max_value = l[0];\n \
    \  |                         ---- expected due to this value\n...\n10 |      \
    \       max_value = i;\n   |                         ^ expected `isize`, found\
    \ `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n10 |        \
    \     max_value = *i;\n   |                         +\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmphfsaoxr9.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmphfsaoxr9.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for &x\
    \ in l {\n        if x > max {\n            max = x;\n        }\n    }\n    max\n\
    }\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp1a5qfbt7.rs:8:9\n  |\n8 |\
    \     for &x in l {\n  |         ^^    - this expression has type `Option<isize>`\n\
    \  |         |\n  |         expected `isize`, found reference\n  |         help:\
    \ you can probably remove the explicit borrow: `x`\n  |\n  = note:   expected\
    \ type `isize`\n          found reference `&_`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpt7imtcp_.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpt7imtcp_.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max_value = l[0];\n    for\
    \ i in l.iter().rev() {\n        if *i > max_value {\n            max_value =\
    \ *i;\n        }\n    }\n    max_value\n}\n\nfn main() {\n    let candidate =\
    \ max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp6j4ldnfp.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmp6j4ldnfp.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l.iter().rev() {\n        if i > max {\n            max = i;\n        }\n  \
    \  }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpcjm4w212.rs:9:16\n  |\n9 |\
    \         if i > max {\n  |                ^^^\n  |                |\n  |    \
    \            expected `&isize`, found `isize`\n  |                help: consider\
    \ borrowing here: `&max`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpcjm4w212.rs:10:19\n\
    \   |\n7  |     let mut max = l[0];\n   |                   ---- expected due\
    \ to this value\n...\n10 |             max = i;\n   |                   ^ expected\
    \ `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n\
    10 |             max = *i;\n   |                   +\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpdbv8fb4h.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpdbv8fb4h.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max = l[0];\n    for i in\
    \ l.iter().rev() {\n        if *i > max {\n            max = *i;\n        }\n\
    \    }\n    max\n}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max_val = l[0];\n    for\
    \ i in l.iter().rev() {\n        if *i > max_val {\n            max_val = *i;\n\
    \        }\n    }\n    max_val\n}\n\nfn main() {\n    let candidate = max_element;\n\
    \    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    l.iter().max().unwrap_or(0)\n}\n\
    \nfn main() {\n    let candidate = max_element;\n    assert_eq!(candidate(vec![1,\
    \ 2, 3]), 3);\n    assert_eq!(candidate(vec![5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10]), 124);\n}\n"
  stdout: ''
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpvm1hu6i4.rs:7:30\n  |\n7 |\
    \     l.iter().max().unwrap_or(0)\n  |                              ^\n  |   \
    \                           |\n  |                              expected `&isize`,\
    \ found integer\n  |                              help: consider borrowing here:\
    \ `&0`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpvm1hu6i4.rs:7:5\n  |\n\
    6 | fn max_element(l: Vec<isize>) -> isize {\n  |                            \
    \      ----- expected `isize` because of return type\n7 |     l.iter().max().unwrap_or(0)\n\
    \  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n7 |     *l.iter().max().unwrap_or(0)\n\
    \  |     +\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Return maximum element in the list.\n/// >>> max_element([1, 2, 3])\n\
    /// 3\n/// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
    fn max_element(l: Vec<isize>) -> isize {\n    let mut max_value = l[0];\n    for\
    \ i in l.iter().rev() {\n        if *i > max_value {\n            max_value =\
    \ *i;\n        }\n    }\n    max_value\n}\n\nfn main() {\n    let candidate =\
    \ max_element;\n    assert_eq!(candidate(vec![1, 2, 3]), 3);\n    assert_eq!(candidate(vec![5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]), 124);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK

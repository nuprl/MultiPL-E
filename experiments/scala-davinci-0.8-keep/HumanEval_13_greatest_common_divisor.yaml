name: HumanEval_13_greatest_common_divisor
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Return a greatest common divisor of two integers a and b\n    // >>> greatest_common_divisor(3,\
  \ 5)\n    // 1\n    // >>> greatest_common_divisor(25, 15)\n    // 5\n    def greatestCommonDivisor(a\
  \ : Long, b : Long) : Long = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
  \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n  \
  \  assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
  \ (60l)) == (12l));\n    }\n\n}\n"
completions: ['        if (b == 0) a else greatestCommonDivisor(b, a % b)', '        if
    (b == 0) a else greatestCommonDivisor(b, a % b)', "        // Use Euclid's algorithm\n\
    \        var c = a\n        var d = b\n        while (c != 0) {\n            val\
    \ temp = c\n            c = d % c\n            d = temp\n        }\n        return\
    \ d", "        // The Euclidean algorithm\n        // If a > b, then gcd(a, b)\
    \ = gcd(b, a mod b)\n        // Repeat until b = 0, then return a\n        if\
    \ (a < b) return greatestCommonDivisor(b, a)\n        var bb = b\n        while\
    \ (bb != 0) {\n            val aa = a % bb\n            a = bb\n            bb\
    \ = aa\n        }\n        return a", '        if (b == 0) a else greatestCommonDivisor(b,
    a % b)', '        if (b == 0) a else greatestCommonDivisor(b, a % b)', '        if
    (b == 0) a else greatestCommonDivisor(b, a % b)', "        if (b == 0) return\
    \ a\n        return greatestCommonDivisor(b, a % b)", "        if (b == 0) return\
    \ a\n        return greatestCommonDivisor(b, a % b)", '        if (b == 0) a else
    greatestCommonDivisor(b, a % b)', '        if (b == 0) a else greatestCommonDivisor(b,
    a % b)', "        var x = max(a, b)\n        var y = min(a, b)\n        while\
    \ (y != 0) {\n            var z = x % y\n            x = y\n            y = z\n\
    \        }\n        return x", '        a * b / BigInt(a).gcd(b).toLong', '        if
    (b == 0) a else greatestCommonDivisor(b, a % b)', "        var aa = a\n      \
    \  var bb = b\n        if (a == 0) b\n        else if (b == 0) a\n        else\
    \ {\n            var tmp = aa % bb\n            while (tmp != 0) {\n         \
    \       aa = bb\n                bb = tmp\n                tmp = aa % bb\n   \
    \         }\n            bb\n        }", "        if (b == 0) {\n            a\n\
    \        } else {\n            greatestCommonDivisor(b, a % b)\n        }", " \
    \       if (b == 0) {\n            a\n        } else {\n            greatestCommonDivisor(b,\
    \ a % b)\n        }", '        return gcd(a, b)', "        var a1 = a\n      \
    \  var b1 = b\n        while (b1 != 0) {\n            val c = a1 % b1\n      \
    \      a1 = b1\n            b1 = c\n        }\n        a1", '        if (b ==
    0) a else greatestCommonDivisor(b, a % b)']
stop_tokens:
- "\n    }\n"

name: HumanEval_23_strlen
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Return length of given string\n    // >>> strlen('')\n    // 0\n    // >>>\
  \ strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) ==\
  \ (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
  )) == (9l));\n    }\n\n}\n"
completions: ["        var result : Long = 0\n        for (char <- string) {\n   \
    \         result += 1\n        }\n        return result", "        val n = string.length\n\
    \        return n", '        string.length.toLong', "        // TODO\n       \
    \ 1", '        string.length', "        // Code here\n        string.length",
  "        var len = 0\n        for (i <- 0 until string.length) len += 1\n      \
    \  len", "        val len = string.length\n        return len", '        return
    string.length', "        var cnt = 0\n        for (i <- 0 until string.length)\
    \ cnt += 1\n        cnt", '        string.size', '        string.length', "  \
    \      var length = 0\n        for (c <- string) {\n            length += 1\n\
    \        }\n        length", "        var s = string.toList\n        var c = 0\n\
    \        for (c <- 0 to string.length - 1) {}\n        return c", "        val\
    \ last : Long = string.length-1\n        var i : Long = 0\n        var sum : Long\
    \ = 0\n        while (i <= last) {\n            sum += 1\n            i += 1\n\
    \        }\n        return sum", '        return string.length', "        var\
    \ length = 0\n        for (char <- string) length += 1\n        length", "   \
    \     if (string.length == 0) {\n            return 0\n        }\n        return\
    \ string.length.toLong", "        if (string.length == 0) return 0\n        var\
    \ l : Long = 0\n        for (c <- string) l += 1\n        return l", '      string.length']
stop_tokens:
- "\n    }\n"

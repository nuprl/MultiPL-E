{
  "language": "scala",
  "name": "HumanEval_55_fib",
  "results": [
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long) : Long = {\n        var memo = scala.collection.mutable.Map[Long, Long]()\n        def fib(n : Long) : Long = {\n            if (n <= 2) 1\n            else if (memo.contains(n)) memo(n)\n            else {\n                val r = fib(n - 1) + fib(n - 2)\n                memo += (n -> r)\n                r\n            }\n        }\n        fib(n)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659820891
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long) : Long = {\n        if (n == 1) return 1\n        if (n == 2) return 1\n        var fib1 = 1L\n        var fib2 = 1L\n        var fibn = 0L\n        for (i <- 3 to n) {\n            fibn = fib1 + fib2\n            fib1 = fib2\n            fib2 = fibn\n        }\n        return fibn\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvropx337.scala:17:23 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                       Found:    (n : Long)\n\u001b[31m   |\u001b[0m                       Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659820890
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long) : Long = {\n        if (n == 1) 1\n        else if (n == 2) 1\n        else {\n            var a = 1l\n            var b = 1l\n            for (i <- 3 to n) {\n                val c = a + b\n                a = b\n                b = c\n            }\n            b\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp407casvh.scala:17:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (n : Long)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659820890
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long) : Long = {\n        if (n == 1) return 1\n        else if (n == 2) return 1\n        else return fib(n - 1) + fib(n - 2)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659820890
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long) : Long = {\n        var a = 0L\n        var b = 1L\n        var i = 0L\n        while (i < n) {\n            val c = a + b\n            a = b\n            b = c\n            i += 1\n        }\n        a\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659820890
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long) : Long = {\n        if (n == 1) 1 else if (n == 2) 1 else fib(n - 1) + fib(n - 2)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659820890
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long) : Long = {\n        var a = 1L\n        var b = 1L\n        for (i <- 3 to n) {\n            val c = a + b\n            a = b\n            b = c\n        }\n        b\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpra9cixwu.scala:14:23 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                       Found:    (n : Long)\n\u001b[31m   |\u001b[0m                       Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659820890
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long) : Long = {\n        var a : Long = 0\n        var b : Long = 1\n        var i : Long = 0\n        while (i < n) {\n            val c : Long = a + b\n            a = b\n            b = c\n            i += 1\n        }\n        return a\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659820890
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long) : Long = {\n        var a = 1l\n        var b = 1l\n        var i = 1l\n        while (i < n) {\n            val t = a + b\n            a = b\n            b = t\n            i += 1\n        }\n        b\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "status": "Exception",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpmi7ms93k.scala:24)\n\tat Problem.main(tmpmi7ms93k.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "stdout": "",
      "timestamp": 1659820890
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long) : Long = {\n        var a : Long = 0\n        var b : Long = 1\n        for (i <- 1 until n) {\n            val c = a + b\n            a = b\n            b = c\n        }\n        return b\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqcq1wui2.scala:14:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659820890
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long) : Long = {\n        var a = 0L\n        var b = 1L\n        var i = 0L\n        while (i < n) {\n            val c = a + b\n            a = b\n            b = c\n            i += 1\n        }\n        a\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659820890
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long) : Long = {\n    \tif (n == 1) 1\n    \telse if (n == 2) 1\n    \telse if (n % 2 == 0) pow(fib((n / 2) + 1), 2) - pow(fib(n / 2), 2)\n    \telse pow(fib((n + 1) / 2), 2) + pow(fib((n - 1) / 2), 2)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvvg59b80.scala:14:29 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    \t\u001b[33melse\u001b[0m \u001b[33mif\u001b[0m (n % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m) pow(fib((n / \u001b[31m2\u001b[0m) + \u001b[31m1\u001b[0m), \u001b[31m2\u001b[0m) - pow(fib(n / \u001b[31m2\u001b[0m), \u001b[31m2\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m    \t                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    \t                     Found:    Double\n\u001b[31m   |\u001b[0m    \t                     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvvg59b80.scala:15:13 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    \t\u001b[33melse\u001b[0m pow(fib((n + \u001b[31m1\u001b[0m) / \u001b[31m2\u001b[0m), \u001b[31m2\u001b[0m) + pow(fib((n - \u001b[31m1\u001b[0m) / \u001b[31m2\u001b[0m), \u001b[31m2\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m    \t     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    \t     Found:    Double\n\u001b[31m   |\u001b[0m    \t     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "stdout": "",
      "timestamp": 1659820890
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long) : Long = {\n        def add_fib(m : Long, a : Long, b : Long) : Long = {\n            if (m == 0) a\n            else add_fib(m - 1, b, a + b)\n        }\n        add_fib(n, 0, 1)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659820890
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long) : Long = {\n        if (n == 1) 1\n        else if (n == 2) 1\n        else fib(n - 1) + fib(n - 2)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659820890
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long) : Long = {\n        if (n == 1) return 1\n        if (n == 2) return 1\n        var prev1 = 1L\n        var prev2 = 1L\n        var cnt = 2L\n        while (cnt < n) {\n            var next = prev1 + prev2\n            prev1 = prev2\n            prev2 = next\n            cnt += 1\n        }\n        return prev2\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659820890
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long) : Long = {\n        if (n <= 2) 1\n        else fib(n - 1) + fib(n - 2)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659820890
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long) : Long = {\n        // >>> fib(8)\n        // 21\n        // >>> fib(9)\n        // 34\n        // >>> fib(10)\n        // 55\n        // >>> fib(11)\n        // 89\n        // >>> fib(12)\n        // 144\n        // >>> fib(13)\n        // 233\n        // >>> fib(14)\n        // 377\n        // >>> fib(15)\n        // 610\n        // >>> fib(16)\n        // 987\n        // >>> fib(17)\n        // 1597\n        // >>> fib(18)\n        // 2584\n        // >>> fib(19)\n        // 4181\n        // >>> fib(20)\n        // 6765\n        // >>> fib(21)\n        // 10946\n        // >>> fib(22)\n        // 17711\n        // >>> fib(23)\n        // 28657\n        // >>> fib(24)\n        // 46368\n        // >>> fib(25)\n        // 75025\n        // >>> fib(26)\n        // 121393\n        // >>> fib(27)\n        // 196418\n        // >>> fib(28)\n        // 317811\n        // >>> fib(29)\n        // 514229\n        // >>> fib(30)\n        // 832040\n        // >>> fib(31)\n        // 1346269\n        // >>> fib(32)\n        // 2178309\n        // >>> fib(33)\n        // 3524578\n        // >>> fib(34)\n        // 5702887\n        // >>> fib(35)\n        // 9227465\n        // >>> fib(36)\n        // 14930352\n        // >>> fib(37)\n        // 24157817\n        // >>> fib(38)\n        // 39088169\n        // >>> fib(39)\n        // 63245986\n        // >>> fib(40)\n        // 102334155\n        // >>> fib(41)\n        // 165580141\n        // >>> fib(42)\n        // 267914296\n        // >>> fib(43)\n        // 433494437\n        // >>> fib(44)\n        // 701408733\n        // >>> fib(45)\n        // 11349\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6wvlcoal.scala:11:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mfib\u001b[0m(\u001b[36mn\u001b[0m : \u001b[35mLong\u001b[0m) : \u001b[35mLong\u001b[0m = {\n\u001b[31m\u001b[31m   |\u001b[0m                               ^\u001b[0m\n\u001b[31m   |\u001b[0m                               Found:    Unit\n\u001b[31m   |\u001b[0m                               Required: Long\n\u001b[31m12 |\u001b[0m        \u001b[34m// >>> fib(8)\u001b[0m\n\u001b[31m13 |\u001b[0m        \u001b[34m// 21\u001b[0m\n\u001b[31m14 |\u001b[0m        \u001b[34m// >>> fib(9)\u001b[0m\n\u001b[31m15 |\u001b[0m        \u001b[34m// 34\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[34m// >>> fib(10)\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[34m// 55\u001b[0m\n\u001b[31m18 |\u001b[0m        \u001b[34m// >>> fib(11)\u001b[0m\n\u001b[31m19 |\u001b[0m        \u001b[34m// 89\u001b[0m\n\u001b[31m20 |\u001b[0m        \u001b[34m// >>> fib(12)\u001b[0m\n\u001b[31m21 |\u001b[0m        \u001b[34m// 144\u001b[0m\n\u001b[31m22 |\u001b[0m        \u001b[34m// >>> fib(13)\u001b[0m\n\u001b[31m23 |\u001b[0m        \u001b[34m// 233\u001b[0m\n\u001b[31m24 |\u001b[0m        \u001b[34m// >>> fib(14)\u001b[0m\n\u001b[31m25 |\u001b[0m        \u001b[34m// 377\u001b[0m\n\u001b[31m26 |\u001b[0m        \u001b[34m// >>> fib(15)\u001b[0m\n\u001b[31m27 |\u001b[0m        \u001b[34m// 610\u001b[0m\n\u001b[31m28 |\u001b[0m        \u001b[34m// >>> fib(16)\u001b[0m\n\u001b[31m29 |\u001b[0m        \u001b[34m// 987\u001b[0m\n\u001b[31m30 |\u001b[0m        \u001b[34m// >>> fib(17)\u001b[0m\n\u001b[31m31 |\u001b[0m        \u001b[34m// 1597\u001b[0m\n\u001b[31m32 |\u001b[0m        \u001b[34m// >>> fib(18)\u001b[0m\n\u001b[31m33 |\u001b[0m        \u001b[34m// 2584\u001b[0m\n\u001b[31m34 |\u001b[0m        \u001b[34m// >>> fib(19)\u001b[0m\n\u001b[31m35 |\u001b[0m        \u001b[34m// 4181\u001b[0m\n\u001b[31m36 |\u001b[0m        \u001b[34m// >>> fib(20)\u001b[0m\n\u001b[31m37 |\u001b[0m        \u001b[34m// 6765\u001b[0m\n\u001b[31m38 |\u001b[0m        \u001b[34m// >>> fib(21)\u001b[0m\n\u001b[31m39 |\u001b[0m        \u001b[34m// 10946\u001b[0m\n\u001b[31m40 |\u001b[0m        \u001b[34m// >>> fib(22)\u001b[0m\n\u001b[31m41 |\u001b[0m        \u001b[34m// 17711\u001b[0m\n\u001b[31m42 |\u001b[0m        \u001b[34m// >>> fib(23)\u001b[0m\n\u001b[31m43 |\u001b[0m        \u001b[34m// 28657\u001b[0m\n\u001b[31m44 |\u001b[0m        \u001b[34m// >>> fib(24)\u001b[0m\n\u001b[31m45 |\u001b[0m        \u001b[34m// 46368\u001b[0m\n\u001b[31m46 |\u001b[0m        \u001b[34m// >>> fib(25)\u001b[0m\n\u001b[31m47 |\u001b[0m        \u001b[34m// 75025\u001b[0m\n\u001b[31m48 |\u001b[0m        \u001b[34m// >>> fib(26)\u001b[0m\n\u001b[31m49 |\u001b[0m        \u001b[34m// 121393\u001b[0m\n\u001b[31m50 |\u001b[0m        \u001b[34m// >>> fib(27)\u001b[0m\n\u001b[31m51 |\u001b[0m        \u001b[34m// 196418\u001b[0m\n\u001b[31m52 |\u001b[0m        \u001b[34m// >>",
      "stdout": "",
      "timestamp": 1659820890
    },
    {
      "exit_code": 1,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long) : Long = {\n        if (n <= 1) return n\n        fib_cache(n)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "status": "SyntaxError",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjhxpuh9k.scala:13:8 -------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m        fib_cache(n)\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Not found: fib_cache\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "stdout": "",
      "timestamp": 1659820887
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long) : Long = {\n        n match {\n            case 0 => 0\n            case 1 => 1\n            case _ => {\n                var fibs = ArrayBuffer(0L, 1L)\n                for (i <- 2 to n.toInt) {\n                    fibs += fibs(i - 1) + fibs(i - 2)\n                }\n                fibs(n.toInt)\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "status": "OK",
      "stderr": "",
      "stdout": "",
      "timestamp": 1659820891
    },
    {
      "exit_code": 0,
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n    // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    def fib(n : Long) : Long = {\n        if (n <= 1)\n            1\n        else\n            fib(n - 1) + fib(n - 2)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n",
      "status": "Exception",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp2hly1rdb.scala:18)\n\tat Problem.main(tmp2hly1rdb.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "stdout": "",
      "timestamp": 1659820890
    }
  ]
}
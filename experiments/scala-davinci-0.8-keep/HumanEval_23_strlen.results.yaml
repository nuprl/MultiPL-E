language: scala
name: HumanEval_23_strlen
results:
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        var result : Long = 0\n        for (char <- string) {\n            result\
    \ += 1\n        }\n        return result\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659820895
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val n = string.length\n        return n\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659820895
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        string.length.toLong\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n \
    \   assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659820895
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        // TODO\n        1\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n   \
    \ assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp3i_tkt3v.scala:14)\n\tat Problem.main(tmp3i_tkt3v.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659820895
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        string.length\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659820895
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        // Code here\n        string.length\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659820895
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        var len = 0\n        for (i <- 0 until string.length) len += 1\n    \
    \    len\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\"\
    )) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659820895
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val len = string.length\n        return len\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"\
    x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659820895
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        return string.length\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n \
    \   assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659820895
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        var cnt = 0\n        for (i <- 0 until string.length) cnt += 1\n    \
    \    cnt\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\"\
    )) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659820895
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        string.size\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659820895
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        string.length\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659820895
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        var length = 0\n        for (c <- string) {\n            length += 1\n\
    \        }\n        length\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"\
    asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659820895
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        var s = string.toList\n        var c = 0\n        for (c <- 0 to string.length\
    \ - 1) {}\n        return c\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n   \
    \ assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpsfqemzhz.scala:17)\n\tat Problem.main(tmpsfqemzhz.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659820895
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        val last : Long = string.length-1\n        var i : Long = 0\n       \
    \ var sum : Long = 0\n        while (i <= last) {\n            sum += 1\n    \
    \        i += 1\n        }\n        return sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659820895
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        return string.length\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n \
    \   assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659820895
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        var length = 0\n        for (char <- string) length += 1\n        length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\")) == (0l));\n\
    \    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\")) == (9l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659820896
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        if (string.length == 0) {\n            return 0\n        }\n        return\
    \ string.length.toLong\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659820895
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \        if (string.length == 0) return 0\n        var l : Long = 0\n        for\
    \ (c <- string) l += 1\n        return l\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(strlen((\"\")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n\
    \    assert(strlen((\"asdasnakj\")) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659820895
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return length of given string\n    // >>> strlen('')\n    // 0\n \
    \   // >>> strlen('abc')\n    // 3\n    def strlen(string : String) : Long = {\n\
    \      string.length\n    }\n    def main(args: Array[String]) = {\n    assert(strlen((\"\
    \")) == (0l));\n    assert(strlen((\"x\")) == (1l));\n    assert(strlen((\"asdasnakj\"\
    )) == (9l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659820895

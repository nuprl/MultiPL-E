name: HumanEval_51_remove_vowels
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // remove_vowels is a function that takes string and returns string without\
  \ vowels.\n    // >>> remove_vowels('')\n    // ''\n    // >>> remove_vowels('abcdef')\n\
  \    // 'bcdf'\n    // >>> remove_vowels('aaaaa')\n    // ''\n    // >>> remove_vowels('aaBAA')\n\
  \    // 'B'\n    // >>> remove_vowels('zbcd')\n    // 'zbcd'\n    def removeVowels(text\
  \ : String) : String = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\"\
  )).equals((\"\")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"\
  bcdf\\nghjklm\")));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n\
  \    assert(removeVowels((\"eeeee\")).equals((\"\")));\n    assert(removeVowels((\"\
  acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\"\
  )));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
completions: ["        var result = text\n        for (c <- 'a' to 'z') {\n      \
    \      if (result.contains(c)) result = result.replace(c.toString, \"\")\n   \
    \     }\n        for (c <- 'A' to 'Z') {\n            if (result.contains(c))\
    \ result = result.replace(c.toString, \"\")\n        }\n        return result",
  "        // Fill in the code.\n        text.filter(s => s.toLower != 'a' && s.toLower\
    \ != 'e' && s.toLower != 'i' && s.toLower != 'o' && s.toLower != 'u')", "    \
    \    val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val res = new StringBuilder(text.length)\n\
    \        for (c <- text) {\n            if (!vowels.contains(c)) res += c\n  \
    \      }\n        res.toString", "        var vowels = List('a', 'e', 'i', 'o',\
    \ 'u', 'A', 'E', 'I', 'O', 'U')\n        var buffer = new StringBuilder()\n  \
    \      for (c <- text) {\n            if (!vowels.contains(c)) {\n           \
    \     buffer.append(c)\n            }\n        }\n        return buffer.toString()",
  "        var s = text.filter(c => !c.isLetter || \"aeiouAEIOU\".contains(c))\n \
    \       s", "        var result = \"\"\n        for (c <- text) if (\"aeiouAEIOU\"\
    .indexOf(c) == -1) result += c\n        return result", "        var sb = new\
    \ StringBuilder\n        for (c <- text) {\n            if (c != 'a' && c != 'e'\
    \ && c != 'i' && c != 'o' && c != 'u') sb.append(c)\n        }\n        sb.toString",
  "        if (text.length == 0) \"\"\n        else if (text.length == 1) if (\"aeiouAEIOU\"\
    .contains(text(0))) \"\" else text\n        else if (\"aeiouAEIOU\".contains(text(0)))\
    \ removeVowels(text.substring(1))\n        else text(0) + removeVowels(text.substring(1))",
  "      val vowels = \"aeiou\"\n      var result = \"\"\n      for (c <- text) {\n\
    \        if (!vowels.contains(c)) {\n          result += c\n        }\n      }\n\
    \      result", '        return text.replaceAll("[aeiouAEIOU]", "")', "      \
    \  // Write code here\n        if (text.length == 0) {\n            return \"\"\
    \n        }\n        else {\n            if (text.toLowerCase()(0) == 'a' || text.toLowerCase()(0)\
    \ == 'e' || text.toLowerCase()(0) == 'i' || text.toLowerCase()(0) == 'o' || text.toLowerCase()(0)\
    \ == 'u') {\n                return removeVowels(text.tail)\n            }\n \
    \           else {\n                return text(0) + removeVowels(text.tail)\n\
    \            }\n        }", '        ""', "        val vowels = Set('a', 'e',\
    \ 'i', 'o', 'u')\n        var result = \"\"\n        for (c <- text) {\n     \
    \       if (!vowels.contains(c)) result += c\n        }\n        result", "  \
    \      // Write your code here.\n        val vowels = List('a', 'e', 'i', 'o',\
    \ 'u', 'A', 'E', 'I', 'O', 'U')\n        text.filter(c => !vowels.contains(c))",
  "        text.filter(!List('a', 'e', 'i', 'o', 'u').contains(_))", "        var\
    \ sb = new StringBuilder(text.length)\n        text.foreach(c => if (c != 'a'\
    \ && c != 'e' && c != 'i' && c != 'o' && c != 'u') sb.append(c))\n        sb.toString",
  "        // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n        // >>> remove_vowels('')\n        // ''\n        // >>> remove_vowels('abcdef')\n\
    \        // 'bcdf'\n        // >>> remove_vowels('aaaaa')\n        // ''\n   \
    \     // >>> remove_vowels('aaBAA')\n        // 'B'\n        // >>> remove_vowels('zbcd')\n\
    \        // 'zbcd'\n        var s = \"\"\n        var vowels = List('a', 'e',\
    \ 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n        for (c <- text) if (!vowels.contains(c))\
    \ s += c\n        s", "        var lst = List[Char]()\n        for (ch <- text)\
    \ {\n            if (ch != 'a' && ch != 'e' && ch != 'i' && ch != 'o' && ch !=\
    \ 'u') lst = ch :: lst\n        }\n        var res = \"\"\n        for (x <- lst)\
    \ res += x\n        res", "        // TODO: Implement this function, a\n     \
    \   if (text == \"\") {\n            return \"\"\n        } else {\n         \
    \   var c = text.charAt(0)\n            var r = \"\"\n            if (c == 'a'\
    \ || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n                r = \"\"\
    \n            } else {\n                r = r + c\n            }\n           \
    \ return r + removeVowels(text.substring(1))\n        }", '        ""']
stop_tokens:
- "\n    }\n"

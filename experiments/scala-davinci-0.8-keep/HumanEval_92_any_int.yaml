name: HumanEval_92_any_int
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Create a function that takes 3 numbers.\n    // Returns true if one of the\
  \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
  \    // Returns false in any other cases.\n    // Examples\n    // any_int(5, 2,\
  \ 7) \u279E True\n    // any_int(3, 2, 2) \u279E False\n    // any_int(3, -2, 1)\
  \ \u279E True\n    // any_int(3.6, -2.2, 2) \u279E False\n    def anyInt(x : Float,\
  \ y : Float, z : Float) : Boolean = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(anyInt(2l, 3l, 1l)\
  \ == (true));\n    assert(anyInt((2.5f), 2l, 3l) == (false));\n    assert(anyInt((1.5f),\
  \ 5l, (3.5f)) == (false));\n    assert(anyInt(2l, 6l, 2l) == (false));\n    assert(anyInt(4l,\
  \ 2l, 2l) == (true));\n    assert(anyInt((2.2f), (2.2f), (2.2f)) == (false));\n\
  \    assert(anyInt(-4l, 6l, 2l) == (true));\n    assert(anyInt(2l, 1l, 1l) == (true));\n\
  \    assert(anyInt(3l, 4l, 7l) == (true));\n    assert(anyInt((3.0f), 4l, 7l) ==\
  \ (false));\n    }\n\n}\n"
completions: ["        val lst = List(x, y, z)\n        return (lst.sum == lst.max\
    \ * 2) && lst.forall(x => x % 1 == 0)", "        if(x == y + z) return true\n\
    \        if(y == x + z) return true\n        if(z == x + y) return true\n    \
    \    if(x.toInt == x && y.toInt == y && z.toInt == z) return true\n        return\
    \ false", '      x + y == z || x + z == y || y + z == x', "        // TODO\n \
    \       if(x.isValidInt && y.isValidInt && z.isValidInt){\n            if(x.toInt\
    \ + y.toInt == z.toInt || x.toInt + z.toInt == y.toInt || y.toInt + z.toInt ==\
    \ x.toInt){\n                return true\n            }\n        }\n        return\
    \ false", '        return (x+y == z || x+z == y || y+z == x) && x.isWhole() &&
    y.isWhole() && z.isWhole()', "        var isInt : Boolean = true\n        var\
    \ isSum : Boolean = false\n        if (x % 1 != 0 || y % 1 != 0 || z % 1 != 0)\
    \ {\n            isInt = false\n        }\n        if (x == y + z || y == x +\
    \ z || z == x + y) {\n            isSum = true\n        }\n        return isInt\
    \ && isSum", "        // if ((x + y) == z) true else false\n        if (x.toInt\
    \ + y.toInt == z.toInt) true else false", "        if (x.toInt == x && y.toInt\
    \ == y && z.toInt == z) return (x + y == z || x + z == y || y + z == x)\n    \
    \    return false", "        var (a, b, c) = (0, 0, 0)\n        if (x % 1 == 0)\
    \ a = x.toInt\n        if (y % 1 == 0) b = y.toInt\n        if (z % 1 == 0) c\
    \ = z.toInt\n        return (a == b + c || b == a + c || c == a + b)", "     \
    \   if (x + y == z || x + z == y || y + z == x) true\n        else false", " \
    \       // anyInt(x, y, z) = (x + y == z) or (x + z == y) or (y + z == x)\n  \
    \      if (((x + y) == z) || ((x + z) == y) || ((y + z) == x)) {\n           \
    \ return true\n        }\n        return false", "        // if(x.isWhole() &&\
    \ y.isWhole() && z.isWhole()) {\n        //     if(x == y + z || x == z + y ||\
    \ z == x + y || z == y + x || y == x + z || y == z + x) {\n        //        \
    \ return true\n        //     }\n        // }\n        // return false\n     \
    \   if(x.isWhole() && y.isWhole() && z.isWhole()) {\n            var integers\
    \ = List(x, y, z)\n            var sum = 0\n            for(i <- integers) {\n\
    \                sum += i\n            }\n            if(integers.contains(sum/2))\
    \ {\n                return true\n            }\n        }\n        return false",
  "        var a = x\n        var b = y\n        var c = z\n        if ((a + b) ==\
    \ c || (a + c) == b || (b + c) == a && (a % 1 == 0) && (b % 1 == 0) && (c % 1\
    \ == 0)) {\n            return true\n        }\n        else {\n            return\
    \ false\n        }", '        if ((x + y) == z || (x + z) == y || (y + z) == x)
    true else false', '        List(x, y, z).map( x => x.isWhole()).reduce(_ && _)
    && (x + y == z || x + z == y || y + z == x)', '        return x % 1 == 0 && y
    % 1 == 0 && z % 1 == 0 && (x == y + z || y == x + z || z == x + y)', "       \
    \ val sum = x + y + z\n        if (sum == floor(sum)) true else false", "    \
    \    // if (x + y == z || x + z == y || y + z == x) {\n        //     true\n \
    \       // } else {\n        //     false\n        // }\n        // x + y == z\
    \ || x + z == y || y + z == x\n        if (x.isValidInt && y.isValidInt && z.isValidInt)\
    \ {\n            x + y == z || x + z == y || y + z == x\n        } else {\n  \
    \          false\n        }", "        if(!x.isValidInt || !y.isValidInt || !z.isValidInt)\n\
    \            return false\n        var xi = x.toInt\n        var yi = y.toInt\n\
    \        var zi = z.toInt\n        return xi + yi == zi || xi + zi == yi || yi\
    \ + zi == xi", "        if(x == y + z || y == x + z || z == x + y) true\n    \
    \    else false"]
stop_tokens:
- "\n    }\n"

name: HumanEval_105_by_length
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n\
  \    // reverse the resulting array, and then replace each digit by its corresponding\
  \ name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"\
  Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // arr = [2, 1, 1, 4, 5,\
  \ 8, 2, 3]   \n    // -> sort arr -> [1, 1, 2, 2, 3, 4, 5, 8] \n    // -> reverse\
  \ arr -> [8, 5, 4, 3, 2, 2, 1, 1]\n    // return [\"Eight\", \"Five\", \"Four\"\
  , \"Three\", \"Two\", \"Two\", \"One\", \"One\"]\n    // If the array is empty,\
  \ return an empty array:\n    // arr = []\n    // return []\n    // If the array\
  \ has any strange number ignore it:\n    // arr = [1, -1 , 55] \n    // -> sort\
  \ arr -> [-1, 1, 55]\n    // -> reverse arr -> [55, 1, -1]\n    // return = ['One']\n\
  \    def byLength(arr : List[Long]) : List[String] = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(byLength((List[Long](2l.toLong,\
  \ 1l.toLong, 1l.toLong, 4l.toLong, 5l.toLong, 8l.toLong, 2l.toLong, 3l.toLong))).equals((List[String](\"\
  Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\"))));\n\
  \    assert(byLength((List[Long]())).equals((List[String]())));\n    assert(byLength((List[Long](1l.toLong,\
  \ -1l.toLong, 55l.toLong))).equals((List[String](\"One\"))));\n    assert(byLength((List[Long](1l.toLong,\
  \ -1l.toLong, 3l.toLong, 2l.toLong))).equals((List[String](\"Three\", \"Two\", \"\
  One\"))));\n    assert(byLength((List[Long](9l.toLong, 4l.toLong, 8l.toLong))).equals((List[String](\"\
  Nine\", \"Eight\", \"Four\"))));\n    }\n\n}\n"
completions: []
stop_tokens:
- "\n    }\n"

name: HumanEval_150_x_or_y
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // A simple program which should return the value of x if n is \n    // a prime\
  \ number and should return the value of y otherwise.\n    // Examples:\n    // for\
  \ x_or_y(7, 34, 12) == 34\n    // for x_or_y(15, 8, 5) == 5\n    def xOrY(n : Long,\
  \ x : Long, y : Long) : Long = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(xOrY((7l), (34l),\
  \ (12l)) == (34l));\n    assert(xOrY((15l), (8l), (5l)) == (5l));\n    assert(xOrY((3l),\
  \ (33l), (5212l)) == (33l));\n    assert(xOrY((1259l), (3l), (52l)) == (3l));\n\
  \    assert(xOrY((7919l), (-1l), (12l)) == (-1l));\n    assert(xOrY((3609l), (1245l),\
  \ (583l)) == (583l));\n    assert(xOrY((91l), (56l), (129l)) == (129l));\n    assert(xOrY((6l),\
  \ (34l), (1234l)) == (1234l));\n    assert(xOrY((1l), (2l), (0l)) == (0l));\n  \
  \  assert(xOrY((2l), (2l), (0l)) == (2l));\n    }\n\n}\n"
completions: ["        // Write your code here\n        n", '        if (isPrime(n))
    x else y', "        n match {\n            case n if n == 2 || n == 3 || n ==\
    \ 5 || n == 7 => return x\n            case n if n % 2 == 0 || n % 3 == 0 || n\
    \ % 5 == 0 || n % 7 == 0 => return y\n            case _ => {\n              \
    \  var p = pow(n, 0.5).toLong\n                while (p >= 11) {\n           \
    \         if (n % p == 0) return y\n                    p -= 2\n             \
    \   }\n                return x\n            }\n        }", "        return (1\
    \ to n.toInt).filter(d => n % d == 0).size match {\n            case 2 => x\n\
    \            case _ => y\n        }", "        val isPrime = BigInt(n).isProbablePrime(100)\n\
    \        if (isPrime) x else y", "      //TODO: write solution here\n      -1",
  "        if (n < 2) return y\n        var i = 2L\n        while (i * i <= n) {\n\
    \            if (n % i == 0) return y\n            i += 1\n        }\n       \
    \ return x", '        return n;', "        val result = n match {\n          \
    \  case n => if (isPrime(n)) x else y\n        }\n        result", "        //\
    \ Note: I would have used a more general function for this\n        // exercise\
    \ but the assignment says to output the value of x\n        // or y.\n       \
    \ if (n.isPrime) x else y", "        var result : Long = 0;\n        if (isPrime(n))\
    \ {\n            result = x;\n        } else {\n            result = y;\n    \
    \    }\n        return result;", '        if (isPrime(n)) x else y', "       \
    \ def isPrime(n : Long) : Boolean = n match {\n            case 1 => false\n \
    \           case 2 => true\n            case n if n % 2 == 0 => false\n      \
    \      case n => (3 to sqrt(n).toInt by 2).forall(n % _ != 0)\n        }\n   \
    \     if (isPrime(n)) x else y", '        if (isPrime(n)) x else y', '      if
    (isPrime(n)) x else y', "    \trequire(n >= 0 && x >= 0 && y >= 0)\n        if\
    \ (BigInt(n).isProbablePrime(32)) return x else return y\n    } ensuring(_ ==\
    \ (x, y) match {\n\t\tcase (a, b) if a == b => a\n\t\tcase (a, b) if a < b =>\
    \ a\n\t\tcase (a, b) if a > b => b\n\t})\n}", "        // Insert code here\n \
    \       if (n.isValidInt) {\n            if (n.isPrime) x else y\n        } else\
    \ {\n            if (BigInt(n).isProbablePrime(1000)) x else y\n        }", " \
    \       val d = n / 2\n        if (d * d == n) y\n        else if (n % 2 == 0)\
    \ y\n        else x", '        if (isPrime(n)) x else y', '        if (isPrime(n))
    x else y']
stop_tokens:
- "\n    }\n"

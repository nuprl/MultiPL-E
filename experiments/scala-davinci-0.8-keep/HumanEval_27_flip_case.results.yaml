language: scala
name: HumanEval_27_flip_case
results:
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    def flipCase(string\
    \ : String) : String = {\n        var newString = \"\"\n        for (c <- string)\
    \ {\n            if (c.isUpper) {\n                newString += c.toLower\n  \
    \          } else {\n                newString += c.toUpper\n            }\n \
    \       }\n        newString\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659820890
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    def flipCase(string\
    \ : String) : String = {\n        var result = \"\"\n        for (char <- string)\
    \ {\n            if (char.isUpper) result += char.toLower\n            else result\
    \ += char.toUpper\n        }\n        result\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659820890
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    def flipCase(string\
    \ : String) : String = {\n        var result = string.map(c => {\n           \
    \ if (c.isUpper) c.toLower\n            else c.toUpper\n        })\n        result\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\
    \")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
    These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659820890
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    def flipCase(string\
    \ : String) : String = {\n        def flipCaseRec(string : String, result : String)\
    \ : String = {\n            if (string.isEmpty) {\n                result\n  \
    \          } else {\n                val firstChar = string.head\n           \
    \     val rest = string.tail\n                if (firstChar.isUpper) {\n     \
    \               flipCaseRec(rest, result + firstChar.toLower)\n              \
    \  } else {\n                    flipCaseRec(rest, result + firstChar.toUpper)\n\
    \                }\n            }\n        }\n        flipCaseRec(string, \"\"\
    )\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\
    \")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
    These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659820890
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    def flipCase(string\
    \ : String) : String = {\n        def flipCaseChar(char : Char) : Char = {\n \
    \           if (char.isUpper) {\n                char.toLower\n            } else\
    \ {\n                char.toUpper\n            }\n        }\n        string.map(flipCaseChar)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\
    \")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
    These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659820890
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    def flipCase(string\
    \ : String) : String = {\n        val sb = new StringBuilder(string)\n       \
    \ for (i <- 0 until sb.length) {\n            if (Character.isLowerCase(sb.charAt(i)))\
    \ sb.setCharAt(i, Character.toUpperCase(sb.charAt(i)))\n            else sb.setCharAt(i,\
    \ Character.toLowerCase(sb.charAt(i)))\n        }\n        sb.toString\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\
    \")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
    These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659820890
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    def flipCase(string\
    \ : String) : String = {\n        return string.map(x => if (x.isLower) x.toUpper\
    \ else x.toLower)\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\
    \")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n\
    \    assert(flipCase((\"These violent delights have violent ends\")).equals((\"\
    tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659820890
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    def flipCase(string\
    \ : String) : String = {\n        string.map( (ch: Char) => {\n            if\
    \ (ch.isUpper) ch.toLower\n            else ch.toUpper\n        })\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\"\
    )));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
    These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659820890
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    def flipCase(string\
    \ : String) : String = {\n        var flipped = \"\"\n        for (c <- string)\
    \ {\n            if (c.isLower) {\n                flipped += c.toUpper\n    \
    \        } else {\n                flipped += c.toLower\n            }\n     \
    \   }\n        flipped\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\
    \")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n\
    \    assert(flipCase((\"These violent delights have violent ends\")).equals((\"\
    tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659820890
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    def flipCase(string\
    \ : String) : String = {\n        val result = string.map((c : Char) => {\n  \
    \          if (c.isUpper) c.toLower\n            else c.toUpper\n        })\n\
    \        result\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\
    \")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n\
    \    assert(flipCase((\"These violent delights have violent ends\")).equals((\"\
    tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659820890
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    def flipCase(string\
    \ : String) : String = {\n        var arr = new Array[Char](string.length())\n\
    \        for (i <- 0 until string.length()) {\n            val char = string.charAt(i)\n\
    \            if (char.isLower) arr(i) = char.toUpper\n            else arr(i)\
    \ = char.toLower\n        }\n        new String(arr)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"\
    Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights\
    \ have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659820890
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    def flipCase(string\
    \ : String) : String = {\n        string.map(c => if (c.isUpper) c.toLower else\
    \ c.toUpper)\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\
    \")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n\
    \    assert(flipCase((\"These violent delights have violent ends\")).equals((\"\
    tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659820890
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    def flipCase(string\
    \ : String) : String = {\n        for(i <- 0 until string.length) {\n        \
    \    if(string(i).isLower) {\n                return string.substring(0, i) +\
    \ string(i).toUpper + string.substring(i + 1, string.length)\n            }\n\
    \            else if(string(i).isUpper) {\n                return string.substring(0,\
    \ i) + string(i).toLower + string.substring(i + 1, string.length)\n          \
    \  }\n        }\n        return string\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmptqf2m57k.scala:20)\n\tat Problem.main(tmptqf2m57k.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659820891
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    def flipCase(string\
    \ : String) : String = {\n        val lowerCase = string.toLowerCase()\n     \
    \   val upperCase = string.toUpperCase()\n        var result = \"\"\n        for\
    \ (i <- 0 until string.length) {\n            result += if (string(i) == lowerCase(i))\
    \ upperCase(i) else lowerCase(i)\n        }\n        result\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"\
    Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights\
    \ have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp1lrjse7r.scala:12:22 ---------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            result += \e[33mif\e[0m (string(i) == lowerCase(i))\
    \ upperCase(i) \e[33melse\e[0m lowerCase(i)\n\e[31m\e[31m   |\e[0m           \
    \           ^^\e[0m\n\e[31m   |\e[0m                      expression expected\
    \ but \e[31mif\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659820888
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    def flipCase(string\
    \ : String) : String = {\n        string.map((ch) => if (ch.isUpper) ch.toLower\
    \ else ch.toUpper)\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\
    \")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n\
    \    assert(flipCase((\"These violent delights have violent ends\")).equals((\"\
    tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659820890
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    def flipCase(string\
    \ : String) : String = {\n        def f(char : Char) : Char = {\n            if\
    \ (char.isUpper)\n                char.toLower\n            else\n           \
    \     char.toUpper\n        }\n        string.map(f)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"\
    Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights\
    \ have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659820890
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    def flipCase(string\
    \ : String) : String = {\n        string.map(x => if (x.isUpper) x.toLower else\
    \ x.toUpper)\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\
    \")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n\
    \    assert(flipCase((\"These violent delights have violent ends\")).equals((\"\
    tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659820890
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    def flipCase(string\
    \ : String) : String = {\n        string.flatMap((c : Char) => if (c.isUpper)\
    \ c.toLower.toString else c.toUpper.toString)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\"\
    )).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have\
    \ violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659820890
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    def flipCase(string\
    \ : String) : String = {\n        return string.map(c => if (c.isLower) c.toUpper\
    \ else c.toLower)\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\
    \")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n\
    \    assert(flipCase((\"These violent delights have violent ends\")).equals((\"\
    tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659820890
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    def flipCase(string\
    \ : String) : String = {\n        val chars = string.toCharArray\n        for\
    \ (i <- 0 until chars.length) {\n            chars(i) = if (chars(i).isLower)\
    \ chars(i).toUpper else chars(i).toLower\n        }\n        return chars.mkString\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\
    \")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"\
    These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659820890

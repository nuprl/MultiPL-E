{
  "name": "mbpp_594_diff_even_odd",
  "language": "pl",
  "prompt": "# Write a function to find the difference of the first even and first odd number of a given array.\nsub diff_even_odd {\n    my($list1) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_594_diff_even_odd.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&diff_even_odd;\n        if(eq_deeply($candidate->([1, 3, 5, 7, 4, 1, 6, 8]),3)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 5, 7, 9, 10]),9)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my $even = 0;\n    my $odd = 0;\n    for (my $i = 0; $i < scalar @$list1; $i++) {\n        if ($list1->[$i] % 2 == 0) {\n            $even = $list1->[$i];\n            last;\n        }\n    }\n    for (my $i = 0; $i < scalar @$list1; $i++) {\n        if ($list1->[$i] % 2 != 0) {\n            $odd = $list1->[$i];\n            last;\n        }\n    }\n    return $even - $odd;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $diff = 0;\n    my $i = 0;\n    while($i < @$list1) {\n        if ($list1->[$i] % 2 == 0) {\n            $even = $list1->[$i];\n            last;\n        }\n        $i++;\n    }\n    $i = 0;\n    while($i < @$list1) {\n        if ($list1->[$i] % 2 != 0) {\n            $odd = $list1->[$i];\n            last;\n        }\n        $i++;\n    }\n    $diff = $even - $odd;\n    return $diff;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $diff = 0;\n    foreach my $i (@$list1) {\n        if ($i % 2 == 0) {\n            $even = $i;\n            last;\n        }\n    }\n    foreach my $i (@$list1) {\n        if ($i % 2 != 0) {\n            $odd = $i;\n            last;\n        }\n    }\n    $diff = $even - $odd;\n    return $diff;\n}",
    "    my $even_num = 0;\n    my $odd_num = 0;\n    my $diff = 0;\n    my $flag = 0;\n    foreach my $num (@$list1) {\n        if($num % 2 == 0) {\n            if($flag == 0) {\n                $even_num = $num;\n                $flag = 1;\n            }\n        }\n        else {\n            $odd_num = $num;\n            last;\n        }\n    }\n    $diff = $even_num - $odd_num;\n    return $diff;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $diff = 0;\n    foreach my $num (@$list1) {\n        if ($num % 2 == 0) {\n            $even = $num;\n            last;\n        }\n    }\n    foreach my $num (@$list1) {\n        if ($num % 2 != 0) {\n            $odd = $num;\n            last;\n        }\n    }\n    $diff = $even - $odd;\n    return $diff;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $diff = 0;\n    foreach my $num (@$list1) {\n        if ($num % 2 == 0) {\n            $even = $num;\n            last;\n        }\n    }\n    foreach my $num (@$list1) {\n        if ($num % 2 != 0) {\n            $odd = $num;\n            last;\n        }\n    }\n    $diff = $even - $odd;\n    return $diff;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    while ($i < scalar(@$list1)) {\n        if ($list1->[$i] % 2 == 0) {\n            $even = $list1->[$i];\n            last;\n        }\n        $i++;\n    }\n    $i = 0;\n    while ($i < scalar(@$list1)) {\n        if ($list1->[$i] % 2 != 0) {\n            $odd = $list1->[$i];\n            last;\n        }\n        $i++;\n    }\n    return $even - $odd;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $diff = 0;\n    foreach my $i (@$list1) {\n        if ($i % 2 == 0) {\n            $even = $i;\n            last;\n        }\n    }\n    foreach my $i (@$list1) {\n        if ($i % 2 != 0) {\n            $odd = $i;\n            last;\n        }\n    }\n    $diff = $even - $odd;\n    return $diff;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    foreach my $i (@$list1) {\n        if ($i % 2 == 0) {\n            $even = $i;\n            last;\n        }\n    }\n    foreach my $i (@$list1) {\n        if ($i % 2 != 0) {\n            $odd = $i;\n            last;\n        }\n    }\n    return $even - $odd;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $diff = 0;\n    my $i = 0;\n    my $j = 0;\n    my $len = @$list1;\n    for($i = 0; $i < $len; $i++) {\n        if($$list1[$i] % 2 == 0) {\n            $even = $$list1[$i];\n            last;\n        }\n    }\n    for($j = 0; $j < $len; $j++) {\n        if($$list1[$j] % 2 != 0) {\n            $odd = $$list1[$j];\n            last;\n        }\n    }\n    $diff = $even - $odd;\n    return $diff;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $diff = 0;\n    my $len = scalar(@$list1);\n    for($i = 0; $i < $len; $i++) {\n        if($list1->[$i] % 2 == 0) {\n            $even = $list1->[$i];\n            last;\n        }\n    }\n    for($j = 0; $j < $len; $j++) {\n        if($list1->[$j] % 2 != 0) {\n            $odd = $list1->[$j];\n            last;\n        }\n    }\n    $diff = $even - $odd;\n    return $diff;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    foreach my $num (@$list1) {\n        if ($num % 2 == 0) {\n            $even = $num;\n            last;\n        }\n    }\n    foreach my $num (@$list1) {\n        if ($num % 2 != 0) {\n            $odd = $num;\n            last;\n        }\n    }\n    return $even - $odd;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $diff = 0;\n    foreach my $num (@$list1) {\n        if ($num % 2 == 0) {\n            $even = $num;\n            last;\n        }\n    }\n    foreach my $num (@$list1) {\n        if ($num % 2 != 0) {\n            $odd = $num;\n            last;\n        }\n    }\n    $diff = $even - $odd;\n    return $diff;\n}",
    "    my @list = @$list1;\n    my $even = 0;\n    my $odd = 0;\n    my $diff = 0;\n    my $i = 0;\n    while($i < scalar @list) {\n        if($list[$i] % 2 == 0) {\n            $even = $list[$i];\n            last;\n        }\n        $i++;\n    }\n    $i = 0;\n    while($i < scalar @list) {\n        if($list[$i] % 2 != 0) {\n            $odd = $list[$i];\n            last;\n        }\n        $i++;\n    }\n    $diff = $even - $odd;\n    return $diff;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $diff = 0;\n    foreach my $num (@$list1) {\n        if ($num % 2 == 0) {\n            $even = $num;\n            last;\n        }\n    }\n    foreach my $num (@$list1) {\n        if ($num % 2 != 0) {\n            $odd = $num;\n            last;\n        }\n    }\n    $diff = $even - $odd;\n    return $diff;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $diff = 0;\n    foreach my $i (@$list1) {\n        if ($i % 2 == 0) {\n            $even = $i;\n            last;\n        }\n    }\n    foreach my $i (@$list1) {\n        if ($i % 2 != 0) {\n            $odd = $i;\n            last;\n        }\n    }\n    $diff = $even - $odd;\n    return $diff;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $diff = 0;\n    foreach my $i (@$list1) {\n        if($i % 2 == 0) {\n            $even = $i;\n            last;\n        }\n    }\n    foreach my $i (@$list1) {\n        if($i % 2 != 0) {\n            $odd = $i;\n            last;\n        }\n    }\n    $diff = $even - $odd;\n    return $diff;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    foreach my $num (@$list1) {\n        if ($num % 2 == 0) {\n            $even = $num;\n            last;\n        }\n    }\n    foreach my $num (@$list1) {\n        if ($num % 2 != 0) {\n            $odd = $num;\n            last;\n        }\n    }\n    return $even - $odd;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $diff = 0;\n    foreach my $num (@$list1) {\n        if ($num % 2 == 0) {\n            $even = $num;\n            last;\n        }\n    }\n    foreach my $num (@$list1) {\n        if ($num % 2 != 0) {\n            $odd = $num;\n            last;\n        }\n    }\n    $diff = $even - $odd;\n    return $diff;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    foreach my $i (@$list1) {\n        if ($i % 2 == 0) {\n            $even = $i;\n            last;\n        }\n    }\n    foreach my $i (@$list1) {\n        if ($i % 2 != 0) {\n            $odd = $i;\n            last;\n        }\n    }\n    return $even - $odd;\n}"
  ]
}
{
  "name": "mbpp_558_digit_distance_nums",
  "language": "pl",
  "prompt": "# Write a plthon function to find the sum of the per-digit difference between two integers.\nsub digit_distance_nums {\n    my($n1, $n2) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_558_digit_distance_nums.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&digit_distance_nums;\n        if(eq_deeply($candidate->(1, 2),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(23, 56),6)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(123, 256),7)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my $sum = 0;\n    my $n = $n1 > $n2 ? $n1 : $n2;\n    while ($n > 0) {\n        my $d1 = $n1 % 10;\n        my $d2 = $n2 % 10;\n        $sum += abs($d1 - $d2);\n        $n1 /= 10;\n        $n2 /= 10;\n        $n /= 10;\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    foreach my $digit (split(//, abs($n1 - $n2))) {\n        $sum += $digit;\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    while ($n1 > 0 || $n2 > 0) {\n        my $d1 = $n1 % 10;\n        my $d2 = $n2 % 10;\n        $sum += abs($d1 - $d2);\n        $n1 = int($n1 / 10);\n        $n2 = int($n2 / 10);\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    my $n = $n1 ^ $n2;\n    while ($n > 0) {\n        $sum += $n & 1;\n        $n >>= 1;\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    my @n1 = split(//, $n1);\n    my @n2 = split(//, $n2);\n    for (my $i = 0; $i < scalar(@n1); $i++) {\n        $sum += abs($n1[$i] - $n2[$i]);\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    for ($n1, $n2) {\n        my @digits = split //, $_;\n        for (my $i = 0; $i < @digits; $i++) {\n            $sum += abs($digits[$i] - $digits[$i+1]);\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    my $n = $n1 > $n2 ? $n1 : $n2;\n    while ($n > 0) {\n        my $d1 = $n1 % 10;\n        my $d2 = $n2 % 10;\n        $sum += abs($d1 - $d2);\n        $n1 = int($n1 / 10);\n        $n2 = int($n2 / 10);\n        $n = $n1 > $n2 ? $n1 : $n2;\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    my $n = $n1;\n    while ($n > 0) {\n        my $d1 = $n % 10;\n        my $d2 = ($n2 % 10);\n        $sum += abs($d1 - $d2);\n        $n = int($n / 10);\n        $n2 = int($n2 / 10);\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    my $n = $n1;\n    while ($n > 0) {\n        my $d = $n % 10;\n        my $m = $n2 % 10;\n        $sum += abs($d - $m);\n        $n /= 10;\n        $n2 /= 10;\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    while ($n1 > 0 || $n2 > 0) {\n        my $d1 = $n1 % 10;\n        my $d2 = $n2 % 10;\n        $sum += abs($d1 - $d2);\n        $n1 = int($n1 / 10);\n        $n2 = int($n2 / 10);\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    my $n = $n1 > $n2 ? $n1 : $n2;\n    while($n > 0) {\n        $sum += abs(($n1 % 10) - ($n2 % 10));\n        $n1 /= 10;\n        $n2 /= 10;\n        $n /= 10;\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    my @n1 = split(//, $n1);\n    my @n2 = split(//, $n2);\n    for (my $i = 0; $i < scalar @n1; $i++) {\n        $sum += abs($n1[$i] - $n2[$i]);\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    my $diff = abs($n1 - $n2);\n    while ($diff > 0) {\n        $sum += $diff % 10;\n        $diff = int($diff / 10);\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    foreach my $digit (split(//, $n1)) {\n        my $d2 = chop($n2);\n        $sum += abs($digit - $d2);\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    my @n1 = split //, $n1;\n    my @n2 = split //, $n2;\n    for (my $i = 0; $i < @n1; $i++) {\n        $sum += abs($n1[$i] - $n2[$i]);\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    while ($n1 > 0 || $n2 > 0) {\n        my $d1 = $n1 % 10;\n        my $d2 = $n2 % 10;\n        $sum += abs($d1 - $d2);\n        $n1 = int($n1 / 10);\n        $n2 = int($n2 / 10);\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    my $n = $n1 > $n2 ? $n1 : $n2;\n    while($n > 0) {\n        my $d1 = $n1 % 10;\n        my $d2 = $n2 % 10;\n        $sum += abs($d1 - $d2);\n        $n1 = int($n1 / 10);\n        $n2 = int($n2 / 10);\n        $n = $n1 > $n2 ? $n1 : $n2;\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    my $n = $n1 > $n2 ? $n1 : $n2;\n    while ($n > 0) {\n        $sum += abs(($n1 % 10) - ($n2 % 10));\n        $n1 /= 10;\n        $n2 /= 10;\n        $n /= 10;\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    foreach my $digit (split //, $n1) {\n        $sum += abs($digit - $n2);\n    }\n    return $sum;\n}",
    "    my @n1 = split(//, $n1);\n    my @n2 = split(//, $n2);\n    my $sum = 0;\n    for(my $i = 0; $i < scalar(@n1); $i++) {\n        $sum += abs($n1[$i] - $n2[$i]);\n    }\n    return $sum;\n}"
  ]
}
{
  "name": "mbpp_468_max_product",
  "language": "pl",
  "prompt": "# Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nsub max_product {\n    my($arr) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_468_max_product.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&max_product;\n        if(eq_deeply($candidate->([3, 100, 4, 5, 150, 6]),3000)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4, 42, 55, 68, 80]),50265600)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([10, 22, 9, 33, 21, 50, 41, 60]),2460)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my $max = 0;\n    my $product = 1;\n    for my $i (0..$#$arr) {\n        $product *= $arr->[$i];\n        $max = $product if $product > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $prod = 1;\n    my $i = 0;\n    while ($i < scalar(@$arr)) {\n        if ($arr->[$i] > $max) {\n            $max = $arr->[$i];\n            $prod *= $max;\n        }\n        $i++;\n    }\n    return $prod;\n}",
    "    my $max = 0;\n    my $len = scalar @$arr;\n    for my $i (0..$len-1) {\n        for my $j ($i+1..$len-1) {\n            my $prod = $arr->[$i] * $arr->[$j];\n            $max = $prod if $prod > $max;\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $max_product = 1;\n    my $min_product = 1;\n    for my $i (0..$#$arr) {\n        if ($arr->[$i] > 0) {\n            $max_product *= $arr->[$i];\n            $min_product = min($min_product * $arr->[$i], 1);\n        } elsif ($arr->[$i] == 0) {\n            $max_product = 1;\n            $min_product = 1;\n        } else {\n            my $temp = $max_product;\n            $max_product = max($min_product * $arr->[$i], 1);\n            $min_product = $temp * $arr->[$i];\n        }\n        $max = max($max, $max_product);\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $prod = 1;\n    my $i = 0;\n    my $j = 0;\n    while ($i < scalar(@$arr)) {\n        if ($arr->[$i] > $arr->[$j]) {\n            $prod *= $arr->[$i];\n            $i++;\n        } else {\n            $prod /= $arr->[$j];\n            $j++;\n        }\n        $max = $prod if ($prod > $max);\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $max_product = 0;\n    my $product = 1;\n    for my $i (0..$#$arr) {\n        if ($arr->[$i] > $max) {\n            $max = $arr->[$i];\n            $product *= $arr->[$i];\n            $max_product = $product if $product > $max_product;\n        } else {\n            $product = 1;\n        }\n    }\n    return $max_product;\n}",
    "    my $max = 0;\n    my $prod = 1;\n    my $i = 0;\n    while ($i < scalar(@$arr)) {\n        if ($arr->[$i] > $max) {\n            $max = $arr->[$i];\n            $prod *= $arr->[$i];\n        }\n        $i++;\n    }\n    return $prod;\n}",
    "    my $max = 0;\n    my $max_product = 1;\n    for my $i (0 .. $#$arr) {\n        if ($arr->[$i] > $max) {\n            $max = $arr->[$i];\n            $max_product *= $max;\n        }\n    }\n    return $max_product;\n}",
    "    my $max = 0;\n    my $prod = 1;\n    my $count = 0;\n    for my $i (0 .. $#$arr) {\n        if ($arr->[$i] > $max) {\n            $max = $arr->[$i];\n            $prod *= $arr->[$i];\n            $count++;\n        }\n    }\n    return $count > 1 ? $prod : 0;\n}",
    "    my $max = 0;\n    my $prod = 1;\n    for my $i (0..$#$arr) {\n        $prod *= $arr->[$i];\n        $max = $prod if $prod > $max;\n        $prod = 1 if $prod == 0;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $min = 0;\n    my $result = 0;\n    for my $num (@$arr) {\n        if ($num > 0) {\n            $max = max($max * $num, $num);\n            $min = min($min * $num, $num);\n        } else {\n            my $temp = $max;\n            $max = max($min * $num, $num);\n            $min = min($temp * $num, $num);\n        }\n        $result = max($result, $max);\n    }\n    return $result;\n}",
    "    my $max = 0;\n    my $product = 1;\n    for my $i (0..$#$arr) {\n        $product *= $arr->[$i];\n        $max = $product if $product > $max;\n        $product = 1 if $product == 0;\n    }\n    return $max;\n}",
    "    my $max = $arr->[0];\n    my $min = $arr->[0];\n    my $result = $arr->[0];\n    for my $i (1..$#$arr) {\n        my $tmp = $max;\n        $max = max($arr->[$i], $max * $arr->[$i], $min * $arr->[$i]);\n        $min = min($arr->[$i], $tmp * $arr->[$i], $min * $arr->[$i]);\n        $result = max($result, $max);\n    }\n    return $result;\n}",
    "    my $max = 0;\n    my $max_product = 0;\n    my $product = 1;\n    for my $i (0..$#$arr) {\n        if ($arr->[$i] > $max) {\n            $max = $arr->[$i];\n            $product *= $max;\n        }\n        if ($product > $max_product) {\n            $max_product = $product;\n        }\n    }\n    return $max_product;\n}",
    "    my $max = 0;\n    my $max_product = 0;\n    my $product = 1;\n    for my $i (0..$#$arr) {\n        if ($arr->[$i] > $max) {\n            $max = $arr->[$i];\n            $product *= $arr->[$i];\n            $max_product = $product if $product > $max_product;\n        }\n        else {\n            $product = 1;\n        }\n    }\n    return $max_product;\n}",
    "    my $max = 0;\n    my $prod = 1;\n    for my $i (0..$#$arr) {\n        $prod *= $arr->[$i];\n        $max = $prod if $prod > $max;\n        $prod = 1 if $prod < 1;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $prod = 1;\n    my $n = scalar @$arr;\n    for my $i (0..$n-1) {\n        if ($arr->[$i] > $max) {\n            $max = $arr->[$i];\n            $prod *= $max;\n        }\n    }\n    return $prod;\n}",
    "    my $max = 0;\n    my $prod = 1;\n    for my $i (0 .. $#$arr) {\n        $prod *= $arr->[$i];\n        $max = $prod if $prod > $max;\n        $prod = 1 if $prod < 1;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $product = 1;\n    for my $i (0 .. $#$arr) {\n        $product *= $arr->[$i];\n        $max = $product if $product > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    for my $i (0 .. $#$arr) {\n        my $prod = 1;\n        for my $j ($i .. $#$arr) {\n            $prod *= $arr->[$j];\n            $max = $prod if $prod > $max;\n        }\n    }\n    return $max;\n}",
    "    my $max_product = 0;\n    my $max_product_so_far = 0;\n    my $max_product_ending_here = 0;\n    my $min_product_ending_here = 0;\n    for my $i (0..$#$arr) {\n        if ($arr->[$i] > 0) {\n            $max_product_ending_here = $max_product_ending_here * $arr->[$i];\n            $min_product_ending_here = min($min_product_ending_here * $arr->[$i], 1);\n        } elsif ($arr->[$i] == 0) {\n            $max_product_ending_here = 0;\n            $min_product_ending_here = 1;\n        } else {\n            my $temp = $max_product_ending_here;\n            $max_product_ending_here = max($min_product_ending_here * $arr->[$i], 1);\n            $min_product_ending_here = $temp * $arr->[$i];\n        }\n        if ($max_product_so_far < $max_product_ending_here) {\n            $max_product_so_far = $max_product_ending_here;\n        }\n    }\n    return $max_product_so_far;\n}",
    "    my $max = 0;\n    my $prod = 1;\n    my $start = 0;\n    my $end = 0;\n    my $i = 0;\n    my $j = 0;\n    while ($i < scalar(@$arr) && $j < scalar(@$arr)) {\n        $prod *= $arr->[$j];\n        if ($prod > $max) {\n            $max = $prod;\n            $start = $i;\n            $end = $j;\n        }\n        if ($prod < 0) {\n            $prod = 1;\n            $i = $j + 1;\n        }\n        $j++;\n    }\n    return [$start, $end, $max];\n}",
    "    my $max = 0;\n    my $curr = 0;\n    for my $i (0 .. $#$arr) {\n        $curr = $arr->[$i] if $curr == 0;\n        $curr *= $arr->[$i];\n        $max = $curr if $curr > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $n = scalar @$arr;\n    for my $i (0..$n-1) {\n        my $product = 1;\n        for my $j ($i..$n-1) {\n            $product *= $arr->[$j];\n            $max = $product if $product > $max;\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $max_product = 0;\n    for my $i (0 .. $#$arr) {\n        if ($arr->[$i] > $max) {\n            $max = $arr->[$i];\n            $max_product = $max;\n        } else {\n            $max_product *= $arr->[$i];\n        }\n    }\n    return $max_product;\n}",
    "    my $max = 0;\n    my $max_product = 0;\n    my $min = 0;\n    my $min_product = 0;\n    for my $i (0 .. $#$arr) {\n        my $num = $arr->[$i];\n        if ($num > 0) {\n            $max_product = $max_product ? $max_product * $num : $num;\n            $min_product = $min_product ? $min_product * $num : $num;\n        } elsif ($num < 0) {\n            my $tmp = $max_product;\n            $max_product = $min_product ? $min_product * $num : $num;\n            $min_product = $tmp ? $tmp * $num : $num;\n        } else {\n            $max_product = 0;\n            $min_product = 0;\n        }\n        $max = $max_product if $max_product > $max;\n        $min = $min_product if $min_product < $min;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $product = 1;\n    my $i = 0;\n    my $j = 0;\n    while ($i < scalar @$arr) {\n        if ($arr->[$i] > $arr->[$j]) {\n            $product *= $arr->[$i];\n            $i++;\n        } else {\n            $product /= $arr->[$j];\n            $j++;\n        }\n        if ($product > $max) {\n            $max = $product;\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $product = 1;\n    my $i = 0;\n    my $j = 0;\n    while ($i < scalar(@$arr) - 1) {\n        if ($arr->[$i] < $arr->[$i + 1]) {\n            $product *= $arr->[$i];\n            $i++;\n        } else {\n            $max = $product if $product > $max;\n            $product = 1;\n            $i = ++$j;\n        }\n    }\n    $max = $product if $product > $max;\n    return $max;\n}",
    "    my $max = 0;\n    my $prod = 1;\n    my $i = 0;\n    my $j = 0;\n    while ($i < scalar(@$arr)) {\n        if ($arr->[$i] > $arr->[$j]) {\n            $prod *= $arr->[$i];\n            $i++;\n        } else {\n            $prod /= $arr->[$j];\n            $j++;\n        }\n        $max = $prod if $prod > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $max_product = 1;\n    my $min_product = 1;\n    for my $i (0..$#$arr) {\n        if ($arr->[$i] > 0) {\n            $max_product *= $arr->[$i];\n            $min_product = min($min_product * $arr->[$i], 1);\n        } elsif ($arr->[$i] == 0) {\n            $max_product = 1;\n            $min_product = 1;\n        } else {\n            my $temp = $max_product;\n            $max_product = max($min_product * $arr->[$i], 1);\n            $min_product = $temp * $arr->[$i];\n        }\n        $max = max($max, $max_product);\n    }\n    return $max;\n}",
    "    my $max_product = 0;\n    my $max_product_so_far = 1;\n    my $min_product_so_far = 1;\n    my $n = scalar @$arr;\n    for my $i (0..$n-1) {\n        my $curr = $arr->[$i];\n        my $max_product_ending_here = $max_product_so_far * $curr;\n        my $min_product_ending_here = $min_product_so_far * $curr;\n        $max_product_so_far = max($max_product_ending_here, $min_product_ending_here, $curr);\n        $min_product_so_far = min($max_product_ending_here, $min_product_ending_here, $curr);\n        $max_product = max($max_product, $max_product_so_far);\n    }\n    return $max_product;\n}",
    "    my $max = 0;\n    my $prod = 1;\n    for my $i (0..$#$arr) {\n        $prod *= $arr->[$i];\n        $max = $prod if $prod > $max;\n        $prod = 1 if $prod == 0;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $product = 1;\n    my $i = 0;\n    my $j = 0;\n    while($i < scalar @$arr) {\n        if($arr->[$i] > $arr->[$j]) {\n            $product *= $arr->[$i];\n            $i++;\n        } else {\n            $product /= $arr->[$j];\n            $j++;\n        }\n        $max = $product if $product > $max;\n    }\n    return $max;\n}",
    "    my $max_product = 0;\n    my $max_product_so_far = 0;\n    my $max_so_far = 0;\n    my $min_so_far = 0;\n    for my $i (0..$#$arr) {\n        if ($arr->[$i] > 0) {\n            $max_so_far = $max_so_far * $arr->[$i];\n            $min_so_far = $min_so_far * $arr->[$i];\n        } else {\n            my $tmp = $max_so_far;\n            $max_so_far = $min_so_far * $arr->[$i];\n            $min_so_far = $tmp * $arr->[$i];\n        }\n        $max_so_far = $arr->[$i] if $max_so_far < $arr->[$i];\n        $min_so_far = $arr->[$i] if $min_so_far > $arr->[$i];\n        $max_product_so_far = $max_so_far if $max_product_so_far < $max_so_far;\n    }\n    return $max_product_so_far;\n}",
    "    my $max = 0;\n    my $max_product = 0;\n    my $min_product = 0;\n    my $max_so_far = 0;\n    my $min_so_far = 0;\n    for my $i (0..$#$arr) {\n        if ($arr->[$i] > 0) {\n            $max_so_far = max($max_so_far * $arr->[$i], $arr->[$i]);\n            $min_so_far = min($min_so_far * $arr->[$i], $arr->[$i]);\n        } else {\n            my $temp = $max_so_far;\n            $max_so_far = max($min_so_far * $arr->[$i], $arr->[$i]);\n            $min_so_far = min($temp * $arr->[$i], $arr->[$i]);\n        }\n        $max = max($max, $max_so_far);\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $product = 1;\n    for my $i (0..$#$arr) {\n        $product *= $arr->[$i];\n        $max = $product if $product > $max;\n    }\n    return $max;\n}",
    "    my $max_product = 0;\n    my $max_so_far = 0;\n    my $min_so_far = 0;\n    for my $i (0..$#$arr) {\n        if ($arr->[$i] > 0) {\n            $max_so_far = $max_so_far * $arr->[$i];\n            $min_so_far = $min_so_far * $arr->[$i];\n        }\n        elsif ($arr->[$i] == 0) {\n            $max_so_far = 0;\n            $min_so_far = 0;\n        }\n        else {\n            my $temp = $max_so_far;\n            $max_so_far = $min_so_far * $arr->[$i];\n            $min_so_far = $temp * $arr->[$i];\n        }\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "    my $max = 0;\n    my $max_idx = 0;\n    my $min = 0;\n    my $min_idx = 0;\n    my $max_product = 0;\n    my $max_product_idx = 0;\n    my $min_product = 0;\n    my $min_product_idx = 0;\n    for my $i (0..$#$arr) {\n        if ($arr->[$i] > $max) {\n            $max = $arr->[$i];\n            $max_idx = $i;\n        }\n        if ($arr->[$i] < $min) {\n            $min = $arr->[$i];\n            $min_idx = $i;\n        }\n        if ($max_product < $max * $arr->[$i]) {\n            $max_product = $max * $arr->[$i];\n            $max_product_idx = $i;\n        }\n        if ($min_product > $min * $arr->[$i]) {\n            $min_product = $min * $arr->[$i];\n            $min_product_idx = $i;\n        }\n    }\n    return max($max_product, $min_product);\n}",
    "    my $max = 0;\n    my $prod = 1;\n    for my $i (0 .. $#$arr) {\n        $prod *= $arr->[$i];\n        $max = $prod if $prod > $max;\n        $prod = 1 if $prod == 0;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $prod = 1;\n    for my $i (0..$#$arr) {\n        $prod *= $arr->[$i];\n        $max = $prod if $prod > $max;\n        $prod = 1 if $prod <= 0;\n    }\n    return $max;\n}",
    "    my $max_product = 0;\n    my $max_so_far = 0;\n    my $min_so_far = 0;\n    for my $i (0..$#$arr) {\n        if ($arr->[$i] > 0) {\n            $max_so_far = $max_so_far * $arr->[$i];\n            $min_so_far = $min_so_far * $arr->[$i];\n        }\n        elsif ($arr->[$i] == 0) {\n            $max_so_far = 0;\n            $min_so_far = 0;\n        }\n        else {\n            my $temp = $max_so_far;\n            $max_so_far = max($min_so_far * $arr->[$i], 1);\n            $min_so_far = $temp * $arr->[$i];\n        }\n        if ($max_so_far > $max_product) {\n            $max_product = $max_so_far;\n        }\n    }\n    return $max_product;\n}",
    "    my $max = 0;\n    my $prod = 1;\n    my $i = 0;\n    my $j = 0;\n    while ($i < scalar @$arr) {\n        if ($arr->[$i] > $arr->[$j]) {\n            $prod *= $arr->[$i];\n            $i++;\n        } else {\n            $prod /= $arr->[$j];\n            $j++;\n        }\n        $max = $prod if $prod > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $prod = 1;\n    for my $i (0..$#$arr) {\n        my $j = $i + 1;\n        while ($j < @$arr && $arr->[$j] > $arr->[$i]) {\n            $prod *= $arr->[$j];\n            $j++;\n        }\n        $max = $prod if $prod > $max;\n        $prod = 1;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $prod = 1;\n    my $start = 0;\n    my $end = 0;\n    while($start < scalar(@$arr) && $end < scalar(@$arr)) {\n        if($arr->[$end] > $arr->[$start]) {\n            $prod *= $arr->[$end];\n            $end++;\n        } else {\n            $prod /= $arr->[$start];\n            $start++;\n        }\n        $max = $prod if $prod > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $product = 1;\n    for my $i (0..$#$arr) {\n        $product *= $arr->[$i];\n        $max = $product if $product > $max;\n        $product = 1 if $product == 0;\n    }\n    return $max;\n}",
    "    my $max_product = 0;\n    my $max_product_so_far = 0;\n    my $min_product_so_far = 0;\n    for my $i (0..$#$arr) {\n        my $curr = $arr->[$i];\n        my $max_product_if_curr_is_neg = $min_product_so_far * $curr;\n        my $max_product_if_curr_is_pos = $max_product_so_far * $curr;\n        $max_product_so_far = max($curr, $max_product_if_curr_is_neg, $max_product_if_curr_is_pos);\n        $min_product_so_far = min($curr, $max_product_if_curr_is_neg, $max_product_if_curr_is_pos);\n        $max_product = max($max_product, $max_product_so_far);\n    }\n    return $max_product;\n}",
    "    my $max = 0;\n    my $prod = 1;\n    my $i = 0;\n    my $j = 0;\n    while ($i < scalar(@$arr)) {\n        if ($arr->[$i] > $arr->[$j]) {\n            $prod *= $arr->[$i];\n            $i++;\n        } else {\n            $prod /= $arr->[$j];\n            $j++;\n        }\n        $max = $prod if $prod > $max;\n    }\n    return $max;\n}",
    "    my @max_product = (1) x scalar(@$arr);\n    my @max_product_index = (0) x scalar(@$arr);\n    my $max_product = 1;\n    for my $i (1 .. $#$arr) {\n        for my $j (0 .. $i - 1) {\n            if ($arr->[$j] < $arr->[$i]) {\n                if ($max_product[$j] * $arr->[$i] > $max_product[$i]) {\n                    $max_product[$i] = $max_product[$j] * $arr->[$i];\n                    $max_product_index[$i] = $j;\n                }\n            }\n        }\n        if ($max_product[$i] > $max_product) {\n            $max_product = $max_product[$i];\n        }\n    }\n    return $max_product;\n}",
    "    my $max = 0;\n    my $max_product = 1;\n    my $min_product = 1;\n    my $n = scalar @$arr;\n    for(my $i=0; $i<$n; $i++) {\n        if($arr->[$i] > 0) {\n            $max_product = $max_product * $arr->[$i];\n            $min_product = min($min_product * $arr->[$i], 1);\n        }\n        elsif($arr->[$i] == 0) {\n            $max_product = 1;\n            $min_product = 1;\n        }\n        else {\n            my $temp = $max_product;\n            $max_product = max($min_product * $arr->[$i], 1);\n            $min_product = $temp * $arr->[$i];\n        }\n        $max = max($max, $max_product);\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $n = scalar @$arr;\n    for my $i (0..$n-1) {\n        my $prod = 1;\n        for my $j ($i..$n-1) {\n            $prod *= $arr->[$j];\n            $max = $prod if $prod > $max;\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $product = 1;\n    my $i = 0;\n    my $j = 0;\n    while ($i < scalar(@$arr) && $j < scalar(@$arr)) {\n        if ($arr->[$j] > $arr->[$i]) {\n            $product *= $arr->[$j];\n            $j++;\n        } else {\n            $max = $product if $product > $max;\n            $product = 1;\n            $i = $j;\n            $j = $i + 1;\n        }\n    }\n    $max = $product if $product > $max;\n    return $max;\n}",
    "    my $max = 0;\n    my $product = 1;\n    my $start = 0;\n    my $end = 0;\n    while($end < scalar @$arr) {\n        if($arr->[$end] > $arr->[$end-1]) {\n            $product *= $arr->[$end];\n            $end++;\n        } else {\n            $max = $product if $product > $max;\n            $product = 1;\n            $start = $end;\n            $end++;\n        }\n    }\n    $max = $product if $product > $max;\n    return $max;\n}",
    "    my @max_product = (1) x scalar(@$arr);\n    my @max_product_index = (0) x scalar(@$arr);\n    my $max_product = 1;\n    for my $i (1 .. $#$arr) {\n        for my $j (0 .. $i - 1) {\n            if ($arr->[$i] > $arr->[$j]) {\n                if ($max_product[$i] < $max_product[$j] * $arr->[$i]) {\n                    $max_product[$i] = $max_product[$j] * $arr->[$i];\n                    $max_product_index[$i] = $j;\n                }\n            }\n        }\n        if ($max_product < $max_product[$i]) {\n            $max_product = $max_product[$i];\n        }\n    }\n    return $max_product;\n}",
    "    my $max = 0;\n    my $prod = 1;\n    my $start = 0;\n    my $end = 0;\n    for my $i (0 .. $#$arr) {\n        if ($arr->[$i] == 0) {\n            $prod = 1;\n            $start = $i + 1;\n            $end = $i + 1;\n        } else {\n            $prod *= $arr->[$i];\n            $end = $i;\n            $max = $prod if $prod > $max;\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $product = 1;\n    for my $i (0 .. $#$arr) {\n        $product *= $arr->[$i];\n        $max = $product if $product > $max;\n    }\n    return $max;\n}",
    "    my $n = scalar @$arr;\n    my @max_product = @$arr;\n    my $max = $arr->[0];\n    for (my $i = 1; $i < $n; $i++) {\n        for (my $j = 0; $j < $i; $j++) {\n            if ($arr->[$i] > $arr->[$j]) {\n                $max_product[$i] = max($max_product[$i], $max_product[$j] * $arr->[$i]);\n            }\n        }\n        $max = max($max, $max_product[$i]);\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $max_product = 0;\n    my $min = 0;\n    my $min_product = 0;\n    for my $i (0..$#$arr) {\n        my $product = $arr->[$i];\n        if ($product > 0) {\n            $max_product = $max_product ? $max_product * $product : $product;\n            $min_product = $min_product ? $min_product * $product : $product;\n        }\n        elsif ($product < 0) {\n            my $tmp = $max_product;\n            $max_product = $min_product ? $min_product * $product : $product;\n            $min_product = $tmp ? $tmp * $product : $product;\n        }\n        else {\n            $max_product = 0;\n            $min_product = 0;\n        }\n        $max = $max_product if $max_product > $max;\n        $min = $min_product if $min_product < $min;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $product = 1;\n    my $i = 0;\n    my $j = 0;\n    while ($i < scalar @$arr) {\n        if ($arr->[$i] > $arr->[$i+1]) {\n            $j = $i;\n            $product = 1;\n        }\n        $product *= $arr->[$i];\n        $max = $product if $product > $max;\n        $i++;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $max_product = 0;\n    for (my $i = 0; $i < scalar(@$arr); $i++) {\n        if ($arr->[$i] > $max) {\n            $max = $arr->[$i];\n            $max_product = $max_product * $max;\n        }\n    }\n    return $max_product;\n}",
    "    my $max = 0;\n    my $prod = 1;\n    my $start = 0;\n    my $end = 0;\n    my $n = scalar(@$arr);\n    while ($end < $n) {\n        $prod *= $arr->[$end];\n        if ($prod > $max) {\n            $max = $prod;\n        }\n        if ($prod < 0) {\n            $prod = 1;\n            $start = $end + 1;\n        }\n        $end++;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $prod = 1;\n    my $i = 0;\n    my $j = 0;\n    while ($j < scalar @$arr) {\n        if ($arr->[$j] > $arr->[$i]) {\n            $prod *= $arr->[$j];\n            $j++;\n        } else {\n            $prod /= $arr->[$i];\n            $i++;\n        }\n        $max = $prod if $prod > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $prod = 1;\n    my $start = 0;\n    my $end = 0;\n    my $i = 0;\n    while ($i < scalar(@$arr)) {\n        $prod *= $arr->[$i];\n        if ($prod > $max) {\n            $max = $prod;\n            $end = $i;\n        }\n        if ($prod < 0) {\n            $prod = 1;\n            $start = $i + 1;\n        }\n        $i++;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $prod = 1;\n    my $i = 0;\n    my $j = 0;\n    while ($i < scalar(@$arr)) {\n        if ($arr->[$i] > $arr->[$i+1]) {\n            $prod *= $arr->[$i];\n            $i++;\n        } else {\n            $prod *= $arr->[$i];\n            $i++;\n            $max = $prod if $prod > $max;\n            $prod = 1;\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $prod = 1;\n    my $i = 0;\n    my $j = 0;\n    while ($i < scalar(@$arr)) {\n        if ($arr->[$i] > $arr->[$j]) {\n            $prod *= $arr->[$i];\n            $i++;\n        } else {\n            $prod /= $arr->[$j];\n            $j++;\n        }\n        $max = $prod if $prod > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $prod = 1;\n    my $i = 0;\n    my $j = 0;\n    my $n = scalar(@$arr);\n    while($i < $n) {\n        if($arr->[$i] > $arr->[$j]) {\n            $prod *= $arr->[$i];\n            $i++;\n        } else {\n            $prod /= $arr->[$j];\n            $j++;\n        }\n        $max = $prod if($prod > $max);\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $product = 1;\n    for my $i (0..$#$arr) {\n        $product *= $arr->[$i];\n        $max = $product if $product > $max;\n        $product = 1 if $product == 0;\n    }\n    return $max;\n}",
    "    my $max_product = 0;\n    my $max_product_ending_here = 1;\n    my $min_product_ending_here = 1;\n    for my $i (0..$#$arr) {\n        if ($arr->[$i] > 0) {\n            $max_product_ending_here *= $arr->[$i];\n            $min_product_ending_here = min($min_product_ending_here * $arr->[$i], 1);\n        }\n        elsif ($arr->[$i] == 0) {\n            $max_product_ending_here = 1;\n            $min_product_ending_here = 1;\n        }\n        else {\n            my $temp = $max_product_ending_here;\n            $max_product_ending_here = max($min_product_ending_here * $arr->[$i], 1);\n            $min_product_ending_here = $temp * $arr->[$i];\n        }\n        $max_product = max($max_product, $max_product_ending_here);\n    }\n    return $max_product;\n}",
    "    my $max_product = 0;\n    my $max_product_ending_here = 1;\n    my $min_product_ending_here = 1;\n    for my $i (0 .. $#$arr) {\n        if ($arr->[$i] > 0) {\n            $max_product_ending_here *= $arr->[$i];\n            $min_product_ending_here = min($min_product_ending_here * $arr->[$i], 1);\n        }\n        elsif ($arr->[$i] == 0) {\n            $max_product_ending_here = 1;\n            $min_product_ending_here = 1;\n        }\n        else {\n            my $temp = $max_product_ending_here;\n            $max_product_ending_here = max($min_product_ending_here * $arr->[$i], 1);\n            $min_product_ending_here = $temp * $arr->[$i];\n        }\n        $max_product = max($max_product, $max_product_ending_here);\n    }\n    return $max_product;\n}",
    "    my $max = 0;\n    my $max_product = 1;\n    my $min_product = 1;\n    for my $i (0..$#$arr) {\n        if ($arr->[$i] > 0) {\n            $max_product *= $arr->[$i];\n            $min_product = min($min_product * $arr->[$i], 1);\n        } elsif ($arr->[$i] == 0) {\n            $max_product = 1;\n            $min_product = 1;\n        } else {\n            my $tmp = $max_product;\n            $max_product = max($min_product * $arr->[$i], 1);\n            $min_product = $tmp * $arr->[$i];\n        }\n        $max = max($max, $max_product);\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $product = 1;\n    my $i = 0;\n    my $j = 0;\n    my $n = scalar @$arr;\n    while ($i < $n) {\n        if ($arr->[$i] > $arr->[$j]) {\n            $product *= $arr->[$i];\n            $i++;\n        } else {\n            $product /= $arr->[$j];\n            $j++;\n        }\n        $max = $product if $product > $max;\n    }\n    return $max;\n}",
    "    my $max_product = 0;\n    my $max_product_so_far = 0;\n    my $min_product_so_far = 0;\n    for my $i (0..$#$arr) {\n        my $curr = $arr->[$i];\n        my $max_product_using_curr = $max_product_so_far * $curr;\n        my $min_product_using_curr = $min_product_so_far * $curr;\n        $max_product_so_far = max($curr, $max_product_using_curr, $min_product_using_curr);\n        $min_product_so_far = min($curr, $max_product_using_curr, $min_product_using_curr);\n        $max_product = max($max_product, $max_product_so_far);\n    }\n    return $max_product;\n}",
    "    my $n = scalar @$arr;\n    my $max = 0;\n    for my $i (0..$n-1) {\n        my $prod = 1;\n        for my $j ($i..$n-1) {\n            $prod *= $arr->[$j];\n            $max = $prod if $prod > $max;\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $n = scalar @$arr;\n    for (my $i = 0; $i < $n; $i++) {\n        my $prod = 1;\n        for (my $j = $i; $j < $n; $j++) {\n            $prod *= $arr->[$j];\n            $max = $prod if $prod > $max;\n        }\n    }\n    return $max;\n}",
    "    my $max = $arr->[0];\n    my $min = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        my $curr = $arr->[$i];\n        my $tmp_max = $max;\n        $max = max($curr, $curr * $max, $curr * $min);\n        $min = min($curr, $curr * $tmp_max, $curr * $min);\n        $max_product = max($max_product, $max);\n    }\n    return $max_product;\n}",
    "    my $max_product = 0;\n    my $max_product_so_far = 0;\n    my $min_product_so_far = 0;\n    my $max_product_ending_here = 1;\n    my $min_product_ending_here = 1;\n    for my $i (0..$#$arr) {\n        if ($arr->[$i] > 0) {\n            $max_product_ending_here *= $arr->[$i];\n            $min_product_ending_here = min($min_product_ending_here * $arr->[$i], 1);\n        } elsif ($arr->[$i] == 0) {\n            $max_product_ending_here = 1;\n            $min_product_ending_here = 1;\n        } else {\n            my $temp = $max_product_ending_here;\n            $max_product_ending_here = max($min_product_ending_here * $arr->[$i], 1);\n            $min_product_ending_here = $temp * $arr->[$i];\n        }\n        if ($max_product_so_far < $max_product_ending_here) {\n            $max_product_so_far = $max_product_ending_here;\n        }\n    }\n    return $max_product_so_far;\n}",
    "    my $max = 0;\n    my $curr = 0;\n    my $prev = 0;\n    for my $i (0..$#$arr) {\n        if ($i == 0) {\n            $curr = $arr->[$i];\n        } else {\n            $curr = $prev * $arr->[$i];\n        }\n        $max = $curr if $curr > $max;\n        $prev = $curr;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $product = 1;\n    my $i = 0;\n    my $j = 0;\n    while($i < scalar @$arr) {\n        while($j < scalar @$arr) {\n            if($arr->[$j] > $arr->[$i]) {\n                $product *= $arr->[$j];\n                $i = $j;\n                $j++;\n            } else {\n                $j++;\n            }\n        }\n        if($product > $max) {\n            $max = $product;\n        }\n        $product = 1;\n        $i++;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    for my $i (0..$#$arr) {\n        my $prod = $arr->[$i];\n        for my $j ($i+1..$#$arr) {\n            $prod *= $arr->[$j] if $arr->[$j] > $arr->[$j-1];\n            $max = $prod if $prod > $max;\n        }\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    my @max_product = (1) x $n;\n    my @max_product_from_right = (1) x $n;\n    my $max_product = 1;\n    for my $i (1 .. $n - 1) {\n        for my $j (0 .. $i - 1) {\n            if ($arr->[$i] > $arr->[$j]) {\n                $max_product[$i] = max($max_product[$i], $max_product[$j] * $arr->[$i]);\n            }\n        }\n        $max_product = max($max_product, $max_product[$i]);\n    }\n    for my $i (reverse(0 .. $n - 2)) {\n        for my $j (reverse($i + 1 .. $n - 1)) {\n            if ($arr->[$i] > $arr->[$j]) {\n                $max_product_from_right[$i] = max($max_product_from_right[$i], $max_product_from_right[$j] * $arr->[$i]);\n            }\n        }\n    }\n    for my $i (0 .. $n - 1) {\n        $max_product = max($max_product, $max_product[$i] * $max_product_from_right[$i]);\n    }\n    return $max_product;\n}",
    "    my $max_product = 0;\n    my $max_product_so_far = 0;\n    my $max_product_ending_here = 0;\n    my $min_product_ending_here = 0;\n    for my $i (0..$#$arr) {\n        if ($arr->[$i] == 0) {\n            $max_product_ending_here = 0;\n            $min_product_ending_here = 0;\n        }\n        elsif ($arr->[$i] > 0) {\n            $max_product_ending_here = $max_product_ending_here == 0 ? $arr->[$i] : $max_product_ending_here * $arr->[$i];\n            $min_product_ending_here = $min_product_ending_here == 0 ? 1 : $min_product_ending_here * $arr->[$i];\n        }\n        else {\n            my $tmp = $max_product_ending_here;\n            $max_product_ending_here = $min_product_ending_here == 0 ? 1 : $min_product_ending_here * $arr->[$i];\n            $min_product_ending_here = $tmp == 0 ? $arr->[$i] : $tmp * $arr->[$i];\n        }\n        $max_product_so_far = max($max_product_so_far, $max_product_ending_here);\n    }\n    return $max_product_so_far;\n}",
    "    my $max = 0;\n    my $product = 1;\n    for my $i (0 .. $#$arr) {\n        $product *= $arr->[$i];\n        $max = $product if $product > $max;\n        $product = 1 if $product == 0;\n    }\n    return $max;\n}",
    "    my @max_product = (1) x scalar(@$arr);\n    my @max_product_index = (0) x scalar(@$arr);\n    my $max_product = 1;\n    for my $i (1 .. $#$arr) {\n        for my $j (0 .. $i-1) {\n            if ($arr->[$j] < $arr->[$i]) {\n                my $product = $max_product[$j] * $arr->[$i];\n                if ($product > $max_product[$i]) {\n                    $max_product[$i] = $product;\n                    $max_product_index[$i] = $j;\n                }\n            }\n        }\n        if ($max_product[$i] > $max_product) {\n            $max_product = $max_product[$i];\n        }\n    }\n    return $max_product;\n}",
    "    my $max = 0;\n    my $max_product = 0;\n    my $product = 1;\n    for my $i (0..$#$arr) {\n        if ($arr->[$i] > $max) {\n            $max = $arr->[$i];\n            $product *= $arr->[$i];\n            $max_product = $product if $product > $max_product;\n        } else {\n            $product = 1;\n        }\n    }\n    return $max_product;\n}",
    "    my $max_product = 0;\n    my $max_product_so_far = 0;\n    my $min_product_so_far = 0;\n    my $max_product_ending_here = 0;\n    my $min_product_ending_here = 0;\n    for my $i (0..$#$arr) {\n        if ($arr->[$i] > 0) {\n            $max_product_ending_here = $max_product_ending_here == 0 ? $arr->[$i] : $max_product_ending_here * $arr->[$i];\n            $min_product_ending_here = $min_product_ending_here == 0 ? $arr->[$i] : $min_product_ending_here * $arr->[$i];\n        }\n        elsif ($arr->[$i] == 0) {\n            $max_product_ending_here = 0;\n            $min_product_ending_here = 0;\n        }\n        else {\n            my $temp = $max_product_ending_here;\n            $max_product_ending_here = $min_product_ending_here == 0 ? 0 : $min_product_ending_here * $arr->[$i];\n            $min_product_ending_here = $temp == 0 ? $arr->[$i] : $temp * $arr->[$i];\n        }\n        if ($max_product_ending_here > $max_product_so_far) {\n            $max_product_so_far = $max_product_ending_here;\n        }\n        if ($min_product_ending_here < $min_product_so_far) {\n            $min_product_so_far = $min_product_ending_here;\n        }\n    }\n    return $max_product_so_far;\n}",
    "    my $max = 0;\n    my $max_product = 0;\n    my $product = 1;\n    for my $i (0 .. $#{$arr}) {\n        if ($arr->[$i] > $max) {\n            $max = $arr->[$i];\n            $product *= $arr->[$i];\n        }\n        if ($product > $max_product) {\n            $max_product = $product;\n        }\n    }\n    return $max_product;\n}",
    "    my $max = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1..$#$arr) {\n        $max = max($max, $arr->[$i]);\n        $max_product = max($max_product, $max * $arr->[$i]);\n    }\n    return $max_product;\n}",
    "    my $max = 0;\n    my $prod = 1;\n    for my $i (0..$#$arr) {\n        $prod *= $arr->[$i];\n        $max = $prod if $prod > $max;\n        $prod = 1 if $prod < 1;\n    }\n    return $max;\n}",
    "    my $max_product = 0;\n    my $max_product_so_far = 0;\n    my $max_product_ending_here = 1;\n    my $min_product_ending_here = 1;\n    for my $i (0..$#$arr) {\n        if ($arr->[$i] > 0) {\n            $max_product_ending_here *= $arr->[$i];\n            $min_product_ending_here = min($min_product_ending_here * $arr->[$i], 1);\n        }\n        elsif ($arr->[$i] == 0) {\n            $max_product_ending_here = 1;\n            $min_product_ending_here = 1;\n        }\n        else {\n            my $temp = $max_product_ending_here;\n            $max_product_ending_here = max($min_product_ending_here * $arr->[$i], 1);\n            $min_product_ending_here = $temp * $arr->[$i];\n        }\n        if ($max_product_so_far < $max_product_ending_here) {\n            $max_product_so_far = $max_product_ending_here;\n        }\n    }\n    return $max_product_so_far;\n}",
    "    my $max = 0;\n    my $product = 1;\n    my $start = 0;\n    my $end = 0;\n    my $i = 0;\n    while ($i < scalar @$arr) {\n        if ($arr->[$i] > $arr->[$i-1]) {\n            $product *= $arr->[$i];\n            $end = $i;\n        } else {\n            if ($product > $max) {\n                $max = $product;\n            }\n            $product = 1;\n            $start = $i;\n            $end = $i;\n        }\n        $i++;\n    }\n    if ($product > $max) {\n        $max = $product;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $max_product = 0;\n    my $max_product_idx = 0;\n    my $max_product_count = 0;\n    my $max_product_arr = [];\n    for my $i (0 .. $#{$arr}) {\n        if ($arr->[$i] > $max) {\n            $max = $arr->[$i];\n            $max_product = $max;\n            $max_product_idx = $i;\n            $max_product_count = 1;\n            $max_product_arr = [$max];\n        }\n        for my $j ($i + 1 .. $#{$arr}) {\n            if ($arr->[$j] > $arr->[$i]) {\n                my $product = $arr->[$i] * $arr->[$j];\n                if ($product > $max_product) {\n                    $max_product = $product;\n                    $max_product_idx = $i;\n                    $max_product_count = 2;\n                    $max_product_arr = [$arr->[$i], $arr->[$j]];\n                }\n            }\n        }\n    }\n    for my $i ($max_product_idx + 1 .. $#{$arr}) {\n        if ($arr->[$i] > $arr->[$max_product_idx]) {\n            my $product = $max_product * $arr->[$i];\n            if ($product > $max_product) {\n                $max_product = $product;\n                $max_product_count++;\n                push @{$max_product_arr}, $arr->[$i];\n            }\n        }\n    }\n    return ($max_product, $max_product_count, $max_product_arr);\n}",
    "    my $max_product = 0;\n    my $max_product_so_far = 0;\n    my $min_product_so_far = 0;\n    my $max_so_far = 0;\n    my $min_so_far = 0;\n    for my $i (0..$#$arr) {\n        if ($arr->[$i] > 0) {\n            $max_so_far = max($max_so_far * $arr->[$i], $arr->[$i]);\n            $min_so_far = min($min_so_far * $arr->[$i], $arr->[$i]);\n        } else {\n            $max_so_far = max($min_so_far * $arr->[$i], $arr->[$i]);\n            $min_so_far = min($max_so_far * $arr->[$i], $arr->[$i]);\n        }\n        $max_product_so_far = max($max_product_so_far, $max_so_far);\n    }\n    return $max_product_so_far;\n}",
    "    my $max_product = 0;\n    my $max_so_far = 0;\n    my $min_so_far = 0;\n    my $max_ending_here = 0;\n    my $min_ending_here = 0;\n    for my $i (0..$#$arr) {\n        if ($arr->[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr->[$i];\n            $min_ending_here = min($min_ending_here * $arr->[$i], 1);\n        }\n        elsif ($arr->[$i] == 0) {\n            $max_ending_here = 0;\n            $min_ending_here = 0;\n        }\n        else {\n            $max_ending_here = $min_ending_here * $arr->[$i];\n            $min_ending_here = min($max_ending_here * $arr->[$i], 1);\n        }\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}",
    "    my $max = 0;\n    my $prod = 1;\n    my $prev = 0;\n    for my $i (0..$#$arr) {\n        if ($arr->[$i] > $prev) {\n            $prod *= $arr->[$i];\n        } else {\n            $max = $prod if $prod > $max;\n            $prod = $arr->[$i];\n        }\n        $prev = $arr->[$i];\n    }\n    $max = $prod if $prod > $max;\n    return $max;\n}",
    "    my $max = 0;\n    my $prod = 1;\n    my $i = 0;\n    my $j = 0;\n    while($i < scalar(@$arr)) {\n        if($arr->[$i] > $arr->[$j]) {\n            $prod *= $arr->[$i];\n            $i++;\n        } else {\n            $prod /= $arr->[$j];\n            $j++;\n        }\n        $max = $prod if $prod > $max;\n    }\n    return $max;\n}",
    "    my $max = $arr->[0];\n    my $min = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1..$#$arr) {\n        my $curr = $arr->[$i];\n        my $tmp_max = $max;\n        $max = max($curr, $max * $curr, $min * $curr);\n        $min = min($curr, $tmp_max * $curr, $min * $curr);\n        $max_product = max($max, $max_product);\n    }\n    return $max_product;\n}",
    "    my $max = 0;\n    my $prod = 1;\n    my $i = 0;\n    while ($i < scalar @$arr) {\n        $prod *= $arr->[$i];\n        $max = $prod if $prod > $max;\n        $i++;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $max_product = 0;\n    my $min = 0;\n    my $min_product = 0;\n    for my $i (0 .. $#$arr) {\n        if ($arr->[$i] > 0) {\n            $max_product = $max_product ? $max_product * $arr->[$i] : $arr->[$i];\n            $min_product = $min_product ? $min_product * $arr->[$i] : $arr->[$i];\n        } elsif ($arr->[$i] < 0) {\n            my $tmp = $max_product;\n            $max_product = $min_product ? $min_product * $arr->[$i] : $arr->[$i];\n            $min_product = $tmp ? $tmp * $arr->[$i] : $arr->[$i];\n        } else {\n            $max_product = 0;\n            $min_product = 0;\n        }\n        $max = $max_product if $max_product > $max;\n        $min = $min_product if $min_product < $min;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $curr = 0;\n    for my $i (0 .. $#$arr) {\n        if ($arr->[$i] > $curr) {\n            $curr = $arr->[$i];\n            $max = $curr if $curr > $max;\n        } else {\n            $curr = $arr->[$i];\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $max_product = 1;\n    my $min_product = 1;\n    for my $num (@$arr) {\n        if ($num > 0) {\n            $max_product *= $num;\n            $min_product = min($min_product * $num, 1);\n        } elsif ($num == 0) {\n            $max_product = 1;\n            $min_product = 1;\n        } else {\n            my $tmp = $max_product;\n            $max_product = max($min_product * $num, 1);\n            $min_product = $tmp * $num;\n        }\n        $max = max($max, $max_product);\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $max_product = 0;\n    my $min = 0;\n    my $min_product = 0;\n    for my $i (0..$#$arr) {\n        if ($arr->[$i] > 0) {\n            $max = $max * $arr->[$i];\n            $min = $min_product * $arr->[$i];\n        }\n        elsif ($arr->[$i] == 0) {\n            $max = 0;\n            $min = 0;\n        }\n        else {\n            $max_product = $min * $arr->[$i];\n            $min_product = $max * $arr->[$i];\n        }\n        $max = max($max, $arr->[$i]);\n        $min = min($min, $arr->[$i]);\n        $max_product = max($max_product, $max);\n        $min_product = min($min_product, $min);\n    }\n    return $max_product;\n}",
    "    my @max_product = (1) x scalar(@$arr);\n    my @max_product_idx = (0) x scalar(@$arr);\n    for my $i (1..$#$arr) {\n        for my $j (0..$i-1) {\n            if ($arr->[$i] > $arr->[$j] && $max_product[$i] < $max_product[$j] * $arr->[$i]) {\n                $max_product[$i] = $max_product[$j] * $arr->[$i];\n                $max_product_idx[$i] = $j;\n            }\n        }\n    }\n    my $max_idx = 0;\n    for my $i (1..$#$arr) {\n        if ($max_product[$i] > $max_product[$max_idx]) {\n            $max_idx = $i;\n        }\n    }\n    my @result;\n    while ($max_idx != $max_product_idx[$max_idx]) {\n        push @result, $arr->[$max_idx];\n        $max_idx = $max_product_idx[$max_idx];\n    }\n    push @result, $arr->[$max_idx];\n    return \\@result;\n}",
    "    my $max = 0;\n    my $min = 0;\n    my $result = 0;\n    for my $i (0..$#$arr) {\n        if ($arr->[$i] > 0) {\n            $max = $max * $arr->[$i];\n            $min = $min * $arr->[$i];\n        } else {\n            my $temp = $max;\n            $max = $min * $arr->[$i];\n            $min = $temp * $arr->[$i];\n        }\n        $max = $arr->[$i] if $max < $arr->[$i];\n        $min = $arr->[$i] if $min > $arr->[$i];\n        $result = $max if $result < $max;\n    }\n    return $result;\n}",
    "    my $max = 0;\n    my $max_product = 1;\n    for my $i (0..$#$arr) {\n        if ($arr->[$i] > $max) {\n            $max = $arr->[$i];\n            $max_product *= $max;\n        }\n    }\n    return $max_product;\n}",
    "    my @dp = (1) x scalar @$arr;\n    my $max = 0;\n    for my $i (0..$#$arr) {\n        for my $j (0..$i-1) {\n            if ($arr->[$j] < $arr->[$i]) {\n                $dp[$i] = max($dp[$i], $dp[$j] * $arr->[$i]);\n            }\n        }\n        $max = max($max, $dp[$i]);\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $curr = 0;\n    for my $i (0..$#$arr) {\n        $curr = $arr->[$i] if $curr == 0;\n        $curr *= $arr->[$i];\n        $max = $curr if $curr > $max;\n    }\n    return $max;\n}",
    "    my $max_product = 1;\n    my $product = 1;\n    my $last_max = 0;\n    for my $i (0 .. $#$arr) {\n        if ($arr->[$i] > $last_max) {\n            $product *= $arr->[$i];\n            $last_max = $arr->[$i];\n        }\n        else {\n            $max_product = max($max_product, $product);\n            $product = 1;\n            $last_max = 0;\n        }\n    }\n    $max_product = max($max_product, $product);\n    return $max_product;\n}",
    "    my $max = 0;\n    my $max_product = 0;\n    my $product = 1;\n    for my $i (0 .. $#$arr) {\n        if ($arr->[$i] > $max) {\n            $max = $arr->[$i];\n            $product *= $arr->[$i];\n        }\n        if ($product > $max_product) {\n            $max_product = $product;\n        }\n    }\n    return $max_product;\n}",
    "    my $max = 0;\n    my $prod = 1;\n    my $i = 0;\n    my $j = 0;\n    while ($i < scalar(@$arr)) {\n        if ($arr->[$i] > $arr->[$j]) {\n            $prod *= $arr->[$i];\n            $i++;\n        } else {\n            $prod /= $arr->[$j];\n            $j++;\n        }\n        $max = $prod if $prod > $max;\n    }\n    return $max;\n}",
    "    my $max_prod = 0;\n    my $max_prod_so_far = 0;\n    my $max_so_far = 0;\n    my $max_so_far_idx = 0;\n    for my $i (0..$#$arr) {\n        if ($arr->[$i] > $max_so_far) {\n            $max_so_far = $arr->[$i];\n            $max_so_far_idx = $i;\n        }\n        if ($max_so_far_idx < $i) {\n            $max_prod_so_far = $max_prod_so_far * $arr->[$i];\n        } else {\n            $max_prod_so_far = $arr->[$i];\n        }\n        if ($max_prod_so_far > $max_prod) {\n            $max_prod = $max_prod_so_far;\n        }\n    }\n    return $max_prod;\n}",
    "    my $max = 0;\n    my $product = 1;\n    for my $i (0..$#$arr) {\n        $product *= $arr->[$i];\n        if ($product > $max) {\n            $max = $product;\n        }\n    }\n    return $max;\n}",
    "    my $max_product = 1;\n    my $product = 1;\n    my $len = scalar(@$arr);\n    for (my $i = 0; $i < $len; $i++) {\n        $product *= $arr->[$i];\n        if ($product > $max_product) {\n            $max_product = $product;\n        }\n        if ($product == 0) {\n            $product = 1;\n        }\n    }\n    return $max_product;\n}",
    "    my $max = 0;\n    my $prod = 1;\n    for my $i (0..$#$arr) {\n        $prod *= $arr->[$i];\n        $max = $prod if $prod > $max;\n        $prod = 1 if $prod == 0;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $prod = 1;\n    my $prev = 0;\n    for my $i (0..$#$arr) {\n        if ($arr->[$i] > $prev) {\n            $prod *= $arr->[$i];\n            $max = $prod if $prod > $max;\n        } else {\n            $prod = $arr->[$i];\n        }\n        $prev = $arr->[$i];\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $prod = 1;\n    for my $i (0..$#$arr) {\n        $prod *= $arr->[$i];\n        $max = $prod if $prod > $max;\n        $prod = 1 if $prod == 0;\n    }\n    return $max;\n}",
    "    my $max_product = 0;\n    my $max_product_so_far = 0;\n    my $min_product_so_far = 0;\n    my $max_product_ending_here = 0;\n    my $min_product_ending_here = 0;\n    for my $i (0..$#$arr) {\n        if ($arr->[$i] > 0) {\n            $max_product_ending_here = max($max_product_ending_here * $arr->[$i], $arr->[$i]);\n            $min_product_ending_here = min($min_product_ending_here * $arr->[$i], $arr->[$i]);\n        } elsif ($arr->[$i] == 0) {\n            $max_product_ending_here = 0;\n            $min_product_ending_here = 0;\n        } else {\n            my $temp = $max_product_ending_here;\n            $max_product_ending_here = max($min_product_ending_here * $arr->[$i], $arr->[$i]);\n            $min_product_ending_here = min($temp * $arr->[$i], $arr->[$i]);\n        }\n        if ($max_product_so_far < $max_product_ending_here) {\n            $max_product_so_far = $max_product_ending_here;\n        }\n    }\n    return $max_product_so_far;\n}",
    "    my $max = 0;\n    my $max_product = 1;\n    my $min_product = 1;\n    for my $i (0..$#$arr) {\n        if ($arr->[$i] > 0) {\n            $max_product *= $arr->[$i];\n            $min_product = min($min_product * $arr->[$i], 1);\n        } elsif ($arr->[$i] == 0) {\n            $max_product = 1;\n            $min_product = 1;\n        } else {\n            my $temp = $max_product;\n            $max_product = max($min_product * $arr->[$i], 1);\n            $min_product = $temp * $arr->[$i];\n        }\n        $max = max($max, $max_product);\n    }\n    return $max;\n}",
    "    my $max = 0;\n    for my $i (0..$#$arr) {\n        for my $j ($i+1..$#$arr) {\n            my $prod = $arr->[$i] * $arr->[$j];\n            $max = $prod if $prod > $max;\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $product = 1;\n    for my $i (0 .. $#$arr) {\n        if ($arr->[$i] > $max) {\n            $max = $arr->[$i];\n            $product *= $max;\n        }\n    }\n    return $product;\n}",
    "    my $max = 0;\n    my $prod = 1;\n    my $i = 0;\n    my $j = 0;\n    while ($i < scalar @$arr) {\n        while ($j < scalar @$arr && $arr->[$j] > $arr->[$i]) {\n            $prod *= $arr->[$j];\n            $j++;\n        }\n        $max = $prod if $prod > $max;\n        $prod /= $arr->[$i];\n        $i++;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $max_product = 0;\n    my $max_product_index = 0;\n    my $max_product_length = 0;\n    my $max_product_start = 0;\n    my $max_product_end = 0;\n    for my $i (0..$#$arr) {\n        if ($arr->[$i] > $max) {\n            $max = $arr->[$i];\n            $max_product = $max;\n            $max_product_index = $i;\n            $max_product_length = 1;\n            $max_product_start = $i;\n            $max_product_end = $i;\n        }\n        for my $j ($i+1..$#$arr) {\n            if ($arr->[$j] > $arr->[$i]) {\n                my $product = $arr->[$j] * $max_product;\n                if ($product > $max_product) {\n                    $max_product = $product;\n                    $max_product_index = $j;\n                    $max_product_length = $j - $i + 1;\n                    $max_product_start = $i;\n                    $max_product_end = $j;\n                }\n            }\n        }\n    }\n    return ($max_product, $max_product_index, $max_product_length, $max_product_start, $max_product_end);\n}",
    "    my $max = 0;\n    my $max_product = 0;\n    my $product = 1;\n    for my $i (0 .. $#$arr) {\n        if ($arr->[$i] > $max) {\n            $max = $arr->[$i];\n            $product *= $arr->[$i];\n            if ($product > $max_product) {\n                $max_product = $product;\n            }\n        } else {\n            $product = 1;\n        }\n    }\n    return $max_product;\n}",
    "    my $max = 0;\n    my $product = 1;\n    my $i = 0;\n    my $j = 0;\n    while ($i < scalar @$arr) {\n        if ($arr->[$i] > $arr->[$i - 1]) {\n            $product *= $arr->[$i];\n            $i++;\n        } else {\n            $max = $product if $product > $max;\n            $product = 1;\n            $i = $j + 1;\n            $j = $i;\n        }\n    }\n    $max = $product if $product > $max;\n    return $max;\n}",
    "    my $max = 0;\n    my $max_product = 1;\n    my $min_product = 1;\n    my $n = scalar @$arr;\n    for my $i (0..$n-1) {\n        if ($arr->[$i] > 0) {\n            $max_product *= $arr->[$i];\n            $min_product = min($min_product * $arr->[$i], 1);\n        } elsif ($arr->[$i] == 0) {\n            $max_product = 1;\n            $min_product = 1;\n        } else {\n            my $temp = $max_product;\n            $max_product = max($min_product * $arr->[$i], 1);\n            $min_product = $temp * $arr->[$i];\n        }\n        $max = max($max, $max_product);\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $prod = 1;\n    for my $i (0 .. $#$arr) {\n        $prod *= $arr->[$i];\n        $max = $prod if $prod > $max;\n        $prod = 1 if $prod < 1;\n    }\n    return $max;\n}",
    "    my $max_product = 0;\n    my $max_product_so_far = 0;\n    my $min_product_so_far = 0;\n    my $max_so_far = 0;\n    my $min_so_far = 0;\n    for my $i (0..$#$arr) {\n        if ($arr->[$i] > 0) {\n            $max_so_far = max($max_so_far * $arr->[$i], $arr->[$i]);\n            $min_so_far = min($min_so_far * $arr->[$i], $arr->[$i]);\n        } else {\n            $max_so_far = max($min_so_far * $arr->[$i], $arr->[$i]);\n            $min_so_far = min($max_so_far * $arr->[$i], $arr->[$i]);\n        }\n        $max_product_so_far = max($max_so_far, $max_product_so_far);\n    }\n    return $max_product_so_far;\n}",
    "    my $max = 0;\n    my $curr = 1;\n    for my $i (0..$#$arr) {\n        $curr *= $arr->[$i];\n        $max = $curr if $curr > $max;\n        $curr = 1 if $curr < 1;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $max_product = 1;\n    my $min_product = 1;\n    for my $num (@$arr) {\n        if ($num > 0) {\n            $max_product *= $num;\n            $min_product = min($min_product * $num, 1);\n        }\n        elsif ($num == 0) {\n            $max_product = 1;\n            $min_product = 1;\n        }\n        else {\n            my $tmp = $max_product;\n            $max_product = max($min_product * $num, 1);\n            $min_product = $tmp * $num;\n        }\n        $max = max($max, $max_product);\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $n = scalar(@$arr);\n    my $i = 0;\n    my $j = $n - 1;\n    while ($i < $j) {\n        my $product = $arr->[$i] * $arr->[$j];\n        if ($product > $max) {\n            $max = $product;\n        }\n        if ($arr->[$i] < $arr->[$j]) {\n            $i++;\n        }\n        else {\n            $j--;\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $n = scalar(@$arr);\n    my @dp = (1) x $n;\n    for my $i (1..$n-1) {\n        for my $j (0..$i-1) {\n            if ($arr->[$i] > $arr->[$j]) {\n                $dp[$i] = max($dp[$i], $dp[$j] * $arr->[$i]);\n            }\n        }\n        $max = max($max, $dp[$i]);\n    }\n    return $max;\n}",
    "    my $max = $arr->[0];\n    my $min = $arr->[0];\n    my $result = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        my $tmp = $max;\n        $max = max($arr->[$i], $arr->[$i] * $max, $arr->[$i] * $min);\n        $min = min($arr->[$i], $arr->[$i] * $tmp, $arr->[$i] * $min);\n        $result = max($result, $max);\n    }\n    return $result;\n}",
    "    my $max = 0;\n    my $max_product = 0;\n    for my $i (0 .. $#$arr) {\n        if ($arr->[$i] > $max) {\n            $max = $arr->[$i];\n            $max_product = $max;\n        } else {\n            $max_product *= $arr->[$i];\n        }\n    }\n    return $max_product;\n}",
    "    my $max = 0;\n    my $max_so_far = 0;\n    my $min_so_far = 0;",
    "    my $max = 0;\n    my $max_product = 1;\n    for my $i (0..$#$arr) {\n        if ($arr->[$i] > $max) {\n            $max = $arr->[$i];\n            $max_product *= $max;\n        }\n    }\n    return $max_product;\n}",
    "    my $max = $arr->[0];\n    my $min = $arr->[0];\n    my $max_prod = $arr->[0];\n    for my $i (1..$#$arr) {\n        my $cur = $arr->[$i];\n        my $tmp_max = $max;\n        $max = max($cur, $cur * $max, $cur * $min);\n        $min = min($cur, $cur * $tmp_max, $cur * $min);\n        $max_prod = max($max_prod, $max);\n    }\n    return $max_prod;\n}",
    "    my $max = 0;\n    my $product = 1;\n    for my $i (0..$#$arr) {\n        if ($arr->[$i] > $max) {\n            $max = $arr->[$i];\n            $product *= $max;\n        }\n    }\n    return $product;\n}",
    "    my $max_product = 1;\n    my $curr_product = 1;\n    my $prev_product = 1;\n    my $prev_max_product = 1;\n    my $prev_min_product = 1;\n    my $prev_max_product_index = 0;\n    my $prev_min_product_index = 0;\n    for(my $i = 0; $i < scalar(@$arr); $i++) {\n        if($arr->[$i] > 0) {\n            $curr_product = $prev_product * $arr->[$i];\n            if($curr_product > $max_product) {\n                $max_product = $curr_product;\n            }\n            if($curr_product < $prev_min_product) {\n                $prev_min_product = $curr_product;\n                $prev_min_product_index = $i;\n            }\n        }\n        elsif($arr->[$i] < 0) {\n            $curr_product = $prev_product * $arr->[$i];\n            if($curr_product > $max_product) {\n                $max_product = $curr_product;\n            }\n            if($curr_product > $prev_max_product) {\n                $prev_max_product = $curr_product;\n                $prev_max_product_index = $i;\n            }\n        }\n        else {\n            $curr_product = 1;\n            $prev_max_product = 1;\n            $prev_min_product = 1;\n        }\n        $prev_product = $curr_product;\n    }\n    return $max_product;\n}",
    "    my $max = 0;\n    my $product = 1;\n    for my $i (0 .. $#$arr) {\n        $product *= $arr->[$i];\n        $max = $product if $product > $max;\n    }\n    return $max;\n}",
    "    my $n = scalar @$arr;\n    my @max_product = @$arr;\n    for my $i (1 .. $n - 1) {\n        for my $j (0 .. $i - 1) {\n            if ($arr->[$i] > $arr->[$j]) {\n                $max_product[$i] = max($max_product[$i], $max_product[$j] * $arr->[$i]);\n            }\n        }\n    }\n    return max(@max_product);\n}",
    "    my $max = 0;\n    my $max_product = 0;\n    my $max_product_so_far = 0;\n    my $min_product_so_far = 0;\n    for my $i (0..$#$arr) {\n        my $product = $max_product_so_far * $arr->[$i];\n        $max_product_so_far = max($arr->[$i], $product, $min_product_so_far * $arr->[$i]);\n        $min_product_so_far = min($arr->[$i], $product, $min_product_so_far * $arr->[$i]);\n        $max_product = max($max_product, $max_product_so_far);\n    }\n    return $max_product;\n}",
    "    my $max = 0;\n    my $prod = 1;\n    my $start = 0;\n    my $end = 0;\n    my $n = scalar @$arr;\n    while ($end < $n) {\n        $prod *= $arr->[$end];\n        if ($prod > $max) {\n            $max = $prod;\n        }\n        if ($prod == 0) {\n            $prod = 1;\n            $start = $end + 1;\n        }\n        $end++;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $len = scalar @$arr;\n    for my $i (0..$len-1) {\n        for my $j ($i+1..$len-1) {\n            my $prod = $arr->[$i] * $arr->[$j];\n            if ($prod > $max) {\n                $max = $prod;\n            }\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $prod = 1;\n    for my $i (0..$#$arr) {\n        $prod *= $arr->[$i];\n        $max = $prod if $prod > $max;\n        $prod = 1 if $prod == 0;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $cur = 0;\n    my $prev = 0;\n    for my $i (0..$#$arr) {\n        if ($i == 0) {\n            $cur = $arr->[$i];\n        } else {\n            $cur = $arr->[$i] * $prev;\n        }\n        $prev = $cur;\n        $max = $cur if $cur > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $min = 0;\n    my $result = 0;\n    for my $i (0..$#$arr) {\n        if ($arr->[$i] > 0) {\n            $max = $max * $arr->[$i];\n            $min = $min * $arr->[$i];\n        }\n        elsif ($arr->[$i] == 0) {\n            $max = 0;\n            $min = 0;\n        }\n        else {\n            my $temp = $max;\n            $max = $min * $arr->[$i];\n            $min = $temp * $arr->[$i];\n        }\n        $result = $max if $max > $result;\n    }\n    return $result;\n}",
    "    my $max = 0;\n    my $max_product = 0;\n    my $product = 1;\n    for my $i (0..$#$arr) {\n        $product *= $arr->[$i];\n        if ($product > $max_product) {\n            $max_product = $product;\n        }\n        if ($arr->[$i] > $max) {\n            $max = $arr->[$i];\n        }\n        if ($arr->[$i] == 0) {\n            $product = 1;\n        }\n    }\n    return $max_product;\n}",
    "    my $n = scalar(@$arr);\n    my $max = 0;\n    for my $i (0..$n-1) {\n        for my $j ($i+1..$n-1) {\n            my $product = $arr->[$i] * $arr->[$j];\n            if ($product > $max) {\n                $max = $product;\n            }\n        }\n    }\n    return $max;\n}",
    "    my @max_product = (1) x scalar(@$arr);\n    my @max_product_index = (0) x scalar(@$arr);\n    my $max_product = 1;\n    for my $i (1..$#$arr) {\n        for my $j (0..$i-1) {\n            if ($arr->[$j] < $arr->[$i]) {\n                my $product = $max_product[$j] * $arr->[$i];\n                if ($product > $max_product[$i]) {\n                    $max_product[$i] = $product;\n                    $max_product_index[$i] = $j;\n                }\n            }\n        }\n        if ($max_product[$i] > $max_product) {\n            $max_product = $max_product[$i];\n        }\n    }\n    return $max_product;\n}",
    "    my $max_product = 0;\n    my $max_product_so_far = 0;\n    my $max_product_ending_here = 0;\n    my $min_product_ending_here = 0;\n    for my $i (0 .. $#{$arr}) {\n        if ($arr->[$i] > 0) {\n            $max_product_ending_here = $max_product_ending_here * $arr->[$i];\n            $min_product_ending_here = min($min_product_ending_here * $arr->[$i], 1);\n        }\n        elsif ($arr->[$i] == 0) {\n            $max_product_ending_here = 1;\n            $min_product_ending_here = 1;\n        }\n        else {\n            my $temp = $max_product_ending_here;\n            $max_product_ending_here = max($min_product_ending_here * $arr->[$i], 1);\n            $min_product_ending_here = $temp * $arr->[$i];\n        }\n        if ($max_product_so_far < $max_product_ending_here) {\n            $max_product_so_far = $max_product_ending_here;\n        }\n    }\n    return $max_product_so_far;\n}",
    "    my $max = 0;\n    my $prod = 1;\n    my $i = 0;\n    my $j = 0;\n    while ($i < scalar(@$arr)) {\n        if ($arr->[$i] > $arr->[$j]) {\n            $prod *= $arr->[$i];\n            $i++;\n        } else {\n            $prod /= $arr->[$j];\n            $j++;\n        }\n        $max = $prod if $prod > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $prod = 1;\n    my $start = 0;\n    my $end = 0;\n    my $n = scalar(@$arr);\n    while ($end < $n) {\n        $prod *= $arr->[$end];\n        if ($prod > $max) {\n            $max = $prod;\n        }\n        if ($prod == 0) {\n            $prod = 1;\n            $start = $end + 1;\n        }\n        $end++;\n    }\n    return $max;\n}",
    "    my $max = -1;\n    my $n = scalar(@$arr);\n    for(my $i = 0; $i < $n; $i++) {\n        for(my $j = $i + 1; $j < $n; $j++) {\n            if($arr->[$i] < $arr->[$j]) {\n                $max = max($max, $arr->[$i] * $arr->[$j]);\n            }\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $prod = 1;\n    my $i = 0;\n    my $j = 0;\n    while ($i < scalar @$arr) {\n        if ($arr->[$i] > $arr->[$i - 1]) {\n            $prod *= $arr->[$i];\n            $i++;\n        } else {\n            $max = $prod if $prod > $max;\n            $prod = 1;\n            $i = ++$j;\n        }\n    }\n    $max = $prod if $prod > $max;\n    return $max;\n}",
    "    my $max = 0;\n    my $prod = 1;\n    my $i = 0;\n    while ($i < scalar(@$arr)) {\n        if ($arr->[$i] > $max) {\n            $max = $arr->[$i];\n            $prod *= $max;\n        }\n        $i++;\n    }\n    return $prod;\n}",
    "    my $max = 0;\n    my $max_product = 0;\n    my $product = 1;\n    my $i = 0;\n    my $j = 0;\n    while ($i < scalar @$arr) {\n        if ($arr->[$i] > $max) {\n            $max = $arr->[$i];\n            $product *= $max;\n            $i++;\n        } else {\n            $product /= $arr->[$j];\n            $j++;\n        }\n        $max_product = $product if $product > $max_product;\n    }\n    return $max_product;\n}",
    "    my $max = 0;\n    my $max_so_far = 0;\n    my $min_so_far = 0;\n    for my $i (0..$#$arr) {\n        if ($arr->[$i] > 0) {\n            $max_so_far = max($max_so_far * $arr->[$i], $arr->[$i]);\n            $min_so_far = min($min_so_far * $arr->[$i], $arr->[$i]);\n        } else {\n            my $temp = $max_so_far;\n            $max_so_far = max($min_so_far * $arr->[$i], $arr->[$i]);\n            $min_so_far = min($temp * $arr->[$i], $arr->[$i]);\n        }\n        $max = max($max, $max_so_far);\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $min = 0;\n    my $result = 1;\n    for my $num (@$arr) {\n        if ($num > 0) {\n            $max = $max * $num;\n            $min = $min * $num;\n        }\n        elsif ($num == 0) {\n            $max = 0;\n            $min = 0;\n        }\n        else {\n            my $temp = $max;\n            $max = $min * $num;\n            $min = $temp * $num;\n        }\n        $result = max($result, $max);\n    }\n    return $result;\n}",
    "    my $max = 0;\n    my $max_product = 1;\n    for my $i (0 .. $#$arr) {\n        if ($arr->[$i] > $max) {\n            $max = $arr->[$i];\n            $max_product *= $max;\n        }\n    }\n    return $max_product;\n}",
    "    my $max = 0;\n    my $prod = 1;\n    for my $i (0 .. $#$arr) {\n        $prod *= $arr->[$i];\n        $max = $prod if $prod > $max;\n        $prod = 1 if $prod == 0;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $max_so_far = 0;\n    my $min_so_far = 0;\n    for my $i (0..$#$arr) {\n        my $curr = $arr->[$i];\n        if ($curr > 0) {\n            $max_so_far = max($max_so_far * $curr, $curr);\n            $min_so_far = min($min_so_far * $curr, $curr);\n        } else {\n            my $temp = $max_so_far;\n            $max_so_far = max($min_so_far * $curr, $curr);\n            $min_so_far = min($temp * $curr, $curr);\n        }\n        $max = max($max, $max_so_far);\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $product = 1;\n    my $start = 0;\n    my $end = 0;\n    my $i = 0;\n    my $j = 0;\n    while ($i < scalar(@$arr) && $j < scalar(@$arr)) {\n        $product *= $arr->[$j];\n        if ($product > $max) {\n            $max = $product;\n            $start = $i;\n            $end = $j;\n        }\n        if ($product < 0) {\n            $i = $j + 1;\n            $product = 1;\n        }\n        $j++;\n    }\n    return [$max, $start, $end];\n}",
    "    my $max = 0;\n    my $max_product = 0;\n    my $min = 0;\n    my $min_product = 0;\n    for my $i (0..$#$arr) {\n        if ($arr->[$i] > 0) {\n            $max_product = $max_product ? $max_product * $arr->[$i] : $arr->[$i];\n            $min_product = $min_product ? $min_product * $arr->[$i] : $arr->[$i];\n        }\n        elsif ($arr->[$i] < 0) {\n            my $tmp = $max_product;\n            $max_product = $min_product ? $min_product * $arr->[$i] : $arr->[$i];\n            $min_product = $tmp ? $tmp * $arr->[$i] : $arr->[$i];\n        }\n        else {\n            $max_product = 0;\n            $min_product = 0;\n        }\n        $max = $max_product if $max_product > $max;\n        $min = $min_product if $min_product < $min;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $len = scalar(@$arr);\n    my $i = 0;\n    while($i < $len) {\n        my $j = $i + 1;\n        while($j < $len) {\n            my $product = $arr->[$i] * $arr->[$j];\n            if($product > $max) {\n                $max = $product;\n            }\n            $j++;\n        }\n        $i++;\n    }\n    return $max;\n}",
    "    my $max_product = 0;\n    my $max_product_ending_here = 1;\n    my $min_product_ending_here = 1;\n    for my $i (0..$#$arr) {\n        if ($arr->[$i] > 0) {\n            $max_product_ending_here *= $arr->[$i];\n            $min_product_ending_here = min($min_product_ending_here * $arr->[$i], 1);\n        } elsif ($arr->[$i] == 0) {\n            $max_product_ending_here = 1;\n            $min_product_ending_here = 1;\n        } else {\n            my $temp = $max_product_ending_here;\n            $max_product_ending_here = max($min_product_ending_here * $arr->[$i], 1);\n            $min_product_ending_here = $temp * $arr->[$i];\n        }\n        $max_product = max($max_product, $max_product_ending_here);\n    }\n    return $max_product;\n}",
    "    my $max = $arr->[0];\n    my $min = $arr->[0];\n    my $result = $arr->[0];\n    for(my $i = 1; $i < scalar(@$arr); $i++) {\n        my $temp = $max;\n        $max = max($arr->[$i], $arr->[$i] * $max, $arr->[$i] * $min);\n        $min = min($arr->[$i], $arr->[$i] * $temp, $arr->[$i] * $min);\n        $result = max($result, $max);\n    }\n    return $result;\n}",
    "    my $max_product = 0;\n    my $max_product_so_far = 0;\n    my $min_product_so_far = 0;\n    for my $i (0 .. $#$arr) {\n        if ($arr->[$i] > 0) {\n            $max_product_so_far = $max_product_so_far * $arr->[$i];\n            $min_product_so_far = $min_product_so_far * $arr->[$i];\n        }\n        elsif ($arr->[$i] < 0) {\n            my $temp = $max_product_so_far;\n            $max_product_so_far = $min_product_so_far * $arr->[$i];\n            $min_product_so_far = $temp * $arr->[$i];\n        }\n        else {\n            $max_product_so_far = 0;\n            $min_product_so_far = 0;\n        }\n        $max_product = max($max_product, $max_product_so_far);\n    }\n    return $max_product;\n}",
    "    my $max = 0;\n    my $max_prod = 1;\n    my $min_prod = 1;\n    for my $i (0..$#$arr) {\n        if ($arr->[$i] > 0) {\n            $max_prod *= $arr->[$i];\n            $min_prod = min($min_prod * $arr->[$i], 1);\n        }\n        elsif ($arr->[$i] == 0) {\n            $max_prod = 1;\n            $min_prod = 1;\n        }\n        else {\n            my $temp = $max_prod;\n            $max_prod = max($min_prod * $arr->[$i], 1);\n            $min_prod = $temp * $arr->[$i];\n        }\n        $max = max($max, $max_prod);\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $prod = 1;\n    for my $i (0..$#$arr) {\n        $prod *= $arr->[$i];\n        $max = $prod if $prod > $max;\n        $prod = 1 if $prod == 0;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $max_product = 0;\n    my $product = 1;\n    my $i = 0;\n    my $j = 0;\n    while ($i < scalar(@$arr)) {\n        if ($arr->[$i] > $max) {\n            $max = $arr->[$i];\n            $product *= $arr->[$i];\n            $i++;\n        } else {\n            $max_product = $product if $product > $max_product;\n            $product /= $arr->[$j];\n            $j++;\n        }\n    }\n    $max_product = $product if $product > $max_product;\n    return $max_product;\n}",
    "    my $max = $arr->[0];\n    my $min = $arr->[0];\n    my $res = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        my $tmp = $max;\n        $max = max($arr->[$i], $max * $arr->[$i], $min * $arr->[$i]);\n        $min = min($arr->[$i], $tmp * $arr->[$i], $min * $arr->[$i]);\n        $res = max($res, $max);\n    }\n    return $res;\n}",
    "    my $max = 0;\n    my $product = 1;\n    my $i = 0;\n    my $j = 0;\n    while ($i < scalar(@$arr)) {\n        if ($arr->[$i] > $arr->[$j]) {\n            $product *= $arr->[$i];\n            $i++;\n        } else {\n            $product /= $arr->[$j];\n            $j++;\n        }\n        $max = $product if $product > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $n = scalar @$arr;\n    my $i = 0;\n    my $j = 0;\n    while ($i < $n) {\n        $j = $i + 1;\n        while ($j < $n) {\n            if ($arr->[$j] > $arr->[$i]) {\n                $max = max($max, $arr->[$i] * $arr->[$j]);\n            }\n            $j++;\n        }\n        $i++;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $product = 1;\n    for my $i (0 .. $#$arr) {\n        $product *= $arr->[$i];\n        $max = $product if $product > $max;\n        $product = 1 if $product == 0;\n    }\n    return $max;\n}",
    "    my $max_product = 0;\n    my $max_product_so_far = 0;\n    my $min_product_so_far = 0;\n    my $max_product_ending_here = 0;\n    my $min_product_ending_here = 0;\n    for my $i (0..$#$arr) {\n        if ($arr->[$i] > 0) {\n            $max_product_ending_here = $max_product_ending_here * $arr->[$i];\n            $min_product_ending_here = min($min_product_ending_here * $arr->[$i], 1);\n        } elsif ($arr->[$i] == 0) {\n            $max_product_ending_here = 0;\n            $min_product_ending_here = 1;\n        } else {\n            $max_product_ending_here = $min_product_ending_here * $arr->[$i];\n            $min_product_ending_here = $max_product_ending_here * $arr->[$i];\n        }\n        $max_product_so_far = max($max_product_so_far, $max_product_ending_here);\n        $min_product_so_far = min($min_product_so_far, $min_product_ending_here);\n    }\n    return $max_product_so_far;\n}",
    "    my $max = 0;\n    my $prod = 1;\n    for my $i (0..$#$arr) {\n        $prod *= $arr->[$i];\n        if ($prod > $max) {\n            $max = $prod;\n        }\n    }\n    return $max;\n}",
    "    my $max_product = 1;\n    my $max_so_far = 1;\n    my $min_so_far = 1;\n    for my $i (0 .. $#$arr) {\n        if ($arr->[$i] > 0) {\n            $max_so_far = $max_so_far * $arr->[$i];\n            $min_so_far = min($min_so_far * $arr->[$i], 1);\n        } elsif ($arr->[$i] == 0) {\n            $max_so_far = 1;\n            $min_so_far = 1;\n        } else {\n            my $temp = $max_so_far;\n            $max_so_far = max($min_so_far * $arr->[$i], 1);\n            $min_so_far = $temp * $arr->[$i];\n        }\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "    my $max = 0;\n    my $product = 1;\n    for my $i (0..$#$arr) {\n        $product *= $arr->[$i];\n        $max = $product if $product > $max;\n        $product = 1 if $product == 0;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    for my $i (0..$#$arr) {\n        my $prod = $arr->[$i];\n        $max = $prod if $prod > $max;\n        for my $j ($i+1..$#$arr) {\n            $prod *= $arr->[$j];\n            $max = $prod if $prod > $max;\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $max_product = 0;\n    my $min = 0;\n    my $min_product = 0;\n    for my $i (0..$#$arr) {\n        if ($arr->[$i] > 0) {\n            $max_product = $max_product ? $max_product * $arr->[$i] : $arr->[$i];\n            $min_product = $min_product ? $min_product * $arr->[$i] : $arr->[$i];\n        }\n        elsif ($arr->[$i] == 0) {\n            $max_product = 0;\n            $min_product = 0;\n        }\n        else {\n            my $temp = $max_product;\n            $max_product = $min_product ? $min_product * $arr->[$i] : 0;\n            $min_product = $temp ? $temp * $arr->[$i] : $arr->[$i];\n        }\n        $max = $max_product if $max_product > $max;\n    }\n    return $max;\n}",
    "    my $max_product = 0;\n    my $max_so_far = 0;\n    my $min_so_far = 0;\n    for my $i (0..$#$arr) {\n        if ($arr->[$i] > 0) {\n            $max_so_far = $max_so_far * $arr->[$i];\n            $min_so_far = $min_so_far * $arr->[$i];\n        }\n        elsif ($arr->[$i] == 0) {\n            $max_so_far = 0;\n            $min_so_far = 0;\n        }\n        else {\n            my $temp = $max_so_far;\n            $max_so_far = $min_so_far * $arr->[$i];\n            $min_so_far = $temp * $arr->[$i];\n        }\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "    my $max = 0;\n    my $prod = 1;\n    for my $i (0 .. $#$arr) {\n        $prod *= $arr->[$i];\n        $max = $prod if $prod > $max;\n        $prod = 1 if $prod == 0;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $max_product = 0;\n    for my $i (0..$#$arr) {\n        if ($arr->[$i] > $max) {\n            $max = $arr->[$i];\n            $max_product = $max;\n        }\n        else {\n            $max_product *= $arr->[$i];\n        }\n    }\n    return $max_product;\n}",
    "    my $max = 0;\n    my $max_product = 0;\n    for my $i (0..$#$arr) {\n        if ($arr->[$i] > $max) {\n            $max = $arr->[$i];\n            $max_product = $max;\n        }\n        else {\n            $max_product *= $arr->[$i];\n        }\n    }\n    return $max_product;\n}",
    "    my $max = 0;\n    my $prod = 1;\n    for my $i (0 .. @$arr - 1) {\n        $prod *= $arr->[$i];\n        $max = $prod if $prod > $max;\n        $prod = 1 if $prod == 0;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $max_product = 1;\n    for my $i (0 .. $#$arr) {\n        if ($arr->[$i] > $max) {\n            $max = $arr->[$i];\n            $max_product *= $max;\n        }\n    }\n    return $max_product;\n}",
    "    my $max = 0;\n    my $n = scalar @$arr;\n    for my $i (0..$n-1) {\n        my $prod = 1;\n        for my $j ($i..$n-1) {\n            $prod *= $arr->[$j];\n            $max = $prod if $prod > $max;\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $n = scalar(@$arr);\n    for my $i (0..$n-1) {\n        for my $j ($i+1..$n-1) {\n            my $prod = $arr->[$i] * $arr->[$j];\n            $max = $prod if $prod > $max;\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $min = 0;\n    my $result = 0;\n    for my $i (0..$#$arr) {\n        if ($arr->[$i] > 0) {\n            $max = $max * $arr->[$i];\n            $min = $min * $arr->[$i];\n        }\n        elsif ($arr->[$i] == 0) {\n            $max = 0;\n            $min = 0;\n        }\n        else {\n            my $temp = $max;\n            $max = $min * $arr->[$i];\n            $min = $temp * $arr->[$i];\n        }\n        $result = max($result, $max);\n    }\n    return $result;\n}",
    "    my $max_product = 0;\n    my $max_so_far = 0;\n    my $min_so_far = 0;\n    for my $i (0..$#$arr) {\n        if ($arr->[$i] > 0) {\n            $max_so_far = $max_so_far * $arr->[$i];\n            $min_so_far = $min_so_far * $arr->[$i];\n        }\n        elsif ($arr->[$i] == 0) {\n            $max_so_far = 0;\n            $min_so_far = 0;\n        }\n        else {\n            my $temp = $max_so_far;\n            $max_so_far = max($min_so_far * $arr->[$i], 1);\n            $min_so_far = $temp * $arr->[$i];\n        }\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "    my $max_product = 0;\n    my $max_product_so_far = 0;\n    my $min_product_so_far = 0;\n    for my $i (0..$#$arr) {\n        if ($arr->[$i] > 0) {\n            $max_product_so_far = $max_product_so_far ? $max_product_so_far * $arr->[$i] : $arr->[$i];\n            $min_product_so_far = $min_product_so_far ? $min_product_so_far * $arr->[$i] : 0;\n        }\n        elsif ($arr->[$i] < 0) {\n            my $temp = $max_product_so_far;\n            $max_product_so_far = $min_product_so_far ? $min_product_so_far * $arr->[$i] : 0;\n            $min_product_so_far = $temp ? $temp * $arr->[$i] : $arr->[$i];\n        }\n        else {\n            $max_product_so_far = 0;\n            $min_product_so_far = 0;\n        }\n        $max_product = max($max_product, $max_product_so_far);\n    }\n    return $max_product;\n}",
    "    my $max = 0;\n    my $prod = 1;\n    for my $i (0..$#$arr) {\n        $prod *= $arr->[$i];\n        $max = $prod if $prod > $max;\n        $prod = 1 if $prod < 1;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $n = scalar(@$arr);\n    for (my $i = 0; $i < $n; $i++) {\n        my $product = $arr->[$i];\n        for (my $j = $i + 1; $j < $n; $j++) {\n            if ($arr->[$j] > $arr->[$j - 1]) {\n                $product *= $arr->[$j];\n            } else {\n                last;\n            }\n        }\n        $max = $product if $product > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $curr = 0;\n    for my $i (0 .. $#$arr) {\n        $curr = $arr->[$i] if $curr == 0;\n        $curr *= $arr->[$i];\n        $max = $curr if $curr > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $prod = 1;\n    for my $i (0..$#$arr) {\n        $prod *= $arr->[$i];\n        $max = $prod if $prod > $max;\n        $prod = 1 if $prod < 1;\n    }\n    return $max;\n}",
    "    my $max = $arr->[0];\n    my $min = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        my $curr = $arr->[$i];\n        my $temp_max = $max;\n        $max = max($curr, $max * $curr, $min * $curr);\n        $min = min($curr, $temp_max * $curr, $min * $curr);\n        $max_product = max($max_product, $max);\n    }\n    return $max_product;\n}",
    "    my $n = scalar @$arr;\n    my $max_product = 0;\n    my $max_product_ending_here = 1;\n    my $min_product_ending_here = 1;\n    for my $i (0..$n-1) {\n        if ($arr->[$i] > 0) {\n            $max_product_ending_here *= $arr->[$i];\n            $min_product_ending_here = min($min_product_ending_here * $arr->[$i], 1);\n        } elsif ($arr->[$i] == 0) {\n            $max_product_ending_here = 1;\n            $min_product_ending_here = 1;\n        } else {\n            my $temp = $max_product_ending_here;\n            $max_product_ending_here = max($min_product_ending_here * $arr->[$i], 1);\n            $min_product_ending_here = $temp * $arr->[$i];\n        }\n        $max_product = max($max_product, $max_product_ending_here);\n    }\n    return $max_product;\n}",
    "    my $max_product = 0;\n    my $max_so_far = 0;\n    my $min_so_far = 0;\n    for my $i (0 .. $#$arr) {\n        if ($arr->[$i] > 0) {\n            $max_so_far = max($max_so_far * $arr->[$i], $arr->[$i]);\n            $min_so_far = min($min_so_far * $arr->[$i], $arr->[$i]);\n        } else {\n            my $temp = $max_so_far;\n            $max_so_far = max($min_so_far * $arr->[$i], $arr->[$i]);\n            $min_so_far = min($temp * $arr->[$i], $arr->[$i]);\n        }\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "    my $n = scalar(@$arr);\n    my $max_product = 0;\n    for my $i (0..$n-1) {\n        my $product = 1;\n        for my $j ($i..$n-1) {\n            $product *= $arr->[$j];\n            $max_product = $product if $product > $max_product;\n        }\n    }\n    return $max_product;\n}",
    "    my $n = scalar(@$arr);\n    my @max_product = @$arr;\n    for my $i (1..$n-1) {\n        for my $j (0..$i-1) {\n            if ($arr->[$i] > $arr->[$j]) {\n                $max_product[$i] = max($max_product[$i], $max_product[$j] * $arr->[$i]);\n            }\n        }\n    }\n    return max(@max_product);\n}",
    "    my $max = 0;\n    my $product = 1;\n    my $i = 0;\n    my $j = 0;\n    while ($i < scalar @$arr) {\n        if ($arr->[$i] > $arr->[$j]) {\n            $product *= $arr->[$i];\n            $i++;\n        } else {\n            $product /= $arr->[$j];\n            $j++;\n        }\n        $max = $product if $product > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $max_product = 0;\n    my $product = 1;\n    for my $i (0 .. $#$arr) {\n        if ($arr->[$i] > $max) {\n            $max = $arr->[$i];\n            $product *= $max;\n            $max_product = $product if $product > $max_product;\n        } else {\n            $product = 1;\n        }\n    }\n    return $max_product;\n}"
  ]
}
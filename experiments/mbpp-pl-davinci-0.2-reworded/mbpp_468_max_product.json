{
  "name": "mbpp_468_max_product",
  "language": "pl",
  "prompt": "# Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.\nsub max_product {\n    my($arr) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_468_max_product.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&max_product;\n        if(eq_deeply($candidate->([3, 100, 4, 5, 150, 6]),3000)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([4, 42, 55, 68, 80]),50265600)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([10, 22, 9, 33, 21, 50, 41, 60]),2460)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my $max = 0;\n    my $product = 1;\n    for my $i (0..$#$arr) {\n        $product *= $arr->[$i];\n        $max = $product if $product > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $prod = 1;\n    my $i = 0;\n    while ($i < scalar(@$arr)) {\n        if ($arr->[$i] > $max) {\n            $max = $arr->[$i];\n            $prod *= $max;\n        }\n        $i++;\n    }\n    return $prod;\n}",
    "    my $max = 0;\n    my $len = scalar @$arr;\n    for my $i (0..$len-1) {\n        for my $j ($i+1..$len-1) {\n            my $prod = $arr->[$i] * $arr->[$j];\n            $max = $prod if $prod > $max;\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $max_product = 1;\n    my $min_product = 1;\n    for my $i (0..$#$arr) {\n        if ($arr->[$i] > 0) {\n            $max_product *= $arr->[$i];\n            $min_product = min($min_product * $arr->[$i], 1);\n        } elsif ($arr->[$i] == 0) {\n            $max_product = 1;\n            $min_product = 1;\n        } else {\n            my $temp = $max_product;\n            $max_product = max($min_product * $arr->[$i], 1);\n            $min_product = $temp * $arr->[$i];\n        }\n        $max = max($max, $max_product);\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $prod = 1;\n    my $i = 0;\n    my $j = 0;\n    while ($i < scalar(@$arr)) {\n        if ($arr->[$i] > $arr->[$j]) {\n            $prod *= $arr->[$i];\n            $i++;\n        } else {\n            $prod /= $arr->[$j];\n            $j++;\n        }\n        $max = $prod if ($prod > $max);\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $max_product = 0;\n    my $product = 1;\n    for my $i (0..$#$arr) {\n        if ($arr->[$i] > $max) {\n            $max = $arr->[$i];\n            $product *= $arr->[$i];\n            $max_product = $product if $product > $max_product;\n        } else {\n            $product = 1;\n        }\n    }\n    return $max_product;\n}",
    "    my $max = 0;\n    my $prod = 1;\n    my $i = 0;\n    while ($i < scalar(@$arr)) {\n        if ($arr->[$i] > $max) {\n            $max = $arr->[$i];\n            $prod *= $arr->[$i];\n        }\n        $i++;\n    }\n    return $prod;\n}",
    "    my $max = 0;\n    my $max_product = 1;\n    for my $i (0 .. $#$arr) {\n        if ($arr->[$i] > $max) {\n            $max = $arr->[$i];\n            $max_product *= $max;\n        }\n    }\n    return $max_product;\n}",
    "    my $max = 0;\n    my $prod = 1;\n    my $count = 0;\n    for my $i (0 .. $#$arr) {\n        if ($arr->[$i] > $max) {\n            $max = $arr->[$i];\n            $prod *= $arr->[$i];\n            $count++;\n        }\n    }\n    return $count > 1 ? $prod : 0;\n}",
    "    my $max = 0;\n    my $prod = 1;\n    for my $i (0..$#$arr) {\n        $prod *= $arr->[$i];\n        $max = $prod if $prod > $max;\n        $prod = 1 if $prod == 0;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $min = 0;\n    my $result = 0;\n    for my $num (@$arr) {\n        if ($num > 0) {\n            $max = max($max * $num, $num);\n            $min = min($min * $num, $num);\n        } else {\n            my $temp = $max;\n            $max = max($min * $num, $num);\n            $min = min($temp * $num, $num);\n        }\n        $result = max($result, $max);\n    }\n    return $result;\n}",
    "    my $max = 0;\n    my $product = 1;\n    for my $i (0..$#$arr) {\n        $product *= $arr->[$i];\n        $max = $product if $product > $max;\n        $product = 1 if $product == 0;\n    }\n    return $max;\n}",
    "    my $max = $arr->[0];\n    my $min = $arr->[0];\n    my $result = $arr->[0];\n    for my $i (1..$#$arr) {\n        my $tmp = $max;\n        $max = max($arr->[$i], $max * $arr->[$i], $min * $arr->[$i]);\n        $min = min($arr->[$i], $tmp * $arr->[$i], $min * $arr->[$i]);\n        $result = max($result, $max);\n    }\n    return $result;\n}",
    "    my $max = 0;\n    my $max_product = 0;\n    my $product = 1;\n    for my $i (0..$#$arr) {\n        if ($arr->[$i] > $max) {\n            $max = $arr->[$i];\n            $product *= $max;\n        }\n        if ($product > $max_product) {\n            $max_product = $product;\n        }\n    }\n    return $max_product;\n}",
    "    my $max = 0;\n    my $max_product = 0;\n    my $product = 1;\n    for my $i (0..$#$arr) {\n        if ($arr->[$i] > $max) {\n            $max = $arr->[$i];\n            $product *= $arr->[$i];\n            $max_product = $product if $product > $max_product;\n        }\n        else {\n            $product = 1;\n        }\n    }\n    return $max_product;\n}",
    "    my $max = 0;\n    my $prod = 1;\n    for my $i (0..$#$arr) {\n        $prod *= $arr->[$i];\n        $max = $prod if $prod > $max;\n        $prod = 1 if $prod < 1;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $prod = 1;\n    my $n = scalar @$arr;\n    for my $i (0..$n-1) {\n        if ($arr->[$i] > $max) {\n            $max = $arr->[$i];\n            $prod *= $max;\n        }\n    }\n    return $prod;\n}",
    "    my $max = 0;\n    my $prod = 1;\n    for my $i (0 .. $#$arr) {\n        $prod *= $arr->[$i];\n        $max = $prod if $prod > $max;\n        $prod = 1 if $prod < 1;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $product = 1;\n    for my $i (0 .. $#$arr) {\n        $product *= $arr->[$i];\n        $max = $product if $product > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    for my $i (0 .. $#$arr) {\n        my $prod = 1;\n        for my $j ($i .. $#$arr) {\n            $prod *= $arr->[$j];\n            $max = $prod if $prod > $max;\n        }\n    }\n    return $max;\n}"
  ]
}
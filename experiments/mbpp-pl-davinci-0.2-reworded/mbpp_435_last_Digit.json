{
  "name": "mbpp_435_last_Digit",
  "language": "pl",
  "prompt": "# Write a plthon function to find the last digit of a given number.\nsub last_Digit {\n    my($n) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_435_last_Digit.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit;\n        if(eq_deeply($candidate->(123),3)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(25),5)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my $last_digit = $n % 10;\n    return $last_digit;\n}",
    "    $n = $n % 10;\n    return $n;\n}",
    "    return $n % 10;\n}",
    "    return $n % 10;\n}",
    "    my $last_digit = $n % 10;\n    return $last_digit;\n}",
    "    my $last_digit = $n % 10;\n    return $last_digit;\n}",
    "    return $n % 10;\n}",
    "    return $n % 10;\n}",
    "    $n = $n % 10;\n    return $n;\n}",
    "    $n = $n % 10;\n    return $n;\n}",
    "    $n = $n % 10;\n    return $n;\n}",
    "    $n = $n % 10;\n    return $n;\n}",
    "    return $n % 10;\n}",
    "    return $n % 10;\n}",
    "    $n = $n % 10;\n    return $n;\n}",
    "    return $n % 10;\n}",
    "    $n = $n % 10;\n    return $n;\n}",
    "    return $n % 10;\n}",
    "    $n = $n % 10;\n    return $n;\n}",
    "    return $n % 10;\n}"
  ]
}
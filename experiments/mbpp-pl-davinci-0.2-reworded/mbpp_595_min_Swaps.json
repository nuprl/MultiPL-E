{
  "name": "mbpp_595_min_Swaps",
  "language": "pl",
  "prompt": "# Write a plthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\nsub min_Swaps {\n    my($str1, $str2) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_595_min_Swaps.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_Swaps;\n        if(eq_deeply($candidate->(\"1101\", \"1110\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"000\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"111\", \"110\"),\"Not Possible\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my $count = 0;\n    my @str1 = split(\"\", $str1);\n    my @str2 = split(\"\", $str2);\n    for (my $i = 0; $i < scalar(@str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for(my $i = 0; $i < scalar @str1; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for (my $i = 0; $i < scalar @str1; $i++) {\n        if ($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    for(my $i=0; $i<scalar(@str1); $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $len = length($str1);\n    for (my $i = 0; $i < $len; $i++) {\n        if (substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}",
    "    my $count = 0;\n    my @str1 = split(\"\", $str1);\n    my @str2 = split(\"\", $str2);\n    for(my $i = 0; $i < length($str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for (my $i = 0; $i < scalar @str1; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nprint min_Swaps(\"1101\", \"0101\");",
    "    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for(my $i = 0; $i < @str1; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for (my $i = 0; $i < scalar @str1; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count/2;\n}",
    "    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for(my $i = 0; $i < scalar @str1; $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $len = length($str1);\n    for (my $i = 0; $i < $len; $i++) {\n        if (substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    for (my $i = 0; $i < length($str1); $i++) {\n        if (substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for (my $i = 0; $i < scalar(@str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for (my $i = 0; $i < scalar @str1; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for(my $i = 0; $i < scalar @str1; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for(my $i = 0; $i < scalar @str1; $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for(my $i = 0; $i < scalar @str1; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for (my $i = 0; $i < scalar @str1; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $len = length($str1);\n    for (my $i = 0; $i < $len; $i++) {\n        if (substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}",
    "    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for(my $i = 0; $i < scalar @str1; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split(\"\", $str1);\n    my @str2 = split(\"\", $str2);\n    for(my $i = 0; $i < scalar @str1; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split(\"\", $str1);\n    my @str2 = split(\"\", $str2);\n    for(my $i=0; $i<$#str1; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $len = length($str1);\n    for (my $i = 0; $i < $len; $i++) {\n        if (substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}\nprint(\"Minimum swaps required to convert '1101' to '1001' is \", min_Swaps('1101', '1001'), \"\\n\");\nprint(\"Minimum swaps required to convert '1101' to '0001' is \", min_Swaps('1101', '0001'), \"\\n\");\nprint(\"Minimum swaps required to convert '1101' to '1101' is \", min_Swaps('1101', '1101'), \"\\n\");",
    "    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $len = length($str1);\n    for (my $i = 0; $i < $len; $i++) {\n        if (substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}",
    "    my $count = 0;\n    my @arr1 = split(//, $str1);\n    my @arr2 = split(//, $str2);\n    for(my $i = 0; $i < scalar @arr1; $i++) {\n        if($arr1[$i] != $arr2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for(my $i = 0; $i < scalar @str1; $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $len = length($str1);\n    for(my $i = 0; $i < $len; $i++) {\n        if(substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for(my $i=0; $i<@str1; $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    for (my $i = 0; $i < length($str1); $i++) {\n        if (substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for (my $i = 0; $i < scalar @str1; $i++) {\n        if ($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $len = length($str1);\n    for (my $i = 0; $i < $len; $i++) {\n        if (substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count/2;\n}",
    "    my $count = 0;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    for (my $i = 0; $i < scalar(@str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for (my $i = 0; $i < scalar @str1; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for(my $i=0; $i<scalar @str1; $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    for (my $i = 0; $i < scalar(@str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    my $count = 0;\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for (my $i = 0; $i < scalar @str1; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $len = length($str1);\n    for(my $i = 0; $i < $len; $i++) {\n        if(substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for(my $i = 0; $i < scalar @str1; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for (my $i = 0; $i < scalar @str1; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for (my $i = 0; $i < scalar @str1; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split(\"\", $str1);\n    my @str2 = split(\"\", $str2);\n    for(my $i = 0; $i < scalar @str1; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    for(my $i = 0; $i < scalar @str1; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $len = length($str1);\n    for(my $i = 0; $i < $len; $i++) {\n        if(substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for (my $i = 0; $i < scalar @str1; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for(my $i = 0; $i < scalar @str1; $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $len = length($str1);\n    for(my $i = 0; $i < $len; $i++) {\n        if(substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split(\"\", $str1);\n    my @str2 = split(\"\", $str2);\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    for (my $i = 0; $i < scalar(@str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for(my $i = 0; $i < scalar @str1; $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for(my $i = 0; $i < scalar @str1; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    for (my $i = 0; $i < length($str1); $i++) {\n        if (substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for(my $i = 0; $i < scalar @str1; $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @arr1 = split('', $str1);\n    my @arr2 = split('', $str2);\n    for(my $i = 0; $i < scalar(@arr1); $i++) {\n        if($arr1[$i] != $arr2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $len = length($str1);\n    for(my $i = 0; $i < $len; $i++) {\n        if(substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    for(my $i = 0; $i < scalar @str1; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    for (my $i = 0; $i < scalar @str1; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my($count) = 0;\n    my($i) = 0;\n    my($len) = length($str1);\n    while($i < $len) {\n        if(substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n        $i++;\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    for (my $i = 0; $i < scalar(@str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for (my $i = 0; $i < scalar @str1; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for (my $i = 0; $i < scalar(@str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for (my $i = 0; $i < scalar @str1; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for(my $i = 0; $i < scalar @str1; $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for (my $i = 0; $i < @str1; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $len = length($str1);\n    for (my $i = 0; $i < $len; $i++) {\n        if (substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}",
    "    my $count = 0;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    for (my $i = 0; $i < scalar @str1; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count/2;\n}",
    "    my $count = 0;\n    for(my $i = 0; $i < length($str1); $i++) {\n        if(substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for (my $i = 0; $i < scalar @str1; $i++) {\n        if ($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for(my $i = 0; $i < length($str1); $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for(my $i = 0; $i < scalar @str1; $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    for (my $i = 0; $i < scalar(@str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $len = length($str1);\n    for (my $i = 0; $i < $len; $i++) {\n        if (substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}",
    "    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for (my $i = 0; $i < scalar @str1; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $len = length($str1);\n    for(my $i = 0; $i < $len; $i++) {\n        if(substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for (my $i = 0; $i < scalar @str1; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for(my $i = 0; $i < scalar @str1; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split(\"\", $str1);\n    my @str2 = split(\"\", $str2);\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    for (my $i = 0; $i < scalar(@str1); $i++) {\n        if ($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for(my $i = 0; $i < length($str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count/2;\n}",
    "    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    my $count = 0;\n    for (my $i = 0; $i < scalar @str1; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $len = length($str1);\n    for(my $i = 0; $i < $len; $i++) {\n        if(substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    for (my $i = 0; $i < scalar @str1; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}",
    "    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for(my $i = 0; $i < scalar @str1; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for(my $i=0; $i<@str1; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count/2;\n}",
    "    my $count = 0;\n    my $len = length($str1);\n    for (my $i = 0; $i < $len; $i++) {\n        if (substr($str1, $i, 1) ne substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split(\"\", $str1);\n    my @str2 = split(\"\", $str2);\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for(my $i = 0; $i < length($str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for(my $i = 0; $i < @str1; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for(my $i = 0; $i < scalar @str1; $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for (my $i = 0; $i < scalar @str1; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for(my $i = 0; $i < scalar @str1; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split(\"\", $str1);\n    my @str2 = split(\"\", $str2);\n    for (my $i = 0; $i < scalar(@str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    for (my $i = 0; $i < scalar(@str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for (my $i = 0; $i < length($str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}",
    "    my $count = 0;\n    my $len = length($str1);\n    for (my $i = 0; $i < $len; $i++) {\n        if (substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for(my $i = 0; $i < @str1; $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @arr1 = split('', $str1);\n    my @arr2 = split('', $str2);\n    for(my $i = 0; $i < scalar(@arr1); $i++) {\n        if($arr1[$i] != $arr2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for (my $i = 0; $i < scalar @str1; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for (my $i = 0; $i < scalar(@str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $len = length($str1);\n    for (my $i = 0; $i < $len; $i++) {\n        if (substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}",
    "    my $count = 0;\n    my $len = length($str1);\n    for (my $i = 0; $i < $len; $i++) {\n        if (substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}",
    "    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for(my $i = 0; $i < scalar @str1; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count/2;\n}",
    "    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for (my $i = 0; $i < scalar @str1; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for my $i (0..$#str1) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for (my $i = 0; $i < scalar(@str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for(my $i = 0; $i < scalar @str1; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $len = length($str1);\n    for (my $i = 0; $i < $len; $i++) {\n        if (substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}\nprint min_Swaps('10011', '11100');\nprint \"\\n\";",
    "    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for (my $i = 0; $i < scalar @str1; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    for (my $i = 0; $i < scalar(@str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $len = length($str1);\n    for(my $i = 0; $i < $len; $i++) {\n        if(substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for(my $i = 0; $i < scalar @str1; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $len = length($str1);\n    for(my $i = 0; $i < $len; $i++) {\n        if(substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for (my $i = 0; $i < scalar @str1; $i++) {\n        if ($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for (my $i = 0; $i < scalar @str1; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for (my $i = 0; $i < scalar @str1; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for(my $i = 0; $i < scalar @str1; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split(\"\", $str1);\n    my @str2 = split(\"\", $str2);\n    for(my $i = 0; $i < scalar @str1; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    for (my $i = 0; $i < length($str1); $i++) {\n        if (substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split(\"\", $str1);\n    my @str2 = split(\"\", $str2);\n    for (my $i = 0; $i < scalar @str1; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $len = length($str1);\n    for(my $i = 0; $i < $len; $i++) {\n        if(substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    for (my $i = 0; $i < length($str1); $i++) {\n        if (substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}\nprint(\"Minimum number of swaps required to convert one binary number represented as a string to another: \", min_Swaps(\"1101\", \"0101\"), \"\\n\");",
    "    my $count = 0;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    for(my $i = 0; $i < scalar @str1; $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for(my $i=0; $i<scalar(@str1); $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $len = length($str1);\n    my $count = 0;\n    for (my $i = 0; $i < $len; $i++) {\n        if (substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count/2;\n}",
    "    my $count = 0;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    for (my $i = 0; $i < scalar @str1; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for (my $i = 0; $i < scalar @str1; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}",
    "    my $count = 0;\n    my @str1 = split(\"\", $str1);\n    my @str2 = split(\"\", $str2);\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for(my $i = 0; $i < scalar @str1; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    for (my $i = 0; $i < scalar(@str1); $i++) {\n        if ($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for (my $i = 0; $i < scalar @str1; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count/2;\n}",
    "    my $count = 0;\n    my @str1 = split(\"\", $str1);\n    my @str2 = split(\"\", $str2);\n    for(my $i = 0; $i < scalar @str1; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for (my $i = 0; $i < scalar @str1; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $len = length($str1);\n    for (my $i = 0; $i < $len; $i++) {\n        if (substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}",
    "    my $count = 0;\n    my @str1 = split(\"\", $str1);\n    my @str2 = split(\"\", $str2);\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    for (my $i = 0; $i < length($str1); $i++) {\n        if (substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for (my $i = 0; $i < scalar(@str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for (my $i = 0; $i < scalar(@str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for (my $i = 0; $i < scalar @str1; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    for(my $i = 0; $i < scalar @str1; $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @arr1 = split //, $str1;\n    my @arr2 = split //, $str2;\n    for (my $i = 0; $i < scalar @arr1; $i++) {\n        if ($arr1[$i] != $arr2[$i]) {\n            $count++;\n        }\n    }\n    return $count/2;\n}",
    "    my $count = 0;\n    my @str1 = split(\"\", $str1);\n    my @str2 = split(\"\", $str2);\n    for(my $i=0; $i<@str1; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count/2;\n}",
    "    my $count = 0;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    for(my $i = 0; $i < scalar @str1; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for (my $i = 0; $i < scalar @str1; $i++) {\n        if ($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for (my $i = 0; $i < scalar(@str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split(\"\", $str1);\n    my @str2 = split(\"\", $str2);\n    for(my $i = 0; $i < scalar @str1; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @arr1 = split('', $str1);\n    my @arr2 = split('', $str2);\n    for (my $i = 0; $i < scalar(@arr1); $i++) {\n        if ($arr1[$i] != $arr2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for (my $i = 0; $i < scalar @str1; $i++) {\n        if ($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for(my $i = 0; $i < scalar @str1; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for (my $i = 0; $i < scalar @str1; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for (my $i = 0; $i < scalar(@str1); $i++) {\n        if ($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for(my $i = 0; $i < scalar @str1; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    my $count = 0;\n    for (my $i = 0; $i < scalar @str1; $i++) {\n        if ($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for (my $i = 0; $i < @str1; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $len = length($str1);\n    for(my $i = 0; $i < $len; $i++) {\n        if(substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for (my $i = 0; $i < scalar @str1; $i++) {\n        if ($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $len = length($str1);\n    for (my $i = 0; $i < $len; $i++) {\n        if (substr($str1, $i, 1) ne substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count / 2;\n}",
    "    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count/2;\n}",
    "    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for(my $i = 0; $i < scalar @str1; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for(my $i = 0; $i < scalar @str1; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}\nprint min_Swaps(\"10101\", \"11100\");",
    "    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for(my $i = 0; $i < scalar @str1; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split(\"\", $str1);\n    my @str2 = split(\"\", $str2);\n    for(my $i = 0; $i < scalar @str1; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split //, $str1;\n    my @str2 = split //, $str2;\n    for (my $i = 0; $i < @str1; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    for(my $i = 0; $i < length($str1); $i++) {\n        if(substr($str1, $i, 1) ne substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for(my $i = 0; $i < @str1; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $len = length($str1);\n    for (my $i = 0; $i < $len; $i++) {\n        if (substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    for(my $i = 0; $i < length($str1); $i++) {\n        if(substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    for(my $i=0; $i<scalar(@str1); $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    for (my $i = 0; $i < length($str1); $i++) {\n        if (substr($str1, $i, 1) != substr($str2, $i, 1)) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    for(my $i = 0; $i < scalar @str1; $i++) {\n        if($str1[$i] ne $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for (my $i = 0; $i < scalar(@str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    for(my $i = 0; $i < scalar(@str1); $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for (my $i = 0; $i < scalar(@str1); $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split(//, $str1);\n    my @str2 = split(//, $str2);\n    for(my $i = 0; $i < scalar @str1; $i++) {\n        if($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str1 = split('', $str1);\n    my @str2 = split('', $str2);\n    for (my $i = 0; $i < scalar @str1; $i++) {\n        if ($str1[$i] != $str2[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}"
  ]
}
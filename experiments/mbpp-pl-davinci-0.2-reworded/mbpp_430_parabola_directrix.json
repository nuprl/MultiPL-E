{
  "name": "mbpp_430_parabola_directrix",
  "language": "pl",
  "prompt": "# Write a function to find the directrix of a parabola.\nsub parabola_directrix {\n    my($a, $b, $c) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_430_parabola_directrix.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&parabola_directrix;\n        if(eq_deeply($candidate->(5, 3, 2),-198)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(9, 8, 4),-2336)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(2, 4, 6),-130)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    return -$c / $b;\n}",
    "    return -$c / $b;\n}",
    "    return -$c/$b;\n}",
    "    my $d = -$c;\n    return $d;\n}",
    "    return -$c / $b;\n}",
    "    my $d = -$b / (2 * $a);\n    return $d;\n}",
    "    return -$c / $b;\n}",
    "    return -$c/$b;\n}",
    "    return -$c/$b;\n}",
    "    return -$c/$b;\n}",
    "    return -$c / $a;\n}",
    "    return -$c/$b;\n}",
    "    return -$c/$b;\n}",
    "    return -$c / $b;\n}",
    "    return -$c/$b;\n}",
    "    return -$c / $b;\n}",
    "    return -$c/$b;\n}",
    "    return -$c/$b;\n}",
    "    return $b / (2 * $a);\n}",
    "    return $a ? -$c / $a : undef;\n}"
  ]
}
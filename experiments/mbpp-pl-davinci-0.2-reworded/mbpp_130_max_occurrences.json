{
  "name": "mbpp_130_max_occurrences",
  "language": "pl",
  "prompt": "# Write a function to find the item with maximum frequency in a given array.\nsub max_occurrences {\n    my($nums) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_130_max_occurrences.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&max_occurrences;\n        if(eq_deeply($candidate->([2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]),2)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]),8)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]),20)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my %counts;\n    for my $num (@$nums) {\n        $counts{$num}++;\n    }\n    my $max_count = max(values %counts);\n    my @max_items = grep { $counts{$_} == $max_count } keys %counts;\n    return @max_items;\n}",
    "    my %count;\n    $count{$_}++ for @$nums;\n    my $max = max values %count;\n    my @max_keys = grep { $count{$_} == $max } keys %count;\n    return @max_keys;\n}",
    "    my %counts;\n    foreach my $num (@$nums) {\n        $counts{$num}++;\n    }\n    my $max_count = 0;\n    my $max_num = undef;\n    foreach my $num (keys %counts) {\n        if ($counts{$num} > $max_count) {\n            $max_count = $counts{$num};\n            $max_num = $num;\n        }\n    }\n    return $max_num;\n}",
    "    my %counts;\n    $counts{$_}++ for @$nums;\n    my $max = 0;\n    my $max_key = '';\n    while (my($key, $value) = each %counts) {\n        if ($value > $max) {\n            $max = $value;\n            $max_key = $key;\n        }\n    }\n    return $max_key;\n}",
    "    my %counts;\n    for my $num (@$nums) {\n        $counts{$num}++;\n    }\n    my $max_count = 0;\n    my $max_num;\n    for my $num (keys %counts) {\n        if ($counts{$num} > $max_count) {\n            $max_count = $counts{$num};\n            $max_num = $num;\n        }\n    }\n    return $max_num;\n}",
    "    my %count;\n    $count{$_}++ for @$nums;\n    my $max = 0;\n    my $max_key;\n    while (my($key, $value) = each %count) {\n        if ($value > $max) {\n            $max = $value;\n            $max_key = $key;\n        }\n    }\n    return $max_key;\n}",
    "    my %count;\n    for my $num (@$nums) {\n        $count{$num}++;\n    }\n    my $max_count = 0;\n    my $max_num;\n    for my $num (keys %count) {\n        if ($count{$num} > $max_count) {\n            $max_count = $count{$num};\n            $max_num = $num;\n        }\n    }\n    return $max_num;\n}",
    "    my %counts;\n    for my $num (@$nums) {\n        $counts{$num}++;\n    }\n    my $max_num = 0;\n    my $max_count = 0;\n    while (my($num, $count) = each %counts) {\n        if ($count > $max_count) {\n            $max_num = $num;\n            $max_count = $count;\n        }\n    }\n    return $max_num;\n}",
    "    my %counts;\n    for my $num (@$nums) {\n        $counts{$num}++;\n    }\n    my $max_count = 0;\n    my $max_num;\n    for my $num (keys %counts) {\n        if ($counts{$num} > $max_count) {\n            $max_count = $counts{$num};\n            $max_num = $num;\n        }\n    }\n    return $max_num;\n}",
    "    my %counts;\n    for my $num (@$nums) {\n        $counts{$num}++;\n    }\n    my $max_key;\n    my $max_value = 0;\n    for my $key (keys %counts) {\n        if ($counts{$key} > $max_value) {\n            $max_key = $key;\n            $max_value = $counts{$key};\n        }\n    }\n    return $max_key;\n}",
    "    my %count;\n    for my $num (@$nums) {\n        $count{$num}++;\n    }\n    my $max_count = 0;\n    my $max_num;\n    for my $num (keys %count) {\n        if ($count{$num} > $max_count) {\n            $max_count = $count{$num};\n            $max_num = $num;\n        }\n    }\n    return $max_num;\n}",
    "    my %counts;\n    for my $num (@$nums) {\n        $counts{$num}++;\n    }\n    my $max_count = 0;\n    my $max_num;\n    for my $num (keys %counts) {\n        if ($counts{$num} > $max_count) {\n            $max_count = $counts{$num};\n            $max_num = $num;\n        }\n    }\n    return $max_num;\n}",
    "    my %counts;\n    for my $num (@$nums) {\n        $counts{$num}++;\n    }\n    my $max_count = 0;\n    my $max_num;\n    for my $num (keys %counts) {\n        if ($counts{$num} > $max_count) {\n            $max_count = $counts{$num};\n            $max_num = $num;\n        }\n    }\n    return $max_num;\n}",
    "    my $max = 0;\n    my $max_item = undef;\n    my %counts;\n    for my $num (@$nums) {\n        $counts{$num}++;\n        if ($counts{$num} > $max) {\n            $max = $counts{$num};\n            $max_item = $num;\n        }\n    }\n    return $max_item;\n}",
    "    my %counts;\n    for my $num (@$nums) {\n        $counts{$num}++;\n    }\n    my $max_count = 0;\n    my $max_num;\n    for my $num (keys %counts) {\n        if ($counts{$num} > $max_count) {\n            $max_count = $counts{$num};\n            $max_num = $num;\n        }\n    }\n    return $max_num;\n}",
    "    my %counts;\n    for my $num (@$nums) {\n        $counts{$num}++;\n    }\n    my $max = 0;\n    my $max_num;\n    for my $num (keys %counts) {\n        if ($counts{$num} > $max) {\n            $max = $counts{$num};\n            $max_num = $num;\n        }\n    }\n    return $max_num;\n}",
    "    my %counts = ();\n    foreach my $num (@$nums) {\n        $counts{$num}++;\n    }\n    my $max_count = 0;\n    my $max_num = undef;\n    foreach my $num (keys %counts) {\n        if ($counts{$num} > $max_count) {\n            $max_count = $counts{$num};\n            $max_num = $num;\n        }\n    }\n    return $max_num;\n}",
    "    my %count;\n    my $max = 0;\n    my $max_item;\n    for my $num (@$nums) {\n        $count{$num}++;\n        if ($count{$num} > $max) {\n            $max = $count{$num};\n            $max_item = $num;\n        }\n    }\n    return $max_item;\n}",
    "    my %count;\n    $count{$_}++ for @$nums;\n    my $max = max values %count;\n    my @max_keys = grep { $count{$_} == $max } keys %count;\n    return @max_keys;\n}",
    "    my %count;\n    my $max_count = 0;\n    my $max_num;\n    for my $num (@$nums) {\n        $count{$num}++;\n        if ($count{$num} > $max_count) {\n            $max_count = $count{$num};\n            $max_num = $num;\n        }\n    }\n    return $max_num;\n}"
  ]
}
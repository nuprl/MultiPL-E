{
  "name": "mbpp_573_unique_product",
  "language": "pl",
  "prompt": "# Write a plthon function to calculate the product of the unique numbers in a given array.\nsub unique_product {\n    my($list_data) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_573_unique_product.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&unique_product;\n        if(eq_deeply($candidate->([10, 20, 30, 40, 20, 50, 60, 40]),720000000)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2, 3, 1]),6)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([7, 8, 9, 0, 1, 1]),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my $product = 1;\n    my %unique_data;\n    foreach my $data (@$list_data) {\n        $unique_data{$data} = 1;\n    }\n    foreach my $data (keys %unique_data) {\n        $product *= $data;\n    }\n    return $product;\n}",
    "    my $product = 1;\n    my %unique_data = map { $_ => 1 } @$list_data;\n    foreach my $key (keys %unique_data) {\n        $product *= $key;\n    }\n    return $product;\n}",
    "    my %unique_data;\n    foreach my $data (@$list_data) {\n        $unique_data{$data} = 1;\n    }\n    my $product = 1;\n    foreach my $data (keys %unique_data) {\n        $product *= $data;\n    }\n    return $product;\n}",
    "    my $product = 1;\n    my %unique_data;\n    foreach my $data (@$list_data) {\n        $unique_data{$data} = 1;\n    }\n    foreach my $data (keys %unique_data) {\n        $product *= $data;\n    }\n    return $product;\n}",
    "    my %unique_data;\n    foreach my $data (@$list_data) {\n        $unique_data{$data} = 1;\n    }\n    my $product = 1;\n    foreach my $data (keys %unique_data) {\n        $product *= $data;\n    }\n    return $product;\n}",
    "    my $product = 1;\n    my %unique_data;\n    foreach my $data (@$list_data) {\n        $unique_data{$data} = 1;\n    }\n    foreach my $data (keys %unique_data) {\n        $product *= $data;\n    }\n    return $product;\n}",
    "    my @list_data = @$list_data;\n    my %unique_list;\n    foreach my $item (@list_data) {\n        $unique_list{$item} = 1;\n    }\n    my $product = 1;\n    foreach my $item (keys %unique_list) {\n        $product *= $item;\n    }\n    return $product;\n}",
    "    my %unique_hash = map { $_ => 1 } @$list_data;\n    my @unique_list = keys %unique_hash;\n    my $product = 1;\n    foreach my $item (@unique_list) {\n        $product *= $item;\n    }\n    return $product;\n}",
    "    my @list = @$list_data;\n    my %hash = map { $_ => 1 } @list;\n    my @unique_list = keys %hash;\n    my $product = 1;\n    foreach my $item (@unique_list) {\n        $product *= $item;\n    }\n    return $product;\n}",
    "    my %unique_hash = map { $_ => 1 } @$list_data;\n    my @unique_list = keys %unique_hash;\n    my $product = 1;\n    foreach my $num (@unique_list) {\n        $product *= $num;\n    }\n    return $product;\n}",
    "    my @unique_list = unique_list($list_data);\n    my $product = 1;\n    foreach my $item (@unique_list) {\n        $product *= $item;\n    }\n    return $product;\n}",
    "    my %hash_data;\n    my $product = 1;\n    foreach my $data (@$list_data) {\n        $hash_data{$data} = 1;\n    }\n    foreach my $data (keys %hash_data) {\n        $product *= $data;\n    }\n    return $product;\n}",
    "    my %unique_hash = map { $_ => 1 } @$list_data;\n    my @unique_list = keys %unique_hash;\n    my $product = 1;\n    foreach my $item (@unique_list) {\n        $product *= $item;\n    }\n    return $product;\n}",
    "    my $product = 1;\n    my %unique_data;\n    foreach my $data (@$list_data) {\n        $unique_data{$data} = 1;\n    }\n    foreach my $unique_data (keys %unique_data) {\n        $product *= $unique_data;\n    }\n    return $product;\n}",
    "    my $product = 1;\n    my %unique_data;\n    foreach my $data (@$list_data) {\n        $unique_data{$data} = 1;\n    }\n    foreach my $data (keys %unique_data) {\n        $product *= $data;\n    }\n    return $product;\n}",
    "    my %unique_hash = map { $_ => 1 } @$list_data;\n    my @unique_list = keys %unique_hash;\n    my $product = 1;\n    foreach my $num (@unique_list) {\n        $product *= $num;\n    }\n    return $product;\n}",
    "    my %hash_data;\n    my $product = 1;\n    foreach my $data (@$list_data) {\n        $hash_data{$data} = 1;\n    }\n    foreach my $data (keys %hash_data) {\n        $product *= $data;\n    }\n    return $product;\n}",
    "    my %count;\n    my $product = 1;\n    foreach my $item (@$list_data) {\n        $count{$item}++;\n    }\n    foreach my $item (keys %count) {\n        $product *= $item;\n    }\n    return $product;\n}",
    "    my @unique_list = uniq @$list_data;\n    my $product = 1;\n    foreach my $element (@unique_list) {\n        $product *= $element;\n    }\n    return $product;\n}",
    "    my $product = 1;\n    my %unique_hash = map { $_ => 1 } @$list_data;\n    foreach my $key (keys %unique_hash) {\n        $product *= $key;\n    }\n    return $product;\n}"
  ]
}
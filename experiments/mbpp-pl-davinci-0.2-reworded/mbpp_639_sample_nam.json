{
  "name": "mbpp_639_sample_nam",
  "language": "pl",
  "prompt": "# Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\nsub sample_nam {\n    my($sample_names) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_639_sample_nam.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sample_nam;\n        if(eq_deeply($candidate->([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]),16)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]),10)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([\"abcd\", \"Python\", \"abba\", \"aba\"]),6)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my $sum = 0;\n    foreach my $name (@$sample_names) {\n        if ($name =~ /^[A-Z]/) {\n            $sum += length($name);\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    foreach my $name (@$sample_names) {\n        if ($name =~ /^[A-Z]/) {\n            $sum += length($name);\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    foreach my $name (@$sample_names) {\n        if ($name =~ /^[A-Z]/) {\n            $sum += length($name);\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    foreach my $name (@$sample_names) {\n        if ($name =~ /^[A-Z]/) {\n            $sum += length($name);\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    foreach my $name (@$sample_names) {\n        if ($name =~ /^[A-Z]/) {\n            $sum += length($name);\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    foreach my $name (@$sample_names) {\n        if ($name =~ /^[A-Z]/) {\n            $sum += length($name);\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    foreach my $name (@$sample_names) {\n        if ($name =~ /^[A-Z]/) {\n            $sum += length($name);\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    foreach my $name (@$sample_names) {\n        if ($name =~ /^[A-Z]/) {\n            $sum += length($name);\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    foreach my $name (@$sample_names) {\n        if ($name =~ /^[A-Z]/) {\n            $sum += length($name);\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    foreach my $name (@$sample_names) {\n        $sum += length($name) if $name =~ /^[A-Z]/;\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    foreach my $name (@$sample_names) {\n        if ($name =~ /^[A-Z]/) {\n            $sum += length($name);\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    foreach my $name (@$sample_names) {\n        if ($name =~ /^[A-Z]/) {\n            $sum += length($name);\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    foreach my $name (@$sample_names) {\n        if ($name =~ /^[A-Z]/) {\n            $sum += length($name);\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    foreach my $name (@$sample_names) {\n        if ($name =~ /^[A-Z]/) {\n            $sum += length($name);\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    foreach my $name (@$sample_names) {\n        $sum += length($name) if $name =~ /^[A-Z]/;\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    foreach my $name (@$sample_names) {\n        if ($name =~ /^[A-Z]/) {\n            $sum += length($name);\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    foreach my $name (@{$sample_names}) {\n        if ($name =~ /^[A-Z]/) {\n            $sum += length($name);\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    foreach my $name (@$sample_names) {\n        if ($name =~ /^[A-Z]/) {\n            $sum += length($name);\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    foreach my $name (@$sample_names) {\n        if ($name =~ /^[A-Z]/) {\n            $sum += length($name);\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    foreach my $name (@$sample_names) {\n        $sum += length($name) if $name =~ /^[A-Z]/;\n    }\n    return $sum;\n}"
  ]
}
{
  "name": "mbpp_606_radian_degree",
  "language": "pl",
  "prompt": "# Write a function to convert degrees to radians.\nsub radian_degree {\n    my($degree) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_606_radian_degree.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&radian_degree;\n        if(eq_deeply($candidate->(90),1.5707963267948966)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(60),1.0471975511965976)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(120),2.0943951023931953)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    return $degree * $pi / 180;\n}",
    "    return $degree * $pi / 180;\n}",
    "    return $degree * pi / 180;\n}",
    "    return $degree * $pi / 180;\n}",
    "    my $radian = $degree * $PI / 180;\n    return $radian;\n}",
    "    return $degree * $PI / 180;\n}",
    "    return $degree * pi / 180;\n}",
    "    return $degree * $pi / 180;\n}",
    "    return $degree * (3.141592653589793238462643383279502884197169399375105820974944592307816406286208998628034825342117067982148086513282306647093844609550582231725359408128481117450284102701938521105559644622948954930381964428810975665933446128475648233786783165271201909145648566923460348610454326648213393607260249141273724587006606315588174881520920962829254091715364367892590360011330530548820466521384146951941511609433057270365759591953092186117381932611793105118548074462379962749567351885752724891227938183011949129833673362440656643086021394946395224737190702179860943702770539217176293176752384674818467669405132000568127145263560827785771342757789609173637178721468440901224953430146549585371050792279689258923542019956112129021960864034418159813629774771309960518707211349999998372978049951059731732816096318595024459455346908302642522308253344685035261931188171010003137838752886587533208381420617177669147303598253490428755468731159562863882353787593751957781857780532171226806613001927876611195909216420198938095257201065485863278865936153381827968230301952035301852968995773622599413891249721775283479131515574857242454150695950829533116861727855889075098381754637464939319255060400927701",
    "    my $radian = $degree * $PI / 180;\n    return $radian;\n}",
    "    my $radian = $degree * $PI / 180;\n    return $radian;\n}",
    "    return $degree * (3.14159265358979323846 / 180);\n}",
    "    my $radian = $degree * $PI / 180;\n    return $radian;\n}",
    "    return $degree * $pi / 180;\n}",
    "    return $degree * (3.14159265358979323846 / 180);\n}",
    "    return $degree * $pi / 180;\n}",
    "    return $degree * $pi / 180;\n}",
    "    return $degree * $pi / 180;\n}",
    "    return $degree * (pi / 180);\n}",
    "    return $degree * $PI / 180;\n}"
  ]
}
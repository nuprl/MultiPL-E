{
  "name": "mbpp_255_combinations_colors",
  "language": "pl",
  "prompt": "# Write a function that takes in an array and length n, and generates all combinations (with repetition) of the elements of the array and returns an array with an array for each combination.\nsub combinations_colors {\n    my($l, $n) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_255_combinations_colors.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&combinations_colors;\n        if(eq_deeply($candidate->([\"Red\", \"Green\", \"Blue\"], 1),[[\"Red\"], [\"Green\"], [\"Blue\"]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([\"Red\", \"Green\", \"Blue\"], 2),[[\"Red\", \"Red\"], [\"Red\", \"Green\"], [\"Red\", \"Blue\"], [\"Green\", \"Green\"], [\"Green\", \"Blue\"], [\"Blue\", \"Blue\"]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([\"Red\", \"Green\", \"Blue\"], 3),[[\"Red\", \"Red\", \"Red\"], [\"Red\", \"Red\", \"Green\"], [\"Red\", \"Red\", \"Blue\"], [\"Red\", \"Green\", \"Green\"], [\"Red\", \"Green\", \"Blue\"], [\"Red\", \"Blue\", \"Blue\"], [\"Green\", \"Green\", \"Green\"], [\"Green\", \"Green\", \"Blue\"], [\"Green\", \"Blue\", \"Blue\"], [\"Blue\", \"Blue\", \"Blue\"]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my @combinations = ();\n    my @combination = ();\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $m = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $aa = 0;\n    my $ab = 0;\n    my $ac = 0;\n    my $ad = 0;\n    my $ae = 0;\n    my $af = 0;\n    my $ag = 0;\n    my $ah = 0;\n    my $ai = 0;\n    my $aj = 0;\n    my $ak = 0;\n    my $al = 0;\n    my $am = 0;\n    my $an = 0;\n    my $ao = 0;\n    my $ap = 0;\n    my $aq = 0;\n    my $ar = 0;\n    my $as = 0;\n    my $at = 0;\n    my $au = 0;\n    my $av = 0;\n    my $aw = 0;\n    my $ax = 0;\n    my $ay = 0;\n    my $az = 0;\n    my $ba = 0;\n    my $bb = 0;\n    my $bc = 0;\n    my $bd = 0;\n    my $be = 0;\n    my $bf = 0;\n    my $bg = 0;\n    my $bh = 0;\n    my $bi = 0;\n    my $bj = 0;\n    my $bk = 0;\n    my $bl = 0;\n    my $bm = 0;\n    my $bn = 0;\n    my $bo = 0;\n    my $bp = 0;\n    my $bq = 0;\n    my $br = 0;\n    my $bs = 0;\n    my $bt = 0;\n    my $bu =",
    "    my @combinations;\n    my @combination;\n    my $i;\n    my $j;\n    my $k;\n    my $m;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $aa;\n    my $ab;\n    my $ac;\n    my $ad;\n    my $ae;\n    my $af;\n    my $ag;\n    my $ah;\n    my $ai;\n    my $aj;\n    my $ak;\n    my $al;\n    my $am;\n    my $an;\n    my $ao;\n    my $ap;\n    my $aq;\n    my $ar;\n    my $as;\n    my $at;\n    my $au;\n    my $av;\n    my $aw;\n    my $ax;\n    my $ay;\n    my $az;\n    my $ba;\n    my $bb;\n    my $bc;\n    my $bd;\n    my $be;\n    my $bf;\n    my $bg;\n    my $bh;\n    my $bi;\n    my $bj;\n    my $bk;\n    my $bl;\n    my $bm;\n    my $bn;\n    my $bo;\n    my $bp;\n    my $bq;\n    my $br;\n    my $bs;\n    my $bt;\n    my $bu;\n    my $bv;\n    my $bw;\n    my $bx;\n    my $by;\n    my $bz;\n    my $ca;\n    my $cb;\n    my $cc;\n    my $cd;\n    my $ce;\n    my $cf;\n    my $cg;\n    my $ch;\n    my $ci;\n    my $cj;\n    my $ck;\n    my $cl;\n    my $cm;\n    my $cn;\n    my $",
    "    my @combinations;\n    my @combination;\n    my $i;\n    my $j;\n    for ($i = 0; $i < $n; $i++) {\n        $combination[$i] = 0;\n    }\n    while (1) {\n        push @combinations, [@combination];\n        $i = $n - 1;\n        while ($i >= 0 && $combination[$i] == $#{$l}) {\n            $i--;\n        }\n        last if ($i < 0);\n        $combination[$i]++;\n        for ($j = $i + 1; $j < $n; $j++) {\n            $combination[$j] = 0;\n        }\n    }\n    return @combinations;\n}",
    "    return map [@$l[@_]], grep {$_[$_] < @$l} 0..$n-1;\n}",
    "    my @combinations;\n    my @combination;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $m = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $aa = 0;\n    my $bb = 0;\n    my $cc = 0;\n    my $dd = 0;\n    my $ee = 0;\n    my $ff = 0;\n    my $gg = 0;\n    my $hh = 0;\n    my $ii = 0;\n    my $jj = 0;\n    my $kk = 0;\n    my $ll = 0;\n    my $mm = 0;\n    my $nn = 0;\n    my $oo = 0;\n    my $pp = 0;\n    my $qq = 0;\n    my $rr = 0;\n    my $ss = 0;\n    my $tt = 0;\n    my $uu = 0;\n    my $vv = 0;\n    my $ww = 0;\n    my $xx = 0;\n    my $yy = 0;\n    my $zz = 0;\n    my $aaa = 0;\n    my $bbb = 0;\n    my $ccc = 0;\n    my $ddd = 0;\n    my $eee = 0;\n    my $fff = 0;\n    my $ggg = 0;\n    my $hhh = 0;\n    my $iii = 0;\n    my $jjj = 0;\n    my $kkk = 0;\n    my $lll = 0;\n    my $mmm = 0;\n    my $nnn = 0;\n    my $ooo = 0;\n    my $ppp = 0;\n    my $qqq = 0;\n    my $rrr = 0;\n    my $sss = 0;\n    my $tt",
    "    my @combos;\n    for my $i (0..$n) {\n        push @combos, [@$l[0..$i]];\n    }\n    return @combos;\n}",
    "    my @res;\n    for my $i (0 .. $n - 1) {\n        for my $j (0 .. $n - 1) {\n            for my $k (0 .. $n - 1) {\n                push @res, [@$l[$i], @$l[$j], @$l[$k]];\n            }\n        }\n    }\n    return @res;\n}",
    "    my @combinations;\n    my @combination;\n    my $i;\n    my $j;\n    my $k;\n    my $m;",
    "    my @result;\n    if ($n == 1) {\n        foreach my $e (@$l) {\n            push @result, [$e];\n        }\n    } else {\n        foreach my $e (@$l) {\n            my @sub_combinations = combinations_colors($l, $n - 1);\n            foreach my $sub_combination (@sub_combinations) {\n                push @result, [$e, @$sub_combination];\n            }\n        }\n    }\n    return @result;\n}",
    "    my @result;\n    if ($n == 0) {\n        push @result, [];\n    } else {\n        for my $i (0 .. $#$l) {\n            for my $c (combinations_colors([@$l[$i..$#$l]], $n-1)) {\n                push @result, [@$l[$i], @$c];\n            }\n        }\n    }\n    return @result;\n}",
    "    my @combinations;\n    my @combination;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;",
    "    my @combinations = ();\n    my @combination = ();\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $m = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n    my $i1 = 0;\n    my $j1 = 0;\n    my $k1 = 0;\n    my $m1 = 0;\n    my $p1 = 0;\n    my $q1 = 0;\n    my $r1 = 0;\n    my $s1 = 0;\n    my $t1 = 0;\n    my $u1 = 0;\n    my $v1 = 0;\n    my $w1 = 0;\n    my $x1 = 0;\n    my $y1 = 0;\n    my $z1 = 0;\n    my $a1 = 0;\n    my $b1 = 0;\n    my $c1 = 0;\n    my $d1 = 0;\n    my $e1 = 0;\n    my $f1 = 0;\n    my $g1 = 0;\n    my $h1 = 0;\n    my $i2 = 0;\n    my $j2 = 0;\n    my $k2 = 0;\n    my $m2 = 0;\n    my $p2 = 0;\n    my $q2 = 0;\n    my $r2 = 0;\n    my $s2 = 0;\n    my $t2 = 0;\n    my $u2 = 0;\n    my $v2 = 0;\n    my $w2",
    "    return unless $n;\n    return map [$_], @$l if $n == 1;\n    my @res;\n    for my $i (0 .. $#$l) {\n        push @res, map [$l->[$i], @$_], combinations_colors([@$l[$i..$#$l]], $n-1);\n    }\n    @res;\n}",
    "    my @result;\n    my @stack;\n    my $i = 0;\n    while (1) {\n        if ($i < $n) {\n            push @stack, $i;\n            $i = 0;\n        } else {\n            pop @stack;\n            $i = pop @stack;\n            last unless defined $i;\n            $i++;\n        }\n        push @result, [@$l[@stack]] if @stack == $n;\n    }\n    return @result;\n}",
    "    my @result;\n    my @combination;\n    my $i;\n    my $j;\n    my $k;\n    my $m;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $aa;\n    my $ab;\n    my $ac;\n    my $ad;\n    my $ae;\n    my $af;\n    my $ag;\n    my $ah;\n    my $ai;\n    my $aj;\n    my $ak;\n    my $al;\n    my $am;\n    my $an;\n    my $ao;\n    my $ap;\n    my $aq;\n    my $ar;\n    my $as;\n    my $at;\n    my $au;\n    my $av;\n    my $aw;\n    my $ax;\n    my $ay;\n    my $az;\n    my $ba;\n    my $bb;\n    my $bc;\n    my $bd;\n    my $be;\n    my $bf;\n    my $bg;\n    my $bh;\n    my $bi;\n    my $bj;\n    my $bk;\n    my $bl;\n    my $bm;\n    my $bn;\n    my $bo;\n    my $bp;\n    my $bq;\n    my $br;\n    my $bs;\n    my $bt;\n    my $bu;\n    my $bv;\n    my $bw;\n    my $bx;\n    my $by;\n    my $bz;\n    my $ca;\n    my $cb;\n    my $cc;\n    my $cd;\n    my $ce;\n    my $cf;\n    my $cg;\n    my $ch;\n    my $ci;\n    my $cj;\n    my $ck;\n    my $cl;\n    my $cm;\n    my $cn;\n    my $co",
    "    my $c = [];\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $m = 0;\n    my $p = [];\n    my $q = [];\n    my $r = [];\n    my $s = [];\n    my $t = [];\n    my $u = [];\n    my $v = [];\n    my $w = [];\n    my $x = [];\n    my $y = [];\n    my $z = [];\n    my $aa = [];\n    my $ab = [];\n    my $ac = [];\n    my $ad = [];\n    my $ae = [];\n    my $af = [];\n    my $ag = [];\n    my $ah = [];\n    my $ai = [];\n    my $aj = [];\n    my $ak = [];\n    my $al = [];\n    my $am = [];\n    my $an = [];\n    my $ao = [];\n    my $ap = [];\n    my $aq = [];\n    my $ar = [];\n    my $as = [];\n    my $at = [];\n    my $au = [];\n    my $av = [];\n    my $aw = [];\n    my $ax = [];\n    my $ay = [];\n    my $az = [];\n    my $ba = [];\n    my $bb = [];\n    my $bc = [];\n    my $bd = [];\n    my $be = [];\n    my $bf = [];\n    my $bg = [];\n    my $bh = [];\n    my $bi = [];\n    my $bj = [];\n    my $bk = [];\n    my $bl = [];\n    my $bm = [];\n    my $bn = [];\n    my $bo = [];\n    my $bp = [];\n    my $bq = [];\n    my $br = [];\n    my $bs = [];\n    my $bt = [];\n    my $bu = [];\n    my $bv = [];\n    my $bw = [];\n    my $bx = [];\n    my $by = [];\n    my $bz = [];\n    my $ca = [];\n    my $cb = [];\n    my $cc = [];\n    my $cd",
    "    return if $n < 1;\n    return map [$_], @$l if $n == 1;\n    my @comb;\n    for my $i ( 0 .. $#$l ) {\n        push @comb, [ $l->[$i], @$_ ] for combinations_colors( [ @$l[ $i .. $#$l ] ], $n - 1 );\n    }\n    return @comb;\n}",
    "    my @combinations;\n    my @combination;\n    my $i;\n    my $j;\n    my $k;\n    my $l_size = scalar @$l;\n    my $combination_size = $n;\n    my $combination_count = int(pow($l_size, $combination_size));\n    for ($i = 0; $i < $combination_count; $i++) {\n        @combination = ();\n        for ($j = 0; $j < $combination_size; $j++) {\n            $k = int(($i / pow($l_size, $j)) % $l_size);\n            push @combination, $l->[$k];\n        }\n        push @combinations, [@combination];\n    }\n    return @combinations;\n}",
    "    my @combinations;\n    my @combination;\n    my $i;\n    my $j;\n    my $k;",
    "    my @combinations;\n    my @combination;\n    my $i;\n    my $j;\n    my $k;",
    "    return map [@$l[@_]], grep { $_[$_] < $n } 0 .. $#$l;\n}",
    "    my @result;\n    my @stack;\n    my $i = 0;\n    while (1) {\n        if ($i < $n) {\n            push @stack, $i;\n            $i = 0;\n        } else {\n            pop @stack;\n            last unless @stack;\n            $i = $stack[-1] + 1;\n        }\n        push @result, [@$l[@stack]];\n    }\n    return @result;\n}",
    "    my @combinations;\n    my @combination;\n    my $i = 0;\n    my $j = 0;",
    "    my @combinations;\n    my @combination;\n    my $i;\n    my $j;\n    my $k;\n    my $m;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $aa;\n    my $ab;\n    my $ac;\n    my $ad;\n    my $ae;\n    my $af;\n    my $ag;\n    my $ah;\n    my $ai;\n    my $aj;\n    my $ak;\n    my $al;\n    my $am;\n    my $an;\n    my $ao;\n    my $ap;\n    my $aq;\n    my $ar;\n    my $as;\n    my $at;\n    my $au;\n    my $av;\n    my $aw;\n    my $ax;\n    my $ay;\n    my $az;\n    my $ba;\n    my $bb;\n    my $bc;\n    my $bd;\n    my $be;\n    my $bf;\n    my $bg;\n    my $bh;\n    my $bi;\n    my $bj;\n    my $bk;\n    my $bl;\n    my $bm;\n    my $bn;\n    my $bo;\n    my $bp;\n    my $bq;\n    my $br;\n    my $bs;\n    my $bt;\n    my $bu;\n    my $bv;\n    my $bw;\n    my $bx;\n    my $by;\n    my $bz;\n    my $ca;\n    my $cb;\n    my $cc;\n    my $cd;\n    my $ce;\n    my $cf;\n    my $cg;\n    my $ch;\n    my $ci;\n    my $cj;\n    my $ck;\n    my $cl;\n    my $cm;\n    my $cn;\n    my $",
    "    my @combinations;\n    my @combination;\n    my $i;\n    my $j;\n    my $k;\n    my $m;\n    my $n_factorial = factorial($n);\n    my $l_factorial = factorial($l);\n    my $l_minus_n_factorial = factorial($l - $n);\n    my $n_choose_l = $n_factorial / ($l_factorial * $l_minus_n_factorial);\n    for ($i = 0; $i < $n_choose_l; $i++) {\n        @combination = ();\n        $m = $i;\n        for ($j = 0; $j < $n; $j++) {\n            $k = $m % $l;\n            $m = int($m / $l);\n            push @combination, $k;\n        }\n        push @combinations, [@combination];\n    }\n    return @combinations;\n}",
    "    return map [@$l[@_]], grep { $_[$_] <= $#{$l} } 0..$n-1;\n}",
    "    return map [@$l[@_]], grep { $_[$_] < $n } 0..$#$l;\n}",
    "    return map [@$l[@_]], grep { $_[$_] < $n } 0..$#$l;\n}",
    "    my @result = ();\n    my @stack = ();\n    my $i = 0;\n    while (1) {\n        if ($i < $n) {\n            push @stack, $i;\n            $i = 0;\n        } else {\n            pop @stack;\n            if (!@stack) {\n                return @result;\n            }\n            $i = $stack[-1] + 1;\n            pop @stack;\n        }\n        if (@stack == $n) {\n            push @result, [@$l[@stack]];\n        }\n    }\n}",
    "    my @result;\n    if ($n == 0) {\n        push @result, [];\n    } else {\n        for my $i (0 .. $#$l) {\n            for my $c (combinations_colors([@$l[$i .. $#$l]], $n - 1)) {\n                push @result, [$l->[$i], @$c];\n            }\n        }\n    }\n    return @result;\n}",
    "    my @result;\n    if ($n == 0) {\n        push @result, [];\n    } else {\n        for my $i (0 .. $#$l) {\n            for my $c (combinations_colors([@$l[$i..$#$l]], $n - 1)) {\n                push @result, [$l->[$i], @$c];\n            }\n        }\n    }\n    return @result;\n}",
    "    return [] if $n < 1;\n    return map [$_], @$l if $n == 1;\n    my @comb;\n    for my $i (0 .. $#$l) {\n        push @comb, [$l->[$i], @$_] for @{ combinations_colors([@$l[$i .. $#$l]], $n - 1) };\n    }\n    return \\@comb;\n}",
    "    my @combinations = ();\n    my @combination = ();\n    my $start = 0;\n    my $end = scalar(@$l) - 1;\n    my $i = 0;\n    while ($i >= 0) {\n        if ($i <= $#combination) {\n            $combination[$i]++;\n        } else {\n            push @combination, $start;\n        }\n        if ($combination[$i] > $end) {\n            pop @combination;\n            $i--;\n        } elsif ($i == $n - 1) {\n            push @combinations, [@combination];\n        } else {\n            $i++;\n        }\n    }\n    return @combinations;\n}",
    "    my @combinations;\n    my @combination;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $m = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $aa = 0;\n    my $ab = 0;\n    my $ac = 0;\n    my $ad = 0;\n    my $ae = 0;\n    my $af = 0;\n    my $ag = 0;\n    my $ah = 0;\n    my $ai = 0;\n    my $aj = 0;\n    my $ak = 0;\n    my $al = 0;\n    my $am = 0;\n    my $an = 0;\n    my $ao = 0;\n    my $ap = 0;\n    my $aq = 0;\n    my $ar = 0;\n    my $as = 0;\n    my $at = 0;\n    my $au = 0;\n    my $av = 0;\n    my $aw = 0;\n    my $ax = 0;\n    my $ay = 0;\n    my $az = 0;\n    my $ba = 0;\n    my $bb = 0;\n    my $bc = 0;\n    my $bd = 0;\n    my $be = 0;\n    my $bf = 0;\n    my $bg = 0;\n    my $bh = 0;\n    my $bi = 0;\n    my $bj = 0;\n    my $bk = 0;\n    my $bl = 0;\n    my $bm = 0;\n    my $bn = 0;\n    my $bo = 0;\n    my $bp = 0;\n    my $bq = 0;\n    my $br = 0;\n    my $bs = 0;\n    my $bt = 0;\n    my $bu = 0;",
    "    my @combinations;\n    my @combination;\n    my $i;\n    my $j;\n    my $k;\n    my $m;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $aa;\n    my $ab;\n    my $ac;\n    my $ad;\n    my $ae;\n    my $af;\n    my $ag;\n    my $ah;\n    my $ai;\n    my $aj;\n    my $ak;\n    my $al;\n    my $am;\n    my $an;\n    my $ao;\n    my $ap;\n    my $aq;\n    my $ar;\n    my $as;\n    my $at;\n    my $au;\n    my $av;\n    my $aw;\n    my $ax;\n    my $ay;\n    my $az;\n    my $ba;\n    my $bb;\n    my $bc;\n    my $bd;\n    my $be;\n    my $bf;\n    my $bg;\n    my $bh;\n    my $bi;\n    my $bj;\n    my $bk;\n    my $bl;\n    my $bm;\n    my $bn;\n    my $bo;\n    my $bp;\n    my $bq;\n    my $br;\n    my $bs;\n    my $bt;\n    my $bu;\n    my $bv;\n    my $bw;\n    my $bx;\n    my $by;\n    my $bz;\n    my $ca;\n    my $cb;\n    my $cc;\n    my $cd;\n    my $ce;\n    my $cf;\n    my $cg;\n    my $ch;\n    my $ci;\n    my $cj;\n    my $ck;\n    my $cl;\n    my $cm;\n    my $cn;\n    my $",
    "    my @combinations;\n    my @combination;\n    my $i;\n    my $j;\n    my $k;\n    my $m;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $aa;\n    my $ab;\n    my $ac;\n    my $ad;\n    my $ae;\n    my $af;\n    my $ag;\n    my $ah;\n    my $ai;\n    my $aj;\n    my $ak;\n    my $al;\n    my $am;\n    my $an;\n    my $ao;\n    my $ap;\n    my $aq;\n    my $ar;\n    my $as;\n    my $at;\n    my $au;\n    my $av;\n    my $aw;\n    my $ax;\n    my $ay;\n    my $az;\n    my $ba;\n    my $bb;\n    my $bc;\n    my $bd;\n    my $be;\n    my $bf;\n    my $bg;\n    my $bh;\n    my $bi;\n    my $bj;\n    my $bk;\n    my $bl;\n    my $bm;\n    my $bn;\n    my $bo;\n    my $bp;\n    my $bq;\n    my $br;\n    my $bs;\n    my $bt;\n    my $bu;\n    my $bv;\n    my $bw;\n    my $bx;\n    my $by;\n    my $bz;\n    my $ca;\n    my $cb;\n    my $cc;\n    my $cd;\n    my $ce;\n    my $cf;\n    my $cg;\n    my $ch;\n    my $ci;\n    my $cj;\n    my $ck;\n    my $cl;\n    my $cm;\n    my $cn;\n    my $",
    "    my @combinations;\n    my @combination;\n    my $i;\n    my $j;\n    my $k;",
    "    my @combinations;\n    my @combination;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $m = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $aa = 0;\n    my $ab = 0;\n    my $ac = 0;\n    my $ad = 0;\n    my $ae = 0;\n    my $af = 0;\n    my $ag = 0;\n    my $ah = 0;\n    my $ai = 0;\n    my $aj = 0;\n    my $ak = 0;\n    my $al = 0;\n    my $am = 0;\n    my $an = 0;\n    my $ao = 0;\n    my $ap = 0;\n    my $aq = 0;\n    my $ar = 0;\n    my $as = 0;\n    my $at = 0;\n    my $au = 0;\n    my $av = 0;\n    my $aw = 0;\n    my $ax = 0;\n    my $ay = 0;\n    my $az = 0;\n    my $ba = 0;\n    my $bb = 0;\n    my $bc = 0;\n    my $bd = 0;\n    my $be = 0;\n    my $bf = 0;\n    my $bg = 0;\n    my $bh = 0;\n    my $bi = 0;\n    my $bj = 0;\n    my $bk = 0;\n    my $bl = 0;\n    my $bm = 0;\n    my $bn = 0;\n    my $bo = 0;\n    my $bp = 0;\n    my $bq = 0;\n    my $br = 0;\n    my $bs = 0;\n    my $bt = 0;\n    my $bu = 0;",
    "    my @result;\n    my @combination;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $m = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $aa = 0;\n    my $bb = 0;\n    my $cc = 0;\n    my $dd = 0;\n    my $ee = 0;\n    my $ff = 0;\n    my $gg = 0;\n    my $hh = 0;\n    my $ii = 0;\n    my $jj = 0;\n    my $kk = 0;\n    my $ll = 0;\n    my $mm = 0;\n    my $nn = 0;\n    my $oo = 0;\n    my $pp = 0;\n    my $qq = 0;\n    my $rr = 0;\n    my $ss = 0;\n    my $tt = 0;\n    my $uu = 0;\n    my $vv = 0;\n    my $ww = 0;\n    my $xx = 0;\n    my $yy = 0;\n    my $zz = 0;\n    my $aaa = 0;\n    my $bbb = 0;\n    my $ccc = 0;\n    my $ddd = 0;\n    my $eee = 0;\n    my $fff = 0;\n    my $ggg = 0;\n    my $hhh = 0;\n    my $iii = 0;\n    my $jjj = 0;\n    my $kkk = 0;\n    my $lll = 0;\n    my $mmm = 0;\n    my $nnn = 0;\n    my $ooo = 0;\n    my $ppp = 0;\n    my $qqq = 0;\n    my $rrr = 0;\n    my $sss = 0;\n    my $ttt",
    "    my @combinations;\n    my $i = 0;\n    while ($i < $n) {\n        my $j = 0;\n        while ($j < $n) {\n            my $k = 0;\n            while ($k < $n) {\n                push @combinations, [$l->[$i], $l->[$j], $l->[$k]];\n                $k++;\n            }\n            $j++;\n        }\n        $i++;\n    }\n    return \\@combinations;\n}",
    "    my @result;\n    my @combination;\n    my $i;\n    my $j;\n    for ($i = 0; $i < $n; $i++) {\n        $combination[$i] = 0;\n    }\n    while (1) {\n        push @result, [@combination];\n        $i = $n - 1;\n        while ($i >= 0 && $combination[$i] == $l - 1) {\n            $i--;\n        }\n        last if $i < 0;\n        $combination[$i]++;\n        for ($j = $i + 1; $j < $n; $j++) {\n            $combination[$j] = 0;\n        }\n    }\n    return @result;\n}",
    "    return if $n < 1;\n    return map [$_], @$l if $n == 1;\n    my @comb;\n    for my $i (0 .. $#$l) {\n        push @comb, map [$l->[$i], @$_], combinations_colors([@$l[$i..$#$l]], $n-1);\n    }\n    return @comb;\n}",
    "    return map [@$l[@_]], grep { $_[$_] < $n } 0 .. $#$l;\n}",
    "    my @result;\n    my @stack;\n    my $i = 0;\n    while (1) {\n        if ($i < $n) {\n            push @stack, $l->[$i++];\n            next;\n        }\n        push @result, [@stack];\n        --$i;\n        --$n;\n        pop @stack;\n        last if $n < 0;\n    }\n    return @result;\n}",
    "    return [] if $n == 0;\n    return map [$_], @$l if $n == 1;\n    my @result;\n    for my $i (0 .. $#$l) {\n        push @result, map [$l->[$i], @$_], @{ combinations_colors([@$l[$i .. $#$l]], $n - 1) };\n    }\n    return \\@result;\n}",
    "    return map [@$l[@_]], grep {$_[$_] < @$l} map {$_ = 0} 1..$n;\n}",
    "    return unless $n;\n    return map [$_], @$l if $n == 1;\n    map [$_, @$_], map { my $e = $_; map [$e, @$_], combinations_colors($l, $n - 1) } @$l;\n}",
    "    my @combinations;\n    my @combination;\n    my $i;\n    my $j;\n    my $k;\n    my $m;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $aa;\n    my $bb;\n    my $cc;\n    my $dd;\n    my $ee;\n    my $ff;\n    my $gg;\n    my $hh;\n    my $ii;\n    my $jj;\n    my $kk;\n    my $ll;\n    my $mm;\n    my $nn;\n    my $oo;\n    my $pp;\n    my $qq;\n    my $rr;\n    my $ss;\n    my $tt;\n    my $uu;\n    my $vv;\n    my $ww;\n    my $xx;\n    my $yy;\n    my $zz;\n    my $aaa;\n    my $bbb;\n    my $ccc;\n    my $ddd;\n    my $eee;\n    my $fff;\n    my $ggg;\n    my $hhh;\n    my $iii;\n    my $jjj;\n    my $kkk;\n    my $lll;\n    my $mmm;\n    my $nnn;\n    my $ooo;\n    my $ppp;\n    my $qqq;\n    my $rrr;\n    my $sss;\n    my $ttt;\n    my $uuu;\n    my $vvv;\n    my $www;\n    my $xxx;\n    my $yyy;\n    my $zzz;\n    my $aaaa;\n    my $bbbb;\n    my $cccc;\n    my $dddd;\n    my $eeee;\n    my $ffff;\n    my $gggg;\n    my $hhhh;\n    my $iiii;\n    my $jjjj;\n    my $kkkk;\n    my $ll",
    "    return map [@$l[@_]], grep {$_[$_] < @$l} map {$_ - 1} 1..$n;\n}",
    "    return if $n < 1;\n    return map [$_], @$l if $n == 1;\n    my @comb;\n    for my $i ( 0 .. $#$l ) {\n        push @comb, [ $l->[$i], @$_ ] for combinations_colors( [ @$l[ $i .. $#$l ] ], $n - 1 );\n    }\n    return @comb;\n}",
    "    my @combinations;\n    my @combination;\n    my $i;\n    my $j;\n    my $k;\n    my $m;\n    my $n_factorial = factorial($n);\n    my $l_factorial = factorial($l);\n    my $l_minus_n_factorial = factorial($l - $n);\n    my $n_choose_l = $n_factorial / ($l_factorial * $l_minus_n_factorial);\n    for ($i = 0; $i < $n_choose_l; $i++) {\n        @combination = ();\n        $m = $i;\n        for ($j = 0; $j < $n; $j++) {\n            $k = $m % $l;\n            $m = int($m / $l);\n            push @combination, $k;\n        }\n        push @combinations, [@combination];\n    }\n    return @combinations;\n}",
    "    return unless $n;\n    return map [$_], @$l if $n == 1;\n    my @result;\n    for my $i (0 .. $#$l) {\n        push @result, map [$l->[$i], @$_], combinations_colors([@$l[$i .. $#$l]], $n - 1);\n    }\n    return @result;\n}",
    "    my @result;\n    if ($n == 0) {\n        push @result, [];\n    } else {\n        for my $i (0 .. $#$l) {\n            for my $c (combinations_colors([@$l[$i..$#$l]], $n-1)) {\n                push @result, [$l->[$i], @$c];\n            }\n        }\n    }\n    return @result;\n}",
    "    my @combos;\n    my @combo;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $m = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $aa = 0;\n    my $bb = 0;\n    my $cc = 0;\n    my $dd = 0;\n    my $ee = 0;\n    my $ff = 0;\n    my $gg = 0;\n    my $hh = 0;\n    my $ii = 0;\n    my $jj = 0;\n    my $kk = 0;\n    my $ll = 0;\n    my $mm = 0;\n    my $nn = 0;\n    my $oo = 0;\n    my $pp = 0;\n    my $qq = 0;\n    my $rr = 0;\n    my $ss = 0;\n    my $tt = 0;\n    my $uu = 0;\n    my $vv = 0;\n    my $ww = 0;\n    my $xx = 0;\n    my $yy = 0;\n    my $zz = 0;\n    my $aaa = 0;\n    my $bbb = 0;\n    my $ccc = 0;\n    my $ddd = 0;\n    my $eee = 0;\n    my $fff = 0;\n    my $ggg = 0;\n    my $hhh = 0;\n    my $iii = 0;\n    my $jjj = 0;\n    my $kkk = 0;\n    my $lll = 0;\n    my $mmm = 0;\n    my $nnn = 0;\n    my $ooo = 0;\n    my $ppp = 0;\n    my $qqq = 0;\n    my $rrr = 0;\n    my $sss = 0;\n    my $tt",
    "    my @res;\n    if ($n == 1) {\n        foreach my $e (@$l) {\n            push @res, [$e];\n        }\n    } else {\n        foreach my $e (@$l) {\n            my @sub = @$l;\n            my $i = 0;\n            $i++ until $sub[$i] eq $e;\n            splice @sub, $i, 1;\n            foreach my $sub_res (combinations_colors(\\@sub, $n - 1)) {\n                push @res, [$e, @$sub_res];\n            }\n        }\n    }\n    return @res;\n}",
    "    return map [@$l[@_]], grep {$_[$_] < @$l} map {$_ = 0} 1..$n;\n}",
    "    return map [@$l[@_]], grep { $_[$_] <= $#$l } 0..$n-1;\n}",
    "    my @res;\n    my @idx = (0) x $n;\n    while (1) {\n        push @res, [@$l[@idx]];\n        my $i = $n - 1;\n        ++$idx[$i];\n        while ($i > 0 && $idx[$i] >= @$l) {\n            $idx[$i] = 0;\n            --$i;\n            ++$idx[$i];\n        }\n        last if $idx[0] >= @$l;\n    }\n    return @res;\n}",
    "    return map [@$l[@_]], grep { $_[$_] < @$l } 0..$n-1;\n}",
    "    return map [@$l[@_]], grep {$_[$_] < @$l} 0..$n-1;\n}",
    "    return map { [@$l[@$_]] } combinations([0..$#$l], $n);\n}",
    "    return map [@$l[@_]], grep { $_[$_] < $n } 0 .. $#_;\n}",
    "    my @combinations = ();\n    my @combination = ();\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    for ($i = 0; $i < $n; $i++) {\n        $combination[$i] = 0;\n    }\n    while ($combination[$n - 1] < scalar @$l) {\n        $combinations[$k] = [];\n        for ($j = 0; $j < $n; $j++) {\n            push @{$combinations[$k]}, $l->[$combination[$j]];\n        }\n        $k++;\n        $i = 0;\n        while ($i < $n && $combination[$i] == scalar @$l - 1) {\n            $combination[$i] = 0;\n            $i++;\n        }\n        if ($i < $n) {\n            $combination[$i]++;\n        }\n    }\n    return @combinations;\n}",
    "    my @combinations;\n    my @subset;\n    my $subset_size = $n;\n    my $set_size = scalar @$l;\n    my $subset_index = 0;\n    my $set_index = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my",
    "    my @combos;\n    my @stack;\n    my $c = [];\n    my $i = 0;\n    while (1) {\n        if ($i < $n) {\n            push @stack, [$i, 0];\n            $i = 0;\n        } else {\n            ($i, my $j) = @{pop @stack};\n            last if !@stack;\n            $i = $stack[-1][0];\n            $j = $stack[-1][1] + 1;\n            $stack[-1][1] = $j;\n        }\n        if ($j < @$l) {\n            push @$c, $l->[$j];\n            if (@$c == $n) {\n                push @combos, [@$c];\n                pop @$c;\n            }\n            $i++;\n        }\n    }\n    return @combos;\n}",
    "    my @combinations;\n    my @combination;\n    my $i;\n    my $j;\n    my $k;\n    my $m;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $aa;\n    my $ab;\n    my $ac;\n    my $ad;\n    my $ae;\n    my $af;\n    my $ag;\n    my $ah;\n    my $ai;\n    my $aj;\n    my $ak;\n    my $al;\n    my $am;\n    my $an;\n    my $ao;\n    my $ap;\n    my $aq;\n    my $ar;\n    my $as;\n    my $at;\n    my $au;\n    my $av;\n    my $aw;\n    my $ax;\n    my $ay;\n    my $az;\n    my $ba;\n    my $bb;\n    my $bc;\n    my $bd;\n    my $be;\n    my $bf;\n    my $bg;\n    my $bh;\n    my $bi;\n    my $bj;\n    my $bk;\n    my $bl;\n    my $bm;\n    my $bn;\n    my $bo;\n    my $bp;\n    my $bq;\n    my $br;\n    my $bs;\n    my $bt;\n    my $bu;\n    my $bv;\n    my $bw;\n    my $bx;\n    my $by;\n    my $bz;\n    my $ca;\n    my $cb;\n    my $cc;\n    my $cd;\n    my $ce;\n    my $cf;\n    my $cg;\n    my $ch;\n    my $ci;\n    my $cj;\n    my $ck;\n    my $cl;\n    my $cm;\n    my $cn;\n    my $",
    "    my @combinations;\n    my @combination;\n    my $i;\n    my $j;\n    my $k;\n    my $m;",
    "    my @combinations;\n    my @combination;\n    my $i;\n    my $j;\n    my $k;\n    my $m;",
    "    my @result;\n    my @stack;\n    my $i = 0;\n    while (1) {\n        if ($i < $n) {\n            push @stack, $i;\n            $i = 0;\n        } else {\n            pop @stack;\n            last if !@stack;\n            $i = $stack[-1] + 1;\n            pop @stack;\n        }\n        push @result, [@$l[@stack]];\n    }\n    return @result;\n}",
    "    return [] if $n == 0;\n    return map [$_], @$l if $n == 1;\n    my @comb;\n    for my $i (0 .. $#$l) {\n        push @comb, [$l->[$i], @$_] for @{ combinations_colors([@$l[$i .. $#$l]], $n - 1) };\n    }\n    return \\@comb;\n}",
    "    return map [@$l[@_]], grep {$_[$_] <= $#$l} 0..$n-1;\n}",
    "    return if $n < 1;\n    return map [$_], @$l if $n == 1;\n    my @comb;\n    for my $i (0 .. $#$l) {\n        push @comb, [$l->[$i], @$_] for combinations_colors([@$l[$i .. $#$l]], $n - 1);\n    }\n    return @comb;\n}",
    "    my @combinations;\n    for my $i (0..$n-1) {\n        for my $j (0..$n-1) {\n            for my $k (0..$n-1) {\n                push @combinations, [$l->[$i], $l->[$j], $l->[$k]];\n            }\n        }\n    }\n    return @combinations;\n}",
    "    my @combinations = ();\n    my @combination = ();\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $m = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $aa = 0;\n    my $bb = 0;\n    my $cc = 0;\n    my $dd = 0;\n    my $ee = 0;\n    my $ff = 0;\n    my $gg = 0;\n    my $hh = 0;\n    my $ii = 0;\n    my $jj = 0;\n    my $kk = 0;\n    my $ll = 0;\n    my $mm = 0;\n    my $nn = 0;\n    my $oo = 0;\n    my $pp = 0;\n    my $qq = 0;\n    my $rr = 0;\n    my $ss = 0;\n    my $tt = 0;\n    my $uu = 0;\n    my $vv = 0;\n    my $ww = 0;\n    my $xx = 0;\n    my $yy = 0;\n    my $zz = 0;\n    my $aaa = 0;\n    my $bbb = 0;\n    my $ccc = 0;\n    my $ddd = 0;\n    my $eee = 0;\n    my $fff = 0;\n    my $ggg = 0;\n    my $hhh = 0;\n    my $iii = 0;\n    my $jjj = 0;\n    my $kkk = 0;\n    my $lll = 0;\n    my $mmm = 0;\n    my $nnn = 0;\n    my $ooo = 0;\n    my $ppp = 0;\n    my $qqq = 0;\n    my $rrr = 0;\n    my $sss = 0;\n    my",
    "    my @result = ();\n    my @stack = ();\n    my $i = 0;\n    while ($i >= 0) {\n        if ($i < $n) {\n            if (@$l > 0) {\n                push @stack, shift @$l;\n                $i++;\n                next;\n            }\n            else {\n                $i--;\n                next;\n            }\n        }\n        else {\n            push @result, [@stack];\n            $i--;\n            next;\n        }\n    }\n    return @result;\n}",
    "    return map [@$l[@_]], grep { $_[$_] < $n } 0..$#$l;\n}",
    "    my @combinations;\n    my @combination;\n    my $i;\n    my $j;\n    my $k;\n    my $m;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $aa;\n    my $bb;\n    my $cc;\n    my $dd;\n    my $ee;\n    my $ff;\n    my $gg;\n    my $hh;\n    my $ii;\n    my $jj;\n    my $kk;\n    my $ll;\n    my $mm;\n    my $nn;\n    my $oo;\n    my $pp;\n    my $qq;\n    my $rr;\n    my $ss;\n    my $tt;\n    my $uu;\n    my $vv;\n    my $ww;\n    my $xx;\n    my $yy;\n    my $zz;\n    my $aaa;\n    my $bbb;\n    my $ccc;\n    my $ddd;\n    my $eee;\n    my $fff;\n    my $ggg;\n    my $hhh;\n    my $iii;\n    my $jjj;\n    my $kkk;\n    my $lll;\n    my $mmm;\n    my $nnn;\n    my $ooo;\n    my $ppp;\n    my $qqq;\n    my $rrr;\n    my $sss;\n    my $ttt;\n    my $uuu;\n    my $vvv;\n    my $www;\n    my $xxx;\n    my $yyy;\n    my $zzz;\n    my $aaaa;\n    my $bbbb;\n    my $cccc;\n    my $dddd;\n    my $eeee;\n    my $ffff;\n    my $gggg;\n    my $hhhh;\n    my $iiii;\n    my $jjjj;\n    my $kkkk;\n    my $ll",
    "    my @combinations;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $m = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $aa = 0;\n    my $bb = 0;\n    my $cc = 0;\n    my $dd = 0;\n    my $ee = 0;\n    my $ff = 0;\n    my $gg = 0;\n    my $hh = 0;\n    my $ii = 0;\n    my $jj = 0;\n    my $kk = 0;\n    my $ll = 0;\n    my $mm = 0;\n    my $nn = 0;\n    my $oo = 0;\n    my $pp = 0;\n    my $qq = 0;\n    my $rr = 0;\n    my $ss = 0;\n    my $tt = 0;\n    my $uu = 0;\n    my $vv = 0;\n    my $ww = 0;\n    my $xx = 0;\n    my $yy = 0;\n    my $zz = 0;\n    my $aaa = 0;\n    my $bbb = 0;\n    my $ccc = 0;\n    my $ddd = 0;\n    my $eee = 0;\n    my $fff = 0;\n    my $ggg = 0;\n    my $hhh = 0;\n    my $iii = 0;\n    my $jjj = 0;\n    my $kkk = 0;\n    my $lll = 0;\n    my $mmm = 0;\n    my $nnn = 0;\n    my $ooo = 0;\n    my $ppp = 0;\n    my $qqq = 0;\n    my $rrr = 0;\n    my $sss = 0;\n    my $ttt = 0;\n    my",
    "    return [] if $n == 0;\n    return map [$_], @$l if $n == 1;\n    my @comb;\n    for my $i (0 .. $#$l) {\n        push @comb, [$l->[$i], @$_] for @{ combinations_colors([@$l[$i .. $#$l]], $n - 1) };\n    }\n    return \\@comb;\n}",
    "    my @result;\n    if ($n == 0) {\n        push @result, [];\n    } else {\n        for my $i (0 .. $#$l) {\n            my $sub = combinations_colors([@$l[$i .. $#$l]], $n - 1);\n            for my $s (@$sub) {\n                push @result, [$l->[$i], @$s];\n            }\n        }\n    }\n    return \\@result;\n}",
    "    my @result;\n    my @stack;\n    my $i = 0;\n    while (1) {\n        if ($i < $n) {\n            push @stack, $i;\n            $i = 0;\n        } else {\n            pop @stack;\n            $i = pop @stack;\n            last unless defined $i;\n            $i++;\n        }\n        push @result, [@$l[@stack]] if @stack == $n;\n    }\n    return @result;\n}",
    "    my @combinations;\n    my @combination;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $m = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $aa = 0;\n    my $bb = 0;\n    my $cc = 0;\n    my $dd = 0;\n    my $ee = 0;\n    my $ff = 0;\n    my $gg = 0;\n    my $hh = 0;\n    my $ii = 0;\n    my $jj = 0;\n    my $kk = 0;\n    my $ll = 0;\n    my $mm = 0;\n    my $nn = 0;\n    my $oo = 0;\n    my $pp = 0;\n    my $qq = 0;\n    my $rr = 0;\n    my $ss = 0;\n    my $tt = 0;\n    my $uu = 0;\n    my $vv = 0;\n    my $ww = 0;\n    my $xx = 0;\n    my $yy = 0;\n    my $zz = 0;\n    my $aaa = 0;\n    my $bbb = 0;\n    my $ccc = 0;\n    my $ddd = 0;\n    my $eee = 0;\n    my $fff = 0;\n    my $ggg = 0;\n    my $hhh = 0;\n    my $iii = 0;\n    my $jjj = 0;\n    my $kkk = 0;\n    my $lll = 0;\n    my $mmm = 0;\n    my $nnn = 0;\n    my $ooo = 0;\n    my $ppp = 0;\n    my $qqq = 0;\n    my $rrr = 0;\n    my $sss = 0;\n    my $tt",
    "    return map [@$l[@_]], grep { $_[$_] < @$l } 0..$n-1;\n}",
    "    my @result;\n    if ($n == 0) {\n        push @result, [];\n    } else {\n        my $sub_result = combinations_colors($l, $n - 1);\n        for my $sub_result_item (@$sub_result) {\n            for my $l_item (@$l) {\n                push @result, [@$sub_result_item, $l_item];\n            }\n        }\n    }\n    return \\@result;\n}",
    "    my @combinations;\n    my @combination;\n    my $i;\n    my $j;",
    "    my @combinations;\n    my @combination;\n    my $i;\n    my $j;\n    my $k;\n    my $m;\n    my $n_factorial = factorial($n);\n    my $n_minus_1_factorial = factorial($n - 1);\n    my $n_minus_1_factorial_times_n = $n_minus_1_factorial * $n;\n    my $n_minus_1_factorial_times_n_minus_1 = $n_minus_1_factorial * ($n - 1);\n    my $n_minus_1_factorial_times_n_minus_2 = $n_minus_1_factorial * ($n - 2);\n    my $n_minus_1_factorial_times_n_minus_3 = $n_minus_1_factorial * ($n - 3);\n    my $n_minus_1_factorial_times_n_minus_4 = $n_minus_1_factorial * ($n - 4);\n    my $n_minus_1_factorial_times_n_minus_5 = $n_minus_1_factorial * ($n - 5);\n    my $n_minus_1_factorial_times_n_minus_6 = $n_minus_1_factorial * ($n - 6);\n    my $n_minus_1_factorial_times_n_minus_7 = $n_minus_1_factorial * ($n - 7);\n    my $n_minus_1_factorial_times_n_minus_8 = $n_minus_1_factorial * ($n - 8);\n    my $n_minus_1_factorial_times_n_minus_9 = $n_minus_1_factorial * ($n - 9);\n    my $n_minus_1_factorial_times_n_minus_10 = $n_minus_1_factorial * ($n - 10);\n    my $n_minus_1_factorial_times_n_minus_11 = $n_minus_1_factorial * ($n - 11);\n    my $n_minus_1_factorial_times",
    "    my @combinations = ();\n    my @combination = ();\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $m = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $aa = 0;\n    my $bb = 0;\n    my $cc = 0;\n    my $dd = 0;\n    my $ee = 0;\n    my $ff = 0;\n    my $gg = 0;\n    my $hh = 0;\n    my $ii = 0;\n    my $jj = 0;\n    my $kk = 0;\n    my $ll = 0;\n    my $mm = 0;\n    my $nn = 0;\n    my $oo = 0;\n    my $pp = 0;\n    my $qq = 0;\n    my $rr = 0;\n    my $ss = 0;\n    my $tt = 0;\n    my $uu = 0;\n    my $vv = 0;\n    my $ww = 0;\n    my $xx = 0;\n    my $yy = 0;\n    my $zz = 0;\n    my $aaa = 0;\n    my $bbb = 0;\n    my $ccc = 0;\n    my $ddd = 0;\n    my $eee = 0;\n    my $fff = 0;\n    my $ggg = 0;\n    my $hhh = 0;\n    my $iii = 0;\n    my $jjj = 0;\n    my $kkk = 0;\n    my $lll = 0;\n    my $mmm = 0;\n    my $nnn = 0;\n    my $ooo = 0;\n    my $ppp = 0;\n    my $qqq = 0;\n    my $rrr = 0;\n    my $sss = 0;\n    my",
    "    return if $n < 1;\n    return map [$_], @$l if $n == 1;\n    my @comb;\n    for my $i (0 .. $#$l) {\n        push @comb, [$l->[$i], @$_] for combinations_colors([@$l[$i .. $#$l]], $n - 1);\n    }\n    @comb;\n}",
    "    my @result;\n    my @combination;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $m = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $aa = 0;\n    my $bb = 0;\n    my $cc = 0;\n    my $dd = 0;\n    my $ee = 0;\n    my $ff = 0;\n    my $gg = 0;\n    my $hh = 0;\n    my $ii = 0;\n    my $jj = 0;\n    my $kk = 0;\n    my $ll = 0;\n    my $mm = 0;\n    my $nn = 0;\n    my $oo = 0;\n    my $pp = 0;\n    my $qq = 0;\n    my $rr = 0;\n    my $ss = 0;\n    my $tt = 0;\n    my $uu = 0;\n    my $vv = 0;\n    my $ww = 0;\n    my $xx = 0;\n    my $yy = 0;\n    my $zz = 0;\n    my $aaa = 0;\n    my $bbb = 0;\n    my $ccc = 0;\n    my $ddd = 0;\n    my $eee = 0;\n    my $fff = 0;\n    my $ggg = 0;\n    my $hhh = 0;\n    my $iii = 0;\n    my $jjj = 0;\n    my $kkk = 0;\n    my $lll = 0;\n    my $mmm = 0;\n    my $nnn = 0;\n    my $ooo = 0;\n    my $ppp = 0;\n    my $qqq = 0;\n    my $rrr = 0;\n    my $sss = 0;\n    my $ttt",
    "    my @combinations;\n    my @indices = (0) x $n;\n    while (1) {\n        push @combinations, [@$l[@indices]];\n        my $i = $n - 1;\n        ++$indices[$i];\n        while ($i > 0 && $indices[$i] >= @$l) {\n            $indices[$i] = 0;\n            --$i;\n            ++$indices[$i];\n        }\n        last if $indices[0] >= @$l;\n    }\n    return @combinations;\n}",
    "    my @combos = ();\n    my $i = 0;\n    my $j = 0;",
    "    my @combinations;\n    my @combination;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $m = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n    my $ii = 0;\n    my $jj = 0;\n    my $kk = 0;\n    my $ll = 0;\n    my $mm = 0;\n    my $nn = 0;\n    my $oo = 0;\n    my $pp = 0;\n    my $qq = 0;\n    my $rr = 0;\n    my $ss = 0;\n    my $tt = 0;\n    my $uu = 0;\n    my $vv = 0;\n    my $ww = 0;\n    my $xx = 0;\n    my $yy = 0;\n    my $zz = 0;\n    my $aaa = 0;\n    my $bbb = 0;\n    my $ccc = 0;\n    my $ddd = 0;\n    my $eee = 0;\n    my $fff = 0;\n    my $ggg = 0;\n    my $hhh = 0;\n    my $iii = 0;\n    my $jjj = 0;\n    my $kkk = 0;\n    my $lll = 0;\n    my $mmm = 0;\n    my $nnn = 0;\n    my $ooo = 0;\n    my $ppp = 0;\n    my $qqq = 0;\n    my $rrr = 0;\n    my $sss = 0;\n    my $tt",
    "    my @result;\n    my @stack;\n    my $i = 0;\n    while (1) {\n        if ($i < $n) {\n            push @stack, $i;\n            $i = 0;\n        } else {\n            pop @stack;\n            $i = pop @stack;\n            last if !defined $i;\n            $i++;\n        }\n        if (@stack == $n) {\n            push @result, [@$l[@stack]];\n        }\n    }\n    return @result;\n}",
    "    my @combinations;\n    my @combination;\n    my $i;\n    my $j;\n    my $k;\n    my $m;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $aa;\n    my $ab;\n    my $ac;\n    my $ad;\n    my $ae;\n    my $af;\n    my $ag;\n    my $ah;\n    my $ai;\n    my $aj;\n    my $ak;\n    my $al;\n    my $am;\n    my $an;\n    my $ao;\n    my $ap;\n    my $aq;\n    my $ar;\n    my $as;\n    my $at;\n    my $au;\n    my $av;\n    my $aw;\n    my $ax;\n    my $ay;\n    my $az;\n    my $ba;\n    my $bb;\n    my $bc;\n    my $bd;\n    my $be;\n    my $bf;\n    my $bg;\n    my $bh;\n    my $bi;\n    my $bj;\n    my $bk;\n    my $bl;\n    my $bm;\n    my $bn;\n    my $bo;\n    my $bp;\n    my $bq;\n    my $br;\n    my $bs;\n    my $bt;\n    my $bu;\n    my $bv;\n    my $bw;\n    my $bx;\n    my $by;\n    my $bz;\n    my $ca;\n    my $cb;\n    my $cc;\n    my $cd;\n    my $ce;\n    my $cf;\n    my $cg;\n    my $ch;\n    my $ci;\n    my $cj;\n    my $ck;\n    my $cl;\n    my $cm;\n    my $cn;\n    my $",
    "    return map [@$l[@_]], grep {$_[$_] <= $#$l} 0..$n-1;\n}",
    "    my @result;\n    if ($n == 1) {\n        foreach my $e (@$l) {\n            push @result, [$e];\n        }\n    } else {\n        my $sublist = combinations_colors($l, $n - 1);\n        foreach my $e (@$l) {\n            foreach my $sub_e (@$sublist) {\n                push @result, [$e, @$sub_e];\n            }\n        }\n    }\n    return \\@result;\n}",
    "    return map { [@$l[@$_]] } combinations([0..$#$l], $n);\n}",
    "    return if $n < 1;\n    return map [$_], @$l if $n == 1;\n    my @comb;\n    for my $i ( 0 .. $#$l ) {\n        push @comb, [ $l->[$i], @$_ ] for combinations_colors( [ @$l[ $i .. $#$l ] ], $n - 1 );\n    }\n    return @comb;\n}",
    "    my @result;\n    my @comb;\n    my $i;\n    my $j;\n    my $k;\n    my $m;\n    my $n_factorial = factorial($n);\n    my $l_factorial = factorial($l);\n    my $l_minus_n_factorial = factorial($l - $n);\n    my $num_combinations = $l_factorial / ($n_factorial * $l_minus_n_factorial);\n    for ($i = 0; $i < $num_combinations; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n            $comb[$j] = $l - $n + $j;\n        }\n        $result[$i] = [@comb];\n        $j = $n - 1;\n        while ($j >= 0 && $comb[$j] == $l - 1) {\n            $j--;\n        }\n        if ($j >= 0) {\n            $comb[$j]++;\n            for ($k = $j + 1; $k < $n; $k++) {\n                $comb[$k] = $comb[$k - 1] + 1;\n            }\n        }\n    }\n    return @result;\n}",
    "    return map [@$l[@_]], grep { $_[$_] <= $#{$l} } 0..$#_ < $n ? $#_ : $n-1;\n}",
    "    my @result;\n    my @stack;\n    my $i = 0;\n    while (1) {\n        if ($i < $n) {\n            push @stack, $i;\n            $i = 0;\n        } else {\n            pop @stack;\n            $i = pop @stack;\n            last if !defined $i;\n            $i++;\n        }\n        if (@stack == $n) {\n            push @result, [@$l[@stack]];\n        }\n    }\n    return @result;\n}",
    "    my @combinations;\n    my @combination;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $m = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $m = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $m = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $m = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $m = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $m = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n   ",
    "    my @result;\n    my @combination;\n    my $i;\n    my $j;\n    for ($i = 0; $i < $n; $i++) {\n        $combination[$i] = 0;\n    }\n    while (1) {\n        push @result, [@combination];\n        for ($i = 0; $i < $n; $i++) {\n            if ($combination[$i] < $#$l) {\n                $combination[$i]++;\n                last;\n            } else {\n                $combination[$i] = 0;\n            }\n        }\n        last if $i == $n;\n    }\n    return @result;\n}",
    "    return if $n < 1;\n    return map [$_], @$l if $n == 1;\n    my @comb;\n    for my $i ( 0 .. $#$l ) {\n        push @comb, [ $l->[$i], @$_ ] for combinations_colors( [ @$l[ $i .. $#$l ] ], $n - 1 );\n    }\n    return @comb;\n}",
    "    return map [@$l[@_]], grep {$_[$_] < @$l} map {$_ = 0} 1..$n;\n}",
    "    my @combinations;\n    my @combination;\n    my $i;\n    my $j;",
    "    return map {[@$l[@$_]]} combinations([0..$#$l], $n);\n}",
    "    my @result;\n    my @stack;\n    my $i = 0;\n    while (1) {\n        if ($i < $n) {\n            push @stack, $i;\n            $i = 0;\n        } else {\n            pop @stack;\n            last if !@stack;\n            $i = $stack[-1] + 1;\n            pop @stack;\n        }\n        push @stack, $i;\n        push @result, [@stack];\n    }\n    return @result;\n}",
    "    my @combinations;\n    my @combination;\n    my $i;\n    my $j;\n    my $k;\n    my $m;\n    my $n_factorial = factorial($n);\n    for ($i = 0; $i < $n_factorial; $i++) {\n        $combination[$i] = [];\n    }\n    for ($i = 0; $i < $n; $i++) {\n        $m = $n_factorial;\n        for ($j = 0; $j < $n; $j++) {\n            $m /= ($n - $j);\n        }\n        for ($j = 0; $j < $n_factorial; $j++) {\n            $k = int($j / $m) % $n;\n            $combination[$j][$i] = $l->[$k];\n        }\n    }\n    return @combination;\n}",
    "    return map [@$l[@_]], grep { $_[$_] < $n } 0..$#$l;\n}",
    "    my @combinations;\n    my @combination;\n    my $i;\n    my $j;\n    my $k;\n    my $m;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $aa;\n    my $ab;\n    my $ac;\n    my $ad;\n    my $ae;\n    my $af;\n    my $ag;\n    my $ah;\n    my $ai;\n    my $aj;\n    my $ak;\n    my $al;\n    my $am;\n    my $an;\n    my $ao;\n    my $ap;\n    my $aq;\n    my $ar;\n    my $as;\n    my $at;\n    my $au;\n    my $av;\n    my $aw;\n    my $ax;\n    my $ay;\n    my $az;\n    my $ba;\n    my $bb;\n    my $bc;\n    my $bd;\n    my $be;\n    my $bf;\n    my $bg;\n    my $bh;\n    my $bi;\n    my $bj;\n    my $bk;\n    my $bl;\n    my $bm;\n    my $bn;\n    my $bo;\n    my $bp;\n    my $bq;\n    my $br;\n    my $bs;\n    my $bt;\n    my $bu;\n    my $bv;\n    my $bw;\n    my $bx;\n    my $by;\n    my $bz;\n    my $ca;\n    my $cb;\n    my $cc;\n    my $cd;\n    my $ce;\n    my $cf;\n    my $cg;\n    my $ch;\n    my $ci;\n    my $cj;\n    my $ck;\n    my $cl;\n    my $cm;\n    my $cn;\n    my $",
    "    my @combinations;\n    my @combination;\n    my $i;\n    my $j;\n    for($i = 0; $i < $n; $i++) {\n        $combination[$i] = 0;\n    }\n    while(1) {\n        push @combinations, [@combination];\n        $i = $n - 1;\n        while($i >= 0 && $combination[$i] == $l - 1) {\n            $i--;\n        }\n        if($i < 0) {\n            last;\n        }\n        $combination[$i]++;\n        for($j = $i + 1; $j < $n; $j++) {\n            $combination[$j] = 0;\n        }\n    }\n    return @combinations;\n}",
    "    my @combinations = ();\n    my @combination = ();\n    my $i = 0;\n    my $j = 0;\n    for ($i = 0; $i < $n; $i++) {\n        $combination[$i] = 0;\n    }\n    $i = 0;\n    while ($i >= 0) {\n        $combination[$i]++;\n        if ($combination[$i] > $l) {\n            $i--;\n        } else {\n            if ($i == $n - 1) {\n                my @temp = ();\n                for ($j = 0; $j < $n; $j++) {\n                    push(@temp, $combination[$j]);\n                }\n                push(@combinations, \\@temp);\n            } else {\n                $i++;\n                $combination[$i] = $combination[$i - 1];\n            }\n        }\n    }\n    return @combinations;\n}",
    "    return [] if $n == 0;\n    return map [$_], @$l if $n == 1;\n    my @comb;\n    for my $i (0 .. $#$l) {\n        push @comb, [$l->[$i], @$_] for @{ combinations_colors([@$l[$i .. $#$l]], $n - 1) };\n    }\n    return \\@comb;\n}",
    "    my @res;\n    if ($n == 1) {\n        foreach my $e (@$l) {\n            push @res, [$e];\n        }\n    } else {\n        foreach my $e (@$l) {\n            my $sub_res = combinations_colors($l, $n - 1);\n            foreach my $sub_e (@$sub_res) {\n                push @res, [$e, @$sub_e];\n            }\n        }\n    }\n    return \\@res;\n}",
    "    my @combinations;\n    my @combination;\n    my $i;\n    my $j;\n    my $k;\n    my $m;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $aa;\n    my $ab;\n    my $ac;\n    my $ad;\n    my $ae;\n    my $af;\n    my $ag;\n    my $ah;\n    my $ai;\n    my $aj;\n    my $ak;\n    my $al;\n    my $am;\n    my $an;\n    my $ao;\n    my $ap;\n    my $aq;\n    my $ar;\n    my $as;\n    my $at;\n    my $au;\n    my $av;\n    my $aw;\n    my $ax;\n    my $ay;\n    my $az;\n    my $ba;\n    my $bb;\n    my $bc;\n    my $bd;\n    my $be;\n    my $bf;\n    my $bg;\n    my $bh;\n    my $bi;\n    my $bj;\n    my $bk;\n    my $bl;\n    my $bm;\n    my $bn;\n    my $bo;\n    my $bp;\n    my $bq;\n    my $br;\n    my $bs;\n    my $bt;\n    my $bu;\n    my $bv;\n    my $bw;\n    my $bx;\n    my $by;\n    my $bz;\n    my $ca;\n    my $cb;\n    my $cc;\n    my $cd;\n    my $ce;\n    my $cf;\n    my $cg;\n    my $ch;\n    my $ci;\n    my $cj;\n    my $ck;\n    my $cl;\n    my $cm;\n    my $cn;\n    my $",
    "    return if $n < 1;\n    return map [$_], @$l if $n == 1;\n    my @comb;\n    for my $i (0 .. $#$l) {\n        push @comb, [$l->[$i], @$_] for combinations_colors([@$l[$i .. $#$l]], $n - 1);\n    }\n    @comb;\n}",
    "    my @combinations;\n    my @combination;\n    my $i;",
    "    my @combinations;\n    my @combination;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $m = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $aa = 0;\n    my $bb = 0;\n    my $cc = 0;\n    my $dd = 0;\n    my $ee = 0;\n    my $ff = 0;\n    my $gg = 0;\n    my $hh = 0;\n    my $ii = 0;\n    my $jj = 0;\n    my $kk = 0;\n    my $ll = 0;\n    my $mm = 0;\n    my $nn = 0;\n    my $oo = 0;\n    my $pp = 0;\n    my $qq = 0;\n    my $rr = 0;\n    my $ss = 0;\n    my $tt = 0;\n    my $uu = 0;\n    my $vv = 0;\n    my $ww = 0;\n    my $xx = 0;\n    my $yy = 0;\n    my $zz = 0;\n    my $aaa = 0;\n    my $bbb = 0;\n    my $ccc = 0;\n    my $ddd = 0;\n    my $eee = 0;\n    my $fff = 0;\n    my $ggg = 0;\n    my $hhh = 0;\n    my $iii = 0;\n    my $jjj = 0;\n    my $kkk = 0;\n    my $lll = 0;\n    my $mmm = 0;\n    my $nnn = 0;\n    my $ooo = 0;\n    my $ppp = 0;\n    my $qqq = 0;\n    my $rrr = 0;\n    my $sss = 0;\n    my $tt",
    "    return unless $n;\n    return map [$_], @$l if $n == 1;\n    return map [@$_, $_->[-1]], combinations_colors($l, $n - 1);\n}",
    "    my @result;\n    my @stack;\n    my $i = 0;\n    while (1) {\n        if ($i < $n) {\n            push @stack, $i;\n            $i = 0;\n        } else {\n            pop @stack;\n            $i = pop @stack;\n            if (!defined $i) {\n                last;\n            }\n            $i++;\n        }\n        if (@stack == $n) {\n            push @result, [@$l[@stack]];\n        }\n    }\n    return @result;\n}",
    "    my @combinations;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $m = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $aa = 0;\n    my $ab = 0;\n    my $ac = 0;\n    my $ad = 0;\n    my $ae = 0;\n    my $af = 0;\n    my $ag = 0;\n    my $ah = 0;\n    my $ai = 0;\n    my $aj = 0;\n    my $ak = 0;\n    my $al = 0;\n    my $am = 0;\n    my $an = 0;\n    my $ao = 0;\n    my $ap = 0;\n    my $aq = 0;\n    my $ar = 0;\n    my $as = 0;\n    my $at = 0;\n    my $au = 0;\n    my $av = 0;\n    my $aw = 0;\n    my $ax = 0;\n    my $ay = 0;\n    my $az = 0;\n    my $ba = 0;\n    my $bb = 0;\n    my $bc = 0;\n    my $bd = 0;\n    my $be = 0;\n    my $bf = 0;\n    my $bg = 0;\n    my $bh = 0;\n    my $bi = 0;\n    my $bj = 0;\n    my $bk = 0;\n    my $bl = 0;\n    my $bm = 0;\n    my $bn = 0;\n    my $bo = 0;\n    my $bp = 0;\n    my $bq = 0;\n    my $br = 0;\n    my $bs = 0;\n    my $bt = 0;\n    my $bu = 0;\n    my $bv =",
    "    my @res;\n    my @stack;\n    my $i = 0;\n    while (1) {\n        if ($i < $n) {\n            push @stack, $i;\n            $i = 0;\n        } else {\n            pop @stack;\n            last if !@stack;\n            $i = $stack[-1] + 1;\n        }\n        if (@stack == $n) {\n            push @res, [@$l[@stack]];\n        }\n    }\n    return @res;\n}",
    "    return if $n < 1;\n    return map [$_], @$l if $n == 1;\n    my @comb;\n    for my $i ( 0 .. $#$l ) {\n        push @comb, [ $l->[$i], @$_ ] for combinations_colors( [ @$l[ $i .. $#$l ] ], $n - 1 );\n    }\n    return @comb;\n}",
    "    return if $n < 1;\n    return map [$_], @$l if $n == 1;\n    my @comb;\n    for my $i ( 0 .. $#$l ) {\n        push @comb, [ $l->[$i], @$_ ] for combinations_colors( [ @$l[ $i .. $#$l ] ], $n - 1 );\n    }\n    return @comb;\n}",
    "    return map [@$l[@_]], grep {$_[$_] < @$l} map {$_ = 0} 1 .. $n;\n}",
    "    return [] if $n == 0;\n    return map [$_], @$l if $n == 1;\n    my @comb;\n    for my $i (0 .. $#$l) {\n        push @comb, [$l->[$i], @$_] for @{ combinations_colors([@$l[$i .. $#$l]], $n - 1) };\n    }\n    return \\@comb;\n}",
    "    my @result;\n    if ($n == 0) {\n        push @result, [];\n    } else {\n        for my $i (0 .. $#$l) {\n            for my $c (combinations_colors([@$l[$i..$#$l]], $n-1)) {\n                push @result, [$l->[$i], @$c];\n            }\n        }\n    }\n    return @result;\n}",
    "    my @combinations = ();\n    my @combination = ();\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $m = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $aa = 0;\n    my $bb = 0;\n    my $cc = 0;\n    my $dd = 0;\n    my $ee = 0;\n    my $ff = 0;\n    my $gg = 0;\n    my $hh = 0;\n    my $ii = 0;\n    my $jj = 0;\n    my $kk = 0;\n    my $ll = 0;\n    my $mm = 0;\n    my $nn = 0;\n    my $oo = 0;\n    my $pp = 0;\n    my $qq = 0;\n    my $rr = 0;\n    my $ss = 0;\n    my $tt = 0;\n    my $uu = 0;\n    my $vv = 0;\n    my $ww = 0;\n    my $xx = 0;\n    my $yy = 0;\n    my $zz = 0;\n    my $aaa = 0;\n    my $bbb = 0;\n    my $ccc = 0;\n    my $ddd = 0;\n    my $eee = 0;\n    my $fff = 0;\n    my $ggg = 0;\n    my $hhh = 0;\n    my $iii = 0;\n    my $jjj = 0;\n    my $kkk = 0;\n    my $lll = 0;\n    my $mmm = 0;\n    my $nnn = 0;\n    my $ooo = 0;\n    my $ppp = 0;\n    my $qqq = 0;\n    my $rrr = 0;\n    my $sss = 0;\n    my",
    "    return unless $n;\n    return map [$_], @$l if $n == 1;\n    my @c;\n    for my $i (0 .. $#$l) {\n        push @c, map [$l->[$i], @$_], combinations_colors([@$l[$i .. $#$l]], $n - 1);\n    }\n    return @c;\n}",
    "    my @combinations;\n    my @combination;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $m = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $aa = 0;\n    my $bb = 0;\n    my $cc = 0;\n    my $dd = 0;\n    my $ee = 0;\n    my $ff = 0;\n    my $gg = 0;\n    my $hh = 0;\n    my $ii = 0;\n    my $jj = 0;\n    my $kk = 0;\n    my $ll = 0;\n    my $mm = 0;\n    my $nn = 0;\n    my $oo = 0;\n    my $pp = 0;\n    my $qq = 0;\n    my $rr = 0;\n    my $ss = 0;\n    my $tt = 0;\n    my $uu = 0;\n    my $vv = 0;\n    my $ww = 0;\n    my $xx = 0;\n    my $yy = 0;\n    my $zz = 0;\n    my $aaa = 0;\n    my $bbb = 0;\n    my $ccc = 0;\n    my $ddd = 0;\n    my $eee = 0;\n    my $fff = 0;\n    my $ggg = 0;\n    my $hhh = 0;\n    my $iii = 0;\n    my $jjj = 0;\n    my $kkk = 0;\n    my $lll = 0;\n    my $mmm = 0;\n    my $nnn = 0;\n    my $ooo = 0;\n    my $ppp = 0;\n    my $qqq = 0;\n    my $rrr = 0;\n    my $sss = 0;\n    my $tt",
    "    return if $n < 1;\n    return map [$_], @$l if $n == 1;\n    my @comb;\n    for my $i (0 .. $#$l) {\n        push @comb, [$l->[$i], @$_] for combinations_colors([@$l[$i .. $#$l]], $n - 1);\n    }\n    return @comb;\n}",
    "    my @res;\n    my @stack;\n    my $i = 0;\n    while (1) {\n        if ($i < $n) {\n            push @stack, $i;\n            $i = 0;\n        } else {\n            pop @stack;\n            $i = pop @stack;\n            last if !defined $i;\n            $i++;\n        }\n        push @res, [@$l[@stack]] if @stack == $n;\n    }\n    return @res;\n}",
    "    my @result;\n    my @comb;\n    my $i;\n    my $j;",
    "    return map [@$l[@_]], grep {$_[$_] < @$l} 0..$n-1;\n}",
    "    my @combinations = ();\n    my @combination = ();\n    my $i = 0;\n    while ($i < $n) {\n        $combination[$i] = 0;\n        $i++;\n    }\n    $i = 0;\n    while ($i < $n) {\n        push @combinations, [@combination];\n        $i++;\n    }\n    while ($combination[$n - 1] < $#{$l}) {\n        $i = $n - 1;\n        while ($i >= 0 && $combination[$i] == $#{$l}) {\n            $combination[$i] = 0;\n            $i--;\n        }\n        if ($i >= 0) {\n            $combination[$i]++;\n            push @combinations, [@combination];\n        }\n    }\n    return @combinations;\n}",
    "    return [] if $n == 0;\n    return map [$_], @$l if $n == 1;\n    my @comb;\n    for my $i (0 .. @$l - 1) {\n        for my $c (@{ combinations_colors([@$l[0 .. $i - 1, $i + 1 .. $#$l]], $n - 1) }) {\n            push @comb, [$l->[$i], @$c];\n        }\n    }\n    return \\@comb;\n}",
    "    my @combinations;\n    my @combination;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $t = 0;\n    my $m = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n    my $ii = 0;\n    my $jj = 0;\n    my $kk = 0;\n    my $ll = 0;\n    my $mm = 0;\n    my $nn = 0;\n    my $oo = 0;\n    my $pp = 0;\n    my $qq = 0;\n    my $rr = 0;\n    my $ss = 0;\n    my $tt = 0;\n    my $uu = 0;\n    my $vv = 0;\n    my $ww = 0;\n    my $xx = 0;\n    my $yy = 0;\n    my $zz = 0;\n    my $aaa = 0;\n    my $bbb = 0;\n    my $ccc = 0;\n    my $ddd = 0;\n    my $eee = 0;\n    my $fff = 0;\n    my $ggg = 0;\n    my $hhh = 0;\n    my $iii = 0;\n    my $jjj = 0;\n    my $kkk = 0;\n    my $lll = 0;\n    my $mmm = 0;\n    my $nnn = 0;\n    my $ooo = 0;\n    my $ppp = 0;\n    my $qqq = 0;\n    my $rrr = 0;\n    my $sss = 0;\n    my $tt",
    "    return map [@$l[@_]], grep {$_[$_] < @$l} map {$_ * @$l} 0..$n-1;\n}",
    "    my @combinations;\n    my @colors = @{$l};\n    my $num_colors = scalar @colors;\n    my $num_combinations = $num_colors ** $n;\n    for (my $i = 0; $i < $num_combinations; $i++) {\n        my @combination;\n        for (my $j = 0; $j < $n; $j++) {\n            my $color_index = ($i / ($num_colors ** $j)) % $num_colors;\n            push @combination, $colors[$color_index];\n        }\n        push @combinations, \\@combination;\n    }\n    return @combinations;\n}",
    "    return map {[@$l[@_]]} combinations($n, 0..$#$l);\n}",
    "    my @result;\n    my @stack;\n    my $i = 0;\n    while (1) {\n        if ($i < $n) {\n            push @stack, $i;\n            $i = 0;\n        } else {\n            pop @stack;\n            $i = pop @stack;\n            last if !defined $i;\n            $i++;\n        }\n        if (@stack == $n) {\n            push @result, [@$l[@stack]];\n        }\n    }\n    return @result;\n}",
    "    return if $n < 1;\n    return map [$_], @$l if $n == 1;\n    my @comb;\n    for my $i ( 0 .. $#$l ) {\n        push @comb, [ $l->[$i], @$_ ] for combinations_colors( [ @$l[ $i .. $#$l ] ], $n - 1 );\n    }\n    @comb;\n}",
    "    return if $n < 1;\n    return map [$_], @$l if $n == 1;\n    my @comb;\n    for my $i (0 .. $#$l) {\n        push @comb, [$l->[$i], @$_] for combinations_colors([@$l[$i .. $#$l]], $n - 1);\n    }\n    @comb;\n}",
    "    my @combos;\n    my @indices = (0) x $n;\n    while (1) {\n        push @combos, [@$l[@indices]];\n        my $i = $n - 1;\n        ++$indices[$i];\n        while ($i > 0 && $indices[$i] >= @$l) {\n            $indices[$i] = 0;\n            --$i;\n            ++$indices[$i];\n        }\n        last if $indices[0] >= @$l;\n    }\n    return @combos;\n}",
    "    my @combinations = ();\n    my @colors = @$l;\n    my $size = scalar(@colors);\n    my $max = $size ** $n;\n    for (my $i = 0; $i < $max; $i++) {\n        my @combination = ();\n        my $j = $i;\n        for (my $k = 0; $k < $n; $k++) {\n            my $index = $j % $size;\n            push @combination, $colors[$index];\n            $j = int($j / $size);\n        }\n        push @combinations, \\@combination;\n    }\n    return @combinations;\n}",
    "    my @combinations;\n    my @combination;\n    my $i;\n    my $j;\n    my $k;",
    "    return if $n < 1;\n    return map [$_], @$l if $n == 1;\n    my @comb;\n    for my $i (0 .. $#$l) {\n        push @comb, [$l->[$i], @$_] for combinations_colors([@$l[$i .. $#$l]], $n - 1);\n    }\n    @comb;\n}",
    "    return if $n < 1;\n    return map [$_], @$l if $n == 1;\n    my @comb;\n    for my $i (0 .. $#$l) {\n        push @comb, [$l->[$i], @$_] for combinations_colors([@$l[$i .. $#$l]], $n - 1);\n    }\n    @comb;\n}",
    "    return map [@$l[@_]], grep { $_[$_] <= $#{$l} } 0 .. $#_ < $n ? $#_ : $n - 1;\n}",
    "    return unless $n;\n    return map [$_], @$l if $n == 1;\n    my @comb;\n    for my $i (0 .. $#$l) {\n        push @comb, map [$l->[$i], @$_], combinations_colors([@$l[$i .. $#$l]], $n - 1);\n    }\n    return @comb;\n}",
    "    return if $n < 1;\n    return map [$_], @$l if $n == 1;\n    my @comb;\n    for (my $i = 0; $i <= $#$l; $i++) {\n        push @comb, [$l->[$i], @$_] for combinations_colors([@$l[$i..$#$l]], $n - 1);\n    }\n    return @comb;\n}",
    "    my @combinations;\n    for (my $i = 0; $i < @$l; $i++) {\n        if ($n == 1) {\n            push(@combinations, [$l->[$i]]);\n        } else {\n            my $sub_combinations = combinations_colors([@$l[$i..@$l-1]], $n-1);\n            for (my $j = 0; $j < @$sub_combinations; $j++) {\n                push(@combinations, [$l->[$i], @{$sub_combinations->[$j]}]);\n            }\n        }\n    }\n    return \\@combinations;\n}",
    "    my @combinations = ();\n    my @stack = ();\n    my $i = 0;\n    while(1) {\n        if($i < $n) {\n            push @stack, $l->[$i];\n            $i++;\n        } else {\n            push @combinations, [@stack];\n            $i = pop @stack;\n            $i++;\n        }\n        last if $i >= @$l;\n    }\n    return \\@combinations;\n}",
    "    return if $n < 1;\n    return map [$_], @$l if $n == 1;\n    my @comb;\n    for my $i ( 0 .. $#$l ) {\n        push @comb, map [ $_, @$_ ], @{ combinations_colors( [ @$l[ $i .. $#$l ] ], $n - 1 ) };\n    }\n    return \\@comb;\n}",
    "    return [] if $n < 1;\n    return map [$_], @$l if $n == 1;\n    my @comb;\n    for my $i (0 .. $#$l) {\n        push @comb, [$l->[$i], @$_] for @{ combinations_colors([@$l[$i .. $#$l]], $n - 1) };\n    }\n    return \\@comb;\n}",
    "    my @combinations;\n    for my $i (0 .. $n) {\n        my @comb = combinations($i, @$l);\n        push @combinations, @comb;\n    }\n    return @combinations;\n}",
    "    my @combinations;\n    my @combination;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $m = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $aa = 0;\n    my $bb = 0;\n    my $cc = 0;\n    my $dd = 0;\n    my $ee = 0;\n    my $ff = 0;\n    my $gg = 0;\n    my $hh = 0;\n    my $ii = 0;\n    my $jj = 0;\n    my $kk = 0;\n    my $ll = 0;\n    my $mm = 0;\n    my $nn = 0;\n    my $oo = 0;\n    my $pp = 0;\n    my $qq = 0;\n    my $rr = 0;\n    my $ss = 0;\n    my $tt = 0;\n    my $uu = 0;\n    my $vv = 0;\n    my $ww = 0;\n    my $xx = 0;\n    my $yy = 0;\n    my $zz = 0;\n    my $aaa = 0;\n    my $bbb = 0;\n    my $ccc = 0;\n    my $ddd = 0;\n    my $eee = 0;\n    my $fff = 0;\n    my $ggg = 0;\n    my $hhh = 0;\n    my $iii = 0;\n    my $jjj = 0;\n    my $kkk = 0;\n    my $lll = 0;\n    my $mmm = 0;\n    my $nnn = 0;\n    my $ooo = 0;\n    my $ppp = 0;\n    my $qqq = 0;\n    my $rrr = 0;\n    my $sss = 0;\n    my $tt",
    "    return unless $n;\n    return map [$_], @$l if $n == 1;\n    my @comb;\n    for my $i (0 .. $#$l) {\n        push @comb, [$l->[$i], @$_] for combinations_colors([@$l[$i .. $#$l]], $n - 1);\n    }\n    @comb;\n}",
    "    return map { [@$l[@$_]] } combinations([0..$#$l], $n);\n}",
    "    my @combinations;\n    my @combination;\n    my $i;\n    my $j;\n    for ($i = 0; $i < $n; $i++) {\n        $combination[$i] = 0;\n    }\n    while (1) {\n        push @combinations, [@combination];\n        $i = $n - 1;\n        while ($i >= 0 && $combination[$i] == $l - 1) {\n            $i--;\n        }\n        if ($i < 0) {\n            last;\n        }\n        $combination[$i]++;\n        for ($j = $i + 1; $j < $n; $j++) {\n            $combination[$j] = 0;\n        }\n    }\n    return @combinations;\n}",
    "    my @result;\n    my @stack;\n    my $i = 0;\n    while (1) {\n        if ($i < $n) {\n            push @stack, $i;\n            $i = 0;\n        } else {\n            pop @stack;\n            last unless @stack;\n            $i = $stack[-1] + 1;\n            pop @stack;\n        }\n        push @result, [@$l[@stack]] if @stack == $n;\n    }\n    return @result;\n}",
    "    return if $n < 1;\n    return map [$_], @$l if $n == 1;\n    my @comb;\n    for my $i ( 0 .. $#$l ) {\n        push @comb, [ $l->[$i], @$_ ] for combinations_colors( [ @$l[ $i .. $#$l ] ], $n - 1 );\n    }\n    return @comb;\n}",
    "    my @result;\n    my @stack;\n    my $i = 0;\n    while (1) {\n        if ($i < $n) {\n            push @stack, $i;\n            $i = 0;\n        } else {\n            pop @stack;\n            last unless @stack;\n            $i = $stack[-1] + 1;\n            pop @stack;\n        }\n        push @result, [@$l[@stack]] if @stack == $n;\n    }\n    return @result;\n}",
    "    my @result;\n    if ($n == 0) {\n        push @result, [];\n    } else {\n        for my $i (0 .. $#$l) {\n            for my $c (combinations_colors([@$l[$i..$#$l]], $n-1)) {\n                push @result, [$l->[$i], @$c];\n            }\n        }\n    }\n    return @result;\n}",
    "    my @result;\n    if ($n == 1) {\n        @result = map [$_], @$l;\n    } else {\n        @result = map [$_, @$_], combinations_colors([@$l[1..$#$l]], $n-1);\n        push @result, combinations_colors([@$l[1..$#$l]], $n);\n    }\n    return @result;\n}",
    "    return map { [@$l[@$_]] } combinations([0..$#$l], $n);\n}",
    "    my @combinations;\n    for my $i (0..$n) {\n        push @combinations, [@$l[0..$i]];\n    }\n    return @combinations;\n}",
    "    return if $n < 1;\n    return map [$_], @$l if $n == 1;\n    my @comb;\n    for my $i (0 .. $#$l) {\n        push @comb, [$l->[$i], @$_] for combinations_colors([@$l[$i .. $#$l]], $n - 1);\n    }\n    return @comb;\n}",
    "    my @result;\n    my @comb;\n    my $i;\n    my $j;\n    my $k;\n    my $len = scalar @$l;\n    for ($i = 0; $i < $len; $i++) {\n        $comb[0] = $l->[$i];\n        for ($j = 1; $j < $n; $j++) {\n            $comb[$j] = $l->[0];\n        }\n        push @result, [@comb];\n        for ($k = 1; $k < $len ** $n; $k++) {\n            for ($j = $n - 1; $j >= 0; $j--) {\n                if ($comb[$j] ne $l->[$len - 1]) {\n                    $comb[$j] = $l->[$comb[$j] + 1];\n                    last;\n                } else {\n                    $comb[$j] = $l->[0];\n                }\n            }\n            push @result, [@comb];\n        }\n    }\n    return @result;\n}",
    "    my @combinations;\n    my @combination;\n    my $i;\n    my $j;\n    my $k;\n    my $m;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $aa;\n    my $ab;\n    my $ac;\n    my $ad;\n    my $ae;\n    my $af;\n    my $ag;\n    my $ah;\n    my $ai;\n    my $aj;\n    my $ak;\n    my $al;\n    my $am;\n    my $an;\n    my $ao;\n    my $ap;\n    my $aq;\n    my $ar;\n    my $as;\n    my $at;\n    my $au;\n    my $av;\n    my $aw;\n    my $ax;\n    my $ay;\n    my $az;\n    my $ba;\n    my $bb;\n    my $bc;\n    my $bd;\n    my $be;\n    my $bf;\n    my $bg;\n    my $bh;\n    my $bi;\n    my $bj;\n    my $bk;\n    my $bl;\n    my $bm;\n    my $bn;\n    my $bo;\n    my $bp;\n    my $bq;\n    my $br;\n    my $bs;\n    my $bt;\n    my $bu;\n    my $bv;\n    my $bw;\n    my $bx;\n    my $by;\n    my $bz;\n    my $ca;\n    my $cb;\n    my $cc;\n    my $cd;\n    my $ce;\n    my $cf;\n    my $cg;\n    my $ch;\n    my $ci;\n    my $cj;\n    my $ck;\n    my $cl;\n    my $cm;\n    my $cn;\n    my $",
    "    return map [@$l[@_]], grep { !($_ % ($n+1)) } 0..$#{$l}**$n-1;\n}",
    "    return if $n < 1;\n    return map [$_], @$l if $n == 1;\n    my @comb;\n    for my $i (0 .. $#$l) {\n        push @comb, [$l->[$i], @$_] for combinations_colors([@$l[$i .. $#$l]], $n - 1);\n    }\n    return @comb;\n}",
    "    return if $n < 1;\n    return map [$_], @$l if $n == 1;\n    my @comb;\n    for my $i ( 0 .. $#$l ) {\n        push @comb, [ $l->[$i], @$_ ] for combinations_colors( [ @$l[ $i .. $#$l ] ], $n - 1 );\n    }\n    return @comb;\n}",
    "    my @result;\n    for my $i (0..$n-1) {\n        my @new_result;\n        for my $j (0..$#{$l}) {\n            if ($i == 0) {\n                push @new_result, [$l->[$j]];\n            } else {\n                for my $k (0..$#result) {\n                    push @new_result, [@{$result[$k]}, $l->[$j]];\n                }\n            }\n        }\n        @result = @new_result;\n    }\n    return @result;\n}",
    "    my @result;\n    my @stack;\n    my $i = 0;\n    while ($i >= 0) {\n        if ($i < $n) {\n            if ($stack[$i] < @$l) {\n                $stack[$i]++;\n                $i++;\n            } else {\n                $i--;\n            }\n        } else {\n            push @result, [@stack];\n            $i--;\n        }\n    }\n    return @result;\n}",
    "    return [] if $n == 0;\n    return map [$_], @$l if $n == 1;\n    my @comb;\n    for my $i (0 .. $#$l) {\n        push @comb, [$l->[$i], @$_] for @{ combinations_colors([@$l[$i .. $#$l]], $n - 1) };\n    }\n    return \\@comb;\n}",
    "    my @combinations = ();\n    my @combination = ();\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $m = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $aa = 0;\n    my $ab = 0;\n    my $ac = 0;\n    my $ad = 0;\n    my $ae = 0;\n    my $af = 0;\n    my $ag = 0;\n    my $ah = 0;\n    my $ai = 0;\n    my $aj = 0;\n    my $ak = 0;\n    my $al = 0;\n    my $am = 0;\n    my $an = 0;\n    my $ao = 0;\n    my $ap = 0;\n    my $aq = 0;\n    my $ar = 0;\n    my $as = 0;\n    my $at = 0;\n    my $au = 0;\n    my $av = 0;\n    my $aw = 0;\n    my $ax = 0;\n    my $ay = 0;\n    my $az = 0;\n    my $ba = 0;\n    my $bb = 0;\n    my $bc = 0;\n    my $bd = 0;\n    my $be = 0;\n    my $bf = 0;\n    my $bg = 0;\n    my $bh = 0;\n    my $bi = 0;\n    my $bj = 0;\n    my $bk = 0;\n    my $bl = 0;\n    my $bm = 0;\n    my $bn = 0;\n    my $bo = 0;\n    my $bp = 0;\n    my $bq = 0;\n    my $br = 0;\n    my $bs = 0;\n    my $bt = 0;\n    my $bu =",
    "    my @combinations;\n    for my $i (0 .. $n) {\n        my @combination = @$l[0 .. $i];\n        push @combinations, \\@combination;\n    }\n    return @combinations;\n}",
    "    my @combinations;\n    my @combination;\n    my $i;\n    my $j;\n    my $k;\n    my $m;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $aa;\n    my $ab;\n    my $ac;\n    my $ad;\n    my $ae;\n    my $af;\n    my $ag;\n    my $ah;\n    my $ai;\n    my $aj;\n    my $ak;\n    my $al;\n    my $am;\n    my $an;\n    my $ao;\n    my $ap;\n    my $aq;\n    my $ar;\n    my $as;\n    my $at;\n    my $au;\n    my $av;\n    my $aw;\n    my $ax;\n    my $ay;\n    my $az;\n    my $ba;\n    my $bb;\n    my $bc;\n    my $bd;\n    my $be;\n    my $bf;\n    my $bg;\n    my $bh;\n    my $bi;\n    my $bj;\n    my $bk;\n    my $bl;\n    my $bm;\n    my $bn;\n    my $bo;\n    my $bp;\n    my $bq;\n    my $br;\n    my $bs;\n    my $bt;\n    my $bu;\n    my $bv;\n    my $bw;\n    my $bx;\n    my $by;\n    my $bz;\n    my $ca;\n    my $cb;\n    my $cc;\n    my $cd;\n    my $ce;\n    my $cf;\n    my $cg;\n    my $ch;\n    my $ci;\n    my $cj;\n    my $ck;\n    my $cl;\n    my $cm;\n    my $cn;\n    my $",
    "    my @combinations;\n    my @combination;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $m = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n    my $i1 = 0;\n    my $j1 = 0;\n    my $k1 = 0;\n    my $m1 = 0;\n    my $p1 = 0;\n    my $q1 = 0;\n    my $r1 = 0;\n    my $s1 = 0;\n    my $t1 = 0;\n    my $u1 = 0;\n    my $v1 = 0;\n    my $w1 = 0;\n    my $x1 = 0;\n    my $y1 = 0;\n    my $z1 = 0;\n    my $a1 = 0;\n    my $b1 = 0;\n    my $c1 = 0;\n    my $d1 = 0;\n    my $e1 = 0;\n    my $f1 = 0;\n    my $g1 = 0;\n    my $h1 = 0;\n    my $i2 = 0;\n    my $j2 = 0;\n    my $k2 = 0;\n    my $m2 = 0;\n    my $p2 = 0;\n    my $q2 = 0;\n    my $r2 = 0;\n    my $s2 = 0;\n    my $t2 = 0;\n    my $u2 = 0;\n    my $v2 = 0;\n    my $w2 = 0",
    "    my @result;\n    for my $i (0 .. $n - 1) {\n        my @sub_result = @{$result[$i - 1]} if $i > 0;\n        for my $j (0 .. @$l - 1) {\n            push @sub_result, $l->[$j];\n            push @result, [@sub_result];\n        }\n    }\n    return @result;\n}",
    "    my @combos = ();\n    my @combo = ();\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $m = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $aa = 0;\n    my $bb = 0;\n    my $cc = 0;\n    my $dd = 0;\n    my $ee = 0;\n    my $ff = 0;\n    my $gg = 0;\n    my $hh = 0;\n    my $ii = 0;\n    my $jj = 0;\n    my $kk = 0;\n    my $ll = 0;\n    my $mm = 0;\n    my $nn = 0;\n    my $oo = 0;\n    my $pp = 0;\n    my $qq = 0;\n    my $rr = 0;\n    my $ss = 0;\n    my $tt = 0;\n    my $uu = 0;\n    my $vv = 0;\n    my $ww = 0;\n    my $xx = 0;\n    my $yy = 0;\n    my $zz = 0;\n    my $aaa = 0;\n    my $bbb = 0;\n    my $ccc = 0;\n    my $ddd = 0;\n    my $eee = 0;\n    my $fff = 0;\n    my $ggg = 0;\n    my $hhh = 0;\n    my $iii = 0;\n    my $jjj = 0;\n    my $kkk = 0;\n    my $lll = 0;\n    my $mmm = 0;\n    my $nnn = 0;\n    my $ooo = 0;\n    my $ppp = 0;\n    my $qqq = 0;\n    my $rrr = 0;\n    my $sss = 0;\n    my",
    "    return if $n < 1;\n    return map [$_], @$l if $n == 1;\n    my @comb;\n    for my $i (0 .. $#$l) {\n        push @comb, [$l->[$i], @$_] for combinations_colors([@$l[$i .. $#$l]], $n - 1);\n    }\n    return @comb;\n}",
    "    my @combinations = ();\n    my @combination = ();\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $m = 0;\n    my $n_factorial = factorial($n);\n    my $l_factorial = factorial($l);\n    my $n_minus_l_factorial = factorial($n - $l);\n    my $combinations_count = $n_factorial / ($l_factorial * $n_minus_l_factorial);\n    for ($i = 0; $i < $combinations_count; $i++) {\n        for ($j = 0; $j < $l; $j++) {\n            $combination[$j] = $l[$j];\n        }\n        push(@combinations, [@combination]);\n    }\n    return @combinations;\n}",
    "    return map [@$l[@_]], grep {$_[$_] < @$l} map {$_ = 0} 1..$n;\n}",
    "    return [] if $n == 0;\n    return map [$_], @$l if $n == 1;\n    my @comb;\n    for my $i (0 .. $#$l) {\n        push @comb, [$l->[$i], @$_] for @{ combinations_colors([@$l[$i..$#$l]], $n - 1) };\n    }\n    return \\@comb;\n}",
    "    my @result;\n    if ($n == 0) {\n        push @result, [];\n    } else {\n        for my $i (0 .. $#$l) {\n            for my $c (combinations_colors([@$l[$i..$#$l]], $n - 1)) {\n                push @result, [$l->[$i], @$c];\n            }\n        }\n    }\n    return @result;\n}",
    "    my @combinations;\n    my @combination;\n    my @indices;\n    my $i;\n    my $j;\n    my $k;\n    my $m;\n    my $n_factorial;\n    my $n_choose_k;\n    my $n_choose_k_factorial;\n    my $n_choose_k_minus_1_factorial;\n    my $n_choose_k_minus_1;\n    my $n_choose_k_minus_2;\n    my $n_choose_k_minus_2_factorial;\n    my $n_choose_k_minus_2_minus_1_factorial;\n    my $n_choose_k_minus_2_minus_1;\n    my $n_choose_k_minus_2_minus_1_minus_1;\n    my $n_choose_k_minus_2_minus_1_minus_1_factorial;\n    my $n_choose_k_minus_2_minus_1_minus_1_minus_1_factorial;\n    my $n_choose_k_minus_2_minus_1_minus_1_minus_1;\n    my $n_choose_k_minus_2_minus_1_minus_1_minus_1_minus_1;\n    my $n_choose_k_minus_2_minus_1_minus_1_minus_1_minus_1_factorial;\n    my $n_choose_k_minus_2_minus_1_minus_1_minus_1_minus_1_minus_1_factorial;\n    my $n_choose_k_minus_2_minus_1_minus_1_minus_1_minus_1_minus_1;\n    my $n_choose_k_minus_2_minus_1_minus_1_minus_1_minus_1_minus_1_minus_1;\n    my $n_choose_k_minus_2_minus_1_minus_1_minus_1_minus_1_minus_1_minus_1_factorial;\n",
    "    my @combinations;\n    my @combination;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l_size = scalar @$l;\n    my $combinations_size = $l_size ** $n;\n    for ($i = 0; $i < $combinations_size; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n            $combination[$j] = $l->[($i / ($l_size ** $j)) % $l_size];\n        }\n        $combinations[$k] = [@combination];\n        $k++;\n    }\n    return @combinations;\n}",
    "    my @combinations;\n    my @combination;\n    my $i;\n    my $j;\n    my $k;\n    my $m;\n    my $n_factorial = factorial($n);\n    my $l_factorial = factorial($l);\n    my $l_minus_n_factorial = factorial($l - $n);\n    my $combinations_count = $n_factorial * $l_factorial / $l_minus_n_factorial;\n    for ($i = 0; $i < $combinations_count; $i++) {\n        $k = $i;\n        for ($j = 0; $j < $n; $j++) {\n            $m = $k % $l;\n            $k = int($k / $l);\n            $combination[$j] = $l[$m];\n        }\n        push @combinations, [@combination];\n    }\n    return @combinations;\n}",
    "    my @result;\n    my @combination;\n    my @stack;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $top = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $aa = 0;\n    my $bb = 0;\n    my $cc = 0;\n    my $dd = 0;\n    my $ee = 0;\n    my $ff = 0;\n    my $gg = 0;\n    my $hh = 0;\n    my $ii = 0;\n    my $jj = 0;\n    my $kk = 0;\n    my $ll = 0;\n    my $mm = 0;\n    my $nn = 0;\n    my $oo = 0;\n    my $pp = 0;\n    my $qq = 0;\n    my $rr = 0;\n    my $ss = 0;\n    my $tt = 0;\n    my $uu = 0;\n    my $vv = 0;\n    my $ww = 0;\n    my $xx = 0;\n    my $yy = 0;\n    my $zz = 0;\n    my $aaa = 0;\n    my $bbb = 0;\n    my $ccc = 0;\n    my $ddd = 0;\n    my $eee = 0;\n    my $fff = 0;\n    my $ggg = 0;\n    my $hhh = 0;\n    my $iii = 0;\n    my $jjj = 0;\n    my $kkk = 0;\n    my $lll = 0;\n    my $mmm = 0;\n    my $nnn = 0;\n    my $ooo = 0;\n    my $ppp = 0;\n    my $qqq = 0;\n    my $rrr = 0;\n    my $sss = 0;",
    "    my @combinations;\n    my @combination;\n    my @stack;\n    my $i;\n    my $j;",
    "    my @result;",
    "    my @combinations = ();\n    my @combination = ();\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $m = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $aa = 0;\n    my $bb = 0;\n    my $cc = 0;\n    my $dd = 0;\n    my $ee = 0;\n    my $ff = 0;\n    my $gg = 0;\n    my $hh = 0;\n    my $ii = 0;\n    my $jj = 0;\n    my $kk = 0;\n    my $ll = 0;\n    my $mm = 0;\n    my $nn = 0;\n    my $oo = 0;\n    my $pp = 0;\n    my $qq = 0;\n    my $rr = 0;\n    my $ss = 0;\n    my $tt = 0;\n    my $uu = 0;\n    my $vv = 0;\n    my $ww = 0;\n    my $xx = 0;\n    my $yy = 0;\n    my $zz = 0;\n    my $aaa = 0;\n    my $bbb = 0;\n    my $ccc = 0;\n    my $ddd = 0;\n    my $eee = 0;\n    my $fff = 0;\n    my $ggg = 0;\n    my $hhh = 0;\n    my $iii = 0;\n    my $jjj = 0;\n    my $kkk = 0;\n    my $lll = 0;\n    my $mmm = 0;\n    my $nnn = 0;\n    my $ooo = 0;\n    my $ppp = 0;\n    my $qqq = 0;\n    my $rrr = 0;\n    my $sss = 0;\n    my",
    "    my @combinations;\n    my @combination;\n    my $i;\n    my $j;\n    my $k;",
    "    return map { [@$l[@$_]] } combinations([0..$#$l], $n);\n}",
    "    return if $n < 1;\n    return map [$_], @$l if $n == 1;\n    my @comb;\n    for my $i (0 .. $#$l) {\n        push @comb, [$l->[$i], @$_] for combinations_colors([@$l[$i .. $#$l]], $n - 1);\n    }\n    @comb;\n}",
    "    return [] if $n == 0;\n    return map [$_], @$l if $n == 1;\n    my @comb;\n    for my $i (0 .. $#$l) {\n        push @comb, [$l->[$i], @$_] for @{ combinations_colors([@$l[$i .. $#$l]], $n - 1) };\n    }\n    return \\@comb;\n}",
    "    my @combinations = ();\n    my @combination = ();\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $m = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $m = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $m = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;"
  ]
}
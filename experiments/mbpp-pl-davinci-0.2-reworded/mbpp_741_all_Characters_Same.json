{
  "name": "mbpp_741_all_Characters_Same",
  "language": "pl",
  "prompt": "# Write a plthon function to check whether all the characters are same or not.\nsub all_Characters_Same {\n    my($s) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_741_all_Characters_Same.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&all_Characters_Same;\n        if(eq_deeply($candidate->(\"python\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"aaa\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"data\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my $len = length($s);\n    my $i = 0;\n    my $j = $len - 1;\n    while($i < $j) {\n        if(substr($s, $i, 1) ne substr($s, $j, 1)) {\n            return 0;\n        }\n        $i++;\n        $j--;\n    }\n    return 1;\n}",
    "    my $first = substr($s, 0, 1);\n    my $len = length($s);\n    for(my $i = 1; $i < $len; $i++) {\n        if(substr($s, $i, 1) ne $first) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i;\n    for($i=1;$i<length($s);$i++) {\n        if(substr($s,$i,1) ne substr($s,0,1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i;\n    my $j;\n    my $flag = 0;\n    for($i = 0; $i < length($s); $i++) {\n        for($j = $i + 1; $j < length($s); $j++) {\n            if(substr($s, $i, 1) ne substr($s, $j, 1)) {\n                $flag = 1;\n                last;\n            }\n        }\n    }\n    if($flag == 1) {\n        return 0;\n    }\n    else {\n        return 1;\n    }\n}",
    "    my $i;\n    for($i=0;$i<length($s)-1;$i++) {\n        if(substr($s,$i,1) ne substr($s,$i+1,1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i;\n    my $j;\n    my $flag = 1;\n    for($i = 0; $i < length($s); $i++) {\n        for($j = $i + 1; $j < length($s); $j++) {\n            if(substr($s, $i, 1) ne substr($s, $j, 1)) {\n                $flag = 0;\n                last;\n            }\n        }\n    }\n    return $flag;\n}",
    "    my $len = length($s);\n    my $i;\n    for($i=0;$i<$len;$i++) {\n        if(substr($s,$i,1) ne substr($s,0,1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i;\n    my $j;\n    my $flag = 0;\n    for($i = 0; $i < length($s); $i++) {\n        for($j = $i + 1; $j < length($s); $j++) {\n            if(substr($s, $i, 1) ne substr($s, $j, 1)) {\n                $flag = 1;\n                last;\n            }\n        }\n    }\n    if($flag == 0) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $first = substr($s, 0, 1);\n    for (my $i = 1; $i < length($s); $i++) {\n        if (substr($s, $i, 1) ne $first) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $first = substr($s, 0, 1);\n    my $i;\n    for ($i = 1; $i < length($s); $i++) {\n        if (substr($s, $i, 1) ne $first) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $len = length($s);\n    my $first = substr($s, 0, 1);\n    for(my $i = 1; $i < $len; $i++) {\n        if(substr($s, $i, 1) ne $first) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i;\n    my $j;\n    my $count = 0;\n    for($i = 0; $i < length($s); $i++) {\n        for($j = 0; $j < length($s); $j++) {\n            if(substr($s, $i, 1) eq substr($s, $j, 1)) {\n                $count++;\n            }\n        }\n    }\n    if($count == length($s)) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $i;\n    for ($i = 1; $i < length($s); $i++) {\n        if (substr($s, $i, 1) ne substr($s, $i - 1, 1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i = 0;\n    my $j = length($s) - 1;\n    while ($i < $j) {\n        if (substr($s, $i, 1) ne substr($s, $j, 1)) {\n            return 0;\n        }\n        $i++;\n        $j--;\n    }\n    return 1;\n}",
    "    my $first = substr($s, 0, 1);\n    for (my $i = 1; $i < length($s); $i++) {\n        if (substr($s, $i, 1) ne $first) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $n = length($s);\n    for(my $i = 0; $i < $n; $i++) {\n        if(substr($s, $i, 1) ne substr($s, 0, 1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $n = length($s);\n    for(my $i=0; $i<$n; $i++) {\n        if(substr($s, $i, 1) ne substr($s, 0, 1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i = 0;\n    my $j = length($s)-1;\n    while($i < $j){\n        if(substr($s,$i,1) ne substr($s,$j,1)){\n            return 0;\n        }\n        $i++;\n        $j--;\n    }\n    return 1;\n}",
    "    my $flag = 1;\n    for (my $i = 0; $i < length($s); $i++) {\n        if (substr($s, $i, 1) ne substr($s, 0, 1)) {\n            $flag = 0;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my $first = substr($s, 0, 1);\n    for (my $i = 1; $i < length($s); $i++) {\n        if (substr($s, $i, 1) ne $first) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i;\n    for($i = 0; $i < length($s) - 1; $i++) {\n        if(substr($s, $i, 1) ne substr($s, $i + 1, 1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i;\n    for($i=0;$i<length($s)-1;$i++) {\n        if(substr($s,$i,1) ne substr($s,$i+1,1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i;\n    for($i=0;$i<length($s)-1;$i++) {\n        if(substr($s,$i,1) ne substr($s,$i+1,1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $first = substr($s, 0, 1);\n    my $len = length($s);\n    for (my $i = 1; $i < $len; $i++) {\n        if (substr($s, $i, 1) ne $first) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i = 0;\n    my $j = length($s) - 1;\n    while ($i < $j) {\n        if (substr($s, $i, 1) ne substr($s, $j, 1)) {\n            return 0;\n        }\n        $i++;\n        $j--;\n    }\n    return 1;\n}",
    "    my $c = substr($s, 0, 1);\n    for (my $i = 1; $i < length($s); $i++) {\n        if (substr($s, $i, 1) ne $c) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i;\n    for($i=0;$i<length($s);$i++) {\n        if(substr($s,$i,1) ne substr($s,0,1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i;\n    my $len = length($s);\n    for($i=0;$i<$len;$i++) {\n        if(substr($s,$i,1) ne substr($s,0,1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $first = substr($s, 0, 1);\n    for (my $i = 1; $i < length($s); $i++) {\n        if (substr($s, $i, 1) ne $first) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i;\n    for($i = 0; $i < length($s) - 1; $i++) {\n        if(substr($s, $i, 1) ne substr($s, $i + 1, 1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i = 0;\n    my $j = length($s) - 1;\n    while($i < $j) {\n        if(substr($s, $i, 1) ne substr($s, $j, 1)) {\n            return 0;\n        }\n        $i++;\n        $j--;\n    }\n    return 1;\n}",
    "    my $len = length($s);\n    my $count = 0;\n    for(my $i = 0; $i < $len; $i++) {\n        if(substr($s, $i, 1) eq substr($s, $i + 1, 1)) {\n            $count++;\n        }\n    }\n    if($count == $len - 1) {\n        print \"All characters are same\\n\";\n    }\n    else {\n        print \"All characters are not same\\n\";\n    }\n}",
    "    my $n = length($s);\n    for(my $i=1; $i<$n; $i++) {\n        if(substr($s, $i, 1) ne substr($s, $i-1, 1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i;\n    for($i=0;$i<length($s)-1;$i++) {\n        if(substr($s,$i,1) ne substr($s,$i+1,1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $len = length($s);\n    for(my $i = 1; $i < $len; $i++) {\n        if(substr($s, $i, 1) ne substr($s, $i-1, 1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i;\n    for($i = 0; $i < length($s) - 1; $i++) {\n        if(substr($s, $i, 1) ne substr($s, $i + 1, 1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i;\n    for($i=0;$i<length($s)-1;$i++) {\n        if(substr($s,$i,1) ne substr($s,$i+1,1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $len = length($s);\n    my $first = substr($s, 0, 1);\n    for (my $i = 1; $i < $len; $i++) {\n        if (substr($s, $i, 1) ne $first) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $first = substr($s, 0, 1);\n    my $i;\n    for ($i = 1; $i < length($s); $i++) {\n        if (substr($s, $i, 1) ne $first) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i;\n    my $len = length($s);\n    for($i=0;$i<$len;$i++) {\n        if(substr($s,$i,1) ne substr($s,0,1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i;\n    for($i = 0; $i < length($s) - 1; $i++) {\n        if(substr($s, $i, 1) ne substr($s, $i + 1, 1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i;\n    for($i=1;$i<length($s);$i++) {\n        if(substr($s,$i,1) ne substr($s,$i-1,1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i;\n    for($i=1;$i<length($s);$i++) {\n        if(substr($s,$i,1) ne substr($s,$i-1,1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i;\n    for($i=0;$i<length($s)-1;$i++) {\n        if(substr($s,$i,1) ne substr($s,$i+1,1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i;\n    my $j;\n    my $flag = 1;\n    for($i = 0; $i < length($s); $i++) {\n        for($j = $i + 1; $j < length($s); $j++) {\n            if(substr($s, $i, 1) ne substr($s, $j, 1)) {\n                $flag = 0;\n                last;\n            }\n        }\n    }\n    return $flag;\n}",
    "    my $i;\n    for($i=0;$i<length($s)-1;$i++) {\n        if(substr($s,$i,1) ne substr($s,$i+1,1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i = 0;\n    my $j = length($s) - 1;\n    while($i < $j) {\n        if(substr($s, $i, 1) ne substr($s, $j, 1)) {\n            return 0;\n        }\n        $i++;\n        $j--;\n    }\n    return 1;\n}",
    "    my $first = substr($s, 0, 1);\n    for (my $i = 1; $i < length($s); $i++) {\n        if (substr($s, $i, 1) ne $first) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i;\n    for($i=0;$i<length($s)-1;$i++) {\n        if(substr($s,$i,1) ne substr($s,$i+1,1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i;\n    my $j;\n    my $count = 0;\n    for($i = 0; $i < length($s); $i++){\n        for($j = 0; $j < length($s); $j++){\n            if(substr($s, $i, 1) eq substr($s, $j, 1)){\n                $count++;\n            }\n        }\n    }\n    if($count == length($s)){\n        return \"True\";\n    }\n    else{\n        return \"False\";\n    }\n}",
    "    my $len = length($s);\n    my $i = 0;\n    my $flag = 0;\n    while($i < $len) {\n        if(substr($s, $i, 1) ne substr($s, 0, 1)) {\n            $flag = 1;\n            last;\n        }\n        $i++;\n    }\n    if($flag == 1) {\n        return 0;\n    }\n    else {\n        return 1;\n    }\n}",
    "    my $first = substr($s, 0, 1);\n    for (my $i = 1; $i < length($s); $i++) {\n        if (substr($s, $i, 1) ne $first) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $flag = 1;\n    for(my $i = 0; $i < length($s); $i++) {\n        if(substr($s, $i, 1) ne substr($s, 0, 1)) {\n            $flag = 0;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my $i;\n    for($i=1; $i<length($s); $i++) {\n        if(substr($s, $i, 1) ne substr($s, $i-1, 1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i;\n    for($i=1;$i<length($s);$i++) {\n        if(substr($s,$i,1) ne substr($s,0,1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $len = length($s);\n    for(my $i=0; $i<$len; $i++) {\n        if(substr($s, $i, 1) ne substr($s, 0, 1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i;\n    for($i=0;$i<length($s)-1;$i++) {\n        if(substr($s,$i,1) ne substr($s,$i+1,1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i;\n    for($i=0;$i<length($s)-1;$i++) {\n        if(substr($s,$i,1) ne substr($s,$i+1,1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i;\n    my $j;\n    my $flag = 0;\n    my $len = length($s);\n    for($i = 0; $i < $len; $i++) {\n        for($j = $i + 1; $j < $len; $j++) {\n            if(substr($s, $i, 1) ne substr($s, $j, 1)) {\n                $flag = 1;\n                last;\n            }\n        }\n    }\n    if($flag == 1) {\n        return 0;\n    }\n    else {\n        return 1;\n    }\n}",
    "    my $len = length($s);\n    for(my $i=0; $i<$len; $i++) {\n        if(substr($s, $i, 1) ne substr($s, 0, 1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i;\n    for($i=0;$i<length($s)-1;$i++) {\n        if(substr($s,$i,1) ne substr($s,$i+1,1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $len = length($s);\n    my $i = 0;\n    my $j = $len - 1;\n    while($i < $j) {\n        if(substr($s, $i, 1) ne substr($s, $j, 1)) {\n            return 0;\n        }\n        $i++;\n        $j--;\n    }\n    return 1;\n}",
    "    my $i;\n    for($i=0;$i<length($s)-1;$i++) {\n        if(substr($s,$i,1) ne substr($s,$i+1,1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $first = substr($s, 0, 1);\n    for(my $i = 1; $i < length($s); $i++) {\n        if(substr($s, $i, 1) ne $first) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $first = substr($s, 0, 1);\n    for (my $i = 1; $i < length($s); $i++) {\n        if (substr($s, $i, 1) ne $first) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $len = length($s);\n    for(my $i = 0; $i < $len; $i++) {\n        if(substr($s, $i, 1) ne substr($s, 0, 1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $first = substr($s, 0, 1);\n    return $s !~ /[^$first]/;\n}",
    "    my $n = length($s);\n    my $i;\n    for($i=0;$i<$n;$i++) {\n        if(substr($s,$i,1) ne substr($s,0,1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $len = length($s);\n    my $i;\n    for($i=0; $i<$len; $i++) {\n        if(substr($s, $i, 1) ne substr($s, 0, 1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $len = length($s);\n    my $i = 0;\n    my $count = 0;\n    for($i = 0; $i < $len; $i++) {\n        if(substr($s, 0, 1) eq substr($s, $i, 1)) {\n            $count++;\n        }\n    }\n    if($count == $len) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $n = length($s);\n    my $i;\n    for($i = 0; $i < $n; $i++) {\n        if(substr($s, $i, 1) ne substr($s, 0, 1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $len = length($s);\n    my $c = substr($s, 0, 1);\n    for (my $i = 1; $i < $len; $i++) {\n        if (substr($s, $i, 1) ne $c) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $len = length($s);\n    my $i = 0;\n    while($i < $len) {\n        if(substr($s, $i, 1) ne substr($s, 0, 1)) {\n            return 0;\n        }\n        $i++;\n    }\n    return 1;\n}",
    "    my $n = length($s);\n    for(my $i = 1; $i < $n; $i++) {\n        if(substr($s, $i, 1) ne substr($s, $i - 1, 1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i;\n    for($i=0;$i<length($s)-1;$i++) {\n        if(substr($s,$i,1) ne substr($s,$i+1,1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $first = substr($s, 0, 1);\n    my $i;\n    for($i = 1; $i < length($s); $i++) {\n        if(substr($s, $i, 1) ne $first) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i = 0;\n    my $j = length($s) - 1;\n    while ($i < $j) {\n        if (substr($s, $i, 1) ne substr($s, $j, 1)) {\n            return 0;\n        }\n        $i++;\n        $j--;\n    }\n    return 1;\n}",
    "    my $len = length($s);\n    my $i;\n    for($i=0;$i<$len;$i++) {\n        if(substr($s,$i,1) ne substr($s,0,1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i = 0;\n    my $j = length($s) - 1;\n    while ($i < $j) {\n        if (substr($s, $i, 1) ne substr($s, $j, 1)) {\n            return 0;\n        }\n        $i++;\n        $j--;\n    }\n    return 1;\n}",
    "    my $i;\n    for($i=0;$i<length($s)-1;$i++) {\n        if(substr($s,$i,1) ne substr($s,$i+1,1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i;\n    for($i=1;$i<length($s);$i++) {\n        if(substr($s,$i,1) ne substr($s,$i-1,1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $first = substr($s, 0, 1);\n    for (my $i = 1; $i < length($s); $i++) {\n        if (substr($s, $i, 1) ne $first) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $count = 0;\n    my $len = length($s);\n    for(my $i = 0; $i < $len; $i++) {\n        if(substr($s, $i, 1) eq substr($s, 0, 1)) {\n            $count++;\n        }\n    }\n    if($count == $len) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $len = length($s);\n    for(my $i=0; $i<$len; $i++) {\n        my $ch = substr($s, $i, 1);\n        if($ch ne substr($s, 0, 1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $first = substr($s, 0, 1);\n    my $i = 1;\n    while ($i < length($s)) {\n        if (substr($s, $i, 1) ne $first) {\n            return 0;\n        }\n        $i++;\n    }\n    return 1;\n}",
    "    my $len = length($s);\n    my $i = 0;\n    while($i < $len){\n        if(substr($s, $i, 1) ne substr($s, 0, 1)){\n            return 0;\n        }\n        $i++;\n    }\n    return 1;\n}",
    "    my($i, $j);\n    for($i = 0; $i < length($s) - 1; $i++) {\n        for($j = $i + 1; $j < length($s); $j++) {\n            if(substr($s, $i, 1) ne substr($s, $j, 1)) {\n                return 0;\n            }\n        }\n    }\n    return 1;\n}",
    "    my $i = 0;\n    my $j = length($s) - 1;\n    while($i < $j) {\n        if(substr($s, $i, 1) ne substr($s, $j, 1)) {\n            return 0;\n        }\n        $i++;\n        $j--;\n    }\n    return 1;\n}",
    "    my $i;\n    for($i = 0; $i < length($s) - 1; $i++) {\n        if(substr($s, $i, 1) ne substr($s, $i + 1, 1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i;\n    my $j;\n    my $count = 0;\n    for($i = 0; $i < length($s); $i++) {\n        for($j = 0; $j < length($s); $j++) {\n            if(substr($s, $i, 1) eq substr($s, $j, 1)) {\n                $count++;\n            }\n        }\n    }\n    if($count == length($s)) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $i;\n    for($i=0;$i<length($s)-1;$i++) {\n        if(substr($s,$i,1) ne substr($s,$i+1,1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i;\n    for($i=0;$i<length($s)-1;$i++){\n        if(substr($s,$i,1) ne substr($s,$i+1,1)){\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i;\n    for($i = 0; $i < length($s) - 1; $i++) {\n        if(substr($s, $i, 1) ne substr($s, $i + 1, 1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my($i,$j);\n    my($count) = 0;\n    for($i = 0; $i < length($s); $i++) {\n        for($j = $i+1; $j < length($s); $j++) {\n            if(substr($s,$i,1) eq substr($s,$j,1)) {\n                $count++;\n            }\n        }\n    }\n    if($count == length($s)-1) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $n = length($s);\n    for(my $i = 1; $i < $n; $i++) {\n        if(substr($s, $i, 1) ne substr($s, $i-1, 1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i = 0;\n    my $j = length($s) - 1;\n    while ($i < $j) {\n        if (substr($s, $i, 1) ne substr($s, $j, 1)) {\n            return 0;\n        }\n        $i++;\n        $j--;\n    }\n    return 1;\n}",
    "    my $i;\n    for($i=0;$i<length($s)-1;$i++) {\n        if(substr($s,$i,1) ne substr($s,$i+1,1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i;\n    for($i=0;$i<length($s)-1;$i++){\n        if(substr($s,$i,1) ne substr($s,$i+1,1)){\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $len = length($s);\n    my $i = 0;\n    my $flag = 0;\n    while($i < $len) {\n        if(substr($s, $i, 1) ne substr($s, $i+1, 1)) {\n            $flag = 1;\n            last;\n        }\n        $i++;\n    }\n    if($flag == 1) {\n        return 0;\n    }\n    else {\n        return 1;\n    }\n}",
    "    my $i;\n    my $j;\n    my $flag = 0;\n    my $len = length($s);\n    for($i = 0; $i < $len; $i++) {\n        for($j = $i + 1; $j < $len; $j++) {\n            if(substr($s,$i,1) ne substr($s,$j,1)) {\n                $flag = 1;\n                last;\n            }\n        }\n    }\n    if($flag == 0) {\n        print \"All the characters are same.\\n\";\n    }\n    else {\n        print \"All the characters are not same.\\n\";\n    }\n}",
    "    my $i = 0;\n    my $j = length($s) - 1;\n    while($i < $j) {\n        if(substr($s, $i, 1) ne substr($s, $j, 1)) {\n            return 0;\n        }\n        $i++;\n        $j--;\n    }\n    return 1;\n}",
    "    my $n = length($s);\n    for(my $i = 1; $i < $n; $i++) {\n        if(substr($s, $i, 1) ne substr($s, $i-1, 1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $len = length($s);\n    my $i = 0;\n    while($i < $len) {\n        my $c = substr($s, $i, 1);\n        if($c ne substr($s, 0, 1)) {\n            return 0;\n        }\n        $i++;\n    }\n    return 1;\n}",
    "    my $first = substr($s, 0, 1);\n    my $i;\n    for($i = 1; $i < length($s); $i++) {\n        if(substr($s, $i, 1) ne $first) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $len = length($s);\n    my $count = 0;\n    for(my $i=0; $i<$len; $i++) {\n        if(substr($s, $i, 1) eq substr($s, $i+1, 1)) {\n            $count++;\n        }\n    }\n    if($count == $len-1) {\n        print \"All the characters are same\\n\";\n    }\n    else {\n        print \"All the characters are not same\\n\";\n    }\n}",
    "    my $first = substr($s, 0, 1);\n    for (my $i = 1; $i < length($s); $i++) {\n        if (substr($s, $i, 1) ne $first) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $len = length($s);\n    my $i;\n    for($i=0; $i<$len; $i++) {\n        if(substr($s, $i, 1) ne substr($s, 0, 1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i;\n    for($i = 0; $i < length($s) - 1; $i++) {\n        if(substr($s, $i, 1) ne substr($s, $i + 1, 1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i;\n    for($i=0;$i<length($s)-1;$i++) {\n        if(substr($s,$i,1) ne substr($s,$i+1,1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i = 0;\n    my $j = length($s) - 1;\n    while($i < $j) {\n        if(substr($s, $i, 1) ne substr($s, $j, 1)) {\n            return 0;\n        }\n        $i++;\n        $j--;\n    }\n    return 1;\n}",
    "    my $len = length($s);\n    my $i = 0;\n    my $flag = 0;\n    for($i = 0; $i < $len; $i++) {\n        if(substr($s, $i, 1) ne substr($s, 0, 1)) {\n            $flag = 1;\n            last;\n        }\n    }\n    if($flag == 0) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $first = substr($s, 0, 1);\n    for my $i (1..length($s)-1) {\n        if (substr($s, $i, 1) ne $first) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $len = length($s);\n    for (my $i = 1; $i < $len; $i++) {\n        if (substr($s, $i, 1) ne substr($s, $i - 1, 1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i;\n    for($i=0;$i<length($s)-1;$i++) {\n        if(substr($s,$i,1) ne substr($s,$i+1,1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i = 0;\n    my $j = length($s) - 1;\n    while($i < $j) {\n        if(substr($s, $i, 1) ne substr($s, $j, 1)) {\n            return 0;\n        }\n        $i++;\n        $j--;\n    }\n    return 1;\n}",
    "    my $first = substr($s, 0, 1);\n    for my $i (1..length($s)-1) {\n        if (substr($s, $i, 1) ne $first) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i;\n    for($i=0;$i<length($s)-1;$i++) {\n        if(substr($s,$i,1) ne substr($s,$i+1,1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $first = substr($s, 0, 1);\n    for (my $i = 1; $i < length($s); $i++) {\n        if (substr($s, $i, 1) ne $first) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $first = substr($s, 0, 1);\n    for (my $i = 1; $i < length($s); $i++) {\n        if (substr($s, $i, 1) ne $first) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $len = length($s);\n    for(my $i = 1; $i < $len; $i++) {\n        if(substr($s, $i, 1) ne substr($s, $i-1, 1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i = 0;\n    my $j = length($s) - 1;\n    while ($i < $j) {\n        if (substr($s, $i, 1) ne substr($s, $j, 1)) {\n            return 0;\n        }\n        $i++;\n        $j--;\n    }\n    return 1;\n}",
    "    for (my $i = 1; $i < length($s); $i++) {\n        if (substr($s, $i, 1) ne substr($s, $i - 1, 1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $len = length($s);\n    my $i = 0;\n    my $flag = 0;\n    while($i < $len) {\n        if(substr($s, $i, 1) ne substr($s, $i+1, 1)) {\n            $flag = 1;\n            last;\n        }\n        $i++;\n    }\n    if($flag == 1) {\n        return 0;\n    }\n    else {\n        return 1;\n    }\n}",
    "    for (my $i = 0; $i < length($s) - 1; $i++) {\n        if (substr($s, $i, 1) ne substr($s, $i + 1, 1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i = 0;\n    my $j = length($s)-1;\n    while($i < $j) {\n        if(substr($s,$i,1) ne substr($s,$j,1)) {\n            return 0;\n        }\n        $i++;\n        $j--;\n    }\n    return 1;\n}",
    "    my $i;\n    for($i=0; $i<length($s)-1; $i++) {\n        if(substr($s, $i, 1) ne substr($s, $i+1, 1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i;\n    for($i=0; $i<length($s)-1; $i++) {\n        if(substr($s, $i, 1) ne substr($s, $i+1, 1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i;\n    for($i=0;$i<length($s)-1;$i++) {\n        if(substr($s,$i,1) ne substr($s,$i+1,1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i;\n    for($i=0;$i<length($s)-1;$i++) {\n        if(substr($s,$i,1) ne substr($s,$i+1,1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i;\n    for($i = 0; $i < length($s) - 1; $i++) {\n        if(substr($s, $i, 1) ne substr($s, $i + 1, 1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i = 0;\n    my $j = length($s) - 1;\n    while ($i < $j) {\n        if (substr($s, $i, 1) ne substr($s, $j, 1)) {\n            return 0;\n        }\n        $i++;\n        $j--;\n    }\n    return 1;\n}",
    "    my $first = substr($s, 0, 1);\n    for (my $i = 1; $i < length($s); $i++) {\n        if (substr($s, $i, 1) ne $first) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i = 0;\n    my $j = length($s) - 1;\n    while ($i < $j) {\n        if (substr($s, $i, 1) ne substr($s, $j, 1)) {\n            return 0;\n        }\n        $i++;\n        $j--;\n    }\n    return 1;\n}",
    "    my $i;\n    for($i=0;$i<length($s)-1;$i++) {\n        if(substr($s,$i,1) ne substr($s,$i+1,1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i;\n    for($i=0;$i<length($s)-1;$i++) {\n        if(substr($s,$i,1) ne substr($s,$i+1,1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i;\n    my $len = length($s);\n    for($i=0;$i<$len;$i++) {\n        if(substr($s,$i,1) ne substr($s,0,1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i = 0;\n    my $j = length($s) - 1;\n    while ($i < $j) {\n        if (substr($s, $i, 1) ne substr($s, $j, 1)) {\n            return 0;\n        }\n        $i++;\n        $j--;\n    }\n    return 1;\n}",
    "    my @a = split(\"\",$s);\n    my $i;\n    for($i=1;$i<length($s);$i++) {\n        if($a[$i] ne $a[$i-1]) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i;\n    for($i=0;$i<length($s)-1;$i++) {\n        if(substr($s,$i,1) ne substr($s,$i+1,1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my($i, $j);\n    for($i = 0; $i < length($s); $i++) {\n        for($j = $i + 1; $j < length($s); $j++) {\n            if(substr($s, $i, 1) ne substr($s, $j, 1)) {\n                return 0;\n            }\n        }\n    }\n    return 1;\n}",
    "    my $i = 0;\n    my $len = length($s);\n    my $flag = 0;\n    while($i < $len) {\n        if(substr($s,$i,1) ne substr($s,0,1)) {\n            $flag = 1;\n            last;\n        }\n        $i++;\n    }\n    if($flag == 0) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $i = 0;\n    my $j = length($s) - 1;\n    while($i < $j) {\n        if(substr($s, $i, 1) ne substr($s, $j, 1)) {\n            return 0;\n        }\n        $i++;\n        $j--;\n    }\n    return 1;\n}",
    "    my $first = substr($s, 0, 1);\n    for (my $i = 1; $i < length($s); $i++) {\n        if (substr($s, $i, 1) ne $first) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $len = length($s);\n    my $i;\n    for($i=0;$i<$len;$i++) {\n        if(substr($s,$i,1) ne substr($s,0,1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $len = length($s);\n    my $i = 0;\n    my $flag = 0;\n    for($i = 0; $i < $len; $i++) {\n        if(substr($s, $i, 1) ne substr($s, $i+1, 1)) {\n            $flag = 1;\n            last;\n        }\n    }\n    if($flag == 0) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $i;\n    for($i = 0; $i < length($s) - 1; $i++) {\n        if(substr($s, $i, 1) ne substr($s, $i + 1, 1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i;\n    for($i=0;$i<length($s)-1;$i++) {\n        if(substr($s,$i,1) ne substr($s,$i+1,1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i;\n    for($i=0;$i<length($s)-1;$i++) {\n        if(substr($s,$i,1) ne substr($s,$i+1,1)) {\n            return 0;\n        }\n    }\n    return 1;\n}\nprint \"Enter a string : \";\n$s = <STDIN>;\nchomp($s);\nif(all_Characters_Same($s)) {\n    print \"All characters are same\\n\";\n}\nelse {\n    print \"All characters are not same\\n\";\n}",
    "    my $i = 0;\n    my $j = length($s) - 1;\n    while($i < $j) {\n        if(substr($s, $i, 1) ne substr($s, $j, 1)) {\n            return 0;\n        }\n        $i++;\n        $j--;\n    }\n    return 1;\n}",
    "    my $i;\n    for($i=0;$i<length($s)-1;$i++) {\n        if(substr($s,$i,1) ne substr($s,$i+1,1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i;\n    my $j;\n    my $flag = 1;\n    my $len = length($s);\n    for($i = 0; $i < $len; $i++) {\n        for($j = $i + 1; $j < $len; $j++) {\n            if(substr($s, $i, 1) ne substr($s, $j, 1)) {\n                $flag = 0;\n                last;\n            }\n        }\n    }\n    return $flag;\n}",
    "    my $i = 0;\n    my $j = 1;\n    my $flag = 0;\n    while($j < length($s)) {\n        if(substr($s, $i, 1) ne substr($s, $j, 1)) {\n            $flag = 1;\n            last;\n        }\n        $i++;\n        $j++;\n    }\n    if($flag == 0) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $len = length($s);\n    for(my $i = 0; $i < $len; $i++) {\n        if(substr($s, $i, 1) ne substr($s, 0, 1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $first = substr($s, 0, 1);\n    for (my $i = 1; $i < length($s); $i++) {\n        if (substr($s, $i, 1) ne $first) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $n = length($s);\n    for(my $i = 1; $i < $n; $i++) {\n        if(substr($s, $i, 1) ne substr($s, $i-1, 1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $len = length($s);\n    my $i = 0;\n    my $flag = 1;\n    while($i < $len) {\n        if(substr($s,$i,1) ne substr($s,0,1)) {\n            $flag = 0;\n            last;\n        }\n        $i++;\n    }\n    return $flag;\n}",
    "    my $i;\n    for($i=1; $i<length($s); $i++) {\n        if(substr($s, $i, 1) ne substr($s, $i-1, 1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i;\n    for($i = 0; $i < length($s) - 1; $i++) {\n        if(substr($s, $i, 1) ne substr($s, $i + 1, 1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $first = substr($s, 0, 1);\n    my $len = length($s);\n    for(my $i = 1; $i < $len; $i++) {\n        if(substr($s, $i, 1) ne $first) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i = 0;\n    my $j = length($s) - 1;\n    my $flag = 1;\n    while($i < $j) {\n        if(substr($s, $i, 1) ne substr($s, $j, 1)) {\n            $flag = 0;\n            last;\n        }\n        $i++;\n        $j--;\n    }\n    return $flag;\n}",
    "    my $i = 0;\n    for($i = 0; $i < length($s); $i++) {\n        if(substr($s, $i, 1) ne substr($s, 0, 1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i = 0;\n    my $j = length($s) - 1;\n    while($i < $j) {\n        if(substr($s, $i, 1) ne substr($s, $j, 1)) {\n            return 0;\n        }\n        $i++;\n        $j--;\n    }\n    return 1;\n}",
    "    my $len = length($s);\n    if($len == 1) {\n        return 1;\n    }\n    my $first = substr($s, 0, 1);\n    my $rest = substr($s, 1);\n    if($first ne $rest) {\n        return 0;\n    }\n    return all_Characters_Same($rest);\n}",
    "    my $i;\n    for($i=0;$i<length($s)-1;$i++) {\n        if(substr($s,$i,1) ne substr($s,$i+1,1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i;\n    for($i = 0; $i < length($s) - 1; $i++) {\n        if(substr($s, $i, 1) ne substr($s, $i + 1, 1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $len = length($s);\n    my $i = 0;\n    my $flag = 0;\n    while($i < $len) {\n        if(substr($s, $i, 1) ne substr($s, 0, 1)) {\n            $flag = 1;\n            last;\n        }\n        $i++;\n    }\n    if($flag == 0) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $i = 0;\n    my $j = length($s) - 1;\n    while($i < $j) {\n        if(substr($s, $i, 1) ne substr($s, $j, 1)) {\n            return 0;\n        }\n        $i++;\n        $j--;\n    }\n    return 1;\n}",
    "    my $len = length($s);\n    for(my $i=0;$i<$len;$i++) {\n        for(my $j=$i+1;$j<$len;$j++) {\n            if(substr($s,$i,1) ne substr($s,$j,1)) {\n                return 0;\n            }\n        }\n    }\n    return 1;\n}",
    "    my $i;\n    for($i=0;$i<length($s)-1;$i++) {\n        if(substr($s,$i,1) ne substr($s,$i+1,1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $len = length($s);\n    my $i = 0;\n    while($i < $len) {\n        if(substr($s, $i, 1) ne substr($s, 0, 1)) {\n            return 0;\n        }\n        $i++;\n    }\n    return 1;\n}",
    "    my $i = 0;\n    my $j = length($s) - 1;\n    while ($i < $j) {\n        if (substr($s, $i, 1) ne substr($s, $j, 1)) {\n            return 0;\n        }\n        $i++;\n        $j--;\n    }\n    return 1;\n}",
    "    my $first = substr($s, 0, 1);\n    my $len = length($s);\n    for (my $i = 1; $i < $len; $i++) {\n        if (substr($s, $i, 1) ne $first) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $first = substr($s, 0, 1);\n    for (my $i = 1; $i < length($s); $i++) {\n        if (substr($s, $i, 1) ne $first) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i;\n    my $flag = 0;\n    for($i = 0; $i < length($s); $i++) {\n        if(substr($s, $i, 1) ne substr($s, 0, 1)) {\n            $flag = 1;\n            last;\n        }\n    }\n    if($flag == 1) {\n        return 0;\n    }\n    else {\n        return 1;\n    }\n}",
    "    my $i = 0;\n    my $j = length($s)-1;\n    while($i < $j) {\n        if(substr($s, $i, 1) ne substr($s, $j, 1)) {\n            return 0;\n        }\n        $i++;\n        $j--;\n    }\n    return 1;\n}",
    "    my $len = length($s);\n    for(my $i=0; $i<$len; $i++){\n        if(substr($s, $i, 1) ne substr($s, 0, 1)){\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i = 0;\n    my $j = length($s) - 1;\n    while ($i < $j) {\n        if (substr($s, $i, 1) ne substr($s, $j, 1)) {\n            return 0;\n        }\n        $i++;\n        $j--;\n    }\n    return 1;\n}",
    "    my $i;\n    for($i=0;$i<length($s)-1;$i++) {\n        if(substr($s,$i,1) ne substr($s,$i+1,1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $first = substr($s, 0, 1);\n    my $i;\n    for($i = 1; $i < length($s); $i++) {\n        if(substr($s, $i, 1) ne $first) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i = 0;\n    my $j = length($s) - 1;\n    while($i < $j) {\n        if(substr($s, $i, 1) ne substr($s, $j, 1)) {\n            return 0;\n        }\n        $i++;\n        $j--;\n    }\n    return 1;\n}",
    "    my $first = substr($s, 0, 1);\n    for (my $i = 1; $i < length($s); $i++) {\n        if (substr($s, $i, 1) ne $first) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $len = length($s);\n    for(my $i = 0; $i < $len; $i++) {\n        if(substr($s, $i, 1) ne substr($s, 0, 1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i;\n    for($i=0; $i<length($s)-1; $i++) {\n        if(substr($s,$i,1) ne substr($s,$i+1,1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i;\n    for($i = 0; $i < length($s) - 1; $i++) {\n        if(substr($s, $i, 1) ne substr($s, $i + 1, 1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i = 0;\n    my $j = length($s) - 1;\n    while ($i < $j) {\n        if (substr($s, $i, 1) ne substr($s, $j, 1)) {\n            return 0;\n        }\n        $i++;\n        $j--;\n    }\n    return 1;\n}",
    "    my $i;\n    for($i=0;$i<length($s)-1;$i++) {\n        if(substr($s,$i,1) ne substr($s,$i+1,1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i = 0;\n    my $j = length($s) - 1;\n    while ($i < $j) {\n        if (substr($s, $i, 1) ne substr($s, $j, 1)) {\n            return 0;\n        }\n        $i++;\n        $j--;\n    }\n    return 1;\n}",
    "    my $first = substr($s,0,1);\n    my $len = length($s);\n    for(my $i=1;$i<$len;$i++) {\n        if(substr($s,$i,1) ne $first) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i;\n    for($i=0;$i<length($s)-1;$i++) {\n        if(substr($s,$i,1) ne substr($s,$i+1,1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i;\n    for ($i = 0; $i < length($s) - 1; $i++) {\n        if (substr($s, $i, 1) ne substr($s, $i + 1, 1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $first = substr($s, 0, 1);\n    for (my $i = 1; $i < length($s); $i++) {\n        if (substr($s, $i, 1) ne $first) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $len = length($s);\n    for (my $i = 0; $i < $len; $i++) {\n        if (substr($s, $i, 1) ne substr($s, 0, 1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i;\n    for($i = 0; $i < length($s) - 1; $i++) {\n        if(substr($s, $i, 1) ne substr($s, $i + 1, 1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $A;\n    my $B;\n    my $C;\n    my $D;\n    my $E;\n    my $F;\n    my $G;\n    my $H;\n    my $I;\n    my $J;\n    my $K;\n    my $L;\n    my $M;\n    my $N;\n    my $O;\n    my $P;\n    my $Q;\n    my $R;\n    my $S;\n    my $T;\n    my $U;\n    my $V;\n    my $W;\n    my $X;\n    my $Y;\n    my $Z;\n    my $a;\n    my $b;\n    my $c;\n    my $d;\n    my $e;\n    my $f;\n    my $g;\n    my $h;\n    my $i;\n    my $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n    my $y;\n    my $z;\n    my $A;\n    my $B;\n    my $C;\n    my $D;\n    my $E;\n    my $F;\n    my $G;\n    my $H;\n    my $I;\n    my $J;\n    my $K;\n    my $L;\n    my $M;\n    my $N;\n    my $O;\n   ",
    "    my $len = length($s);\n    my $i = 0;\n    my $j = 1;\n    while($i < $len && $j < $len) {\n        if(substr($s, $i, 1) ne substr($s, $j, 1)) {\n            return 0;\n        }\n        $i++;\n        $j++;\n    }\n    return 1;\n}",
    "    my $first = substr($s, 0, 1);\n    for (my $i = 1; $i < length($s); $i++) {\n        if (substr($s, $i, 1) ne $first) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i;\n    for($i=0;$i<length($s)-1;$i++) {\n        if(substr($s,$i,1) ne substr($s,$i+1,1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i;\n    for($i=0;$i<length($s)-1;$i++){\n        if(substr($s,$i,1) ne substr($s,$i+1,1)){\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i;\n    my $j;\n    my $count = 0;\n    for($i = 0; $i < length($s); $i++) {\n        for($j = $i + 1; $j < length($s); $j++) {\n            if(substr($s,$i,1) eq substr($s,$j,1)) {\n                $count++;\n            }\n        }\n    }\n    if($count == length($s) - 1) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $i;\n    for($i=0;$i<length($s)-1;$i++) {\n        if(substr($s,$i,1) ne substr($s,$i+1,1)) {\n            return 0;\n        }\n    }\n    return 1;\n}"
  ]
}
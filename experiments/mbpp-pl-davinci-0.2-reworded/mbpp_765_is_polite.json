{
  "name": "mbpp_765_is_polite",
  "language": "pl",
  "prompt": "# Write a function to find nth polite number. geeksforgeeks.org/n-th-polite-number/\nsub is_polite {\n    my($n) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_765_is_polite.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&is_polite;\n        if(eq_deeply($candidate->(7),11)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(4),7)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(9),13)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my $sum = 0;\n    my $i = 1;\n    while($sum < $n) {\n        $sum += $i;\n        $i++;\n    }\n    return $sum == $n;\n}",
    "    my $sum = 0;\n    for my $i (1..$n) {\n        if ($n % $i == 0) {\n            $sum += $i;\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    for my $i (1..$n) {\n        if ($n % $i == 0) {\n            $sum += $i;\n        }\n    }\n    return $sum;\n}",
    "    my $i = 1;\n    while ($n % $i == 0) {\n        $i++;\n    }\n    return $i;\n}",
    "    my $sum = 0;\n    for my $i (1..$n) {\n        if ($n % $i == 0) {\n            $sum += $i;\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    for my $i (1..$n) {\n        if ($n % $i == 0) {\n            $sum += $i;\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    for my $i (1..$n) {\n        if ($n % $i == 0) {\n            $sum += $i;\n        }\n    }\n    return $sum;\n}",
    "    my $i = 1;\n    while ($n % $i == 0) {\n        $i++;\n    }\n    return $i;\n}",
    "    my $i = 1;\n    while ($n > 0) {\n        $n -= $i;\n        $i++;\n    }\n    return $n == 0;\n}",
    "    my $sum = 0;\n    for (my $i = 1; $i <= $n; $i++) {\n        if ($n % $i == 0) {\n            $sum += $i;\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    for my $i (1..$n) {\n        if ($n % $i == 0) {\n            $sum += $i;\n        }\n    }\n    return $sum;\n}",
    "    return 1 if $n == 1;\n    my $i = 2;\n    while ($i <= $n) {\n        if ($n % $i == 0) {\n            return is_polite($n / $i) + 1;\n        }\n        $i++;\n    }\n}",
    "    my $sum = 0;\n    while($n > 0) {\n        $sum += $n % 10;\n        $n /= 10;\n    }\n    return $sum % 2 == 0;\n}",
    "    my $sum = 0;\n    for my $i (1 .. $n) {\n        $sum += $n / $i;\n    }\n    return $sum == $n;\n}",
    "    my $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n /= 10;\n    }\n    return $sum;\n}",
    "    my $i = 1;\n    while ($n > 0) {\n        $n -= $i;\n        $i++;\n    }\n    return $n == 0;\n}",
    "    my $i = 1;\n    while ($n % $i == 0) {\n        $i++;\n    }\n    return $i;\n}",
    "    my $sum = 0;\n    for (my $i = 1; $i <= $n; $i++) {\n        if ($n % $i == 0) {\n            $sum += $i;\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    for my $i (1..$n) {\n        $sum += $n / $i;\n    }\n    return $sum == $n;\n}",
    "    my $i = 1;\n    my $sum = 0;\n    while ($sum < $n) {\n        $sum += $i;\n        $i++;\n    }\n    return $sum == $n;\n}"
  ]
}
{
  "name": "mbpp_780_find_combinations",
  "language": "pl",
  "prompt": "# Write a function to find the combinations of sums with arrays in the given array array. https://www.geeksforgeeks.org/plthon-combinations-of-sum-with-arrays-in-array-array/\nsub find_combinations {\n    my($test_list) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_780_find_combinations.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&find_combinations;\n        if(eq_deeply($candidate->([[2, 4], [6, 7], [5, 1], [6, 10]]),[[8, 11], [7, 5], [8, 14], [11, 8], [12, 17], [11, 11]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[3, 5], [7, 8], [6, 2], [7, 11]]),[[10, 13], [9, 7], [10, 16], [13, 10], [14, 19], [13, 13]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[4, 6], [8, 9], [7, 3], [8, 12]]),[[12, 15], [11, 9], [12, 18], [15, 12], [16, 21], [15, 15]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my @result;\n    my $len = scalar(@{$test_list});\n    for(my $i = 0; $i < $len; $i++) {\n        my $sum = 0;\n        for(my $j = $i; $j < $len; $j++) {\n            $sum += $test_list->[$j];\n            push @result, $sum;\n        }\n    }\n    return @result;\n}",
    "    my @combinations = ();\n    my $sum = 0;\n    my $index = 0;\n    my $size = scalar @{$test_list};\n    my $sub_list = [];\n    my $sub_list_index = 0;\n    my $sub_list_size = 0;\n    my $sub_list_sum = 0;\n    my $sub_list_sum_index = 0;\n    my $sub_list_sum_size = 0;\n    my $sub_list_sum_list = [];\n    my $sub_list_sum_list_index = 0;\n    my $sub_list_sum_list_size = 0;\n    my $sub_list_sum_list_sum = 0;\n    my $sub_list_sum_list_sum_index = 0;\n    my $sub_list_sum_list_sum_size = 0;\n    my $sub_list_sum_list_sum_list = [];\n    my $sub_list_sum_list_sum_list_index = 0;\n    my $sub_list_sum_list_sum_list_size = 0;\n    my $sub_list_sum_list_sum_list_sum = 0;\n    my $sub_list_sum_list_sum_list_sum_index = 0;\n    my $sub_list_sum_list_sum_list_sum_size = 0;\n    my $sub_list_sum_list_sum_list_sum_list = [];\n    my $sub_list_sum_list_sum_list_sum_list_index = 0;\n    my $sub_list_sum_list_sum_list_sum_list_size = 0;\n    my $sub_list_sum_list_sum_list_sum_list_sum = 0;\n    my $sub_list_sum_list_sum_list_sum_list_sum_index = 0;\n    my $sub_list_sum_list_sum_list_sum_list_sum_size = 0;\n    my $sub_list_sum_list_sum_list_sum_list_sum_list = [];\n    my $sub_list_sum_list_",
    "    my @result = ();\n    my $length = scalar @$test_list;\n    for (my $i = 0; $i < $length; $i++) {\n        for (my $j = $i + 1; $j < $length; $j++) {\n            if ($test_list->[$i] + $test_list->[$j] == 0) {\n                push @result, [$test_list->[$i], $test_list->[$j]];\n            }\n        }\n    }\n    return @result;\n}",
    "    my @result;\n    my $length = scalar @$test_list;\n    for my $i (0..$length-1) {\n        for my $j ($i+1..$length-1) {\n            push @result, [$test_list->[$i], $test_list->[$j]];\n        }\n    }\n    return @result;\n}",
    "    my @list = @$test_list;\n    my @result;\n    my $size = scalar(@list);\n    my $sum = 0;\n    for (my $i = 0; $i < $size; $i++) {\n        $sum += $list[$i];\n    }\n    my $half = int($sum / 2);\n    for (my $i = 0; $i < $size; $i++) {\n        my $temp = $list[$i];\n        my $j = $i + 1;\n        my $k = $size - 1;\n        while ($j < $k) {\n            if ($temp + $list[$j] + $list[$k] == $half) {\n                my @temp_list = ($temp, $list[$j], $list[$k]);\n                push @result, \\@temp_list;\n                $j++;\n                $k--;\n            } elsif ($temp + $list[$j] + $list[$k] < $half) {\n                $j++;\n            } else {\n                $k--;\n            }\n        }\n    }\n    return @result;\n}",
    "    my $size = scalar @$test_list;\n    my @result;\n    my $i;\n    for($i=0; $i<$size; $i++) {\n        my $j;\n        for($j=$i+1; $j<$size; $j++) {\n            my $k;\n            for($k=$j+1; $k<$size; $k++) {\n                my $sum = $test_list->[$i] + $test_list->[$j] + $test_list->[$k];\n                push @result, $sum;\n            }\n        }\n    }\n    return \\@result;\n}",
    "    my @result;\n    my $sum = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $aa = 0;\n    my $bb = 0;\n    my $cc = 0;\n    my $dd = 0;\n    my $ee = 0;\n    my $ff = 0;\n    my $gg = 0;\n    my $hh = 0;\n    my $ii = 0;\n    my $jj = 0;\n    my $kk = 0;\n    my $ll = 0;\n    my $mm = 0;\n    my $nn = 0;\n    my $oo = 0;\n    my $pp = 0;\n    my $qq = 0;\n    my $rr = 0;\n    my $ss = 0;\n    my $tt = 0;\n    my $uu = 0;\n    my $vv = 0;\n    my $ww = 0;\n    my $xx = 0;\n    my $yy = 0;\n    my $zz = 0;\n    my $aaa = 0;\n    my $bbb = 0;\n    my $ccc = 0;\n    my $ddd = 0;\n    my $eee = 0;\n    my $fff = 0;\n    my $ggg = 0;\n    my $hhh = 0;\n    my $iii = 0;\n    my $jjj = 0;\n    my $kkk = 0;\n    my $lll = 0;\n    my $mmm = 0;\n    my $nnn = 0;\n    my $ooo = 0;\n    my $ppp = 0;\n    my $qqq = 0",
    "    my @combinations = ();\n    my @combination = ();\n    my $sum = 0;\n    my $index = 0;\n    my $size = scalar @$test_list;\n    my $target = $test_list->[0];\n    $test_list = [@$test_list[1..$size-1]];\n    find_combinations_recursive($test_list, $target, $index, $sum, \\@combination, \\@combinations);\n    return \\@combinations;\n}",
    "    my @result;\n    my $size = scalar(@$test_list);\n    for (my $i = 0; $i < $size; $i++) {\n        my $sum = 0;\n        for (my $j = $i; $j < $size; $j++) {\n            $sum += $test_list->[$j];\n            push @result, $sum;\n        }\n    }\n    return @result;\n}",
    "    my @result = ();\n    my $n = scalar(@$test_list);\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $sum = 0;\n    my $flag = 0;\n    my $found = 0;\n    my $temp_sum = 0;\n    my $temp_sum_1 = 0;\n    my $temp_sum_2 = 0;\n    my $temp_sum_3 = 0;\n    my $temp_sum_4 = 0;\n    my $temp_sum_5 = 0;\n    my $temp_sum_6 = 0;\n    my $temp_sum_7 = 0;\n    my $temp_sum_8 = 0;\n    my $temp_sum_9 = 0;\n    my $temp_sum_10 = 0;\n    my $temp_sum_11 = 0;\n    my $temp_sum_12 = 0;\n    my $temp_sum_13 = 0;\n    my $temp_sum_14 = 0;\n    my $temp_sum_15 = 0;\n    my $temp_sum_16 = 0;\n    my $temp_sum_17 = 0;\n    my $temp_sum_18 = 0;\n    my $temp_sum_19 = 0;\n    my $temp_sum_20 = 0;\n    my $temp_sum_21 = 0;\n    my $temp_sum_22 = 0;\n    my $temp_sum_23 = 0;\n    my $temp_sum_24 = 0;\n    my $temp_sum_25 = 0;\n    my $temp_sum_26 = 0;\n    my $temp_sum_27 = 0;\n    my $temp_sum_28 = 0;\n    my $temp_sum_29 = 0;\n    my $temp_sum_30 = 0;\n    my $temp_sum_31 = 0;\n    my $temp_sum_32 = 0;\n    my $temp_sum_33 = 0;\n    my $temp_sum_34 = 0;\n    my $temp_sum_",
    "    my @result = ();\n    my $size = scalar @$test_list;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $sum = 0;\n    my $temp = 0;\n    for($i = 0; $i < $size; $i++) {\n        for($j = $i; $j < $size; $j++) {\n            $sum = 0;\n            for($k = $i; $k <= $j; $k++) {\n                $sum += $test_list->[$k];\n            }\n            push(@result, $sum);\n        }\n    }\n    return @result;\n}",
    "    my @test_list = @$test_list;\n    my @result;\n    my $sum = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $aa = 0;\n    my $ab = 0;\n    my $ac = 0;\n    my $ad = 0;\n    my $ae = 0;\n    my $af = 0;\n    my $ag = 0;\n    my $ah = 0;\n    my $ai = 0;\n    my $aj = 0;\n    my $ak = 0;\n    my $al = 0;\n    my $am = 0;\n    my $an = 0;\n    my $ao = 0;\n    my $ap = 0;\n    my $aq = 0;\n    my $ar = 0;\n    my $as = 0;\n    my $at = 0;\n    my $au = 0;\n    my $av = 0;\n    my $aw = 0;\n    my $ax = 0;\n    my $ay = 0;\n    my $az = 0;\n    my $ba = 0;\n    my $bb = 0;\n    my $bc = 0;\n    my $bd = 0;\n    my $be = 0;\n    my $bf = 0;\n    my $bg = 0;\n    my $bh = 0;\n    my $bi = 0;\n    my $bj = 0;\n    my $bk = 0;\n    my $bl = 0;\n    my $bm = 0;\n    my $bn = 0;\n    my $bo = 0;\n    my $bp = 0;\n    my",
    "    my @result;\n    my $size = scalar @$test_list;\n    for(my $i=0; $i<$size; $i++) {\n        for(my $j=$i+1; $j<$size; $j++) {\n            if(($test_list->[$i] + $test_list->[$j]) % 2 == 0) {\n                push @result, [$test_list->[$i], $test_list->[$j]];\n            }\n        }\n    }\n    return @result;\n}",
    "    my @result;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $aa = 0;\n    my $bb = 0;\n    my $cc = 0;\n    my $dd = 0;\n    my $ee = 0;\n    my $ff = 0;\n    my $gg = 0;\n    my $hh = 0;\n    my $ii = 0;\n    my $jj = 0;\n    my $kk = 0;\n    my $ll = 0;\n    my $mm = 0;\n    my $nn = 0;\n    my $oo = 0;\n    my $pp = 0;\n    my $qq = 0;\n    my $rr = 0;\n    my $ss = 0;\n    my $tt = 0;\n    my $uu = 0;\n    my $vv = 0;\n    my $ww = 0;\n    my $xx = 0;\n    my $yy = 0;\n    my $zz = 0;\n    my $aaa = 0;\n    my $bbb = 0;\n    my $ccc = 0;\n    my $ddd = 0;\n    my $eee = 0;\n    my $fff = 0;\n    my $ggg = 0;\n    my $hhh = 0;\n    my $iii = 0;\n    my $jjj = 0;\n    my $kkk = 0;\n    my $lll = 0;\n    my $mmm = 0;\n    my $nnn = 0;\n    my $ooo = 0;\n    my $ppp = 0;\n    my $qqq = 0;\n    my $rrr =",
    "    my @combinations;\n    my $size = scalar @$test_list;\n    for (my $i = 0; $i < $size; $i++) {\n        for (my $j = $i + 1; $j < $size; $j++) {\n            my $sum = $test_list->[$i] + $test_list->[$j];\n            push @combinations, $sum;\n        }\n    }\n    return @combinations;\n}",
    "    my @list = @{$test_list};\n    my @result = ();\n    my $sum = 0;\n    my $index = 0;\n    my $length = scalar @list;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $aa = 0;\n    my $bb = 0;\n    my $cc = 0;\n    my $dd = 0;\n    my $ee = 0;\n    my $ff = 0;\n    my $gg = 0;\n    my $hh = 0;\n    my $ii = 0;\n    my $jj = 0;\n    my $kk = 0;\n    my $ll = 0;\n    my $mm = 0;\n    my $nn = 0;\n    my $oo = 0;\n    my $pp = 0;\n    my $qq = 0;\n    my $rr = 0;\n    my $ss = 0;\n    my $tt = 0;\n    my $uu = 0;\n    my $vv = 0;\n    my $ww = 0;\n    my $xx = 0;\n    my $yy = 0;\n    my $zz = 0;\n    my $aaa = 0;\n    my $bbb = 0;\n    my $ccc = 0;\n    my $ddd = 0;\n    my $eee = 0;\n    my $fff = 0;\n    my $ggg = 0;\n    my $hhh = 0;\n    my $iii = 0;\n    my $jjj = 0;\n    my $kkk = 0;\n    my $lll = 0;\n    my $mmm = 0;\n",
    "    my @result;\n    my @temp;\n    my $sum = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $aa = 0;\n    my $bb = 0;\n    my $cc = 0;\n    my $dd = 0;\n    my $ee = 0;\n    my $ff = 0;\n    my $gg = 0;\n    my $hh = 0;\n    my $ii = 0;\n    my $jj = 0;\n    my $kk = 0;\n    my $ll = 0;\n    my $mm = 0;\n    my $nn = 0;\n    my $oo = 0;\n    my $pp = 0;\n    my $qq = 0;\n    my $rr = 0;\n    my $ss = 0;\n    my $tt = 0;\n    my $uu = 0;\n    my $vv = 0;\n    my $ww = 0;\n    my $xx = 0;\n    my $yy = 0;\n    my $zz = 0;\n    my $aaa = 0;\n    my $bbb = 0;\n    my $ccc = 0;\n    my $ddd = 0;\n    my $eee = 0;\n    my $fff = 0;\n    my $ggg = 0;\n    my $hhh = 0;\n    my $iii = 0;\n    my $jjj = 0;\n    my $kkk = 0;\n    my $lll = 0;\n    my $mmm = 0;\n    my $nnn = 0;\n    my $ooo = 0;\n    my $ppp = 0;\n   ",
    "    my @test_list = @{$test_list};\n    my $target = $test_list[0];\n    my @test_list = @{$test_list};\n    my @result = ();\n    my @temp = ();\n    my $sum = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $aa = 0;\n    my $bb = 0;\n    my $cc = 0;\n    my $dd = 0;\n    my $ee = 0;\n    my $ff = 0;\n    my $gg = 0;\n    my $hh = 0;\n    my $ii = 0;\n    my $jj = 0;\n    my $kk = 0;\n    my $ll = 0;\n    my $mm = 0;\n    my $nn = 0;\n    my $oo = 0;\n    my $pp = 0;\n    my $qq = 0;\n    my $rr = 0;\n    my $ss = 0;\n    my $tt = 0;\n    my $uu = 0;\n    my $vv = 0;\n    my $ww = 0;\n    my $xx = 0;\n    my $yy = 0;\n    my $zz = 0;\n    my $aaa = 0;\n    my $bbb = 0;\n    my $ccc = 0;\n    my $ddd = 0;\n    my $eee = 0;\n    my $fff = 0;\n    my $ggg = 0;\n    my $hhh = 0;\n    my $iii = 0;\n    my $jjj = 0;\n    my $kkk = 0;",
    "    my @list = @$test_list;\n    my $size = scalar @list;\n    my $sum = 0;\n    my $result = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $aa = 0;\n    my $bb = 0;\n    my $cc = 0;\n    my $dd = 0;\n    my $ee = 0;\n    my $ff = 0;\n    my $gg = 0;\n    my $hh = 0;\n    my $ii = 0;\n    my $jj = 0;\n    my $kk = 0;\n    my $ll = 0;\n    my $mm = 0;\n    my $nn = 0;\n    my $oo = 0;\n    my $pp = 0;\n    my $qq = 0;\n    my $rr = 0;\n    my $ss = 0;\n    my $tt = 0;\n    my $uu = 0;\n    my $vv = 0;\n    my $ww = 0;\n    my $xx = 0;\n    my $yy = 0;\n    my $zz = 0;\n    my $aaa = 0;\n    my $bbb = 0;\n    my $ccc = 0;\n    my $ddd = 0;\n    my $eee = 0;\n    my $fff = 0;\n    my $ggg = 0;\n    my $hhh = 0;\n    my $iii = 0;\n    my $jjj = 0;\n    my $kkk = 0;\n    my $lll = 0;\n    my $mmm = 0;\n    my $nnn = 0;",
    "    my @test_list = @{$test_list};\n    my @result = ();\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $sum = 0;\n    my $size = scalar @test_list;\n    for($i = 0; $i < $size; $i++) {\n        for($j = $i+1; $j < $size; $j++) {\n            $sum = $test_list[$i] + $test_list[$j];\n            for($k = 0; $k < $size; $k++) {\n                if($sum == $test_list[$k]) {\n                    push @result, [$test_list[$i], $test_list[$j], $test_list[$k]];\n                }\n            }\n        }\n    }\n    return @result;\n}"
  ]
}
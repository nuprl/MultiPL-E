{
  "name": "mbpp_472_check_Consecutive",
  "language": "pl",
  "prompt": "# Write a plthon function to check whether the given array contains consecutive numbers or not.\nsub check_Consecutive {\n    my($l) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_472_check_Consecutive.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&check_Consecutive;\n        if(eq_deeply($candidate->([1, 2, 3, 4, 5]),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2, 3, 5, 6]),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2, 1]),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my @list = @$l;\n    my $flag = 0;\n    my $size = scalar @list;\n    for (my $i = 0; $i < $size; $i++) {\n        if ($list[$i] != $list[$i + 1] - 1) {\n            $flag = 1;\n            last;\n        }\n    }\n    if ($flag == 0) {\n        print \"Consecutive numbers\\n\";\n    }\n    else {\n        print \"Not consecutive numbers\\n\";\n    }\n}",
    "    my @list = @$l;\n    my $size = scalar @list;\n    my $min = $list[0];\n    my $max = $list[0];\n    for(my $i = 0; $i < $size; $i++) {\n        if($list[$i] < $min) {\n            $min = $list[$i];\n        }\n        if($list[$i] > $max) {\n            $max = $list[$i];\n        }\n    }\n    if(($max - $min + 1) == $size) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $flag = 0;\n    my @arr = @$l;\n    my $size = scalar @arr;\n    my $min = min(@arr);\n    my $max = max(@arr);\n    if(($max - $min + 1) == $size) {\n        $flag = 1;\n    }\n    return $flag;\n}",
    "    my @list = @$l;\n    my $size = scalar @list;\n    my $i;\n    my $min = $list[0];\n    my $max = $list[0];\n    for($i = 0; $i < $size; $i++) {\n        if($list[$i] < $min) {\n            $min = $list[$i];\n        }\n        if($list[$i] > $max) {\n            $max = $list[$i];\n        }\n    }\n    if(($max - $min + 1) == $size) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my @list = @$l;\n    my $flag = 0;\n    my $size = scalar @list;\n    my $min = min(@list);\n    my $max = max(@list);\n    if($size == ($max - $min + 1)) {\n        $flag = 1;\n    }\n    return $flag;\n}",
    "    my $flag = 0;\n    my @list = @$l;\n    my @list1 = sort {$a <=> $b} @list;\n    for(my $i = 0; $i < scalar @list1 - 1; $i++) {\n        if($list1[$i] + 1 == $list1[$i + 1]) {\n            $flag = 1;\n        }\n        else {\n            $flag = 0;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my @list = @$l;\n    my $flag = 0;\n    my $i;\n    for($i=0;$i<$#list;$i++) {\n        if(abs($list[$i]-$list[$i+1]) == 1) {\n            $flag = 1;\n        }\n        else {\n            $flag = 0;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my @list = @$l;\n    my $flag = 0;\n    my $i = 0;\n    my $j = 0;\n    my $size = scalar(@list);\n    my $min = $list[0];\n    my $max = $list[0];\n    for($i = 0; $i < $size; $i++) {\n        if($list[$i] < $min) {\n            $min = $list[$i];\n        }\n        if($list[$i] > $max) {\n            $max = $list[$i];\n        }\n    }\n    if($size == ($max - $min + 1)) {\n        $flag = 1;\n    }\n    return $flag;\n}",
    "    my @list = @$l;\n    my $size = scalar(@list);\n    my $max = max(@list);\n    my $min = min(@list);\n    if(($max - $min + 1) == $size) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $flag = 0;\n    my @list = @$l;\n    my $size = scalar @list;\n    my $min = min(@list);\n    my $max = max(@list);\n    if(($max - $min + 1) == $size) {\n        $flag = 1;\n    }\n    return $flag;\n}",
    "    my @list = @$l;\n    my $flag = 0;\n    my $n = scalar(@list);\n    my $min = $list[0];\n    my $max = $list[0];\n    for(my $i=0;$i<$n;$i++) {\n        if($list[$i] < $min) {\n            $min = $list[$i];\n        }\n        if($list[$i] > $max) {\n            $max = $list[$i];\n        }\n    }\n    if($n == ($max - $min + 1)) {\n        $flag = 1;\n    }\n    return $flag;\n}\nmy @list = (1,2,3,4,5,6,7,8);\nmy $flag = check_Consecutive(\\@list);\nif($flag == 1) {\n    print \"The given array contains consecutive numbers\\n\";\n}\nelse {\n    print \"The given array does not contain consecutive numbers\\n\";\n}",
    "    my $flag = 1;\n    my @list = sort {$a <=> $b} @$l;\n    for(my $i = 0; $i < $#list; $i++) {\n        if($list[$i+1] - $list[$i] != 1) {\n            $flag = 0;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my @list = @$l;\n    my $size = scalar @list;\n    my $min = min(@list);\n    my $max = max(@list);\n    if(($max - $min + 1) == $size) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my @list = @$l;\n    my $size = scalar @list;\n    my $min = min(@list);\n    my $max = max(@list);\n    if(($max - $min + 1) == $size) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my @list = @$l;\n    my $size = scalar @list;\n    my $min = min(@list);\n    my $max = max(@list);\n    if(($max - $min + 1) == $size) {\n        return 1;\n    }\n    return 0;\n}",
    "    my @list = @$l;\n    my $size = scalar @list;\n    my $min = $list[0];\n    my $max = $list[0];\n    for(my $i = 0; $i < $size; $i++) {\n        if($list[$i] < $min) {\n            $min = $list[$i];\n        }\n        if($list[$i] > $max) {\n            $max = $list[$i];\n        }\n    }\n    if(($max - $min + 1) == $size) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my @list = @$l;\n    my $size = @list;\n    my $i, $j, $flag = 0;\n    for($i = 0; $i < $size; $i++) {\n        for($j = $i + 1; $j < $size; $j++) {\n            if($list[$i] == $list[$j]) {\n                $flag = 1;\n            }\n        }\n    }\n    if($flag == 1) {\n        print \"False\\n\";\n    } else {\n        print \"True\\n\";\n    }\n}",
    "    my $size = scalar(@$l);\n    my $flag = 0;\n    for(my $i=0;$i<$size-1;$i++) {\n        if($$l[$i+1] - $$l[$i] == 1) {\n            $flag = 1;\n        }\n        else {\n            $flag = 0;\n            last;\n        }\n    }\n    if($flag == 1) {\n        print \"Array contains consecutive numbers\\n\";\n    }\n    else {\n        print \"Array does not contain consecutive numbers\\n\";\n    }\n}",
    "    my @list = @$l;\n    my $size = scalar @list;\n    my $min = $list[0];\n    my $max = $list[0];\n    for(my $i = 0; $i < $size; $i++) {\n        if($list[$i] < $min) {\n            $min = $list[$i];\n        }\n        if($list[$i] > $max) {\n            $max = $list[$i];\n        }\n    }\n    if(($max - $min + 1) == $size) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my @list = @$l;\n    my @sorted = sort {$a <=> $b} @list;\n    my $i;\n    for($i=0;$i<$#sorted;$i++) {\n        if($sorted[$i+1] - $sorted[$i] != 1) {\n            return 0;\n        }\n    }\n    return 1;\n}"
  ]
}
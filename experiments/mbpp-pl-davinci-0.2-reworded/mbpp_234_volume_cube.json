{
  "name": "mbpp_234_volume_cube",
  "language": "pl",
  "prompt": "# Write a function to find the volume of a cube given its side length.\nsub volume_cube {\n    my($l) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_234_volume_cube.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&volume_cube;\n        if(eq_deeply($candidate->(3),27)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(2),8)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5),125)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    return $l ** 3;\n}",
    "    return $l ** 3;\n}",
    "    return $l**3;\n}",
    "    return $l**3;\n}",
    "    return $l**3;\n}",
    "    return $l**3;\n}",
    "    return $l ** 3;\n}",
    "    return $l**3;\n}",
    "    return $l**3;\n}",
    "    return $l**3;\n}",
    "    return $l**3;\n}",
    "    return $l**3;\n}",
    "    return $l ** 3;\n}",
    "    return $l**3;\n}",
    "    return $l**3;\n}",
    "    return $l**3;\n}",
    "    return $l**3;\n}",
    "    return $l**3;\n}",
    "    return $l**3;\n}",
    "    return $l**3;\n}"
  ]
}
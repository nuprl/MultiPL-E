{
  "name": "mbpp_407_rearrange_bigger",
  "language": "pl",
  "prompt": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_407_rearrange_bigger.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "results": [
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i+1..$#digits] = reverse @digits[$i+1..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split(//, $n);\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i + 1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i + 1 .. $#digits] = reverse @digits[$i + 1 .. $#digits];\n    return join('', @digits);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i + 1]) {\n        $i--;\n    }\n    return -1 if $i < 0;\n    my $j = $#digits;\n    while ($j > $i && $digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i + 1 .. $#digits] = reverse @digits[$i + 1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i+1..$#digits] = reverse @digits[$i+1..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i+1..$#digits] = reverse @digits[$i+1..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i+1..$#digits] = reverse @digits[$i+1..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits;\n    while ($i > 0 && $digits[$i-1] >= $digits[$i]) {\n        $i--;\n    }\n    if ($i == 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$i-1] >= $digits[$j]) {\n        $j--;\n    }\n    @digits[$i-1, $j] = @digits[$j, $i-1];\n    @digits[$i..$#digits] = reverse @digits[$i..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i + 1]) {\n        $i--;\n    }\n    return -1 if $i < 0;\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i + 1 .. $#digits] = reverse @digits[$i + 1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i + 1]) {\n        $i--;\n    }\n    return -1 if $i < 0;\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i + 1 .. $#digits] = reverse @digits[$i + 1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits;\n    while ($i > 0 && $digits[$i-1] >= $digits[$i]) {\n        $i--;\n    }\n    if ($i == 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i-1]) {\n        $j--;\n    }\n    @digits[$i-1, $j] = @digits[$j, $i-1];\n    @digits[$i..$#digits] = reverse @digits[$i..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits;\n    while ($i > 0 && $digits[$i-1] >= $digits[$i]) {\n        $i--;\n    }\n    if ($i == 0) {\n        return undef;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i-1]) {\n        $j--;\n    }\n    @digits[$i-1, $j] = @digits[$j, $i-1];\n    @digits[$i..$#digits] = reverse @digits[$i..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i + 1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i + 1 .. $#digits] = reverse @digits[$i + 1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i + 1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i + 1 .. $#digits] = reverse @digits[$i + 1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits;\n    while ($i > 0 && $digits[$i-1] >= $digits[$i]) {\n        $i--;\n    }\n    return -1 if $i == 0;\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i-1]) {\n        $j--;\n    }\n    @digits[$i-1, $j] = @digits[$j, $i-1];\n    @digits[$i..$#digits] = reverse @digits[$i..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i + 1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i + 1 .. $#digits] = reverse @digits[$i + 1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i + 1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($j > $i && $digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i + 1 .. $#digits] = reverse @digits[$i + 1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i + 1]) {\n        $i--;\n    }\n    return -1 if $i < 0;\n    my $j = $#digits;\n    while ($j > $i && $digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i + 1 .. $#digits] = reverse @digits[$i + 1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i+1..$#digits] = reverse @digits[$i+1..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i + 1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i + 1 .. $#digits] = reverse @digits[$i + 1 .. $#digits];\n    return join \"\", @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i+1..$#digits] = reverse @digits[$i+1..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits-1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($j > $i && $digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i,$j] = @digits[$j,$i];\n    @digits[$i+1..$#digits] = reverse @digits[$i+1..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpih5vhnxx.pl line 20.\nBEGIN failed--compilation aborted at /tmp/tmpih5vhnxx.pl line 20.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i + 1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i + 1 .. $#digits] = reverse @digits[$i + 1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i + 1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i + 1 .. $#digits] = reverse @digits[$i + 1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    return -1 if $i < 0;\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i+1 .. $#digits] = reverse @digits[$i+1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpxr_xgzsb.pl line 18.\nBEGIN failed--compilation aborted at /tmp/tmpxr_xgzsb.pl line 18.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits;\n    while ($i > 0 && $digits[$i-1] >= $digits[$i]) {\n        $i--;\n    }\n    return -1 if $i == 0;\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i-1]) {\n        $j--;\n    }\n    @digits[$i-1, $j] = @digits[$j, $i-1];\n    @digits[$i..$#digits] = reverse @digits[$i..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i + 1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i + 1 .. $#digits] = reverse @digits[$i + 1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits;\n    while ($i > 0 && $digits[$i-1] >= $digits[$i]) {\n        $i--;\n    }\n    if ($i == 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i-1]) {\n        $j--;\n    }\n    @digits[$i-1, $j] = @digits[$j, $i-1];\n    @digits[$i..$#digits] = reverse @digits[$i..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits;\n    while ($i > 0 && $digits[$i-1] >= $digits[$i]) {\n        $i--;\n    }\n    return -1 if $i == 0;\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i-1]) {\n        $j--;\n    }\n    @digits[$i-1, $j] = @digits[$j, $i-1];\n    @digits[$i..$#digits] = reverse @digits[$i..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i+1..$#digits] = reverse @digits[$i+1..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    return 0 if $i < 0;\n    my $j = $#digits;\n    while ($j > $i && $digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i+1..$#digits] = reverse @digits[$i+1..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp9b3pqq56.pl line 18.\nBEGIN failed--compilation aborted at /tmp/tmp9b3pqq56.pl line 18.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits;\n    while ($i > 0 && $digits[$i-1] >= $digits[$i]) {\n        $i--;\n    }\n    if ($i == 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i-1]) {\n        $j--;\n    }\n    @digits[$i-1, $j] = @digits[$j, $i-1];\n    @digits[$i..$#digits] = reverse @digits[$i..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i+1..$#digits] = reverse @digits[$i+1..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my $n_str = $n . '';\n    my @digits = split //, $n_str;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i + 1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i + 1 .. $#digits] = reverse @digits[$i + 1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpmup0r_fi.pl line 21.\nBEGIN failed--compilation aborted at /tmp/tmpmup0r_fi.pl line 21.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits;\n    while ($i > 0 && $digits[$i-1] >= $digits[$i]) {\n        $i--;\n    }\n    return -1 if $i == 0;\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i-1]) {\n        $j--;\n    }\n    @digits[$i-1, $j] = @digits[$j, $i-1];\n    @digits[$i .. $#digits] = reverse @digits[$i .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpbdoy0ewn.pl line 18.\nBEGIN failed--compilation aborted at /tmp/tmpbdoy0ewn.pl line 18.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i+1..$#digits] = reverse @digits[$i+1..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i + 1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i + 1 .. $#digits] = reverse @digits[$i + 1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    return 0 if $i < 0;\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i+1 .. $#digits] = reverse @digits[$i+1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpg0vxlp0g.pl line 18.\nBEGIN failed--compilation aborted at /tmp/tmpg0vxlp0g.pl line 18.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    return -1 if $i < 0;\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i+1..$#digits] = reverse @digits[$i+1..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpam336__c.pl line 18.\nBEGIN failed--compilation aborted at /tmp/tmpam336__c.pl line 18.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i+1 .. $#digits] = reverse @digits[$i+1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp9k70cndg.pl line 20.\nBEGIN failed--compilation aborted at /tmp/tmp9k70cndg.pl line 20.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits;\n    while ($i > 0 && $digits[$i-1] >= $digits[$i]) {\n        $i--;\n    }\n    if ($i == 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i-1]) {\n        $j--;\n    }\n    @digits[$i-1, $j] = @digits[$j, $i-1];\n    @digits[$i..$#digits] = reverse @digits[$i..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i + 1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i + 1 .. $#digits] = reverse @digits[$i + 1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp4mesfpov.pl line 21.\nBEGIN failed--compilation aborted at /tmp/tmp4mesfpov.pl line 21.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    return 0 if $i < 0;\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i+1..$#digits] = reverse @digits[$i+1..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmplq4ac9vy.pl line 18.\nBEGIN failed--compilation aborted at /tmp/tmplq4ac9vy.pl line 18.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i+1..$#digits] = reverse @digits[$i+1..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits;\n    while ($i > 0 && $digits[$i-1] >= $digits[$i]) {\n        $i--;\n    }\n    if ($i == 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i-1]) {\n        $j--;\n    }\n    @digits[$i-1, $j] = @digits[$j, $i-1];\n    @digits[$i..$#digits] = reverse @digits[$i..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i + 1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i + 1 .. $#digits] = reverse @digits[$i + 1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i + 1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i + 1 .. $#digits] = reverse @digits[$i + 1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i + 1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i + 1 .. $#digits] = reverse @digits[$i + 1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i + 1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i + 1 .. $#digits] = reverse @digits[$i + 1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i + 1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i + 1 .. $#digits] = reverse @digits[$i + 1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i + 1]) {\n        $i--;\n    }\n    return -1 if $i < 0;\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i + 1 .. $#digits] = reverse @digits[$i + 1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i + 1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i + 1 .. $#digits] = reverse @digits[$i + 1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my $n_str = \"$n\";\n    my $n_len = length($n_str);\n    my $i = $n_len - 1;\n    while ($i > 0 && substr($n_str, $i - 1, 1) >= substr($n_str, $i, 1)) {\n        $i--;\n    }\n    if ($i == 0) {\n        return -1;\n    }\n    my $j = $n_len - 1;\n    while (substr($n_str, $j, 1) <= substr($n_str, $i - 1, 1)) {\n        $j--;\n    }\n    my $tmp = substr($n_str, $i - 1, 1);\n    substr($n_str, $i - 1, 1) = substr($n_str, $j, 1);\n    substr($n_str, $j, 1) = $tmp;\n    my $k = $n_len - 1;\n    while ($i < $k) {\n        $tmp = substr($n_str, $i, 1);\n        substr($n_str, $i, 1) = substr($n_str, $k, 1);\n        substr($n_str, $k, 1) = $tmp;\n        $i++;\n        $k--;\n    }\n    return $n_str;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpscdzw4cv.pl line 30.\nBEGIN failed--compilation aborted at /tmp/tmpscdzw4cv.pl line 30.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i+1..$#digits] = reverse @digits[$i+1..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    return -1 if $i < 0;\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i,$j] = @digits[$j,$i];\n    @digits[$i+1..$#digits] = reverse @digits[$i+1..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp294tg_p4.pl line 18.\nBEGIN failed--compilation aborted at /tmp/tmp294tg_p4.pl line 18.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i + 1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i + 1 .. $#digits] = reverse @digits[$i + 1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    return -1 if $i < 0;\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i+1..$#digits] = reverse @digits[$i+1..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpam336__c.pl line 18.\nBEGIN failed--compilation aborted at /tmp/tmpam336__c.pl line 18.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits;\n    while ($i > 0 && $digits[$i-1] >= $digits[$i]) {\n        $i--;\n    }\n    if ($i == 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i-1]) {\n        $j--;\n    }\n    @digits[$i-1, $j] = @digits[$j, $i-1];\n    @digits[$i..$#digits] = reverse @digits[$i..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i+1..$#digits] = reverse @digits[$i+1..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i + 1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($j > $i && $digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i + 1 .. $#digits] = reverse @digits[$i + 1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i+1..$#digits] = reverse @digits[$i+1..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i + 1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i + 1 .. $#digits] = reverse @digits[$i + 1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    return -1 if $i < 0;\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i+1..$#digits] = reverse @digits[$i+1..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpam336__c.pl line 18.\nBEGIN failed--compilation aborted at /tmp/tmpam336__c.pl line 18.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    return -1 if $i < 0;\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i+1 .. $#digits] = reverse @digits[$i+1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpxr_xgzsb.pl line 18.\nBEGIN failed--compilation aborted at /tmp/tmpxr_xgzsb.pl line 18.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    return -1 if $i < 0;\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i+1..$#digits] = reverse @digits[$i+1..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpam336__c.pl line 18.\nBEGIN failed--compilation aborted at /tmp/tmpam336__c.pl line 18.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i + 1]) {\n        $i--;\n    }\n    return -1 if $i < 0;\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i + 1 .. $#digits] = reverse @digits[$i + 1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my $l = length($n);\n    my $i = $l - 1;\n    while ($i > 0 && substr($n, $i - 1, 1) >= substr($n, $i, 1)) {\n        $i--;\n    }\n    if ($i == 0) {\n        return -1;\n    }\n    my $j = $l - 1;\n    while (substr($n, $j, 1) <= substr($n, $i - 1, 1)) {\n        $j--;\n    }\n    my $s = substr($n, 0, $i - 1) . substr($n, $j, 1);\n    my $t = substr($n, $i, $j - $i) . substr($n, $i - 1, 1);\n    return $s . join('', sort {$a <=> $b} split(//, $t));\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpc432uatc.pl line 20.\nBEGIN failed--compilation aborted at /tmp/tmpc432uatc.pl line 20.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i + 1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i + 1 .. $#digits] = reverse @digits[$i + 1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my $s = join '', sort {$b <=> $a} split //, $n;\n    return $s if $s eq $n;\n    my $i = length($n) - 1;\n    while (substr($s, $i, 1) <= substr($n, $i, 1)) {\n        $i--;\n    }\n    my $d = substr($s, $i, 1);\n    substr($s, $i, 1) = substr($n, $i, 1);\n    substr($n, $i, 1) = $d;\n    return $n;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpg04qq7a9.pl line 15.\nBEGIN failed--compilation aborted at /tmp/tmpg04qq7a9.pl line 15.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    return -1 if $i < 0;\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i+1..$#digits] = reverse @digits[$i+1..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpam336__c.pl line 18.\nBEGIN failed--compilation aborted at /tmp/tmpam336__c.pl line 18.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i+1..$#digits] = reverse @digits[$i+1..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i+1..$#digits] = reverse @digits[$i+1..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits;\n    while ($i > 0 && $digits[$i - 1] >= $digits[$i]) {\n        $i--;\n    }\n    if ($i == 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i - 1]) {\n        $j--;\n    }\n    @digits[$i - 1, $j] = @digits[$j, $i - 1];\n    @digits[$i .. $#digits] = reverse @digits[$i .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpsarxac_x.pl line 20.\nBEGIN failed--compilation aborted at /tmp/tmpsarxac_x.pl line 20.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits;\n    while ($i > 0 && $digits[$i - 1] >= $digits[$i]) {\n        $i--;\n    }\n    if ($i == 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i - 1]) {\n        $j--;\n    }\n    @digits[$i - 1, $j] = @digits[$j, $i - 1];\n    @digits[$i .. $#digits] = reverse @digits[$i .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpsarxac_x.pl line 20.\nBEGIN failed--compilation aborted at /tmp/tmpsarxac_x.pl line 20.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i+1..$#digits] = reverse @digits[$i+1..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    return -1 if $i < 0;\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i+1..$#digits] = reverse @digits[$i+1..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpam336__c.pl line 18.\nBEGIN failed--compilation aborted at /tmp/tmpam336__c.pl line 18.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i + 1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i + 1 .. $#digits] = reverse @digits[$i + 1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i+1..$#digits] = reverse @digits[$i+1..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i + 1]) {\n        $i--;\n    }\n    return -1 if $i < 0;\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i + 1 .. $#digits] = reverse @digits[$i + 1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    return -1 if $i < 0;\n    my $j = $#digits;\n    while ($j > $i && $digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i+1..$#digits] = reverse @digits[$i+1..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmplae0syk5.pl line 18.\nBEGIN failed--compilation aborted at /tmp/tmplae0syk5.pl line 18.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i + 1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i + 1 .. $#digits] = reverse @digits[$i + 1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i+1 .. $#digits] = reverse @digits[$i+1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp9k70cndg.pl line 20.\nBEGIN failed--compilation aborted at /tmp/tmp9k70cndg.pl line 20.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i + 1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i + 1 .. $#digits] = reverse @digits[$i + 1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i + 1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i + 1 .. $#digits] = reverse @digits[$i + 1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    return -1 if $i < 0;\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i+1 .. $#digits] = reverse @digits[$i+1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpxr_xgzsb.pl line 18.\nBEGIN failed--compilation aborted at /tmp/tmpxr_xgzsb.pl line 18.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i + 1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i + 1 .. $#digits] = reverse @digits[$i + 1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i + 1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($j > $i && $digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i + 1 .. $#digits] = reverse @digits[$i + 1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits;\n    while ($i > 0 && $digits[$i-1] >= $digits[$i]) {\n        $i--;\n    }\n    if ($i == 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i-1]) {\n        $j--;\n    }\n    @digits[$i-1, $j] = @digits[$j, $i-1];\n    @digits[$i..$#digits] = reverse @digits[$i..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i + 1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i + 1 .. $#digits] = reverse @digits[$i + 1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i+1..$#digits] = reverse @digits[$i+1..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i+1..$#digits] = reverse @digits[$i+1..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits;\n    while ($i > 0 && $digits[$i-1] >= $digits[$i]) {\n        $i--;\n    }\n    if ($i == 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i-1]) {\n        $j--;\n    }\n    @digits[$i-1, $j] = @digits[$j, $i-1];\n    @digits[$i..$#digits] = reverse @digits[$i..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    return 0 if $i < 0;\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i+1..$#digits] = reverse @digits[$i+1..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmplq4ac9vy.pl line 18.\nBEGIN failed--compilation aborted at /tmp/tmplq4ac9vy.pl line 18.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my(@digits) = split(//, $n);\n    my($i, $j, $k);\n    for ($i = $#digits - 1; $i >= 0; $i--) {\n        if ($digits[$i] < $digits[$i + 1]) {\n            for ($j = $#digits; $j > $i; $j--) {\n                if ($digits[$j] > $digits[$i]) {\n                    ($digits[$i], $digits[$j]) = ($digits[$j], $digits[$i]);\n                    last;\n                }\n            }\n            for ($k = $i + 1; $k < $#digits; $k++) {\n                if ($digits[$k] > $digits[$k + 1]) {\n                    ($digits[$k], $digits[$k + 1]) = ($digits[$k + 1], $digits[$k]);\n                }\n            }\n            return join('', @digits);\n        }\n    }\n    return -1;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp2qx8gxgw.pl line 24.\nBEGIN failed--compilation aborted at /tmp/tmp2qx8gxgw.pl line 24.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i + 1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i + 1 .. $#digits] = reverse @digits[$i + 1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    return -1 if $i < 0;\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i+1..$#digits] = reverse @digits[$i+1..$#digits];\n    return join \"\", @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp_7g3bga4.pl line 18.\nBEGIN failed--compilation aborted at /tmp/tmp_7g3bga4.pl line 18.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits;\n    while ($i > 0 && $digits[$i-1] >= $digits[$i]) {\n        $i--;\n    }\n    if ($i == 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i-1]) {\n        $j--;\n    }\n    @digits[$i-1,$j] = @digits[$j,$i-1];\n    @digits[$i..$#digits] = reverse @digits[$i..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp06xk0v6v.pl line 20.\nBEGIN failed--compilation aborted at /tmp/tmp06xk0v6v.pl line 20.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits;\n    while ($i > 0 && $digits[$i-1] >= $digits[$i]) {\n        $i--;\n    }\n    return -1 if $i == 0;\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i-1]) {\n        $j--;\n    }\n    @digits[$i-1,$j] = @digits[$j,$i-1];\n    @digits[$i..$#digits] = reverse @digits[$i..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmps7o5yxas.pl line 18.\nBEGIN failed--compilation aborted at /tmp/tmps7o5yxas.pl line 18.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($j > $i && $digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i,$j] = @digits[$j,$i];\n    @digits[$i+1..$#digits] = reverse @digits[$i+1..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpo2myn18q.pl line 20.\nBEGIN failed--compilation aborted at /tmp/tmpo2myn18q.pl line 20.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i + 1]) {\n        $i--;\n    }\n    return -1 if $i < 0;\n    my $j = $#digits;\n    while ($j > $i && $digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i + 1 .. $#digits] = reverse @digits[$i + 1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i + 1]) {\n        $i--;\n    }\n    return -1 if $i < 0;\n    my $j = $#digits;\n    while ($j > $i && $digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i + 1 .. $#digits] = reverse @digits[$i + 1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i+1 .. $#digits] = reverse @digits[$i+1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp9k70cndg.pl line 20.\nBEGIN failed--compilation aborted at /tmp/tmp9k70cndg.pl line 20.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i + 1]) {\n        $i--;\n    }\n    return -1 if $i < 0;\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i + 1 .. $#digits] = reverse @digits[$i + 1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i+1..$#digits] = reverse @digits[$i+1..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    return -1 if $i < 0;\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i+1..$#digits] = reverse @digits[$i+1..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpam336__c.pl line 18.\nBEGIN failed--compilation aborted at /tmp/tmpam336__c.pl line 18.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return undef;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i+1..$#digits] = reverse @digits[$i+1..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpkh74hlt0.pl line 20.\nBEGIN failed--compilation aborted at /tmp/tmpkh74hlt0.pl line 20.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits;\n    while ($i > 0 && $digits[$i-1] >= $digits[$i]) {\n        $i--;\n    }\n    if ($i == 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i-1]) {\n        $j--;\n    }\n    @digits[$i-1, $j] = @digits[$j, $i-1];\n    @digits[$i..$#digits] = reverse @digits[$i..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    return 0 if $i < 0;\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i+1..$#digits] = reverse @digits[$i+1..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmplq4ac9vy.pl line 18.\nBEGIN failed--compilation aborted at /tmp/tmplq4ac9vy.pl line 18.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($j > $i && $digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i+1..$#digits] = reverse @digits[$i+1..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpmro6t_sj.pl line 20.\nBEGIN failed--compilation aborted at /tmp/tmpmro6t_sj.pl line 20.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i + 1]) {\n        $i--;\n    }\n    return -1 if $i < 0;\n    my $j = $#digits;\n    while ($j > $i && $digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i + 1 .. $#digits] = reverse @digits[$i + 1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i + 1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i + 1 .. $#digits] = reverse @digits[$i + 1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i + 1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i + 1 .. $#digits] = reverse @digits[$i + 1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits;\n    while ($i > 0 && $digits[$i - 1] >= $digits[$i]) {\n        $i--;\n    }\n    if ($i == 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i - 1]) {\n        $j--;\n    }\n    @digits[$i - 1, $j] = @digits[$j, $i - 1];\n    @digits[$i .. $#digits] = reverse @digits[$i .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpsarxac_x.pl line 20.\nBEGIN failed--compilation aborted at /tmp/tmpsarxac_x.pl line 20.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my $i = length($n) - 1;\n    while ($i > 0 && substr($n, $i, 1) <= substr($n, $i - 1, 1)) {\n        $i--;\n    }\n    if ($i == 0) {\n        return -1;\n    }\n    my $j = length($n) - 1;\n    while (substr($n, $j, 1) <= substr($n, $i - 1, 1)) {\n        $j--;\n    }\n    my $s = substr($n, 0, $i - 1) . substr($n, $j, 1);\n    my $t = substr($n, $i, $j - $i) . substr($n, $i - 1, 1);\n    return $s . reverse($t);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp_hy9iq9s.pl line 19.\nBEGIN failed--compilation aborted at /tmp/tmp_hy9iq9s.pl line 19.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i+1..$#digits] = reverse @digits[$i+1..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my $n_str = \"$n\";\n    my $len = length($n_str);\n    my @digits = split //, $n_str;\n    my $i = $len - 1;\n    while ($i > 0 && $digits[$i-1] >= $digits[$i]) {\n        $i--;\n    }\n    if ($i == 0) {\n        return -1;\n    }\n    my $j = $len - 1;\n    while ($digits[$j] <= $digits[$i-1]) {\n        $j--;\n    }\n    @digits[$i-1, $j] = @digits[$j, $i-1];\n    @digits[$i..$len-1] = reverse @digits[$i..$len-1];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpgto4py_q.pl line 22.\nBEGIN failed--compilation aborted at /tmp/tmpgto4py_q.pl line 22.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i + 1]) {\n        $i--;\n    }\n    return -1 if $i < 0;\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i + 1 .. $#digits] = reverse @digits[$i + 1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split(//, $n);\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i + 1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($j > $i && $digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i + 1 .. $#digits] = reverse @digits[$i + 1 .. $#digits];\n    return join('', @digits);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpdwu0y7im.pl line 20.\nBEGIN failed--compilation aborted at /tmp/tmpdwu0y7im.pl line 20.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i+1..$#digits] = reverse @digits[$i+1..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i + 1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i + 1 .. $#digits] = reverse @digits[$i + 1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i+1..$#digits] = reverse @digits[$i+1..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($j > $i && $digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i,$j] = @digits[$j,$i];\n    @digits[$i+1..$#digits] = reverse @digits[$i+1..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpo2myn18q.pl line 20.\nBEGIN failed--compilation aborted at /tmp/tmpo2myn18q.pl line 20.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i + 1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i + 1 .. $#digits] = reverse @digits[$i + 1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    return -1 if $i < 0;\n    my $j = $#digits;\n    while ($j > $i && $digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i+1..$#digits] = reverse @digits[$i+1..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmplae0syk5.pl line 18.\nBEGIN failed--compilation aborted at /tmp/tmplae0syk5.pl line 18.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i+1..$#digits] = reverse @digits[$i+1..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i + 1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i + 1 .. $#digits] = reverse @digits[$i + 1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i + 1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i + 1 .. $#digits] = reverse @digits[$i + 1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i+1..$#digits] = reverse @digits[$i+1..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    return 0 if $i < 0;\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i+1..$#digits] = reverse @digits[$i+1..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmplq4ac9vy.pl line 18.\nBEGIN failed--compilation aborted at /tmp/tmplq4ac9vy.pl line 18.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i + 1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i + 1 .. $#digits] = reverse @digits[$i + 1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my $s = join '', split //, $n;\n    my $i = length($s) - 1;\n    while ($i > 0 && substr($s, $i - 1, 1) >= substr($s, $i, 1)) {\n        $i--;\n    }\n    if ($i == 0) {\n        return -1;\n    }\n    my $j = length($s) - 1;\n    while (substr($s, $j, 1) <= substr($s, $i - 1, 1)) {\n        $j--;\n    }\n    my $t = substr($s, $i - 1, 1);\n    substr($s, $i - 1, 1) = substr($s, $j, 1);\n    substr($s, $j, 1) = $t;\n    my $u = substr($s, $i, length($s) - $i);\n    $u = join '', sort split //, $u;\n    substr($s, $i, length($s) - $i) = $u;\n    return $s;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmprs14el8v.pl line 24.\nBEGIN failed--compilation aborted at /tmp/tmprs14el8v.pl line 24.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i+1..$#digits] = reverse @digits[$i+1..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    return -1 if $i < 0;\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i+1..$#digits] = reverse @digits[$i+1..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpam336__c.pl line 18.\nBEGIN failed--compilation aborted at /tmp/tmpam336__c.pl line 18.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits;\n    while ($i > 0 && $digits[$i] <= $digits[$i-1]) {\n        $i--;\n    }\n    if ($i == 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i-1]) {\n        $j--;\n    }\n    @digits[$i-1, $j] = @digits[$j, $i-1];\n    @digits[$i..$#digits] = reverse @digits[$i..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp84g560xv.pl line 20.\nBEGIN failed--compilation aborted at /tmp/tmp84g560xv.pl line 20.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i+1..$#digits] = reverse @digits[$i+1..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i+1..$#digits] = reverse @digits[$i+1..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits;\n    while ($i > 0 && $digits[$i-1] >= $digits[$i]) {\n        $i--;\n    }\n    return -1 if $i == 0;\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i-1]) {\n        $j--;\n    }\n    @digits[$i-1, $j] = @digits[$j, $i-1];\n    @digits[$i..$#digits] = reverse @digits[$i..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i+1..$#digits] = reverse @digits[$i+1..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    return -1 if $i == -1;\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i+1..$#digits] = reverse @digits[$i+1..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpdl23mj9f.pl line 18.\nBEGIN failed--compilation aborted at /tmp/tmpdl23mj9f.pl line 18.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits;\n    while ($i > 0 && $digits[$i-1] >= $digits[$i]) {\n        $i--;\n    }\n    if ($i == 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i-1]) {\n        $j--;\n    }\n    @digits[$i-1, $j] = @digits[$j, $i-1];\n    @digits[$i..$#digits] = reverse @digits[$i..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my $len = length($n);\n    my @digits = split(//, $n);\n    my $i = $len - 1;\n    while ($i > 0 && $digits[$i] <= $digits[$i - 1]) {\n        $i--;\n    }\n    if ($i == 0) {\n        return -1;\n    }\n    my $j = $len - 1;\n    while ($digits[$j] <= $digits[$i - 1]) {\n        $j--;\n    }\n    @digits[$i - 1, $j] = @digits[$j, $i - 1];\n    my @sorted = sort {$a <=> $b} @digits[$i .. $len - 1];\n    @digits[$i .. $len - 1] = @sorted;\n    return join('', @digits);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp_cy360wf.pl line 22.\nBEGIN failed--compilation aborted at /tmp/tmp_cy360wf.pl line 22.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i + 1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i + 1 .. $#digits] = reverse @digits[$i + 1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    return 0 if $i < 0;\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i+1..$#digits] = reverse @digits[$i+1..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmplq4ac9vy.pl line 18.\nBEGIN failed--compilation aborted at /tmp/tmplq4ac9vy.pl line 18.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n\n    my @digits = split //, $n;\n    my $i = $#digits;\n    while ($i > 0 && $digits[$i-1] >= $digits[$i]) {\n        $i--;\n    }\n    return -1 if $i == 0;\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpq5mj5hzn.pl line 11.\nBEGIN failed--compilation aborted at /tmp/tmpq5mj5hzn.pl line 11.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits;\n    while ($i > 0 && $digits[$i] <= $digits[$i-1]) {\n        $i--;\n    }\n    if ($i == 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i-1]) {\n        $j--;\n    }\n    @digits[$i-1, $j] = @digits[$j, $i-1];\n    @digits[$i..$#digits] = reverse @digits[$i..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp84g560xv.pl line 20.\nBEGIN failed--compilation aborted at /tmp/tmp84g560xv.pl line 20.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split(//, $n);\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($j > $i && $digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i+1..$#digits] = reverse @digits[$i+1..$#digits];\n    return join('', @digits);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpshuor9ny.pl line 20.\nBEGIN failed--compilation aborted at /tmp/tmpshuor9ny.pl line 20.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i + 1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i + 1 .. $#digits] = reverse @digits[$i + 1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i+1..$#digits] = reverse @digits[$i+1..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my $i = length($n) - 1;\n    while ($i > 0 && substr($n, $i, 1) <= substr($n, $i - 1, 1)) {\n        $i--;\n    }\n    return -1 if $i == 0;\n    my $j = length($n) - 1;\n    while (substr($n, $j, 1) <= substr($n, $i - 1, 1)) {\n        $j--;\n    }\n    my $m = substr($n, $i - 1, 1);\n    substr($n, $i - 1, 1) = substr($n, $j, 1);\n    substr($n, $j, 1) = $m;\n    my $k = length($n) - 1;\n    while ($i < $k) {\n        $m = substr($n, $i, 1);\n        substr($n, $i, 1) = substr($n, $k, 1);\n        substr($n, $k, 1) = $m;\n        $i++;\n        $k--;\n    }\n    return $n;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp3p3hgwv7.pl line 26.\nBEGIN failed--compilation aborted at /tmp/tmp3p3hgwv7.pl line 26.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i + 1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i + 1 .. $#digits] = reverse @digits[$i + 1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i + 1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i + 1 .. $#digits] = reverse @digits[$i + 1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    return -1 if $i < 0;\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i+1..$#digits] = reverse @digits[$i+1..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpam336__c.pl line 18.\nBEGIN failed--compilation aborted at /tmp/tmpam336__c.pl line 18.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i + 1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i + 1 .. $#digits] = reverse @digits[$i + 1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my $s = join '', sort {$b <=> $a} split //, $n;\n    return $s if $s eq $n;\n    my $i = 0;\n    while ($s =~ /^0/g) {\n        $i++;\n    }\n    my $t = substr $s, $i, 1;\n    substr $s, $i, 1, substr $s, 0, 1;\n    substr $s, 0, 1, $t;\n    return $s;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp8_n9zob3.pl line 15.\nBEGIN failed--compilation aborted at /tmp/tmp8_n9zob3.pl line 15.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i + 1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i + 1 .. $#digits] = reverse @digits[$i + 1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i + 1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($j > $i && $digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i + 1 .. $#digits] = reverse @digits[$i + 1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i + 1]) {\n        $i--;\n    }\n    if ($i >= 0) {\n        my $j = $#digits;\n        while ($digits[$j] <= $digits[$i]) {\n            $j--;\n        }\n        @digits[$i, $j] = @digits[$j, $i];\n    }\n    @digits[$i + 1 .. $#digits] = reverse @digits[$i + 1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp0ujr5o0e.pl line 19.\nBEGIN failed--compilation aborted at /tmp/tmp0ujr5o0e.pl line 19.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i + 1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($j > $i && $digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i + 1 .. $#digits] = reverse @digits[$i + 1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i + 1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i + 1 .. $#digits] = reverse @digits[$i + 1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    return -1 if $i < 0;\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i+1..$#digits] = reverse @digits[$i+1..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpam336__c.pl line 18.\nBEGIN failed--compilation aborted at /tmp/tmpam336__c.pl line 18.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i + 1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($j > $i && $digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i + 1 .. $#digits] = reverse @digits[$i + 1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i+1..$#digits] = reverse @digits[$i+1..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    return -1 if $i < 0;\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i+1..$#digits] = reverse @digits[$i+1..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpam336__c.pl line 18.\nBEGIN failed--compilation aborted at /tmp/tmpam336__c.pl line 18.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my $i = length($n) - 1;\n    while ($i > 0 && substr($n, $i - 1, 1) >= substr($n, $i, 1)) {\n        $i--;\n    }\n    return -1 if $i == 0;\n    my $j = length($n) - 1;\n    while (substr($n, $j, 1) <= substr($n, $i - 1, 1)) {\n        $j--;\n    }\n    my $s = substr($n, 0, $i - 1) . substr($n, $j, 1) . substr($n, $i, $j - $i) . substr($n, $i - 1, 1) . substr($n, $j + 1);\n    return $s;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp4vqtv6ce.pl line 16.\nBEGIN failed--compilation aborted at /tmp/tmp4vqtv6ce.pl line 16.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i + 1]) {\n        $i--;\n    }\n    return -1 if $i < 0;\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i + 1 .. $#digits] = reverse @digits[$i + 1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits;\n    while ($i > 0 && $digits[$i-1] >= $digits[$i]) {\n        $i--;\n    }\n    if ($i == 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i-1]) {\n        $j--;\n    }\n    @digits[$i-1, $j] = @digits[$j, $i-1];\n    @digits[$i..$#digits] = reverse @digits[$i..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my $str = sprintf(\"%d\", $n);\n    my $len = length($str);\n    my $i = $len - 1;\n    my $j = $len - 1;\n    my $k = $len - 1;\n    my $tmp;\n    my $ret;\n    my $found = 0;\n    while ($i > 0) {\n        if (substr($str, $i, 1) > substr($str, $i - 1, 1)) {\n            $found = 1;\n            last;\n        }\n        $i--;\n    }\n    if ($found) {\n        $tmp = substr($str, $i - 1, 1);\n        while ($j >= $i) {\n            if (substr($str, $j, 1) > $tmp) {\n                last;\n            }\n            $j--;\n        }\n        $str = substr($str, 0, $i - 1) . substr($str, $j, 1) . substr($str, $i, $j - $i) . $tmp . substr($str, $j + 1);\n        $ret = substr($str, 0, $i) . join('', sort {$a <=> $b} split('', substr($str, $i)));\n    } else {\n        $ret = -1;\n    }\n    return $ret;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpg18ob359.pl line 34.\nBEGIN failed--compilation aborted at /tmp/tmpg18ob359.pl line 34.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i + 1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i + 1 .. $#digits] = reverse @digits[$i + 1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits;\n    while ($i > 0 && $digits[$i-1] >= $digits[$i]) {\n        $i--;\n    }\n    if ($i == 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i-1]) {\n        $j--;\n    }\n    @digits[$i-1, $j] = @digits[$j, $i-1];\n    @digits[$i..$#digits] = reverse @digits[$i..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my $s = join '', sort {$b <=> $a} split //, $n;\n    return $s if $s eq $n;\n    my $i = 0;\n    while ($i < length($s) - 1 && substr($s, $i, 1) <= substr($s, $i + 1, 1)) {\n        $i++;\n    }\n    my $c = substr($s, $i, 1);\n    my $j = $i + 1;\n    while ($j < length($s) && substr($s, $j, 1) > $c) {\n        $j++;\n    }\n    my $d = substr($s, $j - 1, 1);\n    substr($s, $i, 1) = $d;\n    substr($s, $j - 1, 1) = $c;\n    return $s;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpr7jx0p6l.pl line 20.\nBEGIN failed--compilation aborted at /tmp/tmpr7jx0p6l.pl line 20.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    return -1 if $i < 0;\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i+1..$#digits] = reverse @digits[$i+1..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpam336__c.pl line 18.\nBEGIN failed--compilation aborted at /tmp/tmpam336__c.pl line 18.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i + 1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i + 1 .. $#digits] = reverse @digits[$i + 1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    return -1 if $i < 0;\n    my $j = $#digits;\n    while ($j > $i && $digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i,$j] = @digits[$j,$i];\n    @digits[$i+1..$#digits] = reverse @digits[$i+1..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpqy7mcnoc.pl line 18.\nBEGIN failed--compilation aborted at /tmp/tmpqy7mcnoc.pl line 18.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits;\n    while ($i > 0 && $digits[$i] <= $digits[$i-1]) {\n        $i--;\n    }\n    return -1 if $i == 0;\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i-1]) {\n        $j--;\n    }\n    @digits[$i-1, $j] = @digits[$j, $i-1];\n    @digits[$i..$#digits] = reverse @digits[$i..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp403nhhlf.pl line 18.\nBEGIN failed--compilation aborted at /tmp/tmp403nhhlf.pl line 18.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits;\n    while ($i > 0 && $digits[$i-1] >= $digits[$i]) {\n        $i--;\n    }\n    return -1 if $i == 0;\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i-1]) {\n        $j--;\n    }\n    @digits[$i-1, $j] = @digits[$j, $i-1];\n    @digits[$i..$#digits] = reverse @digits[$i..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i+1..$#digits] = reverse @digits[$i+1..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i+1..$#digits] = reverse @digits[$i+1..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits;\n    while ($i > 0 && $digits[$i-1] >= $digits[$i]) {\n        $i--;\n    }\n    return -1 if $i == 0;\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i-1]) {\n        $j--;\n    }\n    @digits[$i-1, $j] = @digits[$j, $i-1];\n    @digits[$i..$#digits] = reverse @digits[$i..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits;\n    while ($i > 0 && $digits[$i] <= $digits[$i-1]) {\n        $i--;\n    }\n    return -1 if $i == 0;\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i-1]) {\n        $j--;\n    }\n    @digits[$i-1, $j] = @digits[$j, $i-1];\n    @digits[$i..$#digits] = reverse @digits[$i..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp403nhhlf.pl line 18.\nBEGIN failed--compilation aborted at /tmp/tmp403nhhlf.pl line 18.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i+1..$#digits] = reverse @digits[$i+1..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i + 1]) {\n        $i--;\n    }\n    return -1 if $i < 0;\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i + 1 .. $#digits] = reverse @digits[$i + 1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return undef;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i+1..$#digits] = reverse @digits[$i+1..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpkh74hlt0.pl line 20.\nBEGIN failed--compilation aborted at /tmp/tmpkh74hlt0.pl line 20.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split(//, $n);\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($j > $i && $digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i+1..$#digits] = reverse @digits[$i+1..$#digits];\n    return join('', @digits);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpshuor9ny.pl line 20.\nBEGIN failed--compilation aborted at /tmp/tmpshuor9ny.pl line 20.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i+1..$#digits] = reverse @digits[$i+1..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i + 1]) {\n        $i--;\n    }\n    if ($i >= 0) {\n        my $j = $#digits;\n        while ($digits[$j] <= $digits[$i]) {\n            $j--;\n        }\n        @digits[$i, $j] = @digits[$j, $i];\n    }\n    my $k = $#digits;\n    while ($i < $k) {\n        @digits[$i, $k] = @digits[$k, $i];\n        $i++;\n        $k--;\n    }\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpgrii2oz_.pl line 24.\nBEGIN failed--compilation aborted at /tmp/tmpgrii2oz_.pl line 24.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits;\n    while ($i > 0 && $digits[$i-1] >= $digits[$i]) {\n        $i--;\n    }\n    if ($i == 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i-1]) {\n        $j--;\n    }\n    @digits[$i-1, $j] = @digits[$j, $i-1];\n    @digits[$i..$#digits] = reverse @digits[$i..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits;\n    while ($i > 0 && $digits[$i] <= $digits[$i-1]) {\n        $i--;\n    }\n    if ($i == 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i-1]) {\n        $j--;\n    }\n    @digits[$i-1, $j] = @digits[$j, $i-1];\n    @digits[$i..$#digits] = reverse @digits[$i..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp84g560xv.pl line 20.\nBEGIN failed--compilation aborted at /tmp/tmp84g560xv.pl line 20.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split '', $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i + 1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i + 1 .. $#digits] = reverse @digits[$i + 1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmphscqekul.pl line 20.\nBEGIN failed--compilation aborted at /tmp/tmphscqekul.pl line 20.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits;\n    while ($i > 0 && $digits[$i - 1] >= $digits[$i]) {\n        $i--;\n    }\n    if ($i == 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i - 1]) {\n        $j--;\n    }\n    @digits[$i - 1, $j] = @digits[$j, $i - 1];\n    @digits[$i .. $#digits] = reverse @digits[$i .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpsarxac_x.pl line 20.\nBEGIN failed--compilation aborted at /tmp/tmpsarxac_x.pl line 20.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i + 1]) {\n        $i--;\n    }\n    return -1 if $i < 0;\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i + 1 .. $#digits] = reverse @digits[$i + 1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i+1..$#digits] = reverse @digits[$i+1..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    return -1 if $i < 0;\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i+1..$#digits] = reverse @digits[$i+1..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpam336__c.pl line 18.\nBEGIN failed--compilation aborted at /tmp/tmpam336__c.pl line 18.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i + 1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i + 1 .. $#digits] = reverse @digits[$i + 1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    return 0 if $i < 0;\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i+1..$#digits] = reverse @digits[$i+1..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmplq4ac9vy.pl line 18.\nBEGIN failed--compilation aborted at /tmp/tmplq4ac9vy.pl line 18.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i + 1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i + 1 .. $#digits] = reverse @digits[$i + 1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i + 1]) {\n        $i--;\n    }\n    return -1 if $i < 0;\n    my $j = $#digits;\n    while ($j > $i && $digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i + 1 .. $#digits] = reverse @digits[$i + 1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits;\n    while ($i > 0 && $digits[$i] <= $digits[$i-1]) {\n        $i--;\n    }\n    return -1 if $i == 0;\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i-1]) {\n        $j--;\n    }\n    @digits[$i-1, $j] = @digits[$j, $i-1];\n    @digits[$i..$#digits] = reverse @digits[$i..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp403nhhlf.pl line 18.\nBEGIN failed--compilation aborted at /tmp/tmp403nhhlf.pl line 18.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits;\n    while ($i > 0 && $digits[$i-1] >= $digits[$i]) {\n        $i--;\n    }\n    if ($i == 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i-1]) {\n        $j--;\n    }\n    @digits[$i-1, $j] = @digits[$j, $i-1];\n    @digits[$i..$#digits] = reverse @digits[$i..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i+1]) {\n        $i--;\n    }\n    if ($i < 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($j > $i && $digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i+1..$#digits] = reverse @digits[$i+1..$#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpmro6t_sj.pl line 20.\nBEGIN failed--compilation aborted at /tmp/tmpmro6t_sj.pl line 20.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits - 1;\n    while ($i >= 0 && $digits[$i] >= $digits[$i + 1]) {\n        $i--;\n    }\n    return -1 if $i < 0;\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i]) {\n        $j--;\n    }\n    @digits[$i, $j] = @digits[$j, $i];\n    @digits[$i + 1 .. $#digits] = reverse @digits[$i + 1 .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509948,
      "stdout": "ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to create the next bigger number by rearranging the digits of a given number.\nsub rearrange_bigger {\n    my($n) = @_;\n    my @digits = split //, $n;\n    my $i = $#digits;\n    while ($i > 0 && $digits[$i - 1] >= $digits[$i]) {\n        $i--;\n    }\n    if ($i == 0) {\n        return -1;\n    }\n    my $j = $#digits;\n    while ($digits[$j] <= $digits[$i - 1]) {\n        $j--;\n    }\n    @digits[$i - 1, $j] = @digits[$j, $i - 1];\n    @digits[$i .. $#digits] = reverse @digits[$i .. $#digits];\n    return join '', @digits;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&rearrange_bigger;\n        if(eq_deeply($candidate->(12),21)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(102),120)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666122863,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpsarxac_x.pl line 20.\nBEGIN failed--compilation aborted at /tmp/tmpsarxac_x.pl line 20.\n",
      "exit_code": 2,
      "status": "Exception"
    }
  ]
}
{
  "name": "mbpp_773_occurance_substring",
  "language": "pl",
  "prompt": "# Write a function to find the occurrence and position of the substrings within a string. Return undef if there is no match.\nsub occurance_substring {\n    my($text, $pattern) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_773_occurance_substring.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&occurance_substring;\n        if(eq_deeply($candidate->(\"python programming, python language\", \"python\"),[\"python\", 0, 6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"python programming,programming language\", \"programming\"),[\"programming\", 7, 18])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"python programming,programming language\", \"language\"),[\"language\", 31, 39])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"c++ programming, c++ language\", \"python\"),undef)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my @positions = ();\n    while ($text =~ /$pattern/g) {\n        push @positions, pos($text);\n    }\n    return @positions;\n}",
    "    my $pos = index($text, $pattern);\n    my $count = 0;\n    my @positions;\n    while ($pos != -1) {\n        $count++;\n        push @positions, $pos;\n        $pos = index($text, $pattern, $pos + 1);\n    }\n    return ($count, @positions);\n}",
    "    my $pos = index($text, $pattern);\n    my $occurance = 0;\n    my $result = \"\";\n    while ($pos != -1) {\n        $occurance++;\n        $result .= \"$pos \";\n        $pos = index($text, $pattern, $pos+1);\n    }\n    $result =~ s/\\s+$//;\n    return ($occurance, $result);\n}",
    "    my $pos = index($text, $pattern);\n    if ($pos == -1) {\n        return undef;\n    }\n    return $pos;\n}",
    "    my $position = index($text, $pattern);\n    if ($position == -1) {\n        return undef;\n    }\n    my $occurance = 1;\n    while ($position != -1) {\n        $position = index($text, $pattern, $position + 1);\n        $occurance++;\n    }\n    return $occurance;\n}",
    "    my $pos = index($text, $pattern);\n    if ($pos == -1) {\n        return undef;\n    }\n    else {\n        return $pos;\n    }\n}",
    "    my $pos = index($text, $pattern);\n    if ($pos == -1) {\n        return undef;\n    }\n    else {\n        return $pos;\n    }\n}",
    "    my $pos = index($text, $pattern);\n    return undef if $pos < 0;\n    my $count = 0;\n    while ($pos >= 0) {\n        $count++;\n        $pos = index($text, $pattern, $pos + 1);\n    }\n    return $count;\n}",
    "    my $pos = index($text, $pattern);\n    if ($pos == -1) {\n        return undef;\n    }\n    else {\n        return $pos;\n    }\n}",
    "    my $pos = index($text, $pattern);\n    my $occurance = 0;\n    while ($pos != -1) {\n        $occurance++;\n        $pos = index($text, $pattern, $pos + 1);\n    }\n    return $occurance;\n}",
    "    my @positions;\n    while ($text =~ /$pattern/g) {\n        push @positions, pos($text);\n    }\n    return @positions;\n}",
    "    my $pos = index($text, $pattern);\n    if ($pos == -1) {\n        return undef;\n    }\n    else {\n        return $pos;\n    }\n}",
    "    my $pos = index($text, $pattern);\n    if ($pos == -1) {\n        return undef;\n    } else {\n        return $pos;\n    }\n}",
    "    my $pos = index($text, $pattern);\n    if ($pos == -1) {\n        return undef;\n    }\n    my $count = 0;\n    while ($pos != -1) {\n        $count++;\n        $pos = index($text, $pattern, $pos + 1);\n    }\n    return $count;\n}",
    "    my @positions;\n    my $pos = 0;\n    while(1) {\n        $pos = index($text, $pattern, $pos);\n        last if $pos == -1;\n        push @positions, $pos;\n        $pos++;\n    }\n    return @positions;\n}",
    "    my $index = index($text, $pattern);\n    if ($index == -1) {\n        return undef;\n    }\n    my $occurance = 1;\n    while ($index != -1) {\n        $index = index($text, $pattern, $index + 1);\n        $occurance++;\n    }\n    return $occurance;\n}",
    "    my $pos = -1;\n    my $occurance = 0;\n    while(1) {\n        $pos = index($text, $pattern, $pos + 1);\n        last if $pos == -1;\n        $occurance++;\n    }\n    return $occurance;\n}",
    "    my $pos = index($text, $pattern);\n    return undef if $pos == -1;\n    return $pos;\n}",
    "    my @positions;\n    while ($text =~ /$pattern/g) {\n        push @positions, pos($text);\n    }\n    return @positions;\n}",
    "    my $pos = index($text, $pattern);\n    my $count = 0;\n    my @positions;\n    while ($pos != -1) {\n        $count++;\n        push @positions, $pos;\n        $pos = index($text, $pattern, $pos + 1);\n    }\n    return $count, @positions;\n}"
  ]
}
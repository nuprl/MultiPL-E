{
  "name": "mbpp_764_number_ctr",
  "language": "pl",
  "prompt": "# Write a plthon function to count number of digits in a given string.\nsub number_ctr {\n    my($str) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_764_number_ctr.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&number_ctr;\n        if(eq_deeply($candidate->(\"program2bedone\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"3wonders\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"123\"),3)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"3wond-1ers2\"),3)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my $count = 0;\n    foreach my $char (split //, $str) {\n        if ($char =~ /[0-9]/) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @arr = split('', $str);\n    foreach my $i (@arr) {\n        if ($i =~ /[0-9]/) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    $count++ while $str =~ /\\d/g;\n    return $count;\n}",
    "    my $ctr = 0;\n    foreach my $char (split //, $str) {\n        if ($char =~ /\\d/) {\n            $ctr++;\n        }\n    }\n    return $ctr;\n}",
    "    my $count = 0;\n    foreach my $char (split //, $str) {\n        if ($char =~ /\\d/) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $ctr = 0;\n    foreach my $char (split //, $str) {\n        if ($char =~ /[0-9]/) {\n            $ctr++;\n        }\n    }\n    return $ctr;\n}",
    "    my $count = 0;\n    $count++ while $str =~ /[0-9]/g;\n    return $count;\n}\nprint number_ctr(\"hello world! 123\");",
    "    my $count = 0;\n    foreach my $char (split //, $str) {\n        $count++ if $char =~ /[0-9]/;\n    }\n    return $count;\n}",
    "    my $count = 0;\n    foreach my $char (split //, $str) {\n        if ($char =~ /[0-9]/) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my($ctr) = 0;\n    foreach my $char (split //, $str) {\n        if ($char =~ /\\d/) {\n            $ctr++;\n        }\n    }\n    return $ctr;\n}",
    "    my $ctr = 0;\n    foreach my $char (split //, $str) {\n        $ctr++ if $char =~ /[0-9]/;\n    }\n    return $ctr;\n}",
    "    my $count = 0;\n    foreach my $char (split //, $str) {\n        if ($char =~ /[0-9]/) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    foreach my $char (split //, $str) {\n        if ($char =~ /[0-9]/) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my($ctr) = 0;\n    foreach my $char (split //, $str) {\n        if ($char =~ /[0-9]/) {\n            $ctr++;\n        }\n    }\n    return $ctr;\n}",
    "    my $count = 0;\n    foreach my $char (split //, $str) {\n        if ($char =~ /\\d/) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    foreach my $char (split //, $str) {\n        if ($char =~ /[0-9]/) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    foreach my $char (split //, $str) {\n        if ($char =~ /\\d/) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    foreach my $char (split //, $str) {\n        if ($char =~ /[0-9]/) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    foreach my $char (split //, $str) {\n        if ($char =~ /[0-9]/) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my($count) = 0;\n    foreach my $char (split //, $str) {\n        if ($char =~ /[0-9]/) {\n            $count++;\n        }\n    }\n    return $count;\n}"
  ]
}
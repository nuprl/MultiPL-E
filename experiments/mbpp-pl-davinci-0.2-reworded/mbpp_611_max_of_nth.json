{
  "name": "mbpp_611_max_of_nth",
  "language": "pl",
  "prompt": "# Write a function which given a matrix represented as an array of arrays returns the max of the n'th column.\nsub max_of_nth {\n    my($test_list, $N) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_611_max_of_nth.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&max_of_nth;\n        if(eq_deeply($candidate->([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2),19)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1),10)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1),11)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my $max = $test_list->[0][$N];\n    for my $i (1..$#$test_list) {\n        $max = $test_list->[$i][$N] if $test_list->[$i][$N] > $max;\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    foreach my $i (1..$#{$test_list}) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    foreach my $i (1..$#{$test_list}) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1 .. $#{$test_list}) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    foreach my $row (@$test_list) {\n        if ($row->[$N] > $max) {\n            $max = $row->[$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $row (@$test_list) {\n        $max = $row->[$N] if $row->[$N] > $max;\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    foreach my $row (@$test_list) {\n        if ($row->[$N] > $max) {\n            $max = $row->[$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    foreach my $row (@$test_list) {\n        $max = $row->[$N] if $row->[$N] > $max;\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1 .. $#{$test_list}) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1 .. $#$test_list) {\n        my $val = $test_list->[$i][$N];\n        $max = $val if $val > $max;\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1 .. $#{$test_list}) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1..$#{$test_list}) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $row (@$test_list) {\n        my $nth = $row->[$N];\n        $max = $nth if $nth > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    for my $row (@$test_list) {\n        if ($row->[$N] > $max) {\n            $max = $row->[$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    for my $row (@$test_list) {\n        $max = $row->[$N] if $row->[$N] > $max;\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1..$#$test_list) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1 .. $#$test_list) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1..$#{$test_list}) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    foreach my $row (@$test_list) {\n        if ($row->[$N] > $max) {\n            $max = $row->[$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1..$#{$test_list}) {\n        $max = $test_list->[$i][$N] if $test_list->[$i][$N] > $max;\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1 .. $#$test_list) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1 .. $#$test_list) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $row (@$test_list) {\n        if ($row->[$N] > $max) {\n            $max = $row->[$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1..$#$test_list) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $test (@$test_list) {\n        if ($test->[$N] > $max) {\n            $max = $test->[$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1..$#$test_list) {\n        $max = $test_list->[$i][$N] if $test_list->[$i][$N] > $max;\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1..$#$test_list) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1 .. $#{$test_list}) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $row (@$test_list) {\n        if ($row->[$N] > $max) {\n            $max = $row->[$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    foreach my $row (@$test_list) {\n        if ($row->[$N] > $max) {\n            $max = $row->[$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1 .. $#$test_list) {\n        my $test_value = $test_list->[$i][$N];\n        $max = $test_value if $test_value > $max;\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    foreach my $row (@$test_list) {\n        if ($row->[$N] > $max) {\n            $max = $row->[$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1 .. $#$test_list) {\n        my $val = $test_list->[$i][$N];\n        $max = $val if $val > $max;\n    }\n    return $max;\n}",
    "    my @list = @$test_list;\n    my $max = $list[0][$N];\n    for my $i (1 .. $#list) {\n        if ($list[$i][$N] > $max) {\n            $max = $list[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1..$#$test_list) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1 .. $#{$test_list}) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $row (@$test_list) {\n        $max = $row->[$N] if $row->[$N] > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $row (@$test_list) {\n        if ($row->[$N] > $max) {\n            $max = $row->[$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1 .. $#$test_list) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    for my $i (0..$#{$test_list}) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $row (@$test_list) {\n        if ($row->[$N] > $max) {\n            $max = $row->[$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    foreach my $row (@$test_list) {\n        if ($row->[$N] > $max) {\n            $max = $row->[$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $test (@$test_list) {\n        $max = $test->[$N] if $test->[$N] > $max;\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    foreach my $row (@$test_list) {\n        if ($row->[$N] > $max) {\n            $max = $row->[$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    foreach my $row (@$test_list) {\n        if ($row->[$N] > $max) {\n            $max = $row->[$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $row (@$test_list) {\n        if ($row->[$N] > $max) {\n            $max = $row->[$N];\n        }\n    }\n    return $max;\n}",
    "    my @max_list;\n    for my $i (0 .. $#{$test_list}) {\n        my $max = $test_list->[$i][$N];\n        for my $j (0 .. $#{$test_list->[$i]}) {\n            $max = $test_list->[$i][$j] if $test_list->[$i][$j] > $max;\n        }\n        push @max_list, $max;\n    }\n    return @max_list;\n}",
    "    my $max = $test_list->[0][$N];\n    foreach my $row (@$test_list) {\n        if ($row->[$N] > $max) {\n            $max = $row->[$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    foreach my $row (@$test_list) {\n        if ($row->[$N] > $max) {\n            $max = $row->[$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    foreach my $row (@$test_list) {\n        if ($row->[$N] > $max) {\n            $max = $row->[$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1..$#{$test_list}) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1 .. $#$test_list) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    foreach my $row (@$test_list) {\n        if ($row->[$N] > $max) {\n            $max = $row->[$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1..$#{$test_list}) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i ( 1 .. $#$test_list ) {\n        $max = $test_list->[$i][$N] if $test_list->[$i][$N] > $max;\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $row (@$test_list) {\n        if ($row->[$N] > $max) {\n            $max = $row->[$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $row (@$test_list) {\n        $max = $row->[$N] if $row->[$N] > $max;\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1..$#{$test_list}) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    foreach my $row (@$test_list) {\n        if ($row->[$N] > $max) {\n            $max = $row->[$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1..$#{$test_list}) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1..$#$test_list) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1..$#$test_list) {\n        $max = $test_list->[$i][$N] if $test_list->[$i][$N] > $max;\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    foreach my $row (@$test_list) {\n        if ($row->[$N] > $max) {\n            $max = $row->[$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $row (@$test_list) {\n        if ($row->[$N] > $max) {\n            $max = $row->[$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0]->[$N];\n    foreach my $row (@$test_list) {\n        if ($row->[$N] > $max) {\n            $max = $row->[$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1 .. $#{$test_list}) {\n        $max = $test_list->[$i][$N] if $test_list->[$i][$N] > $max;\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1 .. $#$test_list) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1 .. $#$test_list) {\n        $max = $test_list->[$i][$N] if $test_list->[$i][$N] > $max;\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1..$#{$test_list}) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1 .. $#$test_list) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (0..$#{$test_list}) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1 .. $#$test_list) {\n        my $val = $test_list->[$i][$N];\n        $max = $val if $val > $max;\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    foreach my $test (@$test_list) {\n        if ($test->[$N] > $max) {\n            $max = $test->[$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (0..$#{$test_list}) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1..$#$test_list) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $row (@$test_list) {\n        my $value = $row->[$N];\n        if ($value > $max) {\n            $max = $value;\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1..$#{$test_list}) {\n        my $val = $test_list->[$i][$N];\n        $max = $val if $val > $max;\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1 .. $#$test_list) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1..$#{$test_list}) {\n        $max = $test_list->[$i][$N] if $test_list->[$i][$N] > $max;\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    foreach my $i (1..$#{$test_list}) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1..$#$test_list) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1..$#$test_list) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $row (@$test_list) {\n        if ($row->[$N] > $max) {\n            $max = $row->[$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1..$#{$test_list}) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $row (@$test_list) {\n        if ($row->[$N] > $max) {\n            $max = $row->[$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1..$#$test_list) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1..$#$test_list) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    foreach my $row (@$test_list) {\n        $max = $row->[$N] if $row->[$N] > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $row (@$test_list) {\n        if ($row->[$N] > $max) {\n            $max = $row->[$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1 .. $#$test_list) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $row (@$test_list) {\n        if ($row->[$N] > $max) {\n            $max = $row->[$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1..$#$test_list) {\n        $max = $test_list->[$i][$N] if $test_list->[$i][$N] > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    for my $i (0 .. $#{$test_list}) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1 .. $#$test_list) {\n        $max = $test_list->[$i][$N] if $test_list->[$i][$N] > $max;\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    foreach my $row (@$test_list) {\n        if ($row->[$N] > $max) {\n            $max = $row->[$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1..$#$test_list) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1 .. $#$test_list) {\n        $max = $test_list->[$i][$N] if $test_list->[$i][$N] > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $row (@$test_list) {\n        if ($row->[$N] > $max) {\n            $max = $row->[$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1 .. $#$test_list) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $row (@$test_list) {\n        if ($row->[$N] > $max) {\n            $max = $row->[$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1..$#$test_list) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    foreach my $row (@$test_list) {\n        if ($row->[$N] > $max) {\n            $max = $row->[$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1 .. $#$test_list) {\n        $max = $test_list->[$i][$N] if $test_list->[$i][$N] > $max;\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1 .. $#$test_list) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (0 .. $#$test_list) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    foreach my $row (@$test_list) {\n        if ($row->[$N] > $max) {\n            $max = $row->[$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    foreach my $row (@$test_list) {\n        $max = $row->[$N] if $row->[$N] > $max;\n    }\n    return $max;\n}",
    "    my $max = -1;\n    foreach my $row (@$test_list) {\n        if ($row->[$N] > $max) {\n            $max = $row->[$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    foreach my $test (@$test_list) {\n        $max = $test->[$N] if $test->[$N] > $max;\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1..$#$test_list) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    foreach my $row (@$test_list) {\n        if ($row->[$N] > $max) {\n            $max = $row->[$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1..$#$test_list) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1 .. $#$test_list) {\n        $max = $test_list->[$i][$N] if $test_list->[$i][$N] > $max;\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1..$#{$test_list}) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    for my $i (0 .. $#{$test_list}) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my @max_list;\n    foreach my $test (@{$test_list}) {\n        push @max_list, $test->[$N];\n    }\n    return max @max_list;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1..$#{$test_list}) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $row (@$test_list) {\n        my $value = $row->[$N];\n        if ($value > $max) {\n            $max = $value;\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $row (@$test_list) {\n        $max = $row->[$N] if $row->[$N] > $max;\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    foreach my $row (@$test_list) {\n        if ($row->[$N] > $max) {\n            $max = $row->[$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    foreach my $test (@$test_list) {\n        $max = $test->[$N] if $test->[$N] > $max;\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1 .. $#$test_list) {\n        $max = $test_list->[$i][$N] if $test_list->[$i][$N] > $max;\n    }\n    return $max;\n}",
    "    my @sorted = sort {$b->[$N] <=> $a->[$N]} @$test_list;\n    return $sorted[0][$N];\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1..$#$test_list) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1 .. $#{$test_list}) {\n        $max = $test_list->[$i][$N] if $test_list->[$i][$N] > $max;\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    foreach my $row (@$test_list) {\n        $max = $row->[$N] if $row->[$N] > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $row (@$test_list) {\n        if ($row->[$N] > $max) {\n            $max = $row->[$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    foreach my $row (@$test_list) {\n        if ($row->[$N] > $max) {\n            $max = $row->[$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1..$#$test_list) {\n        my $val = $test_list->[$i][$N];\n        $max = $val if $val > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $row (@$test_list) {\n        if ($row->[$N] > $max) {\n            $max = $row->[$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    foreach my $row (@$test_list) {\n        if ($row->[$N] > $max) {\n            $max = $row->[$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = -1;\n    foreach my $row (@$test_list) {\n        if ($row->[$N] > $max) {\n            $max = $row->[$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1 .. $#$test_list) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my @sorted = sort { $b->[$N] <=> $a->[$N] } @$test_list;\n    return $sorted[0]->[$N];\n}",
    "    my $max = 0;\n    foreach my $row (@$test_list) {\n        $max = $row->[$N] if $row->[$N] > $max;\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    foreach my $row (@$test_list) {\n        if ($row->[$N] > $max) {\n            $max = $row->[$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    foreach my $row (@$test_list) {\n        if ($row->[$N] > $max) {\n            $max = $row->[$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1 .. $#$test_list) {\n        my $val = $test_list->[$i][$N];\n        $max = $val if $val > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $row (@$test_list) {\n        if ($row->[$N] > $max) {\n            $max = $row->[$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $row (@$test_list) {\n        if ($row->[$N] > $max) {\n            $max = $row->[$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1..$#$test_list) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    foreach my $row (@$test_list) {\n        if ($row->[$N] > $max) {\n            $max = $row->[$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $test (@$test_list) {\n        if ($test->[$N] > $max) {\n            $max = $test->[$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1 .. $#{$test_list}) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1 .. $#$test_list) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1..$#$test_list) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $test (@$test_list) {\n        my $val = $test->[$N];\n        $max = $val if $val > $max;\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    foreach my $row (@$test_list) {\n        if ($row->[$N] > $max) {\n            $max = $row->[$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (0..$#{$test_list}) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $row (@$test_list) {\n        if ($row->[$N] > $max) {\n            $max = $row->[$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1..$#{$test_list}) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1 .. $#{$test_list}) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1 .. $#$test_list) {\n        my $val = $test_list->[$i][$N];\n        $max = $val if $val > $max;\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1 .. $#$test_list) {\n        my $val = $test_list->[$i][$N];\n        $max = $val if $val > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $test (@$test_list) {\n        if ($test->[$N] > $max) {\n            $max = $test->[$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1 .. $#$test_list) {\n        $max = $test_list->[$i][$N] if $test_list->[$i][$N] > $max;\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    foreach my $row (@$test_list) {\n        if ($row->[$N] > $max) {\n            $max = $row->[$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1..$#$test_list) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    foreach my $row (@$test_list) {\n        if ($row->[$N] > $max) {\n            $max = $row->[$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    foreach my $row (@$test_list) {\n        if ($row->[$N] > $max) {\n            $max = $row->[$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $row (@$test_list) {\n        my $val = $row->[$N];\n        if ($val > $max) {\n            $max = $val;\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    foreach my $row (@{$test_list}) {\n        if ($row->[$N] > $max) {\n            $max = $row->[$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1..$#$test_list) {\n        my $val = $test_list->[$i][$N];\n        $max = $val if $val > $max;\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1..$#{$test_list}) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $row (@$test_list) {\n        my $nth = $row->[$N];\n        $max = $nth if $nth > $max;\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    foreach my $row (@$test_list) {\n        if ($row->[$N] > $max) {\n            $max = $row->[$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (0 .. $#$test_list) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1..$#$test_list) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $row (@$test_list) {\n        if ($row->[$N] > $max) {\n            $max = $row->[$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $row (@$test_list) {\n        $max = $row->[$N] if $row->[$N] > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $row (@$test_list) {\n        if ($row->[$N] > $max) {\n            $max = $row->[$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1..$#{$test_list}) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1 .. $#{$test_list}) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    foreach my $row (@$test_list) {\n        if ($row->[$N] > $max) {\n            $max = $row->[$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    foreach my $row (@$test_list) {\n        if ($row->[$N] > $max) {\n            $max = $row->[$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    foreach my $row (@$test_list) {\n        if ($row->[$N] > $max) {\n            $max = $row->[$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (0 .. $#{$test_list}) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    foreach my $i (1..$#{$test_list}) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $test (@$test_list) {\n        if ($test->[$N] > $max) {\n            $max = $test->[$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    for my $i (0 .. $#{$test_list}) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1 .. $#$test_list) {\n        my $val = $test_list->[$i][$N];\n        $max = $val if $val > $max;\n    }\n    return $max;\n}",
    "\n    my $max = $test_list->[0][$N];\n    for my $i (1 .. $#$test_list) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1..$#$test_list) {\n        $max = $test_list->[$i][$N] if $test_list->[$i][$N] > $max;\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1 .. $#$test_list) {\n        my $val = $test_list->[$i][$N];\n        $max = $val if $val > $max;\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    foreach my $row (@$test_list) {\n        if ($row->[$N] > $max) {\n            $max = $row->[$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1..$#{$test_list}) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    for my $row (@$test_list) {\n        my $val = $row->[$N];\n        if ($val > $max) {\n            $max = $val;\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1..$#$test_list) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1..$#$test_list) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1 .. $#$test_list) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1..$#$test_list) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1 .. $#{$test_list}) {\n        $max = $test_list->[$i][$N] if $test_list->[$i][$N] > $max;\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1 .. $#$test_list) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1..$#$test_list) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    foreach my $row (@$test_list) {\n        if ($row->[$N] > $max) {\n            $max = $row->[$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    foreach my $row (@$test_list) {\n        if ($row->[$N] > $max) {\n            $max = $row->[$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1..$#$test_list) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1..$#$test_list) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my $max = $test_list->[0][$N];\n    for my $i (1..$#{$test_list}) {\n        if ($test_list->[$i][$N] > $max) {\n            $max = $test_list->[$i][$N];\n        }\n    }\n    return $max;\n}",
    "    my @sorted = sort {$a->[$N] <=> $b->[$N]} @$test_list;\n    return $sorted[-1]->[$N];\n}"
  ]
}
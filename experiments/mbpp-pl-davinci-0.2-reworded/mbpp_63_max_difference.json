{
  "name": "mbpp_63_max_difference",
  "language": "pl",
  "prompt": "# Write a function to find the maximum difference between available pairs in the given array array.\nsub max_difference {\n    my($test_list) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_63_max_difference.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&max_difference;\n        if(eq_deeply($candidate->([[3, 5], [1, 7], [10, 3], [1, 2]]),7)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[4, 6], [2, 17], [9, 13], [11, 12]]),15)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[12, 35], [21, 27], [13, 23], [41, 22]]),23)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my $max_diff = 0;\n    my $min_value = $test_list->[0];\n    for (my $i = 1; $i < scalar(@$test_list); $i++) {\n        my $diff = $test_list->[$i] - $min_value;\n        if ($diff > $max_diff) {\n            $max_diff = $diff;\n        }\n        if ($test_list->[$i] < $min_value) {\n            $min_value = $test_list->[$i];\n        }\n    }\n    return $max_diff;\n}",
    "    my $max_difference = 0;\n    my $min_element = $test_list->[0];\n    for my $i (1..$#$test_list) {\n        if ($test_list->[$i] - $min_element > $max_difference) {\n            $max_difference = $test_list->[$i] - $min_element;\n        }\n        if ($test_list->[$i] < $min_element) {\n            $min_element = $test_list->[$i];\n        }\n    }\n    return $max_difference;\n}",
    "    my $max_diff = 0;\n    my $min_value = $test_list->[0];\n    for my $i (1 .. $#$test_list) {\n        my $diff = $test_list->[$i] - $min_value;\n        if ($diff > $max_diff) {\n            $max_diff = $diff;\n        }\n        if ($test_list->[$i] < $min_value) {\n            $min_value = $test_list->[$i];\n        }\n    }\n    return $max_diff;\n}",
    "    my $max_diff = 0;\n    my $min_num = $test_list->[0];\n    for my $i (1..$#$test_list) {\n        my $diff = $test_list->[$i] - $min_num;\n        if ($diff > $max_diff) {\n            $max_diff = $diff;\n        }\n        if ($test_list->[$i] < $min_num) {\n            $min_num = $test_list->[$i];\n        }\n    }\n    return $max_diff;\n}",
    "    my $max_diff = 0;\n    my $min_value = $test_list->[0];\n    for (my $i = 1; $i < scalar @$test_list; $i++) {\n        if ($test_list->[$i] - $min_value > $max_diff) {\n            $max_diff = $test_list->[$i] - $min_value;\n        }\n        if ($test_list->[$i] < $min_value) {\n            $min_value = $test_list->[$i];\n        }\n    }\n    return $max_diff;\n}",
    "    my $max_diff = 0;\n    my $min_value = $test_list->[0];\n    for my $i (1..$#$test_list) {\n        $min_value = $test_list->[$i] if $test_list->[$i] < $min_value;\n        $max_diff = $test_list->[$i] - $min_value if $test_list->[$i] - $min_value > $max_diff;\n    }\n    return $max_diff;\n}",
    "    my @list = @$test_list;\n    my $max_diff = 0;\n    my $min = $list[0];\n    for my $i (1..$#list) {\n        if ($list[$i] < $min) {\n            $min = $list[$i];\n        }\n        if ($list[$i] - $min > $max_diff) {\n            $max_diff = $list[$i] - $min;\n        }\n    }\n    return $max_diff;\n}",
    "    my $max_diff = 0;\n    my $min_num = $test_list->[0];\n    for my $i (1 .. $#$test_list) {\n        if ($test_list->[$i] - $min_num > $max_diff) {\n            $max_diff = $test_list->[$i] - $min_num;\n        }\n        if ($test_list->[$i] < $min_num) {\n            $min_num = $test_list->[$i];\n        }\n    }\n    return $max_diff;\n}",
    "    my $max_diff = 0;\n    my $max_val = 0;\n    my $min_val = 0;\n    foreach my $val (@$test_list) {\n        if ($val > $max_val) {\n            $max_val = $val;\n        }\n        if ($val < $min_val) {\n            $min_val = $val;\n        }\n        if ($max_val - $min_val > $max_diff) {\n            $max_diff = $max_val - $min_val;\n        }\n    }\n    return $max_diff;\n}",
    "    my $max_diff = 0;\n    my $min_num = $test_list->[0];\n    for my $i (1 .. $#$test_list) {\n        if ($test_list->[$i] < $min_num) {\n            $min_num = $test_list->[$i];\n        }\n        else {\n            my $diff = $test_list->[$i] - $min_num;\n            if ($diff > $max_diff) {\n                $max_diff = $diff;\n            }\n        }\n    }\n    return $max_diff;\n}",
    "    my @list = @$test_list;\n    my $max_diff = 0;\n    my $max_index = 0;\n    my $min_index = 0;\n    for (my $i = 0; $i < scalar(@list); $i++) {\n        if ($list[$i] > $list[$max_index]) {\n            $max_index = $i;\n        }\n        if ($list[$i] < $list[$min_index]) {\n            $min_index = $i;\n        }\n        if ($max_index > $min_index) {\n            $max_diff = $list[$max_index] - $list[$min_index];\n        }\n    }\n    return $max_diff;\n}",
    "    my $max_diff = 0;\n    my $max_val = 0;\n    my $min_val = 0;\n    my $max_index = 0;\n    my $min_index = 0;\n    my $i = 0;\n    my $j = 0;\n    my $diff = 0;\n    my $list_size = scalar(@$test_list);\n    for($i = 0; $i < $list_size; $i++) {\n        if($test_list->[$i] > $max_val) {\n            $max_val = $test_list->[$i];\n            $max_index = $i;\n        }\n    }\n    for($j = 0; $j < $max_index; $j++) {\n        if($test_list->[$j] < $min_val) {\n            $min_val = $test_list->[$j];\n            $min_index = $j;\n        }\n    }\n    $diff = $max_val - $min_val;\n    if($diff > $max_diff) {\n        $max_diff = $diff;\n    }\n    return $max_diff;\n}",
    "    my $max_diff = 0;\n    my $min_value = $test_list->[0];\n    for (my $i = 1; $i < scalar(@$test_list); $i++) {\n        my $diff = $test_list->[$i] - $min_value;\n        if ($diff > $max_diff) {\n            $max_diff = $diff;\n        }\n        if ($test_list->[$i] < $min_value) {\n            $min_value = $test_list->[$i];\n        }\n    }\n    return $max_diff;\n}",
    "    my $max_diff = 0;\n    my $min = $test_list->[0];\n    for my $i (1..$#$test_list) {\n        if ($test_list->[$i] < $min) {\n            $min = $test_list->[$i];\n        }\n        my $diff = $test_list->[$i] - $min;\n        if ($diff > $max_diff) {\n            $max_diff = $diff;\n        }\n    }\n    return $max_diff;\n}",
    "    my $max_diff = 0;\n    my $min_value = $test_list->[0];\n    for my $i (1..$#$test_list) {\n        my $diff = $test_list->[$i] - $min_value;\n        if ($diff > $max_diff) {\n            $max_diff = $diff;\n        }\n        if ($test_list->[$i] < $min_value) {\n            $min_value = $test_list->[$i];\n        }\n    }\n    return $max_diff;\n}",
    "    my $max_diff = 0;\n    my $min_val = $test_list->[0];\n    for my $i (1 .. $#$test_list) {\n        my $diff = $test_list->[$i] - $min_val;\n        if ($diff > $max_diff) {\n            $max_diff = $diff;\n        }\n        if ($test_list->[$i] < $min_val) {\n            $min_val = $test_list->[$i];\n        }\n    }\n    return $max_diff;\n}",
    "    my @list = sort {$a <=> $b} @{$test_list};\n    my $max_diff = 0;\n    for (my $i = 0; $i < @list - 1; $i++) {\n        my $diff = $list[$i + 1] - $list[$i];\n        if ($diff > $max_diff) {\n            $max_diff = $diff;\n        }\n    }\n    return $max_diff;\n}",
    "    my $max_diff = 0;\n    my $min_value = $test_list->[0];\n    for my $i (1..$#$test_list) {\n        $min_value = $test_list->[$i] if $test_list->[$i] < $min_value;\n        $max_diff = $test_list->[$i] - $min_value if $test_list->[$i] - $min_value > $max_diff;\n    }\n    return $max_diff;\n}",
    "    my $max_diff = 0;\n    my $min_num = $test_list->[0];\n    for my $i (1..$#$test_list) {\n        if ($test_list->[$i] - $min_num > $max_diff) {\n            $max_diff = $test_list->[$i] - $min_num;\n        }\n        if ($test_list->[$i] < $min_num) {\n            $min_num = $test_list->[$i];\n        }\n    }\n    return $max_diff;\n}",
    "    my $max_diff = 0;\n    my $min_value = $test_list->[0];\n    for my $i (1 .. $#$test_list) {\n        my $diff = $test_list->[$i] - $min_value;\n        if ($diff > $max_diff) {\n            $max_diff = $diff;\n        }\n        if ($test_list->[$i] < $min_value) {\n            $min_value = $test_list->[$i];\n        }\n    }\n    return $max_diff;\n}"
  ]
}
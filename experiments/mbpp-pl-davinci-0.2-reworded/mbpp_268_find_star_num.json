{
  "name": "mbpp_268_find_star_num",
  "language": "pl",
  "prompt": "# Write a function to find the n'th star number.\nsub find_star_num {\n    my($n) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_268_find_star_num.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&find_star_num;\n        if(eq_deeply($candidate->(3),37)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(4),73)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5),121)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my $i = 1;\n    my $num = 0;\n    while ($i <= $n) {\n        $num++;\n        if (is_star_num($num)) {\n            $i++;\n        }\n    }\n    return $num;\n}",
    "    my $i = 1;\n    my $star_num = 1;\n    while ($i < $n) {\n        $star_num += 6 * $i;\n        $i++;\n    }\n    return $star_num;\n}",
    "    my $i = 1;\n    my $star_num = 1;\n    while ($i < $n) {\n        $star_num += 6 * $i;\n        $i++;\n    }\n    return $star_num;\n}",
    "    my $i = 1;\n    my $num = 1;\n    while ($i < $n) {\n        $num += 4;\n        $i++;\n    }\n    return $num;\n}",
    "    my $i = 1;\n    my $star_num = 1;\n    while ($i < $n) {\n        $star_num += 6 * $i;\n        $i++;\n    }\n    return $star_num;\n}",
    "    my $i = 0;\n    my $star_num = 0;\n    while ($i < $n) {\n        $star_num++;\n        if (is_star_num($star_num)) {\n            $i++;\n        }\n    }\n    return $star_num;\n}",
    "    my $i = 1;\n    my $star_num = 1;\n    while ($i < $n) {\n        $star_num += 6 * $i;\n        $i++;\n    }\n    return $star_num;\n}",
    "    my $num = 0;\n    my $i = 1;\n    while ($num < $n) {\n        $num += $i;\n        $i++;\n    }\n    return $num;\n}",
    "    my $i = 0;\n    my $star = 1;\n    while ($i < $n) {\n        $star += 6 * $i;\n        $i++;\n    }\n    return $star;\n}",
    "    my $i = 1;\n    my $star_num = 1;\n    while ($i < $n) {\n        $star_num += 6 * $i;\n        $i++;\n    }\n    return $star_num;\n}",
    "    my $i = 0;\n    my $num = 0;\n    while ($i < $n) {\n        $num++;\n        if (is_star_num($num)) {\n            $i++;\n        }\n    }\n    return $num;\n}",
    "    my $i = 1;\n    my $num = 0;\n    while ($i <= $n) {\n        $num += $i;\n        $i++;\n    }\n    return $num;\n}",
    "    my $i = 0;\n    my $num = 0;\n    while ($i < $n) {\n        $num++;\n        if (is_star_num($num)) {\n            $i++;\n        }\n    }\n    return $num;\n}",
    "    my $i = 0;\n    my $star_num = 0;\n    while ($i < $n) {\n        $star_num++;\n        $i++ if is_star_num($star_num);\n    }\n    return $star_num;\n}",
    "    my $i = 1;\n    my $star_num = 1;\n    while ($i < $n) {\n        $star_num += 6 * $i;\n        $i++;\n    }\n    return $star_num;\n}",
    "    my $i = 1;\n    my $star_num = 0;\n    while ($i <= $n) {\n        $star_num += $i;\n        $i++;\n    }\n    return $star_num;\n}",
    "    my $i = 0;\n    my $num = 0;\n    while ($i < $n) {\n        $num++;\n        if (is_star_num($num)) {\n            $i++;\n        }\n    }\n    return $num;\n}",
    "    my $i = 1;\n    my $star_num = 1;\n    while ($i < $n) {\n        $star_num += 6 * $i;\n        $i++;\n    }\n    return $star_num;\n}",
    "    my $i = 1;\n    my $star_num = 1;\n    while ($i < $n) {\n        $star_num += 6 * $i;\n        $i++;\n    }\n    return $star_num;\n}",
    "    my($i, $j, $k, $l, $m, $s, $t, $u, $v, $w, $x, $y, $z);\n    my($star_num);"
  ]
}
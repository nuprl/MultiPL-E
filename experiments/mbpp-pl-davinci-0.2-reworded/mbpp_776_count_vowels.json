{
  "name": "mbpp_776_count_vowels",
  "language": "pl",
  "prompt": "# Write a function to count those characters which have vowels as their neighbors in the given string.\nsub count_vowels {\n    my($test_str) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_776_count_vowels.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&count_vowels;\n        if(eq_deeply($candidate->(\"bestinstareels\"),7)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"partofthejourneyistheend\"),12)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"amazonprime\"),5)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my @vowels = ('a','e','i','o','u');\n    my $count = 0;\n    my @chars = split(//,$test_str);\n    for(my $i=0;$i<scalar(@chars);$i++) {\n        if(grep(/^$chars[$i]$/,@vowels)) {\n            if($i>0 && grep(/^$chars[$i-1]$/,@vowels)) {\n                $count++;\n            }\n            if($i<scalar(@chars)-1 && grep(/^$chars[$i+1]$/,@vowels)) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a','e','i','o','u');\n    my @str_arr = split(//,$test_str);\n    for(my $i=0;$i<=$#str_arr;$i++){\n        if(grep(/^$str_arr[$i]$/,@vowels)){\n            if($i>0 && grep(/^$str_arr[$i-1]$/,@vowels)){\n                $count++;\n            }\n            if($i<$#str_arr && grep(/^$str_arr[$i+1]$/,@vowels)){\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a', 'e', 'i', 'o', 'u');\n    my @chars = split(//, $test_str);\n    for (my $i = 0; $i < scalar(@chars); $i++) {\n        if (grep {$_ eq $chars[$i]} @vowels) {\n            if ($i > 0 && grep {$_ eq $chars[$i - 1]} @vowels) {\n                $count++;\n            }\n            if ($i < scalar(@chars) - 1 && grep {$_ eq $chars[$i + 1]} @vowels) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a','e','i','o','u');\n    my @str_arr = split(//,$test_str);\n    for (my $i=0;$i<=$#str_arr;$i++) {\n        if (grep(/^$str_arr[$i]$/,@vowels)) {\n            if ($i==0) {\n                if (grep(/^$str_arr[$i+1]$/,@vowels)) {\n                    $count++;\n                }\n            }\n            elsif ($i==$#str_arr) {\n                if (grep(/^$str_arr[$i-1]$/,@vowels)) {\n                    $count++;\n                }\n            }\n            else {\n                if (grep(/^$str_arr[$i-1]$/,@vowels) || grep(/^$str_arr[$i+1]$/,@vowels)) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $vowels = \"aeiou\";\n    for (my $i = 0; $i < length($test_str); $i++) {\n        if (index($vowels, substr($test_str, $i, 1)) != -1) {\n            if ($i > 0 && index($vowels, substr($test_str, $i - 1, 1)) != -1) {\n                $count++;\n            }\n            if ($i < length($test_str) - 1 && index($vowels, substr($test_str, $i + 1, 1)) != -1) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $vowels = 0;\n    for(my $i = 0; $i < length($test_str); $i++) {\n        my $char = substr($test_str, $i, 1);\n        if($char =~ /[aeiou]/i) {\n            if($i > 0) {\n                my $prev_char = substr($test_str, $i - 1, 1);\n                if($prev_char =~ /[aeiou]/i) {\n                    $vowels++;\n                }\n            }\n            if($i < length($test_str) - 1) {\n                my $next_char = substr($test_str, $i + 1, 1);\n                if($next_char =~ /[aeiou]/i) {\n                    $vowels++;\n                }\n            }\n        }\n    }\n    return $vowels;\n}",
    "    my $count = 0;\n    my @vowels = qw(a e i o u);\n    my @chars = split //, $test_str;\n    for(my $i = 0; $i < scalar @chars; $i++) {\n        if(grep {$_ eq $chars[$i]} @vowels) {\n            if($i > 0 && grep {$_ eq $chars[$i-1]} @vowels) {\n                $count++;\n            }\n            if($i < scalar @chars - 1 && grep {$_ eq $chars[$i+1]} @vowels) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a', 'e', 'i', 'o', 'u');\n    for (my $i = 0; $i < length($test_str); $i++) {\n        if (grep {$_ eq substr($test_str, $i, 1)} @vowels) {\n            if ($i > 0) {\n                if (grep {$_ eq substr($test_str, $i - 1, 1)} @vowels) {\n                    $count++;\n                }\n            }\n            if ($i < length($test_str) - 1) {\n                if (grep {$_ eq substr($test_str, $i + 1, 1)} @vowels) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $i;\n    for($i = 0; $i < length($test_str); $i++) {\n        if(($i == 0) && (is_vowel(substr($test_str, $i + 1, 1)))) {\n            $count++;\n        } elsif(($i == length($test_str) - 1) && (is_vowel(substr($test_str, $i - 1, 1)))) {\n            $count++;\n        } elsif((is_vowel(substr($test_str, $i - 1, 1))) && (is_vowel(substr($test_str, $i + 1, 1)))) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    for(my $i = 0; $i < length($test_str); $i++) {\n        if(($i == 0 || $i == length($test_str) - 1) && $test_str =~ /[aeiou]/i) {\n            $count++;\n        }\n        elsif($test_str =~ /[aeiou]/i && $test_str =~ /[aeiou]/i) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = qw(a e i o u);\n    my @chars = split(//, $test_str);\n    for (my $i = 0; $i < @chars; $i++) {\n        if (grep {$chars[$i] eq $_} @vowels) {\n            if ($i > 0 && grep {$chars[$i - 1] eq $_} @vowels) {\n                $count++;\n            }\n            if ($i < @chars - 1 && grep {$chars[$i + 1] eq $_} @vowels) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $vowels = \"aeiou\";\n    for (my $i = 0; $i < length($test_str); $i++) {\n        if (index($vowels, substr($test_str, $i, 1)) != -1) {\n            if ($i > 0 && index($vowels, substr($test_str, $i - 1, 1)) != -1) {\n                $count++;\n            }\n            if ($i < length($test_str) - 1 && index($vowels, substr($test_str, $i + 1, 1)) != -1) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    for (my $i = 0; $i < length($test_str); $i++) {\n        my $char = substr($test_str, $i, 1);\n        if ($char =~ /[aeiou]/i) {\n            if ($i == 0) {\n                $count++ if (substr($test_str, $i+1, 1) =~ /[aeiou]/i);\n            }\n            elsif ($i == length($test_str) - 1) {\n                $count++ if (substr($test_str, $i-1, 1) =~ /[aeiou]/i);\n            }\n            else {\n                $count++ if (substr($test_str, $i-1, 1) =~ /[aeiou]/i || substr($test_str, $i+1, 1) =~ /[aeiou]/i);\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    for (my $i = 0; $i < length($test_str); $i++) {\n        if (is_vowel(substr($test_str, $i, 1)) && is_vowel(substr($test_str, $i + 1, 1))) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a', 'e', 'i', 'o', 'u');\n    my @test_arr = split(//, $test_str);\n    for (my $i = 0; $i < @test_arr; $i++) {\n        if (grep {$_ eq $test_arr[$i]} @vowels) {\n            if ($i > 0 && $i < @test_arr - 1) {\n                if (grep {$_ eq $test_arr[$i - 1]} @vowels || grep {$_ eq $test_arr[$i + 1]} @vowels) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a', 'e', 'i', 'o', 'u');\n    my @str_arr = split(//, $test_str);\n    for (my $i = 0; $i < scalar(@str_arr); $i++) {\n        if (grep {$_ eq $str_arr[$i]} @vowels) {\n            if ($i > 0 && grep {$_ eq $str_arr[$i - 1]} @vowels) {\n                $count++;\n            }\n            if ($i < scalar(@str_arr) - 1 && grep {$_ eq $str_arr[$i + 1]} @vowels) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    for(my $i = 0; $i < length($test_str); $i++) {\n        if(($i == 0 || $i == length($test_str)-1) && ($test_str =~ /[aeiou]/i)) {\n            $count++;\n        }\n        elsif($test_str =~ /[aeiou]/i) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a', 'e', 'i', 'o', 'u');\n    my @chars = split(//, $test_str);\n    for (my $i = 0; $i < scalar(@chars); $i++) {\n        if (grep {$_ eq $chars[$i]} @vowels) {\n            if ($i > 0 && grep {$_ eq $chars[$i-1]} @vowels) {\n                $count++;\n            }\n            if ($i < scalar(@chars) - 1 && grep {$_ eq $chars[$i+1]} @vowels) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a','e','i','o','u');\n    my @test_str = split(\"\",$test_str);\n    for(my $i=0; $i<=$#test_str; $i++) {\n        if(grep(/^$test_str[$i]$/,@vowels)) {\n            if($i != 0) {\n                if(grep(/^$test_str[$i-1]$/,@vowels)) {\n                    $count++;\n                }\n            }\n            if($i != $#test_str) {\n                if(grep(/^$test_str[$i+1]$/,@vowels)) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    for(my $i = 0; $i < length($test_str); $i++) {\n        my $char = substr($test_str, $i, 1);\n        if($char =~ /[aeiou]/i) {\n            if($i > 0) {\n                my $prev_char = substr($test_str, $i - 1, 1);\n                if($prev_char =~ /[aeiou]/i) {\n                    $count++;\n                }\n            }\n            if($i < length($test_str) - 1) {\n                my $next_char = substr($test_str, $i + 1, 1);\n                if($next_char =~ /[aeiou]/i) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a', 'e', 'i', 'o', 'u');\n    my @chars = split(//, $test_str);\n    for(my $i = 0; $i < scalar(@chars); $i++) {\n        if(grep {$_ eq $chars[$i]} @vowels) {\n            if($i > 0 && grep {$_ eq $chars[$i - 1]} @vowels) {\n                $count++;\n            }\n            if($i < scalar(@chars) - 1 && grep {$_ eq $chars[$i + 1]} @vowels) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @chars = split //, $test_str;\n    for (my $i = 0; $i < scalar @chars; $i++) {\n        if ($chars[$i] =~ /[aeiou]/i) {\n            if ($i == 0) {\n                if ($chars[$i+1] =~ /[aeiou]/i) {\n                    $count++;\n                }\n            } elsif ($i == scalar @chars - 1) {\n                if ($chars[$i-1] =~ /[aeiou]/i) {\n                    $count++;\n                }\n            } else {\n                if ($chars[$i-1] =~ /[aeiou]/i || $chars[$i+1] =~ /[aeiou]/i) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    for (my $i = 0; $i < length($test_str); $i++) {\n        my $char = substr($test_str, $i, 1);\n        if ($char =~ /[aeiou]/) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a', 'e', 'i', 'o', 'u');\n    my @str_arr = split(//, $test_str);\n    for(my $i = 0; $i < scalar(@str_arr); $i++) {\n        if(grep {$_ eq $str_arr[$i]} @vowels) {\n            if($i > 0) {\n                if(grep {$_ eq $str_arr[$i-1]} @vowels) {\n                    $count++;\n                }\n            }\n            if($i < scalar(@str_arr) - 1) {\n                if(grep {$_ eq $str_arr[$i+1]} @vowels) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a','e','i','o','u');\n    my @str_arr = split(//,$test_str);\n    for(my $i=0; $i<=$#str_arr; $i++){\n        if(grep(/$str_arr[$i]/,@vowels)){\n            if($i-1 >= 0){\n                if(grep(/$str_arr[$i-1]/,@vowels)){\n                    $count++;\n                }\n            }\n            if($i+1 <= $#str_arr){\n                if(grep(/$str_arr[$i+1]/,@vowels)){\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @chars = split(//, $test_str);\n    for (my $i = 0; $i < scalar(@chars); $i++) {\n        if ($chars[$i] =~ /[aeiou]/i) {\n            if ($i > 0 && $chars[$i - 1] =~ /[aeiou]/i) {\n                $count++;\n            }\n            if ($i < scalar(@chars) - 1 && $chars[$i + 1] =~ /[aeiou]/i) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $len = length($test_str);\n    for (my $i = 0; $i < $len; $i++) {\n        my $char = substr($test_str, $i, 1);\n        if ($char =~ /[aeiou]/) {\n            if ($i > 0) {\n                my $prev = substr($test_str, $i - 1, 1);\n                if ($prev =~ /[aeiou]/) {\n                    $count++;\n                }\n            }\n            if ($i < $len - 1) {\n                my $next = substr($test_str, $i + 1, 1);\n                if ($next =~ /[aeiou]/) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a', 'e', 'i', 'o', 'u');\n    my @str_arr = split(//, $test_str);\n    for (my $i = 0; $i < scalar(@str_arr); $i++) {\n        if (grep(/^$str_arr[$i]$/, @vowels)) {\n            if ($i == 0) {\n                if (grep(/^$str_arr[$i+1]$/, @vowels)) {\n                    $count++;\n                }\n            }\n            elsif ($i == scalar(@str_arr) - 1) {\n                if (grep(/^$str_arr[$i-1]$/, @vowels)) {\n                    $count++;\n                }\n            }\n            else {\n                if (grep(/^$str_arr[$i+1]$/, @vowels) || grep(/^$str_arr[$i-1]$/, @vowels)) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my @vowels = ('a', 'e', 'i', 'o', 'u');\n    my $count = 0;\n    for(my $i = 0; $i < length($test_str); $i++) {\n        if(($i > 0) && (grep $_ eq substr($test_str, $i - 1, 1), @vowels)) {\n            $count++;\n        }\n        if(($i < length($test_str) - 1) && (grep $_ eq substr($test_str, $i + 1, 1), @vowels)) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $vowels = \"aeiou\";\n    my @str_array = split(//, $test_str);\n    for(my $i = 0; $i <= $#str_array; $i++) {\n        if(index($vowels, $str_array[$i]) != -1) {\n            if(($i > 0) && (index($vowels, $str_array[$i-1]) != -1)) {\n                $count++;\n            }\n            if(($i < $#str_array) && (index($vowels, $str_array[$i+1]) != -1)) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @chars = split(//, $test_str);\n    for (my $i = 0; $i < @chars; $i++) {\n        if ($chars[$i] =~ /[aeiou]/i) {\n            if ($i > 0 && $chars[$i - 1] =~ /[aeiou]/i) {\n                $count++;\n            }\n            if ($i < @chars - 1 && $chars[$i + 1] =~ /[aeiou]/i) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    for (my $i = 0; $i < length($test_str); $i++) {\n        if ($i == 0) {\n            if (is_vowel(substr($test_str, $i, 1)) && is_vowel(substr($test_str, $i + 1, 1))) {\n                $count++;\n            }\n        } elsif ($i == length($test_str) - 1) {\n            if (is_vowel(substr($test_str, $i, 1)) && is_vowel(substr($test_str, $i - 1, 1))) {\n                $count++;\n            }\n        } else {\n            if (is_vowel(substr($test_str, $i, 1)) && (is_vowel(substr($test_str, $i + 1, 1)) || is_vowel(substr($test_str, $i - 1, 1)))) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    for my $i (0..length($test_str)-1) {\n        my $char = substr($test_str, $i, 1);\n        if ($char =~ /[aeiou]/) {\n            if ($i > 0) {\n                my $prev_char = substr($test_str, $i-1, 1);\n                if ($prev_char =~ /[aeiou]/) {\n                    $count++;\n                }\n            }\n            if ($i < length($test_str)-1) {\n                my $next_char = substr($test_str, $i+1, 1);\n                if ($next_char =~ /[aeiou]/) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a', 'e', 'i', 'o', 'u');\n    my @chars = split(//, $test_str);\n    for (my $i = 0; $i < scalar(@chars); $i++) {\n        if (grep {$_ eq $chars[$i]} @vowels) {\n            if ($i > 0 && grep {$_ eq $chars[$i-1]} @vowels) {\n                $count++;\n            }\n            if ($i < scalar(@chars) - 1 && grep {$_ eq $chars[$i+1]} @vowels) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a', 'e', 'i', 'o', 'u');\n    my @chars = split(//, $test_str);\n    for(my $i = 0; $i < scalar(@chars); $i++) {\n        if(grep(/$chars[$i]/, @vowels)) {\n            if($i > 0 && grep(/$chars[$i-1]/, @vowels)) {\n                $count++;\n            }\n            if($i < scalar(@chars) - 1 && grep(/$chars[$i+1]/, @vowels)) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = qw(a e i o u);\n    my @chars = split(//, $test_str);\n    for (my $i = 0; $i < scalar(@chars); $i++) {\n        if (grep(/^$chars[$i]$/, @vowels)) {\n            if ($i > 0 && grep(/^$chars[$i-1]$/, @vowels)) {\n                $count++;\n            }\n            if ($i < scalar(@chars) - 1 && grep(/^$chars[$i+1]$/, @vowels)) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a', 'e', 'i', 'o', 'u');\n    my @str_arr = split('', $test_str);\n    for (my $i = 0; $i < scalar @str_arr; $i++) {\n        if (grep {$_ eq $str_arr[$i]} @vowels) {\n            if ($i > 0) {\n                if (grep {$_ eq $str_arr[$i - 1]} @vowels) {\n                    $count++;\n                }\n            }\n            if ($i < scalar @str_arr - 1) {\n                if (grep {$_ eq $str_arr[$i + 1]} @vowels) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $vowels = \"aeiou\";\n    my @chars = split(//, $test_str);\n    for (my $i = 0; $i < scalar(@chars); $i++) {\n        if ($vowels =~ /$chars[$i]/ && $vowels =~ /$chars[$i+1]/) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = qw(a e i o u);\n    my $prev_char = '';\n    my $next_char = '';\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $e = 0;\n    my $i = 0;\n    my $o = 0;\n    my $u = 0;\n    my $A = 0;\n    my $E = 0;\n    my $I = 0;\n    my $O = 0;\n    my $U = 0;\n    my $str_len = length($test_str);\n    my $next_char_index = 0;\n    my $prev_char_index = 0;\n    my $char = '';\n    my $char_index = 0;\n    my $char_count = 0;\n    my $char_count_a = 0;\n    my $char_count_e = 0;\n    my $char_count_i = 0;\n    my $char_count_o = 0;\n    my $char_count_u = 0;\n    my $char_count_A = 0;\n    my $char_count_E = 0;\n    my $char_count_I = 0;\n    my $char_count_O = 0;\n    my $char_count_U = 0;\n    my $char_count_b = 0;\n    my $char_count_c = 0;\n    my $char_count_d = 0;\n    my $char_count_f = 0;\n    my $char_count_g",
    "    my $count = 0;\n    my @vowels = ('a', 'e', 'i', 'o', 'u');\n    my @test_str_arr = split(//, $test_str);\n    for (my $i = 0; $i < scalar(@test_str_arr); $i++) {\n        if (grep {$_ eq $test_str_arr[$i]} @vowels) {\n            if ($i == 0) {\n                if (grep {$_ eq $test_str_arr[$i+1]} @vowels) {\n                    $count++;\n                }\n            } elsif ($i == scalar(@test_str_arr)-1) {\n                if (grep {$_ eq $test_str_arr[$i-1]} @vowels) {\n                    $count++;\n                }\n            } else {\n                if (grep {$_ eq $test_str_arr[$i-1]} @vowels || grep {$_ eq $test_str_arr[$i+1]} @vowels) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a', 'e', 'i', 'o', 'u');\n    my @str_arr = split('', $test_str);\n    for (my $i = 0; $i < scalar(@str_arr); $i++) {\n        if (grep(/^$str_arr[$i]$/, @vowels)) {\n            if ($i == 0) {\n                if (grep(/^$str_arr[$i+1]$/, @vowels)) {\n                    $count++;\n                }\n            } elsif ($i == scalar(@str_arr) - 1) {\n                if (grep(/^$str_arr[$i-1]$/, @vowels)) {\n                    $count++;\n                }\n            } else {\n                if (grep(/^$str_arr[$i-1]$/, @vowels) || grep(/^$str_arr[$i+1]$/, @vowels)) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @chars = split(//, $test_str);\n    for (my $i = 0; $i < scalar(@chars); $i++) {\n        if ($chars[$i] =~ /[aeiou]/i) {\n            if ($i > 0 && $chars[$i-1] =~ /[aeiou]/i) {\n                $count++;\n            }\n            if ($i < scalar(@chars) - 1 && $chars[$i+1] =~ /[aeiou]/i) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    for (my $i = 0; $i < length($test_str); $i++) {\n        my $char = substr($test_str, $i, 1);\n        if ($char =~ /[aeiou]/i) {\n            if ($i > 0) {\n                my $prev_char = substr($test_str, $i - 1, 1);\n                if ($prev_char =~ /[aeiou]/i) {\n                    $count++;\n                }\n            }\n            if ($i < length($test_str) - 1) {\n                my $next_char = substr($test_str, $i + 1, 1);\n                if ($next_char =~ /[aeiou]/i) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @chars = split(//, $test_str);\n    for(my $i = 0; $i < scalar(@chars); $i++) {\n        if(($i == 0 || $i == scalar(@chars) - 1) && $chars[$i] =~ /[aeiou]/i) {\n            $count++;\n        }\n        elsif($chars[$i] =~ /[aeiou]/i && $chars[$i - 1] =~ /[aeiou]/i) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = qw(a e i o u);\n    my @str_arr = split(//, $test_str);\n    for (my $i = 0; $i < scalar(@str_arr); $i++) {\n        if (grep(/^$str_arr[$i]$/, @vowels)) {\n            if ($i == 0) {\n                if (grep(/^$str_arr[$i+1]$/, @vowels)) {\n                    $count++;\n                }\n            } elsif ($i == scalar(@str_arr) - 1) {\n                if (grep(/^$str_arr[$i-1]$/, @vowels)) {\n                    $count++;\n                }\n            } else {\n                if (grep(/^$str_arr[$i-1]$/, @vowels) || grep(/^$str_arr[$i+1]$/, @vowels)) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a', 'e', 'i', 'o', 'u');\n    my @str_arr = split('', $test_str);\n    for(my $i = 0; $i < scalar(@str_arr); $i++) {\n        if(grep {$_ eq $str_arr[$i]} @vowels) {\n            if($i > 0) {\n                if(grep {$_ eq $str_arr[$i-1]} @vowels) {\n                    $count++;\n                }\n            }\n            if($i < scalar(@str_arr) - 1) {\n                if(grep {$_ eq $str_arr[$i+1]} @vowels) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $i = 0;\n    my $len = length($test_str);\n    while ($i < $len) {\n        my $char = substr($test_str, $i, 1);\n        if ($char =~ /[aeiou]/) {\n            $count++;\n        }\n        $i++;\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a', 'e', 'i', 'o', 'u');\n    my @str_arr = split(//, $test_str);\n    for(my $i = 0; $i < scalar(@str_arr); $i++) {\n        if(grep {$_ eq $str_arr[$i]} @vowels) {\n            if($i == 0) {\n                if(grep {$_ eq $str_arr[$i+1]} @vowels) {\n                    $count++;\n                }\n            }\n            elsif($i == scalar(@str_arr)-1) {\n                if(grep {$_ eq $str_arr[$i-1]} @vowels) {\n                    $count++;\n                }\n            }\n            else {\n                if(grep {$_ eq $str_arr[$i-1]} @vowels || grep {$_ eq $str_arr[$i+1]} @vowels) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $vowels = 0;\n    my @chars = split(//, $test_str);\n    for (my $i = 0; $i < scalar @chars; $i++) {\n        if ($chars[$i] =~ /[aeiou]/i) {\n            if ($i > 0 && $chars[$i - 1] =~ /[aeiou]/i) {\n                $vowels++;\n            }\n            if ($i < scalar @chars - 1 && $chars[$i + 1] =~ /[aeiou]/i) {\n                $vowels++;\n            }\n        }\n    }\n    return $vowels;\n}",
    "    my $count = 0;\n    my @vowels = ('a', 'e', 'i', 'o', 'u');\n    my @str_arr = split('', $test_str);\n    for(my $i = 0; $i < scalar(@str_arr); $i++) {\n        if(grep {$_ eq $str_arr[$i]} @vowels) {\n            if($i > 0 && grep {$_ eq $str_arr[$i - 1]} @vowels) {\n                $count++;\n            }\n            if($i < scalar(@str_arr) - 1 && grep {$_ eq $str_arr[$i + 1]} @vowels) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @chars = split(//, $test_str);\n    for(my $i = 0; $i < @chars; $i++) {\n        if(is_vowel($chars[$i]) && is_vowel($chars[$i+1])) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $str_len = length($test_str);\n    for(my $i = 0; $i < $str_len; $i++) {\n        my $char = substr($test_str, $i, 1);\n        if($char =~ /[aeiou]/i) {\n            if($i > 0) {\n                my $prev_char = substr($test_str, $i - 1, 1);\n                if($prev_char =~ /[aeiou]/i) {\n                    $count++;\n                }\n            }\n            if($i < $str_len - 1) {\n                my $next_char = substr($test_str, $i + 1, 1);\n                if($next_char =~ /[aeiou]/i) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a', 'e', 'i', 'o', 'u');\n    my @str_arr = split(//, $test_str);\n    for my $i (0 .. $#str_arr) {\n        if ($i == 0) {\n            if (grep {$_ eq $str_arr[$i+1]} @vowels) {\n                $count++;\n            }\n        } elsif ($i == $#str_arr) {\n            if (grep {$_ eq $str_arr[$i-1]} @vowels) {\n                $count++;\n            }\n        } else {\n            if (grep {$_ eq $str_arr[$i+1]} @vowels || grep {$_ eq $str_arr[$i-1]} @vowels) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $vowels = \"aeiou\";\n    my $i = 0;\n    while ($i < length($test_str)) {\n        if (index($vowels, substr($test_str, $i, 1)) != -1) {\n            if ($i > 0 && index($vowels, substr($test_str, $i - 1, 1)) != -1) {\n                $count++;\n            }\n            if ($i < length($test_str) - 1 && index($vowels, substr($test_str, $i + 1, 1)) != -1) {\n                $count++;\n            }\n        }\n        $i++;\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @chars = split(//, $test_str);\n    for (my $i = 0; $i < scalar(@chars); $i++) {\n        if ($chars[$i] =~ /[aeiou]/i) {\n            if ($i == 0) {\n                if ($chars[$i+1] =~ /[aeiou]/i) {\n                    $count++;\n                }\n            }\n            elsif ($i == scalar(@chars) - 1) {\n                if ($chars[$i-1] =~ /[aeiou]/i) {\n                    $count++;\n                }\n            }\n            else {\n                if ($chars[$i-1] =~ /[aeiou]/i || $chars[$i+1] =~ /[aeiou]/i) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    for (my $i = 0; $i < length($test_str); $i++) {\n        if (is_vowel(substr($test_str, $i, 1)) && is_vowel(substr($test_str, $i + 1, 1))) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    for (my $i = 0; $i < length($test_str); $i++) {\n        if (is_vowel(substr($test_str, $i, 1)) && is_vowel(substr($test_str, $i + 1, 1))) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a', 'e', 'i', 'o', 'u');\n    my @chars = split(//, $test_str);\n    for (my $i = 0; $i < @chars; $i++) {\n        if ($chars[$i] ~~ @vowels) {\n            if ($i > 0) {\n                if ($chars[$i-1] ~~ @vowels) {\n                    $count++;\n                }\n            }\n            if ($i < @chars - 1) {\n                if ($chars[$i+1] ~~ @vowels) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a', 'e', 'i', 'o', 'u');\n    my @chars = split(//, $test_str);\n    for (my $i = 0; $i < scalar(@chars); $i++) {\n        if (grep {$_ eq $chars[$i]} @vowels) {\n            if ($i > 0) {\n                if (grep {$_ eq $chars[$i-1]} @vowels) {\n                    $count++;\n                }\n            }\n            if ($i < scalar(@chars) - 1) {\n                if (grep {$_ eq $chars[$i+1]} @vowels) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @chars = split(//, $test_str);\n    for (my $i = 0; $i < scalar(@chars); $i++) {\n        if ($chars[$i] =~ /[aeiou]/i) {\n            if ($i > 0 && $chars[$i-1] =~ /[aeiou]/i) {\n                $count++;\n            }\n            if ($i < scalar(@chars) - 1 && $chars[$i+1] =~ /[aeiou]/i) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = qw(a e i o u);\n    my @str_arr = split(//, $test_str);\n    for (my $i = 0; $i < scalar(@str_arr); $i++) {\n        if (grep(/^$str_arr[$i]$/, @vowels)) {\n            if ($i == 0) {\n                if (grep(/^$str_arr[$i+1]$/, @vowels)) {\n                    $count++;\n                }\n            } elsif ($i == scalar(@str_arr) - 1) {\n                if (grep(/^$str_arr[$i-1]$/, @vowels)) {\n                    $count++;\n                }\n            } else {\n                if (grep(/^$str_arr[$i-1]$/, @vowels) || grep(/^$str_arr[$i+1]$/, @vowels)) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a', 'e', 'i', 'o', 'u');\n    my @test_str_arr = split(//, $test_str);\n    for(my $i = 0; $i < scalar(@test_str_arr); $i++) {\n        if(grep(/^$test_str_arr[$i]$/, @vowels)) {\n            if($i > 0) {\n                if(grep(/^$test_str_arr[$i - 1]$/, @vowels)) {\n                    $count++;\n                }\n            }\n            if($i < scalar(@test_str_arr) - 1) {\n                if(grep(/^$test_str_arr[$i + 1]$/, @vowels)) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    for (my $i = 0; $i < length($test_str); $i++) {\n        if ($i == 0) {\n            if (is_vowel(substr($test_str, $i + 1, 1))) {\n                $count++;\n            }\n        }\n        elsif ($i == length($test_str) - 1) {\n            if (is_vowel(substr($test_str, $i - 1, 1))) {\n                $count++;\n            }\n        }\n        else {\n            if (is_vowel(substr($test_str, $i - 1, 1)) || is_vowel(substr($test_str, $i + 1, 1))) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    for(my $i = 0; $i < length($test_str); $i++) {\n        if(is_vowel(substr($test_str, $i, 1)) && is_vowel(substr($test_str, $i + 1, 1))) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    for (my $i = 0; $i < length($test_str); $i++) {\n        if (is_vowel(substr($test_str, $i, 1)) &&\n            is_vowel(substr($test_str, $i + 1, 1))) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a','e','i','o','u');\n    my @test_str = split(//,$test_str);\n    for(my $i=0; $i<=$#test_str; $i++) {\n        if(grep(/$test_str[$i]/,@vowels)) {\n            if($i != 0) {\n                if(grep(/$test_str[$i-1]/,@vowels)) {\n                    $count++;\n                }\n            }\n            if($i != $#test_str) {\n                if(grep(/$test_str[$i+1]/,@vowels)) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = qw(a e i o u);\n    my @str_arr = split(//, $test_str);\n    for(my $i = 0; $i < scalar(@str_arr); $i++) {\n        if($i == 0) {\n            if(grep {$_ eq $str_arr[$i+1]} @vowels) {\n                $count++;\n            }\n        }\n        elsif($i == scalar(@str_arr) - 1) {\n            if(grep {$_ eq $str_arr[$i-1]} @vowels) {\n                $count++;\n            }\n        }\n        else {\n            if(grep {$_ eq $str_arr[$i-1]} @vowels || grep {$_ eq $str_arr[$i+1]} @vowels) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @chars = split(//, $test_str);\n    for (my $i = 0; $i < scalar(@chars); $i++) {\n        if ($chars[$i] =~ /[aeiou]/i) {\n            if ($i == 0) {\n                if ($chars[$i+1] =~ /[aeiou]/i) {\n                    $count++;\n                }\n            }\n            elsif ($i == scalar(@chars) - 1) {\n                if ($chars[$i-1] =~ /[aeiou]/i) {\n                    $count++;\n                }\n            }\n            else {\n                if ($chars[$i-1] =~ /[aeiou]/i || $chars[$i+1] =~ /[aeiou]/i) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    for (my $i = 0; $i < length($test_str); $i++) {\n        my $char = substr($test_str, $i, 1);\n        if ($char =~ /[aeiou]/) {\n            if ($i == 0) {\n                if (substr($test_str, $i + 1, 1) =~ /[aeiou]/) {\n                    $count++;\n                }\n            } elsif ($i == length($test_str) - 1) {\n                if (substr($test_str, $i - 1, 1) =~ /[aeiou]/) {\n                    $count++;\n                }\n            } else {\n                if (substr($test_str, $i - 1, 1) =~ /[aeiou]/ || substr($test_str, $i + 1, 1) =~ /[aeiou]/) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @chars = split(//, $test_str);\n    for (my $i = 0; $i < scalar @chars; $i++) {\n        if ($chars[$i] =~ /[aeiou]/i) {\n            if ($i == 0) {\n                if ($chars[$i+1] =~ /[aeiou]/i) {\n                    $count++;\n                }\n            }\n            elsif ($i == scalar @chars - 1) {\n                if ($chars[$i-1] =~ /[aeiou]/i) {\n                    $count++;\n                }\n            }\n            else {\n                if ($chars[$i-1] =~ /[aeiou]/i || $chars[$i+1] =~ /[aeiou]/i) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a','e','i','o','u');\n    my @str_arr = split('',$test_str);\n    for(my $i=0;$i<scalar(@str_arr);$i++) {\n        if(grep(/^$str_arr[$i]$/,@vowels)) {\n            if($i == 0) {\n                if(grep(/^$str_arr[$i+1]$/,@vowels)) {\n                    $count++;\n                }\n            }\n            elsif($i == scalar(@str_arr)-1) {\n                if(grep(/^$str_arr[$i-1]$/,@vowels)) {\n                    $count++;\n                }\n            }\n            else {\n                if(grep(/^$str_arr[$i+1]$/,@vowels) || grep(/^$str_arr[$i-1]$/,@vowels)) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $len = length($test_str);\n    for(my $i = 0; $i < $len; $i++) {\n        my $char = substr($test_str, $i, 1);\n        if($char =~ /[aeiou]/i) {\n            if($i == 0) {\n                if(substr($test_str, $i+1, 1) =~ /[aeiou]/i) {\n                    $count++;\n                }\n            }\n            elsif($i == $len-1) {\n                if(substr($test_str, $i-1, 1) =~ /[aeiou]/i) {\n                    $count++;\n                }\n            }\n            else {\n                if(substr($test_str, $i-1, 1) =~ /[aeiou]/i || substr($test_str, $i+1, 1) =~ /[aeiou]/i) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a','e','i','o','u');\n    my @str_arr = split(//,$test_str);\n    for(my $i=0; $i<scalar(@str_arr); $i++){\n        if(grep {$_ eq $str_arr[$i]} @vowels){\n            if(($i-1) >= 0 && grep {$_ eq $str_arr[$i-1]} @vowels){\n                $count++;\n            }\n            if(($i+1) < scalar(@str_arr) && grep {$_ eq $str_arr[$i+1]} @vowels){\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @chars = split(//, $test_str);\n    for (my $i = 0; $i < scalar(@chars); $i++) {\n        if ($i == 0) {\n            if ($chars[$i + 1] =~ /[aeiou]/i) {\n                $count++;\n            }\n        } elsif ($i == scalar(@chars) - 1) {\n            if ($chars[$i - 1] =~ /[aeiou]/i) {\n                $count++;\n            }\n        } else {\n            if ($chars[$i - 1] =~ /[aeiou]/i || $chars[$i + 1] =~ /[aeiou]/i) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $vowels = \"aeiou\";\n    for(my $i = 0; $i < length($test_str); $i++) {\n        if(index($vowels, substr($test_str, $i, 1)) != -1) {\n            if(($i > 0 && index($vowels, substr($test_str, $i - 1, 1)) != -1) ||\n               ($i < length($test_str) - 1 && index($vowels, substr($test_str, $i + 1, 1)) != -1)) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $vowels = 'aeiou';\n    my $len = length($test_str);\n    for(my $i = 0; $i < $len; $i++) {\n        my $ch = substr($test_str, $i, 1);\n        if(index($vowels, $ch) >= 0) {\n            if($i > 0) {\n                my $prev_ch = substr($test_str, $i - 1, 1);\n                if(index($vowels, $prev_ch) >= 0) {\n                    $count++;\n                }\n            }\n            if($i < $len - 1) {\n                my $next_ch = substr($test_str, $i + 1, 1);\n                if(index($vowels, $next_ch) >= 0) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $vowels = 'aeiou';\n    for(my $i = 0; $i < length($test_str); $i++) {\n        if(index($vowels, substr($test_str, $i, 1)) != -1) {\n            if($i > 0 && index($vowels, substr($test_str, $i - 1, 1)) != -1) {\n                $count++;\n            }\n            if($i < length($test_str) - 1 && index($vowels, substr($test_str, $i + 1, 1)) != -1) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a', 'e', 'i', 'o', 'u');\n    my @str_arr = split(//, $test_str);\n    for (my $i = 0; $i < scalar(@str_arr); $i++) {\n        if (grep(/$str_arr[$i]/, @vowels)) {\n            if ($i == 0) {\n                if (grep(/$str_arr[$i+1]/, @vowels)) {\n                    $count++;\n                }\n            }\n            elsif ($i == scalar(@str_arr) - 1) {\n                if (grep(/$str_arr[$i-1]/, @vowels)) {\n                    $count++;\n                }\n            }\n            else {\n                if (grep(/$str_arr[$i-1]/, @vowels) || grep(/$str_arr[$i+1]/, @vowels)) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a', 'e', 'i', 'o', 'u');\n    my @str_arr = split //, $test_str;\n    for(my $i = 0; $i < scalar @str_arr; $i++) {\n        if(grep {$_ eq $str_arr[$i]} @vowels) {\n            if($i > 0 && grep {$_ eq $str_arr[$i-1]} @vowels) {\n                $count++;\n            }\n            if($i < scalar @str_arr - 1 && grep {$_ eq $str_arr[$i+1]} @vowels) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @chars = split(//, $test_str);\n    for(my $i = 0; $i < scalar(@chars); $i++) {\n        if(($i == 0 || $i == scalar(@chars) - 1) && is_vowel($chars[$i])) {\n            $count++;\n        }\n        elsif(is_vowel($chars[$i]) && is_vowel($chars[$i - 1]) || is_vowel($chars[$i + 1])) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @chars = split(//, $test_str);\n    for(my $i = 0; $i < scalar(@chars); $i++) {\n        if($chars[$i] =~ /[aeiou]/i) {\n            if($i > 0 && $chars[$i-1] =~ /[aeiou]/i) {\n                $count++;\n            }\n            if($i < scalar(@chars) - 1 && $chars[$i+1] =~ /[aeiou]/i) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $vowels = \"aeiou\";\n    my $i = 0;\n    while ($i < length($test_str)) {\n        if (index($vowels, substr($test_str, $i, 1)) != -1) {\n            if ($i > 0) {\n                if (index($vowels, substr($test_str, $i - 1, 1)) != -1) {\n                    $count++;\n                }\n            }\n            if ($i < length($test_str) - 1) {\n                if (index($vowels, substr($test_str, $i + 1, 1)) != -1) {\n                    $count++;\n                }\n            }\n        }\n        $i++;\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a','e','i','o','u');\n    my @str_arr = split //, $test_str;\n    for (my $i = 0; $i < scalar @str_arr; $i++) {\n        if (grep {$_ eq $str_arr[$i]} @vowels) {\n            if ($i > 0) {\n                if (grep {$_ eq $str_arr[$i-1]} @vowels) {\n                    $count++;\n                }\n            }\n            if ($i < scalar @str_arr - 1) {\n                if (grep {$_ eq $str_arr[$i+1]} @vowels) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    for(my $i = 0; $i < length($test_str); $i++) {\n        if(substr($test_str, $i, 1) =~ /[aeiou]/i) {\n            if($i > 0 && substr($test_str, $i - 1, 1) =~ /[aeiou]/i) {\n                $count++;\n            }\n            if($i < length($test_str) - 1 && substr($test_str, $i + 1, 1) =~ /[aeiou]/i) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a', 'e', 'i', 'o', 'u');\n    my @str_array = split(//, $test_str);\n    for (my $i = 0; $i < scalar(@str_array); $i++) {\n        if (grep(/^$str_array[$i]$/, @vowels)) {\n            if ($i == 0) {\n                if (grep(/^$str_array[$i+1]$/, @vowels)) {\n                    $count++;\n                }\n            }\n            elsif ($i == scalar(@str_array) - 1) {\n                if (grep(/^$str_array[$i-1]$/, @vowels)) {\n                    $count++;\n                }\n            }\n            else {\n                if (grep(/^$str_array[$i+1]$/, @vowels) || grep(/^$str_array[$i-1]$/, @vowels)) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $vowels = \"aeiou\";\n    my $count = 0;\n    for (my $i = 0; $i < length($test_str); $i++) {\n        my $char = substr($test_str, $i, 1);\n        if (index($vowels, $char) != -1) {\n            if ($i > 0 && index($vowels, substr($test_str, $i - 1, 1)) != -1) {\n                $count++;\n            }\n            if ($i < length($test_str) - 1 && index($vowels, substr($test_str, $i + 1, 1)) != -1) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $length = length($test_str);\n    for (my $i = 0; $i < $length; $i++) {\n        my $char = substr($test_str, $i, 1);\n        if ($char =~ /[aeiou]/) {\n            if ($i > 0) {\n                my $prev_char = substr($test_str, $i - 1, 1);\n                if ($prev_char =~ /[aeiou]/) {\n                    $count++;\n                }\n            }\n            if ($i < $length - 1) {\n                my $next_char = substr($test_str, $i + 1, 1);\n                if ($next_char =~ /[aeiou]/) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    for (my $i = 0; $i < length($test_str); $i++) {\n        if (is_vowel(substr($test_str, $i, 1)) && is_vowel(substr($test_str, $i + 1, 1))) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $vowels = 'aeiou';\n    for(my $i = 0; $i < length($test_str); $i++) {\n        if(index($vowels, substr($test_str, $i, 1)) != -1) {\n            if($i > 0 && index($vowels, substr($test_str, $i - 1, 1)) != -1) {\n                $count++;\n            }\n            if($i < length($test_str) - 1 && index($vowels, substr($test_str, $i + 1, 1)) != -1) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @chars = split //, $test_str;\n    for (my $i = 0; $i < scalar @chars; $i++) {\n        if ($chars[$i] =~ /[aeiou]/i) {\n            if ($i == 0) {\n                if ($chars[$i + 1] =~ /[aeiou]/i) {\n                    $count++;\n                }\n            }\n            elsif ($i == scalar @chars - 1) {\n                if ($chars[$i - 1] =~ /[aeiou]/i) {\n                    $count++;\n                }\n            }\n            else {\n                if ($chars[$i - 1] =~ /[aeiou]/i || $chars[$i + 1] =~ /[aeiou]/i) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    for (my $i = 0; $i < length($test_str); $i++) {\n        if (is_vowel(substr($test_str, $i, 1)) && (is_vowel(substr($test_str, $i - 1, 1)) || is_vowel(substr($test_str, $i + 1, 1)))) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a', 'e', 'i', 'o', 'u');\n    for(my $i = 0; $i < length($test_str); $i++) {\n        my $char = substr($test_str, $i, 1);\n        if(grep(/^$char$/, @vowels)) {\n            if($i > 0) {\n                my $prev_char = substr($test_str, $i-1, 1);\n                if(grep(/^$prev_char$/, @vowels)) {\n                    $count++;\n                }\n            }\n            if($i < length($test_str) - 1) {\n                my $next_char = substr($test_str, $i+1, 1);\n                if(grep(/^$next_char$/, @vowels)) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = qw(a e i o u);\n    my @chars = split(//, $test_str);\n    for (my $i = 0; $i < $#chars; $i++) {\n        if (grep(/^$chars[$i]$/, @vowels)) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str_arr = split(//, $test_str);\n    my @vowels = qw(a e i o u);\n    for(my $i = 0; $i < scalar(@str_arr); $i++) {\n        if(grep(/^$str_arr[$i]$/, @vowels)) {\n            if($i == 0) {\n                if(grep(/^$str_arr[$i+1]$/, @vowels)) {\n                    $count++;\n                }\n            }\n            elsif($i == scalar(@str_arr) - 1) {\n                if(grep(/^$str_arr[$i-1]$/, @vowels)) {\n                    $count++;\n                }\n            }\n            else {\n                if(grep(/^$str_arr[$i-1]$/, @vowels) || grep(/^$str_arr[$i+1]$/, @vowels)) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a', 'e', 'i', 'o', 'u');\n    my @test_str_arr = split(//, $test_str);\n    for (my $i = 0; $i < scalar @test_str_arr; $i++) {\n        if (grep(/^$test_str_arr[$i]$/, @vowels)) {\n            if ($i > 0) {\n                if (grep(/^$test_str_arr[$i - 1]$/, @vowels)) {\n                    $count++;\n                }\n            }\n            if ($i < scalar @test_str_arr - 1) {\n                if (grep(/^$test_str_arr[$i + 1]$/, @vowels)) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    for (my $i = 0; $i < length($test_str); $i++) {\n        if (is_vowel(substr($test_str, $i, 1)) && is_vowel(substr($test_str, $i + 1, 1))) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @chars = split(//, $test_str);\n    for (my $i = 0; $i < scalar(@chars); $i++) {\n        if ($chars[$i] =~ /[aeiou]/i) {\n            if ($i == 0) {\n                if ($chars[$i+1] =~ /[aeiou]/i) {\n                    $count++;\n                }\n            } elsif ($i == scalar(@chars) - 1) {\n                if ($chars[$i-1] =~ /[aeiou]/i) {\n                    $count++;\n                }\n            } else {\n                if ($chars[$i-1] =~ /[aeiou]/i || $chars[$i+1] =~ /[aeiou]/i) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a', 'e', 'i', 'o', 'u');\n    my @chars = split(//, $test_str);\n    for (my $i = 0; $i < scalar(@chars); $i++) {\n        if (grep {$_ eq $chars[$i]} @vowels) {\n            if ($i > 0 && grep {$_ eq $chars[$i-1]} @vowels) {\n                $count++;\n            }\n            if ($i < scalar(@chars) - 1 && grep {$_ eq $chars[$i+1]} @vowels) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a', 'e', 'i', 'o', 'u');\n    my @test_str = split(//, $test_str);\n    for(my $i = 0; $i < scalar(@test_str); $i++) {\n        if(grep(/^$test_str[$i]$/, @vowels)) {\n            if($i > 0 && grep(/^$test_str[$i-1]$/, @vowels)) {\n                $count++;\n            }\n            if($i < scalar(@test_str) - 1 && grep(/^$test_str[$i+1]$/, @vowels)) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $vowels = 'aeiou';\n    my $i = 0;\n    while ($i < length($test_str)) {\n        if (index($vowels, substr($test_str, $i, 1)) != -1) {\n            if ($i > 0) {\n                if (index($vowels, substr($test_str, $i - 1, 1)) != -1) {\n                    $count++;\n                }\n            }\n            if ($i < length($test_str) - 1) {\n                if (index($vowels, substr($test_str, $i + 1, 1)) != -1) {\n                    $count++;\n                }\n            }\n        }\n        $i++;\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a', 'e', 'i', 'o', 'u');\n    my @str_arr = split(//, $test_str);\n    for(my $i=0; $i<scalar(@str_arr); $i++) {\n        if(grep(/^$str_arr[$i]$/, @vowels)) {\n            if($i == 0) {\n                if(grep(/^$str_arr[$i+1]$/, @vowels)) {\n                    $count++;\n                }\n            } elsif($i == scalar(@str_arr)-1) {\n                if(grep(/^$str_arr[$i-1]$/, @vowels)) {\n                    $count++;\n                }\n            } else {\n                if(grep(/^$str_arr[$i+1]$/, @vowels) || grep(/^$str_arr[$i-1]$/, @vowels)) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a','e','i','o','u');\n    my @str_arr = split(//,$test_str);\n    for(my $i=0;$i<scalar(@str_arr);$i++) {\n        if(($i == 0) && (grep(/^$str_arr[$i]$/,@vowels))) {\n            $count++;\n        }\n        elsif(($i == scalar(@str_arr)-1) && (grep(/^$str_arr[$i]$/,@vowels))) {\n            $count++;\n        }\n        elsif((grep(/^$str_arr[$i]$/,@vowels)) && (grep(/^$str_arr[$i-1]$/,@vowels)) || (grep(/^$str_arr[$i+1]$/,@vowels))) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @chars = split(//, $test_str);\n    for (my $i = 0; $i < @chars; $i++) {\n        if ($chars[$i] =~ /[aeiou]/i) {\n            if ($i > 0) {\n                if ($chars[$i-1] =~ /[aeiou]/i) {\n                    $count++;\n                }\n            }\n            if ($i < @chars - 1) {\n                if ($chars[$i+1] =~ /[aeiou]/i) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $vowels = \"aeiou\";\n    for (my $i = 0; $i < length($test_str); $i++) {\n        my $char = substr($test_str, $i, 1);\n        if (index($vowels, $char) != -1) {\n            if ($i > 0 && index($vowels, substr($test_str, $i - 1, 1)) != -1) {\n                $count++;\n            }\n            if ($i < length($test_str) - 1 && index($vowels, substr($test_str, $i + 1, 1)) != -1) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $vowels = \"aeiou\";\n    my @chars = split //, $test_str;\n    for (my $i = 0; $i < scalar @chars; $i++) {\n        if (index($vowels, $chars[$i]) != -1) {\n            if ($i > 0 && index($vowels, $chars[$i-1]) != -1) {\n                $count++;\n            }\n            if ($i < scalar @chars - 1 && index($vowels, $chars[$i+1]) != -1) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $vowels = 'aeiou';\n    my @chars = split //, $test_str;\n    for (my $i = 0; $i < scalar @chars; $i++) {\n        if (index($vowels, $chars[$i]) != -1) {\n            if ($i == 0) {\n                if (index($vowels, $chars[$i+1]) != -1) {\n                    $count++;\n                }\n            } elsif ($i == scalar @chars - 1) {\n                if (index($vowels, $chars[$i-1]) != -1) {\n                    $count++;\n                }\n            } else {\n                if (index($vowels, $chars[$i-1]) != -1 || index($vowels, $chars[$i+1]) != -1) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @chars = split(//, $test_str);\n    for (my $i = 0; $i < @chars; $i++) {\n        if ($chars[$i] =~ /[aeiou]/i) {\n            if ($i > 0 && $chars[$i-1] =~ /[aeiou]/i) {\n                $count++;\n            }\n            if ($i < @chars - 1 && $chars[$i+1] =~ /[aeiou]/i) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $len = length($test_str);\n    for(my $i = 0; $i < $len; $i++) {\n        my $char = substr($test_str, $i, 1);\n        if($char =~ /[aeiou]/i) {\n            if($i > 0) {\n                my $prev_char = substr($test_str, $i - 1, 1);\n                if($prev_char =~ /[aeiou]/i) {\n                    $count++;\n                }\n            }\n            if($i < $len - 1) {\n                my $next_char = substr($test_str, $i + 1, 1);\n                if($next_char =~ /[aeiou]/i) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a', 'e', 'i', 'o', 'u');\n    my @str_arr = split(//, $test_str);\n    for (my $i = 0; $i < scalar(@str_arr); $i++) {\n        if (grep {$_ eq $str_arr[$i]} @vowels) {\n            if ($i > 0 && grep {$_ eq $str_arr[$i - 1]} @vowels) {\n                $count++;\n            }\n            if ($i < scalar(@str_arr) - 1 && grep {$_ eq $str_arr[$i + 1]} @vowels) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $len = length($test_str);\n    for (my $i = 0; $i < $len; $i++) {\n        my $char = substr($test_str, $i, 1);\n        if ($char =~ /[aeiou]/i) {\n            if ($i > 0) {\n                my $prev_char = substr($test_str, $i - 1, 1);\n                if ($prev_char =~ /[aeiou]/i) {\n                    $count++;\n                }\n            }\n            if ($i < $len - 1) {\n                my $next_char = substr($test_str, $i + 1, 1);\n                if ($next_char =~ /[aeiou]/i) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a', 'e', 'i', 'o', 'u');\n    for(my $i = 0; $i < length($test_str); $i++) {\n        if($i == 0) {\n            if(grep {$_ eq substr($test_str, $i, 1)} @vowels) {\n                if(grep {$_ eq substr($test_str, $i + 1, 1)} @vowels) {\n                    $count++;\n                }\n            }\n        }\n        elsif($i == length($test_str) - 1) {\n            if(grep {$_ eq substr($test_str, $i, 1)} @vowels) {\n                if(grep {$_ eq substr($test_str, $i - 1, 1)} @vowels) {\n                    $count++;\n                }\n            }\n        }\n        else {\n            if(grep {$_ eq substr($test_str, $i, 1)} @vowels) {\n                if(grep {$_ eq substr($test_str, $i - 1, 1)} @vowels) {\n                    $count++;\n                }\n                if(grep {$_ eq substr($test_str, $i + 1, 1)} @vowels) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my @vowels = ('a','e','i','o','u');\n    my $count = 0;\n    my @test_str_arr = split(//,$test_str);\n    for(my $i=0;$i<scalar(@test_str_arr);$i++){\n        if(grep(/^$test_str_arr[$i]$/,@vowels)){\n            if($i == 0){\n                if(grep(/^$test_str_arr[$i+1]$/,@vowels)){\n                    $count++;\n                }\n            }\n            elsif($i == scalar(@test_str_arr)-1){\n                if(grep(/^$test_str_arr[$i-1]$/,@vowels)){\n                    $count++;\n                }\n            }\n            else{\n                if(grep(/^$test_str_arr[$i-1]$/,@vowels) || grep(/^$test_str_arr[$i+1]$/,@vowels)){\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    for(my $i = 0; $i < length($test_str); $i++) {\n        my $char = substr($test_str, $i, 1);\n        if($char =~ /[aeiou]/i) {\n            if($i > 0) {\n                my $prev_char = substr($test_str, $i-1, 1);\n                if($prev_char =~ /[aeiou]/i) {\n                    $count++;\n                }\n            }\n            if($i < length($test_str) - 1) {\n                my $next_char = substr($test_str, $i+1, 1);\n                if($next_char =~ /[aeiou]/i) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @chars = split //, $test_str;\n    for(my $i = 0; $i < scalar(@chars); $i++) {\n        if($chars[$i] =~ /[aeiou]/i) {\n            if($i == 0) {\n                if($chars[$i+1] =~ /[aeiou]/i) {\n                    $count++;\n                }\n            }\n            elsif($i == scalar(@chars) - 1) {\n                if($chars[$i-1] =~ /[aeiou]/i) {\n                    $count++;\n                }\n            }\n            else {\n                if($chars[$i-1] =~ /[aeiou]/i || $chars[$i+1] =~ /[aeiou]/i) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @chars = split(//, $test_str);\n    for (my $i = 0; $i < @chars; $i++) {\n        if ($chars[$i] =~ /[aeiou]/i) {\n            if ($i == 0) {\n                if ($chars[$i+1] =~ /[aeiou]/i) {\n                    $count++;\n                }\n            } elsif ($i == @chars - 1) {\n                if ($chars[$i-1] =~ /[aeiou]/i) {\n                    $count++;\n                }\n            } else {\n                if ($chars[$i-1] =~ /[aeiou]/i || $chars[$i+1] =~ /[aeiou]/i) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a', 'e', 'i', 'o', 'u');\n    my @str_arr = split(//, $test_str);\n    for(my $i = 0; $i < scalar(@str_arr); $i++) {\n        if(($i == 0 && grep(/^$str_arr[$i+1]$/, @vowels)) || ($i == scalar(@str_arr)-1 && grep(/^$str_arr[$i-1]$/, @vowels)) || (grep(/^$str_arr[$i-1]$/, @vowels) && grep(/^$str_arr[$i+1]$/, @vowels))) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @chars = split(//, $test_str);\n    for(my $i = 0; $i < @chars; $i++) {\n        if(is_vowel($chars[$i]) && is_vowel($chars[$i+1])) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $vowels = \"aeiou\";\n    for(my $i = 0; $i < length($test_str); $i++) {\n        if(index($vowels, substr($test_str, $i, 1)) != -1) {\n            if($i > 0 && index($vowels, substr($test_str, $i - 1, 1)) != -1) {\n                $count++;\n            }\n            if($i < length($test_str) - 1 && index($vowels, substr($test_str, $i + 1, 1)) != -1) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a', 'e', 'i', 'o', 'u');\n    my @chars = split(//, $test_str);\n    for (my $i = 0; $i < @chars; $i++) {\n        if (grep(/^$chars[$i]$/, @vowels)) {\n            if ($i > 0 && grep(/^$chars[$i-1]$/, @vowels)) {\n                $count++;\n            }\n            if ($i < @chars - 1 && grep(/^$chars[$i+1]$/, @vowels)) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a', 'e', 'i', 'o', 'u');\n    my @chars = split(//, $test_str);\n    for (my $i = 0; $i < scalar(@chars); $i++) {\n        if (grep {$_ eq $chars[$i]} @vowels) {\n            if ($i > 0) {\n                if (grep {$_ eq $chars[$i - 1]} @vowels) {\n                    $count++;\n                }\n            }\n            if ($i < scalar(@chars) - 1) {\n                if (grep {$_ eq $chars[$i + 1]} @vowels) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $vowels = \"aeiou\";\n    my @chars = split(//, $test_str);\n    for (my $i = 0; $i < scalar(@chars); $i++) {\n        if (index($vowels, $chars[$i]) != -1) {\n            if ($i > 0 && index($vowels, $chars[$i-1]) != -1) {\n                $count++;\n            }\n            if ($i < scalar(@chars) - 1 && index($vowels, $chars[$i+1]) != -1) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $vowels = \"aeiou\";\n    my $prev_char = \"\";\n    my $next_char = \"\";\n    for (my $i = 0; $i < length($test_str); $i++) {\n        $prev_char = substr($test_str, $i - 1, 1);\n        $next_char = substr($test_str, $i + 1, 1);\n        if (index($vowels, substr($test_str, $i, 1)) != -1) {\n            if (index($vowels, $prev_char) != -1 || index($vowels, $next_char) != -1) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a', 'e', 'i', 'o', 'u');\n    my @chars = split(//, $test_str);\n    for (my $i = 0; $i < scalar(@chars); $i++) {\n        if (grep(/^$chars[$i]$/, @vowels)) {\n            if ($i > 0 && grep(/^$chars[$i-1]$/, @vowels)) {\n                $count++;\n            }\n            if ($i < scalar(@chars) - 1 && grep(/^$chars[$i+1]$/, @vowels)) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a','e','i','o','u');\n    my @test_str_arr = split //, $test_str;\n    for my $i (0..$#test_str_arr) {\n        if (grep {$test_str_arr[$i] eq $_} @vowels) {\n            if ($i > 0) {\n                if (grep {$test_str_arr[$i-1] eq $_} @vowels) {\n                    $count++;\n                }\n            }\n            if ($i < $#test_str_arr) {\n                if (grep {$test_str_arr[$i+1] eq $_} @vowels) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a','e','i','o','u');\n    my @str_arr = split(//,$test_str);\n    for(my $i=0;$i<scalar(@str_arr);$i++) {\n        if(($i == 0) && (grep {$_ eq $str_arr[$i+1]} @vowels)) {\n            $count++;\n        }\n        elsif(($i == scalar(@str_arr)-1) && (grep {$_ eq $str_arr[$i-1]} @vowels)) {\n            $count++;\n        }\n        elsif((grep {$_ eq $str_arr[$i+1]} @vowels) || (grep {$_ eq $str_arr[$i-1]} @vowels)) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @chars = split(//, $test_str);\n    for (my $i = 0; $i < scalar(@chars); $i++) {\n        if ($chars[$i] =~ /[aeiou]/i) {\n            if ($i > 0) {\n                if ($chars[$i-1] =~ /[aeiou]/i) {\n                    $count++;\n                }\n            }\n            if ($i < scalar(@chars) - 1) {\n                if ($chars[$i+1] =~ /[aeiou]/i) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a', 'e', 'i', 'o', 'u');\n    my @chars = split(//, $test_str);\n    for (my $i = 0; $i < @chars; $i++) {\n        if (grep(/^$chars[$i]$/, @vowels)) {\n            if ($i > 0) {\n                if (grep(/^$chars[$i-1]$/, @vowels)) {\n                    $count++;\n                }\n            }\n            if ($i < @chars - 1) {\n                if (grep(/^$chars[$i+1]$/, @vowels)) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a', 'e', 'i', 'o', 'u');\n    my @str_arr = split('', $test_str);\n    for(my $i = 0; $i < scalar(@str_arr); $i++) {\n        if(grep(/^$str_arr[$i]$/, @vowels)) {\n            if($i == 0) {\n                if(grep(/^$str_arr[$i+1]$/, @vowels)) {\n                    $count++;\n                }\n            }\n            elsif($i == scalar(@str_arr) - 1) {\n                if(grep(/^$str_arr[$i-1]$/, @vowels)) {\n                    $count++;\n                }\n            }\n            else {\n                if(grep(/^$str_arr[$i-1]$/, @vowels) || grep(/^$str_arr[$i+1]$/, @vowels)) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a', 'e', 'i', 'o', 'u');\n    my @chars = split(//, $test_str);\n    for (my $i = 0; $i < scalar(@chars); $i++) {\n        if (grep {$_ eq $chars[$i]} @vowels) {\n            if ($i > 0 && grep {$_ eq $chars[$i - 1]} @vowels) {\n                $count++;\n            }\n            if ($i < scalar(@chars) - 1 && grep {$_ eq $chars[$i + 1]} @vowels) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a', 'e', 'i', 'o', 'u');\n    my @str = split('', $test_str);\n    for (my $i = 0; $i < @str; $i++) {\n        if (grep(/^$str[$i]$/, @vowels)) {\n            if ($i > 0) {\n                if (grep(/^$str[$i - 1]$/, @vowels)) {\n                    $count++;\n                }\n            }\n            if ($i < @str - 1) {\n                if (grep(/^$str[$i + 1]$/, @vowels)) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @chars = split(//, $test_str);\n    for (my $i = 0; $i < scalar @chars; $i++) {\n        if ($chars[$i] =~ /[aeiou]/i) {\n            if ($i > 0 && $chars[$i-1] =~ /[aeiou]/i) {\n                $count++;\n            }\n            if ($i < scalar @chars - 1 && $chars[$i+1] =~ /[aeiou]/i) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a', 'e', 'i', 'o', 'u');\n    my @str_arr = split(//, $test_str);\n    for(my $i = 0; $i < @str_arr; $i++) {\n        if(grep(/^$str_arr[$i]$/, @vowels)) {\n            if($i == 0) {\n                if(grep(/^$str_arr[$i+1]$/, @vowels)) {\n                    $count++;\n                }\n            }\n            elsif($i == @str_arr - 1) {\n                if(grep(/^$str_arr[$i-1]$/, @vowels)) {\n                    $count++;\n                }\n            }\n            else {\n                if(grep(/^$str_arr[$i+1]$/, @vowels) || grep(/^$str_arr[$i-1]$/, @vowels)) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my @vowels = ('a', 'e', 'i', 'o', 'u');\n    my @test_str = split(//, $test_str);\n    my $count = 0;\n    for (my $i = 0; $i < scalar(@test_str); $i++) {\n        if (grep {$_ eq $test_str[$i]} @vowels) {\n            if ($i == 0) {\n                if (grep {$_ eq $test_str[$i + 1]} @vowels) {\n                    $count++;\n                }\n            }\n            elsif ($i == scalar(@test_str) - 1) {\n                if (grep {$_ eq $test_str[$i - 1]} @vowels) {\n                    $count++;\n                }\n            }\n            else {\n                if (grep {$_ eq $test_str[$i - 1]} @vowels || grep {$_ eq $test_str[$i + 1]} @vowels) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a','e','i','o','u');\n    my @str_arr = split(//,$test_str);\n    for(my $i=0;$i<scalar(@str_arr);$i++){\n        if(grep(/^$str_arr[$i]$/,@vowels)){\n            if($i>0 && grep(/^$str_arr[$i-1]$/,@vowels)){\n                $count++;\n            }\n            if($i<scalar(@str_arr)-1 && grep(/^$str_arr[$i+1]$/,@vowels)){\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a', 'e', 'i', 'o', 'u');\n    my @str_arr = split('', $test_str);\n    for (my $i = 0; $i < scalar(@str_arr); $i++) {\n        if (grep(/^$str_arr[$i]$/, @vowels)) {\n            if ($i > 0 && grep(/^$str_arr[$i-1]$/, @vowels)) {\n                $count++;\n            }\n            if ($i < scalar(@str_arr) - 1 && grep(/^$str_arr[$i+1]$/, @vowels)) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $vowels = \"aeiou\";\n    my $str_len = length($test_str);\n    for(my $i = 0; $i < $str_len; $i++) {\n        my $char = substr($test_str, $i, 1);\n        if(index($vowels, $char) >= 0) {\n            if(($i > 0) && (index($vowels, substr($test_str, $i - 1, 1)) >= 0)) {\n                $count++;\n            }\n            if(($i < $str_len - 1) && (index($vowels, substr($test_str, $i + 1, 1)) >= 0)) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a', 'e', 'i', 'o', 'u');\n    my @chars = split(//, $test_str);\n    for(my $i = 0; $i < @chars; $i++) {\n        if(grep {$chars[$i] eq $_} @vowels) {\n            if($i > 0 && grep {$chars[$i-1] eq $_} @vowels) {\n                $count++;\n            }\n            if($i < @chars - 1 && grep {$chars[$i+1] eq $_} @vowels) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @chars = split //, $test_str;\n    for (my $i = 0; $i < scalar @chars; $i++) {\n        if (is_vowel($chars[$i]) && is_vowel($chars[$i-1]) || is_vowel($chars[$i]) && is_vowel($chars[$i+1])) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a','e','i','o','u');\n    my @str_arr = split(//,$test_str);\n    for(my $i=0;$i<scalar(@str_arr);$i++) {\n        if(grep(/^$str_arr[$i]$/,@vowels)) {\n            if($i>0) {\n                if(grep(/^$str_arr[$i-1]$/,@vowels)) {\n                    $count++;\n                }\n            }\n            if($i<scalar(@str_arr)-1) {\n                if(grep(/^$str_arr[$i+1]$/,@vowels)) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $vowels = 'aeiou';\n    my @test_str = split(//, $test_str);\n    for (my $i = 0; $i < @test_str; $i++) {\n        if ($i == 0) {\n            if (index($vowels, $test_str[$i]) != -1 && index($vowels, $test_str[$i+1]) != -1) {\n                $count++;\n            }\n        } elsif ($i == @test_str - 1) {\n            if (index($vowels, $test_str[$i]) != -1 && index($vowels, $test_str[$i-1]) != -1) {\n                $count++;\n            }\n        } else {\n            if (index($vowels, $test_str[$i]) != -1 && (index($vowels, $test_str[$i-1]) != -1 || index($vowels, $test_str[$i+1]) != -1)) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $vowels = 'aeiou';\n    my $len = length($test_str);\n    for(my $i = 0; $i < $len; $i++) {\n        if(index($vowels, substr($test_str, $i, 1)) != -1) {\n            if($i > 0 && index($vowels, substr($test_str, $i - 1, 1)) != -1) {\n                $count++;\n            }\n            if($i < $len - 1 && index($vowels, substr($test_str, $i + 1, 1)) != -1) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = qw(a e i o u);\n    my @chars = split //, $test_str;\n    for (my $i = 0; $i < @chars; $i++) {\n        if (grep {$_ eq $chars[$i]} @vowels) {\n            if ($i == 0) {\n                if (grep {$_ eq $chars[$i+1]} @vowels) {\n                    $count++;\n                }\n            } elsif ($i == @chars - 1) {\n                if (grep {$_ eq $chars[$i-1]} @vowels) {\n                    $count++;\n                }\n            } else {\n                if (grep {$_ eq $chars[$i-1]} @vowels || grep {$_ eq $chars[$i+1]} @vowels) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a', 'e', 'i', 'o', 'u');\n    my @test_str_arr = split('', $test_str);\n    for (my $i = 0; $i < scalar(@test_str_arr); $i++) {\n        if (grep(/^$test_str_arr[$i]$/, @vowels)) {\n            if ($i > 0) {\n                if (grep(/^$test_str_arr[$i - 1]$/, @vowels)) {\n                    $count++;\n                }\n            }\n            if ($i < scalar(@test_str_arr) - 1) {\n                if (grep(/^$test_str_arr[$i + 1]$/, @vowels)) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    for (my $i = 0; $i < length($test_str); $i++) {\n        if ($i == 0) {\n            if ($vowels{substr($test_str, $i, 1)} && $vowels{substr($test_str, $i + 1, 1)}) {\n                $count++;\n            }\n        } elsif ($i == length($test_str) - 1) {\n            if ($vowels{substr($test_str, $i, 1)} && $vowels{substr($test_str, $i - 1, 1)}) {\n                $count++;\n            }\n        } else {\n            if ($vowels{substr($test_str, $i, 1)} && ($vowels{substr($test_str, $i - 1, 1)} || $vowels{substr($test_str, $i + 1, 1)})) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @chars = split //, $test_str;\n    for (my $i = 0; $i < @chars; $i++) {\n        if ($chars[$i] =~ /[aeiou]/i) {\n            if ($i == 0) {\n                if ($chars[$i+1] =~ /[aeiou]/i) {\n                    $count++;\n                }\n            } elsif ($i == @chars - 1) {\n                if ($chars[$i-1] =~ /[aeiou]/i) {\n                    $count++;\n                }\n            } else {\n                if ($chars[$i-1] =~ /[aeiou]/i || $chars[$i+1] =~ /[aeiou]/i) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @chars = split(//, $test_str);\n    for(my $i = 0; $i < scalar(@chars); $i++) {\n        if(is_vowel($chars[$i])) {\n            if($i == 0) {\n                if(is_vowel($chars[$i+1])) {\n                    $count++;\n                }\n            } elsif($i == scalar(@chars) - 1) {\n                if(is_vowel($chars[$i-1])) {\n                    $count++;\n                }\n            } else {\n                if(is_vowel($chars[$i-1]) || is_vowel($chars[$i+1])) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a','e','i','o','u');\n    my @str = split(//,$test_str);\n    for(my $i=0; $i<scalar(@str); $i++) {\n        if(grep(/^$str[$i]$/,@vowels)) {\n            if($i == 0) {\n                if(grep(/^$str[$i+1]$/,@vowels)) {\n                    $count++;\n                }\n            } elsif($i == scalar(@str)-1) {\n                if(grep(/^$str[$i-1]$/,@vowels)) {\n                    $count++;\n                }\n            } else {\n                if(grep(/^$str[$i-1]$/,@vowels) || grep(/^$str[$i+1]$/,@vowels)) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $i = 0;\n    my $len = length($test_str);\n    while ($i < $len) {\n        my $char = substr($test_str, $i, 1);\n        if ($char =~ /[aeiou]/) {\n            if ($i > 0) {\n                my $prev_char = substr($test_str, $i - 1, 1);\n                if ($prev_char =~ /[aeiou]/) {\n                    $count++;\n                }\n            }\n            if ($i < $len - 1) {\n                my $next_char = substr($test_str, $i + 1, 1);\n                if ($next_char =~ /[aeiou]/) {\n                    $count++;\n                }\n            }\n        }\n        $i++;\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a','e','i','o','u');\n    my @str_arr = split(//,$test_str);\n    for(my $i=0; $i<=$#str_arr; $i++) {\n        if(grep(/^$str_arr[$i]$/,@vowels)) {\n            if($i == 0) {\n                if(grep(/^$str_arr[$i+1]$/,@vowels)) {\n                    $count++;\n                }\n            }\n            elsif($i == $#str_arr) {\n                if(grep(/^$str_arr[$i-1]$/,@vowels)) {\n                    $count++;\n                }\n            }\n            else {\n                if(grep(/^$str_arr[$i-1]$/,@vowels) || grep(/^$str_arr[$i+1]$/,@vowels)) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @chars = split(//, $test_str);\n    for (my $i = 0; $i < scalar(@chars); $i++) {\n        if (is_vowel($chars[$i]) && is_vowel($chars[$i+1])) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @chars = split(//, $test_str);\n    for (my $i = 0; $i < scalar(@chars); $i++) {\n        if ($chars[$i] =~ /[aeiou]/i) {\n            if ($i > 0 && $chars[$i-1] =~ /[aeiou]/i) {\n                $count++;\n            }\n            if ($i < scalar(@chars) - 1 && $chars[$i+1] =~ /[aeiou]/i) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my @vowels = (\"a\", \"e\", \"i\", \"o\", \"u\");\n    my $count = 0;\n    for (my $i = 0; $i < length($test_str); $i++) {\n        if ($i == 0) {\n            if (grep {$_ eq substr($test_str, $i + 1, 1)} @vowels) {\n                $count++;\n            }\n        } elsif ($i == length($test_str) - 1) {\n            if (grep {$_ eq substr($test_str, $i - 1, 1)} @vowels) {\n                $count++;\n            }\n        } else {\n            if (grep {$_ eq substr($test_str, $i - 1, 1)} @vowels || grep {$_ eq substr($test_str, $i + 1, 1)} @vowels) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $str_len = length($test_str);\n    for(my $i=0; $i<$str_len; $i++) {\n        my $char = substr($test_str, $i, 1);\n        if($char =~ /[aeiou]/i) {\n            if($i == 0) {\n                if(substr($test_str, $i+1, 1) =~ /[aeiou]/i) {\n                    $count++;\n                }\n            }\n            elsif($i == $str_len-1) {\n                if(substr($test_str, $i-1, 1) =~ /[aeiou]/i) {\n                    $count++;\n                }\n            }\n            else {\n                if(substr($test_str, $i-1, 1) =~ /[aeiou]/i || substr($test_str, $i+1, 1) =~ /[aeiou]/i) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a', 'e', 'i', 'o', 'u');\n    my @str_arr = split(//, $test_str);\n    for (my $i = 0; $i < scalar(@str_arr); $i++) {\n        if (grep(/^$str_arr[$i]$/, @vowels)) {\n            if ($i == 0) {\n                if (grep(/^$str_arr[$i+1]$/, @vowels)) {\n                    $count++;\n                }\n            } elsif ($i == scalar(@str_arr) - 1) {\n                if (grep(/^$str_arr[$i-1]$/, @vowels)) {\n                    $count++;\n                }\n            } else {\n                if (grep(/^$str_arr[$i-1]$/, @vowels) || grep(/^$str_arr[$i+1]$/, @vowels)) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my @vowels = ('a', 'e', 'i', 'o', 'u');\n    my $count = 0;\n    my $i = 0;\n    while ($i < length($test_str)) {\n        my $char = substr($test_str, $i, 1);\n        if (grep(/^$char$/, @vowels)) {\n            if ($i > 0) {\n                my $prev_char = substr($test_str, $i - 1, 1);\n                if (grep(/^$prev_char$/, @vowels)) {\n                    $count++;\n                }\n            }\n            if ($i < length($test_str) - 1) {\n                my $next_char = substr($test_str, $i + 1, 1);\n                if (grep(/^$next_char$/, @vowels)) {\n                    $count++;\n                }\n            }\n        }\n        $i++;\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $vowels = 'aeiou';\n    for (my $i = 0; $i < length($test_str); $i++) {\n        if (index($vowels, substr($test_str, $i, 1)) != -1) {\n            if ($i > 0 && index($vowels, substr($test_str, $i - 1, 1)) != -1) {\n                $count++;\n            }\n            if ($i < length($test_str) - 1 && index($vowels, substr($test_str, $i + 1, 1)) != -1) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    for (my $i = 0; $i < length($test_str); $i++) {\n        my $char = substr($test_str, $i, 1);\n        if ($char =~ /[aeiou]/) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    for (my $i = 0; $i < length($test_str); $i++) {\n        if (is_vowel(substr($test_str, $i, 1)) && is_vowel(substr($test_str, $i + 1, 1))) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a', 'e', 'i', 'o', 'u');\n    my @str_arr = split('', $test_str);\n    for (my $i = 0; $i < scalar(@str_arr); $i++) {\n        if ($i == 0) {\n            if (grep {$_ eq $str_arr[$i+1]} @vowels) {\n                $count++;\n            }\n        } elsif ($i == scalar(@str_arr) - 1) {\n            if (grep {$_ eq $str_arr[$i-1]} @vowels) {\n                $count++;\n            }\n        } else {\n            if (grep {$_ eq $str_arr[$i-1]} @vowels || grep {$_ eq $str_arr[$i+1]} @vowels) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = qw(a e i o u);\n    my @chars = split //, $test_str;\n    for my $i (0 .. $#chars) {\n        if ($i == 0) {\n            if (grep {$_ eq $chars[$i+1]} @vowels) {\n                $count++;\n            }\n        }\n        elsif ($i == $#chars) {\n            if (grep {$_ eq $chars[$i-1]} @vowels) {\n                $count++;\n            }\n        }\n        else {\n            if (grep {$_ eq $chars[$i-1]} @vowels || grep {$_ eq $chars[$i+1]} @vowels) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @chars = split(//, $test_str);\n    for (my $i = 0; $i < scalar(@chars); $i++) {\n        if ($chars[$i] =~ /[aeiou]/i) {\n            if ($i == 0) {\n                if ($chars[$i+1] =~ /[aeiou]/i) {\n                    $count++;\n                }\n            }\n            elsif ($i == scalar(@chars) - 1) {\n                if ($chars[$i-1] =~ /[aeiou]/i) {\n                    $count++;\n                }\n            }\n            else {\n                if ($chars[$i-1] =~ /[aeiou]/i || $chars[$i+1] =~ /[aeiou]/i) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $vowels = \"aeiou\";\n    my $length = length($test_str);\n    for(my $i = 0; $i < $length; $i++) {\n        my $char = substr($test_str, $i, 1);\n        if(index($vowels, $char) != -1) {\n            if($i > 0) {\n                my $prev_char = substr($test_str, $i - 1, 1);\n                if(index($vowels, $prev_char) != -1) {\n                    $count++;\n                }\n            }\n            if($i < $length - 1) {\n                my $next_char = substr($test_str, $i + 1, 1);\n                if(index($vowels, $next_char) != -1) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a', 'e', 'i', 'o', 'u');\n    my @str_arr = split(//, $test_str);\n    for(my $i = 0; $i < scalar(@str_arr); $i++) {\n        if (grep {$_ eq $str_arr[$i]} @vowels) {\n            if ($i > 0 && grep {$_ eq $str_arr[$i-1]} @vowels) {\n                $count++;\n            }\n            if ($i < scalar(@str_arr) - 1 && grep {$_ eq $str_arr[$i+1]} @vowels) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a', 'e', 'i', 'o', 'u');\n    my @str_arr = split('', $test_str);\n    for (my $i = 0; $i < scalar(@str_arr); $i++) {\n        if (grep { $str_arr[$i] eq $_ } @vowels) {\n            if ($i == 0) {\n                if (grep { $str_arr[$i+1] eq $_ } @vowels) {\n                    $count++;\n                }\n            } elsif ($i == scalar(@str_arr) - 1) {\n                if (grep { $str_arr[$i-1] eq $_ } @vowels) {\n                    $count++;\n                }\n            } else {\n                if (grep { $str_arr[$i-1] eq $_ } @vowels || grep { $str_arr[$i+1] eq $_ } @vowels) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a', 'e', 'i', 'o', 'u');\n    my @chars = split('', $test_str);\n    for (my $i = 0; $i < scalar(@chars); $i++) {\n        if (grep(/$chars[$i]/, @vowels)) {\n            if ($i > 0) {\n                if (grep(/$chars[$i-1]/, @vowels)) {\n                    $count++;\n                }\n            }\n            if ($i < scalar(@chars) - 1) {\n                if (grep(/$chars[$i+1]/, @vowels)) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @chars = split(//,$test_str);\n    my $len = scalar @chars;\n    for(my $i=0;$i<$len;$i++) {\n        if($chars[$i] =~ /[aeiou]/i) {\n            if($i == 0) {\n                if($chars[$i+1] =~ /[aeiou]/i) {\n                    $count++;\n                }\n            } elsif($i == $len-1) {\n                if($chars[$i-1] =~ /[aeiou]/i) {\n                    $count++;\n                }\n            } else {\n                if($chars[$i-1] =~ /[aeiou]/i || $chars[$i+1] =~ /[aeiou]/i) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    for (my $i = 0; $i < length($test_str); $i++) {\n        if (is_vowel(substr($test_str, $i, 1)) &&\n            (is_vowel(substr($test_str, $i + 1, 1)) ||\n             is_vowel(substr($test_str, $i - 1, 1)))) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = qw(a e i o u);\n    my @test_str = split(//, $test_str);\n    for (my $i = 0; $i < scalar @test_str; $i++) {\n        if (grep {$_ eq $test_str[$i]} @vowels) {\n            if ($i > 0 && grep {$_ eq $test_str[$i-1]} @vowels) {\n                $count++;\n            }\n            if ($i < scalar @test_str - 1 && grep {$_ eq $test_str[$i+1]} @vowels) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @chars = split(//, $test_str);\n    for (my $i = 0; $i < scalar(@chars); $i++) {\n        if ($chars[$i] =~ /[aeiou]/i) {\n            if ($i > 0 && $chars[$i - 1] =~ /[aeiou]/i) {\n                $count++;\n            }\n            if ($i < scalar(@chars) - 1 && $chars[$i + 1] =~ /[aeiou]/i) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str_arr = split(//, $test_str);\n    my @vowels = ('a', 'e', 'i', 'o', 'u');\n    for(my $i = 0; $i < scalar(@str_arr); $i++) {\n        if(grep(/^$str_arr[$i]$/, @vowels)) {\n            if($i > 0) {\n                if(grep(/^$str_arr[$i-1]$/, @vowels)) {\n                    $count++;\n                }\n            }\n            if($i < scalar(@str_arr)-1) {\n                if(grep(/^$str_arr[$i+1]$/, @vowels)) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a', 'e', 'i', 'o', 'u');\n    my @chars = split(//, $test_str);\n    for(my $i = 0; $i < scalar(@chars); $i++) {\n        if(($i > 0 && grep(/^$chars[$i-1]$/, @vowels)) || ($i < scalar(@chars) - 1 && grep(/^$chars[$i+1]$/, @vowels))) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = qw(a e i o u);\n    my @chars = split(//, $test_str);\n    for (my $i = 0; $i < $#chars; $i++) {\n        if (grep {$_ eq $chars[$i]} @vowels) {\n            if (grep {$_ eq $chars[$i+1]} @vowels) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $vowels = 'aeiou';\n    my $len = length($test_str);\n    for (my $i = 0; $i < $len; $i++) {\n        if (index($vowels, substr($test_str, $i, 1)) != -1) {\n            if ($i > 0 && index($vowels, substr($test_str, $i - 1, 1)) != -1) {\n                $count++;\n            }\n            if ($i < $len - 1 && index($vowels, substr($test_str, $i + 1, 1)) != -1) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a', 'e', 'i', 'o', 'u');\n    my @str_arr = split(//, $test_str);\n    for (my $i = 0; $i < scalar(@str_arr); $i++) {\n        if (grep {$_ eq $str_arr[$i]} @vowels) {\n            if ($i > 0 && grep {$_ eq $str_arr[$i-1]} @vowels) {\n                $count++;\n            }\n            if ($i < scalar(@str_arr)-1 && grep {$_ eq $str_arr[$i+1]} @vowels) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a', 'e', 'i', 'o', 'u');\n    my @str_arr = split(//, $test_str);\n    for (my $i = 0; $i < scalar(@str_arr); $i++) {\n        if (grep {$_ eq $str_arr[$i]} @vowels) {\n            if ($i > 0 && grep {$_ eq $str_arr[$i - 1]} @vowels) {\n                $count++;\n            }\n            if ($i < scalar(@str_arr) - 1 && grep {$_ eq $str_arr[$i + 1]} @vowels) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $vowels = \"aeiou\";\n    my @test_str_array = split //, $test_str;\n    for(my $i = 0; $i < scalar @test_str_array; $i++) {\n        if($i == 0) {\n            if(index($vowels, $test_str_array[$i]) != -1) {\n                $count++;\n            }\n        }\n        else {\n            if(index($vowels, $test_str_array[$i]) != -1 && index($vowels, $test_str_array[$i-1]) != -1) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a', 'e', 'i', 'o', 'u');\n    my @str_arr = split(//, $test_str);\n    for (my $i = 0; $i < scalar(@str_arr); $i++) {\n        if (grep {$_ eq $str_arr[$i]} @vowels) {\n            if ($i > 0 && grep {$_ eq $str_arr[$i-1]} @vowels) {\n                $count++;\n            }\n            if ($i < scalar(@str_arr) - 1 && grep {$_ eq $str_arr[$i+1]} @vowels) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    for(my $i = 0; $i < length($test_str); $i++) {\n        if(($i == 0 || $i == length($test_str) - 1) && is_vowel(substr($test_str, $i, 1))) {\n            $count++;\n        }\n        elsif(is_vowel(substr($test_str, $i, 1)) && (is_vowel(substr($test_str, $i - 1, 1)) || is_vowel(substr($test_str, $i + 1, 1)))) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a', 'e', 'i', 'o', 'u');\n    my @test_str_arr = split('', $test_str);\n    for(my $i=0; $i<=$#test_str_arr; $i++) {\n        if(grep(/^$test_str_arr[$i]$/, @vowels)) {\n            if($i == 0) {\n                if(grep(/^$test_str_arr[$i+1]$/, @vowels)) {\n                    $count++;\n                }\n            }\n            elsif($i == $#test_str_arr) {\n                if(grep(/^$test_str_arr[$i-1]$/, @vowels)) {\n                    $count++;\n                }\n            }\n            else {\n                if(grep(/^$test_str_arr[$i-1]$/, @vowels) || grep(/^$test_str_arr[$i+1]$/, @vowels)) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a', 'e', 'i', 'o', 'u');\n    my @str_arr = split(//, $test_str);\n    for (my $i = 0; $i < scalar @str_arr; $i++) {\n        if (grep {$_ eq $str_arr[$i]} @vowels) {\n            if ($i == 0) {\n                if (grep {$_ eq $str_arr[$i + 1]} @vowels) {\n                    $count++;\n                }\n            } elsif ($i == scalar @str_arr - 1) {\n                if (grep {$_ eq $str_arr[$i - 1]} @vowels) {\n                    $count++;\n                }\n            } else {\n                if (grep {$_ eq $str_arr[$i - 1]} @vowels || grep {$_ eq $str_arr[$i + 1]} @vowels) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @str_arr = split(//, $test_str);\n    my @vowels = ('a', 'e', 'i', 'o', 'u');\n    for (my $i = 0; $i < scalar(@str_arr); $i++) {\n        if (grep(/^$str_arr[$i]$/, @vowels)) {\n            if ($i > 0) {\n                if (grep(/^$str_arr[$i - 1]$/, @vowels)) {\n                    $count++;\n                }\n            }\n            if ($i < scalar(@str_arr) - 1) {\n                if (grep(/^$str_arr[$i + 1]$/, @vowels)) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a','e','i','o','u');\n    my @str_arr = split(//,$test_str);\n    for(my $i=0;$i<=$#str_arr;$i++) {\n        if(grep(/^$str_arr[$i]$/,@vowels)) {\n            if($i == 0) {\n                if(grep(/^$str_arr[$i+1]$/,@vowels)) {\n                    $count++;\n                }\n            }\n            elsif($i == $#str_arr) {\n                if(grep(/^$str_arr[$i-1]$/,@vowels)) {\n                    $count++;\n                }\n            }\n            else {\n                if(grep(/^$str_arr[$i-1]$/,@vowels) || grep(/^$str_arr[$i+1]$/,@vowels)) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $vowels = \"aeiou\";\n    for(my $i = 0; $i < length($test_str); $i++) {\n        if(index($vowels, substr($test_str, $i, 1)) != -1) {\n            if($i > 0 && index($vowels, substr($test_str, $i - 1, 1)) != -1) {\n                $count++;\n            }\n            if($i < length($test_str) - 1 && index($vowels, substr($test_str, $i + 1, 1)) != -1) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a', 'e', 'i', 'o', 'u');\n    my @chars = split(//, $test_str);\n    for (my $i = 0; $i < scalar(@chars); $i++) {\n        if (grep(/^$chars[$i]$/, @vowels)) {\n            if ($i > 0 && grep(/^$chars[$i-1]$/, @vowels)) {\n                $count++;\n            }\n            if ($i < scalar(@chars) - 1 && grep(/^$chars[$i+1]$/, @vowels)) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $vowels = \"aeiou\";\n    my $len = length($test_str);\n    for(my $i=0; $i<$len; $i++) {\n        if(index($vowels, substr($test_str, $i, 1)) != -1) {\n            if($i > 0) {\n                if(index($vowels, substr($test_str, $i-1, 1)) != -1) {\n                    $count++;\n                }\n            }\n            if($i < $len-1) {\n                if(index($vowels, substr($test_str, $i+1, 1)) != -1) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a', 'e', 'i', 'o', 'u');\n    my @chars = split(//, $test_str);\n    for (my $i = 0; $i < scalar(@chars); $i++) {\n        if (grep {$_ eq $chars[$i]} @vowels) {\n            if ($i > 0 && grep {$_ eq $chars[$i - 1]} @vowels) {\n                $count++;\n            }\n            if ($i < scalar(@chars) - 1 && grep {$_ eq $chars[$i + 1]} @vowels) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = qw(a e i o u);\n    my @chars = split(//, $test_str);\n    for(my $i = 0; $i < scalar(@chars); $i++) {\n        if(grep(/^$chars[$i]$/, @vowels)) {\n            if($i == 0) {\n                if(grep(/^$chars[$i+1]$/, @vowels)) {\n                    $count++;\n                }\n            } elsif($i == scalar(@chars) - 1) {\n                if(grep(/^$chars[$i-1]$/, @vowels)) {\n                    $count++;\n                }\n            } else {\n                if(grep(/^$chars[$i-1]$/, @vowels) || grep(/^$chars[$i+1]$/, @vowels)) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a', 'e', 'i', 'o', 'u');\n    my @chars = split(//, $test_str);\n    for (my $i = 0; $i < scalar(@chars); $i++) {\n        if (grep {$_ eq $chars[$i]} @vowels) {\n            if ($i > 0 && grep {$_ eq $chars[$i-1]} @vowels) {\n                $count++;\n            }\n            if ($i < scalar(@chars)-1 && grep {$_ eq $chars[$i+1]} @vowels) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a','e','i','o','u','A','E','I','O','U');\n    my @str_arr = split(//,$test_str);\n    for (my $i=0; $i<=$#str_arr; $i++) {\n        if (grep {$_ eq $str_arr[$i]} @vowels) {\n            if ($i != 0) {\n                if (grep {$_ eq $str_arr[$i-1]} @vowels) {\n                    $count++;\n                }\n            }\n            if ($i != $#str_arr) {\n                if (grep {$_ eq $str_arr[$i+1]} @vowels) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @chars = split(//, $test_str);\n    for (my $i = 0; $i < scalar(@chars); $i++) {\n        if ($chars[$i] =~ /[aeiou]/i) {\n            if ($i == 0) {\n                if ($chars[$i+1] =~ /[aeiou]/i) {\n                    $count++;\n                }\n            } elsif ($i == scalar(@chars) - 1) {\n                if ($chars[$i-1] =~ /[aeiou]/i) {\n                    $count++;\n                }\n            } else {\n                if ($chars[$i-1] =~ /[aeiou]/i || $chars[$i+1] =~ /[aeiou]/i) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a', 'e', 'i', 'o', 'u');\n    my @str_arr = split(//, $test_str);\n    for (my $i = 0; $i < scalar @str_arr; $i++) {\n        if (grep {$_ eq $str_arr[$i]} @vowels) {\n            if ($i == 0) {\n                if (grep {$_ eq $str_arr[$i+1]} @vowels) {\n                    $count++;\n                }\n            }\n            elsif ($i == scalar @str_arr - 1) {\n                if (grep {$_ eq $str_arr[$i-1]} @vowels) {\n                    $count++;\n                }\n            }\n            else {\n                if (grep {$_ eq $str_arr[$i+1]} @vowels || grep {$_ eq $str_arr[$i-1]} @vowels) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = qw(a e i o u);\n    my @test_str = split(//, $test_str);\n    for (my $i = 0; $i < scalar @test_str; $i++) {\n        if (grep {$_ eq $test_str[$i]} @vowels) {\n            if ($i == 0) {\n                if (grep {$_ eq $test_str[$i+1]} @vowels) {\n                    $count++;\n                }\n            } elsif ($i == scalar @test_str - 1) {\n                if (grep {$_ eq $test_str[$i-1]} @vowels) {\n                    $count++;\n                }\n            } else {\n                if (grep {$_ eq $test_str[$i-1]} @vowels || grep {$_ eq $test_str[$i+1]} @vowels) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a', 'e', 'i', 'o', 'u');\n    my @chars = split //, $test_str;\n    for (my $i = 0; $i < scalar @chars; $i++) {\n        if (grep {$_ eq $chars[$i]} @vowels) {\n            if ($i > 0 && grep {$_ eq $chars[$i - 1]} @vowels) {\n                $count++;\n            }\n            if ($i < scalar @chars - 1 && grep {$_ eq $chars[$i + 1]} @vowels) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a', 'e', 'i', 'o', 'u');\n    my @str_arr = split(//, $test_str);\n    for(my $i = 0; $i < scalar(@str_arr); $i++) {\n        if(grep {$_ eq $str_arr[$i]} @vowels) {\n            if($i == 0) {\n                if(grep {$_ eq $str_arr[$i+1]} @vowels) {\n                    $count++;\n                }\n            }\n            elsif($i == scalar(@str_arr) - 1) {\n                if(grep {$_ eq $str_arr[$i-1]} @vowels) {\n                    $count++;\n                }\n            }\n            else {\n                if(grep {$_ eq $str_arr[$i-1]} @vowels || grep {$_ eq $str_arr[$i+1]} @vowels) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my $vowels = \"aeiou\";\n    for(my $i = 0; $i < length($test_str); $i++) {\n        if(index($vowels, substr($test_str, $i, 1)) != -1) {\n            if($i > 0 && index($vowels, substr($test_str, $i-1, 1)) != -1) {\n                $count++;\n            }\n            if($i < length($test_str) - 1 && index($vowels, substr($test_str, $i+1, 1)) != -1) {\n                $count++;\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @vowels = ('a', 'e', 'i', 'o', 'u');\n    my @test_str_arr = split(//, $test_str);\n    my $i = 0;\n    while ($i < scalar(@test_str_arr)) {\n        if ($i == 0) {\n            if (grep {$_ eq $test_str_arr[$i+1]} @vowels) {\n                $count++;\n            }\n        }\n        elsif ($i == scalar(@test_str_arr) - 1) {\n            if (grep {$_ eq $test_str_arr[$i-1]} @vowels) {\n                $count++;\n            }\n        }\n        else {\n            if (grep {$_ eq $test_str_arr[$i-1]} @vowels || grep {$_ eq $test_str_arr[$i+1]} @vowels) {\n                $count++;\n            }\n        }\n        $i++;\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @chars = split //, $test_str;\n    for (my $i = 0; $i < scalar @chars; $i++) {\n        if ($chars[$i] =~ /[aeiou]/i) {\n            if ($i == 0) {\n                if ($chars[$i+1] =~ /[aeiou]/i) {\n                    $count++;\n                }\n            }\n            elsif ($i == scalar @chars - 1) {\n                if ($chars[$i-1] =~ /[aeiou]/i) {\n                    $count++;\n                }\n            }\n            else {\n                if ($chars[$i-1] =~ /[aeiou]/i || $chars[$i+1] =~ /[aeiou]/i) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @chars = split(//, $test_str);\n    for (my $i = 0; $i < scalar @chars; $i++) {\n        if ($chars[$i] =~ /[aeiou]/i) {\n            if ($i == 0) {\n                if ($chars[$i+1] =~ /[aeiou]/i) {\n                    $count++;\n                }\n            } elsif ($i == scalar @chars - 1) {\n                if ($chars[$i-1] =~ /[aeiou]/i) {\n                    $count++;\n                }\n            } else {\n                if ($chars[$i-1] =~ /[aeiou]/i || $chars[$i+1] =~ /[aeiou]/i) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @test_array = split(//, $test_str);\n    my $len = @test_array;\n    for (my $i = 0; $i < $len; $i++) {\n        if ($test_array[$i] =~ /[aeiou]/i) {\n            if ($i == 0) {\n                if ($test_array[$i+1] =~ /[aeiou]/i) {\n                    $count++;\n                }\n            } elsif ($i == $len - 1) {\n                if ($test_array[$i-1] =~ /[aeiou]/i) {\n                    $count++;\n                }\n            } else {\n                if ($test_array[$i-1] =~ /[aeiou]/i || $test_array[$i+1] =~ /[aeiou]/i) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    my @chars = split(//, $test_str);\n    for (my $i = 0; $i < scalar(@chars); $i++) {\n        if ($chars[$i] =~ /[aeiou]/i) {\n            if ($i == 0) {\n                if ($chars[$i+1] =~ /[aeiou]/i) {\n                    $count++;\n                }\n            } elsif ($i == scalar(@chars) - 1) {\n                if ($chars[$i-1] =~ /[aeiou]/i) {\n                    $count++;\n                }\n            } else {\n                if ($chars[$i-1] =~ /[aeiou]/i || $chars[$i+1] =~ /[aeiou]/i) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}"
  ]
}
{
  "name": "mbpp_92_is_undulating",
  "language": "pl",
  "prompt": "# Write a function to check whether the given number is undulating or not.\nsub is_undulating {\n    my($n) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_92_is_undulating.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&is_undulating;\n        if(eq_deeply($candidate->(1212121),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1991),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(121),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my @digits = split //, $n;\n    my $i = 0;\n    while ($i < $#digits) {\n        return 0 if $digits[$i] == $digits[$i+1];\n        $i++;\n    }\n    return 1;\n}",
    "    my $s = \"$n\";\n    my $len = length($s);\n    for my $i (0 .. $len - 2) {\n        return 0 if substr($s, $i, 1) == substr($s, $i + 1, 1);\n    }\n    return 1;\n}",
    "    my $s = $n;\n    my $d = 0;\n    my $prev = -1;\n    my $curr = -1;\n    while ($s > 0) {\n        $d = $s % 10;\n        $s = int($s / 10);\n        $curr = $d;\n        if ($prev != -1) {\n            if ($prev == $curr) {\n                return 0;\n            }\n        }\n        $prev = $curr;\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    my $len = @digits;\n    my $i = 0;\n    while ($i < $len - 2) {\n        if ($digits[$i] == $digits[$i + 1]) {\n            $i++;\n            next;\n        }\n        if ($digits[$i] > $digits[$i + 1]) {\n            if ($digits[$i + 1] < $digits[$i + 2]) {\n                $i++;\n                next;\n            }\n            else {\n                return 0;\n            }\n        }\n        else {\n            if ($digits[$i + 1] > $digits[$i + 2]) {\n                $i++;\n                next;\n            }\n            else {\n                return 0;\n            }\n        }\n    }\n    return 1;\n}",
    "    my $str = \"$n\";\n    my $len = length($str);\n    my $flag = 0;\n    for(my $i=0; $i<$len-1; $i++) {\n        if(substr($str, $i, 1) == substr($str, $i+1, 1)) {\n            $flag = 1;\n            last;\n        }\n    }\n    if($flag == 0) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $last_digit = $n % 10;\n    my $next_digit = ($n / 10) % 10;\n    my $is_increasing = $last_digit < $next_digit;\n    while ($n > 0) {\n        $n /= 10;\n        $last_digit = $next_digit;\n        $next_digit = $n % 10;\n        if ($is_increasing) {\n            return 0 if $last_digit < $next_digit;\n            $is_increasing = 0 if $last_digit > $next_digit;\n        } else {\n            return 0 if $last_digit > $next_digit;\n            $is_increasing = 1 if $last_digit < $next_digit;\n        }\n    }\n    return 1;\n}",
    "    my $s = $n;\n    my $d = 0;\n    my $last_d = -1;\n    my $last_d_count = 0;\n    my $is_undulating = 1;\n    while ($s > 0) {\n        $d = $s % 10;\n        if ($last_d != -1) {\n            if ($last_d == $d) {\n                $last_d_count++;\n            } else {\n                if ($last_d_count > 1) {\n                    $is_undulating = 0;\n                    last;\n                }\n                $last_d_count = 1;\n            }\n        }\n        $last_d = $d;\n        $s = int($s / 10);\n    }\n    return $is_undulating;\n}",
    "    my $prev_digit = -1;\n    my $prev_diff = 0;\n    while ($n > 0) {\n        my $digit = $n % 10;\n        my $diff = $digit - $prev_digit;\n        if ($prev_diff != 0 && $diff != 0 && $diff != $prev_diff) {\n            return 0;\n        }\n        $prev_digit = $digit;\n        $prev_diff = $diff;\n        $n /= 10;\n    }\n    return 1;\n}",
    "    my $last_digit = $n % 10;\n    my $next_digit = undef;\n    $n /= 10;\n    while ($n > 0) {\n        $next_digit = $n % 10;\n        if ($last_digit == $next_digit) {\n            return 0;\n        }\n        $last_digit = $next_digit;\n        $n /= 10;\n    }\n    return 1;\n}",
    "    my $str = \"$n\";\n    my $len = length($str);\n    for my $i (0 .. $len - 2) {\n        return 0 if substr($str, $i, 1) == substr($str, $i + 1, 1);\n    }\n    return 1;\n}",
    "    my $last_digit = $n % 10;\n    $n /= 10;\n    while ($n > 0) {\n        my $digit = $n % 10;\n        return 0 if $digit == $last_digit;\n        $last_digit = $digit;\n        $n /= 10;\n    }\n    return 1;\n}",
    "    my $last_digit = $n % 10;\n    my $next_digit = ($n / 10) % 10;\n    my $is_increasing = $last_digit < $next_digit;\n    while ($n > 0) {\n        $last_digit = $next_digit;\n        $next_digit = ($n / 10) % 10;\n        if ($last_digit == $next_digit) {\n            return 0;\n        }\n        if ($is_increasing) {\n            if ($last_digit > $next_digit) {\n                $is_increasing = 0;\n            }\n        } else {\n            if ($last_digit < $next_digit) {\n                return 0;\n            }\n        }\n        $n /= 10;\n    }\n    return 1;\n}",
    "    my $last_digit = $n % 10;\n    $n /= 10;\n    while ($n > 0) {\n        my $digit = $n % 10;\n        return 0 if $digit == $last_digit;\n        $last_digit = $digit;\n        $n /= 10;\n    }\n    return 1;\n}",
    "    my $prev = -1;\n    my $curr = -1;\n    my $next = -1;\n    while ($n > 0) {\n        $prev = $curr;\n        $curr = $next;\n        $next = $n % 10;\n        $n /= 10;\n        if ($curr == -1) {\n            next;\n        }\n        if ($prev == -1) {\n            next;\n        }\n        if ($prev > $curr) {\n            if ($curr > $next) {\n                return 0;\n            }\n        }\n        if ($prev < $curr) {\n            if ($curr < $next) {\n                return 0;\n            }\n        }\n    }\n    return 1;\n}",
    "    my $last_digit = -1;\n    my $last_diff = -1;\n    while ($n > 0) {\n        my $digit = $n % 10;\n        my $diff = $last_digit - $digit;\n        if ($last_diff == -1) {\n            $last_diff = $diff;\n        }\n        elsif ($last_diff != $diff) {\n            return 0;\n        }\n        $last_digit = $digit;\n        $n /= 10;\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    my $last_digit = pop @digits;\n    my $last_diff = 0;\n    for my $digit (@digits) {\n        my $diff = $last_digit - $digit;\n        return 0 if $diff == 0;\n        return 0 if $last_diff != 0 && $diff != $last_diff;\n        $last_diff = $diff;\n        $last_digit = $digit;\n    }\n    return 1;\n}",
    "    my $prev = undef;\n    for my $d (split //, $n) {\n        return 0 if defined $prev && $prev == $d;\n        $prev = $d;\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    my $prev = $digits[0];\n    for my $i (1 .. $#digits) {\n        return 0 if $digits[$i] == $prev;\n        $prev = $digits[$i];\n    }\n    return 1;\n}",
    "    my $last_digit = $n % 10;\n    my $next_last_digit = ($n / 10) % 10;\n    while ($n > 0) {\n        if ($last_digit != $next_last_digit) {\n            return 0;\n        }\n        $n /= 10;\n        $last_digit = $n % 10;\n        $next_last_digit = ($n / 10) % 10;\n    }\n    return 1;\n}",
    "    my $last_digit = $n % 10;\n    $n /= 10;\n    while ($n > 0) {\n        my $digit = $n % 10;\n        return 0 if $digit == $last_digit;\n        $last_digit = $digit;\n        $n /= 10;\n    }\n    return 1;\n}",
    "    my $s = $n;\n    my $d = 0;\n    my $r = 0;\n    my $p = 0;\n    my $q = 0;\n    my $c = 0;\n    while ($s > 0) {\n        $d = $s % 10;\n        $r = $r * 10 + $d;\n        $s = int($s / 10);\n    }\n    while ($r > 0) {\n        $p = $q;\n        $q = $r % 10;\n        $r = int($r / 10);\n        if ($p > $q) {\n            $c++;\n        }\n    }\n    return $c == $n;\n}",
    "    my $str = \"$n\";\n    my $len = length($str);\n    my $i = 0;\n    while ($i < $len - 1) {\n        my $a = substr($str, $i, 1);\n        my $b = substr($str, $i + 1, 1);\n        if ($a == $b) {\n            return 0;\n        }\n        $i++;\n    }\n    return 1;\n}",
    "    my $last_digit = $n % 10;\n    $n /= 10;\n    while ($n > 0) {\n        my $digit = $n % 10;\n        return 0 if $digit == $last_digit;\n        $last_digit = $digit;\n        $n /= 10;\n    }\n    return 1;\n}",
    "    my $last_digit = $n % 10;\n    my $next_digit = ($n % 100) / 10;\n    my $is_increasing = $last_digit > $next_digit;\n    while ($n) {\n        $last_digit = $next_digit;\n        $next_digit = ($n % 100) / 10;\n        return 0 if $last_digit == $next_digit;\n        $is_increasing = !$is_increasing if $last_digit != $next_digit;\n        $n /= 10;\n    }\n    return $is_increasing;\n}",
    "    my $last_digit = $n % 10;\n    $n /= 10;\n    while ($n > 0) {\n        my $digit = $n % 10;\n        return 0 if $digit == $last_digit;\n        $last_digit = $digit;\n        $n /= 10;\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    my $last_digit = shift @digits;\n    my $last_diff = 0;\n    for my $digit (@digits) {\n        my $diff = $digit - $last_digit;\n        if ($diff == 0) {\n            return 0;\n        }\n        if ($last_diff != 0 && $diff != $last_diff) {\n            return 0;\n        }\n        $last_diff = $diff;\n        $last_digit = $digit;\n    }\n    return 1;\n}",
    "    my $prev_digit = -1;\n    my $prev_diff = -1;\n    while ($n > 0) {\n        my $digit = $n % 10;\n        my $diff = $prev_digit - $digit;\n        if ($prev_diff != -1 && $diff != $prev_diff) {\n            return 0;\n        }\n        $prev_diff = $diff;\n        $prev_digit = $digit;\n        $n /= 10;\n    }\n    return 1;\n}",
    "    my $last_digit = $n % 10;\n    $n /= 10;\n    while ($n > 0) {\n        my $digit = $n % 10;\n        return 0 if $digit == $last_digit;\n        $last_digit = $digit;\n        $n /= 10;\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    for my $i (0 .. $#digits - 2) {\n        return 0 if $digits[$i] == $digits[$i + 1] ||\n                    $digits[$i + 1] == $digits[$i + 2] ||\n                    $digits[$i] == $digits[$i + 2];\n    }\n    return 1;\n}",
    "    my $last_digit = $n % 10;\n    $n /= 10;\n    while ($n > 0) {\n        my $digit = $n % 10;\n        return 0 if $digit == $last_digit;\n        $last_digit = $digit;\n        $n /= 10;\n    }\n    return 1;\n}",
    "    my $last_digit = $n % 10;\n    $n /= 10;\n    my $is_increasing = 1;\n    while ($n > 0) {\n        my $digit = $n % 10;\n        if ($is_increasing) {\n            return 0 if $digit > $last_digit;\n        } else {\n            return 0 if $digit < $last_digit;\n        }\n        $is_increasing = !$is_increasing;\n        $last_digit = $digit;\n        $n /= 10;\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    my $last_digit = pop @digits;\n    my $last_diff = 0;\n    for my $digit (@digits) {\n        my $diff = $digit - $last_digit;\n        return 0 if $diff == $last_diff;\n        $last_diff = $diff;\n        $last_digit = $digit;\n    }\n    return 1;\n}",
    "    my $last_digit = $n % 10;\n    my $next_digit = ($n / 10) % 10;\n    my $is_increasing = $last_digit > $next_digit;\n    while ($n > 0) {\n        $last_digit = $next_digit;\n        $next_digit = ($n / 10) % 10;\n        $n /= 10;\n        if ($last_digit == $next_digit) {\n            return 0;\n        }\n        if ($is_increasing && $last_digit < $next_digit) {\n            return 0;\n        }\n        if (!$is_increasing && $last_digit > $next_digit) {\n            return 0;\n        }\n        $is_increasing = !$is_increasing;\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    my $last_digit = pop @digits;\n    my $last_diff = 0;\n    for my $digit (@digits) {\n        my $diff = $digit - $last_digit;\n        return 0 if $diff == 0;\n        return 0 if $diff == $last_diff;\n        $last_diff = $diff;\n        $last_digit = $digit;\n    }\n    return 1;\n}",
    "    my $last_digit = $n % 10;\n    $n /= 10;\n    while ($n > 0) {\n        my $digit = $n % 10;\n        return 0 if $digit == $last_digit;\n        $last_digit = $digit;\n        $n /= 10;\n    }\n    return 1;\n}",
    "    my $prev = -1;\n    my $curr = -1;\n    my $next = -1;\n    while ($n > 0) {\n        $prev = $curr;\n        $curr = $next;\n        $next = $n % 10;\n        if ($prev != -1 && $curr != -1 && $next != -1) {\n            if ($curr - $prev == $next - $curr) {\n                return 0;\n            }\n        }\n        $n /= 10;\n    }\n    return 1;\n}",
    "    my $prev = -1;\n    my $curr = -1;\n    my $is_undulating = 0;\n    while($n > 0) {\n        $curr = $n % 10;\n        if($prev != -1) {\n            if($prev == $curr) {\n                return 0;\n            }\n            if($prev > $curr) {\n                $is_undulating = 1;\n            }\n            else {\n                if($is_undulating == 0) {\n                    return 0;\n                }\n            }\n        }\n        $prev = $curr;\n        $n = int($n / 10);\n    }\n    return 1;\n}",
    "    my $last_digit = $n % 10;\n    $n /= 10;\n    while ($n > 0) {\n        my $digit = $n % 10;\n        return 0 if $digit == $last_digit;\n        $last_digit = $digit;\n        $n /= 10;\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    my $len = @digits;\n    for my $i (0 .. $len-2) {\n        return 0 if $digits[$i] == $digits[$i+1];\n    }\n    return 1;\n}",
    "    my $s = sprintf(\"%d\", $n);\n    my $len = length($s);\n    my $i = 0;\n    while ($i < $len - 1) {\n        my $a = substr($s, $i, 1);\n        my $b = substr($s, $i + 1, 1);\n        if ($a == $b) {\n            return 0;\n        }\n        $i++;\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    my $i = 0;\n    while ($i < $#digits) {\n        return 0 if $digits[$i] == $digits[$i + 1];\n        $i++;\n    }\n    return 1;\n}",
    "    my $last_digit = $n % 10;\n    $n /= 10;\n    while ($n > 0) {\n        my $digit = $n % 10;\n        return 0 if $digit == $last_digit;\n        $last_digit = $digit;\n        $n /= 10;\n    }\n    return 1;\n}",
    "    my $last_digit = $n % 10;\n    $n /= 10;\n    while ($n > 0) {\n        my $digit = $n % 10;\n        return 0 if $digit == $last_digit;\n        $last_digit = $digit;\n        $n /= 10;\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    my $i = 0;\n    while ($i < $#digits) {\n        return 0 if $digits[$i] == $digits[$i+1];\n        $i++;\n    }\n    return 1;\n}",
    "    my $last_digit = $n % 10;\n    my $is_increasing = 1;\n    while ($n) {\n        $n /= 10;\n        my $digit = $n % 10;\n        if ($digit == $last_digit) {\n            return 0;\n        }\n        if ($is_increasing) {\n            if ($digit > $last_digit) {\n                return 0;\n            }\n        } else {\n            if ($digit < $last_digit) {\n                return 0;\n            }\n        }\n        $is_increasing = !$is_increasing;\n        $last_digit = $digit;\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    my $last_digit = pop @digits;\n    my $last_last_digit = pop @digits;\n    return 0 if $last_digit == $last_last_digit;\n    while (@digits) {\n        my $digit = pop @digits;\n        return 0 if $digit == $last_digit;\n        $last_last_digit = $last_digit;\n        $last_digit = $digit;\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    my $last_digit = pop @digits;\n    my $last_diff = 0;\n    for my $digit (@digits) {\n        my $diff = $digit - $last_digit;\n        return 0 if $diff == $last_diff;\n        $last_diff = $diff;\n        $last_digit = $digit;\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    my $prev = $digits[0];\n    my $prev_diff = 0;\n    for my $d (@digits[1..$#digits]) {\n        my $diff = $d - $prev;\n        return 0 if $diff == 0;\n        return 0 if $prev_diff != 0 && $diff != $prev_diff;\n        $prev_diff = $diff;\n        $prev = $d;\n    }\n    return 1;\n}",
    "    my $prev = $n % 10;\n    $n /= 10;\n    while ($n) {\n        my $curr = $n % 10;\n        return 0 if $curr == $prev;\n        $prev = $curr;\n        $n /= 10;\n    }\n    return 1;\n}",
    "    my $last_digit = $n % 10;\n    $n /= 10;\n    while ($n > 0) {\n        my $digit = $n % 10;\n        return 0 if $last_digit == $digit;\n        $last_digit = $digit;\n        $n /= 10;\n    }\n    return 1;\n}",
    "    my $last_digit = $n % 10;\n    my $next_digit = ($n / 10) % 10;\n    my $is_increasing = $last_digit < $next_digit;\n    while ($n) {\n        $n /= 10;\n        $last_digit = $next_digit;\n        $next_digit = $n % 10;\n        if ($last_digit == $next_digit) {\n            return 0;\n        }\n        if ($is_increasing) {\n            if ($last_digit > $next_digit) {\n                $is_increasing = 0;\n            }\n        } else {\n            if ($last_digit < $next_digit) {\n                return 0;\n            }\n        }\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    for my $i (0 .. $#digits - 2) {\n        return 0 if $digits[$i] == $digits[$i + 1] ||\n                    $digits[$i + 1] == $digits[$i + 2] ||\n                    $digits[$i] == $digits[$i + 2];\n    }\n    return 1;\n}",
    "    my $last_digit = $n % 10;\n    $n /= 10;\n    while ($n > 0) {\n        my $digit = $n % 10;\n        return 0 if $digit == $last_digit;\n        $last_digit = $digit;\n        $n /= 10;\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    my $last_digit = pop @digits;\n    my $last_diff = 0;\n    my $last_sign = 0;\n    for my $digit (@digits) {\n        my $diff = abs($digit - $last_digit);\n        my $sign = $diff == 0 ? 0 : $diff / $diff;\n        if ($last_sign != 0 && $sign != $last_sign) {\n            return 0;\n        }\n        $last_sign = $sign;\n        $last_diff = $diff;\n        $last_digit = $digit;\n    }\n    return 1;\n}",
    "    my $last_digit = $n % 10;\n    $n /= 10;\n    while ($n > 0) {\n        my $digit = $n % 10;\n        return 0 if $digit == $last_digit;\n        $last_digit = $digit;\n        $n /= 10;\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    my $i = 0;\n    while ($i < $#digits) {\n        if ($digits[$i] == $digits[$i + 1]) {\n            return 0;\n        }\n        $i++;\n    }\n    return 1;\n}",
    "    my $last_digit = $n % 10;\n    $n /= 10;\n    while ($n > 0) {\n        my $digit = $n % 10;\n        return 0 if $digit == $last_digit;\n        $last_digit = $digit;\n        $n /= 10;\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my $i = 0;\n    my $j = $#digits;\n    while ($i < $j) {\n        if ($digits[$i] != $digits[$j]) {\n            return 0;\n        }\n        $i++;\n        $j--;\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    my $last_digit = shift @digits;\n    my $last_diff = 0;\n    for my $digit (@digits) {\n        my $diff = $digit - $last_digit;\n        return 0 if $diff == 0;\n        return 0 if $last_diff != 0 && $diff != -$last_diff;\n        $last_diff = $diff;\n        $last_digit = $digit;\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    my $last_digit = $digits[0];\n    my $last_diff = 0;\n    for my $digit (@digits[1..$#digits]) {\n        my $diff = $digit - $last_digit;\n        return 0 if $diff == $last_diff;\n        $last_diff = $diff;\n        $last_digit = $digit;\n    }\n    return 1;\n}",
    "    my $last_digit = $n % 10;\n    $n /= 10;\n    while ($n > 0) {\n        my $digit = $n % 10;\n        return 0 if $digit == $last_digit;\n        $last_digit = $digit;\n        $n /= 10;\n    }\n    return 1;\n}",
    "    my $s = \"$n\";\n    my $len = length($s);\n    my $i = 0;\n    my $j = $len - 1;\n    while ($i < $len - 1) {\n        if (substr($s, $i, 1) == substr($s, $i + 1, 1)) {\n            return 0;\n        }\n        $i++;\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    my $last_digit = $digits[0];\n    my $last_diff = 0;\n    for my $digit (@digits[1..$#digits]) {\n        my $diff = $digit - $last_digit;\n        if ($last_diff == 0) {\n            $last_diff = $diff;\n        }\n        elsif ($last_diff != $diff) {\n            return 0;\n        }\n        $last_digit = $digit;\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    my $last_digit = $digits[0];\n    my $last_diff = 0;\n    for my $digit (@digits[1..$#digits]) {\n        my $diff = $digit - $last_digit;\n        return 0 if $diff == 0;\n        return 0 if $last_diff != 0 and $diff != -$last_diff;\n        $last_diff = $diff;\n        $last_digit = $digit;\n    }\n    return 1;\n}",
    "    my $str = \"$n\";\n    my $len = length($str);\n    my $i = 0;\n    my $j = $len - 1;\n    my $flag = 0;\n    while ($i < $j) {\n        if (substr($str, $i, 1) == substr($str, $j, 1)) {\n            $flag = 1;\n        }\n        else {\n            $flag = 0;\n            last;\n        }\n        $i++;\n        $j--;\n    }\n    return $flag;\n}",
    "    my @digits = split //, $n;\n    my $last_digit = pop @digits;\n    my $last_diff = 0;\n    my $last_sign = 1;\n    for my $digit (@digits) {\n        my $diff = $digit - $last_digit;\n        my $sign = $diff <=> 0;\n        return 0 if $sign == $last_sign;\n        $last_sign = $sign;\n        $last_diff = $diff;\n        $last_digit = $digit;\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    my $last_digit = $digits[0];\n    my $last_diff = 0;\n    for my $digit (@digits[1..$#digits]) {\n        my $diff = $digit - $last_digit;\n        return 0 if $diff == $last_diff;\n        $last_diff = $diff;\n        $last_digit = $digit;\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    my $last_digit = shift @digits;\n    my $last_diff = 0;\n    foreach my $digit (@digits) {\n        my $diff = $digit - $last_digit;\n        return 0 if $diff == $last_diff;\n        $last_diff = $diff;\n        $last_digit = $digit;\n    }\n    return 1;\n}",
    "    my $last_digit = $n % 10;\n    my $next_digit = ($n / 10) % 10;\n    my $is_odd = $last_digit % 2;\n    while ($next_digit) {\n        if ($is_odd) {\n            return 0 if $last_digit % 2;\n        } else {\n            return 0 if $last_digit % 2 == 0;\n        }\n        $last_digit = $next_digit;\n        $next_digit = ($n / 10) % 10;\n    }\n    return 1;\n}",
    "    my $last_digit = $n % 10;\n    $n /= 10;\n    my $is_increasing = $last_digit % 2;\n    while ($n) {\n        my $digit = $n % 10;\n        $n /= 10;\n        return 0 if $digit % 2 == $is_increasing;\n        $is_increasing = !$is_increasing;\n    }\n    return 1;\n}",
    "    my $str = \"$n\";\n    my $len = length($str);\n    my $i = 0;\n    while ($i < $len - 1) {\n        if ($str[$i] == $str[$i + 1]) {\n            return 0;\n        }\n        $i++;\n    }\n    return 1;\n}",
    "    my $s = $n % 10;\n    $n /= 10;\n    while ($n > 0) {\n        my $d = $n % 10;\n        return 0 if $d == $s;\n        $s = $d;\n        $n /= 10;\n    }\n    return 1;\n}",
    "    my $last_digit = $n % 10;\n    my $next_digit;\n    my $is_undulating = 0;\n    while ($n > 0) {\n        $n = int($n / 10);\n        $next_digit = $n % 10;\n        if ($last_digit == $next_digit) {\n            return 0;\n        }\n        $last_digit = $next_digit;\n        $is_undulating = 1;\n    }\n    return $is_undulating;\n}",
    "    my $prev = -1;\n    foreach my $d (split(//, $n)) {\n        if ($prev == -1) {\n            $prev = $d;\n        } else {\n            if ($prev == $d) {\n                return 0;\n            }\n            $prev = $d;\n        }\n    }\n    return 1;\n}",
    "    my $prev_digit = -1;\n    my $prev_diff = -1;\n    while ($n > 0) {\n        my $digit = $n % 10;\n        my $diff = $digit - $prev_digit;\n        if ($prev_diff != -1 && $diff != $prev_diff) {\n            return 0;\n        }\n        $prev_diff = $diff;\n        $prev_digit = $digit;\n        $n /= 10;\n    }\n    return 1;\n}",
    "    my $last_digit = $n % 10;\n    $n /= 10;\n    while ($n > 0) {\n        my $digit = $n % 10;\n        return 0 if $digit == $last_digit;\n        $last_digit = $digit;\n        $n /= 10;\n    }\n    return 1;\n}",
    "    my $prev_digit = -1;\n    my $prev_diff = -1;\n    while ($n > 0) {\n        my $digit = $n % 10;\n        my $diff = $digit - $prev_digit;\n        if ($prev_diff != -1 && $diff != $prev_diff) {\n            return 0;\n        }\n        $prev_digit = $digit;\n        $prev_diff = $diff;\n        $n /= 10;\n    }\n    return 1;\n}",
    "    my $last_digit = $n % 10;\n    my $next_digit = ($n % 100) / 10;\n    my $is_undulating = 1;\n    while ($n > 0) {\n        $n /= 10;\n        my $new_digit = $n % 10;\n        if ($new_digit == $last_digit || $new_digit == $next_digit) {\n            $is_undulating = 0;\n            last;\n        }\n        $next_digit = $last_digit;\n        $last_digit = $new_digit;\n    }\n    return $is_undulating;\n}",
    "    my @digits = split //, $n;\n    for my $i (1 .. $#digits) {\n        return 0 if $digits[$i] == $digits[$i - 1];\n    }\n    return 1;\n}",
    "    my $last_digit = $n % 10;\n    $n /= 10;\n    while ($n > 0) {\n        my $digit = $n % 10;\n        return 0 if $digit == $last_digit;\n        $last_digit = $digit;\n        $n /= 10;\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    my $last_digit = pop @digits;\n    my $last_diff = 0;\n    for my $digit (@digits) {\n        my $diff = $digit - $last_digit;\n        return 0 if $diff == 0;\n        return 0 if $last_diff != 0 and $diff != -$last_diff;\n        $last_diff = $diff;\n        $last_digit = $digit;\n    }\n    return 1;\n}",
    "    my $last_digit = $n % 10;\n    $n /= 10;\n    while ($n > 0) {\n        my $digit = $n % 10;\n        return 0 if $digit == $last_digit;\n        $last_digit = $digit;\n        $n /= 10;\n    }\n    return 1;\n}",
    "    my $last_digit = $n % 10;\n    my $next_digit = 0;\n    my $is_undulating = 1;\n    while ($n > 0) {\n        $n = int($n / 10);\n        if ($n > 0) {\n            $next_digit = $n % 10;\n            if ($last_digit == $next_digit) {\n                $is_undulating = 0;\n                last;\n            }\n            $last_digit = $next_digit;\n        }\n    }\n    return $is_undulating;\n}",
    "    my @digits = split //, $n;\n    my $last_diff = 0;\n    my $last_digit = shift @digits;\n    for my $digit (@digits) {\n        my $diff = $digit - $last_digit;\n        if ($diff == 0) {\n            return 0;\n        }\n        if ($last_diff != 0 && $diff != $last_diff) {\n            return 0;\n        }\n        $last_diff = $diff;\n        $last_digit = $digit;\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my $i = 0;\n    my $j = $#digits;\n    while ($i < $j) {\n        return 0 if $digits[$i] == $digits[$i+1];\n        return 0 if $digits[$j] == $digits[$j-1];\n        $i++;\n        $j--;\n    }\n    return 1;\n}",
    "    my $last_digit = $n % 10;\n    $n /= 10;\n    while ($n) {\n        my $digit = $n % 10;\n        return 0 if $digit == $last_digit;\n        $last_digit = $digit;\n        $n /= 10;\n    }\n    return 1;\n}",
    "    my $last_digit = $n % 10;\n    $n /= 10;\n    while ($n > 0) {\n        my $digit = $n % 10;\n        return 0 if $last_digit == $digit;\n        $last_digit = $digit;\n        $n /= 10;\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my $prev = $digits[0];\n    my $prev_diff = 0;\n    for my $i (1 .. $#digits) {\n        my $diff = $digits[$i] - $prev;\n        if ($prev_diff == 0) {\n            $prev_diff = $diff;\n        }\n        elsif ($prev_diff != $diff) {\n            return 0;\n        }\n        $prev = $digits[$i];\n    }\n    return 1;\n}",
    "    my $str = $n;\n    my $str_rev = reverse $str;\n    my $str_rev_inc = $str_rev;\n    $str_rev_inc++;\n    my $str_rev_dec = $str_rev;\n    $str_rev_dec--;\n    return 1 if $str eq $str_rev_inc || $str eq $str_rev_dec;\n    return 0;\n}",
    "    my $s = \"$n\";\n    my $len = length($s);\n    my $i = 0;\n    while ($i < $len - 1) {\n        my $d1 = substr($s, $i, 1);\n        my $d2 = substr($s, $i + 1, 1);\n        if ($d1 == $d2) {\n            return 0;\n        }\n        $i++;\n    }\n    return 1;\n}",
    "    my $prev = -1;\n    my $curr = -1;\n    my $is_undulating = 1;\n    while ($n > 0) {\n        $prev = $curr;\n        $curr = $n % 10;\n        if ($prev != -1) {\n            if ($prev == $curr) {\n                $is_undulating = 0;\n                last;\n            }\n        }\n        $n = int($n / 10);\n    }\n    return $is_undulating;\n}",
    "    my $last_digit = $n % 10;\n    $n /= 10;\n    while ($n > 0) {\n        my $digit = $n % 10;\n        return 0 if $digit == $last_digit;\n        $last_digit = $digit;\n        $n /= 10;\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    for my $i (0 .. $#digits - 2) {\n        return 0 if $digits[$i] == $digits[$i + 1] ||\n                    $digits[$i + 1] == $digits[$i + 2] ||\n                    $digits[$i] == $digits[$i + 2];\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    my $prev_diff = 0;\n    for my $i (1 .. $#digits) {\n        my $diff = $digits[$i] - $digits[$i - 1];\n        return 0 if $prev_diff == $diff;\n        $prev_diff = $diff;\n    }\n    return 1;\n}",
    "    my $last_digit = $n % 10;\n    $n /= 10;\n    while ($n) {\n        my $digit = $n % 10;\n        return 0 if $digit == $last_digit;\n        $last_digit = $digit;\n        $n /= 10;\n    }\n    return 1;\n}",
    "    my $last_digit = $n % 10;\n    my $next_digit = ($n % 100) / 10;\n    my $is_increasing = $next_digit > $last_digit;\n    my $is_undulating = 1;\n    while ($n > 0) {\n        $n /= 10;\n        $last_digit = $next_digit;\n        $next_digit = $n % 10;\n        if (($is_increasing && $next_digit > $last_digit) ||\n            (!$is_increasing && $next_digit < $last_digit)) {\n            $is_undulating = 0;\n            last;\n        }\n        $is_increasing = !$is_increasing;\n    }\n    return $is_undulating;\n}",
    "    my @digits = split //, $n;\n    for my $i (0 .. $#digits - 2) {\n        return 0 if $digits[$i] == $digits[$i + 1] || $digits[$i + 1] == $digits[$i + 2];\n    }\n    return 1;\n}",
    "    my $prev = undef;\n    for (split //, $n) {\n        return 0 if defined $prev && $prev == $_;\n        $prev = $_;\n    }\n    return 1;\n}",
    "    my $last_digit = $n % 10;\n    $n /= 10;\n    while ($n > 0) {\n        my $digit = $n % 10;\n        return 0 if $digit == $last_digit;\n        $last_digit = $digit;\n        $n /= 10;\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    my $prev = $digits[0];\n    my $state = 0;\n    for my $d (@digits[1..$#digits]) {\n        if ($state == 0) {\n            if ($d > $prev) {\n                $state = 1;\n            } elsif ($d < $prev) {\n                $state = -1;\n            }\n        } elsif ($state == 1) {\n            if ($d < $prev) {\n                return 1;\n            }\n        } elsif ($state == -1) {\n            if ($d > $prev) {\n                return 1;\n            }\n        }\n        $prev = $d;\n    }\n    return 0;\n}",
    "    my @digits = split //, $n;\n    my $i = 0;\n    my $j = $#digits;\n    while ($i < $j) {\n        return 0 if $digits[$i] == $digits[$i+1];\n        return 0 if $digits[$j] == $digits[$j-1];\n        $i++;\n        $j--;\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    my $i = 0;\n    while ($i < $#digits) {\n        return 0 if $digits[$i] == $digits[$i+1];\n        $i++;\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my $last_digit = $digits[0];\n    my $last_diff = 0;\n    for my $i (1 .. $#digits) {\n        my $diff = $digits[$i] - $last_digit;\n        if ($diff == 0) {\n            return 0;\n        }\n        if ($last_diff != 0 && $diff != $last_diff) {\n            return 0;\n        }\n        $last_diff = $diff;\n        $last_digit = $digits[$i];\n    }\n    return 1;\n}",
    "    my $prev = -1;\n    my $curr = -1;\n    my $count = 0;\n    while ($n > 0) {\n        $curr = $n % 10;\n        if ($prev != -1) {\n            if ($prev == $curr) {\n                return 0;\n            }\n            if ($count == 0) {\n                if ($prev > $curr) {\n                    $count = 1;\n                }\n                elsif ($prev < $curr) {\n                    $count = 2;\n                }\n            }\n            elsif ($count == 1) {\n                if ($prev < $curr) {\n                    return 0;\n                }\n            }\n            elsif ($count == 2) {\n                if ($prev > $curr) {\n                    return 0;\n                }\n            }\n        }\n        $prev = $curr;\n        $n /= 10;\n    }\n    return 1;\n}",
    "    my $last_digit = $n % 10;\n    $n /= 10;\n    while ($n > 0) {\n        my $digit = $n % 10;\n        return 0 if $last_digit == $digit;\n        $last_digit = $digit;\n        $n /= 10;\n    }\n    return 1;\n}",
    "    my $s = \"$n\";\n    my $len = length($s);\n    my $i = 0;\n    while ($i < $len - 1) {\n        my $d1 = substr($s, $i, 1);\n        my $d2 = substr($s, $i + 1, 1);\n        if ($d1 == $d2) {\n            return 0;\n        }\n        $i++;\n    }\n    return 1;\n}",
    "    my $last_digit = $n % 10;\n    my $next_digit;\n    my $is_undulating = 1;\n    while ($n > 0) {\n        $n = int($n / 10);\n        $next_digit = $n % 10;\n        if ($last_digit == $next_digit) {\n            $is_undulating = 0;\n            last;\n        }\n        $last_digit = $next_digit;\n    }\n    return $is_undulating;\n}",
    "    my $str = \"$n\";\n    my $len = length($str);\n    my $i = 0;\n    my $j = $len-1;\n    while($i < $j) {\n        if(substr($str, $i, 1) != substr($str, $j, 1)) {\n            return 0;\n        }\n        $i++;\n        $j--;\n    }\n    return 1;\n}",
    "    my $last_digit = 0;\n    my $last_diff = 0;\n    my $diff = 0;\n    while ($n > 0) {\n        $diff = $n % 10 - $last_digit;\n        if ($last_diff * $diff < 0) {\n            return 1;\n        }\n        $last_diff = $diff;\n        $last_digit = $n % 10;\n        $n /= 10;\n    }\n    return 0;\n}",
    "    my $last_digit = $n % 10;\n    $n /= 10;",
    "    my $last_digit = $n % 10;\n    $n /= 10;\n    while ($n > 0) {\n        my $digit = $n % 10;\n        return 0 if $last_digit == $digit;\n        $last_digit = $digit;\n        $n /= 10;\n    }\n    return 1;\n}",
    "    my @d = split //, $n;\n    my $i = 0;\n    while ($i < $#d) {\n        return 0 if $d[$i] == $d[$i+1];\n        $i++;\n    }\n    return 1;\n}",
    "    my $last_digit = $n % 10;\n    my $next_digit;\n    while ($n > 0) {\n        $n = int($n / 10);\n        $next_digit = $n % 10;\n        return 0 if $last_digit == $next_digit;\n        $last_digit = $next_digit;\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    my $prev = $digits[0];\n    my $prev_diff = 0;\n    for my $i (1 .. $#digits) {\n        my $diff = $digits[$i] - $prev;\n        if ($diff == 0) {\n            return 0;\n        }\n        if ($prev_diff != 0 && $prev_diff != $diff) {\n            return 0;\n        }\n        $prev_diff = $diff;\n        $prev = $digits[$i];\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    my $i = 0;\n    while ($i < $#digits) {\n        if ($digits[$i] == $digits[$i+1]) {\n            return 0;\n        }\n        $i++;\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    my $last_digit = pop @digits;\n    my $last_diff = 0;\n    for my $digit (@digits) {\n        my $diff = $digit - $last_digit;\n        return 0 if $diff == 0;\n        return 0 if $last_diff && $diff != $last_diff;\n        $last_diff = $diff;\n        $last_digit = $digit;\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    my $last = pop @digits;\n    my $prev = pop @digits;\n    return 0 if $last == $prev;\n    while(@digits) {\n        my $curr = pop @digits;\n        return 0 if $curr == $prev;\n        $prev = $curr;\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    for my $i (0 .. $#digits - 2) {\n        return 0 if $digits[$i] == $digits[$i + 1] || $digits[$i + 1] == $digits[$i + 2];\n    }\n    return 1;\n}",
    "    my $prev_digit = -1;\n    my $prev_diff = -1;\n    while ($n) {\n        my $digit = $n % 10;\n        my $diff = $prev_digit - $digit;\n        if ($prev_diff != -1 && $diff != $prev_diff) {\n            return 0;\n        }\n        $prev_diff = $diff;\n        $prev_digit = $digit;\n        $n /= 10;\n    }\n    return 1;\n}",
    "    my $last_digit = $n % 10;\n    $n /= 10;\n    while ($n > 0) {\n        my $digit = $n % 10;\n        return 0 if $digit == $last_digit;\n        $last_digit = $digit;\n        $n /= 10;\n    }\n    return 1;\n}",
    "    my $last_digit = $n % 10;\n    $n /= 10;\n    while ($n > 0) {\n        my $digit = $n % 10;\n        return 0 if $last_digit == $digit;\n        $last_digit = $digit;\n        $n /= 10;\n    }\n    return 1;\n}",
    "    my $last_digit = -1;\n    my $last_diff = -1;\n    while ($n > 0) {\n        my $digit = $n % 10;\n        my $diff = $digit - $last_digit;\n        if ($last_diff != -1 && $diff != $last_diff) {\n            return 0;\n        }\n        $last_diff = $diff;\n        $last_digit = $digit;\n        $n /= 10;\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    my $i = 0;\n    while ($i < $#digits) {\n        return 0 if $digits[$i] == $digits[$i+1];\n        $i++;\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    my $i = 0;\n    while ($i < $#digits) {\n        if ($digits[$i] == $digits[$i+1]) {\n            return 0;\n        }\n        $i++;\n    }\n    return 1;\n}",
    "    my $last_digit = $n % 10;\n    $n /= 10;\n    while ($n > 0) {\n        my $digit = $n % 10;\n        return 0 if $digit == $last_digit;\n        $last_digit = $digit;\n        $n /= 10;\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    my $i = 0;\n    while ($i < $#digits) {\n        if ($digits[$i] == $digits[$i+1]) {\n            return 0;\n        }\n        $i++;\n    }\n    return 1;\n}",
    "    my $last_digit = $n % 10;\n    $n /= 10;\n    while ($n > 0) {\n        my $digit = $n % 10;\n        return 0 if $digit == $last_digit;\n        $last_digit = $digit;\n        $n /= 10;\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    my $prev_diff = 0;\n    my $prev_digit = shift @digits;\n    for my $digit (@digits) {\n        my $diff = $digit - $prev_digit;\n        if ($diff == 0) {\n            return 0;\n        }\n        if ($prev_diff == 0) {\n            $prev_diff = $diff;\n        }\n        elsif ($prev_diff != $diff) {\n            return 0;\n        }\n        $prev_digit = $digit;\n    }\n    return 1;\n}",
    "    my $prev_digit = -1;\n    my $prev_diff = 0;\n    while ($n) {\n        my $digit = $n % 10;\n        my $diff = $digit - $prev_digit;\n        if ($prev_digit != -1) {\n            if ($prev_diff == 0) {\n                return 0 if $diff == 0;\n            } else {\n                return 0 if $diff != 0 && $diff != -$prev_diff;\n            }\n        }\n        $prev_digit = $digit;\n        $prev_diff = $diff;\n        $n /= 10;\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    my $i = 0;\n    while ($i < $#digits) {\n        return 0 if $digits[$i] == $digits[$i+1];\n        $i++;\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    my $last_digit = $digits[0];\n    my $last_diff = 0;\n    for my $i (1 .. $#digits) {\n        my $diff = $digits[$i] - $last_digit;\n        if ($diff == 0) {\n            return 0;\n        }\n        if ($last_diff == 0) {\n            $last_diff = $diff;\n        }\n        elsif ($last_diff != $diff) {\n            return 0;\n        }\n        $last_digit = $digits[$i];\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    my $last_digit = pop @digits;\n    my $last_diff = $last_digit - $digits[-1];\n    for my $i (0 .. $#digits - 1) {\n        my $diff = $digits[$i] - $digits[$i + 1];\n        return 0 if $diff * $last_diff > 0;\n        $last_diff = $diff;\n    }\n    return 1;\n}",
    "    my $last_digit = $n % 10;\n    my $next_digit = ($n % 100) / 10;\n    my $is_undulating = 1;\n    while ($n > 0) {\n        if ($last_digit == $next_digit) {\n            $is_undulating = 0;\n            last;\n        }\n        $last_digit = $next_digit;\n        $n /= 10;\n        $next_digit = $n % 10;\n    }\n    return $is_undulating;\n}",
    "    my @digits = split //, $n;\n    my $last_digit = $digits[0];\n    my $last_diff = 0;\n    for my $i (1 .. $#digits) {\n        my $diff = $digits[$i] - $last_digit;\n        if ($diff == 0) {\n            return 0;\n        }\n        if ($last_diff != 0 && $diff != $last_diff) {\n            return 0;\n        }\n        $last_diff = $diff;\n        $last_digit = $digits[$i];\n    }\n    return 1;\n}",
    "    my $prev = -1;\n    my $curr = -1;\n    my $next = -1;\n    while ($n > 0) {\n        $next = $n % 10;\n        $n = int($n / 10);\n        if ($prev == -1) {\n            $prev = $next;\n        } else {\n            $curr = $next;\n            if ($curr == $prev) {\n                return 0;\n            }\n            $prev = $curr;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    my $last_digit = pop @digits;\n    my $last_diff = 0;\n    my $last_sign = 0;\n    for my $digit (@digits) {\n        my $diff = $digit - $last_digit;\n        my $sign = $diff <=> 0;\n        if($last_sign != 0 && $sign != $last_sign) {\n            return 0;\n        }\n        $last_sign = $sign;\n        $last_diff = $diff;\n        $last_digit = $digit;\n    }\n    return 1;\n}",
    "    my $last_digit = 0;\n    my $last_last_digit = 0;\n    my $is_increasing = 0;\n    my $is_decreasing = 0;\n    while ($n > 0) {\n        my $digit = $n % 10;\n        if ($last_digit > $digit) {\n            $is_decreasing = 1;\n        } elsif ($last_digit < $digit) {\n            $is_increasing = 1;\n        }\n        if ($is_increasing && $is_decreasing) {\n            return 1;\n        }\n        $last_last_digit = $last_digit;\n        $last_digit = $digit;\n        $n /= 10;\n    }\n    return 0;\n}",
    "    my $last_digit = $n % 10;\n    my $is_increasing = 1;\n    my $is_decreasing = 1;\n    while ($n) {\n        my $digit = $n % 10;\n        if ($digit > $last_digit) {\n            $is_decreasing = 0;\n        }\n        elsif ($digit < $last_digit) {\n            $is_increasing = 0;\n        }\n        $last_digit = $digit;\n        $n /= 10;\n    }\n    return $is_increasing || $is_decreasing;\n}",
    "    my $last_digit = $n % 10;\n    $n /= 10;\n    while ($n > 0) {\n        my $digit = $n % 10;\n        return 0 if $digit == $last_digit;\n        $last_digit = $digit;\n        $n /= 10;\n    }\n    return 1;\n}",
    "    my $last_digit = $n % 10;\n    $n /= 10;\n    while ($n > 0) {\n        my $digit = $n % 10;\n        return 0 if $digit == $last_digit;\n        $last_digit = $digit;\n        $n /= 10;\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    my $last_digit = pop @digits;\n    my $last_diff = 0;\n    my $last_sign = 0;\n    for my $digit (@digits) {\n        my $diff = $digit - $last_digit;\n        my $sign = $diff <=> 0;\n        return 0 if $sign == $last_sign;\n        $last_sign = $sign;\n        $last_diff = $diff;\n        $last_digit = $digit;\n    }\n    return 1;\n}",
    "    my $last_digit = $n % 10;\n    $n /= 10;\n    while ($n > 0) {\n        my $digit = $n % 10;\n        return 0 if $digit == $last_digit;\n        $last_digit = $digit;\n        $n /= 10;\n    }\n    return 1;\n}",
    "    my $last_digit;\n    my $curr_digit;\n    my $last_diff;\n    my $curr_diff;\n    my $is_undulating = 0;",
    "    my $last_digit = $n % 10;\n    $n /= 10;\n    while ($n) {\n        my $digit = $n % 10;\n        return 0 if $digit == $last_digit;\n        $last_digit = $digit;\n        $n /= 10;\n    }\n    return 1;\n}",
    "    my $s = $n % 10;\n    $n /= 10;\n    while ($n > 0) {\n        my $d = $n % 10;\n        return 0 if $d == $s;\n        $s = $d;\n        $n /= 10;\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    my $i = 0;\n    while ($i < $#digits) {\n        return 0 if $digits[$i] == $digits[$i+1];\n        $i++;\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    for my $i (0 .. $#digits - 2) {\n        return 0 if $digits[$i] == $digits[$i + 1] or $digits[$i + 1] == $digits[$i + 2];\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    my $last_digit = $digits[0];\n    my $last_diff = 0;\n    for my $i (1 .. $#digits) {\n        my $diff = $digits[$i] - $last_digit;\n        if ($last_diff == 0) {\n            $last_diff = $diff;\n        } elsif ($last_diff != $diff) {\n            return 1;\n        }\n        $last_digit = $digits[$i];\n    }\n    return 0;\n}",
    "    my $last_digit = -1;\n    my $last_diff = -1;\n    my $diff = 0;\n    while ($n) {\n        $diff = $n % 10 - $last_digit;\n        return 0 if $diff == $last_diff;\n        $last_diff = $diff;\n        $last_digit = $n % 10;\n        $n /= 10;\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    my $last_digit = $digits[0];\n    my $last_diff = 0;\n    for my $digit (@digits[1..$#digits]) {\n        my $diff = $digit - $last_digit;\n        return 0 if $diff == 0;\n        return 0 if $diff == $last_diff;\n        $last_diff = $diff;\n        $last_digit = $digit;\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    my $i = 0;\n    while ($i < $#digits) {\n        return 0 if $digits[$i] == $digits[$i + 1];\n        $i++;\n    }\n    return 1;\n}",
    "    my $last_digit = $n % 10;\n    $n /= 10;\n    while ($n > 0) {\n        my $digit = $n % 10;\n        return 0 if $digit == $last_digit;\n        $last_digit = $digit;\n        $n /= 10;\n    }\n    return 1;\n}",
    "    my $s = $n;\n    my $d = 0;\n    my $c = 0;\n    my $p = 0;\n    while ($s > 0) {\n        $d = $s % 10;\n        $s = int($s / 10);\n        if ($c == 0) {\n            $p = $d;\n        } else {\n            if ($c % 2 == 0) {\n                if ($d >= $p) {\n                    return 0;\n                }\n            } else {\n                if ($d <= $p) {\n                    return 0;\n                }\n            }\n            $p = $d;\n        }\n        $c++;\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    my $i = 0;\n    while ($i < $#digits) {\n        return 0 if $digits[$i] == $digits[$i+1];\n        $i += 2;\n    }\n    return 1;\n}",
    "    my $last_digit = $n % 10;\n    $n /= 10;\n    while ($n > 0) {\n        my $digit = $n % 10;\n        return 0 if $digit == $last_digit;\n        $last_digit = $digit;\n        $n /= 10;\n    }\n    return 1;\n}",
    "    my $last_digit = $n % 10;\n    my $next_digit = ($n % 100) / 10;\n    my $is_undulating = 1;\n    while ($n > 0) {\n        if ($last_digit == $next_digit) {\n            $is_undulating = 0;\n            last;\n        }\n        $last_digit = $next_digit;\n        $n /= 10;\n        $next_digit = $n % 10;\n    }\n    return $is_undulating;\n}",
    "    my $last_digit = $n % 10;\n    $n /= 10;\n    while ($n > 0) {\n        my $digit = $n % 10;\n        return 0 if $digit == $last_digit;\n        $last_digit = $digit;\n        $n /= 10;\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    my $last_digit = $digits[0];\n    my $last_diff = 0;\n    for my $digit (@digits[1..$#digits]) {\n        my $diff = $digit - $last_digit;\n        if ($diff == 0) {\n            return 0;\n        }\n        if ($last_diff == 0) {\n            $last_diff = $diff;\n        }\n        elsif ($last_diff * $diff < 0) {\n            return 0;\n        }\n        $last_digit = $digit;\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    my $last_digit = $digits[0];\n    my $last_diff = 0;\n    for my $digit (@digits[1..$#digits]) {\n        my $diff = $digit - $last_digit;\n        return 0 if $diff == 0;\n        return 0 if $last_diff != 0 && $diff != $last_diff;\n        $last_diff = $diff;\n        $last_digit = $digit;\n    }\n    return 1;\n}",
    "    my $str = $n;\n    my $len = length($str);\n    my $i = 0;\n    my $j = $len - 1;\n    while ($i < $j) {\n        if (substr($str, $i, 1) != substr($str, $j, 1)) {\n            return 0;\n        }\n        $i++;\n        $j--;\n    }\n    return 1;\n}",
    "    my $last_digit = $n % 10;\n    my $next_last_digit = ($n % 100) / 10;\n    my $is_undulating = 1;\n    while ($n > 0) {\n        if ($last_digit != $next_last_digit) {\n            $is_undulating = 0;\n            last;\n        }\n        $n /= 10;\n        $last_digit = $n % 10;\n        $next_last_digit = ($n % 100) / 10;\n    }\n    return $is_undulating;\n}",
    "    my $s = sprintf(\"%d\", $n);\n    my $len = length($s);\n    my $i = 0;\n    while ($i < $len - 1) {\n        my $d1 = substr($s, $i, 1);\n        my $d2 = substr($s, $i + 1, 1);\n        if ($d1 == $d2) {\n            return 0;\n        }\n        $i++;\n    }\n    return 1;\n}",
    "    my $prev = -1;\n    my $curr = -1;\n    my $next = -1;\n    my $prev_diff = 0;\n    my $curr_diff = 0;\n    my $next_diff = 0;\n    while ($n > 0) {\n        $prev = $curr;\n        $curr = $next;\n        $next = $n % 10;\n        $n = int($n / 10);\n        $prev_diff = $curr_diff;\n        $curr_diff = $next_diff;\n        $next_diff = $curr - $next;\n        if ($next_diff == 0) {\n            return 0;\n        }\n        if ($prev_diff == 0) {\n            next;\n        }\n        if ($prev_diff * $next_diff < 0) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my $last_digit = pop @digits;\n    my $last_diff = 0;\n    for my $digit (@digits) {\n        my $diff = $digit - $last_digit;\n        return 0 if $diff == 0;\n        return 0 if $diff == $last_diff;\n        $last_diff = $diff;\n        $last_digit = $digit;\n    }\n    return 1;\n}",
    "    my $last_digit = $n % 10;\n    $n /= 10;\n    while ($n) {\n        my $digit = $n % 10;\n        return 0 if $digit == $last_digit;\n        $last_digit = $digit;\n        $n /= 10;\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    my $i = 0;\n    my $j = $#digits;\n    while ($i < $j) {\n        return 0 if $digits[$i] != $digits[$j];\n        $i++;\n        $j--;\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    my $prev_diff = $digits[1] - $digits[0];\n    for my $i (1 .. $#digits - 1) {\n        my $diff = $digits[$i + 1] - $digits[$i];\n        return 0 if $diff == 0;\n        return 0 if $diff == $prev_diff;\n        $prev_diff = $diff;\n    }\n    return 1;\n}",
    "    my $last_digit = $n % 10;\n    $n /= 10;\n    while ($n > 0) {\n        my $digit = $n % 10;\n        return 0 if $digit == $last_digit;\n        $last_digit = $digit;\n        $n /= 10;\n    }\n    return 1;\n}",
    "    my $last_digit = $n % 10;\n    my $next_digit = ($n % 100) / 10;\n    my $is_increasing = $last_digit > $next_digit;\n    my $is_decreasing = $last_digit < $next_digit;\n    while ($n > 9) {\n        $n /= 10;\n        $last_digit = $next_digit;\n        $next_digit = ($n % 10);\n        return 0 if ($is_increasing && $last_digit <= $next_digit);\n        return 0 if ($is_decreasing && $last_digit >= $next_digit);\n        $is_increasing = $last_digit < $next_digit;\n        $is_decreasing = $last_digit > $next_digit;\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    my $last_digit = shift @digits;\n    my $last_diff = 0;\n    for my $digit (@digits) {\n        my $diff = $digit - $last_digit;\n        return 0 if $diff == 0;\n        return 0 if $diff == $last_diff;\n        $last_diff = $diff;\n        $last_digit = $digit;\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    my $last_digit = pop @digits;\n    my $last_diff = 0;\n    while (@digits) {\n        my $digit = pop @digits;\n        my $diff = $digit - $last_digit;\n        return 0 if $diff == 0;\n        return 0 if $last_diff != 0 and $diff != $last_diff;\n        $last_diff = $diff;\n        $last_digit = $digit;\n    }\n    return 1;\n}",
    "    my $prev = -1;\n    my $curr = -1;\n    my $next = -1;\n    my $count = 0;\n    while($n) {\n        $next = $n % 10;\n        if($prev != -1 && $curr != -1) {\n            if($prev > $curr && $curr < $next) {\n                $count++;\n            }\n            elsif($prev < $curr && $curr > $next) {\n                $count++;\n            }\n        }\n        $prev = $curr;\n        $curr = $next;\n        $n /= 10;\n    }\n    return $count;\n}",
    "    my $last_digit = $n % 10;\n    $n /= 10;\n    while ($n > 0) {\n        my $digit = $n % 10;\n        return 0 if $digit == $last_digit;\n        $last_digit = $digit;\n        $n /= 10;\n    }\n    return 1;\n}",
    "    my $last_digit = 0;\n    my $last_last_digit = 0;\n    while ($n > 0) {\n        my $digit = $n % 10;\n        if ($digit == $last_digit && $digit != $last_last_digit) {\n            return 1;\n        }\n        $last_last_digit = $last_digit;\n        $last_digit = $digit;\n        $n /= 10;\n    }\n    return 0;\n}",
    "    my $last_digit = $n % 10;\n    $n /= 10;\n    while ($n > 0) {\n        my $digit = $n % 10;\n        return 0 if $digit == $last_digit;\n        $last_digit = $digit;\n        $n /= 10;\n    }\n    return 1;\n}",
    "    my $last_digit = $n % 10;\n    $n /= 10;\n    while ($n > 0) {\n        my $digit = $n % 10;\n        return 0 if $digit == $last_digit;\n        $last_digit = $digit;\n        $n /= 10;\n    }\n    return 1;\n}",
    "    my $last_digit = -1;\n    my $last_diff = -1;\n    while ($n > 0) {\n        my $digit = $n % 10;\n        my $diff = $digit - $last_digit;\n        if ($last_diff != -1 && $diff != $last_diff) {\n            return 0;\n        }\n        $last_diff = $diff;\n        $last_digit = $digit;\n        $n /= 10;\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    my $last = pop @digits;\n    for my $d (@digits) {\n        return 0 if $d == $last;\n        $last = $d;\n    }\n    return 1;\n}",
    "    my $last_digit = undef;\n    my $last_diff = undef;\n    while ($n) {\n        my $digit = $n % 10;\n        my $diff = $last_digit - $digit;\n        if (defined($last_diff) && $diff != $last_diff) {\n            return 0;\n        }\n        $last_diff = $diff;\n        $last_digit = $digit;\n        $n /= 10;\n    }\n    return 1;\n}",
    "    my $s = \"$n\";\n    my $len = length($s);\n    my $i = 0;\n    while ($i < $len - 1) {\n        my $a = substr($s, $i, 1);\n        my $b = substr($s, $i + 1, 1);\n        if ($a == $b) {\n            return 0;\n        }\n        $i++;\n    }\n    return 1;\n}",
    "    my $last_digit = $n % 10;\n    $n /= 10;\n    while ($n > 0) {\n        my $digit = $n % 10;\n        return 0 if $last_digit == $digit;\n        $last_digit = $digit;\n        $n /= 10;\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    my $last_digit = shift @digits;\n    my $last_diff = 0;\n    while(@digits) {\n        my $digit = shift @digits;\n        my $diff = $digit - $last_digit;\n        if($diff == 0) {\n            return 0;\n        }\n        if($last_diff == 0) {\n            $last_diff = $diff;\n        }\n        elsif($last_diff != $diff) {\n            return 0;\n        }\n        $last_digit = $digit;\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    my $i = 0;\n    my $j = $#digits;\n    while ($i < $j) {\n        return 0 if $digits[$i] == $digits[$i+1];\n        return 0 if $digits[$j] == $digits[$j-1];\n        return 0 if $digits[$i] != $digits[$j];\n        $i++;\n        $j--;\n    }\n    return 1;\n}",
    "    my $s = $n % 10;\n    $n = int($n / 10);\n    while ($n > 0) {\n        my $d = $n % 10;\n        return 0 if $s == $d;\n        $s = $d;\n        $n = int($n / 10);\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    my $last_diff = 0;\n    my $last_digit = shift @digits;\n    for my $digit (@digits) {\n        my $diff = $digit - $last_digit;\n        return 0 if $diff == 0;\n        return 0 if $last_diff != 0 && $diff != $last_diff * -1;\n        $last_diff = $diff;\n        $last_digit = $digit;\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    my $prev_diff = 0;\n    for my $i (1 .. $#digits) {\n        my $diff = $digits[$i] - $digits[$i-1];\n        if ($diff == 0) {\n            return 0;\n        }\n        if ($prev_diff != 0 && $diff != $prev_diff) {\n            return 0;\n        }\n        $prev_diff = $diff;\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    my $i = 0;\n    while ($i < @digits - 2) {\n        if ($digits[$i] == $digits[$i + 1] || $digits[$i + 1] == $digits[$i + 2]) {\n            $i++;\n            next;\n        }\n        return 0 if $digits[$i] < $digits[$i + 1] && $digits[$i + 1] < $digits[$i + 2];\n        return 0 if $digits[$i] > $digits[$i + 1] && $digits[$i + 1] > $digits[$i + 2];\n        $i++;\n    }\n    return 1;\n}",
    "    my $prev = -1;\n    my $prev_diff = -1;\n    while ($n) {\n        my $d = $n % 10;\n        $n /= 10;\n        my $diff = $d - $prev;\n        if ($prev_diff != -1 && $diff != $prev_diff) {\n            return 0;\n        }\n        $prev_diff = $diff;\n        $prev = $d;\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    my $prev_diff = $digits[0] - $digits[1];\n    for my $i (1 .. $#digits - 1) {\n        my $diff = $digits[$i] - $digits[$i + 1];\n        return 0 if $diff == 0;\n        return 0 if $diff == $prev_diff;\n        $prev_diff = $diff;\n    }\n    return 1;\n}",
    "    my $last_digit = $n % 10;\n    $n /= 10;\n    while ($n > 0) {\n        my $digit = $n % 10;\n        return 0 if $digit == $last_digit;\n        $n /= 10;\n        $last_digit = $digit;\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    my $prev_diff = $digits[0] - $digits[1];\n    for my $i (1 .. $#digits - 1) {\n        my $diff = $digits[$i] - $digits[$i + 1];\n        return 0 if $diff == 0 || $diff == $prev_diff;\n        $prev_diff = $diff;\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    my $i = 0;\n    while ($i < $#digits) {\n        return 0 if $digits[$i] == $digits[$i + 1];\n        $i++;\n    }\n    return 1;\n}",
    "    my $last_digit = $n % 10;\n    $n /= 10;\n    while ($n > 0) {\n        my $digit = $n % 10;\n        return 0 if $digit == $last_digit;\n        $last_digit = $digit;\n        $n /= 10;\n    }\n    return 1;\n}",
    "    my $prev = -1;\n    my $prev_diff = -1;\n    my $curr_diff = -1;\n    while ($n) {\n        my $curr = $n % 10;\n        $curr_diff = $curr - $prev;\n        if ($prev_diff != -1 && $prev_diff != $curr_diff) {\n            return 0;\n        }\n        $prev_diff = $curr_diff;\n        $prev = $curr;\n        $n /= 10;\n    }\n    return 1;\n}",
    "    my $prev = -1;\n    my $curr = -1;\n    my $next = -1;\n    while ($n > 0) {\n        $prev = $curr;\n        $curr = $next;\n        $next = $n % 10;\n        if ($prev == -1) {\n            $prev = $next;\n        }\n        if ($curr == -1) {\n            $curr = $next;\n        }\n        if ($prev > $curr && $curr < $next) {\n            return 0;\n        }\n        if ($prev < $curr && $curr > $next) {\n            return 0;\n        }\n        $n /= 10;\n    }\n    return 1;\n}",
    "    return 0 if $n < 100;\n    my @digits = split //, $n;\n    my $prev_diff = $digits[1] - $digits[0];\n    my $curr_diff;\n    for my $i (1 .. $#digits - 1) {\n        $curr_diff = $digits[$i + 1] - $digits[$i];\n        return 0 if $curr_diff == $prev_diff;\n        $prev_diff = $curr_diff;\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    my $i = 0;\n    while ($i < $#digits) {\n        return 0 if $digits[$i] == $digits[$i+1];\n        $i++;\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    my $i = 0;\n    my $j = $#digits;\n    while ($i < $j) {\n        return 0 if $digits[$i] == $digits[$i+1];\n        return 0 if $digits[$j] == $digits[$j-1];\n        return 0 if $digits[$i] != $digits[$j];\n        $i++;\n        $j--;\n    }\n    return 1;\n}",
    "    my $prev = -1;\n    my $curr = -1;\n    my $next = -1;\n    while ($n > 0) {\n        $next = $n % 10;\n        if ($prev == -1) {\n            $prev = $next;\n        } else {\n            if ($prev == $next) {\n                return 0;\n            }\n            if ($curr != -1) {\n                if (($curr - $prev) * ($curr - $next) >= 0) {\n                    return 0;\n                }\n            }\n            $prev = $curr;\n            $curr = $next;\n        }\n        $n /= 10;\n    }\n    return 1;\n}",
    "    my $last_digit = $n % 10;\n    $n /= 10;\n    while ($n > 0) {\n        my $digit = $n % 10;\n        return 0 if $digit == $last_digit;\n        $last_digit = $digit;\n        $n /= 10;\n    }\n    return 1;\n}"
  ]
}
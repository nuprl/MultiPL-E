{
  "name": "mbpp_643_text_match_wordz_middle",
  "language": "pl",
  "prompt": "# Write a function that checks if a strings contains 'z', except at the start and end of the word.\nsub text_match_wordz_middle {\n    my($text) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_643_text_match_wordz_middle.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&text_match_wordz_middle;\n        if(eq_deeply($candidate->(\"pythonzabc.\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"zxyabc.\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"  lang  .\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    return $text =~ /\\bz\\b/;\n}",
    "    return $text =~ /\\bz\\b/;\n}",
    "    if ($text =~ /\\bz\\b/) {\n        return 1;\n    }\n    return 0;\n}",
    "    if ($text =~ /\\bz\\b/) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    if ($text =~ /\\bz\\b/) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    if ($text =~ /\\bz\\b/) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    if ($text =~ /\\bz\\b/) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if ($text =~ /\\bz\\b/) {\n        return 1;\n    }\n    return 0;\n}",
    "    if ($text =~ /\\bz\\b/) {\n        return 1;\n    }\n    return 0;\n}",
    "    if ($text =~ /\\bz\\b/){\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    if ($text =~ /\\bz\\b/) {\n        return 1;\n    }\n    return 0;\n}",
    "    if ($text =~ /\\bz\\b/) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    if ($text =~ /\\bz\\b/){\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    if ($text =~ /\\bz\\b/) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    return $text =~ /\\bz/;\n}",
    "    if ($text =~ /\\bz\\b/) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    return $text =~ /\\bz/;\n}",
    "    if ($text =~ /\\bz\\b/) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    return $text =~ /\\bz\\b/;\n}",
    "    if ($text =~ /\\bz\\b/) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}"
  ]
}
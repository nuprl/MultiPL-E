{
  "name": "mbpp_414_overlapping",
  "language": "pl",
  "prompt": "# Write a plthon function to check whether any value in a sequence exists in a sequence or not.\nsub overlapping {\n    my($list1, $list2) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_414_overlapping.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&overlapping;\n        if(eq_deeply($candidate->([1, 2, 3, 4, 5], [6, 7, 8, 9]),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 4, 5], [1, 4, 5]),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@{$list1}, @{$list2}) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    my %hash = map { $_ => 1 } @$list2;\n    foreach my $elem (@$list1) {\n        return 1 if exists $hash{$elem};\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    foreach my $i (@$list1) {\n        foreach my $j (@$list2) {\n            if ($i eq $j) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    my %hash = map {$_ => 1} @$list2;\n    foreach my $item (@$list1) {\n        return 1 if $hash{$item};\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    foreach my $item1 (@$list1) {\n        foreach my $item2 (@$list2) {\n            if ($item1 == $item2) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}",
    "    foreach my $i (@$list1) {\n        foreach my $j (@$list2) {\n            if ($i == $j) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    foreach my $item1 (@$list1) {\n        foreach my $item2 (@$list2) {\n            if ($item1 eq $item2) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}",
    "    foreach my $e (@$list1) {\n        foreach my $f (@$list2) {\n            if ($e eq $f) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    foreach my $item1 (@$list1) {\n        foreach my $item2 (@$list2) {\n            if ($item1 eq $item2) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    foreach my $elem1 (@$list1) {\n        foreach my $elem2 (@$list2) {\n            if ($elem1 eq $elem2) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}",
    "    foreach my $i (@$list1) {\n        foreach my $j (@$list2) {\n            if ($i == $j) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    foreach my $item1 (@$list1) {\n        foreach my $item2 (@$list2) {\n            return 1 if $item1 eq $item2;\n        }\n    }\n    return 0;\n}",
    "    foreach my $item1 (@$list1) {\n        foreach my $item2 (@$list2) {\n            if ($item1 eq $item2) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    foreach my $item1 (@$list1) {\n        foreach my $item2 (@$list2) {\n            return 1 if $item1 eq $item2;\n        }\n    }\n    return 0;\n}",
    "    my %seen = ();\n    foreach my $item (@{$list1}) { $seen{$item} = 1 }\n    foreach my $item (@{$list2}) {\n        return 1 if $seen{$item};\n    }\n    return 0;\n}",
    "    foreach my $item1 (@$list1) {\n        foreach my $item2 (@$list2) {\n            if ($item1 == $item2) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}",
    "    my %hash = map { $_ => 1 } @$list2;\n    foreach my $e (@$list1) {\n        return 1 if exists $hash{$e};\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    foreach my $item1 (@$list1) {\n        foreach my $item2 (@$list2) {\n            if ($item1 eq $item2) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    foreach my $item1 (@$list1) {\n        foreach my $item2 (@$list2) {\n            if ($item1 eq $item2) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}",
    "    foreach my $i (@$list1) {\n        foreach my $j (@$list2) {\n            if ($i eq $j) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}",
    "    foreach my $element (@$list1) {\n        foreach my $element2 (@$list2) {\n            if ($element == $element2) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    foreach my $item1 (@$list1) {\n        foreach my $item2 (@$list2) {\n            if ($item1 eq $item2) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    foreach my $item1 (@$list1) {\n        foreach my $item2 (@$list2) {\n            return 1 if $item1 eq $item2;\n        }\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    my %hash = map { $_ => 1 } @$list2;\n    foreach my $elem (@$list1) {\n        return 1 if exists $hash{$elem};\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    foreach my $item1 (@$list1) {\n        foreach my $item2 (@$list2) {\n            if ($item1 eq $item2) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}",
    "    foreach my $i (@$list1) {\n        foreach my $j (@$list2) {\n            if ($i == $j) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}",
    "    foreach my $item1 (@$list1) {\n        foreach my $item2 (@$list2) {\n            if ($item1 eq $item2) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}",
    "    my %hash = map { $_ => 1 } @$list2;\n    foreach my $elem (@$list1) {\n        return 1 if exists $hash{$elem};\n    }\n    return 0;\n}",
    "    my %seen;\n    foreach my $item (@$list1, @$list2) {\n        $seen{$item}++;\n    }\n    foreach my $item (keys %seen) {\n        return 1 if $seen{$item} > 1;\n    }\n    return 0;\n}",
    "    foreach my $i (@$list1) {\n        foreach my $j (@$list2) {\n            if ($i eq $j) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}",
    "    foreach my $i (@$list1) {\n        foreach my $j (@$list2) {\n            if ($i == $j) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}",
    "    foreach my $elem1 (@$list1) {\n        foreach my $elem2 (@$list2) {\n            if ($elem1 eq $elem2) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}",
    "    my %hash = map { $_ => 1 } @$list2;\n    foreach my $elem (@$list1) {\n        return 1 if exists $hash{$elem};\n    }\n    return 0;\n}",
    "    foreach my $item1 (@$list1) {\n        foreach my $item2 (@$list2) {\n            return 1 if $item1 eq $item2;\n        }\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    my %seen = ();\n    foreach my $item (@$list1, @$list2) { $seen{$item}++ }\n    foreach my $item (keys %seen) {\n        return 1 if $seen{$item} > 1;\n    }\n    return 0;\n}",
    "    foreach my $item1 (@$list1) {\n        foreach my $item2 (@$list2) {\n            if ($item1 eq $item2) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    foreach my $element (@$list1) {\n        foreach my $element2 (@$list2) {\n            if ($element == $element2) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    my %hash = map { $_ => 1 } @$list2;\n    foreach my $elem (@$list1) {\n        return 1 if exists $hash{$elem};\n    }\n    return 0;\n}",
    "    my %hash = map { $_ => 1 } @$list2;\n    foreach my $elem (@$list1) {\n        return 1 if exists $hash{$elem};\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    my %hash = map { $_ => 1 } @$list2;\n    foreach my $item (@$list1) {\n        return 1 if $hash{$item};\n    }\n    return 0;\n}",
    "    foreach my $elem1 (@$list1) {\n        foreach my $elem2 (@$list2) {\n            if ($elem1 == $elem2) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}",
    "    my %seen;\n    foreach my $item (@{$list1}) {\n        $seen{$item}++;\n    }\n    foreach my $item (@{$list2}) {\n        return 1 if $seen{$item};\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    foreach my $i (@$list1) {\n        foreach my $j (@$list2) {\n            return 1 if $i eq $j;\n        }\n    }\n    return 0;\n}",
    "    foreach my $i (@$list1) {\n        foreach my $j (@$list2) {\n            if ($i == $j) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}",
    "    my %hash = map { $_ => 1 } @$list2;\n    foreach my $elem (@$list1) {\n        return 1 if exists $hash{$elem};\n    }\n    return 0;\n}",
    "    foreach my $item1 (@$list1) {\n        foreach my $item2 (@$list2) {\n            if ($item1 eq $item2) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}",
    "    foreach my $item1 (@$list1) {\n        foreach my $item2 (@$list2) {\n            if ($item1 eq $item2) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}",
    "    my %hash = map { $_ => 1 } @$list2;\n    foreach my $elem (@$list1) {\n        return 1 if exists $hash{$elem};\n    }\n    return 0;\n}",
    "    my %hash = map { $_ => 1 } @$list2;\n    foreach my $elem (@$list1) {\n        return 1 if exists $hash{$elem};\n    }\n    return 0;\n}",
    "    foreach my $item1 (@$list1) {\n        foreach my $item2 (@$list2) {\n            if ($item1 eq $item2) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    foreach my $item1 (@$list1) {\n        foreach my $item2 (@$list2) {\n            if ($item1 eq $item2) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    my %seen = ();\n    foreach my $item (@{$list1}) { $seen{$item} = 1; }\n    foreach my $item (@{$list2}) {\n        return 1 if exists($seen{$item});\n    }\n    return 0;\n}\nmy @list1 = (1,2,3,4,5);\nmy @list2 = (6,7,8,9,10);\nmy @list3 = (1,2,3,4,5);\nprint \"list1 and list2 are overlapping\\n\" if overlapping(\\@list1, \\@list2);\nprint \"list1 and list3 are overlapping\\n\" if overlapping(\\@list1, \\@list3);",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    my %seen = ();\n    foreach my $item (@$list1, @$list2) { $seen{$item}++ }\n    return grep { $seen{$_} > 1 } keys %seen;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    foreach my $item1 (@$list1) {\n        foreach my $item2 (@$list2) {\n            if ($item1 eq $item2) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}",
    "    foreach my $i (@$list1) {\n        foreach my $j (@$list2) {\n            if ($i eq $j) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    my %hash = map { $_ => 1 } @$list2;\n    foreach my $e (@$list1) {\n        return 1 if exists $hash{$e};\n    }\n    return 0;\n}",
    "    my %seen = ();\n    foreach my $item (@{$list1}) { $seen{$item} = 1; }\n    foreach my $item (@{$list2}) {\n        return 1 if exists($seen{$item});\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    foreach my $item1 (@$list1) {\n        foreach my $item2 (@$list2) {\n            if ($item1 eq $item2) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}",
    "    my %seen = ();\n    foreach my $item (@$list1) { $seen{$item} = 1 }\n    foreach my $item (@$list2) {\n        return 1 if $seen{$item};\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    my %hash = map { $_ => 1 } @$list2;\n    foreach my $elem (@$list1) {\n        return 1 if exists $hash{$elem};\n    }\n    return 0;\n}",
    "    my %hash = map { $_ => 1 } @$list2;\n    foreach my $e (@$list1) {\n        return 1 if exists $hash{$e};\n    }\n    return 0;\n}",
    "    foreach my $item1 (@$list1) {\n        foreach my $item2 (@$list2) {\n            if ($item1 eq $item2) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@{$list1}, @{$list2}) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    foreach my $item1 (@$list1) {\n        foreach my $item2 (@$list2) {\n            if ($item1 eq $item2) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}",
    "    foreach my $item1 (@$list1) {\n        foreach my $item2 (@$list2) {\n            if ($item1 eq $item2) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    my %list1 = map { $_ => 1 } @$list1;\n    my %list2 = map { $_ => 1 } @$list2;\n    foreach my $item (keys %list1) {\n        return 1 if exists $list2{$item};\n    }\n    return 0;\n}",
    "    foreach my $item1 (@$list1) {\n        foreach my $item2 (@$list2) {\n            return 1 if $item1 eq $item2;\n        }\n    }\n    return 0;\n}",
    "    my %seen = ();\n    foreach my $item (@{$list1}) { $seen{$item} = 1; }\n    foreach my $item (@{$list2}) {\n        return 1 if exists($seen{$item});\n    }\n    return 0;\n}",
    "    foreach my $item1 (@$list1) {\n        foreach my $item2 (@$list2) {\n            if ($item1 eq $item2) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}",
    "    my %seen = ();\n    foreach my $item (@$list1, @$list2) { $seen{$item}++ }\n    return grep { $seen{$_} > 1 } keys %seen;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    foreach my $i (@$list1) {\n        foreach my $j (@$list2) {\n            if ($i eq $j) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    foreach my $i (@$list1) {\n        foreach my $j (@$list2) {\n            if ($i eq $j) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}",
    "    my %hash = map { $_ => 1 } @$list2;\n    foreach my $elem (@$list1) {\n        return 1 if exists $hash{$elem};\n    }\n    return 0;\n}",
    "    my %seen = ();\n    foreach my $item (@{$list1}) { $seen{$item} = 1; }\n    foreach my $item (@{$list2}) {\n        return 1 if exists($seen{$item});\n    }\n    return 0;\n}",
    "    foreach my $i (@$list1) {\n        foreach my $j (@$list2) {\n            return 1 if $i eq $j;\n        }\n    }\n    return 0;\n}",
    "    foreach my $elem1 (@$list1) {\n        foreach my $elem2 (@$list2) {\n            if ($elem1 eq $elem2) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}",
    "    my %hash = map { $_ => 1 } @$list2;\n    foreach my $elem (@$list1) {\n        return 1 if exists $hash{$elem};\n    }\n    return 0;\n}",
    "    foreach my $i (@{$list1}) {\n        foreach my $j (@{$list2}) {\n            if ($i == $j) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    my %seen;\n    foreach my $item (@$list1, @$list2) { $seen{$item}++ }\n    foreach my $item (keys %seen) {\n        return 1 if $seen{$item} > 1;\n    }\n    return '';\n}",
    "    foreach my $item1 (@$list1) {\n        foreach my $item2 (@$list2) {\n            if ($item1 eq $item2) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    my %seen;\n    foreach my $item (@$list1, @$list2) {\n        $seen{$item}++;\n    }\n    foreach my $item (keys %seen) {\n        return 1 if $seen{$item} > 1;\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    foreach my $item1 (@$list1) {\n        foreach my $item2 (@$list2) {\n            if ($item1 == $item2) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}",
    "    my %hash = map { $_ => 1 } @$list2;\n    foreach my $e (@$list1) {\n        return 1 if exists $hash{$e};\n    }\n    return 0;\n}",
    "    foreach my $item1 (@$list1) {\n        foreach my $item2 (@$list2) {\n            if ($item1 eq $item2) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    foreach my $item1 (@$list1) {\n        foreach my $item2 (@$list2) {\n            return 1 if $item1 eq $item2;\n        }\n    }\n    return 0;\n}",
    "    foreach my $item1 (@$list1) {\n        foreach my $item2 (@$list2) {\n            if ($item1 == $item2) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    my %seen;\n    foreach my $item (@{$list1}) {\n        $seen{$item}++;\n    }\n    foreach my $item (@{$list2}) {\n        return 1 if $seen{$item};\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    my %seen;\n    foreach my $item (@$list1, @$list2) { $seen{$item}++ }\n    return grep { $seen{$_} > 1 } keys %seen;\n}",
    "    my %hash = map { $_ => 1 } @$list2;\n    foreach my $e (@$list1) {\n        return 1 if exists $hash{$e};\n    }\n    return 0;\n}",
    "    foreach my $item1 (@$list1) {\n        foreach my $item2 (@$list2) {\n            if ($item1 eq $item2) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@{$list1}, @{$list2}) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    my %seen = ();\n    foreach my $item (@$list1, @$list2) { $seen{$item}++ }\n    return grep { $seen{$_} > 1 } keys %seen;\n}",
    "    my %seen;\n    foreach my $item (@$list1, @$list2) {\n        $seen{$item}++;\n    }\n    foreach my $item (keys %seen) {\n        return 1 if $seen{$item} > 1;\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    my %seen = ();\n    foreach my $item (@{$list1}) { $seen{$item} = 1; }\n    foreach my $item (@{$list2}) {\n        return 1 if exists($seen{$item});\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    my %hash = map { $_ => 1 } @$list2;\n    foreach my $elem (@$list1) {\n        return 1 if exists $hash{$elem};\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    foreach my $item1 (@$list1) {\n        foreach my $item2 (@$list2) {\n            return 1 if $item1 eq $item2;\n        }\n    }\n    return 0;\n}",
    "    foreach my $i (@$list1) {\n        foreach my $j (@$list2) {\n            if($i == $j) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}",
    "    foreach my $i (@$list1) {\n        foreach my $j (@$list2) {\n            if ($i eq $j) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    my %hash = map { $_ => 1 } @$list2;\n    foreach (@$list1) {\n        return 1 if exists $hash{$_};\n    }\n    return 0;\n}",
    "    foreach my $i (@$list1) {\n        foreach my $j (@$list2) {\n            return 1 if $i eq $j;\n        }\n    }\n    return 0;\n}",
    "    my %hash = map { $_ => 1 } @$list2;\n    foreach my $elem (@$list1) {\n        return 1 if exists $hash{$elem};\n    }\n    return 0;\n}",
    "    foreach my $elem1 (@$list1) {\n        foreach my $elem2 (@$list2) {\n            if ($elem1 eq $elem2) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}",
    "    foreach my $i (@$list1) {\n        foreach my $j (@$list2) {\n            return 1 if $i eq $j;\n        }\n    }\n    return 0;\n}",
    "    foreach my $i (@$list1) {\n        foreach my $j (@$list2) {\n            if ($i == $j) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}",
    "    my %seen;\n    foreach my $item (@$list1, @$list2) { $seen{$item}++ }\n    return grep { $seen{$_} > 1 } keys %seen;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}\nmy @list1 = (1,2,3,4,5);\nmy @list2 = (6,7,8,9,10);\nprint overlapping(\\@list1, \\@list2);",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    my %hash = map { $_ => 1 } @$list2;\n    foreach my $elem (@$list1) {\n        return 1 if exists $hash{$elem};\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    foreach my $elem1 (@$list1) {\n        foreach my $elem2 (@$list2) {\n            if ($elem1 eq $elem2) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $element (@$list1, @$list2) { $count{$element}++ }\n    foreach my $element (keys %count) {\n        return 1 if $count{$element} > 1;\n    }\n    return 0;\n}",
    "    my %hash = map { $_ => 1 } @$list2;\n    foreach my $elem (@$list1) {\n        return 1 if exists $hash{$elem};\n    }\n    return 0;\n}",
    "    foreach my $item1 (@$list1) {\n        foreach my $item2 (@$list2) {\n            if ($item1 eq $item2) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}",
    "    my %seen = ();\n    foreach my $item (@{$list1}) { $seen{$item} = 1; }\n    foreach my $item (@{$list2}) {\n        return 1 if exists($seen{$item});\n    }\n    return 0;\n}",
    "    my %seen = ();\n    foreach my $item (@{$list1}) { $seen{$item} = 1; }\n    foreach my $item (@{$list2}) {\n        return 1 if exists($seen{$item});\n    }\n    return 0;\n}"
  ]
}
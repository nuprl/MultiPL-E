{
  "name": "mbpp_572_two_unique_nums",
  "language": "pl",
  "prompt": "# Write a plthon function to remove duplicate numbers from a given number of arrays.\nsub two_unique_nums {\n    my($nums) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_572_two_unique_nums.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&two_unique_nums;\n        if(eq_deeply($candidate->([1, 2, 3, 2, 3, 4, 5]),[1, 4, 5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2, 3, 2, 4, 5]),[1, 3, 4, 5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2, 3, 4, 5]),[1, 2, 3, 4, 5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums;\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @unique_nums, $num;\n        }\n    }\n    return @unique_nums;\n}",
    "    my %seen;\n    my @unique;\n    foreach my $num (@$nums) {\n        if(!$seen{$num}) {\n            push @unique, $num;\n            $seen{$num} = 1;\n        }\n    }\n    return @unique;\n}",
    "    my %count;\n    $count{$_}++ for @$nums;\n    my @uniq = grep { $count{$_} == 1 } keys %count;\n    return @uniq;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums = grep { $count{$_} == 1 } keys %count;\n    return @unique_nums;\n}",
    "    my $unique = 0;\n    foreach my $num (@$nums) {\n        $unique ^= $num;\n    }\n    return $unique;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique;\n    foreach my $num (@$nums) {\n        if ($count{$num} == 1) {\n            push @unique, $num;\n        }\n    }\n    return @unique;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums;\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @unique_nums, $num;\n        }\n    }\n    return @unique_nums;\n}",
    "    my %seen;\n    my @unique;\n    foreach my $num (@$nums) {\n        if (not $seen{$num}) {\n            push @unique, $num;\n            $seen{$num} = 1;\n        }\n    }\n    return @unique;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums = grep { $count{$_} == 1 } keys %count;\n    return @unique_nums;\n}",
    "    my %seen;\n    my @unique;\n    foreach my $num (@$nums) {\n        if(!$seen{$num}) {\n            push @unique, $num;\n            $seen{$num} = 1;\n        }\n    }\n    return @unique;\n}",
    "    my %seen;\n    my @unique;\n    foreach my $num (@$nums) {\n        if(!$seen{$num}) {\n            push @unique, $num;\n            $seen{$num} = 1;\n        }\n    }\n    return @unique;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums;\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @unique_nums, $num;\n        }\n    }\n    return @unique_nums;\n}",
    "    my %count;\n    my @unique;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    foreach my $num (@$nums) {\n        if ($count{$num} == 1) {\n            push @unique, $num;\n        }\n    }\n    return @unique;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique;\n    foreach my $num (@$nums) {\n        if ($count{$num} == 1) {\n            push @unique, $num;\n        }\n    }\n    return @unique;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique;\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @unique, $num;\n        }\n    }\n    return @unique;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums;\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @unique_nums, $num;\n        }\n    }\n    return @unique_nums;\n}",
    "    my %seen;\n    my @unique;\n    foreach my $num (@$nums) {\n        push @unique, $num unless $seen{$num}++;\n    }\n    return @unique;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums;\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @unique_nums, $num;\n        }\n    }\n    return @unique_nums;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums;\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @unique_nums, $num;\n        }\n    }\n    return @unique_nums;\n}",
    "    my %seen;\n    my @uniq;\n    foreach my $num (@$nums) {\n        if (!$seen{$num}) {\n            push @uniq, $num;\n            $seen{$num} = 1;\n        }\n    }\n    return @uniq;\n}",
    "    my %counts;\n    foreach my $num (@$nums) {\n        $counts{$num}++;\n    }\n    my @uniques;\n    foreach my $num (@$nums) {\n        if ($counts{$num} == 1) {\n            push @uniques, $num;\n        }\n    }\n    return @uniques;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums = grep { $count{$_} == 1 } keys %count;\n    return @unique_nums;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique;\n    foreach my $num (@$nums) {\n        if ($count{$num} == 1) {\n            push @unique, $num;\n        }\n    }\n    return @unique;\n}",
    "    my %count;\n    foreach my $num(@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums;\n    foreach my $num(@$nums) {\n        if($count{$num} == 1) {\n            push @unique_nums, $num;\n        }\n    }\n    return @unique_nums;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums;\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @unique_nums, $num;\n        }\n    }\n    return @unique_nums;\n}",
    "    my %seen;\n    my @unique;\n    foreach my $num (@$nums) {\n        push @unique, $num unless $seen{$num}++;\n    }\n    return @unique;\n}",
    "    my %seen;\n    my @unique;\n    foreach my $num (@$nums) {\n        if (!$seen{$num}) {\n            push @unique, $num;\n            $seen{$num} = 1;\n        }\n    }\n    return @unique;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums = grep { $count{$_} == 1 } keys %count;\n    return @unique_nums;\n}",
    "    my %seen;\n    my @unique;\n    foreach my $num (@$nums) {\n        if (!$seen{$num}) {\n            push @unique, $num;\n            $seen{$num} = 1;\n        }\n    }\n    return @unique;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums;\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @unique_nums, $num;\n        }\n    }\n    return @unique_nums;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique;\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @unique, $num;\n        }\n    }\n    return @unique;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums;\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @unique_nums, $num;\n        }\n    }\n    return @unique_nums;\n}",
    "    my %seen;\n    for my $num (@$nums) {\n        $seen{$num}++;\n    }\n    my @uniq;\n    for my $num (keys %seen) {\n        push @uniq, $num if $seen{$num} == 1;\n    }\n    return @uniq;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique;\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @unique, $num;\n        }\n    }\n    return @unique;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums = grep { $count{$_} == 1 } @$nums;\n    return @unique_nums;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique;\n    foreach my $num (@$nums) {\n        if ($count{$num} == 1) {\n            push @unique, $num;\n        }\n    }\n    return @unique;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique;\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @unique, $num;\n        }\n    }\n    return @unique;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique;\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @unique, $num;\n        }\n    }\n    return @unique;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums = grep { $count{$_} == 1 } keys %count;\n    return @unique_nums;\n}",
    "    my %seen;\n    my @unique;\n    foreach my $num (@$nums) {\n        if (!$seen{$num}) {\n            push @unique, $num;\n            $seen{$num} = 1;\n        }\n    }\n    return @unique;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @uniq_nums = grep { $count{$_} == 1 } keys %count;\n    return @uniq_nums;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique;\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @unique, $num;\n        }\n    }\n    return @unique;\n}",
    "    my %seen;\n    my @unique;\n    foreach my $num (@$nums) {\n        if (!$seen{$num}) {\n            push @unique, $num;\n            $seen{$num} = 1;\n        }\n    }\n    return @unique;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique;\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @unique, $num;\n        }\n    }\n    return @unique;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums;\n    foreach my $num (@$nums) {\n        if ($count{$num} == 1) {\n            push @unique_nums, $num;\n        }\n    }\n    return @unique_nums;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums = grep { $count{$_} == 1 } @$nums;\n    return @unique_nums;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums = grep { $count{$_} == 1 } keys %count;\n    return @unique_nums;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique;\n    foreach my $num (@$nums) {\n        if ($count{$num} == 1) {\n            push @unique, $num;\n        }\n    }\n    return @unique;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums = grep { $count{$_} == 1 } keys %count;\n    return @unique_nums;\n}",
    "    my %seen;\n    my @unique;\n    foreach my $num (@$nums) {\n        if (!$seen{$num}) {\n            push @unique, $num;\n            $seen{$num} = 1;\n        }\n    }\n    return @unique;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums;\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @unique_nums, $num;\n        }\n    }\n    return @unique_nums;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums;\n    foreach my $num (@$nums) {\n        if ($count{$num} == 1) {\n            push @unique_nums, $num;\n        }\n    }\n    return @unique_nums;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique;\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @unique, $num;\n        }\n    }\n    return @unique;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums;\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @unique_nums, $num;\n        }\n    }\n    return @unique_nums;\n}",
    "    my %seen;\n    my @unique;\n    foreach my $num (@$nums) {\n        if (!$seen{$num}) {\n            push @unique, $num;\n            $seen{$num} = 1;\n        }\n    }\n    return @unique;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique;\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @unique, $num;\n        }\n    }\n    return @unique;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique;\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @unique, $num;\n        }\n    }\n    return @unique;\n}",
    "    my %seen;\n    my @unique;\n    foreach my $num (@$nums) {\n        if (!$seen{$num}) {\n            push @unique, $num;\n            $seen{$num} = 1;\n        }\n    }\n    return @unique;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @uniq_nums;\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @uniq_nums, $num;\n        }\n    }\n    return @uniq_nums;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique;\n    foreach my $num (@$nums) {\n        if ($count{$num} == 1) {\n            push @unique, $num;\n        }\n    }\n    return @unique;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @uniq = grep { $count{$_} == 1 } keys %count;\n    return @uniq;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums;\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @unique_nums, $num;\n        }\n    }\n    return @unique_nums;\n}",
    "    my %seen;\n    my @uniq;\n    foreach my $num (@$nums) {\n        push(@uniq, $num) unless $seen{$num}++;\n    }\n    return @uniq;\n}",
    "    my %count = ();\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums = ();\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @unique_nums, $num;\n        }\n    }\n    return @unique_nums;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique;\n    foreach my $num (@$nums) {\n        if ($count{$num} == 1) {\n            push @unique, $num;\n        }\n    }\n    return @unique;\n}",
    "    my %hash = ();\n    my @unique = ();\n    foreach my $num (@$nums) {\n        if (exists $hash{$num}) {\n            $hash{$num}++;\n        } else {\n            $hash{$num} = 1;\n        }\n    }\n    foreach my $key (keys %hash) {\n        if ($hash{$key} == 1) {\n            push @unique, $key;\n        }\n    }\n    return @unique;\n}",
    "    my %seen;\n    my @uniq;\n    foreach my $num (@$nums) {\n        push(@uniq, $num) unless $seen{$num}++;\n    }\n    return @uniq;\n}",
    "    my %seen;\n    my @unique;\n    foreach my $num (@$nums) {\n        if (!$seen{$num}) {\n            push @unique, $num;\n            $seen{$num} = 1;\n        }\n    }\n    return @unique;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique;\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @unique, $num;\n        }\n    }\n    return @unique;\n}",
    "    my %count;\n    my @unique;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @unique, $num;\n        }\n    }\n    return @unique;\n}",
    "    my $count = 0;\n    my %hash;\n    foreach my $num (@$nums) {\n        if (!exists $hash{$num}) {\n            $hash{$num} = 1;\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique = grep { $count{$_} == 1 } keys %count;\n    return @unique;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums;\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @unique_nums, $num;\n        }\n    }\n    return @unique_nums;\n}",
    "    my %counts;\n    $counts{$_}++ for @$nums;\n    return grep { $counts{$_} == 1 } keys %counts;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique;\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @unique, $num;\n        }\n    }\n    return @unique;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums;\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @unique_nums, $num;\n        }\n    }\n    return @unique_nums;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums;\n    foreach my $num (@$nums) {\n        if ($count{$num} == 1) {\n            push @unique_nums, $num;\n        }\n    }\n    return @unique_nums;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums;\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @unique_nums, $num;\n        }\n    }\n    return @unique_nums;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums;\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @unique_nums, $num;\n        }\n    }\n    return @unique_nums;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums;\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @unique_nums, $num;\n        }\n    }\n    return \\@unique_nums;\n}",
    "    my $count = 0;\n    my %hash = map { $_ => 1 } @$nums;\n    for my $key (keys %hash) {\n        $count++;\n    }\n    return $count;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique;\n    foreach my $num (@$nums) {\n        if ($count{$num} == 1) {\n            push @unique, $num;\n        }\n    }\n    return @unique;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums = grep { $count{$_} == 1 } keys %count;\n    return @unique_nums;\n}",
    "    my %seen;\n    my @unique;\n    foreach my $num (@$nums) {\n        if (!$seen{$num}) {\n            push @unique, $num;\n            $seen{$num} = 1;\n        }\n    }\n    return @unique;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique;\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @unique, $num;\n        }\n    }\n    return @unique;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums = grep { $count{$_} == 1 } keys %count;\n    return \\@unique_nums;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums;\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @unique_nums, $num;\n        }\n    }\n    return @unique_nums;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums = grep { $count{$_} == 1 } keys %count;\n    return @unique_nums;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique;\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @unique, $num;\n        }\n    }\n    return @unique;\n}",
    "    my %seen;\n    my @uniq;\n    foreach my $num (@$nums) {\n        if (!$seen{$num}) {\n            push @uniq, $num;\n            $seen{$num} = 1;\n        }\n    }\n    return @uniq;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums;\n    foreach my $num (@$nums) {\n        if ($count{$num} == 1) {\n            push @unique_nums, $num;\n        }\n    }\n    return @unique_nums;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums;\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @unique_nums, $num;\n        }\n    }\n    return @unique_nums;\n}",
    "    my %seen;\n    my @unique_nums;\n    foreach my $num (@$nums) {\n        if (!$seen{$num}) {\n            push @unique_nums, $num;\n            $seen{$num} = 1;\n        }\n    }\n    return @unique_nums;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums;\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @unique_nums, $num;\n        }\n    }\n    return @unique_nums;\n}",
    "    my %seen;\n    my @unique;\n    foreach my $num (@$nums) {\n        if (!$seen{$num}) {\n            push @unique, $num;\n            $seen{$num} = 1;\n        }\n    }\n    return @unique;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique;\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @unique, $num;\n        }\n    }\n    return @unique;\n}",
    "    my %seen;\n    my @uniq;\n    foreach my $num (@$nums) {\n        if(!$seen{$num}) {\n            push @uniq, $num;\n            $seen{$num} = 1;\n        }\n    }\n    return @uniq;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums;\n    foreach my $num (@$nums) {\n        if ($count{$num} == 1) {\n            push @unique_nums, $num;\n        }\n    }\n    return @unique_nums;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums = grep { $count{$_} == 1 } keys %count;\n    return \\@unique_nums;\n}",
    "    my %seen;\n    my @unique;\n    foreach my $num (@$nums) {\n        if (!$seen{$num}) {\n            push @unique, $num;\n            $seen{$num} = 1;\n        }\n    }\n    return @unique;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums = grep { $count{$_} == 1 } keys %count;\n    return @unique_nums;\n}",
    "    my %count;\n    for my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums;\n    for my $num (@$nums) {\n        if ($count{$num} == 1) {\n            push @unique_nums, $num;\n        }\n    }\n    return @unique_nums;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique;\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @unique, $num;\n        }\n    }\n    return @unique;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums;\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @unique_nums, $num;\n        }\n    }\n    return @unique_nums;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @uniq_nums;\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @uniq_nums, $num;\n        }\n    }\n    return @uniq_nums;\n}",
    "    my %hash = ();\n    foreach my $num (@$nums) {\n        $hash{$num}++;\n    }\n    my @unique = ();\n    foreach my $num (keys %hash) {\n        if ($hash{$num} == 1) {\n            push @unique, $num;\n        }\n    }\n    return @unique;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums = grep { $count{$_} == 1 } @$nums;\n    return @unique_nums;\n}",
    "    my %seen;\n    my @unique;\n    foreach my $num (@$nums) {\n        push(@unique, $num) unless $seen{$num}++;\n    }\n    return @unique;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums = grep { $count{$_} == 1 } keys %count;\n    return @unique_nums;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique;\n    foreach my $num (@$nums) {\n        if ($count{$num} == 1) {\n            push @unique, $num;\n        }\n    }\n    return @unique;\n}",
    "    my %counts;\n    foreach my $num (@$nums) {\n        $counts{$num}++;\n    }\n    my @unique_nums;\n    foreach my $num (keys %counts) {\n        if ($counts{$num} == 1) {\n            push @unique_nums, $num;\n        }\n    }\n    return @unique_nums;\n}",
    "    my %count;\n    my @unique;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    foreach my $num (@$nums) {\n        if ($count{$num} == 1) {\n            push @unique, $num;\n        }\n    }\n    return @unique;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique;\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @unique, $num;\n        }\n    }\n    return @unique;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums;\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @unique_nums, $num;\n        }\n    }\n    return @unique_nums;\n}",
    "    my %counts;\n    foreach my $num (@$nums) {\n        $counts{$num}++;\n    }\n    my @unique_nums;\n    foreach my $num (keys %counts) {\n        if ($counts{$num} == 1) {\n            push @unique_nums, $num;\n        }\n    }\n    return @unique_nums;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums;\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @unique_nums, $num;\n        }\n    }\n    return @unique_nums;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums = grep { $count{$_} == 1 } keys %count;\n    return @unique_nums;\n}",
    "    my %counts;\n    foreach my $num (@$nums) {\n        $counts{$num}++;\n    }\n    my @unique_nums;\n    foreach my $num (keys %counts) {\n        push @unique_nums, $num if $counts{$num} == 1;\n    }\n    return @unique_nums;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique;\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @unique, $num;\n        }\n    }\n    return @unique;\n}",
    "    my %seen;\n    my @unique;\n    foreach my $num (@$nums) {\n        if(!$seen{$num}) {\n            push @unique, $num;\n            $seen{$num} = 1;\n        }\n    }\n    return @unique;\n}",
    "    my %seen;\n    my @uniq;\n    foreach my $num (@$nums) {\n        push @uniq, $num unless $seen{$num}++;\n    }\n    return @uniq;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums = grep { $count{$_} == 1 } keys %count;\n    return @unique_nums;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums;\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @unique_nums, $num;\n        }\n    }\n    return @unique_nums;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums;\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @unique_nums, $num;\n        }\n    }\n    return @unique_nums;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums;\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @unique_nums, $num;\n        }\n    }\n    return @unique_nums;\n}",
    "    my %counts;\n    foreach my $num (@$nums) {\n        $counts{$num}++;\n    }\n    my @unique_nums;\n    foreach my $num (keys %counts) {\n        if ($counts{$num} == 1) {\n            push @unique_nums, $num;\n        }\n    }\n    return @unique_nums;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums = grep { $count{$_} == 1 } keys %count;\n    return @unique_nums;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums = grep { $count{$_} == 1 } @$nums;\n    return @unique_nums;\n}",
    "    my %count;\n    map {$count{$_}++} @$nums;\n    my @unique = grep { $count{$_} == 1 } @$nums;\n    return @unique;\n}",
    "    my $count = 0;\n    my %hash;\n    foreach my $num (@$nums) {\n        $hash{$num}++;\n    }\n    foreach my $key (keys %hash) {\n        if ($hash{$key} == 1) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums;\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @unique_nums, $num;\n        }\n    }\n    return @unique_nums;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique;\n    foreach my $num (@$nums) {\n        if ($count{$num} == 1) {\n            push @unique, $num;\n        }\n    }\n    return @unique;\n}",
    "    my $first = 0;\n    my $second = 0;\n    foreach my $num (@$nums) {\n        $first ^= $num;\n    }\n    my $right_most_set_bit = $first & ~($first - 1);\n    foreach my $num (@$nums) {\n        if ($num & $right_most_set_bit) {\n            $second ^= $num;\n        }\n    }\n    return ($first, $second);\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique;\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @unique, $num;\n        }\n    }\n    return @unique;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums = grep { $count{$_} == 1 } keys %count;\n    return @unique_nums;\n}",
    "    my %count;\n    my @unique;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @unique, $num;\n        }\n    }\n    return @unique;\n}",
    "    my %count;\n    $count{$_}++ for @$nums;\n    my @unique = grep { $count{$_} == 1 } @$nums;\n    return @unique;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums;\n    foreach my $num (@$nums) {\n        if ($count{$num} == 1) {\n            push @unique_nums, $num;\n        }\n    }\n    return @unique_nums;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums;\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @unique_nums, $num;\n        }\n    }\n    return @unique_nums;\n}",
    "    my %seen;\n    my @unique;\n    foreach my $num (@$nums) {\n        if (!$seen{$num}) {\n            push @unique, $num;\n            $seen{$num} = 1;\n        }\n    }\n    return @unique;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique;\n    foreach my $num (@$nums) {\n        if ($count{$num} == 1) {\n            push @unique, $num;\n        }\n    }\n    return @unique;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums = grep { $count{$_} == 1 } keys %count;\n    return @unique_nums;\n}",
    "    my %seen = ();\n    my @uniq = ();\n    foreach my $num (@$nums) {\n        if (!$seen{$num}) {\n            push @uniq, $num;\n            $seen{$num} = 1;\n        }\n    }\n    return @uniq;\n}",
    "    my %count;\n    my @unique;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @unique, $num;\n        }\n    }\n    return @unique;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums;\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @unique_nums, $num;\n        }\n    }\n    return @unique_nums;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique;\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @unique, $num;\n        }\n    }\n    return @unique;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums;\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @unique_nums, $num;\n        }\n    }\n    return @unique_nums;\n}",
    "    my $unique = 0;\n    foreach my $num (@$nums) {\n        $unique ^= $num;\n    }\n    return $unique;\n}",
    "    my %counts;\n    foreach my $num (@$nums) {\n        $counts{$num}++;\n    }\n    my @unique;\n    foreach my $num (@$nums) {\n        if ($counts{$num} == 1) {\n            push @unique, $num;\n        }\n    }\n    return @unique;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums;\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @unique_nums, $num;\n        }\n    }\n    return @unique_nums;\n}",
    "    my %seen;\n    foreach my $num (@$nums) {\n        $seen{$num}++;\n    }\n    my @unique_nums = grep { $seen{$_} == 1 } keys %seen;\n    return @unique_nums;\n}",
    "    my %count;\n    $count{$_}++ for @$nums;\n    my @unique = grep { $count{$_} == 1 } @$nums;\n    return @unique;\n}",
    "    my %seen;\n    my @unique;\n    foreach my $num (@$nums) {\n        push @unique, $num unless $seen{$num}++;\n    }\n    return @unique;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique;\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @unique, $num;\n        }\n    }\n    return @unique;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    return grep { $count{$_} == 1 } keys %count;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums = grep { $count{$_} == 1 } keys %count;\n    return @unique_nums;\n}",
    "    my %counts;\n    for my $num (@$nums) {\n        $counts{$num}++;\n    }\n    my @unique_nums = grep { $counts{$_} == 1 } keys %counts;\n    return @unique_nums;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums;\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @unique_nums, $num;\n        }\n    }\n    return @unique_nums;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @uniq;\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @uniq, $num;\n        }\n    }\n    return @uniq;\n}",
    "    my %seen;\n    my @unique;\n    foreach my $num (@$nums) {\n        if (!$seen{$num}) {\n            push @unique, $num;\n            $seen{$num} = 1;\n        }\n    }\n    return @unique;\n}\nmy @nums = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);\nmy @unique = two_unique_nums(\\@nums);\nprint \"@unique\\n\";",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @uniq_nums = grep { $count{$_} == 1 } keys %count;\n    return @uniq_nums;\n}",
    "    my %seen;\n    my @unique;\n    foreach my $num (@$nums) {\n        if(!$seen{$num}) {\n            push @unique, $num;\n            $seen{$num} = 1;\n        }\n    }\n    return @unique;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums;\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @unique_nums, $num;\n        }\n    }\n    return @unique_nums;\n}",
    "    my %seen;\n    my @unique;\n    foreach my $num (@$nums) {\n        if (!$seen{$num}) {\n            push @unique, $num;\n            $seen{$num} = 1;\n        }\n    }\n    return @unique;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique;\n    foreach my $num (@$nums) {\n        if ($count{$num} == 1) {\n            push @unique, $num;\n        }\n    }\n    return @unique;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @uniq;\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @uniq, $num;\n        }\n    }\n    return @uniq;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique;\n    foreach my $num (@$nums) {\n        if ($count{$num} == 1) {\n            push @unique, $num;\n        }\n    }\n    return @unique;\n}",
    "    my %count;\n    $count{$_}++ for @$nums;\n    return grep { $count{$_} == 1 } @$nums;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique;\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @unique, $num;\n        }\n    }\n    return @unique;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique;\n    foreach my $num (@$nums) {\n        if ($count{$num} == 1) {\n            push @unique, $num;\n        }\n    }\n    return @unique;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums;\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @unique_nums, $num;\n        }\n    }\n    return @unique_nums;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums;\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @unique_nums, $num;\n        }\n    }\n    return @unique_nums;\n}",
    "    my %counts;\n    foreach my $num (@$nums) {\n        $counts{$num}++;\n    }\n    my @unique_nums;\n    foreach my $num (keys %counts) {\n        if ($counts{$num} == 1) {\n            push @unique_nums, $num;\n        }\n    }\n    return @unique_nums;\n}",
    "    my %counts;\n    for my $num (@$nums) {\n        $counts{$num}++;\n    }\n    my @unique_nums = grep { $counts{$_} == 1 } keys %counts;\n    return @unique_nums;\n}",
    "    my %seen;\n    my @unique;\n    foreach my $num (@$nums) {\n        if (!$seen{$num}) {\n            push @unique, $num;\n            $seen{$num} = 1;\n        }\n    }\n    return \\@unique;\n}",
    "    my $result = 0;\n    foreach my $num (@$nums) {\n        $result ^= $num;\n    }\n    return $result;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums;\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @unique_nums, $num;\n        }\n    }\n    return @unique_nums;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique;\n    foreach my $num (@$nums) {\n        if ($count{$num} == 1) {\n            push @unique, $num;\n        }\n    }\n    return @unique;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique;\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @unique, $num;\n        }\n    }\n    return @unique;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums = grep { $count{$_} == 1 } keys %count;\n    return @unique_nums;\n}",
    "    my %counts;\n    foreach my $num (@$nums) {\n        $counts{$num}++;\n    }\n    my @unique;\n    foreach my $num (keys %counts) {\n        if ($counts{$num} == 1) {\n            push @unique, $num;\n        }\n    }\n    return @unique;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums = grep { $count{$_} == 1 } keys %count;\n    return \\@unique_nums;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums = grep { $count{$_} == 1 } keys %count;\n    return @unique_nums;\n}",
    "    my %hash = ();\n    foreach my $num (@$nums) {\n        $hash{$num}++;\n    }\n    my @unique = ();\n    foreach my $num (keys %hash) {\n        if ($hash{$num} == 1) {\n            push @unique, $num;\n        }\n    }\n    return @unique;\n}",
    "    my %seen;\n    my @unique;\n    foreach my $num (@$nums) {\n        if(!$seen{$num}) {\n            push @unique, $num;\n            $seen{$num} = 1;\n        }\n    }\n    return @unique;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums;\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @unique_nums, $num;\n        }\n    }\n    return @unique_nums;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @uniq_nums;\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @uniq_nums, $num;\n        }\n    }\n    return @uniq_nums;\n}",
    "    my %seen;\n    my @unique;\n    foreach my $num (@$nums) {\n        push(@unique, $num) unless $seen{$num}++;\n    }\n    return @unique;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums;\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @unique_nums, $num;\n        }\n    }\n    return @unique_nums;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique;\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @unique, $num;\n        }\n    }\n    return @unique;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique;\n    foreach my $num (@$nums) {\n        if ($count{$num} == 1) {\n            push @unique, $num;\n        }\n    }\n    return @unique;\n}",
    "    my %seen;\n    my @unique;\n    foreach my $num (@$nums) {\n        if (!$seen{$num}) {\n            push @unique, $num;\n            $seen{$num} = 1;\n        }\n    }\n    return @unique;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique;\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @unique, $num;\n        }\n    }\n    return @unique;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums;\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @unique_nums, $num;\n        }\n    }\n    return @unique_nums;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique;\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @unique, $num;\n        }\n    }\n    return @unique;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique_nums;\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @unique_nums, $num;\n        }\n    }\n    return @unique_nums;\n}",
    "    my %counts;\n    foreach my $num (@$nums) {\n        $counts{$num}++;\n    }\n    my @unique;\n    foreach my $num (@$nums) {\n        if ($counts{$num} == 1) {\n            push @unique, $num;\n        }\n    }\n    return @unique;\n}",
    "    my %count;\n    foreach my $num (@$nums) {\n        $count{$num}++;\n    }\n    my @unique;\n    foreach my $num (keys %count) {\n        if ($count{$num} == 1) {\n            push @unique, $num;\n        }\n    }\n    return @unique;\n}",
    "    my $unique_nums = [];\n    my $count = 0;\n    foreach my $num (@$nums) {\n        if ($count == 2) {\n            last;\n        }\n        if (!grep {$_ == $num} @$unique_nums) {\n            push @$unique_nums, $num;\n            $count++;\n        }\n    }\n    return $unique_nums;\n}"
  ]
}
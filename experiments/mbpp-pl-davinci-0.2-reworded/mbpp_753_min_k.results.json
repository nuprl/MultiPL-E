{
  "name": "mbpp_753_min_k",
  "language": "pl",
  "prompt": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_753_min_k.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "results": [
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort {$a <=> $b} @$test_list;\n    my @min_k = @sorted[0..$K-1];\n    return \\@min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted_list = sort { $a <=> $b } @$test_list;\n    return @sorted_list[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @test_list = @$test_list;\n    my @min_k = ();\n    my $min_k_index = 0;\n    my $min_k_value = $test_list[0];\n    for (my $i = 0; $i < $K; $i++) {\n        $min_k[$i] = $test_list[$i];\n        if ($min_k[$i] < $min_k_value) {\n            $min_k_value = $min_k[$i];\n            $min_k_index = $i;\n        }\n    }\n    for (my $i = $K; $i < scalar @test_list; $i++) {\n        if ($test_list[$i] < $min_k_value) {\n            $min_k[$min_k_index] = $test_list[$i];\n            $min_k_value = $min_k[$min_k_index];\n            for (my $j = 0; $j < $K; $j++) {\n                if ($min_k[$j] < $min_k_value) {\n                    $min_k_value = $min_k[$j];\n                    $min_k_index = $j;\n                }\n            }\n        }\n    }\n    return @min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted_list = sort {$a <=> $b} @$test_list;\n    return @sorted_list[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort {$a <=> $b} @$test_list;\n    my @min_k = @sorted[0..$K-1];\n    return \\@min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @test_list = @$test_list;\n    my @min_k;\n    my $min_k_size = 0;\n    my $min_k_index = 0;\n    for (my $i = 0; $i < scalar(@test_list); $i++) {\n        if ($min_k_size < $K) {\n            $min_k[$min_k_size] = $test_list[$i];\n            $min_k_size++;\n        } else {\n            $min_k_index = 0;\n            for (my $j = 1; $j < $K; $j++) {\n                if ($min_k[$j] < $min_k[$min_k_index]) {\n                    $min_k_index = $j;\n                }\n            }\n            if ($test_list[$i] < $min_k[$min_k_index]) {\n                $min_k[$min_k_index] = $test_list[$i];\n            }\n        }\n    }\n    return @min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort { $a <=> $b } @$test_list;\n    return @sorted[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort {$a <=> $b} @$test_list;\n    return @sorted[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort { $a <=> $b } @$test_list;\n    my @min_k = @sorted[0..$K-1];\n    return \\@min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted_list = sort {$a <=> $b} @$test_list;\n    return @sorted_list[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted_list = sort {$a <=> $b} @$test_list;\n    my @min_k = @sorted_list[0..$K-1];\n    return @min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted_list = sort {$a <=> $b} @$test_list;\n    return @sorted_list[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted_list = sort {$a <=> $b} @$test_list;\n    my @min_k = @sorted_list[0..$K-1];\n    return \\@min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @test_list = @$test_list;\n    my @sorted_list = sort { $a <=> $b } @test_list;\n    my @min_k = @sorted_list[0..$K-1];\n    return @min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted_list = sort {$a <=> $b} @$test_list;\n    my @min_k = @sorted_list[0 .. $K - 1];\n    return @min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted_list = sort {$a <=> $b} @$test_list;\n    return @sorted_list[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted_list = sort {$a <=> $b} @$test_list;\n    my @min_k = @sorted_list[0..$K-1];\n    return @min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted_list = sort { $a <=> $b } @$test_list;\n    return @sorted_list[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @test_list = @$test_list;\n    my $size = scalar @test_list;\n    my @min_k = ();\n    my $i = 0;\n    while ($i < $K) {\n        $min_k[$i] = $test_list[$i];\n        $i++;\n    }\n    $min_k[$K] = -1;\n    $i = $K;\n    while ($i < $size) {\n        my $j = 0;\n        while ($j < $K) {\n            if ($test_list[$i] < $min_k[$j]) {\n                $min_k[$j] = $test_list[$i];\n                last;\n            }\n            $j++;\n        }\n        $i++;\n    }\n    return @min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort {$a <=> $b} @$test_list;\n    my @min_k = @sorted[0..$K-1];\n    return @min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @min_k = ();\n    my $min_k_size = 0;\n    my $test_list_size = scalar(@$test_list);\n    for (my $i = 0; $i < $test_list_size; $i++) {\n        if ($min_k_size < $K) {\n            push @min_k, $test_list->[$i];\n            $min_k_size++;\n            if ($min_k_size == $K) {\n                @min_k = sort {$a <=> $b} @min_k;\n            }\n        } else {\n            if ($test_list->[$i] < $min_k[$min_k_size - 1]) {\n                $min_k[$min_k_size - 1] = $test_list->[$i];\n                @min_k = sort {$a <=> $b} @min_k;\n            }\n        }\n    }\n    return @min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpf36v4yev.pl line 23.\nBEGIN failed--compilation aborted at /tmp/tmpf36v4yev.pl line 23.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted_list = sort {$a <=> $b} @$test_list;\n    return @sorted_list[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort {$a <=> $b} @$test_list;\n    return @sorted[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort { $a <=> $b } @$test_list;\n    return @sorted[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort { $a <=> $b } @$test_list;\n    return @sorted[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort {$a <=> $b} @$test_list;\n    return @sorted[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @test_list = @$test_list;\n    my @result;\n    my $i = 0;\n    while ($i < $K) {\n        $result[$i] = $test_list[$i];\n        $i++;\n    }\n    @result = sort {$a <=> $b} @result;\n    while ($i < @test_list) {\n        if ($test_list[$i] < $result[$K-1]) {\n            $result[$K-1] = $test_list[$i];\n            @result = sort {$a <=> $b} @result;\n        }\n        $i++;\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpxpw4yltd.pl line 21.\nBEGIN failed--compilation aborted at /tmp/tmpxpw4yltd.pl line 21.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted_list = sort {$a <=> $b} @$test_list;\n    my @min_k = @sorted_list[0..$K-1];\n    return @min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted_list = sort {$a <=> $b} @$test_list;\n    my @min_k = @sorted_list[0..$K-1];\n    return @min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort {$a <=> $b} @$test_list;\n    return @sorted[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @test_list = @$test_list;\n    my @result;\n    my $test_list_size = scalar @test_list;\n    my $result_size = 0;\n    for (my $i = 0; $i < $test_list_size; $i++) {\n        if ($result_size < $K) {\n            $result[$result_size] = $test_list[$i];\n            $result_size++;\n        } else {\n            my $max = $result[0];\n            my $max_index = 0;\n            for (my $j = 1; $j < $K; $j++) {\n                if ($result[$j] > $max) {\n                    $max = $result[$j];\n                    $max_index = $j;\n                }\n            }\n            if ($test_list[$i] < $max) {\n                $result[$max_index] = $test_list[$i];\n            }\n        }\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpa8qbodc3.pl line 28.\nBEGIN failed--compilation aborted at /tmp/tmpa8qbodc3.pl line 28.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort {$a <=> $b} @$test_list;\n    return @sorted[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort {$a <=> $b} @$test_list;\n    return @sorted[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort {$a <=> $b} @$test_list;\n    return @sorted[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @list = @$test_list;\n    my @min_list;\n    my $min_list_size = 0;\n    my $min_list_index = 0;\n    my $min_list_value = 0;\n    my $list_size = scalar @list;\n    my $list_index = 0;\n    my $list_value = 0;\n    while ($list_index < $list_size) {\n        $list_value = $list[$list_index];\n        if ($min_list_size < $K) {\n            $min_list[$min_list_size] = $list_value;\n            $min_list_size++;\n            $min_list_index = $min_list_size - 1;\n            $min_list_value = $list_value;\n            while ($min_list_index > 0) {\n                if ($min_list[$min_list_index] < $min_list[$min_list_index - 1]) {\n                    $min_list_value = $min_list[$min_list_index];\n                    $min_list[$min_list_index] = $min_list[$min_list_index - 1];\n                    $min_list[$min_list_index - 1] = $min_list_value;\n                }\n                $min_list_index--;\n            }\n        } else {\n            if ($list_value < $min_list[$K - 1]) {\n                $min_list[$K - 1] = $list_value;\n                $min_list_index = $K - 1;\n                $min_list_value = $list_value;\n                while ($min_list_index > 0) {\n                    if ($min_list[$min_list_index] < $min_list[$min_list_index - 1]) {\n                        $min_list_value = $min_list[$min_list_index];\n                        $min_list[$min_list_index] = $min_list[$min_list_index - 1];\n                        $min_list[$min_list_index - 1] = $min_list\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "\"use\" not allowed in expression at /tmp/tmp3w_izoye.pl line 37, at end of line\nsyntax error at /tmp/tmp3w_izoye.pl line 37, near \"$min_list\nuse Test::Deep\"\nMissing right curly or square bracket at /tmp/tmp3w_izoye.pl line 56, at end of line\nsyntax error at /tmp/tmp3w_izoye.pl line 56, at EOF\nExecution of /tmp/tmp3w_izoye.pl aborted due to compilation errors.\n",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort {$a <=> $b} @$test_list;\n    my @min_k = @sorted[0..$K-1];\n    return @min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted_list = sort {$a <=> $b} @$test_list;\n    my @min_k = @sorted_list[0..$K-1];\n    return @min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted_list = sort { $a <=> $b } @$test_list;\n    my @min_k = @sorted_list[0..$K-1];\n    return @min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp5cp7swox.pl line 8.\nBEGIN failed--compilation aborted at /tmp/tmp5cp7swox.pl line 8.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort {$a <=> $b} @$test_list;\n    return @sorted[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @test_list = @$test_list;\n    my @min_k = ();\n    my $min_k_size = 0;\n    my $i = 0;\n    while($i < scalar @test_list) {\n        if ($min_k_size < $K) {\n            push @min_k, $test_list[$i];\n            $min_k_size++;\n        }\n        else {\n            my $max_index = max_index(\\@min_k);\n            if ($test_list[$i] < $min_k[$max_index]) {\n                $min_k[$max_index] = $test_list[$i];\n            }\n        }\n        $i++;\n    }\n    return \\@min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpz5vhob7z.pl line 23.\nBEGIN failed--compilation aborted at /tmp/tmpz5vhob7z.pl line 23.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @list = sort {$a <=> $b} @$test_list;\n    return @list[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpbp8ysjvq.pl line 7.\nBEGIN failed--compilation aborted at /tmp/tmpbp8ysjvq.pl line 7.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted_list = sort { $a <=> $b } @$test_list;\n    my @min_k = @sorted_list[0..$K-1];\n    return @min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp5cp7swox.pl line 8.\nBEGIN failed--compilation aborted at /tmp/tmp5cp7swox.pl line 8.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort {$a <=> $b} @$test_list;\n    return @sorted[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort {$a <=> $b} @$test_list;\n    my @min_k = @sorted[0..$K-1];\n    return @min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort {$a <=> $b} @$test_list;\n    return @sorted[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted_list = sort {$a <=> $b} @$test_list;\n    return @sorted_list[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted_list = sort {$a <=> $b} @$test_list;\n    my @min_k = @sorted_list[0..$K-1];\n    return @min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort {$a <=> $b} @$test_list;\n    my @min_k = @sorted[0..$K-1];\n    return @min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort {$a <=> $b} @$test_list;\n    return @sorted[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my $n = scalar @$test_list;\n    my @min_k = ();\n    for (my $i = 0; $i < $n; $i++) {\n        if ($i < $K) {\n            push @min_k, $test_list->[$i];\n        } else {\n            my $max = max(@min_k);\n            if ($test_list->[$i] < $max) {\n                my $j = 0;\n                while ($j < $K) {\n                    if ($min_k[$j] == $max) {\n                        $min_k[$j] = $test_list->[$i];\n                        last;\n                    }\n                    $j++;\n                }\n            }\n        }\n    }\n    return @min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpgqd26ibs.pl line 25.\nBEGIN failed--compilation aborted at /tmp/tmpgqd26ibs.pl line 25.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort { $a <=> $b } @$test_list;\n    return @sorted[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @test_list = @$test_list;\n    my @sorted = sort { $a <=> $b } @test_list;\n    my @min_k = @sorted[0..$K-1];\n    return @min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpk_njglzt.pl line 9.\nBEGIN failed--compilation aborted at /tmp/tmpk_njglzt.pl line 9.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted_list = sort {$a <=> $b} @$test_list;\n    return @sorted_list[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort { $a <=> $b } @$test_list;\n    return @sorted[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort { $a <=> $b } @$test_list;\n    return @sorted[0 .. $K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpmvp2jbjj.pl line 7.\nBEGIN failed--compilation aborted at /tmp/tmpmvp2jbjj.pl line 7.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort {$a <=> $b} @$test_list;\n    return @sorted[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort {$a <=> $b} @$test_list;\n    return @sorted[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort {$a <=> $b} @$test_list;\n    return @sorted[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort {$a <=> $b} @$test_list;\n    return @sorted[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort { $a <=> $b } @$test_list;\n    my @min_k = @sorted[0..$K-1];\n    return @min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp_c7qckdk.pl line 8.\nBEGIN failed--compilation aborted at /tmp/tmp_c7qckdk.pl line 8.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort { $a <=> $b } @$test_list;\n    return @sorted[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort { $a <=> $b } @$test_list;\n    return @sorted[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my $min_k = [];\n    my $min_k_hash = {};\n    my $min_k_count = 0;\n    my $min_k_value = undef;\n    my $min_k_index = undef;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $test_list_len = scalar(@$test_list);\n    my $min_k_len = scalar(@$min_k);\n    my $min_k_hash_len = scalar(keys %$min_k_hash);\n    my $min_k_hash_value = undef;\n    my $min_k_hash_key = undef;\n    my $min_k_hash_key_index = undef;\n    my $min_k_hash_key_value = undef;\n    my $min_k_hash_key_value_index = undef;\n    my $min_k_hash_key_value_index_value = undef;\n    my $min_k_hash_key_value_index_value_index = undef;\n    my $min_k_hash_key_value_index_value_index_value = undef;\n    my $min_k_hash_key_value_index_value_index_value_index = undef;\n    my $min_k_hash_key_value_index_value_index_value_index_value = undef;\n    my $min_k_hash_key_value_index_value_index_value_index_value_index = undef;\n    my $min_k_hash_key_value_index_value_index_value_index_value_index_value = undef;\n    my $min_k_hash_key_value_index_value_index_value_index_value_index_value_index = undef;\n    my $min_k_hash_key_value_index_value_index_value_index_value_index_value_index_value = undef;\n    my $min_k_hash_key_value_index_value_index_value_index\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "\"use\" not allowed in expression at /tmp/tmpqvehzbo5.pl line 30, at end of line\nsyntax error at /tmp/tmpqvehzbo5.pl line 30, near \"$min_k_hash_key_value_index_value_index_value_index\nuse Test::Deep\"\nMissing right curly or square bracket at /tmp/tmpqvehzbo5.pl line 49, at end of line\nsyntax error at /tmp/tmpqvehzbo5.pl line 49, at EOF\nExecution of /tmp/tmpqvehzbo5.pl aborted due to compilation errors.\n",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @test_list = @$test_list;\n    my @min_k;\n    my $min_k_size = 0;\n    for my $i (0 .. $#test_list) {\n        if ($min_k_size < $K) {\n            push @min_k, $test_list[$i];\n            $min_k_size++;\n        } else {\n            my $max = max @min_k;\n            if ($test_list[$i] < $max) {\n                my $max_index = first_index { $_ == $max } @min_k;\n                $min_k[$max_index] = $test_list[$i];\n            }\n        }\n    }\n    return @min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "Array found where operator expected at /tmp/tmper77raee.pl line 12, near \"max @min_k\"\n\t(Do you need to predeclare max?)\nsyntax error at /tmp/tmper77raee.pl line 12, near \"max @min_k\"\nBEGIN not safe after errors--compilation aborted at /tmp/tmper77raee.pl line 21.\n",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @test_list = @$test_list;\n    my @min_k = ();\n    my $min_k_size = 0;\n    for my $i (0..$#test_list) {\n        if ($min_k_size < $K) {\n            push @min_k, $test_list[$i];\n            $min_k_size++;\n            next;\n        }\n        my $max_index = 0;\n        for my $j (1..$#min_k) {\n            if ($min_k[$j] > $min_k[$max_index]) {\n                $max_index = $j;\n            }\n        }\n        if ($test_list[$i] < $min_k[$max_index]) {\n            $min_k[$max_index] = $test_list[$i];\n        }\n    }\n    return @min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort {$a <=> $b} @$test_list;\n    return @sorted[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @test_list = @$test_list;\n    my $test_list_size = scalar @test_list;\n    my $min_k_list = [];\n    my $min_k_list_size = 0;\n    my $min_k_list_max_size = $K;\n    my $i = 0;\n    for ($i = 0; $i < $test_list_size; $i++) {\n        if ($min_k_list_size < $min_k_list_max_size) {\n            push @$min_k_list, $test_list[$i];\n            $min_k_list_size++;\n        } else {\n            my $max_val = max_val($min_k_list);\n            if ($test_list[$i] < $max_val) {\n                my $max_val_idx = max_val_idx($min_k_list);\n                $min_k_list->[$max_val_idx] = $test_list[$i];\n            }\n        }\n    }\n    return $min_k_list;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmphgwajup1.pl line 24.\nBEGIN failed--compilation aborted at /tmp/tmphgwajup1.pl line 24.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort {$a <=> $b} @$test_list;\n    my @min_k = @sorted[0..$K-1];\n    return @min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort { $a <=> $b } @$test_list;\n    return @sorted[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my $n = scalar @$test_list;\n    my $min_k = [];\n    for (my $i = 0; $i < $n; $i++) {\n        if ($i < $K) {\n            push @$min_k, $test_list->[$i];\n        } else {\n            my $max = max($min_k);\n            if ($test_list->[$i] < $max) {\n                my $index = first_index { $_ == $max } @$min_k;\n                $min_k->[$index] = $test_list->[$i];\n            }\n        }\n    }\n    return $min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmppi5ocwdv.pl line 19.\nBEGIN failed--compilation aborted at /tmp/tmppi5ocwdv.pl line 19.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my $len = scalar @$test_list;\n    my @sorted_list = sort {$a <=> $b} @$test_list;\n    my @min_k = @sorted_list[0..$K-1];\n    return @min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpowwzvjc3.pl line 9.\nBEGIN failed--compilation aborted at /tmp/tmpowwzvjc3.pl line 9.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted_list = sort {$a <=> $b} @$test_list;\n    return @sorted_list[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted_list = sort {$a <=> $b} @$test_list;\n    my @min_k_list = @sorted_list[0..$K-1];\n    return @min_k_list;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpyojiin8j.pl line 8.\nBEGIN failed--compilation aborted at /tmp/tmpyojiin8j.pl line 8.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort {$a <=> $b} @$test_list;\n    return @sorted[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort {$a <=> $b} @$test_list;\n    my @min_k = @sorted[0..$K-1];\n    return @min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted_list = sort { $a <=> $b } @$test_list;\n    return @sorted_list[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @test_list = @$test_list;\n    my @min_k = sort {$a <=> $b} @test_list[0..$K-1];\n    for my $i ($K..$#test_list) {\n        if ($test_list[$i] < $min_k[-1]) {\n            $min_k[-1] = $test_list[$i];\n            @min_k = sort {$a <=> $b} @min_k;\n        }\n    }\n    return @min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpyfkft0op.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmpyfkft0op.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort {$a <=> $b} @$test_list;\n    return @sorted[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort {$a <=> $b} @{$test_list};\n    return @sorted[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpas44qwrt.pl line 7.\nBEGIN failed--compilation aborted at /tmp/tmpas44qwrt.pl line 7.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted_list = sort {$a <=> $b} @$test_list;\n    my @min_k = @sorted_list[0..$K-1];\n    return @min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @test_list = @$test_list;\n    my @min_k;\n    my $min_k_idx = 0;\n    my $min_k_size = $K;\n    my $test_list_size = scalar @test_list;\n    my $i;\n    for ($i = 0; $i < $test_list_size; $i++) {\n        if ($i < $min_k_size) {\n            $min_k[$i] = $test_list[$i];\n        } else {\n            if ($test_list[$i] < $min_k[$min_k_idx]) {\n                $min_k[$min_k_idx] = $test_list[$i];\n                $min_k_idx = ($min_k_idx + 1) % $min_k_size;\n            }\n        }\n    }\n    return @min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmprcw825k6.pl line 22.\nBEGIN failed--compilation aborted at /tmp/tmprcw825k6.pl line 22.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my $min_list = [];\n    my $min_heap = Heap::Simple->new(\n        order => '<',\n        elements => 'Any',\n        use_modules => ['Heap::Simple::XS'],\n    );\n    for my $test (@$test_list) {\n        $min_heap->insert($test);\n        if ($min_heap->size > $K) {\n            $min_heap->extract_top;\n        }\n    }\n    while ($min_heap->size) {\n        push @$min_list, $min_heap->extract_top;\n    }\n    return $min_list;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpkx3w30q6.pl line 21.\nBEGIN failed--compilation aborted at /tmp/tmpkx3w30q6.pl line 21.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort { $a <=> $b } @$test_list;\n    my @min_k = @sorted[0..$K-1];\n    return \\@min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @test_list = @$test_list;\n    my @min_k = sort {$a <=> $b} @test_list[0..$K-1];\n    for my $i ($K..$#test_list) {\n        my $j = $K-1;\n        while ($j >= 0 && $min_k[$j] > $test_list[$i]) {\n            $min_k[$j+1] = $min_k[$j];\n            $j--;\n        }\n        $min_k[$j+1] = $test_list[$i];\n    }\n    return @min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpqx_tlow5.pl line 16.\nBEGIN failed--compilation aborted at /tmp/tmpqx_tlow5.pl line 16.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort {$a <=> $b} @$test_list;\n    my @min_k = @sorted[0..$K-1];\n    return @min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort {$a <=> $b} @$test_list;\n    return @sorted[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort {$a <=> $b} @$test_list;\n    return @sorted[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort { $a <=> $b } @$test_list;\n    return @sorted[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort {$a <=> $b} @$test_list;\n    return @sorted[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted_list = sort {$a <=> $b} @$test_list;\n    return @sorted_list[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted_list = sort {$a <=> $b} @$test_list;\n    my @min_k = @sorted_list[0..$K-1];\n    return @min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort {$a <=> $b} @$test_list;\n    return @sorted[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted_list = sort {$a <=> $b} @$test_list;\n    my @min_k = @sorted_list[0..$K-1];\n    return @min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort {$a <=> $b} @$test_list;\n    return @sorted[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort {$a <=> $b} @$test_list;\n    return @sorted[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort {$a <=> $b} @$test_list;\n    return @sorted[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my $min_k = [];\n    my $min_k_index = [];\n    my $min_k_value = [];\n    my $min_k_value_index = [];\n    my $min_k_value_index_count = 0;\n    my $min_k_count = 0;\n    my $min_k_value_count = 0;\n    my $min_k_value_index_count = 0;\n    my $min_k_value_index_count = 0;\n    my $min_k_value_index_count = 0;\n    my $min_k_value_index_count = 0;\n    my $min_k_value_index_count = 0;\n    my $min_k_value_index_count = 0;\n    my $min_k_value_index_count = 0;\n    my $min_k_value_index_count = 0;\n    my $min_k_value_index_count = 0;\n    my $min_k_value_index_count = 0;\n    my $min_k_value_index_count = 0;\n    my $min_k_value_index_count = 0;\n    my $min_k_value_index_count = 0;\n    my $min_k_value_index_count = 0;\n    my $min_k_value_index_count = 0;\n    my $min_k_value_index_count = 0;\n    my $min_k_value_index_count = 0;\n    my $min_k_value_index_count = 0;\n    my $min_k_value_index_count = 0;\n    my $min_k_value_index_count = 0;\n    my $min_k_value_index_count = 0;\n    my $min_k_value_index_count = 0;\n    my $min_k_value_index_count = 0;\n    my $min_k_value_index_count = 0;\n    my $min_k_value_index_count = 0;\n    my $min_k_value_index_count = 0;\n    my $min_k_value_\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "\"use\" not allowed in expression at /tmp/tmplodftteb.pl line 38, at end of line\nsyntax error at /tmp/tmplodftteb.pl line 38, near \"$min_k_value_\nuse Test::Deep\"\nMissing right curly or square bracket at /tmp/tmplodftteb.pl line 57, at end of line\nsyntax error at /tmp/tmplodftteb.pl line 57, at EOF\nExecution of /tmp/tmplodftteb.pl aborted due to compilation errors.\n",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort {$a <=> $b} @$test_list;\n    return [@sorted[0..$K-1]];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmposwz2gj8.pl line 7.\nBEGIN failed--compilation aborted at /tmp/tmposwz2gj8.pl line 7.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort { $a <=> $b } @$test_list;\n    return @sorted[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted_list = sort { $a <=> $b } @$test_list;\n    my @min_k = @sorted_list[0..$K-1];\n    return @min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp5cp7swox.pl line 8.\nBEGIN failed--compilation aborted at /tmp/tmp5cp7swox.pl line 8.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @result;\n    my $n = scalar @$test_list;\n    for (my $i = 0; $i < $K; $i++) {\n        $result[$i] = $test_list->[$i];\n    }\n    for (my $i = $K; $i < $n; $i++) {\n        my $max = $result[0];\n        my $max_index = 0;\n        for (my $j = 1; $j < $K; $j++) {\n            if ($result[$j] > $max) {\n                $max = $result[$j];\n                $max_index = $j;\n            }\n        }\n        if ($test_list->[$i] < $max) {\n            $result[$max_index] = $test_list->[$i];\n        }\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpiy5dfn7o.pl line 24.\nBEGIN failed--compilation aborted at /tmp/tmpiy5dfn7o.pl line 24.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort {$a <=> $b} @$test_list;\n    my @min_k = @sorted[0..$K-1];\n    return @min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted_list = sort {$a <=> $b} @$test_list;\n    return @sorted_list[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort {$a <=> $b} @$test_list;\n    return @sorted[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @test_list = @$test_list;\n    my @min_k = ();\n    my $min_k_index = 0;\n    my $min_k_value = $test_list[0];\n    for my $i (0..$#test_list) {\n        if ($test_list[$i] < $min_k_value) {\n            $min_k_value = $test_list[$i];\n            $min_k_index = $i;\n        }\n    }\n    push @min_k, $min_k_value;\n    for my $j (1..$K-1) {\n        $min_k_value = $test_list[$min_k_index+1];\n        for my $i ($min_k_index+1..$#test_list) {\n            if ($test_list[$i] < $min_k_value) {\n                $min_k_value = $test_list[$i];\n                $min_k_index = $i;\n            }\n        }\n        push @min_k, $min_k_value;\n    }\n    return @min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp2_3wxnpi.pl line 27.\nBEGIN failed--compilation aborted at /tmp/tmp2_3wxnpi.pl line 27.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort {$a <=> $b} @$test_list;\n    return @sorted[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @test_list = @$test_list;\n    my @min_k;\n    my $min_k_size = 0;\n    for my $i (0 .. $#test_list) {\n        if ($min_k_size < $K) {\n            push @min_k, $test_list[$i];\n            $min_k_size++;\n        } else {\n            my $max_idx = 0;\n            for my $j (1 .. $#min_k) {\n                $max_idx = $j if $min_k[$j] > $min_k[$max_idx];\n            }\n            if ($test_list[$i] < $min_k[$max_idx]) {\n                $min_k[$max_idx] = $test_list[$i];\n            }\n        }\n    }\n    return @min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp4oppy14r.pl line 23.\nBEGIN failed--compilation aborted at /tmp/tmp4oppy14r.pl line 23.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted_list = sort {$a <=> $b} @$test_list;\n    my @min_k = @sorted_list[0..$K-1];\n    return @min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @test_list = @$test_list;\n    my @min_k;\n    my $i = 0;\n    while ($i < $K) {\n        $min_k[$i] = $test_list[$i];\n        $i++;\n    }\n    $min_k[$K-1] = $test_list[$K-1];\n    $i = $K;\n    while ($i < scalar(@test_list)) {\n        my $j = 0;\n        while ($j < $K) {\n            if ($test_list[$i] < $min_k[$j]) {\n                my $temp = $min_k[$j];\n                $min_k[$j] = $test_list[$i];\n                $test_list[$i] = $temp;\n            }\n            $j++;\n        }\n        $i++;\n    }\n    return @min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpyf1bi7e8.pl line 27.\nBEGIN failed--compilation aborted at /tmp/tmpyf1bi7e8.pl line 27.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort {$a <=> $b} @$test_list;\n    return @sorted[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted_list = sort {$a <=> $b} @$test_list;\n    my @min_k = @sorted_list[0..$K-1];\n    return @min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted_list = sort { $a <=> $b } @$test_list;\n    return @sorted_list[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @test_list = @$test_list;\n    my @min_k = sort { $a <=> $b } @test_list[0..$K-1];\n    for my $i ($K..$#test_list) {\n        if ($test_list[$i] < $min_k[-1]) {\n            $min_k[-1] = $test_list[$i];\n            @min_k = sort { $a <=> $b } @min_k;\n        }\n    }\n    return @min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpemtmkadb.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmpemtmkadb.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort { $a <=> $b } @$test_list;\n    return [ @sorted[0..$K-1] ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp9lp250ci.pl line 7.\nBEGIN failed--compilation aborted at /tmp/tmp9lp250ci.pl line 7.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @test_list = @$test_list;\n    my @result = ();\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $n = scalar @test_list;\n    my $min = $test_list[0];\n    my $min_index = 0;\n    while ($k < $K) {\n        $min = $test_list[$i];\n        $min_index = $i;\n        for ($j = $i + 1; $j < $n; $j++) {\n            if ($test_list[$j] < $min) {\n                $min = $test_list[$j];\n                $min_index = $j;\n            }\n        }\n        $result[$k] = $min;\n        $test_list[$min_index] = $test_list[$i];\n        $test_list[$i] = $min;\n        $k++;\n        $i++;\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp848qn3pe.pl line 29.\nBEGIN failed--compilation aborted at /tmp/tmp848qn3pe.pl line 29.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @test_list = @$test_list;\n    my @min_k;\n    my $i = 0;\n    while ($i < $K) {\n        $min_k[$i] = $test_list[$i];\n        $i++;\n    }\n    my $j = $i;\n    while ($j < scalar @test_list) {\n        my $k = 0;\n        while ($k < $K) {\n            if ($test_list[$j] < $min_k[$k]) {\n                my $l = $K - 1;\n                while ($l > $k) {\n                    $min_k[$l] = $min_k[$l - 1];\n                    $l--;\n                }\n                $min_k[$k] = $test_list[$j];\n                last;\n            }\n            $k++;\n        }\n        $j++;\n    }\n    return @min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpewld7woh.pl line 30.\nBEGIN failed--compilation aborted at /tmp/tmpewld7woh.pl line 30.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort {$a <=> $b} @$test_list;\n    return @sorted[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted_list = sort {$a <=> $b} @$test_list;\n    my @min_k = @sorted_list[0..$K-1];\n    return @min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @test_list = @$test_list;\n    my @min_k;\n    my $min_k_size = 0;\n    for (my $i = 0; $i < @test_list; $i++) {\n        if ($min_k_size < $K) {\n            push @min_k, $test_list[$i];\n            $min_k_size++;\n        } else {\n            my $max_index = 0;\n            for (my $j = 0; $j < @min_k; $j++) {\n                if ($min_k[$j] > $min_k[$max_index]) {\n                    $max_index = $j;\n                }\n            }\n            if ($min_k[$max_index] > $test_list[$i]) {\n                $min_k[$max_index] = $test_list[$i];\n            }\n        }\n    }\n    return @min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpxz_0xkba.pl line 25.\nBEGIN failed--compilation aborted at /tmp/tmpxz_0xkba.pl line 25.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort {$a <=> $b} @$test_list;\n    return @sorted[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted_list = sort { $a <=> $b } @$test_list;\n    return @sorted_list[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort { $a <=> $b } @$test_list;\n    return @sorted[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted_list = sort {$a <=> $b} @$test_list;\n    my @min_k = @sorted_list[0..$K-1];\n    return @min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @test_list = @$test_list;\n    my @sorted_list = sort {$a <=> $b} @test_list;\n    my @min_k = @sorted_list[0..$K-1];\n    return @min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp3og7ap92.pl line 9.\nBEGIN failed--compilation aborted at /tmp/tmp3og7ap92.pl line 9.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort { $a <=> $b } @$test_list;\n    return @sorted[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort {$a <=> $b} @$test_list;\n    return @sorted[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @test_list = @$test_list;\n    my @sorted = sort {$a <=> $b} @test_list;\n    my @min_k = @sorted[0..$K-1];\n    return @min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp8ho1ouq2.pl line 9.\nBEGIN failed--compilation aborted at /tmp/tmp8ho1ouq2.pl line 9.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort { $a <=> $b } @$test_list;\n    return @sorted[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my $n = scalar @$test_list;\n    my $min_k = [];\n    my $min_k_index = [];\n    my $i;\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpfxtlb1d5.pl line 8.\nBEGIN failed--compilation aborted at /tmp/tmpfxtlb1d5.pl line 8.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @test_list = @$test_list;\n    my @min_k_list;\n    my $min_k_list_size = 0;\n    for my $i (0..$#test_list) {\n        if ($min_k_list_size < $K) {\n            push @min_k_list, $test_list[$i];\n            $min_k_list_size++;\n            if ($min_k_list_size == $K) {\n                @min_k_list = sort {$a <=> $b} @min_k_list;\n            }\n        } else {\n            if ($test_list[$i] < $min_k_list[$min_k_list_size-1]) {\n                $min_k_list[$min_k_list_size-1] = $test_list[$i];\n                @min_k_list = sort {$a <=> $b} @min_k_list;\n            }\n        }\n    }\n    return @min_k_list;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp2gdqvn44.pl line 23.\nBEGIN failed--compilation aborted at /tmp/tmp2gdqvn44.pl line 23.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort {$a <=> $b} @$test_list;\n    return @sorted[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort {$a <=> $b} @$test_list;\n    return @sorted[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort {$a <=> $b} @$test_list;\n    my @min_k = @sorted[0..$K-1];\n    return @min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @result;\n    my $size = scalar @$test_list;\n    if ($size < $K) {\n        return $test_list;\n    }\n    for (my $i = 0; $i < $K; $i++) {\n        $result[$i] = $test_list->[$i];\n    }\n    for (my $i = $K; $i < $size; $i++) {\n        my $max = $result[0];\n        my $max_index = 0;\n        for (my $j = 1; $j < $K; $j++) {\n            if ($result[$j] > $max) {\n                $max = $result[$j];\n                $max_index = $j;\n            }\n        }\n        if ($test_list->[$i] < $max) {\n            $result[$max_index] = $test_list->[$i];\n        }\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpjsii6mtc.pl line 27.\nBEGIN failed--compilation aborted at /tmp/tmpjsii6mtc.pl line 27.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @test_list = @$test_list;\n    my @min_k = sort { $a <=> $b } @test_list[0..$K-1];\n    for my $i ($K..$#test_list) {\n        if ($test_list[$i] < $min_k[$K-1]) {\n            $min_k[$K-1] = $test_list[$i];\n            @min_k = sort { $a <=> $b } @min_k;\n        }\n    }\n    return @min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpmn8w06h7.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmpmn8w06h7.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @test_list = @$test_list;\n    my @min_k;\n    my $min_k_len = 0;\n    my $test_list_len = scalar @test_list;\n    for (my $i = 0; $i < $test_list_len; $i++) {\n        if ($min_k_len < $K) {\n            push @min_k, $test_list[$i];\n            $min_k_len++;\n            if ($min_k_len == $K) {\n                @min_k = sort {$a <=> $b} @min_k;\n            }\n        } else {\n            if ($test_list[$i] < $min_k[$K - 1]) {\n                $min_k[$K - 1] = $test_list[$i];\n                @min_k = sort {$a <=> $b} @min_k;\n            }\n        }\n    }\n    return @min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpoywl004a.pl line 24.\nBEGIN failed--compilation aborted at /tmp/tmpoywl004a.pl line 24.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @test_list = @$test_list;\n    my @min_k = sort {$a <=> $b} @test_list[0..$K-1];\n    for my $i ($K..$#test_list) {\n        my $j = $#min_k;\n        while ($j >= 0 && $test_list[$i] < $min_k[$j]) {\n            $min_k[$j+1] = $min_k[$j];\n            $j--;\n        }\n        $min_k[$j+1] = $test_list[$i];\n    }\n    return @min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp9phcvzm3.pl line 16.\nBEGIN failed--compilation aborted at /tmp/tmp9phcvzm3.pl line 16.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted_list = sort { $a <=> $b } @$test_list;\n    return @sorted_list[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort { $a <=> $b } @$test_list;\n    return @sorted[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted_list = sort {$a <=> $b} @$test_list;\n    return @sorted_list[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort {$a <=> $b} @$test_list;\n    return @sorted[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @list = @$test_list;\n    my @min_list = ();\n    my $min_value = $list[0];\n    my $min_index = 0;\n    for (my $i = 0; $i < $K; $i++) {\n        for (my $j = $i; $j < scalar(@list); $j++) {\n            if ($list[$j] < $min_value) {\n                $min_value = $list[$j];\n                $min_index = $j;\n            }\n        }\n        $list[$min_index] = $list[$i];\n        $list[$i] = $min_value;\n        $min_list[$i] = $min_value;\n        $min_value = $list[$i + 1];\n        $min_index = $i + 1;\n    }\n    return @min_list;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpkevd_1ne.pl line 23.\nBEGIN failed--compilation aborted at /tmp/tmpkevd_1ne.pl line 23.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort {$a <=> $b} @$test_list;\n    return @sorted[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort {$a <=> $b} @$test_list;\n    return @sorted[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort {$a <=> $b} @$test_list;\n    return @sorted[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @test_list = @$test_list;\n    my $len = scalar @test_list;\n    my $k = $K;\n    my $min_k = [];\n    my $i = 0;\n    while ($i < $k) {\n        $min_k->[$i] = $test_list[$i];\n        $i++;\n    }\n    $min_k = min_heapify($min_k);\n    while ($i < $len) {\n        if ($test_list[$i] < $min_k->[0]) {\n            $min_k->[0] = $test_list[$i];\n            $min_k = min_heapify($min_k);\n        }\n        $i++;\n    }\n    return $min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpi7s47j0_.pl line 23.\nBEGIN failed--compilation aborted at /tmp/tmpi7s47j0_.pl line 23.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @list = @{$test_list};\n    my @min_k = ();\n    my $min_k_size = 0;\n    my $min_k_max = 0;\n    my $min_k_min = 0;\n    my $min_k_sum = 0;\n    my $min_k_avg = 0;\n    my $min_k_med = 0;\n    my $min_k_std = 0;\n    my $min_k_var = 0;\n    my $min_k_mode = 0;\n    my $min_k_range = 0;\n    my $min_k_mid = 0;\n    my $min_k_mid_low = 0;\n    my $min_k_mid_high = 0;\n    my $min_k_mid_range = 0;\n    my $min_k_mid_range_low = 0;\n    my $min_k_mid_range_high = 0;\n    my $min_k_mid_range_avg = 0;\n    my $min_k_mid_range_med = 0;\n    my $min_k_mid_range_std = 0;\n    my $min_k_mid_range_var = 0;\n    my $min_k_mid_range_mode = 0;\n    my $min_k_mid_range_range = 0;\n    my $min_k_mid_range_mid = 0;\n    my $min_k_mid_range_mid_low = 0;\n    my $min_k_mid_range_mid_high = 0;\n    my $min_k_mid_range_mid_range = 0;\n    my $min_k_mid_range_mid_range_low = 0;\n    my $min_k_mid_range_mid_range_high = 0;\n    my $min_k_mid_range_mid_range_avg = 0;\n    my $min_k_mid_range_mid_range_med = 0;\n    my $min_k_mid_range_mid_range_std = 0;\n    my $min_k_mid_range_mid_range\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "\"use\" not allowed in expression at /tmp/tmppdpodps5.pl line 38, at end of line\nsyntax error at /tmp/tmppdpodps5.pl line 38, near \"$min_k_mid_range_mid_range\nuse Test::Deep\"\nMissing right curly or square bracket at /tmp/tmppdpodps5.pl line 57, at end of line\nsyntax error at /tmp/tmppdpodps5.pl line 57, at EOF\nExecution of /tmp/tmppdpodps5.pl aborted due to compilation errors.\n",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort { $a <=> $b } @$test_list;\n    return @sorted[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted_list = sort {$a <=> $b} @$test_list;\n    return @sorted_list[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @test_list = @$test_list;\n    my @min_k = ();\n    my $min_k_size = 0;\n    for my $i (0 .. $#test_list) {\n        if ($min_k_size < $K) {\n            push @min_k, $test_list[$i];\n            $min_k_size++;\n        } else {\n            my $max_index = 0;\n            for my $j (1 .. $#min_k) {\n                if ($min_k[$j] > $min_k[$max_index]) {\n                    $max_index = $j;\n                }\n            }\n            if ($min_k[$max_index] > $test_list[$i]) {\n                $min_k[$max_index] = $test_list[$i];\n            }\n        }\n    }\n    return @min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp5fqkrjef.pl line 25.\nBEGIN failed--compilation aborted at /tmp/tmp5fqkrjef.pl line 25.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort {$a <=> $b} @$test_list;\n    my @min_k = @sorted[0..$K-1];\n    return @min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort {$a <=> $b} @$test_list;\n    return @sorted[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @test_list = @$test_list;\n    my $len = scalar @test_list;\n    my $min_k = $K;\n    my @min_k_list;\n    my $i = 0;\n    while ($i < $min_k) {\n        push @min_k_list, $test_list[$i];\n        $i++;\n    }\n    for (my $i = $min_k; $i < $len; $i++) {\n        my $max = max(@min_k_list);\n        if ($test_list[$i] < $max) {\n            my $j = 0;\n            while ($j < $min_k) {\n                if ($min_k_list[$j] == $max) {\n                    $min_k_list[$j] = $test_list[$i];\n                    last;\n                }\n                $j++;\n            }\n        }\n    }\n    return @min_k_list;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpddbg_cjv.pl line 28.\nBEGIN failed--compilation aborted at /tmp/tmpddbg_cjv.pl line 28.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my $n = scalar(@$test_list);\n    my $k = $K;\n    my @result;\n    for (my $i = 0; $i < $n; $i++) {\n        if ($k > 0) {\n            push @result, $test_list->[$i];\n            $k--;\n        }\n        else {\n            my $max = max(@result);\n            if ($test_list->[$i] < $max) {\n                my $index = first_index { $_ == $max } @result;\n                $result[$index] = $test_list->[$i];\n            }\n        }\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpwalt4ir7.pl line 22.\nBEGIN failed--compilation aborted at /tmp/tmpwalt4ir7.pl line 22.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @list = @$test_list;\n    my @min_k;\n    my $min_k_idx = 0;\n    my $min_k_idx_max = $K - 1;\n    my $list_idx = 0;\n    my $list_idx_max = $#list;\n    my $list_idx_min = 0;\n    my $min_k_idx_min = 0;\n    my $min_k_idx_max = $K - 1;\n    my $min_k_idx_min_max = $K - 1;\n    my $min_k_idx_max_min = 0;\n    my $min_k_idx_max_max = $K - 1;\n    my $min_k_idx_max_min_max = $K - 1;\n    my $min_k_idx_max_max_min = 0;\n    my $min_k_idx_max_max_min_max = $K - 1;\n    my $min_k_idx_max_max_min_max_min = 0;\n    my $min_k_idx_max_max_min_max_min_max = $K - 1;\n    my $min_k_idx_max_max_min_max_min_max_min = 0;\n    my $min_k_idx_max_max_min_max_min_max_min_max = $K - 1;\n    my $min_k_idx_max_max_min_max_min_max_min_max_min = 0;\n    my $min_k_idx_max_max_min_max_min_max_min_max_min_max = $K - 1;\n    my $min_k_idx_max_max_min_max_min_max_min_max_min_max_min = 0;\n    my $min_k_idx_max_max_min_max_min_max_min_max_min_max_min_max = $K - 1;\n    my $min_k_idx_max_max_\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "\"use\" not allowed in expression at /tmp/tmpvcd7o0ly.pl line 28, at end of line\nsyntax error at /tmp/tmpvcd7o0ly.pl line 28, near \"$min_k_idx_max_max_\nuse Test::Deep\"\nMissing right curly or square bracket at /tmp/tmpvcd7o0ly.pl line 47, at end of line\nsyntax error at /tmp/tmpvcd7o0ly.pl line 47, at EOF\nExecution of /tmp/tmpvcd7o0ly.pl aborted due to compilation errors.\n",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @test_list = @$test_list;\n    my @min_k = sort {$a <=> $b} @test_list[0..$K-1];\n    for (my $i = $K; $i < @test_list; $i++) {\n        if ($test_list[$i] < $min_k[-1]) {\n            $min_k[-1] = $test_list[$i];\n            @min_k = sort {$a <=> $b} @min_k;\n        }\n    }\n    return @min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpf8_653j2.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmpf8_653j2.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort {$a <=> $b} @$test_list;\n    return @sorted[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort {$a <=> $b} @$test_list;\n    my @min_k = @sorted[0..$K-1];\n    return @min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @test_list = @{$test_list};\n    my @min_k;\n    my $min_k_index = 0;\n    my $min_k_value = $test_list[0];\n    for (my $i = 0; $i < $K; $i++) {\n        $min_k[$i] = $test_list[$i];\n        if ($min_k[$i] < $min_k_value) {\n            $min_k_value = $min_k[$i];\n            $min_k_index = $i;\n        }\n    }\n    for (my $i = $K; $i < scalar @test_list; $i++) {\n        if ($test_list[$i] < $min_k_value) {\n            $min_k[$min_k_index] = $test_list[$i];\n            $min_k_value = $test_list[$i];\n            for (my $j = 0; $j < $K; $j++) {\n                if ($min_k[$j] < $min_k_value) {\n                    $min_k_value = $min_k[$j];\n                    $min_k_index = $j;\n                }\n            }\n        }\n    }\n    return @min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp07d_mml6.pl line 29.\nBEGIN failed--compilation aborted at /tmp/tmp07d_mml6.pl line 29.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @test_list = @$test_list;\n    my @min_k;\n    my $min_k_size = 0;\n    for my $i (0 .. $#test_list) {\n        if ($min_k_size < $K) {\n            push @min_k, $test_list[$i];\n            $min_k_size++;\n        } else {\n            my $max_index = 0;\n            for my $j (1 .. $#min_k) {\n                if ($min_k[$j] > $min_k[$max_index]) {\n                    $max_index = $j;\n                }\n            }\n            if ($min_k[$max_index] > $test_list[$i]) {\n                $min_k[$max_index] = $test_list[$i];\n            }\n        }\n    }\n    return @min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp37v2qlqt.pl line 25.\nBEGIN failed--compilation aborted at /tmp/tmp37v2qlqt.pl line 25.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort {$a <=> $b} @$test_list;\n    return @sorted[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort {$a <=> $b} @$test_list;\n    my @min_k = @sorted[0..$K-1];\n    return @min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted_list = sort {$a <=> $b} @$test_list;\n    return @sorted_list[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted_list = sort {$a <=> $b} @$test_list;\n    return @sorted_list[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n\n    my @sorted = sort { $a <=> $b } @$test_list;\n    return @sorted[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp2q97c14h.pl line 8.\nBEGIN failed--compilation aborted at /tmp/tmp2q97c14h.pl line 8.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort { $a <=> $b } @$test_list;\n    return @sorted[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my $min_k = [];\n    my $min_k_size = 0;\n    my $min_k_index = 0;\n    my $test_list_size = scalar @$test_list;\n    for (my $i = 0; $i < $test_list_size; $i++) {\n        if ($min_k_size < $K) {\n            push @$min_k, $test_list->[$i];\n            $min_k_size++;\n            if ($min_k_size == $K) {\n                $min_k_index = $i;\n            }\n        } else {\n            if ($test_list->[$i] < $min_k->[$min_k_index]) {\n                $min_k->[$min_k_index] = $test_list->[$i];\n                for (my $j = 0; $j < $K; $j++) {\n                    if ($min_k->[$j] > $min_k->[$min_k_index]) {\n                        $min_k_index = $j;\n                    }\n                }\n            }\n        }\n    }\n    return $min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpmmr46mh7.pl line 28.\nBEGIN failed--compilation aborted at /tmp/tmpmmr46mh7.pl line 28.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort {$a <=> $b} @$test_list;\n    return @sorted[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort {$a <=> $b} @$test_list;\n    my @min_k = @sorted[0..$K-1];\n    return @min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @test_list = @$test_list;\n    my @min_k = sort {$a <=> $b} @test_list[0..$K-1];\n    for my $i ($K..$#test_list) {\n        if ($test_list[$i] < $min_k[-1]) {\n            $min_k[-1] = $test_list[$i];\n            @min_k = sort {$a <=> $b} @min_k;\n        }\n    }\n    return @min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpyfkft0op.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmpyfkft0op.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @test_list = @$test_list;\n    my @min_k = sort {$a <=> $b} @test_list[0..$K-1];\n    for my $i ($K..$#test_list) {\n        if ($test_list[$i] < $min_k[-1]) {\n            $min_k[-1] = $test_list[$i];\n            @min_k = sort {$a <=> $b} @min_k;\n        }\n    }\n    return @min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpyfkft0op.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmpyfkft0op.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort { $a <=> $b } @$test_list;\n    return @sorted[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort {$a <=> $b} @$test_list;\n    return @sorted[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted_list = sort {$a <=> $b} @$test_list;\n    return @sorted_list[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my $min_k = [];\n    my $min_k_size = 0;\n    for my $i (0..$#$test_list) {\n        if ($min_k_size < $K) {\n            push @$min_k, $test_list->[$i];\n            $min_k_size++;\n            next;\n        }\n        my $max = max($min_k);\n        if ($test_list->[$i] < $max) {\n            my $max_index = first_index { $_ == $max } @$min_k;\n            $min_k->[$max_index] = $test_list->[$i];\n        }\n    }\n    return $min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpdj1i9679.pl line 20.\nBEGIN failed--compilation aborted at /tmp/tmpdj1i9679.pl line 20.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort {$a <=> $b} @$test_list;\n    my $min_k = [];\n    for (my $i = 0; $i < $K; $i++) {\n        push @$min_k, $sorted[$i];\n    }\n    return $min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpkkbzo2fy.pl line 11.\nBEGIN failed--compilation aborted at /tmp/tmpkkbzo2fy.pl line 11.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted_list = sort {$a <=> $b} @$test_list;\n    return @sorted_list[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my $min_k = [];\n    my $min_k_index = [];\n    my $min_k_value = [];\n    my $min_k_index_value = [];\n    my $min_k_index_value_index = [];\n    my $min_k_index_value_index_value = [];\n    my $min_k_index_value_index_value_index = [];\n    my $min_k_index_value_index_value_index_value = [];\n    my $min_k_index_value_index_value_index_value_index = [];\n    my $min_k_index_value_index_value_index_value_index_value = [];\n    my $min_k_index_value_index_value_index_value_index_value_index = [];\n    my $min_k_index_value_index_value_index_value_index_value_index_value = [];\n    my $min_k_index_value_index_value_index_value_index_value_index_value_index = [];\n    my $min_k_index_value_index_value_index_value_index_value_index_value_index_value = [];\n    my $min_k_index_value_index_value_index_value_index_value_index_value_index_value_index = [];\n    my $min_k_index_value_index_value_index_value_index_value_index_value_index_value_index_value = [];\n    my $min_k_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index = [];\n    my $min_k_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value = [];\n    my $min_k_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index = [];\n    my $min_k_index_value_index_value_index_value_index_value_index_value_index_value_index\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "\"use\" not allowed in expression at /tmp/tmpru1mgoaw.pl line 24, at end of line\nsyntax error at /tmp/tmpru1mgoaw.pl line 24, near \"$min_k_index_value_index_value_index_value_index_value_index_value_index_value_index\nuse Test::Deep\"\nMissing right curly or square bracket at /tmp/tmpru1mgoaw.pl line 43, at end of line\nsyntax error at /tmp/tmpru1mgoaw.pl line 43, at EOF\nExecution of /tmp/tmpru1mgoaw.pl aborted due to compilation errors.\n",
      "exit_code": 255,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort {$a <=> $b} @$test_list;\n    return @sorted[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @test_list = @$test_list;\n    my @min_k = ();\n    my $min_k_size = 0;\n    for my $i (0 .. $#test_list) {\n        if ($min_k_size < $K) {\n            push @min_k, $test_list[$i];\n            $min_k_size++;\n        } else {\n            my $max_index = 0;\n            for my $j (0 .. $#min_k) {\n                if ($min_k[$j] > $min_k[$max_index]) {\n                    $max_index = $j;\n                }\n            }\n            if ($min_k[$max_index] > $test_list[$i]) {\n                $min_k[$max_index] = $test_list[$i];\n            }\n        }\n    }\n    return @min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpdu0bta5l.pl line 25.\nBEGIN failed--compilation aborted at /tmp/tmpdu0bta5l.pl line 25.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort {$a <=> $b} @$test_list;\n    my @min_k = @sorted[0..$K-1];\n    return @min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted_list = sort {$a <=> $b} @$test_list;\n    my @min_k = @sorted_list[0..$K-1];\n    return @min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort { $a <=> $b } @$test_list;\n    return @sorted[0 .. $K - 1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp6vv7841d.pl line 7.\nBEGIN failed--compilation aborted at /tmp/tmp6vv7841d.pl line 7.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort {$a <=> $b} @$test_list;\n    my @min_k = @sorted[0..$K-1];\n    return @min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort {$a <=> $b} @$test_list;\n    return @sorted[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort {$a <=> $b} @$test_list;\n    return @sorted[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my $min_k = [];\n    my $min_k_size = 0;\n    my $min_k_max = undef;\n    for my $test (@$test_list) {\n        if ($min_k_size < $K) {\n            push @$min_k, $test;\n            $min_k_size++;\n            if (!defined $min_k_max || $test > $min_k_max) {\n                $min_k_max = $test;\n            }\n        }\n        else {\n            if ($test < $min_k_max) {\n                my $i = 0;\n                for my $min_k_test (@$min_k) {\n                    if ($min_k_test == $min_k_max) {\n                        $min_k->[$i] = $test;\n                        last;\n                    }\n                    $i++;\n                }\n                $min_k_max = undef;\n                for my $min_k_test (@$min_k) {\n                    if (!defined $min_k_max || $min_k_test > $min_k_max) {\n                        $min_k_max = $min_k_test;\n                    }\n                }\n            }\n        }\n    }\n    return $min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp4hfkb6zj.pl line 36.\nBEGIN failed--compilation aborted at /tmp/tmp4hfkb6zj.pl line 36.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted_list = sort {$a <=> $b} @$test_list;\n    my @min_k = @sorted_list[0..$K-1];\n    return @min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort {$a <=> $b} @$test_list;\n    my @min_k = @sorted[0..$K-1];\n    return @min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort {$a <=> $b} @$test_list;\n    return @sorted[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @test_list = @$test_list;\n    my @min_k;\n    my $min_k_size = 0;\n    foreach my $test (@test_list) {\n        if ($min_k_size < $K) {\n            push @min_k, $test;\n            $min_k_size++;\n        } else {\n            my $max_index = 0;\n            my $max = $min_k[0];\n            for (my $i = 1; $i < $K; $i++) {\n                if ($min_k[$i] > $max) {\n                    $max = $min_k[$i];\n                    $max_index = $i;\n                }\n            }\n            if ($test < $max) {\n                $min_k[$max_index] = $test;\n            }\n        }\n    }\n    return @min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpevsj_efl.pl line 27.\nBEGIN failed--compilation aborted at /tmp/tmpevsj_efl.pl line 27.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted_list = sort {$a <=> $b} @$test_list;\n    return @sorted_list[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort {$a <=> $b} @$test_list;\n    return @sorted[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort {$a <=> $b} @$test_list;\n    my $min_k = [];\n    for (my $i = 0; $i < $K; $i++) {\n        push @$min_k, $sorted[$i];\n    }\n    return $min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpkkbzo2fy.pl line 11.\nBEGIN failed--compilation aborted at /tmp/tmpkkbzo2fy.pl line 11.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort {$a <=> $b} @$test_list;\n    return @sorted[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted_list = sort {$a <=> $b} @$test_list;\n    my @min_k = @sorted_list[0..$K-1];\n    return @min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort { $a <=> $b } @$test_list;\n    return [ @sorted[0..$K-1] ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp9lp250ci.pl line 7.\nBEGIN failed--compilation aborted at /tmp/tmp9lp250ci.pl line 7.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my $n = scalar @$test_list;\n    my $min_k = [];\n    my $i = 0;\n    while ($i < $K) {\n        $min_k->[$i] = $test_list->[$i];\n        $i++;\n    }\n    $min_k = min_heapify($min_k);\n    while ($i < $n) {\n        if ($test_list->[$i] < $min_k->[0]) {\n            $min_k->[0] = $test_list->[$i];\n            $min_k = min_heapify($min_k);\n        }\n        $i++;\n    }\n    return $min_k;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpmytegztz.pl line 21.\nBEGIN failed--compilation aborted at /tmp/tmpmytegztz.pl line 21.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted_list = sort {$a <=> $b} @$test_list;\n    return @sorted_list[0..$K-1];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510563,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find minimum k records from array array. https://www.geeksforgeeks.org/plthon-find-minimum-k-records-from-array-array/ - in this case a verbatim copl of test cases\nsub min_k {\n    my($test_list, $K) = @_;\n    my @sorted = sort {$a <=> $b} @$test_list;\n    my @result = @sorted[0..$K-1];\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&min_k;\n        if(eq_deeply($candidate->([[\"Manjeet\", 10], [\"Akshat\", 4], [\"Akash\", 2], [\"Nikhil\", 8]], 2),[[\"Akash\", 2], [\"Akshat\", 4]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"Sanjeev\", 11], [\"Angat\", 5], [\"Akash\", 3], [\"Nepin\", 9]], 3),[[\"Akash\", 3], [\"Angat\", 5], [\"Nepin\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"tanmay\", 14], [\"Amer\", 11], [\"Ayesha\", 9], [\"SKD\", 16]], 1),[[\"Ayesha\", 9]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123805,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp6rnc0oax.pl line 8.\nBEGIN failed--compilation aborted at /tmp/tmp6rnc0oax.pl line 8.\n",
      "exit_code": 2,
      "status": "Exception"
    }
  ]
}
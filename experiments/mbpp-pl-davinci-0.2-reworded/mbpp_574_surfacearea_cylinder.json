{
  "name": "mbpp_574_surfacearea_cylinder",
  "language": "pl",
  "prompt": "# Write a function to find the surface area of a cylinder.\nsub surfacearea_cylinder {\n    my($r, $h) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_574_surfacearea_cylinder.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&surfacearea_cylinder;\n        if(eq_deeply($candidate->(10, 5),942.45)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(4, 5),226.18800000000002)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(4, 10),351.848)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    return 2 * pi * $r * $h + 2 * pi * $r**2;\n}",
    "    return 2 * pi * $r * ($r + $h);\n}",
    "    return 2 * pi * $r * ($r + $h);\n}",
    "    return 2 * pi * $r * ($r + $h);\n}",
    "    return 2 * pi * $r * ($r + $h);\n}",
    "    return 2 * pi * $r * ($r + $h);\n}",
    "    return 2 * pi * $r * ($r + $h);\n}",
    "    my $area = 2 * pi * $r * ($r + $h);\n    return $area;\n}",
    "    return 2 * pi * $r * ($r + $h);\n}",
    "    return 2 * pi * $r * ($r + $h);\n}",
    "    return 2 * pi * $r * ($r + $h);\n}",
    "    return 2 * pi * $r * ($r + $h);\n}",
    "    return 2 * pi * $r * ($r + $h);\n}",
    "    return 2 * pi * $r * ($r + $h);\n}",
    "    return 2 * pi * $r * ($r + $h);\n}",
    "    my $area = 2 * pi * $r * $h + 2 * pi * $r**2;\n    return $area;\n}",
    "    my $area = 2 * pi * $r * ($r + $h);\n    return $area;\n}",
    "    return 2 * pi * $r * ($r + $h);\n}",
    "    return 2 * pi * $r * $h + 2 * pi * $r * $r;\n}",
    "    return 2 * pi * $r * ($r + $h);\n}"
  ]
}
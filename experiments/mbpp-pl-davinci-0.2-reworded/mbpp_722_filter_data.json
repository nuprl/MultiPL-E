{
  "name": "mbpp_722_filter_data",
  "language": "pl",
  "prompt": "# The input is given as - a hash with a student name as a key and an array of float (student_height, student_weight) as a value, - minimal height, - minimal weight. Write a function to filter students that have height and weight above the minimum.\nsub filter_data {\n    my($students, $h, $w) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_722_filter_data.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&filter_data;\n        if(eq_deeply($candidate->({\"Cierra Vega\" => [6.2, 70], \"Alden Cantrell\" => [5.9, 65], \"Kierra Gentry\" => [6.0, 68], \"Pierre Cox\" => [5.8, 66]}, 6.0, 70),{\"Cierra Vega\" => [6.2, 70]})) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->({\"Cierra Vega\" => [6.2, 70], \"Alden Cantrell\" => [5.9, 65], \"Kierra Gentry\" => [6.0, 68], \"Pierre Cox\" => [5.8, 66]}, 5.9, 67),{\"Cierra Vega\" => [6.2, 70], \"Kierra Gentry\" => [6.0, 68]})) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->({\"Cierra Vega\" => [6.2, 70], \"Alden Cantrell\" => [5.9, 65], \"Kierra Gentry\" => [6.0, 68], \"Pierre Cox\" => [5.8, 66]}, 5.7, 64),{\"Cierra Vega\" => [6.2, 70], \"Alden Cantrell\" => [5.9, 65], \"Kierra Gentry\" => [6.0, 68], \"Pierre Cox\" => [5.8, 66]})) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my %result;\n    while (my($name, $data) = each %$students) {\n        if ($data->[0] > $h && $data->[1] > $w) {\n            $result{$name} = $data;\n        }\n    }\n    return \\%result;\n}",
    "    my %result;\n    foreach my $student (keys %$students) {\n        if ($students->{$student}[0] > $h && $students->{$student}[1] > $w) {\n            $result{$student} = $students->{$student};\n        }\n    }\n    return \\%result;\n}",
    "    my %filtered_students;\n    foreach my $student (keys %$students) {\n        if ($students->{$student}[0] > $h && $students->{$student}[1] > $w) {\n            $filtered_students{$student} = $students->{$student};\n        }\n    }\n    return \\%filtered_students;\n}",
    "    my %filtered_students;\n    while (my($name, $data) = each %$students) {\n        if ($data->[0] > $h && $data->[1] > $w) {\n            $filtered_students{$name} = $data;\n        }\n    }\n    return \\%filtered_students;\n}",
    "    my %result;\n    foreach my $name (keys %$students) {\n        my($height, $weight) = @{$students->{$name}};\n        if($height > $h && $weight > $w) {\n            $result{$name} = [$height, $weight];\n        }\n    }\n    return \\%result;\n}",
    "    my %result;\n    foreach my $name (keys %$students) {\n        my ($height, $weight) = @{$students->{$name}};\n        if ($height >= $h && $weight >= $w) {\n            $result{$name} = [$height, $weight];\n        }\n    }\n    return \\%result;\n}",
    "    my %result = ();\n    foreach my $key (keys %$students) {\n        my @arr = @{$students->{$key}};\n        if ($arr[0] >= $h && $arr[1] >= $w) {\n            $result{$key} = $students->{$key};\n        }\n    }\n    return %result;\n}",
    "    my %result;\n    while (my($name, $data) = each %$students) {\n        if ($data->[0] > $h && $data->[1] > $w) {\n            $result{$name} = $data;\n        }\n    }\n    return \\%result;\n}",
    "    my %filtered_students;\n    for my $student (keys %$students) {\n        my $height = $students->{$student}[0];\n        my $weight = $students->{$student}[1];\n        if ($height > $h && $weight > $w) {\n            $filtered_students{$student} = [$height, $weight];\n        }\n    }\n    return \\%filtered_students;\n}",
    "    my %result;\n    foreach my $name (keys %$students) {\n        my ($height, $weight) = @{$students->{$name}};\n        if ($height > $h && $weight > $w) {\n            $result{$name} = [$height, $weight];\n        }\n    }\n    return \\%result;\n}",
    "    my %result;\n    foreach my $student (keys %$students) {\n        my $height = $students->{$student}->[0];\n        my $weight = $students->{$student}->[1];\n        if ($height >= $h && $weight >= $w) {\n            $result{$student} = $students->{$student};\n        }\n    }\n    return %result;\n}",
    "    my %result;\n    foreach my $name (keys %$students) {\n        my($height, $weight) = @{$students->{$name}};\n        if ($height > $h && $weight > $w) {\n            $result{$name} = [$height, $weight];\n        }\n    }\n    return \\%result;\n}",
    "    my %result;\n    while (my($name, $data) = each %$students) {\n        if ($data->[0] > $h && $data->[1] > $w) {\n            $result{$name} = $data;\n        }\n    }\n    return \\%result;\n}",
    "    my %result;\n    while (my ($name, $data) = each %$students) {\n        if ($data->[0] >= $h && $data->[1] >= $w) {\n            $result{$name} = $data;\n        }\n    }\n    return \\%result;\n}",
    "    my %result;\n    while(my($name, $data) = each %$students) {\n        if($data->[0] > $h && $data->[1] > $w) {\n            $result{$name} = $data;\n        }\n    }\n    return \\%result;\n}",
    "    my %result;\n    while(my($name, $data) = each %$students) {\n        if($data->[0] > $h && $data->[1] > $w) {\n            $result{$name} = $data;\n        }\n    }\n    return \\%result;\n}",
    "    my %filtered_students;\n    foreach my $student (keys %$students) {\n        my($height, $weight) = @{$students->{$student}};\n        if ($height > $h && $weight > $w) {\n            $filtered_students{$student} = [$height, $weight];\n        }\n    }\n    return \\%filtered_students;\n}",
    "    my %result;\n    foreach my $key (keys %$students) {\n        if ($students->{$key}->[0] > $h && $students->{$key}->[1] > $w) {\n            $result{$key} = $students->{$key};\n        }\n    }\n    return %result;\n}",
    "    my %result;\n    while (my ($name, $data) = each %$students) {\n        if ($data->[0] > $h && $data->[1] > $w) {\n            $result{$name} = $data;\n        }\n    }\n    return \\%result;\n}",
    "    my %result;\n    foreach my $name (keys %$students) {\n        my ($height, $weight) = @{$students->{$name}};\n        if ($height > $h && $weight > $w) {\n            $result{$name} = [$height, $weight];\n        }\n    }\n    return \\%result;\n}"
  ]
}
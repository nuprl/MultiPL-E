{
  "name": "mbpp_123_amicable_numbers_sum",
  "language": "pl",
  "prompt": "# Write a function to sum all amicable numbers from 1 to a specified number.\nsub amicable_numbers_sum {\n    my($limit) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_123_amicable_numbers_sum.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&amicable_numbers_sum;\n        if(eq_deeply($candidate->(999),504)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(9999),31626)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(99),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "\n    my $sum = 0;\n    for my $i (1 .. $limit) {\n        my $j = sum_divisors($i);\n        if ($i != $j && $i == sum_divisors($j)) {\n            $sum += $i;\n        }\n    }",
    "    my $sum = 0;\n    for my $i (1..$limit) {\n        my $j = sum_divisors($i);\n        if ($i != $j && sum_divisors($j) == $i) {\n            $sum += $i;\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    for my $i (1..$limit) {\n        my $j = sum_proper_divisors($i);\n        if ($i != $j && $i == sum_proper_divisors($j)) {\n            $sum += $i;\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    for my $i (1..$limit) {\n        my $j = sum_of_proper_divisors($i);\n        if ($i != $j && $i == sum_of_proper_divisors($j)) {\n            $sum += $i;\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    for (my $i = 1; $i < $limit; $i++) {\n        my $j = sum_proper_divisors($i);\n        if ($i != $j && sum_proper_divisors($j) == $i) {\n            $sum += $i;\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    foreach my $i (1..$limit) {\n        my $j = sum_of_divisors($i);\n        if ($i != $j && sum_of_divisors($j) == $i) {\n            $sum += $i;\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    for (my $i = 1; $i <= $limit; $i++) {\n        my $j = sum_of_proper_divisors($i);\n        if ($i != $j && $i == sum_of_proper_divisors($j)) {\n            $sum += $i;\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    for my $i (1..$limit) {\n        my $j = sum_proper_divisors($i);\n        if ($i != $j && sum_proper_divisors($j) == $i) {\n            $sum += $i;\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    for my $i (1..$limit) {\n        my $j = sum_of_proper_divisors($i);\n        if ($i != $j && sum_of_proper_divisors($j) == $i) {\n            $sum += $i;\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    for (my $i = 1; $i <= $limit; $i++) {\n        my $j = sum_of_divisors($i);\n        if ($i != $j && sum_of_divisors($j) == $i) {\n            $sum += $i;\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    for (my $i = 1; $i < $limit; $i++) {\n        my $j = sum_divisors($i);\n        if ($i != $j && sum_divisors($j) == $i) {\n            $sum += $i;\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    for (my $i = 1; $i < $limit; $i++) {\n        my $j = sum_of_proper_divisors($i);\n        if ($i != $j && sum_of_proper_divisors($j) == $i) {\n            $sum += $i;\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    for my $n (1 .. $limit) {\n        my $m = sum_proper_divisors($n);\n        if ($m > $n && $n == sum_proper_divisors($m)) {\n            $sum += $n + $m;\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    my %divisors;\n    for my $i (1..$limit) {\n        my $divisor_sum = sum(divisors($i));\n        $divisors{$i} = $divisor_sum;\n        if ($divisors{$divisor_sum} == $i && $divisor_sum != $i) {\n            $sum += $i;\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    for my $i (1..$limit) {\n        my $j = sum_divisors($i);\n        if ($i != $j && sum_divisors($j) == $i) {\n            $sum += $i;\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    for my $i (1..$limit) {\n        my $j = sum_proper_divisors($i);\n        if ($i != $j && sum_proper_divisors($j) == $i) {\n            $sum += $i;\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    my $i = 1;\n    while ($i < $limit) {\n        my $j = sum_of_divisors($i);\n        if ($j > $i && $i == sum_of_divisors($j)) {\n            $sum += $i + $j;\n            $i = $j;\n        }\n        $i++;\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    for my $i (1..$limit) {\n        my $j = sum_of_proper_divisors($i);\n        if ($i != $j && $i == sum_of_proper_divisors($j)) {\n            $sum += $i;\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    for (my $i = 1; $i <= $limit; $i++) {\n        my $j = d($i);\n        if ($i != $j && d($j) == $i) {\n            $sum += $i;\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    for (my $i = 1; $i <= $limit; $i++) {\n        my $j = sum_proper_divisors($i);\n        if ($i != $j && sum_proper_divisors($j) == $i) {\n            $sum += $i;\n        }\n    }\n    return $sum;\n}"
  ]
}
{
  "name": "mbpp_751_check_min_heap",
  "language": "pl",
  "prompt": "# Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\nsub check_min_heap {\n    my($arr) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_751_check_min_heap.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&check_min_heap;\n        if(eq_deeply($candidate->([1, 2, 3, 4, 5, 6]),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 3, 4, 5, 10, 15]),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 10, 4, 5, 3, 15]),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my $n = scalar(@$arr);\n    for(my $i = ($n-2)/2; $i >= 0; $i--) {\n        if($arr->[$i] > $arr->[2*$i+1] || ($2*$i+2 < $n && $arr->[$i] > $arr->[2*$i+2])) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $n = scalar(@$arr);\n    for(my $i = 0; $i < $n; $i++) {\n        my $left = 2 * $i + 1;\n        my $right = 2 * $i + 2;\n        if($left < $n && $arr->[$i] > $arr->[$left]) {\n            return 0;\n        }\n        if($right < $n && $arr->[$i] > $arr->[$right]) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $n = scalar @$arr;\n    for(my $i = 0; $i <= ($n-2)/2; $i++) {\n        if($arr->[$i] > $arr->[2*$i+1] || ($arr->[2*$i+2] && $arr->[$i] > $arr->[2*$i+2])) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $n = scalar @$arr;\n    for (my $i = ($n - 1) / 2; $i >= 0; $i--) {\n        if ($arr->[$i] > $arr->[2 * $i + 1] || ($2 * $i + 2 < $n && $arr->[$i] > $arr->[2 * $i + 2])) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $n = scalar(@$arr);\n    for(my $i = 0; $i <= $n/2-1; $i++) {\n        if($arr->[$i] > $arr->[2*$i+1]) {\n            return 0;\n        }\n        if(2*$i+2 < $n && $arr->[$i] > $arr->[2*$i+2]) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $n = scalar(@$arr);\n    for (my $i = ($n - 1) / 2; $i >= 0; $i--) {\n        if ($arr->[$i] > $arr->[2 * $i + 1]) {\n            return 0;\n        }\n        if (2 * $i + 2 < $n && $arr->[$i] > $arr->[2 * $i + 2]) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $n = scalar(@$arr);\n    for(my $i = 0; $i <= ($n - 2)/2; $i++) {\n        if($arr->[$i] > $arr->[2*$i + 1] || ($2*$i + 2 < $n && $arr->[$i] > $arr->[2*$i + 2])) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $n = scalar(@$arr);\n    for(my $i = 0; $i < $n; $i++) {\n        my $left = 2*$i + 1;\n        my $right = 2*$i + 2;\n        if($left < $n && $arr->[$i] > $arr->[$left]) {\n            return 0;\n        }\n        if($right < $n && $arr->[$i] > $arr->[$right]) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $n = scalar(@$arr);\n    for (my $i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr->[$i] > $arr->[2 * $i + 1]) {\n            return 0;\n        }\n        if (2 * $i + 2 < $n && $arr->[$i] > $arr->[2 * $i + 2]) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $size = scalar(@$arr);\n    for (my $i = 0; $i < $size; $i++) {\n        my $left = 2 * $i + 1;\n        my $right = 2 * $i + 2;\n        if ($left < $size && $arr->[$i] > $arr->[$left]) {\n            return 0;\n        }\n        if ($right < $size && $arr->[$i] > $arr->[$right]) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $n = scalar(@$arr);\n    for (my $i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr->[$i] > $arr->[2 * $i + 1]) {\n            return 0;\n        }\n        if (2 * $i + 2 < $n && $arr->[$i] > $arr->[2 * $i + 2]) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $n = scalar @$arr;\n    for (my $i = 0; $i <= ($n - 2)/2; $i++) {\n        if ($arr->[$i] > $arr->[2*$i + 1]) {\n            return 0;\n        }\n        if (2*$i + 2 < $n && $arr->[$i] > $arr->[2*$i + 2]) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $n = scalar @$arr;\n    for (my $i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr->[$i] > $arr->[2 * $i + 1]) {\n            return 0;\n        }\n        if (2 * $i + 2 < $n && $arr->[$i] > $arr->[2 * $i + 2]) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $n = scalar(@$arr);\n    for (my $i = 0; $i <= ($n - 2) / 2; $i++) {\n        if ($arr->[$i] > $arr->[2 * $i + 1]) {\n            return 0;\n        }\n        if (2 * $i + 2 < $n && $arr->[$i] > $arr->[2 * $i + 2]) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $n = scalar(@$arr);\n    for(my $i = 0; $i <= $n/2-1; $i++) {\n        if($arr->[$i] > $arr->[2*$i+1]) {\n            return 0;\n        }\n        if(2*$i+2 < $n && $arr->[$i] > $arr->[2*$i+2]) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $n = scalar(@$arr);\n    for(my $i = 0; $i < $n; $i++) {\n        my $left = 2 * $i + 1;\n        my $right = 2 * $i + 2;\n        if($left < $n && $arr->[$i] > $arr->[$left]) {\n            return 0;\n        }\n        if($right < $n && $arr->[$i] > $arr->[$right]) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $n = scalar @$arr;\n    for (my $i = ($n-2)/2; $i >= 0; $i--) {\n        if ($arr->[$i] > $arr->[2*$i+1] or ($arr->[2*$i+2] and $arr->[$i] > $arr->[2*$i+2])) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $n = scalar(@$arr);\n    for(my $i = $n/2; $i >= 0; $i--) {\n        if($arr->[$i] > $arr->[2*$i + 1]) {\n            return 0;\n        }\n        if(2*$i + 2 < $n && $arr->[$i] > $arr->[2*$i + 2]) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $n = scalar(@$arr);\n    for(my $i = 0; $i <= ($n-2)/2; $i++) {\n        if($arr->[$i] > $arr->[2*$i+1]) {\n            return 0;\n        }\n        if(2*$i+2 < $n && $arr->[$i] > $arr->[2*$i+2]) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $n = scalar(@$arr);\n    for(my $i = 0; $i < $n; $i++) {\n        my $left = 2*$i + 1;\n        my $right = 2*$i + 2;\n        if($left < $n && $arr->[$i] > $arr->[$left]) {\n            return 0;\n        }\n        if($right < $n && $arr->[$i] > $arr->[$right]) {\n            return 0;\n        }\n    }\n    return 1;\n}"
  ]
}
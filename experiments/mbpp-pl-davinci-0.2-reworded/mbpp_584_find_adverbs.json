{
  "name": "mbpp_584_find_adverbs",
  "language": "pl",
  "prompt": "# Write a function to find the first adverb ending with ly and its positions in a given string.\nsub find_adverbs {\n    my($text) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_584_find_adverbs.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&find_adverbs;\n        if(eq_deeply($candidate->(\"Clearly, he has no excuse for such behavior.\"),\"0-7: Clearly\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"Please handle the situation carefuly\"),\"28-36: carefuly\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"Complete the task quickly\"),\"18-25: quickly\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my @adverbs = ();\n    my @positions = ();\n    while ($text =~ /(\\w+ly)/g) {\n        push @adverbs, $1;\n        push @positions, pos($text);\n    }\n    return (\\@adverbs, \\@positions);\n}",
    "    my @adverbs;\n    my $pos = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n        $pos = pos($text);\n    }\n    return (\\@adverbs, $pos);\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        my $adverb = $1;\n        my $pos = pos($text);\n        push @adverbs, {\n            word => $adverb,\n            start => $pos - length($adverb),\n            end => $pos - 1,\n        };\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    my @positions = ();\n    my $pos = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n        push @positions, $pos + $-[0];\n        $pos += $+[0];\n    }\n    return (\\@adverbs, \\@positions);\n}",
    "    my @adverbs;\n    while ($text =~ /(\\w+ly)/g) {\n        push @adverbs, $1;\n    }\n    return @adverbs;\n}",
    "    my @adverbs = $text =~ /\\b(\\w+ly)\\b/g;\n    return @adverbs;\n}",
    "    my @adverbs;\n    my $pos = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, $pos + $-[1], $pos + $+[1] - 1];\n        $pos += $+[0];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos $text];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    my $pos = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n        push @adverbs, $-[1];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my $adverbs = {};\n    while ($text =~ /(\\w+ly)/g) {\n        $adverbs->{$1} = [pos($text) - length($1), pos($text) - 1];\n    }\n    return $adverbs;\n}",
    "    my @adverbs;\n    my @positions;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n        push @positions, pos($text) - length($1);\n    }\n    return (\\@adverbs, \\@positions);\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    my @positions = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n        push @positions, $-[1];\n    }\n    return (\\@adverbs, \\@positions);\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, {\n            word => $1,\n            start => $-[1],\n            end => $+[1]\n        };\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        my $adverb = $1;\n        my $position = pos($text) - length($adverb);\n        push @adverbs, [$adverb, $position];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    my $pos = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, $pos + $-[0]];\n        $pos += $+[0];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    my $pos = 0;\n    while($text =~ /\\b(\\w+ly)\\b/g){\n        push @adverbs, $1;\n        $pos = pos($text);\n    }\n    return \\@adverbs, $pos;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    my @positions = ();\n    my $position = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n        push @positions, $position + $-[1];\n        $position = $+[0];\n    }\n    return (\\@adverbs, \\@positions);\n}",
    "    my $adverbs = {};\n    my $regex = qr/\\b\\w+ly\\b/;\n    while ($text =~ /$regex/g) {\n        my $adverb = $&;\n        my $pos = pos($text);\n        $adverbs->{$adverb} = $pos;\n    }\n    return $adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my $adverb_regex = qr/\\b\\w+ly\\b/;\n    my @adverbs = $text =~ /$adverb_regex/g;\n    my @positions = $text =~ /$adverb_regex/g;\n    return (\\@adverbs, \\@positions);\n}",
    "    my @adverbs;\n    my $pos = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, $pos + $-[0]];\n        $pos += $+[0];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        my $adverb = $1;\n        my $pos = pos($text);\n        push @adverbs, [$adverb, $pos - length($adverb)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, $-[0]];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while($text =~ /(\\w+ly)/g) {\n        push @adverbs, $1;\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    my @positions = ();\n    my $pos = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n        push @positions, $pos + $-[0];\n        $pos += $+[0];\n    }\n    return (\\@adverbs, \\@positions);\n}",
    "    my @adverbs;\n    my $pos = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, $pos + $-[0], $pos + $+[0]];\n        $pos += $+[0];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    my @positions = ();\n    my $pos = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n        push @positions, $pos + $-[0];\n        $pos += $+[0];\n    }\n    return (\\@adverbs, \\@positions);\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    my $pos = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n        push @adverbs, $pos + $-[1];\n        $pos = $+[1];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /(\\w+ly)\\b/g) {\n        push @adverbs, [$1, $-[0], $+[0]];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    my @positions = ();\n    my $position = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n        push @positions, $position + $-[0];\n        $position += $+[0];\n    }\n    return (\\@adverbs, \\@positions);\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    my $pos = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, $pos + $-[0], $pos + $+[0]];\n        $pos += $+[0];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /(\\w+ly)/g) {\n        push @adverbs, $1;\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    my $pos = 0;\n    while($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n        push @adverbs, $-[1];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /(\\w+ly)/g) {\n        push @adverbs, $1;\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my $adverbs = {};\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        my $adverb = $1;\n        my $pos = pos($text);\n        $adverbs->{$adverb} = $pos;\n    }\n    return $adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    my $pos = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, $pos + $-[0], $pos + $+[0]];\n        $pos += $+[0];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my $adverb_regex = qr/\\b\\w+ly\\b/;\n    my @adverbs = $text =~ /$adverb_regex/g;\n    my @positions = $text =~ /$adverb_regex/g;\n    return (\\@adverbs, \\@positions);\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    my $pos = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n        push @adverbs, $pos + $-[1];\n        $pos = $+[1];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    my @positions = ();\n    my $position = 0;\n    while ($text =~ /(\\w+ly)/g) {\n        push @adverbs, $1;\n        push @positions, $position + $-[0];\n        $position += $+[0];\n    }\n    return (\\@adverbs, \\@positions);\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    my $pos = 0;\n    while($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n        push @adverbs, $pos + $-[0];\n        push @adverbs, $pos + $+[0] - 1;\n        $pos += $+[0];\n    }\n    return @adverbs;\n}",
    "    my $adverb = qr/\\b\\w+ly\\b/;\n    my @adverbs = $text =~ /$adverb/g;\n    my @positions = $text =~ /$adverb/g;\n    return (\\@adverbs, \\@positions);\n}",
    "    my @adverbs = ();\n    my $pos = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, $pos + $-[0]];\n        $pos += $+[0];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, {\n            word => $1,\n            start => $-[1],\n            end => $+[1]\n        };\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    my $position = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n        $position = pos($text);\n    }\n    return ($position, @adverbs);\n}",
    "    my @adverbs = ();\n    my @positions = ();\n    my $position = 0;\n    my $adverb = \"\";\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        $adverb = $1;\n        $position = pos($text);\n        push @adverbs, $adverb;\n        push @positions, $position;\n    }\n    return (\\@adverbs, \\@positions);\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos $text];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    my @positions;\n    my $pos = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n        push @positions, $pos + $-[0];\n        $pos += $+[0];\n    }\n    return (\\@adverbs, \\@positions);\n}",
    "    my @adverbs;\n    while($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    my @positions = ();\n    my $pos = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n        push @positions, $pos + $-[0];\n        $pos += $+[0] - $-[0];\n    }\n    return (\\@adverbs, \\@positions);\n}",
    "    my @adverbs = ();\n    my @positions = ();\n    my $i = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n        push @positions, $i;\n        $i++;\n    }\n    return (\\@adverbs, \\@positions);\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while ($text =~ /(\\w+ly)/g) {\n        push @adverbs, $1;\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /(\\w+ly)/g) {\n        push @adverbs, $1;\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    my $pos = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n        $pos = pos($text);\n    }\n    return ($pos, @adverbs);\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, {\n            word => $1,\n            start => $-[1],\n            end => $+[1],\n        };\n    }\n    return @adverbs;\n}",
    "    my @adverbs = $text =~ /\\b\\w+ly\\b/g;\n    my %adverbs;\n    foreach my $adverb (@adverbs) {\n        my @positions = $text =~ /\\b$adverb\\b/g;\n        $adverbs{$adverb} = \\@positions;\n    }\n    return %adverbs;\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while($text =~ /\\b\\w+ly\\b/g) {\n        push @adverbs, [$&, pos($text) - length($&)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    my $pos = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n        $pos = pos($text);\n    }\n    return (\\@adverbs, $pos);\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    my $pos = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n        push @adverbs, $pos + $-[0];\n        push @adverbs, $pos + $+[0];\n        $pos += $+[0];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    my @positions;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n        push @positions, pos($text) - length($1);\n    }\n    return (\\@adverbs, \\@positions);\n}",
    "    my @adverbs;\n    while ($text =~ /(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    my @positions;\n    while ($text =~ /(\\w+ly)/g) {\n        push @adverbs, $1;\n        push @positions, pos($text);\n    }\n    return (\\@adverbs, \\@positions);\n}",
    "    my $adverb_regex = qr/\\b\\w+ly\\b/;\n    my @adverbs = $text =~ /$adverb_regex/g;\n    my @positions = $text =~ /$adverb_regex/g;\n    return (\\@adverbs, \\@positions);\n}",
    "    my @adverbs;\n    while($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    my @positions = ();\n    my $pos = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n        push @positions, $pos + $-[0];\n        $pos += $+[0];\n    }\n    return (\\@adverbs, \\@positions);\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        my $adverb = $1;\n        my $position = pos($text);\n        push @adverbs, {\n            adverb => $adverb,\n            position => $position,\n        };\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    my @positions = ();\n    my $position = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n        push @positions, $position + $-[0];\n        $position += $+[0];\n    }\n    return (\\@adverbs, \\@positions);\n}",
    "    my @adverbs;\n    while ($text =~ /(\\w+ly)/g) {\n        push @adverbs, $1;\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    my @positions = ();\n    my $position = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n        push @positions, $position + $-[0];\n        $position += $+[0];\n    }\n    return (\\@adverbs, \\@positions);\n}",
    "    my @adverbs = ();\n    my $pos = 0;\n    while($text =~ /(\\w+ly)/g) {\n        my $adverb = $1;\n        my $start = $pos + $-[0];\n        my $end = $pos + $+[0];\n        push @adverbs, {\n            adverb => $adverb,\n            start => $start,\n            end => $end\n        };\n        $pos = $end;\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos $text];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    my @positions = ();\n    my $position = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n        push @positions, $position + $-[0];\n        $position += $+[0];\n    }\n    return (\\@adverbs, \\@positions);\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b\\w+ly\\b/g) {\n        push @adverbs, [$&, pos($text) - length($&)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    my $pos = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n        push @adverbs, $pos + $-[1];\n        $pos = $+[1];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    my @positions = ();\n    my $position = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n        push @positions, $position + $-[0];\n        $position += $+[0];\n    }\n    return (\\@adverbs, \\@positions);\n}",
    "    my @adverbs = ();\n    my @positions = ();\n    my @words = split(/\\s+/, $text);\n    for (my $i = 0; $i < scalar(@words); $i++) {\n        if ($words[$i] =~ /ly$/) {\n            push(@adverbs, $words[$i]);\n            push(@positions, $i);\n        }\n    }\n    return (\\@adverbs, \\@positions);\n}",
    "    my @adverbs = ();\n    my @positions = ();\n    my @words = split /\\s+/, $text;\n    foreach my $word (@words) {\n        if ($word =~ /ly$/) {\n            push @adverbs, $word;\n            push @positions, $word;\n        }\n    }\n    return (\\@adverbs, \\@positions);\n}",
    "    my @adverbs = ();\n    while ($text =~ /(\\w+ly)/g) {\n        push @adverbs, $1;\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    my $position = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n        push @adverbs, $position + $-[0];\n        $position += $+[0];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    my $pos = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, $pos + $-[0], $pos + $+[0]];\n        $pos += $+[0];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, $-[0], $+[0]];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    my @positions = ();\n    my $position = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n        push @positions, $position + $-[0];\n        $position += $+[0];\n    }\n    return (\\@adverbs, \\@positions);\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = $text =~ /\\b\\w+ly\\b/g;\n    my @positions = $text =~ /\\b\\w+ly\\b/g;\n    return (\\@adverbs, \\@positions);\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    my @positions = ();\n    my $position = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n        push @positions, $position + $-[0];\n        $position += $+[0];\n    }\n    return (\\@adverbs, \\@positions);\n}",
    "    my @adverbs;\n    while($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    my @positions = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n        push @positions, pos($text);\n    }\n    return (\\@adverbs, \\@positions);\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /(\\w+ly)/g) {\n        push @adverbs, $1;\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, {\n            word => $1,\n            start => $-[1],\n            end => $+[1],\n        };\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    my @positions = ();\n    my $position = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n        push @positions, $position + $-[0];\n        $position += $+[0];\n    }\n    return (\\@adverbs, \\@positions);\n}",
    "    my @adverbs = ();\n    my $pos = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n        push @adverbs, $pos + $-[1];\n        $pos = $+[0];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while ($text =~ /(\\w+ly)/g) {\n        push @adverbs, $1;\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /(\\w+ly)/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    my $pos = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n        $pos = pos($text);\n    }\n    return ($pos, @adverbs);\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos $text];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    my $pos = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, {\n            word => $1,\n            start => $pos + $-[1],\n            end => $pos + $+[1]\n        };\n        $pos += $+[0];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, {\n            word => $1,\n            start => $-[1],\n            end => $+[1]\n        };\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos $text];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    my $pos = 0;\n    while ($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, $1;\n        push @adverbs, $-[0];\n        push @adverbs, $+[0];\n    }\n    return @adverbs;\n}",
    "    my @adverbs;\n    while($text =~ /\\b(\\w+ly)\\b/g) {\n        push @adverbs, [$1, pos($text) - length($1)];\n    }\n    return @adverbs;\n}",
    "    my @adverbs = ();\n    while ($text =~ /(\\w+ly)/g) {\n        push @adverbs, $1;\n    }\n    return @adverbs;\n}"
  ]
}
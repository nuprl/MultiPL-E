{
  "name": "mbpp_297_flatten_list",
  "language": "pl",
  "prompt": "# Write a function to flatten a given nested array structure.\nsub flatten_list {\n    my($list1) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_297_flatten_list.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&flatten_list;\n        if(eq_deeply($candidate->([0, 10, [20, 30], 40, 50, [60, 70, 80], [90, 100, 110, 120]]),[0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 120])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[10, 20], [40], [30, 56, 25], [10, 20], [33], [40]]),[10, 20, 40, 30, 56, 25, 10, 20, 33, 40])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]),[1, 2, 3, 4, 5, 6, 10, 11, 12, 7, 8, 9])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my @list2;\n    foreach my $item (@$list1) {\n        if (ref($item) eq 'ARRAY') {\n            push @list2, flatten_list($item);\n        } else {\n            push @list2, $item;\n        }\n    }\n    return @list2;\n}",
    "    my @list2;\n    foreach my $item (@$list1) {\n        if (ref $item eq 'ARRAY') {\n            push @list2, flatten_list($item);\n        }\n        else {\n            push @list2, $item;\n        }\n    }\n    return @list2;\n}",
    "    my @list2;\n    foreach my $item (@$list1) {\n        if (ref($item) eq 'ARRAY') {\n            push(@list2, flatten_list($item));\n        } else {\n            push(@list2, $item);\n        }\n    }\n    return @list2;\n}",
    "    my @list2;\n    foreach my $item (@$list1) {\n        if (ref($item) eq 'ARRAY') {\n            push @list2, flatten_list($item);\n        } else {\n            push @list2, $item;\n        }\n    }\n    return @list2;\n}",
    "    my @list2 = ();\n    foreach my $item (@$list1) {\n        if (ref($item) eq 'ARRAY') {\n            push @list2, flatten_list($item);\n        } else {\n            push @list2, $item;\n        }\n    }\n    return @list2;\n}",
    "    my @list2 = ();\n    foreach my $item (@$list1) {\n        if (ref($item) eq 'ARRAY') {\n            push @list2, flatten_list($item);\n        } else {\n            push @list2, $item;\n        }\n    }\n    return @list2;\n}",
    "    my @list2;\n    foreach my $item (@$list1) {\n        if (ref($item) eq 'ARRAY') {\n            push @list2, flatten_list($item);\n        } else {\n            push @list2, $item;\n        }\n    }\n    return @list2;\n}",
    "    my @list2;\n    foreach my $item (@$list1) {\n        if (ref($item) eq 'ARRAY') {\n            push @list2, flatten_list($item);\n        } else {\n            push @list2, $item;\n        }\n    }\n    return @list2;\n}",
    "    my @list2;\n    foreach my $item (@$list1) {\n        if (ref($item) eq 'ARRAY') {\n            push @list2, flatten_list($item);\n        } else {\n            push @list2, $item;\n        }\n    }\n    return @list2;\n}",
    "    my @list2;\n    foreach my $item (@$list1) {\n        if (ref($item) eq 'ARRAY') {\n            push @list2, flatten_list($item);\n        } else {\n            push @list2, $item;\n        }\n    }\n    return @list2;\n}",
    "    my @list2;\n    foreach my $item (@$list1) {\n        if (ref($item) eq 'ARRAY') {\n            push @list2, flatten_list($item);\n        } else {\n            push @list2, $item;\n        }\n    }\n    return @list2;\n}",
    "    my @list2;\n    foreach my $item (@$list1) {\n        if (ref($item) eq 'ARRAY') {\n            push @list2, flatten_list($item);\n        } else {\n            push @list2, $item;\n        }\n    }\n    return @list2;\n}",
    "    my @list2 = ();\n    for my $item (@$list1) {\n        if (ref($item) eq 'ARRAY') {\n            push @list2, flatten_list($item);\n        } else {\n            push @list2, $item;\n        }\n    }\n    return @list2;\n}",
    "    my @list2;\n    foreach my $item (@$list1) {\n        if (ref($item) eq 'ARRAY') {\n            push @list2, flatten_list($item);\n        } else {\n            push @list2, $item;\n        }\n    }\n    return @list2;\n}",
    "    my @list2;\n    foreach my $item (@$list1) {\n        if (ref($item) eq 'ARRAY') {\n            push @list2, flatten_list($item);\n        } else {\n            push @list2, $item;\n        }\n    }\n    return @list2;\n}",
    "    my @list2;\n    foreach my $item (@$list1) {\n        if (ref($item) eq 'ARRAY') {\n            push @list2, flatten_list($item);\n        }\n        else {\n            push @list2, $item;\n        }\n    }\n    return @list2;\n}",
    "    my @list2;\n    foreach my $item (@$list1) {\n        if (ref $item eq 'ARRAY') {\n            push @list2, flatten_list($item);\n        } else {\n            push @list2, $item;\n        }\n    }\n    return @list2;\n}",
    "    my @list2;\n    for my $item (@$list1) {\n        if (ref $item eq 'ARRAY') {\n            push @list2, flatten_list($item);\n        } else {\n            push @list2, $item;\n        }\n    }\n    return @list2;\n}",
    "    my @list2;\n    foreach my $element (@$list1) {\n        if (ref($element) eq 'ARRAY') {\n            push @list2, flatten_list($element);\n        }\n        else {\n            push @list2, $element;\n        }\n    }\n    return @list2;\n}",
    "    my @list2 = ();\n    foreach my $item (@$list1) {\n        if (ref($item) eq 'ARRAY') {\n            push @list2, flatten_list($item);\n        }\n        else {\n            push @list2, $item;\n        }\n    }\n    return @list2;\n}"
  ]
}
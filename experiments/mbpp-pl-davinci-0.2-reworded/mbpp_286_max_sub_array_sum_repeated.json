{
  "name": "mbpp_286_max_sub_array_sum_repeated",
  "language": "pl",
  "prompt": "# Write a function to find the largest sum of a contiguous array in the modified array which is formed by repeating the given array k times.\nsub max_sub_array_sum_repeated {\n    my($a, $n, $k) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_286_max_sub_array_sum_repeated.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&max_sub_array_sum_repeated;\n        if(eq_deeply($candidate->([10, 20, -30, -1], 4, 3),30)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-1, 10, 20], 3, 2),59)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-1, -2, -3], 3, 3),-1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my $max_sum = 0;\n    my $curr_sum = 0;\n    my $max_sum_so_far = 0;\n    for my $i (0..$n-1) {\n        $curr_sum += $a->[$i];\n        if ($curr_sum > $max_sum) {\n            $max_sum = $curr_sum;\n        }\n        if ($curr_sum < 0) {\n            $curr_sum = 0;\n        }\n    }\n    my $sum_of_all_elements = 0;\n    for my $i (0..$n-1) {\n        $sum_of_all_elements += $a->[$i];\n    }\n    if ($sum_of_all_elements > 0) {\n        $max_sum_so_far = $max_sum + ($k - 2) * $sum_of_all_elements;\n    }\n    else {\n        $max_sum_so_far = $max_sum;\n    }\n    $curr_sum = 0;\n    for my $i (0..$n-1) {\n        $curr_sum += $a->[$i];\n        if ($curr_sum > $max_sum_so_far) {\n            $max_sum_so_far = $curr_sum;\n        }\n        if ($curr_sum < 0) {\n            $curr_sum = 0;\n        }\n    }\n    return $max_sum_so_far;\n}",
    "    my $sum = 0;\n    my $max = 0;\n    my $max_so_far = 0;\n    my $max_ending_here = 0;\n    my $start = 0;\n    my $end = 0;\n    my $s = 0;\n    my $i = 0;\n    my $j = 0;\n    my $max_start = 0;\n    my $max_end = 0;\n    my $max_sum = 0;\n    my $max_sum_so_far = 0;\n    my $max_sum_ending_here = 0;\n    my $max_sum_start = 0;\n    my $max_sum_end = 0;\n    my $max_sum_start_index = 0;\n    my $max_sum_end_index = 0;\n    my $max_sum_start_index_so_far = 0;\n    my $max_sum_end_index_so_far = 0;\n    my $max_sum_start_index_ending_here = 0;\n    my $max_sum_end_index_ending_here = 0;\n    my $max_sum_start_index_so_far_ending_here = 0;\n    my $max_sum_end_index_so_far_ending_here = 0;\n    my $max_sum_start_index_so_far_ending_here_temp = 0;\n    my $max_sum_end_index_so_far_ending_here_temp = 0;\n    my $max_sum_start_index_so_far_ending_here_temp_temp = 0;\n    my $max_sum_end_index_so_far_ending_here_temp_temp = 0;\n    my $max_sum_start_index_so_far_ending_here_temp_temp_temp = 0;\n    my $max_sum_end_index_so_far_ending_here_temp_temp_temp = 0;\n    my $max_sum_start_index_so_far_ending_here_temp_temp_temp_temp = 0;\n    my $max_sum_end_index_so_far_ending_here_",
    "\n    my $max_sum = 0;\n    my $curr_sum = 0;\n    my $max_sum_so_far = 0;",
    "    my $max_so_far = 0;\n    my $max_ending_here = 0;\n    my $max_element = 0;\n    my $max_sum = 0;\n    my $i = 0;\n    my $j = 0;\n    my $sum = 0;\n    my $start = 0;\n    my $end = 0;\n    my $s = 0;\n    my $e = 0;\n    my $flag = 0;\n    my $max_sum_k = 0;",
    "    my $max_sum = -999999999999;\n    my $curr_sum = 0;\n    my $prefix_sum = 0;\n    my $suffix_sum = 0;\n    my $max_prefix_sum = -999999999999;\n    my $max_suffix_sum = -999999999999;\n    my $min_prefix_sum = 999999999999;\n    my $min_suffix_sum = 999999999999;\n    for my $i (0..$n-1) {\n        $curr_sum += $a->[$i];\n        $max_sum = max($max_sum, $curr_sum);\n        $curr_sum = max($curr_sum, 0);\n        $prefix_sum += $a->[$i];\n        $max_prefix_sum = max($max_prefix_sum, $prefix_sum);\n        $min_prefix_sum = min($min_prefix_sum, $prefix_sum);\n        $suffix_sum += $a->[$n-$i-1];\n        $max_suffix_sum = max($max_suffix_sum, $suffix_sum);\n        $min_suffix_sum = min($min_suffix_sum, $suffix_sum);\n    }\n    my $max_wrap = $suffix_sum + $prefix_sum - min($min_prefix_sum, $min_suffix_sum);\n    if ($k == 1) {\n        return $max_sum;\n    }\n    return max($max_sum, $max_wrap, $max_prefix_sum + ($k-2)*$prefix_sum + $max_suffix_sum);\n}",
    "    my $max_sum = 0;\n    my $curr_sum = 0;\n    my $sum = 0;\n    for(my $i = 0; $i < $n; $i++) {\n        $sum += $a->[$i];\n    }\n    for(my $i = 0; $i < $n; $i++) {\n        $curr_sum += $a->[$i];\n        if($curr_sum > $max_sum) {\n            $max_sum = $curr_sum;\n        }\n        if($curr_sum < 0) {\n            $curr_sum = 0;\n        }\n    }\n    if($sum > 0) {\n        $max_sum = max($max_sum, $curr_sum + $sum * ($k - 2));\n    }\n    return $max_sum;\n}",
    "    my $max_sum = 0;\n    my $curr_sum = 0;\n    my $i = 0;\n    my $j = 0;\n    my $max_ending_here = 0;\n    my $max_so_far = 0;\n    my $start = 0;\n    my $end = 0;\n    my $s = 0;\n    my $max_sum_k = 0;\n    my $max_sum_k_index = 0;\n    my $max_sum_k_start = 0;\n    my $max_sum_k_end = 0;\n    my $max_sum_k_start_index = 0;\n    my $max_sum_k_end_index = 0;\n    my $max_sum_k_start_index_temp = 0;\n    my $max_sum_k_end_index_temp = 0;\n    my $max_sum_k_temp = 0;\n    my $max_sum_k_index_temp = 0;\n    my $max_sum_k_start_temp = 0;\n    my $max_sum_k_end_temp = 0;\n    my $max_sum_k_start_index_temp_temp = 0;\n    my $max_sum_k_end_index_temp_temp = 0;\n    my $max_sum_k_temp_temp = 0;\n    my $max_sum_k_index_temp_temp = 0;\n    my $max_sum_k_start_temp_temp = 0;\n    my $max_sum_k_end_temp_temp = 0;\n    my $max_sum_k_start_index_temp_temp_temp = 0;\n    my $max_sum_k_end_index_temp_temp_temp = 0;\n    my $max_sum_k_temp_temp_temp = 0;\n    my $max_sum_k_index_temp_temp_temp = 0;\n    my $max_sum_k_start_temp_temp_temp = 0;\n    my $max_sum_k_end_temp_temp_temp = 0;\n    my $max_sum_k_start",
    "    my $max_sum = -1e9;\n    my $curr_sum = 0;\n    my $prefix_sum = 0;\n    my $min_prefix_sum = 0;\n    for my $i (0..$n-1) {\n        $curr_sum += $a->[$i];\n        $prefix_sum += $a->[$i];\n        $max_sum = max($max_sum, $curr_sum);\n        $max_sum = max($max_sum, $prefix_sum - $min_prefix_sum);\n        $min_prefix_sum = min($min_prefix_sum, $prefix_sum);\n    }\n    $curr_sum = 0;\n    for my $i (0..$n-1) {\n        $curr_sum += $a->[$i];\n        $max_sum = max($max_sum, $curr_sum + ($prefix_sum - $curr_sum) * ($k-2));\n    }\n    return $max_sum;\n}",
    "    my $max_sum = 0;\n    my $curr_sum = 0;\n    my $max_ending_here = 0;\n    my $min_ending_here = 0;\n    for (my $i = 0; $i < $n; $i++) {\n        $max_ending_here = $max_ending_here + $a->[$i];\n        $min_ending_here = $min_ending_here + $a->[$i];\n        if ($max_ending_here < 0) {\n            $max_ending_here = 0;\n        }\n        if ($min_ending_here > 0) {\n            $min_ending_here = 0;\n        }\n        $max_sum = max($max_sum, $max_ending_here);\n    }\n    if ($max_sum == 0) {\n        return max_sub_array_sum($a, $n);\n    }\n    my $corr_sum = 0;\n    for (my $i = 0; $i < $n; $i++) {\n        $corr_sum += $a->[$i];\n        $curr_sum += $a->[$i];\n        $max_ending_here = $max_ending_here + $a->[$i];\n        $min_ending_here = $min_ending_here + $a->[$i];\n        if ($max_ending_here < 0) {\n            $max_ending_here = 0;\n        }\n        if ($min_ending_here > 0) {\n            $min_ending_here = 0;\n        }\n        $max_sum = max($max_sum, $max_ending_here);\n    }\n    $max_sum = max($max_sum, ($curr_sum * ($k - 2)) + $max_ending_here);\n    return max($max_sum, ($curr_sum * ($k - 2)) + $max_ending_here - $min_ending_here);\n}",
    "    my $max_ending_here = 0;\n    my $max_so_far = 0;\n    my $max_element = max(@$a);\n    my $max_sum = sum(@$a);\n    my $sum = 0;\n    my $i = 0;\n    my $j = 0;\n    my $max_i = 0;\n    my $max_j = 0;\n    my $max_sub_array_sum = 0;\n    if ($max_element < 0) {\n        return $max_element * $k;\n    }\n    if ($max_sum <= 0) {\n        return $max_sum * $k;\n    }\n    while ($i < $n) {\n        $sum += $a->[$i];\n        if ($sum < 0) {\n            $sum = 0;\n            $j = $i + 1;\n        }\n        if ($sum > $max_so_far) {\n            $max_so_far = $sum;\n            $max_i = $j;\n            $max_j = $i;\n        }\n        $i++;\n    }\n    $max_sub_array_sum = $max_so_far;\n    if ($k > 1) {\n        $max_sub_array_sum += ($k - 2) * $max_sum;\n        $sum = 0;\n        $i = 0;\n        $j = 0;\n        $max_so_far = 0;\n        while ($i < $max_i) {\n            $sum += $a->[$i];\n            if ($sum < 0) {\n                $sum = 0;\n                $j = $i + 1;\n            }\n            if ($sum > $max_so_far) {\n                $max_so_far = $sum;\n            }\n            $i++;\n        }\n        $max_sub_array_sum += $max_so_far;\n        $sum = 0;\n        $i = $n - 1;\n        $j = $n - 1;\n        $max_so_far = 0;\n        while ($i > $max_j) {\n            $sum +=",
    "    my $max_sum = 0;\n    my $curr_sum = 0;\n    my $max_ending_here = 0;\n    my $max_so_far = 0;\n    my $i = 0;\n    my $j = 0;\n    my $start = 0;\n    my $end = 0;\n    my $s = 0;\n    my $max_sum_array = [];\n    my $max_sum_array_index = 0;\n    my $max_sum_array_size = 0;\n    my $max_sum_array_index_start = 0;\n    my $max_sum_array_index_end = 0;\n    my $max_sum_array_index_start_temp = 0;\n    my $max_sum_array_index_end_temp = 0;\n    my $max_sum_array_index_start_temp_2 = 0;\n    my $max_sum_array_index_end_temp_2 = 0;\n    my $max_sum_array_index_start_temp_3 = 0;\n    my $max_sum_array_index_end_temp_3 = 0;\n    my $max_sum_array_index_start_temp_4 = 0;\n    my $max_sum_array_index_end_temp_4 = 0;\n    my $max_sum_array_index_start_temp_5 = 0;\n    my $max_sum_array_index_end_temp_5 = 0;\n    my $max_sum_array_index_start_temp_6 = 0;\n    my $max_sum_array_index_end_temp_6 = 0;\n    my $max_sum_array_index_start_temp_7 = 0;\n    my $max_sum_array_index_end_temp_7 = 0;\n    my $max_sum_array_index_start_temp_8 = 0;\n    my $max_sum_array_index_end_temp_8 = 0;\n    my $max_sum_array_index_start_temp_9 = 0;\n    my $max_sum_array_index_end_temp_9 = 0;",
    "    my $max_sum = 0;\n    my $curr_sum = 0;\n    my $max_sum_so_far = 0;\n    my $max_sum_ending_here = 0;\n    my $max_element = 0;\n    my $i = 0;\n    my $j = 0;\n    my $start = 0;\n    my $end = 0;\n    my $s = 0;\n    my $e = 0;\n    my $max_element_index = 0;\n    my $max_element_index_so_far = 0;\n    my $max_element_index_ending_here = 0;\n    my $max_element_index_ending_here_so_far = 0;\n    my $max_element_index_ending_here_so_far_start = 0;\n    my $max_element_index_ending_here_so_far_end = 0;\n    my $max_element_index_ending_here_so_far_start_index = 0;\n    my $max_element_index_ending_here_so_far_end_index = 0;",
    "    my $max_sum = 0;\n    my $curr_sum = 0;\n    my $curr_prefix_sum = 0;\n    my $curr_suffix_sum = 0;\n    my $max_prefix_sum = 0;\n    my $max_suffix_sum = 0;\n    my $total_sum = 0;\n    for my $i (0..$n-1) {\n        $curr_sum += $a->[$i];\n        $curr_prefix_sum += $a->[$i];\n        $curr_suffix_sum += $a->[$n-$i-1];\n        $max_sum = max($max_sum, $curr_sum);\n        $max_prefix_sum = max($max_prefix_sum, $curr_prefix_sum);\n        $max_suffix_sum = max($max_suffix_sum, $curr_suffix_sum);\n        $total_sum += $a->[$i];\n    }\n    if ($k == 1) {\n        return $max_sum;\n    }\n    if ($total_sum > 0) {\n        return max($max_sum, $max_prefix_sum + $max_suffix_sum + ($k-2)*$total_sum);\n    } else {\n        return max($max_sum, $max_prefix_sum + $max_suffix_sum);\n    }\n}",
    "    my $max_sum = 0;\n    my $curr_sum = 0;\n    my $sum = 0;\n    for my $i (0..$n-1) {\n        $sum += $a->[$i];\n    }\n    for my $i (0..$n-1) {\n        $curr_sum += $a->[$i];\n        if ($i == $n-1) {\n            $curr_sum = $curr_sum - $sum * int($k/2);\n        }\n        $max_sum = max($max_sum, $curr_sum);\n        if ($curr_sum < 0) {\n            $curr_sum = 0;\n        }\n    }\n    return $max_sum;\n}",
    "    my $max_sum = 0;\n    my $curr_sum = 0;\n    my $max_val = 0;\n    my $min_val = 0;\n    for my $i (0 .. $n-1) {\n        $curr_sum += $a->[$i];\n        $max_val = max($max_val, $a->[$i]);\n        $min_val = min($min_val, $a->[$i]);\n    }\n    if ($max_val < 0) {\n        return $max_val * $k;\n    }\n    if ($min_val > 0) {\n        return $min_val * $k;\n    }\n    my $max_wrap = 0;\n    for my $i (0 .. $n-1) {\n        $curr_sum -= $a->[$i];\n        $max_wrap = max($max_wrap, $curr_sum);\n    }\n    $max_sum = max($curr_sum, $max_sum);\n    return ($max_sum + $max_wrap) * $k;\n}",
    "    my $max_sum = 0;\n    my $curr_sum = 0;\n    my $max_ending_here = 0;\n    my $max_so_far = 0;\n    my $start = 0;\n    my $end = 0;\n    my $s = 0;\n    my $i = 0;\n    for ($i = 0; $i < $n * $k; $i++) {\n        $max_ending_here = $max_ending_here + $a->[$i % $n];\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n            $start = $s;\n            $end = $i;\n        }\n        if ($max_ending_here < 0) {\n            $max_ending_here = 0;\n            $s = $i + 1;\n        }\n    }\n    return $max_so_far;\n}",
    "    my $max_so_far = 0;\n    my $max_ending_here = 0;\n    my $max_sub_array_sum = 0;\n    my $start = 0;\n    my $end = 0;\n    my $s = 0;\n    for (my $i = 0; $i < $n * $k; $i++) {\n        $max_ending_here = $max_ending_here + $a->[$i % $n];\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n            $start = $s;\n            $end = $i;\n        }\n        if ($max_ending_here < 0) {\n            $max_ending_here = 0;\n            $s = $i + 1;\n        }\n    }\n    for (my $i = $start; $i <= $end; $i++) {\n        $max_sub_array_sum += $a->[$i % $n];\n    }\n    return $max_sub_array_sum;\n}",
    "    my $max_sum = 0;\n    my $curr_sum = 0;\n    my $max_ending_here = 0;\n    my $max_so_far = 0;\n    my $i = 0;\n    my $j = 0;\n    my $start = 0;\n    my $end = 0;\n    my $s = 0;\n    my $max_start = 0;\n    my $max_end = 0;\n    my $max_start_index = 0;\n    my $max_end_index = 0;\n    my $max_start_index_final = 0;\n    my $max_end_index_final = 0;\n    my $max_sum_final = 0;\n    my $max_sum_final_index = 0;\n    my $max_sum_final_index_final = 0;\n    my $max_sum_final_final = 0;\n    my $max_sum_final_final_index = 0;\n    my $max_sum_final_final_index_final = 0;\n    my $max_sum_final_final_final = 0;\n    my $max_sum_final_final_final_index = 0;\n    my $max_sum_final_final_final_index_final = 0;\n    my $max_sum_final_final_final_final = 0;\n    my $max_sum_final_final_final_final_index = 0;\n    my $max_sum_final_final_final_final_index_final = 0;\n    my $max_sum_final_final_final_final_final = 0;\n    my $max_sum_final_final_final_final_final_index = 0;\n    my $max_sum_final_final_final_final_final_index_final = 0;\n    my $max_sum_final_final_final_final_final_final = 0;\n    my $max_sum_final_final_final_final_final_final_index = 0;\n    my $max_sum_final_final_final_final_final_final_index_final = 0;\n    my $max_sum_final_final_final",
    "\n    my $max_sum = 0;\n    my $curr_sum = 0;",
    "    my $max_sum = 0;\n    my $curr_sum = 0;\n    my $max_val = 0;\n    my $min_val = 0;\n    my $i = 0;\n    my $j = 0;\n    my $l = 0;\n    my $r = 0;\n    my $curr_val = 0;\n    my $prev_val = 0;\n    my $prev_sum = 0;\n    my $sum = 0;\n    my $max_sum_wrap = 0;\n    my $curr_sum_wrap = 0;\n    my $min_sum_wrap = 0;\n    my $min_sum = 0;\n    my $max_sum_wrap_final = 0;\n    my $max_sum_final = 0;\n    my $max_sum_wrap_final_final = 0;\n    my $max_sum_final_final = 0;\n    my $curr_sum_wrap_final = 0;\n    my $curr_sum_final = 0;\n    my $curr_sum_wrap_final_final = 0;\n    my $curr_sum_final_final = 0;\n    my $min_sum_wrap_final = 0;\n    my $min_sum_final = 0;\n    my $min_sum_wrap_final_final = 0;\n    my $min_sum_final_final = 0;\n    my $max_val_wrap = 0;\n    my $min_val_wrap = 0;\n    my $max_val_wrap_final = 0;\n    my $min_val_wrap_final = 0;\n    my $max_val_wrap_final_final = 0;\n    my $min_val_wrap_final_final = 0;\n    my $max_val_final = 0;\n    my $min_val_final = 0;\n    my $max_val_final_final = 0;\n    my $min_val_final_final = 0;\n    my $max_val_wrap_final_final_final = 0;\n    my $min_val_wrap_final_final_final = 0;\n    my $max_val_final"
  ]
}
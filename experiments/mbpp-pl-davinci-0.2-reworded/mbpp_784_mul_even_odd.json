{
  "name": "mbpp_784_mul_even_odd",
  "language": "pl",
  "prompt": "# Write a function to find the product of first even and odd number of a given array.\nsub mul_even_odd {\n    my($list1) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_784_mul_even_odd.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mul_even_odd;\n        if(eq_deeply($candidate->([1, 3, 5, 7, 4, 1, 6, 8]),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 5, 7, 9, 10]),10)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my $even = 0;\n    my $odd = 0;\n    my $count = 0;\n    my $product = 0;\n    foreach my $num (@$list1) {\n        if ($count == 0) {\n            $even = $num;\n            $count++;\n        }\n        elsif ($count == 1) {\n            $odd = $num;\n            $count++;\n        }\n        else {\n            last;\n        }\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 0;\n    my $flag = 0;\n    my $flag1 = 0;\n    for($i = 0; $i < scalar(@$list1); $i++) {\n        if($list1->[$i] % 2 == 0) {\n            $even = $list1->[$i];\n            $flag = 1;\n            last;\n        }\n    }\n    for($j = 0; $j < scalar(@$list1); $j++) {\n        if($list1->[$j] % 2 != 0) {\n            $odd = $list1->[$j];\n            $flag1 = 1;\n            last;\n        }\n    }\n    if($flag == 1 && $flag1 == 1) {\n        $product = $even * $odd;\n    }\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 1;\n    for($i = 0; $i < scalar(@$list1); $i++) {\n        if($$list1[$i] % 2 == 0) {\n            $even = $$list1[$i];\n            last;\n        }\n    }\n    for($j = 0; $j < scalar(@$list1); $j++) {\n        if($$list1[$j] % 2 != 0) {\n            $odd = $$list1[$j];\n            last;\n        }\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $count = 0;\n    my $product = 0;\n    foreach my $i (@$list1) {\n        if ($count == 0) {\n            if ($i % 2 == 0) {\n                $even = $i;\n                $count++;\n            }\n        }\n        elsif ($count == 1) {\n            if ($i % 2 != 0) {\n                $odd = $i;\n                $count++;\n            }\n        }\n        else {\n            last;\n        }\n    }\n    if ($count == 2) {\n        $product = $even * $odd;\n    }\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $prod = 0;\n    my @list = @$list1;\n    while($i < scalar(@list)) {\n        if($list[$i] % 2 == 0) {\n            $even = $list[$i];\n            $i++;\n            last;\n        }\n        $i++;\n    }\n    while($j < scalar(@list)) {\n        if($list[$j] % 2 != 0) {\n            $odd = $list[$j];\n            $j++;\n            last;\n        }\n        $j++;\n    }\n    $prod = $even * $odd;\n    return $prod;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 1;\n    my $len = scalar(@$list1);\n    while($i < $len && $j < $len) {\n        if($list1->[$i] % 2 == 0) {\n            $even = $list1->[$i];\n            $i++;\n            last;\n        }\n        $i++;\n    }\n    while($j < $len && $i < $len) {\n        if($list1->[$j] % 2 != 0) {\n            $odd = $list1->[$j];\n            $j++;\n            last;\n        }\n        $j++;\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 0;\n    foreach my $num (@$list1) {\n        if ($i == 0) {\n            if ($num % 2 == 0) {\n                $even = $num;\n                $i = 1;\n            }\n            else {\n                $odd = $num;\n                $j = 1;\n            }\n        }\n        else {\n            if ($num % 2 == 0 && $i == 1) {\n                $even = $num;\n                $i = 2;\n            }\n            if ($num % 2 != 0 && $j == 1) {\n                $odd = $num;\n                $j = 2;\n            }\n        }\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even_num = 0;\n    my $odd_num = 0;\n    my $count = 0;\n    foreach my $num (@$list1) {\n        if ($num % 2 == 0) {\n            $even_num = $num;\n            $count++;\n            last;\n        }\n    }\n    foreach my $num (@$list1) {\n        if ($num % 2 != 0) {\n            $odd_num = $num;\n            $count++;\n            last;\n        }\n    }\n    if ($count == 2) {\n        return $even_num * $odd_num;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $prod = 0;\n    while ($i < scalar(@$list1)) {\n        if ($list1->[$i] % 2 == 0) {\n            $even = $list1->[$i];\n            $i++;\n            last;\n        }\n        $i++;\n    }\n    while ($j < scalar(@$list1)) {\n        if ($list1->[$j] % 2 != 0) {\n            $odd = $list1->[$j];\n            $j++;\n            last;\n        }\n        $j++;\n    }\n    $prod = $even * $odd;\n    return $prod;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $product = 0;\n    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    my $flag1 = 0;\n    for($i = 0; $i < scalar(@$list1); $i++) {\n        if($list1->[$i] % 2 == 0) {\n            $even = $list1->[$i];\n            $flag = 1;\n            last;\n        }\n    }\n    for($j = 0; $j < scalar(@$list1); $j++) {\n        if($list1->[$j] % 2 != 0) {\n            $odd = $list1->[$j];\n            $flag1 = 1;\n            last;\n        }\n    }\n    if($flag == 1 && $flag1 == 1) {\n        $product = $even * $odd;\n    }\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $mul = 0;\n    for($i = 0; $i < scalar(@$list1); $i++) {\n        if(@$list1[$i] % 2 == 0) {\n            $even = @$list1[$i];\n            last;\n        }\n    }\n    for($j = 0; $j < scalar(@$list1); $j++) {\n        if(@$list1[$j] % 2 != 0) {\n            $odd = @$list1[$j];\n            last;\n        }\n    }\n    $mul = $even * $odd;\n    return $mul;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $count = 0;\n    my $product = 0;\n    foreach my $num (@$list1) {\n        if ($count == 0) {\n            $even = $num;\n            $count++;\n        }\n        elsif ($count == 1) {\n            $odd = $num;\n            $count++;\n        }\n        else {\n            $count++;\n        }\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 1;\n    my @list = @$list1;\n    while($i < scalar @list) {\n        if($list[$i] % 2 == 0) {\n            $even = $list[$i];\n            $i++;\n            last;\n        }\n        $i++;\n    }\n    while($j < scalar @list) {\n        if($list[$j] % 2 != 0) {\n            $odd = $list[$j];\n            $j++;\n            last;\n        }\n        $j++;\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $count = 0;\n    foreach my $i (@$list1) {\n        if ($count == 0) {\n            $even = $i;\n            $count++;\n        }\n        elsif ($count == 1) {\n            $odd = $i;\n            $count++;\n        }\n        else {\n            last;\n        }\n    }\n    return $even * $odd;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    foreach my $num (@$list1) {\n        if ($num % 2 == 0) {\n            $even = $num;\n            last;\n        }\n    }\n    foreach my $num (@$list1) {\n        if ($num % 2 != 0) {\n            $odd = $num;\n            last;\n        }\n    }\n    return $even * $odd;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 0;\n    my $size = scalar @$list1;\n    while($i < $size) {\n        if(@$list1[$i] % 2 == 0) {\n            $even = @$list1[$i];\n            $i++;\n            last;\n        }\n        $i++;\n    }\n    while($j < $size) {\n        if(@$list1[$j] % 2 != 0) {\n            $odd = @$list1[$j];\n            $j++;\n            last;\n        }\n        $j++;\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $count = 0;\n    my $product = 1;\n    foreach my $i (@$list1) {\n        if ($count == 0) {\n            $even = $i;\n            $count++;\n        }\n        elsif ($count == 1) {\n            $odd = $i;\n            $count++;\n        }\n        else {\n            last;\n        }\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $flag = 0;\n    my $product = 0;\n    foreach my $num (@$list1) {\n        if($num % 2 == 0) {\n            if($flag == 0) {\n                $even = $num;\n                $flag = 1;\n            }\n        } else {\n            $odd = $num;\n        }\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $count = 0;\n    foreach my $num(@$list1) {\n        if($num % 2 == 0) {\n            $even = $num;\n            $count++;\n            last;\n        }\n    }\n    foreach my $num(@$list1) {\n        if($num % 2 != 0) {\n            $odd = $num;\n            $count++;\n            last;\n        }\n    }\n    if($count == 2) {\n        return $even * $odd;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    foreach my $num (@$list1) {\n        if($num % 2 == 0) {\n            $even = $num;\n            last;\n        }\n        $i++;\n    }\n    $i = 0;\n    foreach my $num (@$list1) {\n        if($num % 2 != 0) {\n            $odd = $num;\n            last;\n        }\n        $i++;\n    }\n    return $even * $odd;\n}"
  ]
}
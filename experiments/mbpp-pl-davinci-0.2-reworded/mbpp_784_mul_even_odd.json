{
  "name": "mbpp_784_mul_even_odd",
  "language": "pl",
  "prompt": "# Write a function to find the product of first even and odd number of a given array.\nsub mul_even_odd {\n    my($list1) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_784_mul_even_odd.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mul_even_odd;\n        if(eq_deeply($candidate->([1, 3, 5, 7, 4, 1, 6, 8]),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),2)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 5, 7, 9, 10]),10)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my $even = 0;\n    my $odd = 0;\n    my $count = 0;\n    my $product = 0;\n    foreach my $num (@$list1) {\n        if ($count == 0) {\n            $even = $num;\n            $count++;\n        }\n        elsif ($count == 1) {\n            $odd = $num;\n            $count++;\n        }\n        else {\n            last;\n        }\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 0;\n    my $flag = 0;\n    my $flag1 = 0;\n    for($i = 0; $i < scalar(@$list1); $i++) {\n        if($list1->[$i] % 2 == 0) {\n            $even = $list1->[$i];\n            $flag = 1;\n            last;\n        }\n    }\n    for($j = 0; $j < scalar(@$list1); $j++) {\n        if($list1->[$j] % 2 != 0) {\n            $odd = $list1->[$j];\n            $flag1 = 1;\n            last;\n        }\n    }\n    if($flag == 1 && $flag1 == 1) {\n        $product = $even * $odd;\n    }\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 1;\n    for($i = 0; $i < scalar(@$list1); $i++) {\n        if($$list1[$i] % 2 == 0) {\n            $even = $$list1[$i];\n            last;\n        }\n    }\n    for($j = 0; $j < scalar(@$list1); $j++) {\n        if($$list1[$j] % 2 != 0) {\n            $odd = $$list1[$j];\n            last;\n        }\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $count = 0;\n    my $product = 0;\n    foreach my $i (@$list1) {\n        if ($count == 0) {\n            if ($i % 2 == 0) {\n                $even = $i;\n                $count++;\n            }\n        }\n        elsif ($count == 1) {\n            if ($i % 2 != 0) {\n                $odd = $i;\n                $count++;\n            }\n        }\n        else {\n            last;\n        }\n    }\n    if ($count == 2) {\n        $product = $even * $odd;\n    }\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $prod = 0;\n    my @list = @$list1;\n    while($i < scalar(@list)) {\n        if($list[$i] % 2 == 0) {\n            $even = $list[$i];\n            $i++;\n            last;\n        }\n        $i++;\n    }\n    while($j < scalar(@list)) {\n        if($list[$j] % 2 != 0) {\n            $odd = $list[$j];\n            $j++;\n            last;\n        }\n        $j++;\n    }\n    $prod = $even * $odd;\n    return $prod;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 1;\n    my $len = scalar(@$list1);\n    while($i < $len && $j < $len) {\n        if($list1->[$i] % 2 == 0) {\n            $even = $list1->[$i];\n            $i++;\n            last;\n        }\n        $i++;\n    }\n    while($j < $len && $i < $len) {\n        if($list1->[$j] % 2 != 0) {\n            $odd = $list1->[$j];\n            $j++;\n            last;\n        }\n        $j++;\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 0;\n    foreach my $num (@$list1) {\n        if ($i == 0) {\n            if ($num % 2 == 0) {\n                $even = $num;\n                $i = 1;\n            }\n            else {\n                $odd = $num;\n                $j = 1;\n            }\n        }\n        else {\n            if ($num % 2 == 0 && $i == 1) {\n                $even = $num;\n                $i = 2;\n            }\n            if ($num % 2 != 0 && $j == 1) {\n                $odd = $num;\n                $j = 2;\n            }\n        }\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even_num = 0;\n    my $odd_num = 0;\n    my $count = 0;\n    foreach my $num (@$list1) {\n        if ($num % 2 == 0) {\n            $even_num = $num;\n            $count++;\n            last;\n        }\n    }\n    foreach my $num (@$list1) {\n        if ($num % 2 != 0) {\n            $odd_num = $num;\n            $count++;\n            last;\n        }\n    }\n    if ($count == 2) {\n        return $even_num * $odd_num;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $prod = 0;\n    while ($i < scalar(@$list1)) {\n        if ($list1->[$i] % 2 == 0) {\n            $even = $list1->[$i];\n            $i++;\n            last;\n        }\n        $i++;\n    }\n    while ($j < scalar(@$list1)) {\n        if ($list1->[$j] % 2 != 0) {\n            $odd = $list1->[$j];\n            $j++;\n            last;\n        }\n        $j++;\n    }\n    $prod = $even * $odd;\n    return $prod;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $product = 0;\n    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    my $flag1 = 0;\n    for($i = 0; $i < scalar(@$list1); $i++) {\n        if($list1->[$i] % 2 == 0) {\n            $even = $list1->[$i];\n            $flag = 1;\n            last;\n        }\n    }\n    for($j = 0; $j < scalar(@$list1); $j++) {\n        if($list1->[$j] % 2 != 0) {\n            $odd = $list1->[$j];\n            $flag1 = 1;\n            last;\n        }\n    }\n    if($flag == 1 && $flag1 == 1) {\n        $product = $even * $odd;\n    }\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $mul = 0;\n    for($i = 0; $i < scalar(@$list1); $i++) {\n        if(@$list1[$i] % 2 == 0) {\n            $even = @$list1[$i];\n            last;\n        }\n    }\n    for($j = 0; $j < scalar(@$list1); $j++) {\n        if(@$list1[$j] % 2 != 0) {\n            $odd = @$list1[$j];\n            last;\n        }\n    }\n    $mul = $even * $odd;\n    return $mul;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $count = 0;\n    my $product = 0;\n    foreach my $num (@$list1) {\n        if ($count == 0) {\n            $even = $num;\n            $count++;\n        }\n        elsif ($count == 1) {\n            $odd = $num;\n            $count++;\n        }\n        else {\n            $count++;\n        }\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 1;\n    my @list = @$list1;\n    while($i < scalar @list) {\n        if($list[$i] % 2 == 0) {\n            $even = $list[$i];\n            $i++;\n            last;\n        }\n        $i++;\n    }\n    while($j < scalar @list) {\n        if($list[$j] % 2 != 0) {\n            $odd = $list[$j];\n            $j++;\n            last;\n        }\n        $j++;\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $count = 0;\n    foreach my $i (@$list1) {\n        if ($count == 0) {\n            $even = $i;\n            $count++;\n        }\n        elsif ($count == 1) {\n            $odd = $i;\n            $count++;\n        }\n        else {\n            last;\n        }\n    }\n    return $even * $odd;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    foreach my $num (@$list1) {\n        if ($num % 2 == 0) {\n            $even = $num;\n            last;\n        }\n    }\n    foreach my $num (@$list1) {\n        if ($num % 2 != 0) {\n            $odd = $num;\n            last;\n        }\n    }\n    return $even * $odd;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 0;\n    my $size = scalar @$list1;\n    while($i < $size) {\n        if(@$list1[$i] % 2 == 0) {\n            $even = @$list1[$i];\n            $i++;\n            last;\n        }\n        $i++;\n    }\n    while($j < $size) {\n        if(@$list1[$j] % 2 != 0) {\n            $odd = @$list1[$j];\n            $j++;\n            last;\n        }\n        $j++;\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $count = 0;\n    my $product = 1;\n    foreach my $i (@$list1) {\n        if ($count == 0) {\n            $even = $i;\n            $count++;\n        }\n        elsif ($count == 1) {\n            $odd = $i;\n            $count++;\n        }\n        else {\n            last;\n        }\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $flag = 0;\n    my $product = 0;\n    foreach my $num (@$list1) {\n        if($num % 2 == 0) {\n            if($flag == 0) {\n                $even = $num;\n                $flag = 1;\n            }\n        } else {\n            $odd = $num;\n        }\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $count = 0;\n    foreach my $num(@$list1) {\n        if($num % 2 == 0) {\n            $even = $num;\n            $count++;\n            last;\n        }\n    }\n    foreach my $num(@$list1) {\n        if($num % 2 != 0) {\n            $odd = $num;\n            $count++;\n            last;\n        }\n    }\n    if($count == 2) {\n        return $even * $odd;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    foreach my $num (@$list1) {\n        if($num % 2 == 0) {\n            $even = $num;\n            last;\n        }\n        $i++;\n    }\n    $i = 0;\n    foreach my $num (@$list1) {\n        if($num % 2 != 0) {\n            $odd = $num;\n            last;\n        }\n        $i++;\n    }\n    return $even * $odd;\n}",
    "    my $even_num = 0;\n    my $odd_num = 0;\n    my $count = 0;\n    my $product = 0;\n    foreach my $num (@$list1) {\n        if($count == 0) {\n            if($num % 2 == 0) {\n                $even_num = $num;\n                $count++;\n            }\n            else {\n                $odd_num = $num;\n                $count++;\n            }\n        }\n        else {\n            if($num % 2 == 0) {\n                $even_num = $num;\n                last;\n            }\n            else {\n                $odd_num = $num;\n                last;\n            }\n        }\n    }\n    $product = $even_num * $odd_num;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 0;\n    my @list2 = @$list1;\n    while($i < scalar(@list2)) {\n        if($list2[$i] % 2 == 0) {\n            $even = $list2[$i];\n            $i = scalar(@list2);\n        }\n        $i++;\n    }\n    while($j < scalar(@list2)) {\n        if($list2[$j] % 2 != 0) {\n            $odd = $list2[$j];\n            $j = scalar(@list2);\n        }\n        $j++;\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 0;\n    foreach my $num (@$list1) {\n        if ($num % 2 == 0) {\n            $even = $num;\n            $i++;\n            if ($i == 1) {\n                last;\n            }\n        }\n    }\n    foreach my $num (@$list1) {\n        if ($num % 2 != 0) {\n            $odd = $num;\n            $j++;\n            if ($j == 1) {\n                last;\n            }\n        }\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even_mul = 1;\n    my $odd_mul = 1;\n    my $i = 0;\n    foreach my $num (@$list1) {\n        if ($i % 2 == 0) {\n            $even_mul *= $num;\n        }\n        else {\n            $odd_mul *= $num;\n        }\n        $i++;\n    }\n    return $even_mul * $odd_mul;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 0;\n    my @list = @$list1;\n    while($i < @list) {\n        if($list[$i] % 2 == 0) {\n            $even = $list[$i];\n            last;\n        }\n        $i++;\n    }\n    while($j < @list) {\n        if($list[$j] % 2 != 0) {\n            $odd = $list[$j];\n            last;\n        }\n        $j++;\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    foreach my $num (@$list1) {\n        if ($i == 0) {\n            $even = $num;\n        } elsif ($i == 1) {\n            $odd = $num;\n            last;\n        }\n        $i++;\n    }\n    return $even * $odd;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $product = 0;\n    for(my $i = 0; $i < scalar(@$list1); $i++) {\n        if($list1->[$i] % 2 == 0) {\n            $even = $list1->[$i];\n            last;\n        }\n    }\n    for(my $i = 0; $i < scalar(@$list1); $i++) {\n        if($list1->[$i] % 2 != 0) {\n            $odd = $list1->[$i];\n            last;\n        }\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n    my $i1 = 0;\n    my $j1 = 0;\n    my $k1 = 0;\n    my $l1 = 0;\n    my $m1 = 0;\n    my $n1 = 0;\n    my $o1 = 0;\n    my $p1 = 0;\n    my $q1 = 0;\n    my $r1 = 0;\n    my $s1 = 0;\n    my $t1 = 0;\n    my $u1 = 0;\n    my $v1 = 0;\n    my $w1 = 0;\n    my $x1 = 0;\n    my $y1 = 0;\n    my $z1 = 0;\n    my $a1 = 0;\n    my $b1 = 0;\n    my $c1 = 0;\n    my $d1 = 0;\n    my $e1 = 0;\n    my $f1 = 0;\n    my $g1 = 0;\n    my $h1 = 0;\n    my $i2 = 0;\n    my $j2 = 0;\n    my $k2 = 0;\n    my $l2 = 0;\n    my $m2 = 0;\n    my $n2 = 0;",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $prod = 0;\n    for($i = 0;$i < scalar @$list1;$i++) {\n        if($list1->[$i] % 2 == 0) {\n            $even = $list1->[$i];\n            last;\n        }\n    }\n    for($j = 0;$j < scalar @$list1;$j++) {\n        if($list1->[$j] % 2 != 0) {\n            $odd = $list1->[$j];\n            last;\n        }\n    }\n    $prod = $even * $odd;\n    return $prod;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $prod = 0;\n    foreach $i (@$list1) {\n        if ($i % 2 == 0) {\n            $even = $i;\n            last;\n        }\n    }\n    foreach $j (@$list1) {\n        if ($j % 2 != 0) {\n            $odd = $j;\n            last;\n        }\n    }\n    $prod = $even * $odd;\n    return $prod;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    my $flag1 = 0;\n    my $product = 0;\n    for($i = 0; $i <= $#$list1; $i++) {\n        if($list1->[$i] % 2 == 0) {\n            $even = $list1->[$i];\n            $flag = 1;\n            last;\n        }\n    }\n    for($j = 0; $j <= $#$list1; $j++) {\n        if($list1->[$j] % 2 != 0) {\n            $odd = $list1->[$j];\n            $flag1 = 1;\n            last;\n        }\n    }\n    if($flag == 1 && $flag1 == 1) {\n        $product = $even * $odd;\n    }\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $prod = 0;\n    my $len = @$list1;\n    while($i < $len) {\n        if($$list1[$i] % 2 == 0) {\n            $even = $$list1[$i];\n            $i++;\n            last;\n        }\n        $i++;\n    }\n    while($j < $len) {\n        if($$list1[$j] % 2 != 0) {\n            $odd = $$list1[$j];\n            $j++;\n            last;\n        }\n        $j++;\n    }\n    $prod = $even * $odd;\n    return $prod;\n}",
    "    my $even_num = 0;\n    my $odd_num = 0;\n    my $even_flag = 0;\n    my $odd_flag = 0;\n    my $product = 0;\n    foreach my $num (@$list1) {\n        if ($num % 2 == 0) {\n            if ($even_flag == 0) {\n                $even_num = $num;\n                $even_flag = 1;\n            }\n        }\n        else {\n            if ($odd_flag == 0) {\n                $odd_num = $num;\n                $odd_flag = 1;\n            }\n        }\n        if ($even_flag == 1 && $odd_flag == 1) {\n            $product = $even_num * $odd_num;\n            last;\n        }\n    }\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $count = 0;\n    my $product = 1;\n    foreach my $i (@$list1) {\n        if ($count == 0) {\n            $even = $i;\n            $count++;\n        }\n        elsif ($count == 1) {\n            $odd = $i;\n            $count++;\n        }\n        else {\n            $count++;\n        }\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 0;\n    while ($i < scalar(@$list1)) {\n        if ($list1->[$i] % 2 == 0) {\n            $even = $list1->[$i];\n            $i++;\n            last;\n        }\n        $i++;\n    }\n    while ($j < scalar(@$list1)) {\n        if ($list1->[$j] % 2 != 0) {\n            $odd = $list1->[$j];\n            $j++;\n            last;\n        }\n        $j++;\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $count = 0;\n    my $count1 = 0;\n    my $product = 0;\n    my $size = scalar(@$list1);\n    for($i = 0; $i < $size; $i++) {\n        if($list1->[$i] % 2 == 0) {\n            $even = $list1->[$i];\n            $count++;\n            last;\n        }\n    }\n    for($j = 0; $j < $size; $j++) {\n        if($list1->[$j] % 2 != 0) {\n            $odd = $list1->[$j];\n            $count1++;\n            last;\n        }\n    }\n    if($count == 1 && $count1 == 1) {\n        $product = $even * $odd;\n    }\n    return $product;\n}",
    "    my $even_num = 0;\n    my $odd_num = 0;\n    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    my $flag1 = 0;\n    for($i = 0; $i <= $#$list1; $i++) {\n        if($list1->[$i] % 2 == 0) {\n            $even_num = $list1->[$i];\n            $flag = 1;\n            last;\n        }\n    }\n    for($j = 0; $j <= $#$list1; $j++) {\n        if($list1->[$j] % 2 != 0) {\n            $odd_num = $list1->[$j];\n            $flag1 = 1;\n            last;\n        }\n    }\n    if($flag == 1 && $flag1 == 1) {\n        return $even_num * $odd_num;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 0;\n    foreach my $num (@$list1) {\n        if ($num % 2 == 0) {\n            $even = $num;\n            $i++;\n        }\n        if ($num % 2 != 0) {\n            $odd = $num;\n            $j++;\n        }\n        if ($i == 1 && $j == 1) {\n            $product = $even * $odd;\n            last;\n        }\n    }\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $mul = 0;\n    my $size = scalar @$list1;\n    for($i=0;$i<$size;$i++) {\n        if(@$list1[$i]%2 == 0) {\n            $even = @$list1[$i];\n            last;\n        }\n    }\n    for($j=$i+1;$j<$size;$j++) {\n        if(@$list1[$j]%2 != 0) {\n            $odd = @$list1[$j];\n            last;\n        }\n    }\n    $mul = $even * $odd;\n    return $mul;\n}",
    "    my $even_num = 0;\n    my $odd_num = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 0;\n    foreach my $num (@$list1) {\n        if ($num % 2 == 0) {\n            $even_num = $num;\n            $i = 1;\n            last;\n        }\n    }\n    foreach my $num (@$list1) {\n        if ($num % 2 != 0) {\n            $odd_num = $num;\n            $j = 1;\n            last;\n        }\n    }\n    if ($i == 1 && $j == 1) {\n        $product = $even_num * $odd_num;\n    }\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 0;\n    my $count = 0;\n    my $count1 = 0;\n    my @list = @$list1;\n    my $len = scalar @list;\n    for($i = 0; $i < $len; $i++) {\n        if($list[$i] % 2 == 0) {\n            $even = $list[$i];\n            $count++;\n            last;\n        }\n    }\n    for($j = 0; $j < $len; $j++) {\n        if($list[$j] % 2 != 0) {\n            $odd = $list[$j];\n            $count1++;\n            last;\n        }\n    }\n    if($count == 0 || $count1 == 0) {\n        print \"There is no even or odd number in the list\\n\";\n    }\n    else {\n        $product = $even * $odd;\n        print \"The product of first even and odd number is $product\\n\";\n    }\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $count = 0;\n    my $product = 0;\n    foreach my $i (@$list1) {\n        if ($count == 0) {\n            $even = $i;\n            $count++;\n        }\n        elsif ($count == 1) {\n            $odd = $i;\n            $count++;\n        }\n        else {\n            last;\n        }\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 0;\n    my @list = @$list1;\n    for($i = 0; $i < scalar @list; $i++) {\n        if($list[$i] % 2 == 0) {\n            $even = $list[$i];\n            last;\n        }\n    }\n    for($j = 0; $j < scalar @list; $j++) {\n        if($list[$j] % 2 != 0) {\n            $odd = $list[$j];\n            last;\n        }\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    my $flag1 = 0;\n    my $product = 0;\n    for($i = 0; $i < scalar(@$list1); $i++) {\n        if($list1->[$i] % 2 == 0) {\n            $even = $list1->[$i];\n            $flag = 1;\n            last;\n        }\n    }\n    for($j = 0; $j < scalar(@$list1); $j++) {\n        if($list1->[$j] % 2 != 0) {\n            $odd = $list1->[$j];\n            $flag1 = 1;\n            last;\n        }\n    }\n    if($flag == 1 && $flag1 == 1) {\n        $product = $even * $odd;\n    }\n    return $product;\n}",
    "    my($even, $odd);\n    for(my $i = 0; $i < @$list1; $i++) {\n        if($i % 2 == 0) {\n            $even = $list1->[$i];\n        }\n        else {\n            $odd = $list1->[$i];\n        }\n    }\n    return $even * $odd;\n}",
    "    my $even_num = 0;\n    my $odd_num = 0;\n    my $count = 0;\n    my $product = 0;\n    foreach my $num (@$list1) {\n        if ($count == 0) {\n            if ($num % 2 == 0) {\n                $even_num = $num;\n                $count++;\n            }\n            else {\n                $odd_num = $num;\n                $count++;\n            }\n        }\n        else {\n            if ($num % 2 == 0) {\n                $even_num = $num;\n                $product = $even_num * $odd_num;\n                last;\n            }\n            else {\n                $odd_num = $num;\n                $product = $even_num * $odd_num;\n                last;\n            }\n        }\n    }\n    return $product;\n}",
    "    my $even_num = 0;\n    my $odd_num = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $mul = 0;\n    my $len = @$list1;\n    for($i = 0; $i < $len; $i++) {\n        if(@$list1[$i] % 2 == 0) {\n            $even_num = @$list1[$i];\n            $j = 1;\n            last;\n        }\n    }\n    for($k = 0; $k < $len; $k++) {\n        if(@$list1[$k] % 2 != 0) {\n            $odd_num = @$list1[$k];\n            $l = 1;\n            last;\n        }\n    }\n    if($j == 1 && $l == 1) {\n        $mul = $even_num * $odd_num;\n    }\n    return $mul;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 0;\n    my @list = @$list1;\n    for($i = 0; $i < scalar(@list); $i++) {\n        if($list[$i] % 2 == 0) {\n            $even = $list[$i];\n            last;\n        }\n    }\n    for($j = 0; $j < scalar(@list); $j++) {\n        if($list[$j] % 2 != 0) {\n            $odd = $list[$j];\n            last;\n        }\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $flag = 0;\n    my $product = 0;\n    foreach my $i (@$list1) {\n        if($i % 2 == 0 && $flag == 0) {\n            $even = $i;\n            $flag = 1;\n        }\n        elsif($i % 2 != 0 && $flag == 1) {\n            $odd = $i;\n            $flag = 2;\n        }\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even_num = 0;\n    my $odd_num = 0;\n    my $i = 0;\n    foreach my $num (@$list1) {\n        if ($num % 2 == 0) {\n            $even_num = $num;\n            last;\n        }\n    }\n    foreach my $num (@$list1) {\n        if ($num % 2 != 0) {\n            $odd_num = $num;\n            last;\n        }\n    }\n    return $even_num * $odd_num;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 0;\n    my $len = scalar(@$list1);\n    while($i < $len && $even == 0) {\n        if(@$list1[$i] % 2 == 0) {\n            $even = @$list1[$i];\n        }\n        $i++;\n    }\n    while($j < $len && $odd == 0) {\n        if(@$list1[$j] % 2 != 0) {\n            $odd = @$list1[$j];\n        }\n        $j++;\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even_num = 0;\n    my $odd_num = 0;\n    my $i = 0;\n    my $j = 0;\n    my $even_flag = 0;\n    my $odd_flag = 0;\n    my $product = 0;\n    for($i = 0; $i <= $#$list1; $i++) {\n        if($list1->[$i] % 2 == 0) {\n            $even_num = $list1->[$i];\n            $even_flag = 1;\n            last;\n        }\n    }\n    for($j = 0; $j <= $#$list1; $j++) {\n        if($list1->[$j] % 2 != 0) {\n            $odd_num = $list1->[$j];\n            $odd_flag = 1;\n            last;\n        }\n    }\n    if($even_flag == 1 && $odd_flag == 1) {\n        $product = $even_num * $odd_num;\n    }\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $count = 0;\n    my $product = 0;\n    foreach my $i (@$list1) {\n        if ($count == 0) {\n            $even = $i;\n            $count++;\n        }\n        elsif ($count == 1) {\n            $odd = $i;\n            $count++;\n        }\n        else {\n            last;\n        }\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even_num = 0;\n    my $odd_num = 0;\n    my $flag = 0;\n    my $flag1 = 0;\n    foreach my $i (@$list1) {\n        if ($i % 2 == 0) {\n            $even_num = $i;\n            $flag = 1;\n            last;\n        }\n    }\n    foreach my $i (@$list1) {\n        if ($i % 2 != 0) {\n            $odd_num = $i;\n            $flag1 = 1;\n            last;\n        }\n    }\n    if ($flag == 1 && $flag1 == 1) {\n        return $even_num * $odd_num;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $count = 0;\n    my $product = 1;\n    foreach my $num (@$list1) {\n        if ($num % 2 == 0) {\n            if ($even == 0) {\n                $even = $num;\n                $count++;\n            }\n        }\n        if ($num % 2 != 0) {\n            if ($odd == 0) {\n                $odd = $num;\n                $count++;\n            }\n        }\n        if ($count == 2) {\n            $product = $even * $odd;\n            last;\n        }\n    }\n    return $product;\n}",
    "    my $even_num = 0;\n    my $odd_num = 0;\n    my $even_flag = 0;\n    my $odd_flag = 0;\n    foreach my $num (@$list1) {\n        if ($num % 2 == 0) {\n            if ($even_flag == 0) {\n                $even_num = $num;\n                $even_flag = 1;\n            }\n        }\n        else {\n            if ($odd_flag == 0) {\n                $odd_num = $num;\n                $odd_flag = 1;\n            }\n        }\n        if ($even_flag == 1 && $odd_flag == 1) {\n            return $even_num * $odd_num;\n        }\n    }\n    return 0;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $mul = 0;\n    for($i = 0; $i < scalar(@$list1); $i++) {\n        if($list1->[$i] % 2 == 0) {\n            $even = $list1->[$i];\n            last;\n        }\n    }\n    for($j = 0; $j < scalar(@$list1); $j++) {\n        if($list1->[$j] % 2 != 0) {\n            $odd = $list1->[$j];\n            last;\n        }\n    }\n    $mul = $even * $odd;\n    return $mul;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 0;\n    for($i = 0; $i < scalar(@$list1); $i++) {\n        if($list1->[$i] % 2 == 0) {\n            $even = $list1->[$i];\n            last;\n        }\n    }\n    for($j = 0; $j < scalar(@$list1); $j++) {\n        if($list1->[$j] % 2 != 0) {\n            $odd = $list1->[$j];\n            last;\n        }\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even_num = 0;\n    my $odd_num = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 0;\n    foreach my $num (@$list1) {\n        if($num % 2 == 0) {\n            $even_num = $num;\n            $i++;\n            last if($i == 1);\n        }\n    }\n    foreach my $num (@$list1) {\n        if($num % 2 != 0) {\n            $odd_num = $num;\n            $j++;\n            last if($j == 1);\n        }\n    }\n    $product = $even_num * $odd_num;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $product = 0;\n    my $count = 0;\n    foreach my $i (@$list1) {\n        if ($count == 0) {\n            $even = $i;\n            $count++;\n        }\n        elsif ($count == 1) {\n            $odd = $i;\n            $count++;\n        }\n        else {\n            last;\n        }\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 0;\n    my @list = @$list1;\n    while($i < scalar @list) {\n        if($list[$i] % 2 == 0) {\n            $even = $list[$i];\n            $i++;\n            last;\n        }\n        $i++;\n    }\n    while($j < scalar @list) {\n        if($list[$j] % 2 != 0) {\n            $odd = $list[$j];\n            $j++;\n            last;\n        }\n        $j++;\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 0;\n    for($i = 0; $i < scalar(@$list1); $i++) {\n        if($list1->[$i] % 2 == 0) {\n            $even = $list1->[$i];\n            last;\n        }\n    }\n    for($j = 0; $j < scalar(@$list1); $j++) {\n        if($list1->[$j] % 2 != 0) {\n            $odd = $list1->[$j];\n            last;\n        }\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $count = 0;\n    foreach my $i (@$list1) {\n        if ($count == 0) {\n            $even = $i;\n            $count++;\n        }\n        elsif ($count == 1) {\n            $odd = $i;\n            last;\n        }\n    }\n    return $even * $odd;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $even = 0;\n    my $odd = 0;\n    my $product = 0;\n    for($i = 0; $i < scalar(@$list1); $i++) {\n        if($list1->[$i] % 2 == 0) {\n            $even = $list1->[$i];\n            last;\n        }\n    }\n    for($j = 0; $j < scalar(@$list1); $j++) {\n        if($list1->[$j] % 2 != 0) {\n            $odd = $list1->[$j];\n            last;\n        }\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $count = 0;\n    my $prod = 0;\n    foreach $num (@$list1) {\n        if ($num % 2 == 0) {\n            $even = $num;\n            $count++;\n            last;\n        }\n    }\n    foreach $num (@$list1) {\n        if ($num % 2 != 0) {\n            $odd = $num;\n            $count++;\n            last;\n        }\n    }\n    if ($count == 2) {\n        $prod = $even * $odd;\n    }\n    return $prod;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 0;\n    my @list = @$list1;\n    while($i < scalar(@list)) {\n        if($list[$i] % 2 == 0) {\n            $even = $list[$i];\n            $i++;\n            last;\n        }\n        $i++;\n    }\n    while($j < scalar(@list)) {\n        if($list[$j] % 2 != 0) {\n            $odd = $list[$j];\n            $j++;\n            last;\n        }\n        $j++;\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 0;\n    my $size = scalar(@$list1);\n    while($i < $size) {\n        if(@$list1[$i] % 2 == 0) {\n            $even = @$list1[$i];\n            $i++;\n            last;\n        }\n        $i++;\n    }\n    while($j < $size) {\n        if(@$list1[$j] % 2 != 0) {\n            $odd = @$list1[$j];\n            $j++;\n            last;\n        }\n        $j++;\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $product = 0;\n    my $len = scalar @$list1;\n    while($i < $len) {\n        if(@$list1[$i] % 2 == 0) {\n            $even = @$list1[$i];\n            $j = $i + 1;\n            last;\n        }\n        $i++;\n    }\n    while($j < $len) {\n        if(@$list1[$j] % 2 != 0) {\n            $odd = @$list1[$j];\n            $k = $j + 1;\n            last;\n        }\n        $j++;\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    my $flag1 = 0;\n    my $product = 0;\n    foreach my $i (@$list1) {\n        if ($i % 2 == 0) {\n            $even = $i;\n            $flag = 1;\n            last;\n        }\n    }\n    foreach my $j (@$list1) {\n        if ($j % 2 != 0) {\n            $odd = $j;\n            $flag1 = 1;\n            last;\n        }\n    }\n    if ($flag == 1 && $flag1 == 1) {\n        $product = $even * $odd;\n    }\n    else {\n        $product = 0;\n    }\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $count = 0;\n    my $product = 1;\n    foreach my $i (@$list1) {\n        if ($i % 2 == 0) {\n            $even = $i;\n            $count++;\n            last;\n        }\n    }\n    foreach my $i (@$list1) {\n        if ($i % 2 != 0) {\n            $odd = $i;\n            $count++;\n            last;\n        }\n    }\n    if ($count == 2) {\n        $product = $even * $odd;\n    }\n    return $product;\n}",
    "    my $even_num = 0;\n    my $odd_num = 0;\n    my $even_flag = 0;\n    my $odd_flag = 0;\n    for(my $i = 0; $i <= $#{$list1}; $i++) {\n        if($list1->[$i] % 2 == 0 && $even_flag == 0) {\n            $even_num = $list1->[$i];\n            $even_flag = 1;\n        }\n        if($list1->[$i] % 2 != 0 && $odd_flag == 0) {\n            $odd_num = $list1->[$i];\n            $odd_flag = 1;\n        }\n        if($even_flag == 1 && $odd_flag == 1) {\n            last;\n        }\n    }\n    return $even_num * $odd_num;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $count = 0;\n    my $product = 1;\n    foreach my $i (@$list1) {\n        if ($count == 0) {\n            $even = $i;\n            $count++;\n        }\n        elsif ($count == 1) {\n            $odd = $i;\n            $count++;\n        }\n        else {\n            last;\n        }\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 0;\n    while($i < scalar(@$list1)) {\n        if($list1->[$i] % 2 == 0) {\n            $even = $list1->[$i];\n            $i++;\n            last;\n        }\n        $i++;\n    }\n    while($j < scalar(@$list1)) {\n        if($list1->[$j] % 2 != 0) {\n            $odd = $list1->[$j];\n            $j++;\n            last;\n        }\n        $j++;\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 0;\n    my $size = scalar(@$list1);\n    for($i = 0; $i < $size; $i++){\n        if(@$list1[$i] % 2 == 0){\n            $even = @$list1[$i];\n            last;\n        }\n    }\n    for($j = 0; $j < $size; $j++){\n        if(@$list1[$j] % 2 != 0){\n            $odd = @$list1[$j];\n            last;\n        }\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 0;\n    my @list = @$list1;\n    for($i = 0; $i < scalar @list; $i++) {\n        if($list[$i] % 2 == 0) {\n            $even = $list[$i];\n            last;\n        }\n    }\n    for($j = 0; $j < scalar @list; $j++) {\n        if($list[$j] % 2 != 0) {\n            $odd = $list[$j];\n            last;\n        }\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 0;\n    for($i = 0; $i < scalar(@$list1); $i++) {\n        if($$list1[$i] % 2 == 0) {\n            $even = $$list1[$i];\n            last;\n        }\n    }\n    for($j = 0; $j < scalar(@$list1); $j++) {\n        if($$list1[$j] % 2 != 0) {\n            $odd = $$list1[$j];\n            last;\n        }\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even_num = 0;\n    my $odd_num = 0;\n    my $even_flag = 0;\n    my $odd_flag = 0;\n    my $product = 0;\n    foreach my $num (@$list1) {\n        if($num % 2 == 0 && $even_flag == 0) {\n            $even_num = $num;\n            $even_flag = 1;\n        }\n        elsif($num % 2 != 0 && $odd_flag == 0) {\n            $odd_num = $num;\n            $odd_flag = 1;\n        }\n        if($even_flag == 1 && $odd_flag == 1) {\n            $product = $even_num * $odd_num;\n            last;\n        }\n    }\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    foreach my $num (@$list1) {\n        if ($i == 0) {\n            $even = $num;\n        }\n        elsif ($i == 1) {\n            $odd = $num;\n            last;\n        }\n        $i++;\n    }\n    return $even * $odd;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $prod = 0;\n    for($i = 0; $i < scalar(@$list1); $i++) {\n        if($list1->[$i] % 2 == 0) {\n            $even = $list1->[$i];\n            last;\n        }\n    }\n    for($j = 0; $j < scalar(@$list1); $j++) {\n        if($list1->[$j] % 2 != 0) {\n            $odd = $list1->[$j];\n            last;\n        }\n    }\n    $prod = $even * $odd;\n    return $prod;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    while($i < scalar(@$list1)) {\n        if($list1->[$i] % 2 == 0) {\n            $even = $list1->[$i];\n            last;\n        }\n        $i++;\n    }\n    $i = 0;\n    while($i < scalar(@$list1)) {\n        if($list1->[$i] % 2 != 0) {\n            $odd = $list1->[$i];\n            last;\n        }\n        $i++;\n    }\n    return $even * $odd;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $count = 0;\n    my $product = 0;\n    foreach my $num (@$list1) {\n        if ($count == 0) {\n            if ($num % 2 == 0) {\n                $even = $num;\n                $count++;\n            }\n            else {\n                $odd = $num;\n                $count++;\n            }\n        }\n        else {\n            if ($num % 2 == 0) {\n                $even = $num;\n                last;\n            }\n            else {\n                $odd = $num;\n                last;\n            }\n        }\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 0;\n    my @list = @$list1;\n    while($i < scalar(@list)) {\n        if($list[$i] % 2 == 0) {\n            $even = $list[$i];\n            $i++;\n            last;\n        }\n        $i++;\n    }\n    while($j < scalar(@list)) {\n        if($list[$j] % 2 != 0) {\n            $odd = $list[$j];\n            $j++;\n            last;\n        }\n        $j++;\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 0;\n    foreach $i (@$list1) {\n        if ($i % 2 == 0) {\n            $even = $i;\n            last;\n        }\n    }\n    foreach $j (@$list1) {\n        if ($j % 2 != 0) {\n            $odd = $j;\n            last;\n        }\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 0;\n    my $count = 0;\n    my $count1 = 0;\n    my $size = scalar(@$list1);\n    for($i = 0; $i < $size; $i++) {\n        if(@$list1[$i] % 2 == 0) {\n            $even = @$list1[$i];\n            $count++;\n            last;\n        }\n    }\n    for($j = 0; $j < $size; $j++) {\n        if(@$list1[$j] % 2 != 0) {\n            $odd = @$list1[$j];\n            $count1++;\n            last;\n        }\n    }\n    if($count == 1 && $count1 == 1) {\n        $product = $even * $odd;\n    }\n    return $product;\n}",
    "    my $even_num = 0;\n    my $odd_num = 0;\n    my $count = 0;\n    foreach my $num (@$list1) {\n        if ($num % 2 == 0) {\n            $even_num = $num;\n            $count++;\n            last;\n        }\n    }\n    foreach my $num (@$list1) {\n        if ($num % 2 != 0) {\n            $odd_num = $num;\n            $count++;\n            last;\n        }\n    }\n    if ($count == 2) {\n        return $even_num * $odd_num;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 0;\n    for($i = 0; $i <= $#$list1; $i++) {\n        if($list1->[$i] % 2 == 0) {\n            $even = $list1->[$i];\n            last;\n        }\n    }\n    for($j = 0; $j <= $#$list1; $j++) {\n        if($list1->[$j] % 2 != 0) {\n            $odd = $list1->[$j];\n            last;\n        }\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 0;\n    my $len = @$list1;\n    while($i < $len) {\n        if($$list1[$i] % 2 == 0) {\n            $even = $$list1[$i];\n            $i++;\n            last;\n        }\n        $i++;\n    }\n    while($j < $len) {\n        if($$list1[$j] % 2 != 0) {\n            $odd = $$list1[$j];\n            $j++;\n            last;\n        }\n        $j++;\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 0;\n    while($i < scalar(@$list1)) {\n        if($list1->[$i] % 2 == 0) {\n            $even = $list1->[$i];\n            $i++;\n            last;\n        }\n        $i++;\n    }\n    while($j < scalar(@$list1)) {\n        if($list1->[$j] % 2 != 0) {\n            $odd = $list1->[$j];\n            $j++;\n            last;\n        }\n        $j++;\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even_num = 0;\n    my $odd_num = 0;\n    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    my $flag1 = 0;\n    my $mul = 0;\n    for($i = 0; $i <= $#$list1; $i++) {\n        if($list1->[$i] % 2 == 0) {\n            $even_num = $list1->[$i];\n            $flag = 1;\n            last;\n        }\n    }\n    for($j = 0; $j <= $#$list1; $j++) {\n        if($list1->[$j] % 2 != 0) {\n            $odd_num = $list1->[$j];\n            $flag1 = 1;\n            last;\n        }\n    }\n    if($flag == 1 && $flag1 == 1) {\n        $mul = $even_num * $odd_num;\n    }\n    return $mul;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $count = 0;\n    my $product = 1;\n    foreach my $i (@$list1) {\n        if ($count == 0) {\n            if ($i % 2 == 0) {\n                $even = $i;\n                $count = 1;\n            }\n        }\n        else {\n            if ($i % 2 == 1) {\n                $odd = $i;\n                $count = 0;\n            }\n        }\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $count = 0;\n    my $product = 0;\n    foreach my $i (@$list1) {\n        if ($count == 0) {\n            $even = $i;\n            $count++;\n        }\n        elsif ($count == 1) {\n            $odd = $i;\n            $count++;\n        }\n        else {\n            last;\n        }\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 1;\n    for($i = 0; $i < scalar(@$list1); $i++) {\n        if(@$list1[$i] % 2 == 0) {\n            $even = @$list1[$i];\n            last;\n        }\n    }\n    for($j = 0; $j < scalar(@$list1); $j++) {\n        if(@$list1[$j] % 2 != 0) {\n            $odd = @$list1[$j];\n            last;\n        }\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 0;\n    my $size = scalar(@$list1);\n    for($i = 0; $i < $size; $i++) {\n        if($list1->[$i] % 2 == 0) {\n            $even = $list1->[$i];\n            last;\n        }\n    }\n    for($j = 0; $j < $size; $j++) {\n        if($list1->[$j] % 2 != 0) {\n            $odd = $list1->[$j];\n            last;\n        }\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 0;\n    my @list = @$list1;\n    for($i = 0; $i < scalar(@list); $i++) {\n        if($list[$i] % 2 == 0) {\n            $even = $list[$i];\n            last;\n        }\n    }\n    for($j = 0; $j < scalar(@list); $j++) {\n        if($list[$j] % 2 != 0) {\n            $odd = $list[$j];\n            last;\n        }\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $prod = 0;\n    while ($i < scalar @$list1) {\n        if ($list1->[$i] % 2 == 0) {\n            $even = $list1->[$i];\n            $i++;\n            last;\n        }\n        $i++;\n    }\n    while ($j < scalar @$list1) {\n        if ($list1->[$j] % 2 != 0) {\n            $odd = $list1->[$j];\n            $j++;\n            last;\n        }\n        $j++;\n    }\n    $prod = $even * $odd;\n    return $prod;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $mul = 0;\n    my @list = @$list1;\n    for($i = 0; $i < scalar @list; $i++) {\n        if($list[$i] % 2 == 0) {\n            $even = $list[$i];\n            last;\n        }\n    }\n    for($j = 0; $j < scalar @list; $j++) {\n        if($list[$j] % 2 != 0) {\n            $odd = $list[$j];\n            last;\n        }\n    }\n    $mul = $even * $odd;\n    return $mul;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $prod = 0;\n    foreach my $num (@$list1) {\n        if ($num % 2 == 0) {\n            $even = $num;\n            $i++;\n        }\n        if ($num % 2 != 0) {\n            $odd = $num;\n            $j++;\n        }\n        if ($i == 1 && $j == 1) {\n            $prod = $even * $odd;\n            last;\n        }\n    }\n    return $prod;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 0;\n    my @list = @$list1;\n    for ($i = 0; $i <= $#list; $i++) {\n        if ($list[$i] % 2 == 0) {\n            $even = $list[$i];\n            last;\n        }\n    }\n    for ($j = 0; $j <= $#list; $j++) {\n        if ($list[$j] % 2 != 0) {\n            $odd = $list[$j];\n            last;\n        }\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 0;\n    my $count = 0;\n    my $count1 = 0;\n    for($i = 0; $i < scalar(@$list1); $i++) {\n        if(@$list1[$i] % 2 == 0) {\n            $even = @$list1[$i];\n            $count++;\n            last;\n        }\n    }\n    for($j = 0; $j < scalar(@$list1); $j++) {\n        if(@$list1[$j] % 2 != 0) {\n            $odd = @$list1[$j];\n            $count1++;\n            last;\n        }\n    }\n    if($count == 0 || $count1 == 0) {\n        print \"No even or odd number in the list\\n\";\n    }\n    else {\n        $product = $even * $odd;\n        print \"Product of first even and odd number is $product\\n\";\n    }\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $prod = 0;\n    for($i = 0; $i < scalar(@$list1); $i++) {\n        if($list1->[$i] % 2 == 0) {\n            $even = $list1->[$i];\n            last;\n        }\n    }\n    for($j = 0; $j < scalar(@$list1); $j++) {\n        if($list1->[$j] % 2 != 0) {\n            $odd = $list1->[$j];\n            last;\n        }\n    }\n    $prod = $even * $odd;\n    return $prod;\n}",
    "    my $product = 1;\n    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    while($even == 0 || $odd == 0) {\n        if($list1->[$i] % 2 == 0 && $even == 0) {\n            $even = $list1->[$i];\n        }\n        elsif($list1->[$i] % 2 != 0 && $odd == 0) {\n            $odd = $list1->[$i];\n        }\n        $i++;\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 0;\n    for($i = 0; $i < scalar(@$list1); $i++) {\n        if(@$list1[$i] % 2 == 0) {\n            $even = @$list1[$i];\n            last;\n        }\n    }\n    for($j = 0; $j < scalar(@$list1); $j++) {\n        if(@$list1[$j] % 2 != 0) {\n            $odd = @$list1[$j];\n            last;\n        }\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $count = 0;\n    foreach my $num(@$list1) {\n        if($num % 2 == 0) {\n            $even = $num;\n            $count++;\n            last;\n        }\n    }\n    foreach my $num(@$list1) {\n        if($num % 2 != 0) {\n            $odd = $num;\n            $count++;\n            last;\n        }\n    }\n    if($count == 2) {\n        return $even * $odd;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 0;\n    for($i = 0; $i <= $#$list1; $i++) {\n        if($list1->[$i] % 2 == 0) {\n            $even = $list1->[$i];\n            last;\n        }\n    }\n    for($j = $i + 1; $j <= $#$list1; $j++) {\n        if($list1->[$j] % 2 != 0) {\n            $odd = $list1->[$j];\n            last;\n        }\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 0;\n    foreach my $num (@$list1) {\n        if($num % 2 == 0) {\n            $even = $num;\n            $i++;\n            last;\n        }\n    }\n    foreach my $num (@$list1) {\n        if($num % 2 != 0) {\n            $odd = $num;\n            $j++;\n            last;\n        }\n    }\n    if($i == 0 || $j == 0) {\n        print \"Either even or odd number is not present in the array\\n\";\n    }\n    else {\n        $product = $even * $odd;\n        print \"The product of first even and odd number is $product\\n\";\n    }\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 0;\n    for ($i = 0; $i < scalar(@$list1); $i++) {\n        if ($list1->[$i] % 2 == 0) {\n            $even = $list1->[$i];\n            last;\n        }\n    }\n    for ($j = 0; $j < scalar(@$list1); $j++) {\n        if ($list1->[$j] % 2 != 0) {\n            $odd = $list1->[$j];\n            last;\n        }\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $mul = 0;\n    for($i = 0; $i < scalar(@$list1); $i++) {\n        if(@$list1[$i] % 2 == 0) {\n            $even = @$list1[$i];\n            last;\n        }\n    }\n    for($j = 0; $j < scalar(@$list1); $j++) {\n        if(@$list1[$j] % 2 != 0) {\n            $odd = @$list1[$j];\n            last;\n        }\n    }\n    $mul = $even * $odd;\n    return $mul;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    my $flag1 = 0;\n    my $product = 0;\n    for($i = 0; $i < scalar(@$list1); $i++) {\n        if($list1->[$i] % 2 == 0) {\n            if($flag == 0) {\n                $even = $list1->[$i];\n                $flag = 1;\n            }\n        }\n        else {\n            if($flag1 == 0) {\n                $odd = $list1->[$i];\n                $flag1 = 1;\n            }\n        }\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    my $flag1 = 0;\n    my $product = 0;\n    for($i = 0; $i < $list1->{size}; $i++) {\n        if($list1->{data}[$i] % 2 == 0) {\n            $even = $list1->{data}[$i];\n            $flag = 1;\n            last;\n        }\n    }\n    for($j = 0; $j < $list1->{size}; $j++) {\n        if($list1->{data}[$j] % 2 != 0) {\n            $odd = $list1->{data}[$j];\n            $flag1 = 1;\n            last;\n        }\n    }\n    if($flag == 1 && $flag1 == 1) {\n        $product = $even * $odd;\n    }\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 0;\n    for($i = 0; $i < scalar(@$list1); $i++) {\n        if($list1->[$i] % 2 == 0) {\n            $even = $list1->[$i];\n            last;\n        }\n    }\n    for($j = 0; $j < scalar(@$list1); $j++) {\n        if($list1->[$j] % 2 != 0) {\n            $odd = $list1->[$j];\n            last;\n        }\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $count = 0;\n    my $product = 1;\n    foreach my $i (@$list1) {\n        if ($count == 0) {\n            $even = $i;\n            $count++;\n        }\n        elsif ($count == 1) {\n            $odd = $i;\n            $count++;\n        }\n        else {\n            $count++;\n        }\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even_num = 0;\n    my $odd_num = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 0;\n    for($i = 0; $i < scalar(@$list1); $i++) {\n        if($$list1[$i] % 2 == 0) {\n            $even_num = $$list1[$i];\n            last;\n        }\n    }\n    for($j = 0; $j < scalar(@$list1); $j++) {\n        if($$list1[$j] % 2 != 0) {\n            $odd_num = $$list1[$j];\n            last;\n        }\n    }\n    $product = $even_num * $odd_num;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 0;\n    for($i = 0; $i < scalar(@$list1); $i++) {\n        if(@$list1[$i] % 2 == 0) {\n            $even = @$list1[$i];\n            last;\n        }\n    }\n    for($j = 0; $j < scalar(@$list1); $j++) {\n        if(@$list1[$j] % 2 != 0) {\n            $odd = @$list1[$j];\n            last;\n        }\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $count = 0;\n    my $product = 1;\n    foreach my $i (@$list1) {\n        if ($count == 0) {\n            $even = $i;\n            $count++;\n        }\n        elsif ($count == 1) {\n            $odd = $i;\n            $count++;\n        }\n        else {\n            $count++;\n        }\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 0;\n    for($i = 0; $i < scalar(@$list1); $i++) {\n        if($list1->[$i] % 2 == 0) {\n            $even = $list1->[$i];\n            last;\n        }\n    }\n    for($j = 0; $j < scalar(@$list1); $j++) {\n        if($list1->[$j] % 2 != 0) {\n            $odd = $list1->[$j];\n            last;\n        }\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $count = 0;\n    my $product = 1;\n    foreach my $num (@$list1) {\n        if ($count == 0) {\n            if ($num % 2 == 0) {\n                $even = $num;\n                $count++;\n            }\n        }\n        elsif ($count == 1) {\n            if ($num % 2 == 1) {\n                $odd = $num;\n                $count++;\n            }\n        }\n        else {\n            last;\n        }\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my @list = @$list1;\n    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    my $flag1 = 0;\n    for($i = 0; $i < scalar(@list); $i++) {\n        if($list[$i] % 2 == 0) {\n            $even = $list[$i];\n            $flag = 1;\n            last;\n        }\n    }\n    for($j = 0; $j < scalar(@list); $j++) {\n        if($list[$j] % 2 != 0) {\n            $odd = $list[$j];\n            $flag1 = 1;\n            last;\n        }\n    }\n    if($flag == 1 && $flag1 == 1) {\n        return $even * $odd;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $count = 0;\n    foreach my $num (@$list1) {\n        if ($num % 2 == 0) {\n            $even = $num;\n            $count++;\n            last;\n        }\n    }\n    foreach my $num (@$list1) {\n        if ($num % 2 != 0) {\n            $odd = $num;\n            $count++;\n            last;\n        }\n    }\n    if ($count == 2) {\n        return $even * $odd;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $count = 0;\n    foreach my $i (@$list1) {\n        if ($i % 2 == 0) {\n            $even = $i;\n            $count++;\n            last;\n        }\n    }\n    foreach my $i (@$list1) {\n        if ($i % 2 != 0) {\n            $odd = $i;\n            $count++;\n            last;\n        }\n    }\n    if ($count == 2) {\n        return $even * $odd;\n    } else {\n        return 0;\n    }\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $count = 0;\n    my $product = 1;\n    foreach my $num (@$list1) {\n        if ($count == 0) {\n            $even = $num;\n        }\n        if ($count == 1) {\n            $odd = $num;\n        }\n        $count++;\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    my $flag1 = 0;\n    my $product = 0;\n    foreach my $num (@$list1) {\n        if ($num % 2 == 0) {\n            $even = $num;\n            $flag = 1;\n            last;\n        }\n    }\n    foreach my $num (@$list1) {\n        if ($num % 2 != 0) {\n            $odd = $num;\n            $flag1 = 1;\n            last;\n        }\n    }\n    if ($flag == 1 && $flag1 == 1) {\n        $product = $even * $odd;\n    }\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 0;\n    my @list = @$list1;\n    while($i < scalar(@list)) {\n        if($list[$i] % 2 == 0) {\n            $even = $list[$i];\n            $i++;\n            last;\n        }\n        $i++;\n    }\n    while($j < scalar(@list)) {\n        if($list[$j] % 2 != 0) {\n            $odd = $list[$j];\n            $j++;\n            last;\n        }\n        $j++;\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 0;\n    my @list = @$list1;\n    foreach my $num (@list) {\n        if ($num % 2 == 0) {\n            $even = $num;\n            $i++;\n        }\n        if ($num % 2 != 0) {\n            $odd = $num;\n            $j++;\n        }\n        if ($i == 1 && $j == 1) {\n            $product = $even * $odd;\n            last;\n        }\n    }\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    foreach my $i (@$list1) {\n        if ($i % 2 == 0) {\n            $even = $i;\n            last;\n        }\n    }\n    foreach my $i (@$list1) {\n        if ($i % 2 != 0) {\n            $odd = $i;\n            last;\n        }\n    }\n    return $even * $odd;\n}",
    "    my $even_num = 0;\n    my $odd_num = 0;\n    my $flag = 0;\n    foreach my $num(@$list1) {\n        if($flag == 0) {\n            $even_num = $num;\n            $flag = 1;\n        }\n        elsif($flag == 1) {\n            $odd_num = $num;\n            $flag = 0;\n        }\n    }\n    return $even_num * $odd_num;\n}",
    "    my @list = @$list1;\n    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    while($i < scalar @list) {\n        if($list[$i] % 2 == 0) {\n            $even = $list[$i];\n            last;\n        }\n        $i++;\n    }\n    $i = 0;\n    while($i < scalar @list) {\n        if($list[$i] % 2 != 0) {\n            $odd = $list[$i];\n            last;\n        }\n        $i++;\n    }\n    return $even * $odd;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $count = 0;\n    my $product = 1;\n    foreach my $num (@$list1) {\n        if($count == 0) {\n            if($num % 2 == 0) {\n                $even = $num;\n                $count++;\n            }\n        }\n        elsif($count == 1) {\n            if($num % 2 != 0) {\n                $odd = $num;\n                $count++;\n            }\n        }\n        else {\n            last;\n        }\n    }\n    if($even != 0 && $odd != 0) {\n        $product = $even * $odd;\n    }\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $mul = 0;\n    for($i = 0; $i < scalar(@$list1); $i++) {\n        if($list1[$i] % 2 == 0) {\n            $even = $list1[$i];\n            last;\n        }\n    }\n    for($j = 0; $j < scalar(@$list1); $j++) {\n        if($list1[$j] % 2 != 0) {\n            $odd = $list1[$j];\n            last;\n        }\n    }\n    $mul = $even * $odd;\n    return $mul;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $count = 0;\n    foreach my $i (@$list1) {\n        if ($count == 0) {\n            $even = $i;\n            $count++;\n        }\n        elsif ($count == 1) {\n            $odd = $i;\n            $count++;\n        }\n    }\n    return $even * $odd;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $count = 0;\n    foreach my $num (@$list1) {\n        if ($num % 2 == 0) {\n            $even = $num;\n            $count++;\n            last;\n        }\n    }\n    foreach my $num (@$list1) {\n        if ($num % 2 != 0) {\n            $odd = $num;\n            $count++;\n            last;\n        }\n    }\n    if ($count == 2) {\n        return $even * $odd;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $prod = 0;\n    my $size = @$list1;\n    while($i < $size) {\n        if(@$list1[$i] % 2 == 0) {\n            $even = @$list1[$i];\n            $i = $size;\n        }\n        $i++;\n    }\n    while($j < $size) {\n        if(@$list1[$j] % 2 != 0) {\n            $odd = @$list1[$j];\n            $j = $size;\n        }\n        $j++;\n    }\n    $prod = $even * $odd;\n    return $prod;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $count = 0;\n    my $count1 = 0;\n    my $product = 0;\n    my @list = @$list1;\n    for($i = 0; $i < scalar(@list); $i++) {\n        if($list[$i] % 2 == 0) {\n            $even = $list[$i];\n            $count = 1;\n            last;\n        }\n    }\n    for($j = 0; $j < scalar(@list); $j++) {\n        if($list[$j] % 2 != 0) {\n            $odd = $list[$j];\n            $count1 = 1;\n            last;\n        }\n    }\n    if($count == 1 && $count1 == 1) {\n        $product = $even * $odd;\n    }\n    return $product;\n}",
    "    my $even_num = 0;\n    my $odd_num = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 1;\n    for($i = 0; $i < scalar(@$list1); $i++) {\n        if($list1->[$i] % 2 == 0) {\n            $even_num = $list1->[$i];\n            last;\n        }\n    }\n    for($j = 0; $j < scalar(@$list1); $j++) {\n        if($list1->[$j] % 2 != 0) {\n            $odd_num = $list1->[$j];\n            last;\n        }\n    }\n    $product = $even_num * $odd_num;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $mul = 0;\n    for($i = 0; $i < scalar(@$list1); $i++) {\n        if($list1->[$i] % 2 == 0) {\n            $even = $list1->[$i];\n            last;\n        }\n    }\n    for($j = 0; $j < scalar(@$list1); $j++) {\n        if($list1->[$j] % 2 != 0) {\n            $odd = $list1->[$j];\n            last;\n        }\n    }\n    $mul = $even * $odd;\n    return $mul;\n}",
    "    my $even_num = 0;\n    my $odd_num = 0;\n    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    my $flag1 = 0;\n    my $product = 0;\n    foreach my $num (@$list1) {\n        if ($num % 2 == 0) {\n            $even_num = $num;\n            $flag = 1;\n            last;\n        }\n    }\n    foreach my $num (@$list1) {\n        if ($num % 2 != 0) {\n            $odd_num = $num;\n            $flag1 = 1;\n            last;\n        }\n    }\n    if ($flag == 1 && $flag1 == 1) {\n        $product = $even_num * $odd_num;\n    }\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    my $flag1 = 0;\n    my $product = 0;\n    for($i = 0; $i < scalar(@$list1); $i++) {\n        if($flag == 0) {\n            if($list1->[$i] % 2 == 0) {\n                $even = $list1->[$i];\n                $flag = 1;\n            }\n        }\n        if($flag1 == 0) {\n            if($list1->[$i] % 2 != 0) {\n                $odd = $list1->[$i];\n                $flag1 = 1;\n            }\n        }\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 0;\n    my @list = @$list1;\n    while($i < scalar(@list)) {\n        if($list[$i] % 2 == 0) {\n            $even = $list[$i];\n            $i++;\n            last;\n        }\n        $i++;\n    }\n    while($j < scalar(@list)) {\n        if($list[$j] % 2 != 0) {\n            $odd = $list[$j];\n            $j++;\n            last;\n        }\n        $j++;\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even_num = 0;\n    my $odd_num = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 0;\n    for($i = 0; $i < scalar(@$list1); $i++) {\n        if($$list1[$i] % 2 == 0) {\n            $even_num = $$list1[$i];\n            last;\n        }\n    }\n    for($j = 0; $j < scalar(@$list1); $j++) {\n        if($$list1[$j] % 2 != 0) {\n            $odd_num = $$list1[$j];\n            last;\n        }\n    }\n    $product = $even_num * $odd_num;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 0;\n    my @list = @$list1;\n    for($i = 0; $i < scalar(@list); $i++) {\n        if($list[$i] % 2 == 0) {\n            $even = $list[$i];\n            last;\n        }\n    }\n    for($j = 0; $j < scalar(@list); $j++) {\n        if($list[$j] % 2 != 0) {\n            $odd = $list[$j];\n            last;\n        }\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    foreach my $num (@$list1) {\n        if ($i == 0) {\n            $even = $num;\n        }\n        elsif ($i == 1) {\n            $odd = $num;\n            last;\n        }\n        $i++;\n    }\n    return $even * $odd;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $product = 0;\n    foreach my $i (@$list1) {\n        if ($i % 2 == 0) {\n            $even = $i;\n            last;\n        }\n    }\n    foreach my $i (@$list1) {\n        if ($i % 2 != 0) {\n            $odd = $i;\n            last;\n        }\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $count = 0;\n    foreach my $num (@$list1) {\n        if ($num % 2 == 0) {\n            $even = $num;\n            $count++;\n            last;\n        }\n    }\n    foreach my $num (@$list1) {\n        if ($num % 2 != 0) {\n            $odd = $num;\n            $count++;\n            last;\n        }\n    }\n    if ($count == 2) {\n        return $even * $odd;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 1;\n    foreach my $num (@$list1) {\n        if ($num % 2 == 0) {\n            $even = $num;\n            $i = 1;\n            last;\n        }\n    }\n    foreach my $num (@$list1) {\n        if ($num % 2 != 0) {\n            $odd = $num;\n            $j = 1;\n            last;\n        }\n    }\n    if ($i == 1 && $j == 1) {\n        $product = $even * $odd;\n    }\n    return $product;\n}",
    "    my($even,$odd);\n    $even = $odd = 1;\n    foreach my $i (@$list1) {\n        if($i % 2 == 0) {\n            $even *= $i;\n        }\n        else {\n            $odd *= $i;\n        }\n    }\n    return $even * $odd;\n}",
    "    my @list = @$list1;\n    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    while ($even == 0 || $odd == 0) {\n        if ($list[$i] % 2 == 0) {\n            $even = $list[$i];\n        }\n        else {\n            $odd = $list[$i];\n        }\n        $i++;\n    }\n    return $even * $odd;\n}",
    "    my $even_num = 0;\n    my $odd_num = 0;\n    my $even_flag = 0;\n    my $odd_flag = 0;\n    foreach my $num (@$list1) {\n        if($num % 2 == 0) {\n            if($even_flag == 0) {\n                $even_num = $num;\n                $even_flag = 1;\n            }\n        }\n        else {\n            if($odd_flag == 0) {\n                $odd_num = $num;\n                $odd_flag = 1;\n            }\n        }\n        if($even_flag == 1 && $odd_flag == 1) {\n            last;\n        }\n    }\n    return $even_num * $odd_num;\n}",
    "    my $even_num = 0;\n    my $odd_num = 0;\n    my $product = 0;\n    my $i = 0;\n    foreach my $num (@$list1) {\n        if ($i == 0) {\n            if ($num % 2 == 0) {\n                $even_num = $num;\n                $i++;\n            }\n            else {\n                $odd_num = $num;\n                $i++;\n            }\n        }\n        elsif ($i == 1) {\n            if ($num % 2 == 0) {\n                $even_num = $num;\n            }\n            else {\n                $odd_num = $num;\n            }\n            last;\n        }\n    }\n    $product = $even_num * $odd_num;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $count = 0;\n    my $prod = 1;\n    foreach my $num (@$list1) {\n        if ($count == 0) {\n            $even = $num;\n            $count++;\n        } elsif ($count == 1) {\n            $odd = $num;\n            $count++;\n        }\n        if ($count == 2) {\n            $prod = $even * $odd;\n            last;\n        }\n    }\n    return $prod;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $product = 0;\n    my $i = 0;\n    foreach my $num (@$list1) {\n        if($num % 2 == 0) {\n            $even = $num;\n            $i++;\n            last;\n        }\n    }\n    foreach my $num (@$list1) {\n        if($num % 2 != 0) {\n            $odd = $num;\n            $i++;\n            last;\n        }\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $count = 0;\n    foreach my $i (@$list1) {\n        if ($i % 2 == 0) {\n            if ($count == 0) {\n                $even = $i;\n                $count++;\n            }\n        }\n        else {\n            if ($count == 1) {\n                $odd = $i;\n                $count++;\n            }\n        }\n    }\n    return $even * $odd;\n}",
    "    my $even_num = 0;\n    my $odd_num = 0;\n    my $i = 0;\n    my $j = 0;\n    my $count = 0;\n    my $product = 0;\n    my $flag = 0;\n    my $flag1 = 0;\n    for($i = 0; $i <= $#$list1; $i++) {\n        if($list1->[$i] % 2 == 0) {\n            $even_num = $list1->[$i];\n            $flag = 1;\n            last;\n        }\n    }\n    for($j = 0; $j <= $#$list1; $j++) {\n        if($list1->[$j] % 2 != 0) {\n            $odd_num = $list1->[$j];\n            $flag1 = 1;\n            last;\n        }\n    }\n    if($flag == 1 && $flag1 == 1) {\n        $product = $even_num * $odd_num;\n    }\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $mul = 0;\n    my $count = 0;\n    my $count1 = 0;\n    my $size = scalar @$list1;\n    for($i = 0; $i < $size; $i++) {\n        if(@$list1[$i] % 2 == 0) {\n            $even = @$list1[$i];\n            $count++;\n            last;\n        }\n    }\n    for($j = 0; $j < $size; $j++) {\n        if(@$list1[$j] % 2 != 0) {\n            $odd = @$list1[$j];\n            $count1++;\n            last;\n        }\n    }\n    if($count == 0 || $count1 == 0) {\n        print \"There is no even or odd number in the list\\n\";\n    } else {\n        $mul = $even * $odd;\n        print \"The product of first even and odd number is: $mul\\n\";\n    }\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    foreach my $num (@$list1) {\n        if($i == 0) {\n            $even = $num;\n        }\n        elsif($i == 1) {\n            $odd = $num;\n            last;\n        }\n        $i++;\n    }\n    return $even * $odd;\n}",
    "    my $even_num = 0;\n    my $odd_num = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 0;\n    foreach my $num (@$list1) {\n        if ($num % 2 == 0) {\n            $even_num = $num;\n            $i++;\n            if ($i == 1) {\n                last;\n            }\n        }\n    }\n    foreach my $num (@$list1) {\n        if ($num % 2 != 0) {\n            $odd_num = $num;\n            $j++;\n            if ($j == 1) {\n                last;\n            }\n        }\n    }\n    $product = $even_num * $odd_num;\n    return $product;\n}",
    "    my $even_num = 0;\n    my $odd_num = 0;\n    my $i = 0;\n    while($i < @$list1) {\n        if($list1->[$i] % 2 == 0) {\n            $even_num = $list1->[$i];\n            last;\n        }\n        $i++;\n    }\n    $i = 0;\n    while($i < @$list1) {\n        if($list1->[$i] % 2 != 0) {\n            $odd_num = $list1->[$i];\n            last;\n        }\n        $i++;\n    }\n    return $even_num * $odd_num;\n}",
    "    my $even_num = 0;\n    my $odd_num = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 0;\n    my $size = @$list1;\n    for($i = 0; $i < $size; $i++) {\n        if($$list1[$i] % 2 == 0) {\n            $even_num = $$list1[$i];\n            last;\n        }\n    }\n    for($j = 0; $j < $size; $j++) {\n        if($$list1[$j] % 2 != 0) {\n            $odd_num = $$list1[$j];\n            last;\n        }\n    }\n    $product = $even_num * $odd_num;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $count = 0;\n    my $product = 0;\n    foreach my $i (@$list1) {\n        if ($count == 0) {\n            $even = $i;\n            $count++;\n        }\n        elsif ($count == 1) {\n            $odd = $i;\n            $count++;\n        }\n        else {\n            $count++;\n        }\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 0;\n    my $size = @$list1;\n    for($i = 0; $i < $size; $i++) {\n        if($$list1[$i] % 2 == 0) {\n            $even = $$list1[$i];\n            last;\n        }\n    }\n    for($j = 0; $j < $size; $j++) {\n        if($$list1[$j] % 2 != 0) {\n            $odd = $$list1[$j];\n            last;\n        }\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $count = 0;\n    foreach my $num (@$list1) {\n        if ($count == 0) {\n            $even = $num;\n        }\n        if ($count == 1) {\n            $odd = $num;\n        }\n        $count++;\n    }\n    return $even * $odd;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $count = 0;\n    my $count1 = 0;\n    my $product = 0;\n    my $size = scalar(@$list1);\n    for($i = 0; $i < $size; $i++) {\n        if(($list1->[$i] % 2) == 0) {\n            $even = $list1->[$i];\n            $count++;\n            last;\n        }\n    }\n    for($j = 0; $j < $size; $j++) {\n        if(($list1->[$j] % 2) != 0) {\n            $odd = $list1->[$j];\n            $count1++;\n            last;\n        }\n    }\n    if(($count == 0) || ($count1 == 0)) {\n        print \"There is no even or odd number in the list\\n\";\n    }\n    else {\n        $product = $even * $odd;\n        print \"The product of first even and odd number is $product\\n\";\n    }\n}",
    "    my $even_num = 0;\n    my $odd_num = 0;\n    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    my $flag1 = 0;\n    my $product = 0;\n    for($i = 0; $i < scalar(@$list1); $i++) {\n        if($list1->[$i] % 2 == 0) {\n            $even_num = $list1->[$i];\n            $flag = 1;\n            last;\n        }\n    }\n    for($j = 0; $j < scalar(@$list1); $j++) {\n        if($list1->[$j] % 2 != 0) {\n            $odd_num = $list1->[$j];\n            $flag1 = 1;\n            last;\n        }\n    }\n    if($flag == 1 && $flag1 == 1) {\n        $product = $even_num * $odd_num;\n    }\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 0;\n    foreach my $num (@$list1) {\n        if ($num % 2 == 0) {\n            $even = $num;\n            $i++;\n            last;\n        }\n    }\n    foreach my $num (@$list1) {\n        if ($num % 2 != 0) {\n            $odd = $num;\n            $j++;\n            last;\n        }\n    }\n    if ($i == 0 || $j == 0) {\n        return 0;\n    }\n    else {\n        $product = $even * $odd;\n        return $product;\n    }\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 0;\n    my $flag = 0;\n    my $flag1 = 0;\n    my $size = scalar(@$list1);\n    while($i < $size) {\n        if(@$list1[$i] % 2 == 0) {\n            $even = @$list1[$i];\n            $flag = 1;\n            last;\n        }\n        $i++;\n    }\n    while($j < $size) {\n        if(@$list1[$j] % 2 != 0) {\n            $odd = @$list1[$j];\n            $flag1 = 1;\n            last;\n        }\n        $j++;\n    }\n    if($flag == 1 && $flag1 == 1) {\n        $product = $even * $odd;\n    }\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $count = 0;\n    my $product = 0;\n    foreach my $i (@$list1) {\n        if ($i % 2 == 0) {\n            $even = $i;\n            $count++;\n        }\n        elsif ($i % 2 != 0) {\n            $odd = $i;\n            $count++;\n        }\n        if ($count == 2) {\n            $product = $even * $odd;\n            last;\n        }\n    }\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    my $flag1 = 0;\n    my $product = 0;\n    for($i=0;$i<=$#{$list1};$i++) {\n        if($list1->[$i] % 2 == 0) {\n            $even = $list1->[$i];\n            $flag = 1;\n            last;\n        }\n    }\n    for($j=0;$j<=$#{$list1};$j++) {\n        if($list1->[$j] % 2 != 0) {\n            $odd = $list1->[$j];\n            $flag1 = 1;\n            last;\n        }\n    }\n    if($flag == 1 && $flag1 == 1) {\n        $product = $even * $odd;\n    }\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $count = 0;\n    my $product = 0;\n    foreach my $num (@$list1) {\n        if ($num % 2 == 0) {\n            $even = $num;\n            $count++;\n        }\n        if ($num % 2 != 0) {\n            $odd = $num;\n            $count++;\n        }\n        if ($count == 2) {\n            $product = $even * $odd;\n            last;\n        }\n    }\n    return $product;\n}",
    "    my $even_num = 0;\n    my $odd_num = 0;\n    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    my $flag1 = 0;\n    foreach my $num (@$list1) {\n        if ($num % 2 == 0) {\n            if ($flag == 0) {\n                $even_num = $num;\n                $flag = 1;\n            }\n        }\n        else {\n            if ($flag1 == 0) {\n                $odd_num = $num;\n                $flag1 = 1;\n            }\n        }\n    }\n    return $even_num * $odd_num;\n}",
    "    my @list = @$list1;\n    my $even = 0;\n    my $odd = 0;\n    my $product = 0;\n    for(my $i = 0; $i < scalar(@list); $i++) {\n        if($list[$i] % 2 == 0) {\n            $even = $list[$i];\n            last;\n        }\n    }\n    for(my $i = 0; $i < scalar(@list); $i++) {\n        if($list[$i] % 2 != 0) {\n            $odd = $list[$i];\n            last;\n        }\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 1;\n    my $flag = 0;\n    my $flag1 = 0;\n    foreach my $i (@$list1) {\n        if ($i % 2 == 0) {\n            $even = $i;\n            $flag = 1;\n            last;\n        }\n    }\n    foreach my $j (@$list1) {\n        if ($j % 2 != 0) {\n            $odd = $j;\n            $flag1 = 1;\n            last;\n        }\n    }\n    if ($flag == 1 && $flag1 == 1) {\n        $product = $even * $odd;\n    }\n    else {\n        $product = 0;\n    }\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    my $flag1 = 0;\n    my $product = 0;\n    for($i = 0; $i < scalar(@$list1); $i++) {\n        if($list1->[$i] % 2 == 0) {\n            $even = $list1->[$i];\n            $flag = 1;\n            last;\n        }\n    }\n    for($j = 0; $j < scalar(@$list1); $j++) {\n        if($list1->[$j] % 2 != 0) {\n            $odd = $list1->[$j];\n            $flag1 = 1;\n            last;\n        }\n    }\n    if($flag == 1 && $flag1 == 1) {\n        $product = $even * $odd;\n    }\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $count = 0;\n    my $count1 = 0;\n    my $product = 0;\n    my $size = scalar(@$list1);\n    for($i = 0; $i < $size; $i++) {\n        if(@$list1[$i] % 2 == 0) {\n            $even = @$list1[$i];\n            $count = 1;\n            last;\n        }\n    }\n    for($j = 0; $j < $size; $j++) {\n        if(@$list1[$j] % 2 != 0) {\n            $odd = @$list1[$j];\n            $count1 = 1;\n            last;\n        }\n    }\n    if($count == 1 && $count1 == 1) {\n        $product = $even * $odd;\n        return $product;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 0;\n    foreach $i (@$list1) {\n        if($i % 2 == 0) {\n            $even = $i;\n            last;\n        }\n    }\n    foreach $j (@$list1) {\n        if($j % 2 != 0) {\n            $odd = $j;\n            last;\n        }\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $count = 0;\n    my $product = 1;\n    foreach my $num (@$list1) {\n        if ($count == 0) {\n            $even = $num;\n            $count++;\n        }\n        elsif ($count == 1) {\n            $odd = $num;\n            $count++;\n        }\n        else {\n            last;\n        }\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 0;\n    my $size = @$list1;\n    for($i=0;$i<$size;$i++) {\n        if(@$list1[$i]%2 == 0) {\n            $even = @$list1[$i];\n            last;\n        }\n    }\n    for($j=$size-1;$j>=0;$j--) {\n        if(@$list1[$j]%2 != 0) {\n            $odd = @$list1[$j];\n            last;\n        }\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $mul = 0;\n    for($i = 0; $i < scalar(@$list1); $i++) {\n        if(@$list1[$i] % 2 == 0) {\n            $even = @$list1[$i];\n            last;\n        }\n    }\n    for($j = 0; $j < scalar(@$list1); $j++) {\n        if(@$list1[$j] % 2 != 0) {\n            $odd = @$list1[$j];\n            last;\n        }\n    }\n    $mul = $even * $odd;\n    return $mul;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $mul = 0;\n    my @list = @$list1;\n    for($i = 0; $i < @list; $i++) {\n        if($list[$i] % 2 == 0) {\n            $even = $list[$i];\n            last;\n        }\n    }\n    for($j = 0; $j < @list; $j++) {\n        if($list[$j] % 2 != 0) {\n            $odd = $list[$j];\n            last;\n        }\n    }\n    $mul = $even * $odd;\n    return $mul;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $count = 0;\n    my $prod = 0;\n    foreach my $i (@$list1) {\n        if ($count == 0) {\n            $even = $i;\n            $count++;\n        }\n        elsif ($count == 1) {\n            $odd = $i;\n            $count++;\n        }\n        else {\n            $count++;\n        }\n    }\n    $prod = $even * $odd;\n    return $prod;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    foreach my $num(@$list1) {\n        if ($i == 0) {\n            $even = $num;\n        }\n        if ($i == 1) {\n            $odd = $num;\n            last;\n        }\n        $i++;\n    }\n    return $even * $odd;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $count = 0;\n    foreach my $num (@$list1) {\n        if ($count == 0) {\n            $even = $num;\n            $count++;\n        }\n        elsif ($count == 1) {\n            $odd = $num;\n            $count++;\n        }\n        else {\n            last;\n        }\n    }\n    return $even * $odd;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $prod = 0;\n    for($i = 0; $i < scalar(@$list1); $i++) {\n        if($list1->[$i] % 2 == 0) {\n            $even = $list1->[$i];\n            last;\n        }\n    }\n    for($j = 0; $j < scalar(@$list1); $j++) {\n        if($list1->[$j] % 2 != 0) {\n            $odd = $list1->[$j];\n            last;\n        }\n    }\n    $prod = $even * $odd;\n    return $prod;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 0;\n    for($i = 0; $i <= $#$list1; $i++) {\n        if($list1->[$i] % 2 == 0) {\n            $even = $list1->[$i];\n            last;\n        }\n    }\n    for($j = 0; $j <= $#$list1; $j++) {\n        if($list1->[$j] % 2 != 0) {\n            $odd = $list1->[$j];\n            last;\n        }\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even_num = 0;\n    my $odd_num = 0;\n    my $i = 0;\n    my $j = 0;\n    my $count = 0;\n    my $count1 = 0;\n    my $product = 1;\n    my $product1 = 1;\n    my $size = scalar @$list1;\n    for($i=0;$i<$size;$i++) {\n        if(@$list1[$i] % 2 == 0) {\n            $even_num = @$list1[$i];\n            $count++;\n            last;\n        }\n    }\n    for($j=$i+1;$j<$size;$j++) {\n        if(@$list1[$j] % 2 != 0) {\n            $odd_num = @$list1[$j];\n            $count1++;\n            last;\n        }\n    }\n    if($count == 1 && $count1 == 1) {\n        $product = $even_num * $odd_num;\n    }\n    else {\n        $product1 = 0;\n    }\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    while($i < scalar(@$list1)) {\n        if($list1->[$i] % 2 == 0) {\n            $even = $list1->[$i];\n            last;\n        }\n        $i++;\n    }\n    $i = 0;\n    while($i < scalar(@$list1)) {\n        if($list1->[$i] % 2 != 0) {\n            $odd = $list1->[$i];\n            last;\n        }\n        $i++;\n    }\n    return $even * $odd;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $count = 0;\n    my $product = 1;\n    foreach my $i (@$list1) {\n        if ($i % 2 == 0) {\n            if ($count == 0) {\n                $even = $i;\n                $count++;\n            }\n        }\n        else {\n            if ($count == 1) {\n                $odd = $i;\n                $count++;\n            }\n        }\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $count = 0;\n    foreach my $i (@$list1) {\n        if($i % 2 == 0) {\n            $even = $i;\n            $count++;\n            last;\n        }\n    }\n    foreach my $i (@$list1) {\n        if($i % 2 != 0) {\n            $odd = $i;\n            $count++;\n            last;\n        }\n    }\n    if($count == 2) {\n        return $even * $odd;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 0;\n    foreach my $num (@$list1) {\n        if ($num % 2 == 0) {\n            $even = $num;\n            $i++;\n            last;\n        }\n    }\n    foreach my $num (@$list1) {\n        if ($num % 2 != 0) {\n            $odd = $num;\n            $j++;\n            last;\n        }\n    }\n    if ($i == 0 || $j == 0) {\n        print \"Either even or odd number is not present in the array\\n\";\n    }\n    else {\n        $product = $even * $odd;\n        print \"Product of first even and odd number is: $product\\n\";\n    }\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 0;\n    my $size = scalar @$list1;\n    while($i < $size) {\n        if($$list1[$i] % 2 == 0) {\n            $even = $$list1[$i];\n            $i++;\n            last;\n        }\n        $i++;\n    }\n    while($j < $size) {\n        if($$list1[$j] % 2 != 0) {\n            $odd = $$list1[$j];\n            $j++;\n            last;\n        }\n        $j++;\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my @list = @$list1;\n    my $even_num = 0;\n    my $odd_num = 0;\n    my $product = 0;\n    for(my $i = 0; $i <= $#list; $i++) {\n        if($list[$i] % 2 == 0) {\n            $even_num = $list[$i];\n            last;\n        }\n    }\n    for(my $i = 0; $i <= $#list; $i++) {\n        if($list[$i] % 2 != 0) {\n            $odd_num = $list[$i];\n            last;\n        }\n    }\n    $product = $even_num * $odd_num;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $flag = 0;\n    my $flag1 = 0;\n    my $product = 0;\n    foreach my $i (@$list1) {\n        if($i % 2 == 0 && $flag == 0) {\n            $even = $i;\n            $flag = 1;\n        }\n        if($i % 2 != 0 && $flag1 == 0) {\n            $odd = $i;\n            $flag1 = 1;\n        }\n        if($flag == 1 && $flag1 == 1) {\n            $product = $even * $odd;\n            last;\n        }\n    }\n    return $product;\n}",
    "    my $even_num = 0;\n    my $odd_num = 0;\n    my $product = 0;\n    foreach my $num (@$list1) {\n        if ($num % 2 == 0) {\n            $even_num = $num;\n            last;\n        }\n    }\n    foreach my $num (@$list1) {\n        if ($num % 2 != 0) {\n            $odd_num = $num;\n            last;\n        }\n    }\n    $product = $even_num * $odd_num;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 0;\n    foreach my $num (@$list1) {\n        if ($num % 2 == 0) {\n            $even = $num;\n            $i++;\n        }\n        if ($num % 2 != 0) {\n            $odd = $num;\n            $j++;\n        }\n        if ($i == 1 && $j == 1) {\n            $product = $even * $odd;\n            last;\n        }\n    }\n    return $product;\n}",
    "    my $even_num = 0;\n    my $odd_num = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 0;\n    foreach my $i (@$list1) {\n        if ($i % 2 == 0) {\n            $even_num = $i;\n            last;\n        }\n    }\n    foreach my $j (@$list1) {\n        if ($j % 2 != 0) {\n            $odd_num = $j;\n            last;\n        }\n    }\n    $product = $even_num * $odd_num;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $count = 0;\n    my $product = 1;\n    foreach my $num (@$list1) {\n        if ($count == 0) {\n            $even = $num;\n            $count++;\n        }\n        elsif ($count == 1) {\n            $odd = $num;\n            $count++;\n        }\n        else {\n            $count++;\n        }\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $count = 0;\n    my $product = 1;\n    foreach my $i (@$list1) {\n        if ($i % 2 == 0) {\n            $even = $i;\n            $count++;\n            last;\n        }\n    }\n    foreach my $i (@$list1) {\n        if ($i % 2 != 0) {\n            $odd = $i;\n            $count++;\n            last;\n        }\n    }\n    if ($count == 2) {\n        $product = $even * $odd;\n    }\n    return $product;\n}",
    "    my $even_num = 0;\n    my $odd_num = 0;\n    my $count = 0;\n    my $product = 0;\n    foreach my $num (@$list1) {\n        if ($num % 2 == 0) {\n            $even_num = $num;\n            $count++;\n            last;\n        }\n    }\n    foreach my $num (@$list1) {\n        if ($num % 2 != 0) {\n            $odd_num = $num;\n            $count++;\n            last;\n        }\n    }\n    if ($count == 2) {\n        $product = $even_num * $odd_num;\n    }\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $count = 0;\n    foreach my $i (@$list1) {\n        if ($i % 2 == 0) {\n            $even = $i;\n            $count++;\n            last;\n        }\n    }\n    foreach my $i (@$list1) {\n        if ($i % 2 != 0) {\n            $odd = $i;\n            $count++;\n            last;\n        }\n    }\n    if ($count == 2) {\n        return $even * $odd;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 0;\n    my $size = scalar(@$list1);\n    while($i < $size) {\n        if(@$list1[$i] % 2 == 0) {\n            $even = @$list1[$i];\n            $i++;\n            last;\n        }\n        $i++;\n    }\n    while($j < $size) {\n        if(@$list1[$j] % 2 != 0) {\n            $odd = @$list1[$j];\n            $j++;\n            last;\n        }\n        $j++;\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $count = 0;\n    foreach my $num (@$list1) {\n        if ($count == 0) {\n            $even = $num;\n            $count++;\n        }\n        elsif ($count == 1) {\n            $odd = $num;\n            $count++;\n        }\n        else {\n            last;\n        }\n    }\n    return $even * $odd;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $i = 0;\n    my $j = 0;\n    my $product = 1;\n    my $size = scalar(@$list1);\n    while($i < $size && $j < $size) {\n        if($list1->[$i] % 2 == 0) {\n            $even = $list1->[$i];\n            $i++;\n            last;\n        }\n        $i++;\n    }\n    while($j < $size && $i < $size) {\n        if($list1->[$j] % 2 != 0) {\n            $odd = $list1->[$j];\n            $j++;\n            last;\n        }\n        $j++;\n    }\n    $product = $even * $odd;\n    return $product;\n}",
    "    my $even = 0;\n    my $odd = 0;\n    my $count = 0;\n    my $product = 0;\n    foreach my $i (@$list1) {\n        if ($count == 0) {\n            $even = $i;\n            $count++;\n        }\n        elsif ($count == 1) {\n            $odd = $i;\n            $count++;\n        }\n        $product = $even * $odd;\n    }\n    return $product;\n}"
  ]
}
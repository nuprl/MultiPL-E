{
  "name": "mbpp_305_start_withp",
  "language": "pl",
  "prompt": "# Write a function to return two words from an array of words starting with letter 'p'.\nsub start_withp {\n    my($words) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_305_start_withp.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&start_withp;\n        if(eq_deeply($candidate->([\"Python PHP\", \"Java JavaScript\", \"c c++\"]),[\"Python\", \"PHP\"])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([\"Python Programming\", \"Java Programming\"]),[\"Python\", \"Programming\"])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([\"Pqrst Pqr\", \"qrstuv\"]),[\"Pqrst\", \"Pqr\"])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords;\n    foreach my $word (@$words) {\n        if ($word =~ /^p/) {\n            push @pwords, $word;\n        }\n    }\n    return @pwords;\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @words_with_p = grep { /^p/i } @$words;\n    return @words_with_p[0,1];\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @p_words = grep { /^p/i } @$words;\n    return @p_words[0,1];\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords = grep {/^p/i} @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords = grep {/^p/i} @$words;\n    return @pwords[0..1];\n}",
    "    my @p_words = grep { /^p/i } @$words;\n    return @p_words[0,1];\n}",
    "    my @result = grep { /^p/i } @$words;\n    return @result;\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return \\@pwords;\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @p_words = grep { /^p/i } @$words;\n    return @p_words[0,1];\n}",
    "    my @result = ();\n    foreach my $word (@$words) {\n        if ($word =~ /^p/) {\n            push @result, $word;\n        }\n    }\n    return @result;\n}",
    "    my @result = grep { /^p/i } @$words;\n    return @result;\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords;\n}",
    "    my @pwords;\n    for my $word (@$words) {\n        if ($word =~ /^p/) {\n            push @pwords, $word;\n        }\n    }\n    return @pwords;\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @p_words = grep { /^p/i } @$words;\n    return @p_words[0,1];\n}",
    "    my @p_words = grep {/^p/i} @$words;\n    return @p_words[0,1];\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @p_words = ();\n    foreach my $word (@$words) {\n        if ($word =~ /^p/) {\n            push @p_words, $word;\n        }\n    }\n    return @p_words;\n}",
    "    my @pwords = grep(/^p/, @$words);\n    return @pwords[0,1];\n}",
    "    my @pwords = grep /^p/, @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords = grep {/^p/i} @$words;\n    return @pwords;\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords;\n    foreach my $word (@$words) {\n        if ($word =~ /^p/i) {\n            push @pwords, $word;\n        }\n    }\n    return @pwords;\n}",
    "    my @result;\n    foreach my $word (@$words) {\n        if ($word =~ /^p/) {\n            push @result, $word;\n        }\n    }\n    return @result;\n}",
    "    my @result = grep { /^p/i } @$words;\n    return @result;\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @result;\n    foreach my $word (@$words) {\n        if ($word =~ /^p/) {\n            push @result, $word;\n        }\n    }\n    return @result;\n}",
    "    my @pwords = grep {/^p/i} @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @words = @$words;\n    my @pwords;\n    foreach my $word (@words) {\n        if ($word =~ /^p/) {\n            push @pwords, $word;\n        }\n    }\n    return @pwords;\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords = grep {/^p/i} @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @result = grep {/^p/i} @$words;\n    return @result;\n}",
    "    my @pwords;\n    foreach my $word (@$words) {\n        if ($word =~ /^p/) {\n            push @pwords, $word;\n        }\n    }\n    return @pwords;\n}",
    "    my @p_words = grep { /^p/i } @$words;\n    return @p_words[0,1];\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords = grep {/^p/i} @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @result = ();\n    foreach my $word (@$words) {\n        if ($word =~ /^p/) {\n            push @result, $word;\n        }\n    }\n    return @result;\n}",
    "    my @p_words = grep { /^p/i } @$words;\n    return @p_words[0,1];\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0..1];\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @words = @$words;\n    my @result;\n    foreach my $word (@words) {\n        if ($word =~ /^p/) {\n            push @result, $word;\n        }\n    }\n    return @result;\n}",
    "    my @pwords = grep {/^p/i} @$words;\n    return @pwords[0..1];\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return \\@pwords;\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return \\@pwords;\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @result = ();\n    foreach my $word (@$words) {\n        if ($word =~ /^p/) {\n            push @result, $word;\n        }\n    }\n    return \\@result;\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords;\n    foreach my $word (@$words) {\n        if ($word =~ /^p/) {\n            push @pwords, $word;\n        }\n    }\n    return @pwords;\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords;\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords = grep {/^p/i} @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @result;\n    foreach my $word (@$words) {\n        if ($word =~ /^p/) {\n            push @result, $word;\n        }\n    }\n    return @result;\n}",
    "    my @result = grep { /^p/i } @$words;\n    return @result;\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords;\n    foreach my $word (@$words) {\n        if ($word =~ /^p/) {\n            push @pwords, $word;\n        }\n    }\n    return @pwords;\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords = grep(/^p/, @$words);\n    return @pwords[0,1];\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0, 1];\n}",
    "    my @pwords = grep /^p/, @$words;\n    return @pwords[0,1];\n}",
    "    my @words = @$words;\n    my @pwords;\n    foreach my $word (@words) {\n        if ($word =~ /^p/) {\n            push @pwords, $word;\n        }\n    }\n    return @pwords;\n}",
    "    my @result;\n    foreach my $word (@$words) {\n        if ($word =~ /^p/) {\n            push @result, $word;\n        }\n    }\n    return @result;\n}",
    "    my @result = grep { /^p/i } @$words;\n    return \\@result;\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords = grep {/^p/i} @$words;\n    return @pwords;\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @result = ();\n    foreach my $word (@$words) {\n        if ($word =~ /^p/) {\n            push @result, $word;\n        }\n    }\n    return @result;\n}",
    "    my @result = grep { /^p/i } @$words;\n    return @result;\n}",
    "    my @pwords = grep {/^p/i} @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @result = grep {/^p/i} @$words;\n    return @result[0,1];\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return \\@pwords;\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @result = ();\n    foreach my $word (@$words) {\n        if ($word =~ /^p/) {\n            push @result, $word;\n        }\n    }\n    return @result;\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords;\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords;\n    foreach my $word (@$words) {\n        if ($word =~ /^p/) {\n            push @pwords, $word;\n        }\n    }\n    return @pwords;\n}",
    "    my @words_with_p = grep { /^p/i } @$words;\n    return @words_with_p[0,1];\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords = grep /^p/, @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords = grep {/^p/i} @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @result = ();\n    foreach my $word (@$words) {\n        if ($word =~ /^p/) {\n            push @result, $word;\n        }\n    }\n    return @result;\n}",
    "    my @pwords;\n    foreach my $word (@$words) {\n        if ($word =~ /^p/) {\n            push @pwords, $word;\n        }\n    }\n    return @pwords;\n}",
    "    my @result = ();\n    foreach my $word (@$words) {\n        if ($word =~ /^p/) {\n            push @result, $word;\n        }\n    }\n    return @result;\n}",
    "    my @pwords = grep {/^p/i} @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @result;\n    foreach my $word (@$words) {\n        if ($word =~ /^p/) {\n            push @result, $word;\n        }\n    }\n    return @result;\n}",
    "    my @result;\n    foreach my $word (@$words) {\n        if ($word =~ /^p/) {\n            push @result, $word;\n        }\n    }\n    return @result;\n}",
    "    my @pwords;\n    foreach my $word (@$words) {\n        if ($word =~ /^p/) {\n            push(@pwords, $word);\n        }\n    }\n    return @pwords;\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords;\n}",
    "    my @result;\n    foreach my $word (@$words) {\n        if ($word =~ /^p/) {\n            push @result, $word;\n            last if @result == 2;\n        }\n    }\n    return @result;\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords = grep {/^p/i} @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords = grep {/^p/i} @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords = grep /^p/, @$words;\n    return @pwords[0,1];\n}",
    "    my @result = ();\n    foreach my $word (@$words) {\n        if ($word =~ /^p/) {\n            push @result, $word;\n        }\n    }\n    return @result;\n}",
    "    my @pwords;\n    foreach my $word (@$words) {\n        if ($word =~ /^p/) {\n            push @pwords, $word;\n        }\n    }\n    return @pwords;\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @p_words = grep { /^p/i } @$words;\n    return @p_words[0,1];\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @result = grep { /^p/i } @$words;\n    return @result;\n}",
    "    my @p_words = grep { /^p/i } @$words;\n    return @p_words[0,1];\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords = grep { /^p/ } @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords;\n}",
    "    my @result = ();\n    foreach my $word (@$words) {\n        if ($word =~ /^p/) {\n            push @result, $word;\n        }\n    }\n    return @result;\n}",
    "    my @result = ();\n    foreach my $word (@$words) {\n        if ($word =~ /^p/) {\n            push @result, $word;\n        }\n    }\n    return @result;\n}",
    "    return grep { /^p/i } @$words;\n}",
    "    my @result = ();\n    foreach my $word (@$words) {\n        if ($word =~ /^p/) {\n            push @result, $word;\n        }\n    }\n    return @result;\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @result = ();\n    foreach my $word (@$words) {\n        if ($word =~ /^p/) {\n            push @result, $word;\n        }\n    }\n    return @result;\n}",
    "    my @pwords;\n    foreach my $word (@$words) {\n        if ($word =~ /^p/) {\n            push @pwords, $word;\n        }\n    }\n    return @pwords;\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords = grep {/^p/i} @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords = grep {/^p/i} @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords;\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords = grep {/^p/i} @$words;\n    return @pwords;\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords;\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords;\n}",
    "    my @words_with_p = grep {/^p/i} @$words;\n    return @words_with_p[0,1];\n}",
    "    my @result = grep { /^p/i } @$words;\n    return @result[0,1];\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @words = grep { /^p/i } @$words;\n    return @words[0,1];\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords;\n    foreach my $word (@$words) {\n        if ($word =~ /^p/) {\n            push @pwords, $word;\n        }\n    }\n    return @pwords;\n}",
    "    my @words_with_p = grep { /^p/i } @$words;\n    return @words_with_p[0,1];\n}",
    "    my @p_words = grep { /^p/i } @$words;\n    return @p_words[0,1];\n}",
    "    my @p_words = grep { /^p/i } @$words;\n    return [@p_words[0,1]];\n}",
    "    my @result;\n    foreach my $word (@$words) {\n        if ($word =~ /^p/) {\n            push @result, $word;\n        }\n    }\n    return @result;\n}",
    "    my @pwords = grep {/^p/i} @$words;\n    return @pwords;\n}",
    "    my @pwords = grep {/^p/i} @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @result = ();\n    foreach my $word (@$words) {\n        if ($word =~ /^p/) {\n            push @result, $word;\n        }\n    }\n    return \\@result;\n}",
    "    my @pwords;\n    foreach my $word (@$words) {\n        if ($word =~ /^p/) {\n            push @pwords, $word;\n        }\n    }\n    return @pwords;\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @result = grep {$_ =~ /^p/i} @$words;\n    return @result;\n}",
    "    my @pwords = grep {/^p/i} @$words;\n    return @pwords[0,1];\n}",
    "    my @p_words = grep { /^p/i } @$words;\n    return @p_words[0,1];\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @result = grep { /^p/i } @$words;\n    return @result;\n}",
    "    my @pwords = grep {/^p/i} @$words;\n    return @pwords;\n}",
    "    my @pwords = grep { /^p/i } @$words;\n    return @pwords[0,1];\n}",
    "    my @pwords;\n    foreach my $word (@$words) {\n        if ($word =~ /^p/) {\n            push @pwords, $word;\n        }\n    }\n    return @pwords;\n}",
    "    my @p_words = grep { /^p/i } @$words;\n    return @p_words[0,1];\n}"
  ]
}
{
  "name": "mbpp_576_is_Sub_Array",
  "language": "pl",
  "prompt": "# Write a plthon function to check whether an array is subarray of another or not.\nsub is_Sub_Array {\n    my($A, $B) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_576_is_Sub_Array.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&is_Sub_Array;\n        if(eq_deeply($candidate->([1, 4, 3, 5], [1, 2]),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2, 1], [1, 2, 1]),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 2], [2, 2, 0]),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    while($i < $n) {\n        while($j < $m) {\n            if($A->[$i] == $B->[$j]) {\n                $flag = 1;\n                $i++;\n                $j++;\n            }\n            else {\n                $flag = 0;\n                $j++;\n            }\n        }\n    }\n    if($flag == 1) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $n = @$A;\n    my $m = @$B;\n    my $i = 0;\n    my $j = 0;\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            return 0;\n        }\n    }\n    if ($j < $m) {\n        return 0;\n    }\n    return 1;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    for (my $i = 0; $i < $n; $i++) {\n        for (my $j = 0; $j < $m; $j++) {\n            if ($A->[$i] == $B->[$j]) {\n                $i++;\n            }\n        }\n    }\n    if ($i == $n) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    my $i = 0;\n    my $j = 0;\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            return 0;\n        }\n    }\n    if ($j < $m) {\n        return 0;\n    }\n    return 1;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            return 0;\n        }\n    }\n    return ($j == $m);\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    my $n = scalar @$A;\n    my $m = scalar @$B;\n    while($i < $n){\n        if($A->[$i] == $B->[$j]){\n            $i++;\n            $j++;\n        }\n        else{\n            $i++;\n            $j = 0;\n        }\n        if($j == $m){\n            $flag = 1;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    for ( $i = 0 ; $i < $n ; $i++ ) {\n        for ( $j = 0 ; $j < $m ; $j++ ) {\n            if ( $A->[$i] == $B->[$j] ) {\n                last;\n            }\n        }\n        if ( $j == $m ) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $lenA = scalar(@$A);\n    my $lenB = scalar(@$B);\n    my $i = 0;\n    my $j = 0;\n    while ($i < $lenA && $j < $lenB) {\n        if ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == $lenB) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A->[$i] == $B->[$j]) {\n                $flag = 1;\n            }\n            else {\n                $flag = 0;\n            }\n        }\n    }\n    return $flag;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    while ($i < $n) {\n        while ($j < $m) {\n            if ($A->[$i] == $B->[$j]) {\n                $i++;\n                $j++;\n            }\n            else {\n                $j++;\n            }\n        }\n        if ($i == $n) {\n            $flag = 1;\n        }\n    }\n    return $flag;\n}",
    "    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    my $i = 0;\n    my $j = 0;\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        }\n        elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        }\n        else {\n            return 0;\n        }\n    }\n    if ($j < $m) {\n        return 0;\n    }\n    return 1;\n}",
    "    my $n = scalar @$A;\n    my $m = scalar @$B;\n    my $i = 0;\n    my $j = 0;\n    for (my $i = 0; $i < $n - $m + 1; $i++) {\n        for (my $j = 0; $j < $m; $j++) {\n            if ($A->[$i + $j] != $B->[$j]) {\n                last;\n            }\n        }\n        if ($j == $m) {\n            return 1;\n        }\n    }\n    return 0;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    my $n = scalar @$A;\n    my $m = scalar @$B;\n    while ($i < $n) {\n        while ($j < $m) {\n            if ($A->[$i] == $B->[$j]) {\n                $i++;\n                $j++;\n            }\n            else {\n                $j++;\n            }\n        }\n        if ($i == $n) {\n            $flag = 1;\n        }\n        else {\n            $i = 0;\n            $j = 0;\n        }\n    }\n    return $flag;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    while ($i < scalar(@$A)) {\n        $j = 0;\n        while ($j < scalar(@$B)) {\n            if ($A->[$i] == $B->[$j]) {\n                $i++;\n                $j++;\n                $flag = 1;\n            }\n            else {\n                $i++;\n                $flag = 0;\n            }\n        }\n    }\n    if ($flag == 1) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    for ( $i = 0; $i < $n; $i++ ) {\n        for ( $j = 0; $j < $m; $j++ ) {\n            if ( $A->[$i] == $B->[$j] ) {\n                last;\n            }\n        }\n        if ( $j == $m ) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    my $i = 0;\n    my $j = 0;\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            return 0;\n        }\n    }\n    if ($j < $m) {\n        return 0;\n    } else {\n        return 1;\n    }\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            return 0;\n        }\n    }\n    return ($j == $m);\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    while($i < $n && $j < $m) {\n        if($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        }\n        else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if($j == $m) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    my $n = scalar @$A;\n    my $m = scalar @$B;\n    while($i < $n) {\n        if($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        }\n        else {\n            $i++;\n            $j = 0;\n        }\n        if($j == $m) {\n            $flag = 1;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            return 0;\n        }\n    }\n    return ($j == $m);\n}"
  ]
}
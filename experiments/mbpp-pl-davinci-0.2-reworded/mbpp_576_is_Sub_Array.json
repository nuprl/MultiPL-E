{
  "name": "mbpp_576_is_Sub_Array",
  "language": "pl",
  "prompt": "# Write a plthon function to check whether an array is subarray of another or not.\nsub is_Sub_Array {\n    my($A, $B) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_576_is_Sub_Array.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&is_Sub_Array;\n        if(eq_deeply($candidate->([1, 4, 3, 5], [1, 2]),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2, 1], [1, 2, 1]),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 2], [2, 2, 0]),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    while($i < $n) {\n        while($j < $m) {\n            if($A->[$i] == $B->[$j]) {\n                $flag = 1;\n                $i++;\n                $j++;\n            }\n            else {\n                $flag = 0;\n                $j++;\n            }\n        }\n    }\n    if($flag == 1) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $n = @$A;\n    my $m = @$B;\n    my $i = 0;\n    my $j = 0;\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            return 0;\n        }\n    }\n    if ($j < $m) {\n        return 0;\n    }\n    return 1;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    for (my $i = 0; $i < $n; $i++) {\n        for (my $j = 0; $j < $m; $j++) {\n            if ($A->[$i] == $B->[$j]) {\n                $i++;\n            }\n        }\n    }\n    if ($i == $n) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    my $i = 0;\n    my $j = 0;\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            return 0;\n        }\n    }\n    if ($j < $m) {\n        return 0;\n    }\n    return 1;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            return 0;\n        }\n    }\n    return ($j == $m);\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    my $n = scalar @$A;\n    my $m = scalar @$B;\n    while($i < $n){\n        if($A->[$i] == $B->[$j]){\n            $i++;\n            $j++;\n        }\n        else{\n            $i++;\n            $j = 0;\n        }\n        if($j == $m){\n            $flag = 1;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    for ( $i = 0 ; $i < $n ; $i++ ) {\n        for ( $j = 0 ; $j < $m ; $j++ ) {\n            if ( $A->[$i] == $B->[$j] ) {\n                last;\n            }\n        }\n        if ( $j == $m ) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $lenA = scalar(@$A);\n    my $lenB = scalar(@$B);\n    my $i = 0;\n    my $j = 0;\n    while ($i < $lenA && $j < $lenB) {\n        if ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == $lenB) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A->[$i] == $B->[$j]) {\n                $flag = 1;\n            }\n            else {\n                $flag = 0;\n            }\n        }\n    }\n    return $flag;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    while ($i < $n) {\n        while ($j < $m) {\n            if ($A->[$i] == $B->[$j]) {\n                $i++;\n                $j++;\n            }\n            else {\n                $j++;\n            }\n        }\n        if ($i == $n) {\n            $flag = 1;\n        }\n    }\n    return $flag;\n}",
    "    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    my $i = 0;\n    my $j = 0;\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        }\n        elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        }\n        else {\n            return 0;\n        }\n    }\n    if ($j < $m) {\n        return 0;\n    }\n    return 1;\n}",
    "    my $n = scalar @$A;\n    my $m = scalar @$B;\n    my $i = 0;\n    my $j = 0;\n    for (my $i = 0; $i < $n - $m + 1; $i++) {\n        for (my $j = 0; $j < $m; $j++) {\n            if ($A->[$i + $j] != $B->[$j]) {\n                last;\n            }\n        }\n        if ($j == $m) {\n            return 1;\n        }\n    }\n    return 0;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    my $n = scalar @$A;\n    my $m = scalar @$B;\n    while ($i < $n) {\n        while ($j < $m) {\n            if ($A->[$i] == $B->[$j]) {\n                $i++;\n                $j++;\n            }\n            else {\n                $j++;\n            }\n        }\n        if ($i == $n) {\n            $flag = 1;\n        }\n        else {\n            $i = 0;\n            $j = 0;\n        }\n    }\n    return $flag;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    while ($i < scalar(@$A)) {\n        $j = 0;\n        while ($j < scalar(@$B)) {\n            if ($A->[$i] == $B->[$j]) {\n                $i++;\n                $j++;\n                $flag = 1;\n            }\n            else {\n                $i++;\n                $flag = 0;\n            }\n        }\n    }\n    if ($flag == 1) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    for ( $i = 0; $i < $n; $i++ ) {\n        for ( $j = 0; $j < $m; $j++ ) {\n            if ( $A->[$i] == $B->[$j] ) {\n                last;\n            }\n        }\n        if ( $j == $m ) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    my $i = 0;\n    my $j = 0;\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            return 0;\n        }\n    }\n    if ($j < $m) {\n        return 0;\n    } else {\n        return 1;\n    }\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            return 0;\n        }\n    }\n    return ($j == $m);\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    while($i < $n && $j < $m) {\n        if($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        }\n        else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if($j == $m) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    my $n = scalar @$A;\n    my $m = scalar @$B;\n    while($i < $n) {\n        if($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        }\n        else {\n            $i++;\n            $j = 0;\n        }\n        if($j == $m) {\n            $flag = 1;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            return 0;\n        }\n    }\n    return ($j == $m);\n}",
    "    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    my $i = 0;\n    my $j = 0;\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            return 0;\n        }\n    }\n    if ($j < $m) {\n        return 0;\n    }\n    return 1;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = @$A;\n    my $m = @$B;\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            return 0;\n        }\n    }\n    if ($j == $m) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        }\n        else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == $m) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    while($i < $n && $j < $m) {\n        if($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        }\n        else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if($j == $m) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    for($i = 0; $i < $n; $i++) {\n        for($j = 0; $j < $m; $j++) {\n            if($A->[$i] == $B->[$j]) {\n                $flag = 1;\n            }\n            else {\n                $flag = 0;\n            }\n        }\n    }\n    if($flag == 1) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    for ($i = 0; $i < scalar(@$A); $i++) {\n        if ($A->[$i] == $B->[$j]) {\n            $j++;\n        }\n        else {\n            $j = 0;\n        }\n        if ($j == scalar(@$B)) {\n            $flag = 1;\n            return $flag;\n        }\n    }\n    return $flag;\n}",
    "    my $m = scalar @$A;\n    my $n = scalar @$B;\n    my $i = 0;\n    my $j = 0;\n    while ($i < $m && $j < $n) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            return 0;\n        }\n    }\n    return ($j < $n) ? 0 : 1;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = scalar @$A;\n    my $m = scalar @$B;\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        }\n        elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        }\n        else {\n            return 0;\n        }\n    }\n    if ($j < $m) {\n        return 0;\n    }\n    return 1;\n}",
    "    my $n = @$A;\n    my $m = @$B;\n    my $i = 0;\n    my $j = 0;\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            return 0;\n        }\n    }\n    return ($j == $m);\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        }\n        elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        }\n        else {\n            return 0;\n        }\n    }\n    if ($j < $m) {\n        return 0;\n    }\n    return 1;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    for($i = 0; $i < scalar(@$A); $i++) {\n        for($j = 0; $j < scalar(@$B); $j++) {\n            if($A->[$i] == $B->[$j]) {\n                $flag = 1;\n            }\n            else {\n                $flag = 0;\n            }\n        }\n    }\n    if($flag == 1) {\n        print \"Array A is sub array of Array B\\n\";\n    }\n    else {\n        print \"Array A is not sub array of Array B\\n\";\n    }\n}",
    "    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    my $i = 0;\n    my $j = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A->[$i] == $B->[$j]) {\n                last;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            return 0;\n        }\n    }\n    return ($j == $m);\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    for($i = 0; $i < scalar(@$A); $i++) {\n        for($j = 0; $j < scalar(@$B); $j++) {\n            if($A->[$i] == $B->[$j]) {\n                $flag = 1;\n            }\n            else {\n                $flag = 0;\n            }\n        }\n    }\n    if($flag == 1) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    my $i = 0;\n    my $j = 0;\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            return 0;\n        }\n    }\n    if ($j < $m) {\n        return 0;\n    } else {\n        return 1;\n    }\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            return 0;\n        }\n    }\n    if ($j == $m) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    my $i = 0;\n    my $j = 0;\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            return 0;\n        }\n    }\n    if ($j < $m) {\n        return 0;\n    }\n    return 1;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    while ($i < $n) {\n        while ($j < $m) {\n            if ($A->[$i] == $B->[$j]) {\n                $i++;\n                $j++;\n            }\n            else {\n                $j++;\n            }\n        }\n        if ($i == $n) {\n            $flag = 1;\n        }\n        else {\n            $i = 0;\n            $j = 0;\n        }\n    }\n    return $flag;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    my $len1 = scalar @$A;\n    my $len2 = scalar @$B;\n    for($i = 0; $i < $len1; $i++) {\n        for($j = 0; $j < $len2; $j++) {\n            if($A->[$i] == $B->[$j]) {\n                $flag = 1;\n            }\n        }\n        if($flag == 0) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    while ($i < scalar(@$A) && $j < scalar(@$B)) {\n        if ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        }\n        else {\n            $i++;\n        }\n    }\n    if ($j == scalar(@$B)) {\n        $flag = 1;\n    }\n    return $flag;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    for($i = 0; $i < $n; $i++) {\n        for($j = 0; $j < $m; $j++) {\n            if($A->[$i] == $B->[$j]) {\n                $flag = 1;\n            }\n            else {\n                $flag = 0;\n            }\n        }\n    }\n    return $flag;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            return 0;\n        }\n    }\n    if ($j < $m) {\n        return 0;\n    } else {\n        return 1;\n    }\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A->[$i] == $B->[$j]) {\n                $flag = 1;\n            }\n            else {\n                $flag = 0;\n            }\n        }\n    }\n    if ($flag == 1) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = scalar @$A;\n    my $m = scalar @$B;\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif ($A->[$i] > $B->[$j]) {\n            return 0;\n        } else {\n            $i++;\n            $j++;\n        }\n    }\n    return ($j == $m);\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    for($i = 0; $i < scalar(@$A); $i++) {\n        for($j = 0; $j < scalar(@$B); $j++) {\n            if($A->[$i] eq $B->[$j]) {\n                $flag = 1;\n            }\n            else {\n                $flag = 0;\n            }\n        }\n    }\n    return $flag;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = scalar @$A;\n    my $m = scalar @$B;\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            return 0;\n        }\n    }\n    return ($j < $m) ? 0 : 1;\n}",
    "    my $n = @$A;\n    my $m = @$B;\n    for (my $i = 0; $i <= $n - $m; $i++) {\n        my $j;\n        for ($j = 0; $j < $m; $j++) {\n            last if ($A->[$i + $j] != $B->[$j]);\n        }\n        return 1 if ($j == $m);\n    }\n    return 0;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    my $n = scalar @$A;\n    my $m = scalar @$B;\n    while ($i < $n) {\n        while ($j < $m) {\n            if ($A->[$i] == $B->[$j]) {\n                $i++;\n                $j++;\n            }\n            else {\n                $j++;\n            }\n        }\n        if ($i == $n) {\n            $flag = 1;\n        }\n        else {\n            $i = 0;\n            $j = 0;\n        }\n    }\n    return $flag;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            return 0;\n        }\n    }\n    return ($j == $m);\n}",
    "    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    my $i = 0;\n    my $j = 0;\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            return 0;\n        }\n    }\n    return ($j < $m) ? 0 : 1;\n}",
    "    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    if ($n > $m) {\n        return 0;\n    }\n    my $i = 0;\n    my $j = 0;\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        }\n        else {\n            $j++;\n        }\n    }\n    return ($i == $n);\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = @$A;\n    my $m = @$B;\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        }\n        else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == $m) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            return 0;\n        }\n    }\n    return ($j == $m);\n}",
    "    my $n = @$A;\n    my $m = @$B;\n    my $i = 0;\n    my $j = 0;\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        }\n        elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        }\n        else {\n            return 0;\n        }\n    }\n    if ($j < $m) {\n        return 0;\n    }\n    return 1;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        }\n        elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        }\n        else {\n            return 0;\n        }\n    }\n    if ($j < $m) {\n        return 0;\n    }\n    return 1;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = @$A;\n    my $m = @$B;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A->[$i] == $B->[$j]) {\n                last;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $len_A = scalar(@$A);\n    my $len_B = scalar(@$B);\n    my $i = 0;\n    my $j = 0;\n    for ($i = 0; $i < $len_A; $i++) {\n        for ($j = 0; $j < $len_B; $j++) {\n            if ($A->[$i] == $B->[$j]) {\n                last;\n            }\n        }\n        if ($j == $len_B) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = scalar @$A;\n    my $m = scalar @$B;\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        }\n        elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        }\n        else {\n            return 0;\n        }\n    }\n    if ($j < $m) {\n        return 0;\n    }\n    return 1;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    while($i < $n) {\n        if($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        }\n        else {\n            $i++;\n            $j = 0;\n        }\n        if($j == $m) {\n            $flag = 1;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    while($i < scalar(@$A)){\n        if($A->[$i] == $B->[$j]){\n            $i++;\n            $j++;\n        }\n        else{\n            $i++;\n        }\n        if($j == scalar(@$B)){\n            $flag = 1;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            return 0;\n        }\n    }\n    if ($j == $m) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            return 0;\n        }\n    }\n    if ($j == $m) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = @$A;\n    my $m = @$B;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A->[$i] == $B->[$j]) {\n                last;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    while($i < $n) {\n        if($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        }\n        else {\n            $i++;\n            $j = 0;\n        }\n        if($j == $m) {\n            $flag = 1;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    for($i=0; $i<@$A; $i++) {\n        for($j=0; $j<@$B; $j++) {\n            if($$A[$i] == $$B[$j]) {\n                $flag = 1;\n            }\n            else {\n                $flag = 0;\n            }\n        }\n    }\n    if($flag == 1) {\n        print \"Sub Array\\n\";\n    }\n    else {\n        print \"Not Sub Array\\n\";\n    }\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    while($i < scalar(@$A) && $j < scalar(@$B)) {\n        if($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        }\n        else {\n            $i++;\n        }\n    }\n    if($j == scalar(@$B)) {\n        $flag = 1;\n    }\n    return $flag;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            return 0;\n        }\n    }\n    return ($j == $m);\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            return 0;\n        }\n    }\n    return ($j == $m);\n}",
    "    my $flag = 0;\n    my $i = 0;\n    my $j = 0;\n    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    while($i < $n && $j < $m) {\n        if($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        }\n        else {\n            $i++;\n        }\n    }\n    if($j == $m) {\n        $flag = 1;\n    }\n    return $flag;\n}",
    "    my $n = scalar @$A;\n    my $m = scalar @$B;\n    my $i = 0;\n    my $j = 0;\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            return 0;\n        }\n    }\n    if ($j < $m) {\n        return 0;\n    }\n    return 1;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        }\n        else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == $m) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            return 0;\n        }\n    }\n    return ($j == $m);\n}",
    "    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    my $i = 0;\n    my $j = 0;\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        }\n        else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == $m) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = @$A;\n    my $m = @$B;\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        }\n        elsif ($A->[$i] > $B->[$j]) {\n            return 0;\n        }\n        else {\n            $i++;\n            $j++;\n        }\n    }\n    return ($j == $m);\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = @$A;\n    my $m = @$B;\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            return 0;\n        }\n    }\n    return ($j == $m);\n}",
    "    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    my $i = 0;\n    my $j = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A->[$i] == $B->[$j]) {\n                last;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $lenA = scalar(@$A);\n    my $lenB = scalar(@$B);\n    while ($i < $lenA && $j < $lenB) {\n        if ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    return $j == $lenB;\n}",
    "    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    my $i = 0;\n    my $j = 0;\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        }\n        else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == $m) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $lenA = scalar(@$A);\n    my $lenB = scalar(@$B);\n    my $i = 0;\n    my $j = 0;\n    while ($i < $lenA && $j < $lenB) {\n        if ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        }\n        else {\n            $i++;\n        }\n    }\n    if ($j == $lenB) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    for( $i = 0; $i <= $#{$A}; $i++ ) {\n        for( $j = 0; $j <= $#{$B}; $j++ ) {\n            if( $A->[$i] == $B->[$j] ) {\n                $flag = 1;\n                last;\n            }\n        }\n        if( $flag == 0 ) {\n            return 0;\n        }\n        $flag = 0;\n    }\n    return 1;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    my $n = scalar @$A;\n    my $m = scalar @$B;\n    while($i < $n) {\n        if($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        }\n        else {\n            $i++;\n            $j = 0;\n        }\n        if($j == $m) {\n            $flag = 1;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    my $i = 0;\n    my $j = 0;\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            return 0;\n        }\n    }\n    return ($j < $m) ? 0 : 1;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = scalar @$A;\n    my $m = scalar @$B;\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            return 0;\n        }\n    }\n    if ($j < $m) {\n        return 0;\n    }\n    return 1;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = @$A;\n    my $m = @$B;\n    for( $i = 0; $i < $n; $i++ ) {\n        for( $j = 0; $j < $m; $j++ ) {\n            if( $A->[$i] == $B->[$j] ) {\n                last;\n            }\n        }\n        if( $j == $m ) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    while ($i < scalar @$A) {\n        if ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n            $j = 0;\n        }\n        if ($j == scalar @$B) {\n            $flag = 1;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            return 0;\n        }\n    }\n    return ($j == $m);\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = scalar @$A;\n    my $m = scalar @$B;\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            return 0;\n        }\n    }\n    return ($j < $m) ? 0 : 1;\n}",
    "    my $m = scalar(@$A);\n    my $n = scalar(@$B);\n    my $i = 0;\n    my $j = 0;\n    while ($i < $m && $j < $n) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            return 0;\n        }\n    }\n    return ($j < $n) ? 0 : 1;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = @$A;\n    my $m = @$B;\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        }\n        elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        }\n        else {\n            return 0;\n        }\n    }\n    return ($j == $m);\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    while ($i < scalar(@$A) && $j < scalar(@$B)) {\n        if ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        }\n        else {\n            $i++;\n        }\n    }\n    if ($j == scalar(@$B)) {\n        $flag = 1;\n    }\n    return $flag;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    my $len_A = scalar @$A;\n    my $len_B = scalar @$B;\n    while($i < $len_A && $j < $len_B) {\n        if($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        }\n        else {\n            $i++;\n        }\n    }\n    if($j == $len_B) {\n        $flag = 1;\n    }\n    return $flag;\n}",
    "    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    my $i = 0;\n    my $j = 0;\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            return 0;\n        }\n    }\n    if ($j < $m) {\n        return 0;\n    }\n    return 1;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    my $n = scalar @$A;\n    my $m = scalar @$B;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A->[$i] == $B->[$j]) {\n                $flag = 1;\n            }\n            else {\n                $flag = 0;\n            }\n        }\n    }\n    return $flag;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = scalar @$A;\n    my $m = scalar @$B;\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            return 0;\n        }\n    }\n    return ($j == $m);\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A->[$i] == $B->[$j]) {\n                last;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    my $i = 0;\n    my $j = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A->[$i] == $B->[$j]) {\n                last;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    my $n = @$A;\n    my $m = @$B;\n    while ($i < $n) {\n        if ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        }\n        else {\n            $i++;\n            $j = 0;\n        }\n        if ($j == $m) {\n            $flag = 1;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = @$A;\n    my $m = @$B;\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        }\n        elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        }\n        else {\n            return 0;\n        }\n    }\n    if ($j < $m) {\n        return 0;\n    }\n    return 1;\n}",
    "    my $n = scalar @$A;\n    my $m = scalar @$B;\n    my $i = 0;\n    my $j = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A->[$i] == $B->[$j]) {\n                last;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            return 0;\n        }\n    }\n    return ($j == $m);\n}",
    "    my $len_A = scalar(@$A);\n    my $len_B = scalar(@$B);\n    my $i = 0;\n    my $j = 0;\n    while ($i < $len_A && $j < $len_B) {\n        if ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == $len_B) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    my $n = scalar @$A;\n    my $m = scalar @$B;\n    while($i < $n && $j < $m) {\n        if($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if($j == $m) {\n        $flag = 1;\n    }\n    return $flag;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        }\n        elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        }\n        else {\n            return 0;\n        }\n    }\n    if ($j < $m) {\n        return 0;\n    }\n    return 1;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    while ($i < scalar(@$A)) {\n        if ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        }\n        else {\n            $i++;\n            $j = 0;\n        }\n        if ($j == scalar(@$B)) {\n            $flag = 1;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    while($i < $n && $j < $m) {\n        if($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        }\n        else {\n            $i++;\n        }\n    }\n    if($j == $m) {\n        $flag = 1;\n    }\n    return $flag;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = @$A;\n    my $m = @$B;\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            return 0;\n        }\n    }\n    if ($j == $m) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    my $i = 0;\n    my $j = 0;\n    while ($i < scalar(@$A) && $j < scalar(@$B)) {\n        if ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == scalar(@$B)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    my $n = @$A;\n    my $m = @$B;\n    my $i = 0;\n    my $j = 0;\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            return 0;\n        }\n    }\n    if ($j < $m) {\n        return 0;\n    }\n    return 1;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    while ($i < scalar(@$A) && $j < scalar(@$B)) {\n        if ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        }\n        else {\n            $i++;\n        }\n    }\n    if ($j == scalar(@$B)) {\n        $flag = 1;\n    }\n    return $flag;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = scalar @$A;\n    my $m = scalar @$B;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A->[$i] == $B->[$j]) {\n                last;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = @$A;\n    my $m = @$B;\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            return 0;\n        }\n    }\n    if ($j < $m) {\n        return 0;\n    } else {\n        return 1;\n    }\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    while($i < $n && $j < $m) {\n        if($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        }\n        else {\n            $j++;\n        }\n    }\n    if($i == $n) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    my $i = 0;\n    my $j = 0;\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            return 0;\n        }\n    }\n    return ($j < $m) ? 0 : 1;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    while($i < $n && $j < $m) {\n        if($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if($j == $m) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    for($i = 0; $i < scalar(@$A); $i++) {\n        if($A->[$i] == $B->[$j]) {\n            $j++;\n        }\n        else {\n            $j = 0;\n        }\n        if($j == scalar(@$B)) {\n            $flag = 1;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = @$A;\n    my $m = @$B;\n    while($i < $n && $j < $m) {\n        if($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        }\n        else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if($j == $m) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = @$A;\n    my $m = @$B;\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            return 0;\n        }\n    }\n    if ($j == $m) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = scalar @$A;\n    my $m = scalar @$B;\n    while($i < $n && $j < $m) {\n        if($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        }\n        else {\n            $i++;\n        }\n    }\n    if($j == $m) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = scalar @$A;\n    my $m = scalar @$B;\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            return 0;\n        }\n    }\n    return ($j == $m);\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = scalar @$A;\n    my $m = scalar @$B;\n    while($i < $n && $j < $m) {\n        if($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if($j == $m) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = scalar @$A;\n    my $m = scalar @$B;\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            return 0;\n        }\n    }\n    return ($j == $m);\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = @$A;\n    my $m = @$B;\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            return 0;\n        }\n    }\n    if ($j == $m) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    my $len_A = scalar @$A;\n    my $len_B = scalar @$B;\n    for($i = 0; $i < $len_A; $i++) {\n        for($j = 0; $j < $len_B; $j++) {\n            if($A->[$i] == $B->[$j]) {\n                $flag = 1;\n            }\n            else {\n                $flag = 0;\n            }\n        }\n    }\n    if($flag == 1) {\n        print \"Array A is a subarray of Array B\\n\";\n    }\n    else {\n        print \"Array A is not a subarray of Array B\\n\";\n    }\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    while($i < $n) {\n        while($j < $m) {\n            if($A->[$i] == $B->[$j]) {\n                $i++;\n                $j++;\n            }\n            else {\n                $j++;\n            }\n        }\n        if($i == $n) {\n            $flag = 1;\n        }\n        else {\n            $i = 0;\n            $j = 0;\n        }\n    }\n    return $flag;\n}",
    "    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    my $i = 0;\n    my $j = 0;\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        }\n        else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == $m) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    my $i = 0;\n    my $j = 0;\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            return 0;\n        }\n    }\n    return ($j < $m) ? 0 : 1;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            return 0;\n        }\n    }\n    if ($j == $m) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    my $len_A = scalar @$A;\n    my $len_B = scalar @$B;\n    while($i < $len_A && $j < $len_B) {\n        if($$A[$i] == $$B[$j]) {\n            $i++;\n            $j++;\n        }\n        else {\n            $i++;\n        }\n    }\n    if($j == $len_B) {\n        $flag = 1;\n    }\n    return $flag;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = scalar @$A;\n    my $m = scalar @$B;\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            return 0;\n        }\n    }\n    return ($j == $m);\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    my $n = scalar @$A;\n    my $m = scalar @$B;\n    while($i < $n) {\n        while($j < $m) {\n            if($A->[$i] == $B->[$j]) {\n                $i++;\n                $j++;\n            }\n            else {\n                $j++;\n            }\n        }\n        if($i == $n) {\n            $flag = 1;\n            last;\n        }\n        else {\n            $i = 0;\n            $j = 0;\n        }\n    }\n    return $flag;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            return 0;\n        }\n    }\n    if ($j < $m) {\n        return 0;\n    }\n    return 1;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    my $n = scalar @$A;\n    my $m = scalar @$B;\n    while($i < $n) {\n        while($j < $m) {\n            if($A->[$i] == $B->[$j]) {\n                $i++;\n                $j++;\n                $flag = 1;\n            }\n            else {\n                $j++;\n                $flag = 0;\n            }\n        }\n        if($flag == 0) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    for($i = 0; $i <= $#{$A}; $i++) {\n        for($j = 0; $j <= $#{$B}; $j++) {\n            if($A->[$i] == $B->[$j]) {\n                $flag = 1;\n            }\n            else {\n                $flag = 0;\n            }\n        }\n    }\n    return $flag;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    my $n = scalar @$A;\n    my $m = scalar @$B;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A->[$i] == $B->[$j]) {\n                $flag = 1;\n            }\n            else {\n                $flag = 0;\n            }\n        }\n    }\n    return $flag;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            return 0;\n        }\n    }\n    if ($j < $m) {\n        return 0;\n    } else {\n        return 1;\n    }\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $lenA = scalar @$A;\n    my $lenB = scalar @$B;\n    while ($i < $lenA && $j < $lenB) {\n        if ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == $lenB) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    for($i = 0; $i < $n; $i++) {\n        for($j = 0; $j < $m; $j++) {\n            if($A->[$i] == $B->[$j]) {\n                $flag = 1;\n            }\n            else {\n                $flag = 0;\n                last;\n            }\n        }\n    }\n    if($flag == 1) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    for($i = 0; $i < $n; $i++) {\n        for($j = 0; $j < $m; $j++) {\n            if($A->[$i] == $B->[$j]) {\n                $flag = 1;\n            }\n            else {\n                $flag = 0;\n            }\n        }\n    }\n    if($flag == 1) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    while ($i < $n) {\n        while ($j < $m) {\n            if ($A->[$i] == $B->[$j]) {\n                $i++;\n                $j++;\n            }\n            else {\n                $j++;\n            }\n        }\n        if ($i == $n) {\n            $flag = 1;\n        }\n        else {\n            $i = 0;\n            $j = 0;\n        }\n    }\n    return $flag;\n}",
    "    my $i = 0;\n    my $j = 0;\n    while ($i < scalar(@$A) && $j < scalar(@$B)) {\n        if ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        }\n        else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == scalar(@$B)) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = @$A;\n    my $m = @$B;\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            return 0;\n        }\n    }\n    if ($j < $m) {\n        return 0;\n    }\n    return 1;\n}",
    "    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    my $i = 0;\n    my $j = 0;\n    while($i < $n && $j < $m) {\n        if($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            return 0;\n        }\n    }\n    if($j < $m) {\n        return 0;\n    }\n    return 1;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = @$A;\n    my $m = @$B;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A->[$i] == $B->[$j]) {\n                last;\n            }\n        }\n        if ($j == $m) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = @$A;\n    my $m = @$B;\n    for (my $i = 0; $i < $n; $i++) {\n        for (my $j = 0; $j < $m; $j++) {\n            if ($A->[$i] == $B->[$j]) {\n                $i++;\n            }\n            else {\n                $i = 0;\n                last;\n            }\n        }\n        if ($i == $n) {\n            return 1;\n        }\n    }\n    return 0;\n}\nmy $A = [1, 2, 3, 4, 5];\nmy $B = [2, 3, 4];\nmy $C = [1, 2, 3, 4, 5];\nmy $D = [2, 3, 4, 5];\nmy $E = [2, 3, 4, 5, 6];\nmy $F = [2, 3, 4, 5, 6, 7];\nif (is_Sub_Array($A, $B)) {\n    print \"Array B is a subarray of A\\n\";\n}\nelse {\n    print \"Array B is not a subarray of A\\n\";\n}\nif (is_Sub_Array($C, $D)) {\n    print \"Array D is a subarray of C\\n\";\n}\nelse {\n    print \"Array D is not a subarray of C\\n\";\n}\nif (is_Sub_Array($E, $F)) {\n    print \"Array F is a subarray of E\\n\";\n}\nelse {\n    print \"Array F is not a subarray of E\\n\";\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        }\n        else {\n            $i++;\n        }\n    }\n    if ($j == $m) {\n        $flag = 1;\n    }\n    return $flag;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            return 0;\n        }\n    }\n    if ($j == $m) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = @$A;\n    my $m = @$B;\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            return 0;\n        }\n    }\n    return ($j == $m);\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    while ($i < scalar(@$A) && $j < scalar(@$B)) {\n        if ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == scalar(@$B)) {\n        $flag = 1;\n    }\n    return $flag;\n}",
    "    my $n = @$A;\n    my $m = @$B;\n    my $i = 0;\n    my $j = 0;\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        }\n        else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == $m) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    for($i = 0; $i < scalar(@$A); $i++) {\n        for($j = 0; $j < scalar(@$B); $j++) {\n            if($A->[$i] == $B->[$j]) {\n                $flag = 1;\n            }\n            else {\n                $flag = 0;\n            }\n        }\n    }\n    if($flag == 1) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    my $n = scalar @$A;\n    my $m = scalar @$B;\n    for($i = 0; $i < $n; $i++) {\n        for($j = 0; $j < $m; $j++) {\n            if($A->[$i] == $B->[$j]) {\n                $flag = 1;\n            }\n            else {\n                $flag = 0;\n            }\n        }\n    }\n    return $flag;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    my $len_A = scalar @$A;\n    my $len_B = scalar @$B;\n    while ($i < $len_A) {\n        if ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        }\n        else {\n            $i++;\n            $j = 0;\n        }\n        if ($j == $len_B) {\n            $flag = 1;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A->[$i] == $B->[$j]) {\n                $flag = 1;\n            }\n            else {\n                $flag = 0;\n            }\n        }\n    }\n    return $flag;\n}\nmy $A = [1, 2, 3, 4, 5];\nmy $B = [2, 3, 4];\nmy $C = [6, 7, 8];\nprint \"Array A is sub array of B\\n\" if (is_Sub_Array($A, $B));\nprint \"Array C is sub array of B\\n\" if (is_Sub_Array($C, $B));",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    while($i < $n && $j < $m) {\n        if($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        }\n        else {\n            $i++;\n        }\n    }\n    if($j == $m) {\n        $flag = 1;\n    }\n    return $flag;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        }\n        elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        }\n        else {\n            return 0;\n        }\n    }\n    if ($j < $m) {\n        return 0;\n    }\n    return 1;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    my $n = scalar @$A;\n    my $m = scalar @$B;\n    while ($i < $n) {\n        if ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        }\n        else {\n            $i++;\n            $j = 0;\n        }\n        if ($j == $m) {\n            $flag = 1;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $len_A = scalar @$A;\n    my $len_B = scalar @$B;\n    while ($i < $len_A && $j < $len_B) {\n        if ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        }\n        else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == $len_B) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    my $n = scalar @$A;\n    my $m = scalar @$B;\n    while ($i < $n) {\n        if ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        }\n        else {\n            $i++;\n        }\n        if ($j == $m) {\n            $flag = 1;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    for($i = 0; $i < $n; $i++) {\n        for($j = 0; $j < $m; $j++) {\n            if($A->[$i] == $B->[$j]) {\n                $flag = 1;\n            }\n            else {\n                $flag = 0;\n            }\n        }\n    }\n    if($flag == 1) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\nmy @A = (1, 2, 3, 4, 5);\nmy @B = (2, 3, 4);\nmy $res = is_Sub_Array(\\@A, \\@B);\nif($res == 1) {\n    print \"Array B is a sub array of Array A\\n\";\n}\nelse {\n    print \"Array B is not a sub array of Array A\\n\";\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    while ($i < scalar(@$A) && $j < scalar(@$B)) {\n        if ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n        if ($j == scalar(@$B)) {\n            $flag = 1;\n        }\n    }\n    return $flag;\n}",
    "    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    my $i = 0;\n    my $j = 0;\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            return 0;\n        }\n    }\n    if ($j < $m) {\n        return 0;\n    } else {\n        return 1;\n    }\n}",
    "    my $n = @$A;\n    my $m = @$B;\n    my $i = 0;\n    my $j = 0;\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            return 0;\n        }\n    }\n    return ($j == $m);\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = scalar @$A;\n    my $m = scalar @$B;\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        }\n        elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        }\n        else {\n            return 0;\n        }\n    }\n    if ($j < $m) {\n        return 0;\n    }\n    return 1;\n}",
    "    my $n = @$A;\n    my $m = @$B;\n    my $i = 0;\n    my $j = 0;\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        }\n        elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        }\n        else {\n            return 0;\n        }\n    }\n    if ($j < $m) {\n        return 0;\n    }\n    else {\n        return 1;\n    }\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    for($i = 0; $i <= $#{$A}; $i++) {\n        if($A->[$i] == $B->[$j]) {\n            $j++;\n        }\n        else {\n            $j = 0;\n        }\n        if($j == $#{$B} + 1) {\n            $flag = 1;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = @$A;\n    my $m = @$B;\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        }\n        elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        }\n        else {\n            return 0;\n        }\n    }\n    if ($j == $m) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    my $n = scalar @$A;\n    my $m = scalar @$B;\n    while($i < $n) {\n        if($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        }\n        else {\n            $i++;\n        }\n        if($j == $m) {\n            $flag = 1;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    while($i < scalar(@$A) && $j < scalar(@$B)) {\n        if($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n        if($j == scalar(@$B)) {\n            $flag = 1;\n        }\n    }\n    return $flag;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $len_A = scalar(@$A);\n    my $len_B = scalar(@$B);\n    while($i < $len_A && $j < $len_B) {\n        if($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if($j == $len_B) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    my $n = @$A;\n    my $m = @$B;\n    my $i = 0;\n    my $j = 0;\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        }\n        elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        }\n        else {\n            return 0;\n        }\n    }\n    if ($j < $m) {\n        return 0;\n    }\n    else {\n        return 1;\n    }\n}",
    "    my $n = @$A;\n    my $m = @$B;\n    my $i = 0;\n    my $j = 0;\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            return 0;\n        }\n    }\n    return ($j < $m) ? 0 : 1;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    while ($i < scalar(@$A)) {\n        if ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        }\n        else {\n            $i++;\n            $j = 0;\n        }\n        if ($j == scalar(@$B)) {\n            $flag = 1;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    while($i < $n && $j < $m) {\n        if($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        }\n        else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if($j == $m) {\n        $flag = 1;\n    }\n    return $flag;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = scalar @$A;\n    my $m = scalar @$B;\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            return 0;\n        }\n    }\n    if ($j < $m) {\n        return 0;\n    }\n    return 1;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if ($j == $m) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            return 0;\n        }\n    }\n    if ($j < $m) {\n        return 0;\n    }\n    return 1;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    while ($i < scalar(@$A)) {\n        if ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n            $flag = 1;\n        } else {\n            $i++;\n            $flag = 0;\n        }\n    }\n    if ($flag == 1) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    my $n = scalar @$A;\n    my $m = scalar @$B;\n    my $i = 0;\n    my $j = 0;\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        }\n        elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        }\n        else {\n            return 0;\n        }\n    }\n    if ($j < $m) {\n        return 0;\n    }\n    return 1;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = scalar @$A;\n    my $m = scalar @$B;\n    while($i < $n && $j < $m) {\n        if($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif($A->[$i] > $B->[$j]) {\n            $j++;\n        } else {\n            $i++;\n            $j++;\n        }\n    }\n    return $j == $m;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = scalar @$A;\n    my $m = scalar @$B;\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            return 0;\n        }\n    }\n    if ($j == $m) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    for(my $i = 0; $i <= $n - $m; $i++) {\n        my $j;\n        for($j = 0; $j < $m; $j++) {\n            last if $A->[$i + $j] != $B->[$j];\n        }\n        return 1 if $j == $m;\n    }\n    return 0;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $count = 0;\n    for ($i = 0; $i < scalar(@$A); $i++) {\n        for ($j = 0; $j < scalar(@$B); $j++) {\n            if ($A->[$i] == $B->[$j]) {\n                $count++;\n                last;\n            }\n        }\n    }\n    if ($count == scalar(@$A)) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    while ($i < scalar(@$A)) {\n        if ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n            $j = 0;\n        }\n        if ($j == scalar(@$B)) {\n            $flag = 1;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = scalar @$A;\n    my $m = scalar @$B;\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            return 0;\n        }\n    }\n    if ($j == $m) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            return 0;\n        }\n    }\n    return ($j == $m);\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            return 0;\n        }\n    }\n    if ($j == $m) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    my $i = 0;\n    my $j = 0;\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            return 0;\n        }\n    }\n    if ($j < $m) {\n        return 0;\n    }\n    return 1;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    for($i = 0; $i < $n; $i++) {\n        for($j = 0; $j < $m; $j++) {\n            if($A->[$i] == $B->[$j]) {\n                $flag = 1;\n            }\n            else {\n                $flag = 0;\n            }\n        }\n    }\n    if($flag == 1) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            return 0;\n        }\n    }\n    if ($j == $m) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    while($i < $n && $j < $m){\n        if($A->[$i] == $B->[$j]){\n            $i++;\n            $j++;\n        }\n        else{\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if($j == $m){\n        return 1;\n    }\n    else{\n        return 0;\n    }\n}",
    "    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    my $i = 0;\n    my $j = 0;\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            return 0;\n        }\n    }\n    if ($j < $m) {\n        return 0;\n    }\n    return 1;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    while ($i < scalar(@$A)) {\n        if ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        }\n        else {\n            $i++;\n            $j = 0;\n        }\n        if ($j == scalar(@$B)) {\n            $flag = 1;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    my $i = 0;\n    my $j = 0;\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        }\n        elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        }\n        else {\n            return 0;\n        }\n    }\n    if ($j < $m) {\n        return 0;\n    }\n    return 1;\n}",
    "    my $n = scalar @$A;\n    my $m = scalar @$B;\n    my $i = 0;\n    my $j = 0;\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            return 0;\n        }\n    }\n    return ($j < $m) ? 0 : 1;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = @$A;\n    my $m = @$B;\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            return 0;\n        }\n    }\n    return ($j == $m);\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    while($i < $n) {\n        if($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        }\n        else {\n            $i++;\n            $j = 0;\n        }\n        if($j == $m) {\n            $flag = 1;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = scalar @$A;\n    my $m = scalar @$B;\n    while($i < $n && $j < $m) {\n        if($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        }\n        else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if($j == $m) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    for($i = 0; $i <= $#A; $i++) {\n        for($j = 0; $j <= $#B; $j++) {\n            if($A->[$i] == $B->[$j]) {\n                $flag = 1;\n                last;\n            }\n        }\n        if($flag == 0) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    my $i = 0;\n    my $j = 0;\n    while ($i < $n && $j < $m) {\n        if ($A->[$i] < $B->[$j]) {\n            $i++;\n        } elsif ($A->[$i] == $B->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            return 0;\n        }\n    }\n    return ($j < $m) ? 0 : 1;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    my $n = scalar(@$A);\n    my $m = scalar(@$B);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($A->[$i] == $B->[$j]) {\n                $flag = 1;\n            }\n            else {\n                $flag = 0;\n            }\n        }\n    }\n    if ($flag == 1) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\nmy @A = (1, 2, 3, 4, 5);\nmy @B = (2, 3, 4);\nmy $result = is_Sub_Array(\\@A, \\@B);\nif ($result == 1) {\n    print \"Array B is subarray of Array A\\n\";\n}\nelse {\n    print \"Array B is not subarray of Array A\\n\";\n}"
  ]
}
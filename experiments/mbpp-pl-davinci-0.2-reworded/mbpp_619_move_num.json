{
  "name": "mbpp_619_move_num",
  "language": "pl",
  "prompt": "# Write a function to move all the numbers to the end of the given string.\nsub move_num {\n    my($test_str) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_619_move_num.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&move_num;\n        if(eq_deeply($candidate->(\"I1love143you55three3000thousand\"),\"Iloveyouthreethousand1143553000\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"Avengers124Assemble\"),\"AvengersAssemble124\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"Its11our12path13to14see15things16do17things\"),\"Itsourpathtoseethingsdothings11121314151617\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my $num_str = \"\";\n    my $char_str = \"\";\n    for my $char (split //, $test_str) {\n        if ($char =~ /\\d/) {\n            $num_str .= $char;\n        }\n        else {\n            $char_str .= $char;\n        }\n    }\n    return $char_str . $num_str;\n}",
    "    my @test_arr = split(//, $test_str);\n    my @num_arr = ();\n    my @char_arr = ();\n    for my $i (@test_arr) {\n        if ($i =~ /\\d/) {\n            push @num_arr, $i;\n        } else {\n            push @char_arr, $i;\n        }\n    }\n    return join(\"\", @char_arr) . join(\"\", @num_arr);\n}",
    "    my @arr = split(//, $test_str);\n    my @num_arr;\n    my @char_arr;\n    foreach my $char (@arr) {\n        if ($char =~ /\\d/) {\n            push(@num_arr, $char);\n        } else {\n            push(@char_arr, $char);\n        }\n    }\n    my $result = join('', @char_arr) . join('', @num_arr);\n    return $result;\n}",
    "    my @chars = split //, $test_str;\n    my @nums = ();\n    my @strs = ();\n    foreach my $char (@chars) {\n        if ($char =~ /\\d/) {\n            push @nums, $char;\n        } else {\n            push @strs, $char;\n        }\n    }\n    return join('', @strs, @nums);\n}",
    "    my $num_str = \"\";\n    my $char_str = \"\";\n    for(my $i = 0; $i < length($test_str); $i++) {\n        if(substr($test_str, $i, 1) =~ /[0-9]/) {\n            $num_str .= substr($test_str, $i, 1);\n        } else {\n            $char_str .= substr($test_str, $i, 1);\n        }\n    }\n    return $char_str.$num_str;\n}",
    "    my @chars = split(//, $test_str);\n    my @nums = ();\n    my @chars_no_num = ();\n    foreach my $i (@chars) {\n        if ($i =~ /\\d/) {\n            push(@nums, $i);\n        } else {\n            push(@chars_no_num, $i);\n        }\n    }\n    my $result = join(\"\", @chars_no_num) . join(\"\", @nums);\n    return $result;\n}",
    "    my $str_len = length($test_str);\n    my $i = 0;\n    my $j = $str_len - 1;\n    my @str_arr = split(//, $test_str);\n    while ($i < $j) {\n        if ($str_arr[$i] =~ /\\d/) {\n            if ($str_arr[$j] =~ /\\D/) {\n                my $temp = $str_arr[$i];\n                $str_arr[$i] = $str_arr[$j];\n                $str_arr[$j] = $temp;\n                $i++;\n                $j--;\n            } else {\n                $j--;\n            }\n        } else {\n            $i++;\n        }\n    }\n    return join('', @str_arr);\n}",
    "    my @arr = split(//, $test_str);\n    my @num_arr = ();\n    my @char_arr = ();\n    foreach my $char (@arr) {\n        if ($char =~ /\\d/) {\n            push(@num_arr, $char);\n        } else {\n            push(@char_arr, $char);\n        }\n    }\n    my $result = join('', @char_arr) . join('', @num_arr);\n    return $result;\n}",
    "    my $num_str = \"\";\n    my $alpha_str = \"\";\n    for my $char (split //, $test_str) {\n        if ($char =~ /[0-9]/) {\n            $num_str .= $char;\n        } else {\n            $alpha_str .= $char;\n        }\n    }\n    return $alpha_str . $num_str;\n}",
    "    my $str_len = length($test_str);\n    my $i = 0;\n    my $j = $str_len - 1;\n    my @str_arr = split(//, $test_str);\n    while($i < $j) {\n        if($str_arr[$i] =~ /[0-9]/) {\n            if($str_arr[$j] =~ /[0-9]/) {\n                $j--;\n            }\n            else {\n                my $temp = $str_arr[$i];\n                $str_arr[$i] = $str_arr[$j];\n                $str_arr[$j] = $temp;\n                $i++;\n                $j--;\n            }\n        }\n        else {\n            $i++;\n        }\n    }\n    return join(\"\", @str_arr);\n}",
    "    my $num_str = \"\";\n    my $char_str = \"\";\n    my @chars = split //, $test_str;\n    foreach my $char (@chars) {\n        if ($char =~ /\\d/) {\n            $num_str .= $char;\n        } else {\n            $char_str .= $char;\n        }\n    }\n    return $char_str . $num_str;\n}",
    "    my $num = \"\";\n    my $str = \"\";\n    for my $char (split //, $test_str) {\n        if ($char =~ /\\d/) {\n            $num .= $char;\n        } else {\n            $str .= $char;\n        }\n    }\n    return $str . $num;\n}",
    "    my @test_arr = split //, $test_str;\n    my @num_arr;\n    my @char_arr;\n    for my $i (@test_arr) {\n        if ($i =~ /\\d/) {\n            push @num_arr, $i;\n        }\n        else {\n            push @char_arr, $i;\n        }\n    }\n    my $result = join '', @char_arr, @num_arr;\n    return $result;\n}",
    "    my @str_arr = split(//, $test_str);\n    my @num_arr = ();\n    my @char_arr = ();\n    foreach my $char (@str_arr) {\n        if ($char =~ /[0-9]/) {\n            push @num_arr, $char;\n        } else {\n            push @char_arr, $char;\n        }\n    }\n    return join(\"\", @char_arr) . join(\"\", @num_arr);\n}",
    "    my $result = \"\";\n    my $num = \"\";\n    for my $i (0..length($test_str)-1) {\n        my $c = substr($test_str, $i, 1);\n        if ($c =~ /[0-9]/) {\n            $num .= $c;\n        } else {\n            $result .= $c;\n        }\n    }\n    return $result . $num;\n}",
    "    my @str_arr = split(//, $test_str);\n    my @num_arr;\n    my @char_arr;\n    for my $char (@str_arr) {\n        if ($char =~ /\\d/) {\n            push @num_arr, $char;\n        } else {\n            push @char_arr, $char;\n        }\n    }\n    my $result = join('', @char_arr, @num_arr);\n    return $result;\n}",
    "    my @str_arr = split(//, $test_str);\n    my @num_arr;\n    my @alpha_arr;\n    foreach my $char (@str_arr) {\n        if ($char =~ /\\d/) {\n            push(@num_arr, $char);\n        }\n        else {\n            push(@alpha_arr, $char);\n        }\n    }\n    return join('', @alpha_arr) . join('', @num_arr);\n}",
    "    my @str_arr = split(//, $test_str);\n    my @num_arr;\n    my @char_arr;\n    foreach my $char (@str_arr) {\n        if ($char =~ /\\d/) {\n            push(@num_arr, $char);\n        } else {\n            push(@char_arr, $char);\n        }\n    }\n    return join(\"\", @char_arr) . join(\"\", @num_arr);\n}",
    "    my @str_arr = split(//, $test_str);\n    my @num_arr;\n    my @char_arr;\n    foreach my $char (@str_arr) {\n        if ($char =~ /\\d/) {\n            push(@num_arr, $char);\n        } else {\n            push(@char_arr, $char);\n        }\n    }\n    my $result = join('', @char_arr) . join('', @num_arr);\n    return $result;\n}",
    "    my @chars = split(//, $test_str);\n    my @nums = grep {/\\d/} @chars;\n    my @letters = grep {/\\D/} @chars;\n    return join('', @letters, @nums);\n}"
  ]
}
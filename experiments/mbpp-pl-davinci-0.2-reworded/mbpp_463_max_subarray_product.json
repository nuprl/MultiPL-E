{
  "name": "mbpp_463_max_subarray_product",
  "language": "pl",
  "prompt": "# Write a function to find the maximum product subarray of the given array.\nsub max_subarray_product {\n    my($arr) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_463_max_subarray_product.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&max_subarray_product;\n        if(eq_deeply($candidate->([1, -2, -3, 0, 7, -8, -2]),112)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([6, -3, -10, 0, 2]),180)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2, -40, 0, -2, -3]),80)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_ending_here = $arr->[0];\n    my $min_ending_here = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        $max_ending_here = max($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $min_ending_here = min($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $max_product = max($max_product, $max_ending_here);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_ending_here = $arr->[0];\n    my $min_ending_here = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1..$#$arr) {\n        my $num = $arr->[$i];\n        $max_ending_here = max($num, $max_ending_here * $num, $min_ending_here * $num);\n        $min_ending_here = min($num, $max_ending_here * $num, $min_ending_here * $num);\n        $max_so_far = max($max_so_far, $max_ending_here);\n        $min_so_far = min($min_so_far, $min_ending_here);\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_ending_here = $arr->[0];\n    my $min_ending_here = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        my $cur = $arr->[$i];\n        $max_ending_here = max($cur, $cur * $max_so_far, $cur * $min_so_far);\n        $min_ending_here = min($cur, $cur * $max_so_far, $cur * $min_so_far);\n        $max_so_far = $max_ending_here;\n        $min_so_far = $min_ending_here;\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_ending_here = $arr->[0];\n    my $min_ending_here = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        $max_ending_here = max($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $min_ending_here = min($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $max_product = max($max_product, $max_ending_here);\n    }\n    return $max_product;\n}",
    "    my($max_so_far, $min_so_far, $max_ending_here, $min_ending_here, $max_product) = (1, 1, 1, 1, 0);\n    for my $i (0..$#$arr) {\n        if ($arr->[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr->[$i];\n            $min_ending_here = min($min_ending_here * $arr->[$i], 1);\n        } elsif ($arr->[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            my $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr->[$i], 1);\n            $min_ending_here = $temp * $arr->[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    return $max_so_far;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_product = $arr->[0];",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        my $curr = $arr->[$i];\n        my $max_candidate = $max_so_far * $curr;\n        my $min_candidate = $min_so_far * $curr;\n        $max_so_far = max($curr, $max_candidate, $min_candidate);\n        $min_so_far = min($curr, $max_candidate, $min_candidate);\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        my $curr = $arr->[$i];\n        my $max_here = max($curr, $max_so_far * $curr, $min_so_far * $curr);\n        my $min_here = min($curr, $max_so_far * $curr, $min_so_far * $curr);\n        $max_so_far = $max_here;\n        $min_so_far = $min_here;\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = 1;\n    my $min_so_far = 1;\n    my $max_ending_here = 1;\n    my $max_product = 1;\n    for my $i (0 .. $#$arr) {\n        if ($arr->[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr->[$i];\n            $min_so_far = $min_so_far * $arr->[$i];\n        }\n        elsif ($arr->[$i] == 0) {\n            $max_ending_here = 1;\n            $min_so_far = 1;\n        }\n        else {\n            my $temp = $max_ending_here;\n            $max_ending_here = max($min_so_far * $arr->[$i], 1);\n            $min_so_far = $temp * $arr->[$i];\n        }\n        if ($max_ending_here > $max_product) {\n            $max_product = $max_ending_here;\n        }\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1..$#$arr) {\n        my $curr = $arr->[$i];\n        my $max_copy = $max_so_far;\n        $max_so_far = max($curr, $max_so_far * $curr, $min_so_far * $curr);\n        $min_so_far = min($curr, $max_copy * $curr, $min_so_far * $curr);\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_ending_here = $arr->[0];\n    my $min_ending_here = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        if ($arr->[$i] > 0) {\n            $max_ending_here = max($arr->[$i], $max_ending_here * $arr->[$i]);\n            $min_ending_here = min($arr->[$i], $min_ending_here * $arr->[$i]);\n        } else {\n            $max_ending_here = max($arr->[$i], $min_ending_here * $arr->[$i]);\n            $min_ending_here = min($arr->[$i], $max_ending_here * $arr->[$i]);\n        }\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_ending_here = $arr->[0];\n    my $min_ending_here = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1..$#$arr) {\n        if ($arr->[$i] > 0) {\n            $max_ending_here = max($arr->[$i], $max_ending_here * $arr->[$i]);\n            $min_ending_here = min($arr->[$i], $min_ending_here * $arr->[$i]);\n        }\n        else {\n            $max_ending_here = max($arr->[$i], $min_ending_here * $arr->[$i]);\n            $min_ending_here = min($arr->[$i], $max_ending_here * $arr->[$i]);\n        }\n        $max_product = max($max_product, $max_ending_here);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_ending_here = $arr->[0];\n    my $min_ending_here = $arr->[0];\n    my $max_product = $arr->[0];\n    for (my $i = 1; $i < scalar @$arr; $i++) {\n        $max_ending_here = max($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $min_ending_here = min($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $max_product = max($max_product, $max_ending_here);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_ending_here = $arr->[0];\n    my $min_ending_here = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        $max_ending_here = max($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $min_ending_here = min($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n        $min_so_far = min($min_so_far, $min_ending_here);\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "    my($max_ending_here, $min_ending_here, $max_so_far) = (1, 1, 1);\n    for my $i (0 .. $#$arr) {\n        if ($arr->[$i] > 0) {\n            $max_ending_here *= $arr->[$i];\n            $min_ending_here = min($min_ending_here * $arr->[$i], 1);\n        } elsif ($arr->[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            my $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr->[$i], 1);\n            $min_ending_here = $temp * $arr->[$i];\n        }\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}",
    "    my $max_ending_here = 1;\n    my $min_ending_here = 1;\n    my $max_so_far = 1;\n    my $size = scalar @$arr;\n    for (my $i = 0; $i < $size; $i++) {\n        if ($arr->[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr->[$i];\n            $min_ending_here = min($min_ending_here * $arr->[$i], 1);\n        }\n        elsif ($arr->[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        }\n        else {\n            my $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr->[$i], 1);\n            $min_ending_here = $temp * $arr->[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    return $max_so_far;\n}",
    "    my $max_product = $arr->[0];\n    my $min_product = $arr->[0];\n    my $max_so_far = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        my $curr = $arr->[$i];\n        my $temp_max = $max_product;\n        $max_product = max($curr, $max_product * $curr, $min_product * $curr);\n        $min_product = min($curr, $temp_max * $curr, $min_product * $curr);\n        $max_so_far = max($max_so_far, $max_product);\n    }\n    return $max_so_far;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_ending_here = $arr->[0];\n    my $min_ending_here = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        $max_ending_here = max($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $min_ending_here = min($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $max_product = max($max_product, $max_ending_here);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        my $curr = $arr->[$i];\n        my $max_candidate = $max_so_far * $curr;\n        my $min_candidate = $min_so_far * $curr;\n        $max_so_far = max($curr, $max_candidate, $min_candidate);\n        $min_so_far = min($curr, $max_candidate, $min_candidate);\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1..$#$arr) {\n        my $curr = $arr->[$i];\n        my $max_candidate = max($curr, $max_so_far * $curr, $min_so_far * $curr);\n        my $min_candidate = min($curr, $max_so_far * $curr, $min_so_far * $curr);\n        $max_so_far = $max_candidate;\n        $min_so_far = $min_candidate;\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_ending_here = $arr->[0];\n    my $min_ending_here = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        my $curr = $arr->[$i];\n        $max_ending_here = max($curr, $max_ending_here * $curr, $min_ending_here * $curr);\n        $min_ending_here = min($curr, $max_ending_here * $curr, $min_ending_here * $curr);\n        $max_so_far = max($max_so_far, $max_ending_here);\n        $min_so_far = min($min_so_far, $min_ending_here);\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = 1;\n    my $min_so_far = 1;\n    my $max_ending_here = 1;\n    my $max_product = 0;",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_product = $arr->[0];\n    for(my $i = 1; $i < scalar(@$arr); $i++) {\n        my $temp = $max_so_far;\n        $max_so_far = max($arr->[$i], $max_so_far * $arr->[$i], $min_so_far * $arr->[$i]);\n        $min_so_far = min($arr->[$i], $temp * $arr->[$i], $min_so_far * $arr->[$i]);\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_ending_here = $arr->[0];\n    my $min_ending_here = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        my $num = $arr->[$i];\n        $max_ending_here = max($num, $max_ending_here * $num, $min_ending_here * $num);\n        $min_ending_here = min($num, $max_ending_here * $num, $min_ending_here * $num);\n        $max_product = max($max_product, $max_ending_here);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_ending_here = $arr->[0];\n    my $min_ending_here = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        if ($arr->[$i] > 0) {\n            $max_ending_here = max($arr->[$i], $max_ending_here * $arr->[$i]);\n            $min_ending_here = min($arr->[$i], $min_ending_here * $arr->[$i]);\n        } else {\n            $max_ending_here = max($arr->[$i], $min_ending_here * $arr->[$i]);\n            $min_ending_here = min($arr->[$i], $max_ending_here * $arr->[$i]);\n        }\n        $max_product = max($max_product, $max_ending_here);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_ending_here = $arr->[0];\n    my $min_ending_here = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        $max_ending_here = max($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $min_ending_here = min($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $max_product = max($max_product, $max_ending_here);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_ending_here = $arr->[0];\n    my $min_ending_here = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        $max_ending_here = max($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $min_ending_here = min($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $max_product = max($max_product, $max_ending_here);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_ending_here = $arr->[0];\n    my $min_ending_here = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        $max_ending_here = max($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $min_ending_here = min($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $max_product = max($max_product, $max_ending_here);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        my $curr = $arr->[$i];\n        my $temp_max = $max_so_far;\n        $max_so_far = max($curr, $max_so_far * $curr, $min_so_far * $curr);\n        $min_so_far = min($curr, $temp_max * $curr, $min_so_far * $curr);\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_ending_here = $arr->[0];\n    my $min_ending_here = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        $max_ending_here = max($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $min_ending_here = min($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $max_product = max($max_product, $max_ending_here);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_ending_here = $arr->[0];\n    my $min_ending_here = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        $max_ending_here = max($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $min_ending_here = min($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1..$#$arr) {\n        my $curr = $arr->[$i];\n        my $max_candidate = $max_so_far * $curr;\n        my $min_candidate = $min_so_far * $curr;\n        $max_so_far = max($curr, $max_candidate, $min_candidate);\n        $min_so_far = min($curr, $max_candidate, $min_candidate);\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_ending_here = $arr->[0];\n    my $min_ending_here = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1..$#$arr) {\n        if ($arr->[$i] > 0) {\n            $max_ending_here = max($arr->[$i], $max_ending_here * $arr->[$i]);\n            $min_ending_here = min($arr->[$i], $min_ending_here * $arr->[$i]);\n        } else {\n            $max_ending_here = max($arr->[$i], $min_ending_here * $arr->[$i]);\n            $min_ending_here = min($arr->[$i], $max_ending_here * $arr->[$i]);\n        }\n        $max_product = max($max_product, $max_ending_here);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_ending_here = $arr->[0];\n    my $min_ending_here = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        my $curr = $arr->[$i];\n        $max_ending_here = max($curr, $max_ending_here * $curr, $min_ending_here * $curr);\n        $min_ending_here = min($curr, $max_ending_here * $curr, $min_ending_here * $curr);\n        $max_so_far = max($max_so_far, $max_ending_here);\n        $min_so_far = min($min_so_far, $min_ending_here);\n        $max_product = max($max_product, $max_so_far, $min_so_far);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_product = $arr->[0];",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        my $curr = $arr->[$i];\n        my $max_copy = $max_so_far;\n        $max_so_far = max($curr, $max_so_far * $curr, $min_so_far * $curr);\n        $min_so_far = min($curr, $max_copy * $curr, $min_so_far * $curr);\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "    my $max_ending_here = 1;\n    my $min_ending_here = 1;\n    my $max_so_far = 1;\n    my $size = scalar(@$arr);\n    for (my $i = 0; $i < $size; $i++) {\n        if ($arr->[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr->[$i];\n            $min_ending_here = min($min_ending_here * $arr->[$i], 1);\n        }\n        elsif ($arr->[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        }\n        else {\n            my $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr->[$i], 1);\n            $min_ending_here = $temp * $arr->[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    return $max_so_far;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_ending_here = $arr->[0];\n    my $min_ending_here = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        $max_ending_here = max($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $min_ending_here = min($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $max_product = max($max_product, $max_ending_here);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1..$#$arr) {\n        my $curr = $arr->[$i];\n        my $max_copy = $max_so_far;\n        $max_so_far = max($curr, $max_so_far * $curr, $min_so_far * $curr);\n        $min_so_far = min($curr, $max_copy * $curr, $min_so_far * $curr);\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "    my $max_ending_here = 1;\n    my $min_ending_here = 1;\n    my $max_so_far = 1;\n    my $size = scalar @$arr;\n    for (my $i = 0; $i < $size; $i++) {\n        if ($arr->[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr->[$i];\n            $min_ending_here = min($min_ending_here * $arr->[$i], 1);\n        }\n        elsif ($arr->[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        }\n        else {\n            my $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr->[$i], 1);\n            $min_ending_here = $temp * $arr->[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    return $max_so_far;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_ending_here = $arr->[0];\n    my $min_ending_here = $arr->[0];\n    my $max_product = $arr->[0];",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_product = $arr->[0];\n    for (my $i = 1; $i < scalar @$arr; $i++) {\n        my $curr = $arr->[$i];\n        my $temp_max = $max_so_far;\n        $max_so_far = max($curr, $max_so_far * $curr, $min_so_far * $curr);\n        $min_so_far = min($curr, $temp_max * $curr, $min_so_far * $curr);\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        my $curr = $arr->[$i];\n        my $max_candidate = $max_so_far * $curr;\n        my $min_candidate = $min_so_far * $curr;\n        $max_so_far = max($curr, $max_candidate, $min_candidate);\n        $min_so_far = min($curr, $max_candidate, $min_candidate);\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "\n    my $max_product = $arr->[0];\n    my $min_product = $arr->[0];\n    my $result = $arr->[0];",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        my $curr = $arr->[$i];\n        my $max_copy = $max_so_far;\n        $max_so_far = max($curr, $max_so_far * $curr, $min_so_far * $curr);\n        $min_so_far = min($curr, $max_copy * $curr, $min_so_far * $curr);\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_ending_here = $arr->[0];\n    my $min_ending_here = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        $max_ending_here = max($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $min_ending_here = min($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $max_product = max($max_product, $max_ending_here);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_ending_here = $arr->[0];\n    my $min_ending_here = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        $max_ending_here = max($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $min_ending_here = min($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $max_product = max($max_product, $max_ending_here);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_ending_here = $arr->[0];\n    my $min_ending_here = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        $max_ending_here = max($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $min_ending_here = min($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n        $min_so_far = min($min_so_far, $min_ending_here);\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "    my $max_product = $arr->[0];\n    my $min_product = $arr->[0];\n    my $max_so_far = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        my $curr = $arr->[$i];\n        my $max_product_new = max($curr, $max_product * $curr, $min_product * $curr);\n        my $min_product_new = min($curr, $max_product * $curr, $min_product * $curr);\n        $max_product = $max_product_new;\n        $min_product = $min_product_new;\n        $max_so_far = max($max_so_far, $max_product);\n    }\n    return $max_so_far;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1..$#$arr) {\n        my $curr = $arr->[$i];\n        my $max_copy = $max_so_far;\n        $max_so_far = max($curr, $max_so_far * $curr, $min_so_far * $curr);\n        $min_so_far = min($curr, $max_copy * $curr, $min_so_far * $curr);\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        my $max_copy = $max_so_far;\n        $max_so_far = max($arr->[$i], $max_so_far * $arr->[$i], $min_so_far * $arr->[$i]);\n        $min_so_far = min($arr->[$i], $max_copy * $arr->[$i], $min_so_far * $arr->[$i]);\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "    my $max_ending_here = 1;\n    my $min_ending_here = 1;\n    my $max_so_far = 1;\n    my $size = scalar @$arr;\n    for (my $i = 0; $i < $size; $i++) {\n        if ($arr->[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr->[$i];\n            $min_ending_here = min($min_ending_here * $arr->[$i], 1);\n        }\n        elsif ($arr->[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        }\n        else {\n            my $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr->[$i], 1);\n            $min_ending_here = $temp * $arr->[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    return $max_so_far;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_ending_here = $arr->[0];\n    my $min_ending_here = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1..$#$arr) {\n        my $curr = $arr->[$i];\n        $max_ending_here = max($curr, $max_ending_here * $curr, $min_ending_here * $curr);\n        $min_ending_here = min($curr, $max_ending_here * $curr, $min_ending_here * $curr);\n        $max_so_far = max($max_so_far, $max_ending_here);\n        $min_so_far = min($min_so_far, $min_ending_here);\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "    my $max_ending_here = 1;\n    my $min_ending_here = 1;\n    my $max_so_far = 1;\n    my $size = scalar(@$arr);\n    for (my $i = 0; $i < $size; $i++) {\n        if ($arr->[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr->[$i];\n            $min_ending_here = min($min_ending_here * $arr->[$i], 1);\n        } elsif ($arr->[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            my $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr->[$i], 1);\n            $min_ending_here = $temp * $arr->[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    return $max_so_far;\n}",
    "    my $max_ending_here = 1;\n    my $min_ending_here = 1;\n    my $max_so_far = 1;\n    my $size = scalar @$arr;\n    for (my $i = 0; $i < $size; $i++) {\n        if ($arr->[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr->[$i];\n            $min_ending_here = min($min_ending_here * $arr->[$i], 1);\n        }\n        elsif ($arr->[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        }\n        else {\n            my $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr->[$i], 1);\n            $min_ending_here = $temp * $arr->[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    return $max_so_far;\n}",
    "    my $max = $arr->[0];\n    my $min = $arr->[0];\n    my $result = $arr->[0];\n    for (my $i = 1; $i < scalar(@$arr); $i++) {\n        my $curr = $arr->[$i];\n        my $tmp_max = $max;\n        $max = max($curr, $curr * $max, $curr * $min);\n        $min = min($curr, $curr * $tmp_max, $curr * $min);\n        $result = max($result, $max);\n    }\n    return $result;\n}",
    "    my $max_ending_here = 1;\n    my $min_ending_here = 1;\n    my $max_so_far = 1;\n    my $size = scalar(@$arr);\n    for(my $i = 0; $i < $size; $i++) {\n        if($arr->[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr->[$i];\n            $min_ending_here = min($min_ending_here * $arr->[$i], 1);\n        }\n        elsif($arr->[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        }\n        else {\n            my $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr->[$i], 1);\n            $min_ending_here = $temp * $arr->[$i];\n        }\n        if($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    return $max_so_far;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_product = $arr->[0];\n    my $i = 1;\n    while ($i < scalar(@$arr)) {\n        my $curr = $arr->[$i];\n        my $temp_max = $max_so_far;\n        $max_so_far = max($curr, $curr * $max_so_far, $curr * $min_so_far);\n        $min_so_far = min($curr, $curr * $temp_max, $curr * $min_so_far);\n        $max_product = max($max_product, $max_so_far);\n        $i++;\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_ending_here = $arr->[0];\n    my $min_ending_here = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1..$#$arr) {\n        $max_ending_here = max($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $min_ending_here = min($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $max_product = max($max_product, $max_ending_here);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_ending_here = $arr->[0];\n    my $min_ending_here = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        $max_ending_here = max($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $min_ending_here = min($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $max_product = max($max_product, $max_ending_here);\n    }\n    return $max_product;\n}",
    "    my $max_ending_here = 1;\n    my $min_ending_here = 1;\n    my $max_so_far = 1;\n    my $n = scalar @$arr;\n    for (my $i = 0; $i < $n; $i++) {\n        if ($arr->[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr->[$i];\n            $min_ending_here = min($min_ending_here * $arr->[$i], 1);\n        }\n        elsif ($arr->[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        }\n        else {\n            my $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr->[$i], 1);\n            $min_ending_here = $temp * $arr->[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    return $max_so_far;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_product = $arr->[0];",
    "    my($max, $min, $result) = ($arr->[0], $arr->[0], $arr->[0]);\n    for my $i (1 .. $#$arr) {\n        my($curr) = $arr->[$i];\n        if ($curr < 0) {\n            ($max, $min) = ($min, $max);\n        }\n        $max = max($curr, $max * $curr);\n        $min = min($curr, $min * $curr);\n        $result = max($result, $max);\n    }\n    return $result;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        my $curr = $arr->[$i];\n        my $max_prev = $max_so_far;\n        $max_so_far = max($curr, $curr * $max_so_far, $curr * $min_so_far);\n        $min_so_far = min($curr, $curr * $max_prev, $curr * $min_so_far);\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "    my $max = $arr->[0];\n    my $min = $arr->[0];\n    my $result = $arr->[0];\n    for(my $i = 1; $i < scalar @$arr; $i++) {\n        my $temp = $max;\n        $max = max($arr->[$i], $max * $arr->[$i], $min * $arr->[$i]);\n        $min = min($arr->[$i], $temp * $arr->[$i], $min * $arr->[$i]);\n        $result = max($result, $max);\n    }\n    return $result;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        my $curr = $arr->[$i];\n        my $max_candidate = $max_so_far * $curr;\n        my $min_candidate = $min_so_far * $curr;\n        $max_so_far = max($curr, $max_candidate, $min_candidate);\n        $min_so_far = min($curr, $max_candidate, $min_candidate);\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = 1;\n    my $min_so_far = 1;\n    my $max_ending_here = 1;\n    my $max_product = 0;\n    for my $i (0 .. $#$arr) {\n        if ($arr->[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr->[$i];\n            $min_so_far = min($min_so_far * $arr->[$i], 1);\n        }\n        elsif ($arr->[$i] == 0) {\n            $max_ending_here = 1;\n            $min_so_far = 1;\n        }\n        else {\n            my $temp = $max_ending_here;\n            $max_ending_here = max($min_so_far * $arr->[$i], 1);\n            $min_so_far = $temp * $arr->[$i];\n        }\n        if ($max_ending_here > $max_product) {\n            $max_product = $max_ending_here;\n        }\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_ending_here = $arr->[0];\n    my $min_ending_here = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1..$#$arr) {\n        my $curr = $arr->[$i];\n        $max_ending_here = max($curr, $curr * $max_so_far, $curr * $min_so_far);\n        $min_ending_here = min($curr, $curr * $max_so_far, $curr * $min_so_far);\n        $max_so_far = $max_ending_here;\n        $min_so_far = $min_ending_here;\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "    my $max_product = $arr->[0];\n    my $min_product = $arr->[0];\n    my $max_so_far = $arr->[0];\n    for my $i (1..$#$arr) {\n        my $curr = $arr->[$i];\n        my $temp_max = $max_product;\n        $max_product = max($curr, $curr * $max_product, $curr * $min_product);\n        $min_product = min($curr, $curr * $temp_max, $curr * $min_product);\n        $max_so_far = max($max_so_far, $max_product);\n    }\n    return $max_so_far;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_ending_here = $arr->[0];\n    my $min_ending_here = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        $max_ending_here = max($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $min_ending_here = min($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n        $min_so_far = min($min_so_far, $min_ending_here);\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "    my $max_product = $arr->[0];\n    my $min_product = $arr->[0];\n    my $max_so_far = $arr->[0];",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1..$#$arr) {\n        my $curr = $arr->[$i];\n        my $max_copy = $max_so_far;\n        $max_so_far = max($curr, $max_so_far * $curr, $min_so_far * $curr);\n        $min_so_far = min($curr, $max_copy * $curr, $min_so_far * $curr);\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1..$#$arr) {\n        my $curr = $arr->[$i];\n        my $max_candidate = $max_so_far * $curr;\n        my $min_candidate = $min_so_far * $curr;\n        $max_so_far = max($curr, $max_candidate, $min_candidate);\n        $min_so_far = min($curr, $max_candidate, $min_candidate);\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1..$#$arr) {\n        my $curr = $arr->[$i];\n        my $max_candidate = $max_so_far * $curr;\n        my $min_candidate = $min_so_far * $curr;\n        $max_so_far = max($curr, $max_candidate, $min_candidate);\n        $min_so_far = min($curr, $max_candidate, $min_candidate);\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_ending_here = $arr->[0];\n    my $min_ending_here = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        $max_ending_here = max($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $min_ending_here = min($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n        $min_so_far = min($min_so_far, $min_ending_here);\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_ending_here = $arr->[0];\n    my $min_ending_here = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1..$#$arr) {\n        if ($arr->[$i] > 0) {\n            $max_ending_here = max($arr->[$i], $max_ending_here * $arr->[$i]);\n            $min_ending_here = min($arr->[$i], $min_ending_here * $arr->[$i]);\n        } else {\n            $max_ending_here = max($arr->[$i], $min_ending_here * $arr->[$i]);\n            $min_ending_here = min($arr->[$i], $max_ending_here * $arr->[$i]);\n        }\n        $max_product = max($max_product, $max_ending_here);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_ending_here = $arr->[0];\n    my $min_ending_here = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1..$#$arr) {\n        my $num = $arr->[$i];\n        $max_ending_here = max($num, $max_ending_here * $num, $min_ending_here * $num);\n        $min_ending_here = min($num, $max_ending_here * $num, $min_ending_here * $num);\n        $max_product = max($max_product, $max_ending_here);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        my $curr = $arr->[$i];\n        my $max_copy = $max_so_far;\n        $max_so_far = max($curr, $max_so_far * $curr, $min_so_far * $curr);\n        $min_so_far = min($curr, $max_copy * $curr, $min_so_far * $curr);\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        my $curr = $arr->[$i];\n        my $max_candidate = max($curr, $max_so_far * $curr, $min_so_far * $curr);\n        my $min_candidate = min($curr, $max_so_far * $curr, $min_so_far * $curr);\n        $max_so_far = $max_candidate;\n        $min_so_far = $min_candidate;\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "    my $max = $arr->[0];\n    my $min = $arr->[0];\n    my $result = $arr->[0];\n    for(my $i = 1; $i < scalar(@$arr); $i++) {\n        my $temp = $max;\n        $max = max($arr->[$i], $max * $arr->[$i], $min * $arr->[$i]);\n        $min = min($arr->[$i], $temp * $arr->[$i], $min * $arr->[$i]);\n        $result = max($result, $max);\n    }\n    return $result;\n}",
    "    my $max_ending_here = 1;\n    my $min_ending_here = 1;\n    my $max_so_far = 1;\n    my $size = scalar @{$arr};\n    for(my $i = 0; $i < $size; $i++) {\n        if($arr->[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr->[$i];\n            $min_ending_here = min($min_ending_here * $arr->[$i], 1);\n        }\n        elsif($arr->[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        }\n        else {\n            my $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr->[$i], 1);\n            $min_ending_here = $temp * $arr->[$i];\n        }\n        if($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    return $max_so_far;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1..$#$arr) {\n        my $curr = $arr->[$i];\n        my $max_here = max($curr, $max_so_far * $curr, $min_so_far * $curr);\n        my $min_here = min($curr, $max_so_far * $curr, $min_so_far * $curr);\n        $max_so_far = $max_here;\n        $min_so_far = $min_here;\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "    my($max, $min, $result) = ($arr->[0], $arr->[0], $arr->[0]);\n    for my $i (1..$#$arr) {\n        my($curr) = $arr->[$i];\n        my($temp_max) = $max * $curr;\n        my($temp_min) = $min * $curr;\n        $max = max($curr, $temp_max, $temp_min);\n        $min = min($curr, $temp_max, $temp_min);\n        $result = max($result, $max);\n    }\n    return $result;\n}",
    "    my $max_product = $arr->[0];\n    my $min_product = $arr->[0];\n    my $max_so_far = $arr->[0];\n    for (my $i = 1; $i < @$arr; $i++) {\n        my $curr = $arr->[$i];\n        my $temp_max = $max_product;\n        $max_product = max($curr, $max_product * $curr, $min_product * $curr);\n        $min_product = min($curr, $temp_max * $curr, $min_product * $curr);\n        $max_so_far = max($max_so_far, $max_product);\n    }\n    return $max_so_far;\n}",
    "    my $max_ending_here = 1;\n    my $min_ending_here = 1;\n    my $max_so_far = 1;\n    my $n = scalar @$arr;\n    for (my $i = 0; $i < $n; $i++) {\n        if ($arr->[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr->[$i];\n            $min_ending_here = min($min_ending_here * $arr->[$i], 1);\n        } elsif ($arr->[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            my $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr->[$i], 1);\n            $min_ending_here = $temp * $arr->[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    return $max_so_far;\n}",
    "    my $max_product = $arr->[0];\n    my $min_product = $arr->[0];\n    my $max_so_far = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        my $curr = $arr->[$i];\n        my $temp_max = $max_product;\n        $max_product = max($curr, $max_product * $curr, $min_product * $curr);\n        $min_product = min($curr, $temp_max * $curr, $min_product * $curr);\n        $max_so_far = max($max_so_far, $max_product);\n    }\n    return $max_so_far;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1..$#$arr) {\n        my $curr = $arr->[$i];\n        my $max_candidate = $max_so_far * $curr;\n        my $min_candidate = $min_so_far * $curr;\n        $max_so_far = max($curr, $max_candidate, $min_candidate);\n        $min_so_far = min($curr, $max_candidate, $min_candidate);\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        my $curr = $arr->[$i];\n        my $max_candidate = $max_so_far * $curr;\n        my $min_candidate = $min_so_far * $curr;\n        $max_so_far = max($curr, $max_candidate, $min_candidate);\n        $min_so_far = min($curr, $max_candidate, $min_candidate);\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_product = $arr->[0];",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_ending_here = $arr->[0];\n    my $min_ending_here = $arr->[0];\n    my $max_product = $arr->[0];\n    for (my $i = 1; $i < scalar @$arr; $i++) {\n        if ($arr->[$i] > 0) {\n            $max_ending_here = max($max_ending_here * $arr->[$i], $arr->[$i]);\n            $min_ending_here = min($min_ending_here * $arr->[$i], $arr->[$i]);\n        }\n        elsif ($arr->[$i] == 0) {\n            $max_ending_here = 0;\n            $min_ending_here = 0;\n        }\n        else {\n            my $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr->[$i], $arr->[$i]);\n            $min_ending_here = min($temp * $arr->[$i], $arr->[$i]);\n        }\n        $max_product = max($max_product, $max_ending_here);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $max_ending_here = $arr->[0];\n    my $min_ending_here = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        my $temp = $max_ending_here;\n        $max_ending_here = max($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $min_ending_here = min($arr->[$i], $temp * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}",
    "    my $max_product = $arr->[0];\n    my $min_product = $arr->[0];\n    my $max_so_far = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        my $curr = $arr->[$i];\n        my $temp_max = $max_product;\n        $max_product = max($curr, $max_product * $curr, $min_product * $curr);\n        $min_product = min($curr, $temp_max * $curr, $min_product * $curr);\n        $max_so_far = max($max_so_far, $max_product);\n    }\n    return $max_so_far;\n}",
    "    my $max_product = $arr->[0];\n    my $min_product = $arr->[0];\n    my $max_so_far = $arr->[0];\n    for my $i (1..$#$arr) {\n        my $curr = $arr->[$i];\n        my $temp_max = $max_product;\n        $max_product = max($curr, $max_product * $curr, $min_product * $curr);\n        $min_product = min($curr, $temp_max * $curr, $min_product * $curr);\n        $max_so_far = max($max_so_far, $max_product);\n    }\n    return $max_so_far;\n}",
    "    my $max_so_far = 1;\n    my $min_so_far = 1;\n    my $max_ending_here = 1;\n    my $max_product = 0;\n    for my $i (0 .. $#$arr) {\n        if ($arr->[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr->[$i];\n            $min_so_far = min($min_so_far * $arr->[$i], 1);\n        } elsif ($arr->[$i] == 0) {\n            $max_ending_here = 1;\n            $min_so_far = 1;\n        } else {\n            my $temp = $max_ending_here;\n            $max_ending_here = max($min_so_far * $arr->[$i], 1);\n            $min_so_far = $temp * $arr->[$i];\n        }\n        if ($max_ending_here > $max_product) {\n            $max_product = $max_ending_here;\n        }\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_ending_here = $arr->[0];\n    my $min_ending_here = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. @$arr - 1) {\n        $max_ending_here = max($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $min_ending_here = min($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $max_product = max($max_product, $max_ending_here);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        my $curr = $arr->[$i];\n        my $max_candidate = $max_so_far * $curr;\n        my $min_candidate = $min_so_far * $curr;\n        $max_so_far = max($curr, $max_candidate, $min_candidate);\n        $min_so_far = min($curr, $max_candidate, $min_candidate);\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "    my $max_ending_here = 1;\n    my $min_ending_here = 1;\n    my $max_so_far = 1;\n    my $n = scalar(@$arr);\n    for (my $i = 0; $i < $n; $i++) {\n        if ($arr->[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr->[$i];\n            $min_ending_here = min($min_ending_here * $arr->[$i], 1);\n        }\n        elsif ($arr->[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        }\n        else {\n            my $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr->[$i], 1);\n            $min_ending_here = $temp * $arr->[$i];\n        }\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_ending_here = $arr->[0];\n    my $min_ending_here = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1..$#$arr) {\n        my $num = $arr->[$i];\n        $max_ending_here = max($num, $max_ending_here * $num, $min_ending_here * $num);\n        $min_ending_here = min($num, $max_ending_here * $num, $min_ending_here * $num);\n        $max_product = max($max_product, $max_ending_here);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_ending_here = $arr->[0];\n    my $min_ending_here = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        $max_ending_here = max($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $min_ending_here = min($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $max_product = max($max_product, $max_ending_here);\n    }\n    return $max_product;\n}",
    "    my $max_ending_here = 1;\n    my $min_ending_here = 1;\n    my $max_so_far = 1;\n    my $i = 0;\n    my $n = scalar @$arr;\n    while ($i < $n) {\n        if ($arr->[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr->[$i];\n            $min_ending_here = min($min_ending_here * $arr->[$i], 1);\n        } elsif ($arr->[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            my $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr->[$i], 1);\n            $min_ending_here = $temp * $arr->[$i];\n        }\n        $max_so_far = max($max_so_far, $max_ending_here);\n        $i++;\n    }\n    return $max_so_far;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        my $curr = $arr->[$i];\n        my $max_copy = $max_so_far;\n        $max_so_far = max($curr, $max_so_far * $curr, $min_so_far * $curr);\n        $min_so_far = min($curr, $max_copy * $curr, $min_so_far * $curr);\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "    my $max_ending_here = 1;\n    my $min_ending_here = 1;\n    my $max_so_far = 1;\n    for my $i (0 .. $#$arr) {\n        if ($arr->[$i] > 0) {\n            $max_ending_here *= $arr->[$i];\n            $min_ending_here = min($min_ending_here * $arr->[$i], 1);\n        }\n        elsif ($arr->[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        }\n        else {\n            my $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr->[$i], 1);\n            $min_ending_here = $temp * $arr->[$i];\n        }\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        my $curr = $arr->[$i];\n        my $max_candidate = $max_so_far * $curr;\n        my $min_candidate = $min_so_far * $curr;\n        $max_so_far = max($curr, $max_candidate, $min_candidate);\n        $min_so_far = min($curr, $max_candidate, $min_candidate);\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "    my $max_product = $arr->[0];\n    my $min_product = $arr->[0];\n    my $max_so_far = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        my $curr = $arr->[$i];\n        my $max_product_new = max($curr, $max_product * $curr, $min_product * $curr);\n        my $min_product_new = min($curr, $max_product * $curr, $min_product * $curr);\n        $max_product = $max_product_new;\n        $min_product = $min_product_new;\n        $max_so_far = max($max_so_far, $max_product);\n    }\n    return $max_so_far;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_product = $arr->[0];\n    my $i = 1;\n    while ($i < scalar(@$arr)) {\n        if ($arr->[$i] < 0) {\n            my $temp = $max_so_far;\n            $max_so_far = $min_so_far;\n            $min_so_far = $temp;\n        }\n        $max_so_far = max($arr->[$i], $max_so_far * $arr->[$i]);\n        $min_so_far = min($arr->[$i], $min_so_far * $arr->[$i]);\n        $max_product = max($max_product, $max_so_far);\n        $i++;\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        my $curr = $arr->[$i];\n        my $max_candidate = $max_so_far * $curr;\n        my $min_candidate = $min_so_far * $curr;\n        $max_so_far = max($curr, $max_candidate, $min_candidate);\n        $min_so_far = min($curr, $max_candidate, $min_candidate);\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "    my $max_product = $arr->[0];\n    my $min_product = $arr->[0];\n    my $max_so_far = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        my $curr = $arr->[$i];\n        my $max_product_new = max($curr, $max_product * $curr, $min_product * $curr);\n        my $min_product_new = min($curr, $max_product * $curr, $min_product * $curr);\n        $max_product = $max_product_new;\n        $min_product = $min_product_new;\n        $max_so_far = max($max_so_far, $max_product);\n    }\n    return $max_so_far;\n}",
    "    my $max_product = $arr->[0];\n    my $min_product = $arr->[0];\n    my $max_so_far = $arr->[0];\n    for my $i (1..$#$arr) {\n        my $curr = $arr->[$i];\n        my $max_product_new = max($curr, $max_product * $curr, $min_product * $curr);\n        my $min_product_new = min($curr, $max_product * $curr, $min_product * $curr);\n        $max_product = $max_product_new;\n        $min_product = $min_product_new;\n        $max_so_far = max($max_so_far, $max_product);\n    }\n    return $max_so_far;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_ending_here = $arr->[0];\n    my $min_ending_here = $arr->[0];\n    my $max_product = $arr->[0];\n    for (my $i = 1; $i < scalar(@$arr); $i++) {\n        $max_ending_here = max($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $min_ending_here = min($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $max_product = max($max_product, $max_ending_here);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        my $curr = $arr->[$i];\n        my $temp_max = $max_so_far;\n        $max_so_far = max($curr, $max_so_far * $curr, $min_so_far * $curr);\n        $min_so_far = min($curr, $temp_max * $curr, $min_so_far * $curr);\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        my $curr = $arr->[$i];\n        my $max_candidate = $max_so_far * $curr;\n        my $min_candidate = $min_so_far * $curr;\n        $max_so_far = max($curr, $max_candidate, $min_candidate);\n        $min_so_far = min($curr, $max_candidate, $min_candidate);\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "    my $max_ending_here = 1;\n    my $min_ending_here = 1;\n    my $max_so_far = 1;\n    my $n = scalar @$arr;\n    for my $i (0..$n-1) {\n        if ($arr->[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr->[$i];\n            $min_ending_here = min($min_ending_here * $arr->[$i], 1);\n        }\n        elsif ($arr->[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        }\n        else {\n            my $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr->[$i], 1);\n            $min_ending_here = $temp * $arr->[$i];\n        }\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_ending_here = $arr->[0];\n    my $min_ending_here = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        $max_ending_here = max($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $min_ending_here = min($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $max_product = max($max_product, $max_ending_here);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_ending_here = $arr->[0];\n    my $min_ending_here = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1..$#$arr) {\n        $max_ending_here = max($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $min_ending_here = min($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $max_product = max($max_product, $max_ending_here);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        my $curr = $arr->[$i];\n        my $max_candidate = $max_so_far * $curr;\n        my $min_candidate = $min_so_far * $curr;\n        $max_so_far = max($curr, $max_candidate, $min_candidate);\n        $min_so_far = min($curr, $max_candidate, $min_candidate);\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "    my $max = $arr->[0];\n    my $min = $arr->[0];\n    my $result = $arr->[0];\n    for (my $i = 1; $i < scalar @$arr; $i++) {\n        my $cur = $arr->[$i];\n        my $tmp_max = $max;\n        $max = max($cur, $cur * $max, $cur * $min);\n        $min = min($cur, $cur * $tmp_max, $cur * $min);\n        $result = max($result, $max);\n    }\n    return $result;\n}",
    "    my $max = $arr->[0];\n    my $min = $arr->[0];\n    my $max_so_far = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        my $curr = $arr->[$i];\n        my $temp_max = $max;\n        $max = max($curr, $max * $curr, $min * $curr);\n        $min = min($curr, $min * $curr, $temp_max * $curr);\n        $max_so_far = max($max_so_far, $max);\n    }\n    return $max_so_far;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_ending_here = $arr->[0];\n    my $min_ending_here = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        $max_ending_here = max($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $min_ending_here = min($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n        $min_so_far = min($min_so_far, $min_ending_here);\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_ending_here = $arr->[0];\n    my $min_ending_here = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        $max_ending_here = max($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $min_ending_here = min($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $max_product = max($max_product, $max_ending_here);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        my $curr = $arr->[$i];\n        my $max_copy = $max_so_far;\n        $max_so_far = max($curr, $max_so_far * $curr, $min_so_far * $curr);\n        $min_so_far = min($curr, $max_copy * $curr, $min_so_far * $curr);\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_ending_here = $arr->[0];\n    my $min_ending_here = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1..$#$arr) {\n        if ($arr->[$i] > 0) {\n            $max_ending_here = max($arr->[$i], $max_ending_here * $arr->[$i]);\n            $min_ending_here = min($arr->[$i], $min_ending_here * $arr->[$i]);\n        } else {\n            $max_ending_here = max($arr->[$i], $min_ending_here * $arr->[$i]);\n            $min_ending_here = min($arr->[$i], $max_ending_here * $arr->[$i]);\n        }\n        $max_product = max($max_product, $max_ending_here);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_ending_here = $arr->[0];\n    my $min_ending_here = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1..$#$arr) {\n        $max_ending_here = max($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $min_ending_here = min($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $max_product = max($max_product, $max_ending_here);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        my $curr = $arr->[$i];\n        my $max_product_ending_here = max($curr, $max_so_far * $curr, $min_so_far * $curr);\n        my $min_product_ending_here = min($curr, $max_so_far * $curr, $min_so_far * $curr);\n        $max_product = max($max_product, $max_product_ending_here);\n        $max_so_far = $max_product_ending_here;\n        $min_so_far = $min_product_ending_here;\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        my $curr = $arr->[$i];\n        my $max_copy = $max_so_far;\n        $max_so_far = max($curr, $max_so_far * $curr, $min_so_far * $curr);\n        $min_so_far = min($curr, $max_copy * $curr, $min_so_far * $curr);\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        my $curr = $arr->[$i];\n        my $max_copy = $max_so_far;\n        $max_so_far = max($curr, $max_so_far * $curr, $min_so_far * $curr);\n        $min_so_far = min($curr, $max_copy * $curr, $min_so_far * $curr);\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_ending_here = $arr->[0];\n    my $min_ending_here = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        $max_ending_here = max($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $min_ending_here = min($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $max_product = max($max_product, $max_ending_here);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = 1;\n    my $min_so_far = 1;\n    my $max_ending_here = 1;\n    my $min_ending_here = 1;\n    my $max_product = 0;\n    for my $i (0..$#$arr) {\n        if ($arr->[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr->[$i];\n            $min_ending_here = min($min_ending_here * $arr->[$i], 1);\n        }\n        elsif ($arr->[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        }\n        else {\n            my $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr->[$i], 1);\n            $min_ending_here = $temp * $arr->[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n        if ($min_so_far > $min_ending_here) {\n            $min_so_far = $min_ending_here;\n        }\n    }\n    return $max_so_far;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        my $curr = $arr->[$i];\n        my $max_copy = $max_so_far;\n        $max_so_far = max($curr, $max_so_far * $curr, $min_so_far * $curr);\n        $min_so_far = min($curr, $max_copy * $curr, $min_so_far * $curr);\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "    my $max_product = $arr->[0];\n    my $min_product = $arr->[0];\n    my $max_so_far = $arr->[0];",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_ending_here = $arr->[0];\n    my $min_ending_here = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        $max_ending_here = max($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $min_ending_here = min($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $max_product = max($max_product, $max_ending_here);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_ending_here = $arr->[0];\n    my $min_ending_here = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        $max_ending_here = max($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $min_ending_here = min($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n        $min_so_far = min($min_so_far, $min_ending_here);\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        my $curr = $arr->[$i];\n        my $max_copy = $max_so_far;\n        $max_so_far = max($curr, $max_so_far * $curr, $min_so_far * $curr);\n        $min_so_far = min($curr, $max_copy * $curr, $min_so_far * $curr);\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "    my($max_so_far, $min_so_far, $max_ending_here, $min_ending_here, $i, $n, $res);\n    $n = scalar(@$arr);\n    $max_so_far = $min_so_far = $max_ending_here = $min_ending_here = $arr->[0];\n    $res = $arr->[0];\n    for($i = 1; $i < $n; $i++) {\n        if($arr->[$i] > 0) {\n            $max_ending_here = max($max_ending_here * $arr->[$i], $arr->[$i]);\n            $min_ending_here = min($min_ending_here * $arr->[$i], $arr->[$i]);\n        }\n        else {\n            $max_ending_here = max($min_ending_here * $arr->[$i], $arr->[$i]);\n            $min_ending_here = min($max_ending_here * $arr->[$i], $arr->[$i]);\n        }\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}",
    "    my $max_ending_here = 1;\n    my $min_ending_here = 1;\n    my $max_so_far = 1;\n    my $n = scalar(@$arr);\n    for(my $i = 0; $i < $n; $i++) {\n        if($arr->[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr->[$i];\n            $min_ending_here = min($min_ending_here * $arr->[$i], 1);\n        }\n        elsif($arr->[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        }\n        else {\n            my $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr->[$i], 1);\n            $min_ending_here = $temp * $arr->[$i];\n        }\n        if($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    return $max_so_far;\n}",
    "    my $max_so_far = 1;\n    my $min_so_far = 1;\n    my $max_ending_here = 1;\n    my $max_product = 0;\n    for my $i (0 .. $#$arr) {\n        if ($arr->[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr->[$i];\n            $min_so_far = min($min_so_far * $arr->[$i], 1);\n        }\n        elsif ($arr->[$i] == 0) {\n            $max_ending_here = 1;\n            $min_so_far = 1;\n        }\n        else {\n            my $temp = $max_ending_here;\n            $max_ending_here = max($min_so_far * $arr->[$i], 1);\n            $min_so_far = $temp * $arr->[$i];\n        }\n        if ($max_ending_here > $max_product) {\n            $max_product = $max_ending_here;\n        }\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_ending_here = $arr->[0];\n    my $min_ending_here = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        $max_ending_here = max($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $min_ending_here = min($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $max_product = max($max_product, $max_ending_here);\n    }\n    return $max_product;\n}",
    "    my($max_so_far, $min_so_far, $max_ending_here, $min_ending_here, $n) = (0, 0, 0, 0, scalar(@$arr));\n    for (my $i = 0; $i < $n; $i++) {\n        if ($arr->[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr->[$i];\n            $min_ending_here = min($min_ending_here * $arr->[$i], 1);\n        }\n        elsif ($arr->[$i] == 0) {\n            $max_ending_here = 0;\n            $min_ending_here = 0;\n        }\n        else {\n            $max_ending_here = $min_ending_here * $arr->[$i];\n            $min_ending_here = min($max_ending_here * $arr->[$i], 1);\n        }\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}",
    "    my $max_ending_here = 1;\n    my $min_ending_here = 1;\n    my $max_so_far = 1;\n    my $size = scalar @$arr;\n    for (my $i = 0; $i < $size; $i++) {\n        if ($arr->[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr->[$i];\n            $min_ending_here = min($min_ending_here * $arr->[$i], 1);\n        }\n        elsif ($arr->[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        }\n        else {\n            my $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr->[$i], 1);\n            $min_ending_here = $temp * $arr->[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    return $max_so_far;\n}",
    "    my $max_prod = $arr->[0];\n    my $min_prod = $arr->[0];\n    my $max_so_far = $arr->[0];\n    for my $i (1..$#$arr) {\n        my $curr = $arr->[$i];\n        my $max_prod_new = max($curr, $max_prod * $curr, $min_prod * $curr);\n        my $min_prod_new = min($curr, $max_prod * $curr, $min_prod * $curr);\n        $max_prod = $max_prod_new;\n        $min_prod = $min_prod_new;\n        $max_so_far = max($max_so_far, $max_prod);\n    }\n    return $max_so_far;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_ending_here = $arr->[0];\n    my $min_ending_here = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        $max_ending_here = max($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $min_ending_here = min($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $max_product = max($max_product, $max_ending_here);\n    }\n    return $max_product;\n}",
    "    my $max_ending_here = 1;\n    my $min_ending_here = 1;\n    my $max_so_far = 1;\n    my $size = scalar @$arr;\n    for (my $i = 0; $i < $size; $i++) {\n        if ($arr->[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr->[$i];\n            $min_ending_here = min($min_ending_here * $arr->[$i], 1);\n        } elsif ($arr->[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        } else {\n            my $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr->[$i], 1);\n            $min_ending_here = $temp * $arr->[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    return $max_so_far;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        my $curr = $arr->[$i];\n        my $max_curr = max($curr, $max_so_far * $curr, $min_so_far * $curr);\n        my $min_curr = min($curr, $max_so_far * $curr, $min_so_far * $curr);\n        $max_product = max($max_product, $max_curr);\n        $max_so_far = $max_curr;\n        $min_so_far = $min_curr;\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_ending_here = $arr->[0];\n    my $min_ending_here = $arr->[0];\n    my $result = $arr->[0];\n    for my $i (1..$#$arr) {\n        if ($arr->[$i] > 0) {\n            $max_ending_here = max($arr->[$i], $max_ending_here * $arr->[$i]);\n            $min_ending_here = min($arr->[$i], $min_ending_here * $arr->[$i]);\n        } else {\n            $max_ending_here = max($arr->[$i], $min_ending_here * $arr->[$i]);\n            $min_ending_here = min($arr->[$i], $max_ending_here * $arr->[$i]);\n        }\n        $result = max($result, $max_ending_here);\n    }\n    return $result;\n}",
    "    my $max_product = $arr->[0];\n    my $min_product = $arr->[0];\n    my $max_so_far = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        my $curr = $arr->[$i];\n        my $tmp_max = $max_product;\n        $max_product = max($curr, $max_product * $curr, $min_product * $curr);\n        $min_product = min($curr, $tmp_max * $curr, $min_product * $curr);\n        $max_so_far = max($max_so_far, $max_product);\n    }\n    return $max_so_far;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_ending_here = $arr->[0];\n    my $min_ending_here = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        if ($arr->[$i] > 0) {\n            $max_ending_here = max($arr->[$i], $max_ending_here * $arr->[$i]);\n            $min_ending_here = min($arr->[$i], $min_ending_here * $arr->[$i]);\n        } else {\n            $max_ending_here = max($arr->[$i], $min_ending_here * $arr->[$i]);\n            $min_ending_here = min($arr->[$i], $max_ending_here * $arr->[$i]);\n        }\n        $max_product = max($max_product, $max_ending_here);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = 1;\n    my $min_so_far = 1;\n    my $max_ending_here = 1;\n    my $max = 0;\n    for my $i (0 .. $#$arr) {\n        if ($arr->[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr->[$i];\n            $min_so_far = min($min_so_far * $arr->[$i], 1);\n        } elsif ($arr->[$i] == 0) {\n            $max_ending_here = 1;\n            $min_so_far = 1;\n        } else {\n            my $temp = $max_ending_here;\n            $max_ending_here = max($min_so_far * $arr->[$i], 1);\n            $min_so_far = $temp * $arr->[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    return $max_so_far;\n}",
    "    my $max_product = $arr->[0];\n    my $min_product = $arr->[0];\n    my $max_so_far = $arr->[0];\n    for (my $i = 1; $i < scalar @$arr; $i++) {\n        my $temp = $max_product;\n        $max_product = max($arr->[$i], $max_product * $arr->[$i], $min_product * $arr->[$i]);\n        $min_product = min($arr->[$i], $temp * $arr->[$i], $min_product * $arr->[$i]);\n        $max_so_far = max($max_so_far, $max_product);\n    }\n    return $max_so_far;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_ending_here = $arr->[0];\n    my $min_ending_here = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        $max_ending_here = max($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $min_ending_here = min($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n        $min_so_far = min($min_so_far, $min_ending_here);\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_product = $arr->[0];\n    for (my $i = 1; $i < scalar @$arr; $i++) {\n        my $curr = $arr->[$i];\n        my $temp_max = $max_so_far;\n        $max_so_far = max($curr, $curr * $max_so_far, $curr * $min_so_far);\n        $min_so_far = min($curr, $curr * $temp_max, $curr * $min_so_far);\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "    my $max_product = $arr->[0];\n    my $min_product = $arr->[0];\n    my $max_so_far = $arr->[0];\n    for my $i (1..$#$arr) {\n        my $curr = $arr->[$i];\n        my $temp_max = $max_product;\n        $max_product = max($curr, $max_product * $curr, $min_product * $curr);\n        $min_product = min($curr, $temp_max * $curr, $min_product * $curr);\n        $max_so_far = max($max_so_far, $max_product);\n    }\n    return $max_so_far;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        my $curr = $arr->[$i];\n        my $max_candidate = $max_so_far * $curr;\n        my $min_candidate = $min_so_far * $curr;\n        $max_so_far = max($curr, $max_candidate, $min_candidate);\n        $min_so_far = min($curr, $max_candidate, $min_candidate);\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_ending_here = $arr->[0];\n    my $min_ending_here = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1..$#$arr) {\n        my $curr = $arr->[$i];\n        $max_ending_here = max($curr, $max_ending_here * $curr, $min_ending_here * $curr);\n        $min_ending_here = min($curr, $max_ending_here * $curr, $min_ending_here * $curr);\n        $max_so_far = max($max_so_far, $max_ending_here);\n        $min_so_far = min($min_so_far, $min_ending_here);\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_product = $arr->[0];\n    for (my $i = 1; $i < @$arr; $i++) {\n        my $curr = $arr->[$i];\n        my $max_copy = $max_so_far;\n        $max_so_far = max($curr, $max_so_far * $curr, $min_so_far * $curr);\n        $min_so_far = min($curr, $max_copy * $curr, $min_so_far * $curr);\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "    my $max_ending_here = 1;\n    my $min_ending_here = 1;\n    my $max_so_far = 1;\n    my $n = scalar(@$arr);\n    for (my $i = 0; $i < $n; $i++) {\n        if ($arr->[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr->[$i];\n            $min_ending_here = min($min_ending_here * $arr->[$i], 1);\n        }\n        elsif ($arr->[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        }\n        else {\n            my $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr->[$i], 1);\n            $min_ending_here = $temp * $arr->[$i];\n        }\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        my $curr = $arr->[$i];\n        my $temp_max = $max_so_far;\n        $max_so_far = max($curr, $curr * $max_so_far, $curr * $min_so_far);\n        $min_so_far = min($curr, $curr * $temp_max, $curr * $min_so_far);\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_ending_here = $arr->[0];\n    my $min_ending_here = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1..$#$arr) {\n        $max_ending_here = max($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $min_ending_here = min($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $max_product = max($max_product, $max_ending_here);\n    }\n    return $max_product;\n}",
    "    my $max_product = $arr->[0];\n    my $min_product = $arr->[0];\n    my $max_so_far = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        my $curr = $arr->[$i];\n        my $temp_max = $max_product;\n        $max_product = max($curr, $curr * $max_product, $curr * $min_product);\n        $min_product = min($curr, $curr * $temp_max, $curr * $min_product);\n        $max_so_far = max($max_so_far, $max_product);\n    }\n    return $max_so_far;\n}",
    "    my($max_so_far, $min_so_far, $max_ending_here, $min_ending_here, $i, $n) = (0, 0, 0, 0, 0, scalar(@$arr));\n    for ($i = 0; $i < $n; $i++) {\n        $max_ending_here = $max_ending_here * $arr->[$i];\n        $min_ending_here = $min_ending_here * $arr->[$i];\n        if ($max_ending_here < $min_ending_here) {\n            ($max_ending_here, $min_ending_here) = ($min_ending_here, $max_ending_here);\n        }\n        if ($max_ending_here < $arr->[$i]) {\n            $max_ending_here = $arr->[$i];\n        }\n        if ($min_ending_here > $arr->[$i]) {\n            $min_ending_here = $arr->[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    return $max_so_far;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_ending_here = $arr->[0];\n    my $min_ending_here = $arr->[0];\n    for my $i (1..$#$arr) {\n        my $num = $arr->[$i];\n        $max_ending_here = max($num, $num * $max_ending_here, $num * $min_ending_here);\n        $min_ending_here = min($num, $num * $max_ending_here, $num * $min_ending_here);\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}",
    "\n    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_product = $arr->[0];",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_ending_here = $arr->[0];\n    my $min_ending_here = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        $max_ending_here = max($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $min_ending_here = min($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1..$#$arr) {\n        my $curr = $arr->[$i];\n        my $max_tmp = $max_so_far;\n        $max_so_far = max($curr, $max_so_far * $curr, $min_so_far * $curr);\n        $min_so_far = min($curr, $max_tmp * $curr, $min_so_far * $curr);\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        my $curr = $arr->[$i];\n        my $max_candidate = $max_so_far * $curr;\n        my $min_candidate = $min_so_far * $curr;\n        $max_so_far = max($curr, $max_candidate, $min_candidate);\n        $min_so_far = min($curr, $max_candidate, $min_candidate);\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        my $curr = $arr->[$i];\n        my $max_temp = $max_so_far;\n        $max_so_far = max($curr, $max_so_far * $curr, $min_so_far * $curr);\n        $min_so_far = min($curr, $max_temp * $curr, $min_so_far * $curr);\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_ending_here = $arr->[0];\n    my $min_ending_here = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        $max_ending_here = max($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $min_ending_here = min($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $max_product = max($max_product, $max_ending_here);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        my $curr = $arr->[$i];\n        my $max_candidate = $max_so_far * $curr;\n        my $min_candidate = $min_so_far * $curr;\n        $max_so_far = max($curr, $max_candidate, $min_candidate);\n        $min_so_far = min($curr, $max_candidate, $min_candidate);\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_ending_here = $arr->[0];\n    my $min_ending_here = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1..$#$arr) {\n        my $num = $arr->[$i];\n        $max_ending_here = max($num, $max_ending_here * $num, $min_ending_here * $num);\n        $min_ending_here = min($num, $max_ending_here * $num, $min_ending_here * $num);\n        $max_so_far = max($max_so_far, $max_ending_here);\n        $min_so_far = min($min_so_far, $min_ending_here);\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_ending_here = $arr->[0];\n    my $min_ending_here = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1..$#$arr) {\n        $max_ending_here = max($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $min_ending_here = min($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $max_product = max($max_product, $max_ending_here);\n    }\n    return $max_product;\n}",
    "    my $max = $arr->[0];\n    my $min = $arr->[0];\n    my $result = $arr->[0];\n    for (my $i = 1; $i < scalar(@$arr); $i++) {\n        my $curr = $arr->[$i];\n        my $temp_max = $max;\n        $max = max($curr, $max * $curr, $min * $curr);\n        $min = min($curr, $temp_max * $curr, $min * $curr);\n        $result = max($result, $max);\n    }\n    return $result;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        my $curr = $arr->[$i];\n        my $max_product_candidate1 = $max_so_far * $curr;\n        my $max_product_candidate2 = $min_so_far * $curr;\n        $max_so_far = max($curr, $max_product_candidate1, $max_product_candidate2);\n        $min_so_far = min($curr, $max_product_candidate1, $max_product_candidate2);\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_ending_here = $arr->[0];\n    my $min_ending_here = $arr->[0];\n    my $max_product = $arr->[0];\n    for (my $i = 1; $i < scalar @$arr; $i++) {\n        $max_ending_here = max($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $min_ending_here = min($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $max_product = max($max_product, $max_ending_here);\n    }\n    return $max_product;\n}",
    "    my $max_prod = $arr->[0];\n    my $min_prod = $arr->[0];\n    my $max_so_far = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        my $curr = $arr->[$i];\n        my $curr_max = max($curr, $curr * $max_prod, $curr * $min_prod);\n        my $curr_min = min($curr, $curr * $max_prod, $curr * $min_prod);\n        $max_so_far = max($max_so_far, $curr_max);\n        $max_prod = $curr_max;\n        $min_prod = $curr_min;\n    }\n    return $max_so_far;\n}",
    "\n    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_product = $arr->[0];",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_ending_here = $arr->[0];\n    my $min_ending_here = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        $max_ending_here = max($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $min_ending_here = min($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $max_product = max($max_product, $max_ending_here);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_product = $arr->[0];\n    for(my $i = 1; $i < scalar @$arr; $i++) {\n        my $curr = $arr->[$i];\n        my $temp_max = $max_so_far;\n        $max_so_far = max($curr, $curr * $max_so_far, $curr * $min_so_far);\n        $min_so_far = min($curr, $curr * $temp_max, $curr * $min_so_far);\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "    my $max = $arr->[0];\n    my $min = $arr->[0];\n    my $max_so_far = $arr->[0];\n    for my $i (1..$#$arr) {\n        my $temp = $max;\n        $max = max($arr->[$i], $max * $arr->[$i], $min * $arr->[$i]);\n        $min = min($arr->[$i], $temp * $arr->[$i], $min * $arr->[$i]);\n        $max_so_far = max($max_so_far, $max);\n    }\n    return $max_so_far;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1..$#$arr) {\n        my $curr = $arr->[$i];\n        my $max_candidate = $max_so_far * $curr;\n        my $min_candidate = $min_so_far * $curr;\n        $max_so_far = max($curr, $max_candidate, $min_candidate);\n        $min_so_far = min($curr, $max_candidate, $min_candidate);\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        my $curr = $arr->[$i];\n        my $temp_max = $max_so_far;\n        $max_so_far = max($curr, $max_so_far * $curr, $min_so_far * $curr);\n        $min_so_far = min($curr, $temp_max * $curr, $min_so_far * $curr);\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_product = $arr->[0];\n    for (my $i = 1; $i < scalar(@$arr); $i++) {\n        my $temp = $max_so_far;\n        $max_so_far = max($arr->[$i], $max_so_far * $arr->[$i], $min_so_far * $arr->[$i]);\n        $min_so_far = min($arr->[$i], $temp * $arr->[$i], $min_so_far * $arr->[$i]);\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_product = $arr->[0];\n    for (my $i = 1; $i < scalar(@$arr); $i++) {\n        my $curr = $arr->[$i];\n        my $temp_max = $max_so_far;\n        $max_so_far = max($curr, $max_so_far * $curr, $min_so_far * $curr);\n        $min_so_far = min($curr, $temp_max * $curr, $min_so_far * $curr);\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "    my $max = $arr->[0];\n    my $min = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1..$#$arr) {\n        my $curr = $arr->[$i];\n        my $temp_max = $max;\n        $max = max($curr, $curr * $max, $curr * $min);\n        $min = min($curr, $curr * $temp_max, $curr * $min);\n        $max_product = max($max_product, $max);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_ending_here = $arr->[0];\n    my $min_ending_here = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        if ($arr->[$i] > 0) {\n            $max_ending_here = max($arr->[$i], $max_ending_here * $arr->[$i]);\n            $min_ending_here = min($arr->[$i], $min_ending_here * $arr->[$i]);\n        }\n        else {\n            $max_ending_here = max($arr->[$i], $min_ending_here * $arr->[$i]);\n            $min_ending_here = min($arr->[$i], $max_ending_here * $arr->[$i]);\n        }\n        $max_product = max($max_product, $max_ending_here);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_ending_here = $arr->[0];\n    my $min_ending_here = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1..$#$arr) {\n        $max_ending_here = max($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $min_ending_here = min($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $max_product = max($max_product, $max_ending_here);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_ending_here = $arr->[0];\n    my $min_ending_here = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        $max_ending_here = max($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $min_ending_here = min($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $max_product = max($max_product, $max_ending_here);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = 1;\n    my $min_so_far = 1;\n    my $max_ending_here = 1;\n    my $min_ending_here = 1;\n    my $max_product = 1;\n    for my $i (0 .. $#$arr) {\n        if ($arr->[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr->[$i];\n            $min_ending_here = min($min_ending_here * $arr->[$i], 1);\n        }\n        elsif ($arr->[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        }\n        else {\n            my $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr->[$i], 1);\n            $min_ending_here = $temp * $arr->[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    return $max_so_far;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $result = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        my $curr = $arr->[$i];\n        my $max_copy = $max_so_far;\n        $max_so_far = max($curr, $max_so_far * $curr, $min_so_far * $curr);\n        $min_so_far = min($curr, $max_copy * $curr, $min_so_far * $curr);\n        $result = max($result, $max_so_far);\n    }\n    return $result;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_ending_here = $arr->[0];\n    my $min_ending_here = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1..$#$arr) {\n        $max_ending_here = max($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $min_ending_here = min($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $max_product = max($max_product, $max_ending_here);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_ending_here = $arr->[0];\n    my $min_ending_here = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        $max_ending_here = max($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $min_ending_here = min($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $max_product = max($max_product, $max_ending_here);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        my $curr = $arr->[$i];\n        my $max_candidate = max($curr, $max_so_far * $curr, $min_so_far * $curr);\n        my $min_candidate = min($curr, $max_so_far * $curr, $min_so_far * $curr);\n        $max_so_far = $max_candidate;\n        $min_so_far = $min_candidate;\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_ending_here = $arr->[0];\n    my $min_ending_here = $arr->[0];\n    my $max_product = $arr->[0];\n    for (my $i = 1; $i < scalar @$arr; $i++) {\n        $max_ending_here = max($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $min_ending_here = min($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $max_product = max($max_product, $max_ending_here);\n    }\n    return $max_product;\n}",
    "    my $max = $arr->[0];\n    my $min = $arr->[0];\n    my $result = $arr->[0];\n    for (my $i = 1; $i < scalar @$arr; $i++) {\n        my $temp = $max;\n        $max = max($arr->[$i], $max * $arr->[$i], $min * $arr->[$i]);\n        $min = min($arr->[$i], $temp * $arr->[$i], $min * $arr->[$i]);\n        $result = max($result, $max);\n    }\n    return $result;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_ending_here = $arr->[0];\n    my $min_ending_here = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1..$#$arr) {\n        $max_ending_here = max($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $min_ending_here = min($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $max_product = max($max_product, $max_ending_here);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_product = $arr->[0];\n    my $i = 1;\n    while ($i < scalar @$arr) {\n        my $temp = $max_so_far;\n        $max_so_far = max($arr->[$i], $max_so_far * $arr->[$i], $min_so_far * $arr->[$i]);\n        $min_so_far = min($arr->[$i], $temp * $arr->[$i], $min_so_far * $arr->[$i]);\n        $max_product = max($max_product, $max_so_far);\n        $i++;\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_ending_here = $arr->[0];\n    my $min_ending_here = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        $max_ending_here = max($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $min_ending_here = min($arr->[$i], $max_ending_here * $arr->[$i], $min_ending_here * $arr->[$i]);\n        $max_so_far = max($max_so_far, $max_ending_here);\n        $min_so_far = min($min_so_far, $min_ending_here);\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "    my $max_ending_here = 1;\n    my $min_ending_here = 1;\n    my $max_so_far = 1;\n    my $n = @$arr;\n    for (my $i = 0; $i < $n; $i++) {\n        if ($arr->[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr->[$i];\n            $min_ending_here = min($min_ending_here * $arr->[$i], 1);\n        }\n        elsif ($arr->[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        }\n        else {\n            my $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr->[$i], 1);\n            $min_ending_here = $temp * $arr->[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    return $max_so_far;\n}",
    "    my $max_product = $arr->[0];\n    my $min_product = $arr->[0];\n    my $max_so_far = $arr->[0];\n    for my $i (1..$#$arr) {\n        my $curr = $arr->[$i];\n        my $temp_max = $max_product;\n        $max_product = max($curr, $max_product * $curr, $min_product * $curr);\n        $min_product = min($curr, $temp_max * $curr, $min_product * $curr);\n        $max_so_far = max($max_so_far, $max_product);\n    }\n    return $max_so_far;\n}",
    "    my $max_so_far = $arr->[0];\n    my $max_ending_here = $arr->[0];\n    my $min_ending_here = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        my $num = $arr->[$i];\n        if ($num > 0) {\n            $max_ending_here = max($num, $max_ending_here * $num);\n            $min_ending_here = min($num, $min_ending_here * $num);\n        } else {\n            $max_ending_here = max($num, $min_ending_here * $num);\n            $min_ending_here = min($num, $max_ending_here * $num);\n        }\n        $max_so_far = max($max_so_far, $max_ending_here);\n    }\n    return $max_so_far;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1..$#$arr) {\n        my $curr = $arr->[$i];\n        my $max_prev = $max_so_far;\n        $max_so_far = max($curr, $max_so_far * $curr, $min_so_far * $curr);\n        $min_so_far = min($curr, $max_prev * $curr, $min_so_far * $curr);\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "    my $max_so_far = $arr->[0];\n    my $min_so_far = $arr->[0];\n    my $max_product = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        my $curr = $arr->[$i];\n        my $max_copy = $max_so_far;\n        $max_so_far = max($curr, $max_so_far * $curr, $min_so_far * $curr);\n        $min_so_far = min($curr, $max_copy * $curr, $min_so_far * $curr);\n        $max_product = max($max_product, $max_so_far);\n    }\n    return $max_product;\n}",
    "    my $max_ending_here = 1;\n    my $min_ending_here = 1;\n    my $max_so_far = 1;\n    my $size = scalar @$arr;\n    for (my $i = 0; $i < $size; $i++) {\n        if ($arr->[$i] > 0) {\n            $max_ending_here = $max_ending_here * $arr->[$i];\n            $min_ending_here = min($min_ending_here * $arr->[$i], 1);\n        }\n        elsif ($arr->[$i] == 0) {\n            $max_ending_here = 1;\n            $min_ending_here = 1;\n        }\n        else {\n            my $temp = $max_ending_here;\n            $max_ending_here = max($min_ending_here * $arr->[$i], 1);\n            $min_ending_here = $temp * $arr->[$i];\n        }\n        if ($max_so_far < $max_ending_here) {\n            $max_so_far = $max_ending_here;\n        }\n    }\n    return $max_so_far;\n}"
  ]
}
{
  "name": "mbpp_113_check_integer",
  "language": "pl",
  "prompt": "# Write a function to check if a string represents an integer or not.\nsub check_integer {\n    my($text) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_113_check_integer.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&check_integer;\n        if(eq_deeply($candidate->(\"python\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"1\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"12345\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    return $text =~ /^[+-]?\\d+$/;\n}",
    "    return $text =~ /^-?\\d+$/;\n}",
    "    if ($text =~ /^[+-]?\\d+$/) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if ($text =~ /^[+-]?\\d+$/) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    return $text =~ /^[+-]?\\d+$/;\n}",
    "    return $text =~ /^[+-]?\\d+$/;\n}",
    "    return $text =~ /^-?\\d+$/;\n}",
    "    return $text =~ /^[+-]?\\d+$/;\n}",
    "    return $text =~ /^-?\\d+$/;\n}",
    "    return $text =~ /^[+-]?\\d+$/;\n}",
    "    if ($text =~ /^[+-]?\\d+$/) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if ($text =~ /^[+-]?\\d+$/) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    return $text =~ /^[+-]?\\d+$/;\n}",
    "    return $text =~ /^[+-]?\\d+$/;\n}",
    "    if ($text =~ /^[+-]?\\d+$/) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if ($text =~ /^[+-]?\\d+$/) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if ($text =~ /^[+-]?\\d+$/) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    return $text =~ /^[+-]?\\d+$/;\n}",
    "    if ($text =~ /^[+-]?\\d+$/) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    return $text =~ /^-?\\d+$/;\n}"
  ]
}
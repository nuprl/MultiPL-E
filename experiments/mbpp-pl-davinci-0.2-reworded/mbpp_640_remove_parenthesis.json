{
  "name": "mbpp_640_remove_parenthesis",
  "language": "pl",
  "prompt": "# Write a function to remove the parenthesis and what is inbetween them from a string.\nsub remove_parenthesis {\n    my($items) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_640_remove_parenthesis.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&remove_parenthesis;\n        if(eq_deeply($candidate->([\"python (chrome)\"]),\"python\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([\"string(.abc)\"]),\"string\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([\"alpha(num)\"]),\"alpha\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    my $new_items = $items;\n    $new_items =~ s/\\(.*?\\)//g;\n    return $new_items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\([^\\)]*\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\([^\\)]*\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\s*\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    my $item = $items;\n    $item =~ s/\\(.*?\\)//g;\n    return $item;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    my($item);\n    my($new_items) = '';\n    foreach $item (split(/\\s+/, $items)) {\n        $item =~ s/\\(.*\\)//;\n        $new_items .= \"$item \";\n    }\n    return $new_items;\n}",
    "    my $new_items = \"\";\n    my $in_parenthesis = 0;\n    foreach my $item (split(//, $items)) {\n        if ($item eq \"(\") {\n            $in_parenthesis = 1;\n        } elsif ($item eq \")\") {\n            $in_parenthesis = 0;\n        } else {\n            $new_items .= $item unless $in_parenthesis;\n        }\n    }\n    return $new_items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    my $result = $items;\n    $result =~ s/\\(.*?\\)//g;\n    return $result;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    my $new_items = $items;\n    $new_items =~ s/\\(.*?\\)//g;\n    return $new_items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\([^\\)]*\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    my $new_items = $items;\n    $new_items =~ s/\\(.*?\\)//g;\n    return $new_items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    my $new_items = $items;\n    $new_items =~ s/\\(.*?\\)//g;\n    return $new_items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    my $new_items = $items;\n    $new_items =~ s/\\(.*?\\)//g;\n    return $new_items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    my($item);\n    my($new_items) = \"\";\n    my($in_parenthesis) = 0;\n    foreach $item (split(//, $items)) {\n        if ($item eq '(') {\n            $in_parenthesis = 1;\n        } elsif ($item eq ')') {\n            $in_parenthesis = 0;\n        } elsif (!$in_parenthesis) {\n            $new_items .= $item;\n        }\n    }\n    return $new_items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    my $new_items = $items;\n    $new_items =~ s/\\(.*?\\)//g;\n    return $new_items;\n}",
    "    $items =~ s/\\([^\\)]*\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\([^\\)]*\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    my $new_items = \"\";\n    my $in_parenthesis = 0;\n    foreach my $item (split(//, $items)) {\n        if ($item eq \"(\") {\n            $in_parenthesis = 1;\n        } elsif ($item eq \")\") {\n            $in_parenthesis = 0;\n        } else {\n            $new_items .= $item if !$in_parenthesis;\n        }\n    }\n    return $new_items;\n}",
    "    $items =~ s/\\([^\\)]+\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    my($item);\n    my($new_items) = \"\";\n    foreach $item (split(/\\s+/, $items)) {\n        $item =~ s/\\(.*\\)//;\n        $new_items .= \" $item\";\n    }\n    return $new_items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    my $new_items = $items;\n    $new_items =~ s/\\(.*?\\)//g;\n    return $new_items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}",
    "    $items =~ s/\\(.*?\\)//g;\n    return $items;\n}"
  ]
}
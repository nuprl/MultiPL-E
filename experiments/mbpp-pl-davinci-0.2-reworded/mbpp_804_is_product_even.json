{
  "name": "mbpp_804_is_product_even",
  "language": "pl",
  "prompt": "# Write a function to check whether the product of numbers in an array is even or not.\nsub is_product_even {\n    my($arr) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_804_is_product_even.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&is_product_even;\n        if(eq_deeply($candidate->([1, 2, 3]),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2, 1, 4]),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 1]),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my $product = 1;\n    foreach my $num (@$arr) {\n        $product *= $num;\n    }\n    return $product % 2 == 0;\n}",
    "    my $product = 1;\n    foreach my $num (@$arr) {\n        $product *= $num;\n    }\n    return $product % 2 == 0;\n}",
    "    my $product = 1;\n    foreach my $num (@$arr) {\n        $product *= $num;\n    }\n    return $product % 2 == 0;\n}",
    "    my $product = 1;\n    foreach my $num (@$arr) {\n        $product *= $num;\n    }\n    return $product % 2 == 0;\n}",
    "    my $product = 1;\n    foreach my $num (@$arr) {\n        $product *= $num;\n    }\n    return $product % 2 == 0;\n}",
    "    my $product = 1;\n    foreach my $n (@$arr) {\n        $product *= $n;\n    }\n    return $product % 2 == 0;\n}",
    "    my $product = 1;\n    foreach my $num (@$arr) {\n        $product *= $num;\n    }\n    return $product % 2 == 0;\n}",
    "    my $product = 1;\n    foreach my $num (@$arr) {\n        $product *= $num;\n    }\n    return $product % 2 == 0;\n}",
    "    my $product = 1;\n    foreach my $num (@$arr) {\n        $product *= $num;\n    }\n    return $product % 2 == 0;\n}",
    "    my $product = 1;\n    foreach my $num (@$arr) {\n        $product *= $num;\n    }\n    return $product % 2 == 0;\n}",
    "    my $product = 1;\n    foreach my $num (@$arr) {\n        $product *= $num;\n    }\n    return $product % 2 == 0;\n}",
    "    my $product = 1;\n    foreach my $num (@$arr) {\n        $product *= $num;\n    }\n    return $product % 2 == 0;\n}",
    "    my $product = 1;\n    foreach my $num (@$arr) {\n        $product *= $num;\n    }\n    return $product % 2 == 0;\n}",
    "    my $product = 1;\n    foreach my $num (@$arr) {\n        $product *= $num;\n    }\n    return $product % 2 == 0;\n}",
    "    my $product = 1;\n    foreach my $num (@$arr) {\n        $product *= $num;\n    }\n    return $product % 2 == 0;\n}",
    "    my $product = 1;\n    foreach my $num (@$arr) {\n        $product *= $num;\n    }\n    return $product % 2 == 0;\n}",
    "    my $product = 1;\n    foreach my $num (@$arr) {\n        $product *= $num;\n    }\n    return $product % 2 == 0;\n}",
    "    my $product = 1;\n    foreach my $num (@$arr) {\n        $product *= $num;\n    }\n    return $product % 2 == 0;\n}",
    "    my $product = 1;\n    foreach my $num (@$arr) {\n        $product *= $num;\n    }\n    return $product % 2 == 0;\n}",
    "    my $product = 1;\n    for my $num (@$arr) {\n        $product *= $num;\n    }\n    return $product % 2 == 0;\n}"
  ]
}
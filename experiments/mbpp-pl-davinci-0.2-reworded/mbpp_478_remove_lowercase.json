{
  "name": "mbpp_478_remove_lowercase",
  "language": "pl",
  "prompt": "# Write a function to remove lowercase substrings from a given string.\nsub remove_lowercase {\n    my($str1) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_478_remove_lowercase.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&remove_lowercase;\n        if(eq_deeply($candidate->(\"PYTHon\"),\"PYTH\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"FInD\"),\"FID\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"STRinG\"),\"STRG\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]+//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]+//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    my $str2 = $str1;\n    $str2 =~ s/[a-z]//g;\n    return $str2;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]+//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    my $str2 = $str1;\n    $str2 =~ s/[a-z]//g;\n    return $str2;\n}",
    "    $str1 =~ s/[a-z]+//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]+//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]+//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]+//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    my $str2 = \"\";\n    my @chars = split(//, $str1);\n    foreach my $c (@chars) {\n        if ($c =~ /[A-Z]/) {\n            $str2 .= $c;\n        }\n    }\n    return $str2;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    my $str2 = \"\";\n    my @str = split(\"\", $str1);\n    foreach my $i (@str) {\n        if ($i =~ /[A-Z]/) {\n            $str2 = $str2.$i;\n        }\n    }\n    return $str2;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    my($str2) = \"\";\n    my($i);\n    for($i=0; $i<length($str1); $i++) {\n        if(substr($str1, $i, 1) =~ /[A-Z]/) {\n            $str2 = $str2.substr($str1, $i, 1);\n        }\n    }\n    return $str2;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]+//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]+//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]+//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]+//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]+//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    my $str2 = \"\";\n    my $i = 0;\n    while ($i < length($str1)) {\n        my $ch = substr($str1, $i, 1);\n        if ($ch =~ /[A-Z]/) {\n            $str2 .= $ch;\n        }\n        $i++;\n    }\n    return $str2;\n}",
    "    $str1 =~ s/[a-z]+//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]+//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]+//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]+//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]+//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]+//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]+//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]+//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]+//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    my $str2 = \"\";\n    my @array = split(//, $str1);\n    foreach my $i (@array) {\n        if ($i =~ /[A-Z]/) {\n            $str2 = $str2.$i;\n        }\n    }\n    return $str2;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    my $str2 = $str1;\n    $str2 =~ s/[a-z]//g;\n    return $str2;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]+//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    my $str2 = $str1;\n    $str2 =~ s/[a-z]//g;\n    return $str2;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]+//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    my $str2 = $str1;\n    $str2 =~ s/[a-z]//g;\n    return $str2;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}",
    "    $str1 =~ s/[a-z]//g;\n    return $str1;\n}"
  ]
}
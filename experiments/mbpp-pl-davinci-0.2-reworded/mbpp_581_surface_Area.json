{
  "name": "mbpp_581_surface_Area",
  "language": "pl",
  "prompt": "# Write a plthon function to find the surface area of a square plramid with a given base edge and height.\nsub surface_Area {\n    my($b, $s) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_581_surface_Area.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&surface_Area;\n        if(eq_deeply($candidate->(3, 4),33)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(4, 5),56)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1, 2),5)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my $area = ($b * $s) + (($b * $b) / 2);\n    return $area;\n}",
    "    return ($b * $s) + (($b * $b) / 2);\n}",
    "    my $area = ($b * $s) + (($b ** 2) / 2);\n    return $area;\n}",
    "    my $area = ($b * $s) + ($b * $b);\n    return $area;\n}",
    "    my $area = $b * $s;\n    return $area;\n}",
    "    my $area = $b * $s;\n    return $area;\n}",
    "    my $area = $b * $s + $b * $b;\n    return $area;\n}",
    "    my $area = $b * $s;\n    return $area;\n}",
    "    my $area = $b * $s + $b * $b;\n    return $area;\n}",
    "    my $surface_Area = $b * $s;\n    return $surface_Area;\n}",
    "    my $area = (($b * $s) / 2);\n    return $area;\n}",
    "    my $area = $b * $s;\n    return $area;\n}",
    "    my $area = ($b * $s) + (($b**2)/2);\n    return $area;\n}",
    "    my $area = $b * $s;\n    return $area;\n}",
    "    my $area = ($b * $b) + (2 * $b * $s);\n    return $area;\n}",
    "    my $area = ($b * $s) + (($b * $b) / 2);\n    return $area;\n}",
    "    my $area = $b * $s;\n    return $area;\n}",
    "    my $area = $b * $s + $b * $b;\n    return $area;\n}",
    "    my $area = ($b * $s) + (($b * $b) / 2);\n    return $area;\n}",
    "    my $area = ($b * $s) + (($b * $b) / 2);\n    return $area;\n}"
  ]
}
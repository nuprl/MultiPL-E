{
  "name": "mbpp_392_get_max_sum",
  "language": "pl",
  "prompt": "# Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\nsub get_max_sum {\n    my($n) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_392_get_max_sum.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&get_max_sum;\n        if(eq_deeply($candidate->(60),106)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),12)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(2),2)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my $max_sum = 0;\n    my $sum = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n_by_2 = 0;\n    my $n_by_3 = 0;\n    my $n_by_4 = 0;\n    my $n_by_5 = 0;\n    my $n_by_6 = 0;\n    my $n_by_7 = 0;\n    my $n_by_8 = 0;\n    my $n_by_9 = 0;\n    my $n_by_10 = 0;\n    my $n_by_11 = 0;\n    my $n_by_12 = 0;\n    my $n_by_13 = 0;\n    my $n_by_14 = 0;\n    my $n_by_15 = 0;\n    my $n_by_16 = 0;\n    my $n_by_17 = 0;\n    my $n_by_18 = 0;\n    my $n_by_19 = 0;\n    my $n_by_20 = 0;\n    my $n_by_21 = 0;\n    my $n_by_22 = 0;\n    my $n_by_23 = 0;\n    my $n_by_24 = 0;\n    my $n_by_25 = 0;\n    my $n_by_26 = 0;\n    my $n_by_27 = 0;\n    my $n_by_28 = 0;\n    my $n_by_29 = 0;\n    my $n_by_30 = 0;\n    my $n_by_31 = 0;\n    my $n_by_32 = 0;\n    my $n_by_33 = 0;\n    my $n_by_34 = 0;\n    my $n_by_35 = 0;\n    my $n_by_36 = 0;\n    my $n_by_37 = 0;\n    my $n_by_38 = 0;\n    my $n_by_39 =",
    "    my $max_sum = 0;\n    if ($n > 0) {\n        $max_sum = $n;\n        my $sum1 = get_max_sum($n/2);\n        my $sum2 = get_max_sum($n/3);\n        my $sum3 = get_max_sum($n/4);\n        my $sum4 = get_max_sum($n/5);\n        my $sum = $sum1 + $sum2 + $sum3 + $sum4;\n        if ($sum > $max_sum) {\n            $max_sum = $sum;\n        }\n    }\n    return $max_sum;\n}",
    "    my $max_sum = 0;\n    my $max_sum_hash = {};\n    $max_sum_hash->{1} = 1;\n    $max_sum_hash->{2} = 2;\n    $max_sum_hash->{3} = 3;\n    $max_sum_hash->{4} = 4;\n    $max_sum_hash->{5} = 5;\n    for(my $i = 6; $i <= $n; $i++) {\n        $max_sum_hash->{$i} = max(($max_sum_hash->{$i/2} + $max_sum_hash->{$i/3} + $max_sum_hash->{$i/4} + $max_sum_hash->{$i/5}), $i);\n    }\n    return $max_sum_hash->{$n};\n}",
    "    my $max_sum = $n;\n    if ($n > 1) {\n        my $sum = get_max_sum($n/2) + get_max_sum($n/3) + get_max_sum($n/4) + get_max_sum($n/5);\n        $max_sum = $sum if $sum > $max_sum;\n    }\n    return $max_sum;\n}",
    "    my $max_sum = 0;\n    if ($n < 0) {\n        return 0;\n    }\n    if ($n == 0) {\n        return 0;\n    }\n    if ($n == 1) {\n        return 1;\n    }\n    if ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 3;\n    }\n    if ($n == 4) {\n        return 4;\n    }\n    if ($n == 5) {\n        return 5;\n    }\n    $max_sum = max(get_max_sum($n/2) + get_max_sum($n/3) + get_max_sum($n/4) + get_max_sum($n/5), $n);\n    return $max_sum;\n}",
    "    my $max_sum = $n;\n    if ($n > 5) {\n        my $sum = get_max_sum($n/2) + get_max_sum($n/3) + get_max_sum($n/4) + get_max_sum($n/5);\n        $max_sum = $sum if ($sum > $max_sum);\n    }\n    return $max_sum;\n}",
    "    return $n if $n < 12;\n    my $max_sum = $n;\n    for my $i (2..5) {\n        my $sum = get_max_sum($n/$i);\n        $max_sum = $sum if $sum > $max_sum;\n    }\n    return $max_sum;\n}",
    "    return $n if $n < 12;\n    return get_max_sum($n/2) + get_max_sum($n/3) + get_max_sum($n/4) + get_max_sum($n/5);\n}",
    "    my $max_sum = $n;\n    if ($n > 5) {\n        my $sum = get_max_sum($n/2) + get_max_sum($n/3) + get_max_sum($n/4) + get_max_sum($n/5);\n        $max_sum = $sum if ($sum > $max_sum);\n    }\n    return $max_sum;\n}",
    "    return $n if $n <= 0;\n    return $n if $n <= 4;\n    my $max = 0;\n    foreach my $i (2..5) {\n        my $sum = get_max_sum($n/$i);\n        $max = $sum if $sum > $max;\n    }\n    return $max + $n;\n}",
    "    my @memo = (0, $n);\n    return _get_max_sum($n, \\@memo);\n}",
    "    my $max_sum = 0;\n    if($n < 0) {\n        return 0;\n    }\n    if($n == 0) {\n        return 0;\n    }\n    if($n == 1) {\n        return 1;\n    }\n    if($n == 2) {\n        return 2;\n    }\n    if($n == 3) {\n        return 3;\n    }\n    if($n == 4) {\n        return 4;\n    }\n    if($n == 5) {\n        return 5;\n    }\n    if($n > 5) {\n        $max_sum = get_max_sum($n/2) + get_max_sum($n/3) + get_max_sum($n/4) + get_max_sum($n/5);\n        if($max_sum > $n) {\n            return $max_sum;\n        }\n        else {\n            return $n;\n        }\n    }\n}",
    "    my $max_sum = 0;\n    if ($n == 0) {\n        return $max_sum;\n    }\n    if ($n < 0) {\n        return -1;\n    }\n    if ($n == 1) {\n        return 1;\n    }\n    if ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 3;\n    }\n    if ($n == 4) {\n        return 4;\n    }\n    if ($n == 5) {\n        return 5;\n    }\n    my $max_sum_1 = get_max_sum($n/2);\n    my $max_sum_2 = get_max_sum($n/3);\n    my $max_sum_3 = get_max_sum($n/4);\n    my $max_sum_4 = get_max_sum($n/5);\n    $max_sum = $max_sum_1 + $max_sum_2 + $max_sum_3 + $max_sum_4;\n    if ($max_sum < $n) {\n        $max_sum = $n;\n    }\n    return $max_sum;\n}",
    "    return $n if $n < 12;\n    my $max = $n;\n    foreach my $i (2..5) {\n        my $sum = get_max_sum($n/$i);\n        $max = $sum if $sum > $max;\n    }\n    return $max;\n}",
    "    my @memo = (0, $n);\n    for (my $i = 2; $i <= $n; $i++) {\n        my $max_sum = $i;\n        for (my $j = 2; $j <= 5; $j++) {\n            if ($i % $j == 0) {\n                $max_sum = max($max_sum, $memo[$i / $j]);\n            }\n        }\n        $memo[$i] = $max_sum;\n    }\n    return $memo[$n];\n}",
    "    my $max_sum = $n;\n    if ($n > 1) {\n        my $sum = 0;\n        for my $i (2..5) {\n            $sum += get_max_sum($n/$i);\n        }\n        $max_sum = $sum if $sum > $max_sum;\n    }\n    return $max_sum;\n}",
    "    if ($n == 0) {\n        return 0;\n    }\n    my $max_sum = $n;\n    for my $i (2..5) {\n        my $sum = get_max_sum($n/$i);\n        if ($sum > $max_sum) {\n            $max_sum = $sum;\n        }\n    }\n    return $max_sum;\n}",
    "    my $max_sum = $n;\n    if ($n > 1) {\n        my $sum = 0;\n        for my $i (2..5) {\n            $sum += get_max_sum($n/$i);\n        }\n        $max_sum = $sum if $sum > $max_sum;\n    }\n    return $max_sum;\n}",
    "    if ($n < 12) {\n        return $n;\n    }\n    my $sum = get_max_sum($n/2) + get_max_sum($n/3) + get_max_sum($n/4) + get_max_sum($n/5);\n    return $sum > $n ? $sum : $n;\n}",
    "    my $max_sum = 0;\n    my $max_sum_hash = {};\n    $max_sum_hash->{1} = 1;\n    $max_sum_hash->{2} = 2;\n    $max_sum_hash->{3} = 3;\n    $max_sum_hash->{4} = 4;\n    $max_sum_hash->{5} = 5;\n    for(my $i = 6; $i <= $n; $i++) {\n        $max_sum = max(($max_sum_hash->{$i/2} + $max_sum_hash->{$i/3} + $max_sum_hash->{$i/4} + $max_sum_hash->{$i/5}), $i);\n        $max_sum_hash->{$i} = $max_sum;\n    }\n    return $max_sum;\n}"
  ]
}
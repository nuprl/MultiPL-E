{
  "name": "mbpp_283_validate",
  "language": "pl",
  "prompt": "# Write a plthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nsub validate {\n    my($n) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_283_validate.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&validate;\n        if(eq_deeply($candidate->(1234),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(51241),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(321),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my %count;\n    my @digits = split(//, $n);\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $str = $n;\n    my %hash = ();\n    while($n > 0) {\n        my $digit = $n % 10;\n        $hash{$digit}++;\n        $n = int($n / 10);\n    }\n    foreach my $key (keys %hash) {\n        if($hash{$key} > $key) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    while ($n > 0) {\n        my $digit = $n % 10;\n        $count{$digit}++;\n        $n = int($n / 10);\n    }\n    foreach my $digit (keys %count) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %hash = ();\n    my $flag = 1;\n    while($n > 0) {\n        my $digit = $n % 10;\n        $hash{$digit}++;\n        $n = int($n / 10);\n    }\n    foreach my $key (keys %hash) {\n        if($hash{$key} > $key) {\n            $flag = 0;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my @digits = split(//, $n);\n    my %freq;\n    foreach my $d (@digits) {\n        $freq{$d}++;\n    }\n    foreach my $d (@digits) {\n        if ($freq{$d} > $d) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    my @digits = split(//, $n);\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    $count{$_}++ for @digits;\n    for my $digit (keys %count) {\n        return 0 if $count{$digit} > $digit;\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %freq;\n    foreach my $d (@digits) {\n        $freq{$d}++;\n    }\n    foreach my $d (@digits) {\n        if ($freq{$d} > $d) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %hash;\n    my @arr = split(//, $n);\n    foreach my $i (@arr) {\n        $hash{$i}++;\n    }\n    foreach my $i (@arr) {\n        if ($hash{$i} > $i) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        return 0 if $count{$digit} > $digit;\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %freq;\n    while ($n > 0) {\n        my $digit = $n % 10;\n        $freq{$digit}++;\n        $n = int($n / 10);\n    }\n    for my $digit (keys %freq) {\n        if ($freq{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %frequency;\n    foreach my $digit (@digits) {\n        $frequency{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($frequency{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    my @digits = split(//, $n);\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %hash = ();\n    my @digits = split(//, $n);\n    foreach my $digit (@digits) {\n        if (exists $hash{$digit}) {\n            $hash{$digit}++;\n        } else {\n            $hash{$digit} = 1;\n        }\n    }\n    foreach my $key (keys %hash) {\n        if ($hash{$key} > $key) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    while($n) {\n        my $digit = $n % 10;\n        $count{$digit}++;\n        $n = int($n / 10);\n    }\n    for my $digit (keys %count) {\n        if($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    my @digits = split //, $n;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %hash;\n    my @arr = split(//,$n);\n    foreach my $i (@arr) {\n        $hash{$i}++;\n    }\n    foreach my $i (keys %hash) {\n        if ($hash{$i} > $i) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    while($n) {\n        my $digit = $n % 10;\n        $count{$digit}++;\n        $n = int($n / 10);\n    }\n    foreach my $digit (keys %count) {\n        if($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $hash = {};\n    while($n > 0) {\n        my $digit = $n % 10;\n        if(exists $hash->{$digit}) {\n            $hash->{$digit}++;\n        } else {\n            $hash->{$digit} = 1;\n        }\n        $n = int($n / 10);\n    }\n    foreach my $key (keys %$hash) {\n        if($hash->{$key} > $key) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $str = \"$n\";\n    my %hash = ();\n    foreach my $char (split //, $str) {\n        $hash{$char}++;\n    }\n    foreach my $key (keys %hash) {\n        if ($hash{$key} > $key) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    my %count;\n    $count{$_}++ for @digits;\n    for my $digit (@digits) {\n        return 0 if $count{$digit} > $digit;\n    }\n    return 1;\n}",
    "    my $str = $n;\n    my %hash;\n    while($n > 0) {\n        my $rem = $n % 10;\n        $hash{$rem}++;\n        $n = int($n / 10);\n    }\n    my $valid = 1;\n    foreach my $key (keys %hash) {\n        if($hash{$key} > $key) {\n            $valid = 0;\n            last;\n        }\n    }\n    if($valid) {\n        print \"The number $str is valid\\n\";\n    } else {\n        print \"The number $str is not valid\\n\";\n    }\n}",
    "    my %count;\n    while ($n > 0) {\n        my $digit = $n % 10;\n        $count{$digit}++;\n        $n = int($n / 10);\n    }\n    for my $digit (keys %count) {\n        return 0 if $count{$digit} > $digit;\n    }\n    return 1;\n}",
    "    my $str = \"$n\";\n    my %hash;\n    foreach my $char (split //, $str) {\n        $hash{$char}++;\n    }\n    foreach my $key (keys %hash) {\n        if ($hash{$key} > $key) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    while($n) {\n        my $digit = $n % 10;\n        $count{$digit}++;\n        $n = int($n / 10);\n    }\n    foreach my $key (keys %count) {\n        return 0 if $count{$key} > $key;\n    }\n    return 1;\n}",
    "    my %hash = ();\n    my $flag = 1;\n    while($n > 0) {\n        my $rem = $n % 10;\n        $hash{$rem}++;\n        $n = int($n / 10);\n    }\n    foreach my $key (keys %hash) {\n        if($hash{$key} > $key) {\n            $flag = 0;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my %count;\n    my @digits = split(//, $n);\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $str = $n;\n    my %hash;\n    while($str > 0) {\n        my $digit = $str % 10;\n        $hash{$digit}++;\n        $str = int($str / 10);\n    }\n    foreach my $key (keys %hash) {\n        if($hash{$key} > $key) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $flag = 1;\n    my %count;\n    while($n > 0) {\n        my $digit = $n % 10;\n        $count{$digit}++;\n        if($count{$digit} > $digit) {\n            $flag = 0;\n            last;\n        }\n        $n = int($n / 10);\n    }\n    return $flag;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    $count{$_}++ for @digits;\n    for my $digit (@digits) {\n        return 0 if $count{$digit} > $digit;\n    }\n    return 1;\n}",
    "    my %count;\n    while($n > 0) {\n        my $digit = $n % 10;\n        $count{$digit}++;\n        $n = int($n / 10);\n    }\n    foreach my $key (keys %count) {\n        if($count{$key} > $key) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    my @digits = split(//, $n);\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    while($n > 0) {\n        my $digit = $n % 10;\n        $count{$digit}++;\n        $n = int($n / 10);\n    }\n    foreach my $digit (keys %count) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    while($n > 0) {\n        $count{$n % 10}++;\n        $n = int($n / 10);\n    }\n    foreach my $key (keys %count) {\n        if($count{$key} > $key) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    while($n > 0) {\n        my $digit = $n % 10;\n        $count{$digit}++;\n        $n = int($n/10);\n    }\n    for my $key (keys %count) {\n        if($count{$key} > $key) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    while($n > 0) {\n        my $digit = $n % 10;\n        $count{$digit}++;\n        $n = int($n / 10);\n    }\n    foreach my $key (keys %count) {\n        if($count{$key} > $key) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    while($n > 0) {\n        my $digit = $n % 10;\n        $count{$digit}++;\n        $n = int($n/10);\n    }\n    foreach my $key (keys %count) {\n        if($count{$key} > $key) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %hash = ();\n    while($n > 0) {\n        my $d = $n % 10;\n        $hash{$d}++;\n        $n = int($n / 10);\n    }\n    foreach my $key (keys %hash) {\n        if($hash{$key} > $key) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    while($n > 0) {\n        my $digit = $n % 10;\n        $count{$digit}++;\n        $n = int($n / 10);\n    }\n    foreach my $key (keys %count) {\n        if($count{$key} > $key) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    while($n > 0) {\n        my $digit = $n % 10;\n        $count{$digit}++;\n        $n = int($n / 10);\n    }\n    foreach my $digit (keys %count) {\n        if($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $flag = 1;\n    my @digits = split(//,$n);\n    my %freq;\n    foreach my $digit (@digits) {\n        $freq{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if($freq{$digit} > $digit) {\n            $flag = 0;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my %count;\n    my @digits = split(//, $n);\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $str = $n;\n    my @arr = split(//,$str);\n    my %hash = ();\n    foreach my $i (@arr) {\n        if(exists($hash{$i})) {\n            $hash{$i} += 1;\n        } else {\n            $hash{$i} = 1;\n        }\n    }\n    foreach my $i (@arr) {\n        if($hash{$i} > $i) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    while($n) {\n        my $digit = $n % 10;\n        $count{$digit}++;\n        $n = int($n / 10);\n    }\n    for my $digit (keys %count) {\n        return 0 if $count{$digit} > $digit;\n    }\n    return 1;\n}",
    "    my $str = $n;\n    my %hash;\n    while($str ne \"\") {\n        my $digit = chop($str);\n        $hash{$digit}++;\n    }\n    foreach my $key (keys %hash) {\n        if($hash{$key} > $key) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    while($n > 0) {\n        my $digit = $n % 10;\n        $count{$digit}++;\n        $n = int($n / 10);\n    }\n    foreach my $key (keys %count) {\n        if($count{$key} > $key) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %hash = ();\n    while($n > 0) {\n        my $digit = $n % 10;\n        $hash{$digit}++;\n        $n = int($n / 10);\n    }\n    foreach my $key (keys %hash) {\n        if($hash{$key} > $key) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//,$n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %hash = ();\n    while($n > 0) {\n        my $d = $n % 10;\n        $hash{$d}++;\n        $n = int($n / 10);\n    }\n    foreach my $key (keys %hash) {\n        if($hash{$key} > $key) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    while($n) {\n        $count{$n % 10}++;\n        $n = int($n / 10);\n    }\n    for my $key (keys %count) {\n        return 0 if $count{$key} > $key;\n    }\n    return 1;\n}",
    "    my %hash;\n    while($n) {\n        my $digit = $n % 10;\n        $hash{$digit}++;\n        $n = int($n / 10);\n    }\n    foreach my $key (keys %hash) {\n        if($hash{$key} > $key) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    my @digits = split(//,$n);\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %hash;\n    while($n > 0) {\n        my $digit = $n % 10;\n        if(exists $hash{$digit}) {\n            $hash{$digit}++;\n        } else {\n            $hash{$digit} = 1;\n        }\n        $n = int($n / 10);\n    }\n    foreach my $key (keys %hash) {\n        if($hash{$key} > $key) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    $count{$_}++ foreach @digits;\n    my $result = 1;\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            $result = 0;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %h = ();\n    while($n) {\n        $h{$n % 10}++;\n        $n /= 10;\n    }\n    for my $k (keys %h) {\n        return 0 if $h{$k} > $k;\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $flag = 1;\n    my @digits = split(//, $n);\n    my %hash = ();\n    foreach my $d (@digits) {\n        $hash{$d}++;\n    }\n    foreach my $d (@digits) {\n        if ($hash{$d} > $d) {\n            $flag = 0;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my %count;\n    while($n > 0) {\n        my $digit = $n % 10;\n        $count{$digit}++;\n        $n = int($n / 10);\n    }\n    foreach my $digit (keys %count) {\n        if($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    my @digits = split(//, $n);\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    while($n > 0) {\n        my $digit = $n % 10;\n        $count{$digit}++;\n        $n = int($n / 10);\n    }\n    foreach my $key (keys %count) {\n        if($count{$key} > $key) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %hash;\n    my @arr = split(//,$n);\n    foreach my $i (@arr) {\n        $hash{$i}++;\n    }\n    foreach my $i (@arr) {\n        if($hash{$i} > $i) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %freq;\n    while($n) {\n        my $digit = $n % 10;\n        $freq{$digit}++;\n        $n /= 10;\n    }\n    foreach my $key (keys %freq) {\n        return 0 if $freq{$key} > $key;\n    }\n    return 1;\n}",
    "    my %count;\n    my @digits = split(//, $n);\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        return 0 if $count{$digit} > $digit;\n    }\n    return 1;\n}",
    "    my $str = \"$n\";\n    my @digits = split(//, $str);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    while($n > 0) {\n        $count{$n % 10}++;\n        $n = int($n / 10);\n    }\n    foreach my $key (keys %count) {\n        if($count{$key} > $key) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    my %count;\n    $count{$_}++ for @digits;\n    for my $digit (@digits) {\n        return 0 if $count{$digit} > $digit;\n    }\n    return 1;\n}",
    "    my %count;\n    while ($n > 0) {\n        my $digit = $n % 10;\n        $count{$digit}++;\n        $n = int($n / 10);\n    }\n    foreach my $key (keys %count) {\n        if ($count{$key} > $key) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %hash = ();\n    my @digits = split(//, $n);\n    foreach my $digit (@digits) {\n        $hash{$digit}++;\n    }\n    foreach my $key (keys %hash) {\n        if ($hash{$key} > $key) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    while($n > 0) {\n        my $digit = $n % 10;\n        $count{$digit}++;\n        $n = int($n / 10);\n    }\n    foreach my $key (keys %count) {\n        if($count{$key} > $key) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    while($n > 0) {\n        my $digit = $n % 10;\n        $count{$digit}++;\n        $n = int($n / 10);\n    }\n    foreach my $key (keys %count) {\n        if($count{$key} > $key) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $d (@digits) {\n        $count{$d}++;\n    }\n    foreach my $d (@digits) {\n        if ($count{$d} > $d) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    while($n > 0) {\n        my $d = $n % 10;\n        $count{$d}++;\n        $n = int($n / 10);\n    }\n    for my $d (keys %count) {\n        if($count{$d} > $d) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %hash;\n    while($n > 0) {\n        my $digit = $n % 10;\n        $hash{$digit}++;\n        $n = int($n / 10);\n    }\n    foreach my $key (keys %hash) {\n        if($hash{$key} > $key) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $str = \"$n\";\n    my @arr = split(\"\",$str);\n    my %hash;\n    foreach my $i (@arr) {\n        $hash{$i}++;\n    }\n    foreach my $i (keys %hash) {\n        if($hash{$i} > $i) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    while($n > 0) {\n        my $digit = $n % 10;\n        $count{$digit}++;\n        $n = int($n / 10);\n    }\n    foreach my $key (keys %count) {\n        if($count{$key} > $key) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    while($n > 0) {\n        my $digit = $n % 10;\n        $count{$digit}++;\n        $n = int($n / 10);\n    }\n    foreach my $digit (keys %count) {\n        if($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    my %count;\n    $count{$_}++ for @digits;\n    return all { $count{$_} <= $_ } @digits;\n}",
    "    my %freq;\n    while ($n > 0) {\n        my $digit = $n % 10;\n        $freq{$digit}++;\n        $n = int($n / 10);\n    }\n    for my $digit (keys %freq) {\n        return 0 if $freq{$digit} > $digit;\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %hash;\n    my @arr = split(\"\", $n);\n    foreach my $i (@arr) {\n        $hash{$i}++;\n    }\n    foreach my $i (@arr) {\n        if ($hash{$i} > $i) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %hash = ();\n    while($n > 0) {\n        my $digit = $n % 10;\n        $hash{$digit}++;\n        $n = int($n / 10);\n    }\n    foreach my $key (keys %hash) {\n        if($hash{$key} > $key) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    while($n > 0) {\n        my $digit = $n % 10;\n        $count{$digit}++;\n        $n = int($n / 10);\n    }\n    for my $key (keys %count) {\n        if($count{$key} > $key) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    my @digits = split(//, $n);\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $str = $n;\n    my $len = length($str);\n    my $i = 0;\n    my $j = 0;\n    my $count = 0;\n    for($i = 0; $i < $len; $i++) {\n        $count = 0;\n        for($j = 0; $j < $len; $j++) {\n            if(substr($str, $i, 1) eq substr($str, $j, 1)) {\n                $count++;\n            }\n        }\n        if($count > substr($str, $i, 1)) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %hash = ();\n    my @arr = split('', $n);\n    foreach my $i (@arr) {\n        $hash{$i}++;\n    }\n    foreach my $i (@arr) {\n        if ($hash{$i} > $i) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %hash;\n    my @arr = split(//,$n);\n    foreach my $i (@arr) {\n        $hash{$i}++;\n    }\n    foreach my $i (keys %hash) {\n        if ($hash{$i} > $i) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    while($n > 0) {\n        my $digit = $n % 10;\n        $count{$digit}++;\n        $n = int($n / 10);\n    }\n    for my $digit (keys %count) {\n        return 0 if $count{$digit} > $digit;\n    }\n    return 1;\n}",
    "    my %hash;\n    my $flag = 1;\n    while($n > 0) {\n        my $digit = $n % 10;\n        if(exists $hash{$digit}) {\n            $hash{$digit}++;\n        } else {\n            $hash{$digit} = 1;\n        }\n        $n = int($n / 10);\n    }\n    foreach my $key (keys %hash) {\n        if($hash{$key} > $key) {\n            $flag = 0;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my %count;\n    while($n > 0) {\n        my $digit = $n % 10;\n        $count{$digit}++;\n        $n = int($n / 10);\n    }\n    foreach my $digit (keys %count) {\n        if($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    while($n) {\n        my $d = $n % 10;\n        $count{$d}++;\n        $n /= 10;\n    }\n    for my $d (keys %count) {\n        return 0 if $count{$d} > $d;\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $str = $n;\n    my $len = length($str);\n    my $i = 0;\n    my $j = 0;\n    my $count = 0;\n    my @arr = ();\n    my @arr1 = ();\n    my $flag = 0;\n    for($i = 0; $i < $len; $i++) {\n        $arr[$i] = substr($str, $i, 1);\n    }\n    for($i = 0; $i < $len; $i++) {\n        for($j = 0; $j < $len; $j++) {\n            if($arr[$i] == $arr[$j]) {\n                $count++;\n            }\n        }\n        $arr1[$i] = $count;\n        $count = 0;\n    }\n    for($i = 0; $i < $len; $i++) {\n        if($arr1[$i] > $arr[$i]) {\n            $flag = 1;\n        }\n    }\n    if($flag == 1) {\n        return 0;\n    }\n    else {\n        return 1;\n    }\n}",
    "    my %hash;\n    my @arr = split(//,$n);\n    foreach my $i (@arr) {\n        $hash{$i}++;\n    }\n    foreach my $i (@arr) {\n        if($hash{$i} > $i) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    while($n > 0) {\n        my $digit = $n % 10;\n        $count{$digit}++;\n        $n = int($n / 10);\n    }\n    foreach my $key (keys %count) {\n        if($count{$key} > $key) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $str = $n;\n    my %hash;\n    while($str) {\n        my $digit = chop($str);\n        $hash{$digit}++;\n    }\n    foreach my $key (keys %hash) {\n        if($hash{$key} > $key) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    my @digits = split(//, $n);\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    my @digits = split(//, $n);\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %counts;\n    foreach my $digit (@digits) {\n        $counts{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($counts{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    while($n > 0) {\n        my $digit = $n % 10;\n        $count{$digit}++;\n        $n = int($n / 10);\n    }\n    foreach my $key (keys %count) {\n        if($count{$key} > $key) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    while ($n > 0) {\n        my $digit = $n % 10;\n        $count{$digit}++;\n        $n = int($n / 10);\n    }\n    foreach my $key (keys %count) {\n        if ($count{$key} > $key) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    $count{$_}++ for @digits;\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $str = $n;\n    my %count;\n    $count{$_}++ for split //, $str;\n    foreach my $key (keys %count) {\n        if ($count{$key} > $key) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    while($n > 0) {\n        my $digit = $n % 10;\n        $count{$digit}++;\n        $n = int($n / 10);\n    }\n    foreach my $key (keys %count) {\n        if($count{$key} > $key) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    my @digits = split(//, $n);\n    foreach my $d (@digits) {\n        $count{$d}++;\n    }\n    foreach my $d (@digits) {\n        if ($count{$d} > $d) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    while($n > 0) {\n        my $digit = $n % 10;\n        $count{$digit}++;\n        $n = int($n / 10);\n    }\n    foreach my $key (keys %count) {\n        if($count{$key} > $key) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    while($n) {\n        $count{$n % 10}++;\n        $n = int($n / 10);\n    }\n    for my $key (keys %count) {\n        return 0 if $count{$key} > $key;\n    }\n    return 1;\n}",
    "    my %hash = ();\n    while($n > 0) {\n        my $d = $n % 10;\n        $hash{$d}++;\n        $n = int($n / 10);\n    }\n    foreach my $k (keys %hash) {\n        if($hash{$k} > $k) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %hash;\n    my @array = split(//, $n);\n    foreach my $i (@array) {\n        $hash{$i}++;\n    }\n    foreach my $i (@array) {\n        if ($hash{$i} > $i) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    while($n > 0) {\n        my $digit = $n % 10;\n        $count{$digit}++;\n        $n = int($n / 10);\n    }\n    foreach my $digit (keys %count) {\n        if($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    while ($n > 0) {\n        $count{$n % 10}++;\n        $n /= 10;\n    }\n    for my $digit (keys %count) {\n        return 0 if $count{$digit} > $digit;\n    }\n    return 1;\n}",
    "    my %freq;\n    while($n > 0) {\n        $freq{$n % 10}++;\n        $n /= 10;\n    }\n    foreach my $key (keys %freq) {\n        if($freq{$key} > $key) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $str = $n;\n    my %hash = ();\n    while ($str) {\n        my $digit = chop($str);\n        $hash{$digit}++;\n    }\n    for my $key (keys %hash) {\n        return 0 if $hash{$key} > $key;\n    }\n    return 1;\n}",
    "    my $flag = 1;\n    my @digits = split(//,$n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            $flag = 0;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my %count;\n    while ($n > 0) {\n        my $digit = $n % 10;\n        $count{$digit}++;\n        $n /= 10;\n    }\n    for my $digit (keys %count) {\n        return 0 if $count{$digit} > $digit;\n    }\n    return 1;\n}",
    "    my %count;\n    my @digits = split(//, $n);\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $n_copy = $n;\n    my @digits = ();\n    while($n_copy > 0) {\n        push(@digits, $n_copy % 10);\n        $n_copy = int($n_copy / 10);\n    }\n    my %digit_count = ();\n    foreach my $digit (@digits) {\n        if(exists($digit_count{$digit})) {\n            $digit_count{$digit}++;\n        } else {\n            $digit_count{$digit} = 1;\n        }\n    }\n    foreach my $digit (keys %digit_count) {\n        if($digit_count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $s = $n;\n    my %count;\n    while ($s) {\n        $count{$s % 10}++;\n        $s = int($s / 10);\n    }\n    for my $i (0..9) {\n        return 0 if $count{$i} > $i;\n    }\n    return 1;\n}",
    "    my %count;\n    my @digits = split(//, $n);\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    while($n) {\n        my $digit = $n % 10;\n        $count{$digit}++;\n        $n = int($n / 10);\n    }\n    for my $digit (keys %count) {\n        return 0 if $count{$digit} > $digit;\n    }\n    return 1;\n}",
    "    my %count;\n    while($n > 0) {\n        $count{$n % 10}++;\n        $n = int($n / 10);\n    }\n    for my $key (keys %count) {\n        return 0 if $count{$key} > $key;\n    }\n    return 1;\n}",
    "    my %count;\n    while($n > 0) {\n        my $digit = $n % 10;\n        $count{$digit}++;\n        $n = int($n / 10);\n    }\n    foreach my $key (keys %count) {\n        if($count{$key} > $key) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %hash = ();\n    while($n != 0) {\n        my $digit = $n % 10;\n        $hash{$digit}++;\n        $n = int($n / 10);\n    }\n    foreach my $key (keys %hash) {\n        if($hash{$key} > $key) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    my @digits = split(//, $n);\n    foreach my $d (@digits) {\n        $count{$d}++;\n    }\n    foreach my $d (@digits) {\n        return 0 if $count{$d} > $d;\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %count = ();\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    while($n > 0) {\n        my $digit = $n % 10;\n        $count{$digit}++;\n        $n = int($n / 10);\n    }\n    foreach my $digit (keys %count) {\n        if($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    my @digits = split //, $n;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %hash;\n    my $flag = 1;\n    while($n > 0) {\n        my $digit = $n % 10;\n        $hash{$digit}++;\n        $n = int($n / 10);\n    }\n    for my $key (keys %hash) {\n        if($hash{$key} > $key) {\n            $flag = 0;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %freq;\n    while($n > 0) {\n        my $digit = $n % 10;\n        $freq{$digit}++;\n        $n /= 10;\n    }\n    for my $digit (keys %freq) {\n        return 0 if $freq{$digit} > $digit;\n    }\n    return 1;\n}",
    "    my %freq;\n    my @digits = split(//, $n);\n    foreach my $digit (@digits) {\n        $freq{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($freq{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %hash;\n    while ($n > 0) {\n        my $digit = $n % 10;\n        $hash{$digit}++;\n        $n = int($n / 10);\n    }\n    foreach my $key (keys %hash) {\n        if ($hash{$key} > $key) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %hash = ();\n    while($n > 0) {\n        my $digit = $n % 10;\n        if(exists($hash{$digit})) {\n            $hash{$digit}++;\n        } else {\n            $hash{$digit} = 1;\n        }\n        $n = int($n / 10);\n    }\n    foreach my $key (keys %hash) {\n        if($hash{$key} > $key) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %freq;\n    while($n > 0) {\n        $freq{$n % 10}++;\n        $n /= 10;\n    }\n    foreach my $key (keys %freq) {\n        if($freq{$key} > $key) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $str = $n;\n    my @arr = split(//,$str);\n    my %count;\n    foreach my $i (@arr) {\n        $count{$i}++;\n    }\n    foreach my $i (@arr) {\n        if ($count{$i} > $i) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    while($n > 0) {\n        my $digit = $n % 10;\n        $count{$digit}++;\n        $n = int($n / 10);\n    }\n    foreach my $digit (keys %count) {\n        if($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//,$n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//,$n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $str = $n;\n    my $len = length($str);\n    my %count;\n    foreach my $char (split //, $str) {\n        $count{$char}++;\n    }\n    foreach my $key (keys %count) {\n        if ($count{$key} > $key) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    my @digits = split //, $n;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        return 0 if $count{$digit} > $digit;\n    }\n    return 1;\n}",
    "    my %count;\n    while($n > 0) {\n        $count{$n % 10}++;\n        $n /= 10;\n    }\n    for my $digit (0..9) {\n        return 0 if $count{$digit} > $digit;\n    }\n    return 1;\n}",
    "    my $str = $n;\n    my %hash;\n    while($str) {\n        my $digit = chop($str);\n        $hash{$digit}++;\n    }\n    foreach my $key (keys %hash) {\n        if($hash{$key} > $key) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %hash;\n    while($n > 0) {\n        my $digit = $n % 10;\n        $hash{$digit}++;\n        $n = int($n / 10);\n    }\n    foreach my $key (keys %hash) {\n        if($hash{$key} > $key) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    my @digits = split(//,$n);\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    $count{$_}++ for @digits;\n    foreach my $digit (keys %count) {\n        return 0 if $count{$digit} > $digit;\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    while ($n > 0) {\n        my $d = $n % 10;\n        $count{$d}++;\n        $n = int($n / 10);\n    }\n    foreach my $d (keys %count) {\n        if ($count{$d} > $d) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    my @digits = split(//, $n);\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $str = $n;\n    my %count;\n    $count{$_}++ for split //, $str;\n    foreach my $key (keys %count) {\n        if ($count{$key} > $key) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    while($n) {\n        my $d = $n % 10;\n        $count{$d}++;\n        $n = int($n / 10);\n    }\n    for my $d (keys %count) {\n        return 0 if $count{$d} > $d;\n    }\n    return 1;\n}",
    "    my %count;\n    while($n) {\n        $count{$n % 10}++;\n        $n /= 10;\n    }\n    foreach my $d (keys %count) {\n        return 0 if $count{$d} > $d;\n    }\n    return 1;\n}",
    "    my %count;\n    foreach my $digit (split //, $n) {\n        $count{$digit}++;\n    }\n    foreach my $digit (split //, $n) {\n        return 0 if $count{$digit} > $digit;\n    }\n    return 1;\n}",
    "    my %count;\n    my @digits = split(//, $n);\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    while ($n > 0) {\n        my $digit = $n % 10;\n        $count{$digit}++;\n        $n = int($n / 10);\n    }\n    foreach my $digit (keys %count) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    my @digits = split(//, $n);\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $str = $n;\n    my @arr = split(//, $str);\n    my %hash;\n    foreach my $i (@arr) {\n        $hash{$i}++;\n    }\n    foreach my $i (keys %hash) {\n        if ($hash{$i} > $i) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %freq;\n    my @digits = split(//, $n);\n    foreach my $d (@digits) {\n        $freq{$d}++;\n    }\n    foreach my $d (@digits) {\n        if ($freq{$d} > $d) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (keys %count) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $str = $n;\n    my %hash;\n    while($n){\n        $hash{$n%10}++;\n        $n = int($n/10);\n    }\n    foreach my $key (keys %hash){\n        if($hash{$key} > $key){\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    while($n) {\n        $count{$n%10}++;\n        $n = int($n/10);\n    }\n    foreach my $key (keys %count) {\n        return 0 if $count{$key} > $key;\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    my @digits = split(//, $n);\n    for my $digit (@digits) {\n        $count{$digit}++;\n    }\n    for my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split //, $n;\n    my %freq;\n    foreach my $digit (@digits) {\n        $freq{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        return 0 if $freq{$digit} > $digit;\n    }\n    return 1;\n}",
    "    my %count;\n    while($n > 0) {\n        my $digit = $n % 10;\n        $count{$digit}++;\n        $n = int($n / 10);\n    }\n    foreach my $key (keys %count) {\n        if($count{$key} > $key) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $count = 0;\n    my $temp = $n;\n    my $digit;\n    my $frequency;\n    my $result = 1;\n    while($temp > 0) {\n        $digit = $temp % 10;\n        $frequency = 0;\n        $temp = $temp / 10;\n        $temp = int($temp);\n        $count = $n;\n        while($count > 0) {\n            if($count % 10 == $digit) {\n                $frequency++;\n            }\n            $count = $count / 10;\n            $count = int($count);\n        }\n        if($frequency > $digit) {\n            $result = 0;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $flag = 1;\n    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            $flag = 0;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my %count;\n    while ($n > 0) {\n        $count{$n % 10}++;\n        $n /= 10;\n    }\n    for my $digit (0..9) {\n        return 0 if $count{$digit} > $digit;\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %counts = ();\n    foreach my $digit (@digits) {\n        $counts{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($counts{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    $count{$_}++ for @digits;\n    foreach my $key (keys %count) {\n        if ($count{$key} > $key) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my %count;\n    while($n > 0) {\n        my $digit = $n % 10;\n        $count{$digit}++;\n        $n = int($n / 10);\n    }\n    foreach my $key (keys %count) {\n        if($count{$key} > $key) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my @digits = split(//, $n);\n    my %count;\n    foreach my $digit (@digits) {\n        $count{$digit}++;\n    }\n    foreach my $digit (@digits) {\n        if ($count{$digit} > $digit) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    my $count = 0;\n    my $temp = $n;\n    my @arr;\n    while($temp > 0) {\n        my $rem = $temp % 10;\n        push @arr, $rem;\n        $temp = int($temp / 10);\n    }\n    my %hash;\n    foreach my $i (@arr) {\n        $hash{$i}++;\n    }\n    foreach my $i (keys %hash) {\n        if($hash{$i} <= $i) {\n            $count++;\n        }\n    }\n    if($count == scalar(keys %hash)) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my %hash;\n    while($n > 0) {\n        my $digit = $n % 10;\n        $hash{$digit}++;\n        $n = int($n/10);\n    }\n    foreach my $key (keys %hash) {\n        if($hash{$key} > $key) {\n            return 0;\n        }\n    }\n    return 1;\n}"
  ]
}
{
  "name": "mbpp_291_count_no_of_ways",
  "language": "pl",
  "prompt": "# Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\nsub count_no_of_ways {\n    my($n, $k) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_291_count_no_of_ways.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&count_no_of_ways;\n        if(eq_deeply($candidate->(2, 4),16)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(3, 2),6)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(4, 4),228)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my($same, $diff) = (0, $k);\n    for (my $i = 2; $i <= $n; $i++) {\n        my $tmp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $tmp;\n    }\n    return $same + $diff;\n}",
    "    my $same = 0;\n    my $diff = $k;\n    for(my $i = 2; $i <= $n; $i++) {\n        my $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}",
    "    my $same = 0;\n    my $diff = $k;\n    for (my $i = 2; $i <= $n; $i++) {\n        my $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}",
    "    my($same, $diff) = (0, $k);\n    for (my $i = 2; $i <= $n; $i++) {\n        my $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}",
    "    my $same = 0;\n    my $diff = $k;\n    my $total = $same + $diff;\n    for(my $i = 2; $i <= $n; $i++) {\n        $same = $diff;\n        $diff = $total * ($k - 1);\n        $total = $same + $diff;\n    }\n    return $total;\n}",
    "    my $same = 0;\n    my $diff = $k;\n    for (my $i = 2; $i <= $n; $i++) {\n        my $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}",
    "    my($same, $diff) = (0, $k);\n    for (my $i = 2; $i <= $n; $i++) {\n        my $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}",
    "    my $same = 0;\n    my $diff = $k;\n    my $total = $same + $diff;\n    for (my $i = 2; $i <= $n; $i++) {\n        $same = $diff;\n        $diff = $total * ($k - 1);\n        $total = $same + $diff;\n    }\n    return $total;\n}",
    "    my $same = 0;\n    my $diff = $k;\n    my $total = $same + $diff;\n    for (my $i = 2; $i <= $n; $i++) {\n        $same = $diff;\n        $diff = $total * ($k - 1);\n        $total = $same + $diff;\n    }\n    return $total;\n}",
    "    my $same = 0;\n    my $diff = $k;\n    my $total = $same + $diff;\n    for(my $i = 2; $i <= $n; $i++) {\n        $same = $diff;\n        $diff = $total * ($k - 1);\n        $total = $same + $diff;\n    }\n    return $total;\n}",
    "    my $same = 0;\n    my $diff = $k;\n    my $total = $same + $diff;\n    for my $i (2..$n) {\n        $same = $diff;\n        $diff = $total * ($k - 1);\n        $total = $same + $diff;\n    }\n    return $total;\n}",
    "    my $same = 0;\n    my $diff = $k;\n    for my $i (2 .. $n) {\n        my $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}",
    "    my $same_color = 0;\n    my $diff_color = $k;\n    my $total = $same_color + $diff_color;\n    for (my $i = 2; $i <= $n; $i++) {\n        $same_color = $diff_color;\n        $diff_color = $total * ($k - 1);\n        $total = $same_color + $diff_color;\n    }\n    return $total;\n}",
    "    my($same, $diff) = (0, $k);\n    for my $i (2 .. $n) {\n        my $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}",
    "    my $same = 0;\n    my $diff = $k;\n    my $total = $same + $diff;\n    for my $i (2..$n) {\n        $same = $diff;\n        $diff = $total * ($k - 1);\n        $total = $same + $diff;\n    }\n    return $total;\n}",
    "    my $same = 0;\n    my $diff = $k;\n    my $total = $same + $diff;\n    for(my $i = 2; $i <= $n; $i++) {\n        $same = $diff;\n        $diff = $total * ($k - 1);\n        $total = $same + $diff;\n    }\n    return $total;\n}",
    "    my $same = 0;\n    my $diff = $k;\n    for my $i (2..$n) {\n        my $temp = $diff;\n        $diff = ($same + $diff) * ($k - 1);\n        $same = $temp;\n    }\n    return $same + $diff;\n}",
    "    my $same = 0;\n    my $diff = $k;\n    my $total = $same + $diff;\n    for (my $i = 2; $i <= $n; $i++) {\n        $same = $diff;\n        $diff = $total * ($k - 1);\n        $total = $same + $diff;\n    }\n    return $total;\n}",
    "    my $same = 0;\n    my $diff = $k;\n    my $total = $k;\n    for (my $i = 2; $i <= $n; $i++) {\n        $same = $diff;\n        $diff = $total * ($k - 1);\n        $total = $same + $diff;\n    }\n    return $total;\n}",
    "    my $same = 0;\n    my $diff = $k;\n    my $total = $same + $diff;\n    for (my $i = 2; $i <= $n; $i++) {\n        $same = $diff;\n        $diff = $total * ($k - 1);\n        $total = $same + $diff;\n    }\n    return $total;\n}"
  ]
}
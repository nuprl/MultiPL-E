{
  "name": "mbpp_734_sum_Of_Subarray_Prod",
  "language": "pl",
  "prompt": "# Write a plthon function to find sum of products of all possible subarrays of a given array. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/\nsub sum_Of_Subarray_Prod {\n    my($arr) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_734_sum_Of_Subarray_Prod.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_Of_Subarray_Prod;\n        if(eq_deeply($candidate->([1, 2, 3]),20)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2]),5)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2, 3, 4]),84)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my $n = scalar @$arr;\n    my $sum = 0;\n    for(my $i = 0; $i < $n; $i++) {\n        my $prod = 1;\n        for(my $j = $i; $j < $n; $j++) {\n            $prod *= $arr->[$j];\n            $sum += $prod;\n        }\n    }\n    return $sum;\n}",
    "    my $n = scalar @$arr;\n    my $sum = 0;\n    for(my $i = 0; $i < $n; $i++) {\n        for(my $j = $i; $j < $n; $j++) {\n            my $prod = 1;\n            for(my $k = $i; $k <= $j; $k++) {\n                $prod *= $arr->[$k];\n            }\n            $sum += $prod;\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    for(my $i=0; $i<scalar(@$arr); $i++) {\n        for(my $j=$i; $j<scalar(@$arr); $j++) {\n            my $prod = 1;\n            for(my $k=$i; $k<=$j; $k++) {\n                $prod *= $arr->[$k];\n            }\n            $sum += $prod;\n        }\n    }\n    return $sum;\n}",
    "    my $n = scalar(@$arr);\n    my $sum = 0;\n    for(my $i = 0; $i < $n; $i++) {\n        my $prod = 1;\n        for(my $j = $i; $j < $n; $j++) {\n            $prod *= $arr->[$j];\n            $sum += $prod;\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    my $prod = 1;\n    for(my $i = 0; $i < scalar(@$arr); $i++) {\n        for(my $j = $i; $j < scalar(@$arr); $j++) {\n            for(my $k = $i; $k <= $j; $k++) {\n                $prod *= $arr->[$k];\n            }\n            $sum += $prod;\n            $prod = 1;\n        }\n    }\n    return $sum;\n}",
    "    my $n = scalar @$arr;\n    my $sum = 0;\n    for(my $i = 0; $i < $n; $i++) {\n        my $prod = 1;\n        for(my $j = $i; $j < $n; $j++) {\n            $prod *= $arr->[$j];\n            $sum += $prod;\n        }\n    }\n    return $sum;\n}",
    "    my $n = scalar @{$arr};\n    my $sum = 0;\n    for(my $i = 0; $i < $n; $i++) {\n        my $prod = 1;\n        for(my $j = $i; $j < $n; $j++) {\n            $prod *= $arr->[$j];\n            $sum += $prod;\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    my $n = scalar @$arr;\n    for(my $i = 0; $i < $n; $i++) {\n        for(my $j = $i; $j < $n; $j++) {\n            my $prod = 1;\n            for(my $k = $i; $k <= $j; $k++) {\n                $prod *= $arr->[$k];\n            }\n            $sum += $prod;\n        }\n    }\n    return $sum;\n}",
    "    my $n = scalar(@$arr);\n    my $sum = 0;\n    for(my $i = 0; $i < $n; $i++) {\n        my $prod = 1;\n        for(my $j = $i; $j < $n; $j++) {\n            $prod *= $arr->[$j];\n            $sum += $prod;\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    for(my $i = 0; $i < scalar(@{$arr}); $i++) {\n        my $prod = 1;\n        for(my $j = $i; $j < scalar(@{$arr}); $j++) {\n            $prod *= $arr->[$j];\n            $sum += $prod;\n        }\n    }\n    return $sum;\n}",
    "    my $n = scalar(@$arr);\n    my $sum = 0;\n    for (my $i = 0; $i < $n; $i++) {\n        my $prod = 1;\n        for (my $j = $i; $j < $n; $j++) {\n            $prod *= $arr->[$j];\n            $sum += $prod;\n        }\n    }\n    return $sum;\n}",
    "    my $n = scalar(@$arr);\n    my $sum = 0;\n    for (my $i = 0; $i < $n; $i++) {\n        for (my $j = $i; $j < $n; $j++) {\n            my $prod = 1;\n            for (my $k = $i; $k <= $j; $k++) {\n                $prod *= $arr->[$k];\n            }\n            $sum += $prod;\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    my $n = scalar(@$arr);\n    for (my $i = 0; $i < $n; $i++) {\n        my $prod = 1;\n        for (my $j = $i; $j < $n; $j++) {\n            $prod *= $arr->[$j];\n            $sum += $prod;\n        }\n    }\n    return $sum;\n}",
    "    my $n = scalar(@{$arr});\n    my $sum = 0;\n    for(my $i = 0; $i < $n; $i++) {\n        my $prod = 1;\n        for(my $j = $i; $j < $n; $j++) {\n            $prod *= $arr->[$j];\n            $sum += $prod;\n        }\n    }\n    return $sum;\n}",
    "    my $n = scalar(@$arr);\n    my $sum = 0;\n    for(my $i = 0; $i < $n; $i++) {\n        for(my $j = $i; $j < $n; $j++) {\n            my $prod = 1;\n            for(my $k = $i; $k <= $j; $k++) {\n                $prod *= $arr->[$k];\n            }\n            $sum += $prod;\n        }\n    }\n    return $sum;\n}",
    "    my $n = scalar(@$arr);\n    my $sum = 0;\n    for (my $i = 0; $i < $n; $i++) {\n        for (my $j = $i; $j < $n; $j++) {\n            my $prod = 1;\n            for (my $k = $i; $k <= $j; $k++) {\n                $prod *= $arr->[$k];\n            }\n            $sum += $prod;\n        }\n    }\n    return $sum;\n}",
    "    my $n = scalar(@$arr);\n    my $sum = 0;\n    for(my $i = 0; $i < $n; $i++) {\n        for(my $j = $i; $j < $n; $j++) {\n            my $prod = 1;\n            for(my $k = $i; $k <= $j; $k++) {\n                $prod *= $arr->[$k];\n            }\n            $sum += $prod;\n        }\n    }\n    return $sum;\n}",
    "    my $n = scalar @$arr;\n    my $prod = 1;\n    my $sum = 0;\n    for (my $i = 0; $i < $n; $i++) {\n        for (my $j = $i; $j < $n; $j++) {\n            for (my $k = $i; $k <= $j; $k++) {\n                $prod *= $arr->[$k];\n            }\n            $sum += $prod;\n            $prod = 1;\n        }\n    }\n    return $sum;\n}",
    "    my $n = scalar(@$arr);\n    my $sum = 0;\n    for(my $i=0;$i<$n;$i++){\n        for(my $j=$i;$j<$n;$j++){\n            my $prod = 1;\n            for(my $k=$i;$k<=$j;$k++){\n                $prod *= $arr->[$k];\n            }\n            $sum += $prod;\n        }\n    }\n    return $sum;\n}",
    "    my $n = scalar(@$arr);\n    my $sum = 0;\n    for(my $i=0; $i<$n; $i++) {\n        my $prod = 1;\n        for(my $j=$i; $j<$n; $j++) {\n            $prod *= $arr->[$j];\n            $sum += $prod;\n        }\n    }\n    return $sum;\n}"
  ]
}
{
  "name": "mbpp_133_sum_negativenum",
  "language": "pl",
  "prompt": "# Write a function to calculate the sum of the negative numbers of a given array of numbers.\nsub sum_negativenum {\n    my($nums) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_133_sum_negativenum.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_negativenum;\n        if(eq_deeply($candidate->([2, 4, -6, -9, 11, -12, 14, -5, 17]),-32)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([10, 15, -14, 13, -18, 12, -20]),-52)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([19, -65, 57, 39, 152, -639, 121, 44, 90, -190]),-894)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my $sum = 0;\n    foreach my $num (@$nums) {\n        if ($num < 0) {\n            $sum += $num;\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    foreach my $num (@$nums) {\n        if ($num < 0) {\n            $sum += $num;\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    foreach my $num (@$nums) {\n        if ($num < 0) {\n            $sum += $num;\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    foreach my $num (@$nums) {\n        if ($num < 0) {\n            $sum += $num;\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    foreach my $num (@$nums) {\n        if ($num < 0) {\n            $sum += $num;\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    foreach my $num (@$nums) {\n        if ($num < 0) {\n            $sum += $num;\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    foreach my $num (@$nums) {\n        if($num < 0) {\n            $sum += $num;\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    foreach my $num (@$nums) {\n        if ($num < 0) {\n            $sum += $num;\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    foreach my $num (@$nums) {\n        if ($num < 0) {\n            $sum += $num;\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    foreach my $num (@$nums) {\n        if ($num < 0) {\n            $sum += $num;\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    foreach my $num (@$nums) {\n        if ($num < 0) {\n            $sum += $num;\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    foreach my $num (@$nums) {\n        if ($num < 0) {\n            $sum += $num;\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    foreach my $num (@$nums) {\n        if ($num < 0) {\n            $sum += $num;\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    foreach my $num (@$nums) {\n        if ($num < 0) {\n            $sum += $num;\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    foreach my $num (@$nums) {\n        if ($num < 0) {\n            $sum += $num;\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    foreach my $num (@$nums) {\n        if ($num < 0) {\n            $sum += $num;\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    foreach my $num (@$nums) {\n        if ($num < 0) {\n            $sum += $num;\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    foreach my $num (@$nums) {\n        if ($num < 0) {\n            $sum += $num;\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    foreach my $num (@$nums) {\n        if ($num < 0) {\n            $sum += $num;\n        }\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    foreach my $num (@$nums) {\n        if ($num < 0) {\n            $sum += $num;\n        }\n    }\n    return $sum;\n}"
  ]
}
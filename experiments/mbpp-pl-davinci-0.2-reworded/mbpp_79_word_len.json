{
  "name": "mbpp_79_word_len",
  "language": "pl",
  "prompt": "# Write a plthon function to check whether the length of the word is odd or not.\nsub word_len {\n    my($s) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_79_word_len.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&word_len;\n        if(eq_deeply($candidate->(\"Hadoop\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"great\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"structure\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    if (length($s) % 2 == 0) {\n        return \"Even\";\n    } else {\n        return \"Odd\";\n    }\n}",
    "    return length($s) % 2;\n}",
    "    if (length($s) % 2 == 0) {\n        print \"The length of the word is even\\n\";\n    } else {\n        print \"The length of the word is odd\\n\";\n    }\n}",
    "    if (length($s) % 2 == 0) {\n        return \"Even\";\n    } else {\n        return \"Odd\";\n    }\n}",
    "    if(length($s) % 2 == 0) {\n        print \"The length of the word is even\\n\";\n    }\n    else {\n        print \"The length of the word is odd\\n\";\n    }\n}",
    "    if (length($s) % 2 == 0) {\n        print \"The length of the word is even.\\n\";\n    } else {\n        print \"The length of the word is odd.\\n\";\n    }\n}",
    "    if (length($s) % 2 == 0) {\n        print \"Even\\n\";\n    } else {\n        print \"Odd\\n\";\n    }\n}",
    "    if (length($s) % 2 == 0) {\n        return \"Even\";\n    } else {\n        return \"Odd\";\n    }\n}",
    "    my $len = length($s);\n    if ($len % 2 == 0) {\n        return \"even\";\n    } else {\n        return \"odd\";\n    }\n}",
    "    if(length($s)%2 == 0) {\n        print \"The length of the word is even\\n\";\n    }\n    else {\n        print \"The length of the word is odd\\n\";\n    }\n}",
    "    if (length($s) % 2 == 0) {\n        print \"The length of the word is even.\\n\";\n    } else {\n        print \"The length of the word is odd.\\n\";\n    }\n}",
    "    my $len = length($s);\n    if ($len % 2 == 0) {\n        return \"Even\";\n    } else {\n        return \"Odd\";\n    }\n}",
    "    if(length($s) % 2 == 0) {\n        print \"The length of the word is even.\\n\";\n    } else {\n        print \"The length of the word is odd.\\n\";\n    }\n}",
    "    if(length($s) % 2 == 0) {\n        return \"even\";\n    } else {\n        return \"odd\";\n    }\n}",
    "    my $len = length($s);\n    if ($len % 2 == 0) {\n        return \"even\";\n    } else {\n        return \"odd\";\n    }\n}",
    "    my $len = length($s);\n    if ($len % 2 == 0) {\n        return \"even\";\n    } else {\n        return \"odd\";\n    }\n}",
    "    if (length($s) % 2 == 0) {\n        return \"even\";\n    } else {\n        return \"odd\";\n    }\n}",
    "    if(length($s) % 2 == 0) {\n        print \"Even\\n\";\n    } else {\n        print \"Odd\\n\";\n    }\n}",
    "    if (length($s) % 2 == 0) {\n        return \"Even\";\n    } else {\n        return \"Odd\";\n    }\n}",
    "    my $len = length($s);\n    if ($len % 2 == 0) {\n        return \"Even\";\n    } else {\n        return \"Odd\";\n    }\n}"
  ]
}
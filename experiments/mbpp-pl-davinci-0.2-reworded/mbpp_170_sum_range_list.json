{
  "name": "mbpp_170_sum_range_list",
  "language": "pl",
  "prompt": "# Write a function to find the sum of numbers in an array within a range specified by two indices.\nsub sum_range_list {\n    my($list1, $m, $n) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_170_sum_range_list.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sum_range_list;\n        if(eq_deeply($candidate->([2, 1, 5, 6, 8, 3, 4, 9, 10, 11, 8, 12], 8, 10),29)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 1, 5, 6, 8, 3, 4, 9, 10, 11, 8, 12], 5, 7),16)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 1, 5, 6, 8, 3, 4, 9, 10, 11, 8, 12], 7, 10),38)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my $sum = 0;\n    for (my $i = $m; $i <= $n; $i++) {\n        $sum += $list1->[$i];\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    for my $i ($m .. $n) {\n        $sum += $list1->[$i];\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    for my $i ($m..$n) {\n        $sum += $list1->[$i];\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    for my $i ($m..$n) {\n        $sum += $list1->[$i];\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    for my $i ($m..$n) {\n        $sum += $list1->[$i];\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    for my $i ($m..$n) {\n        $sum += $list1->[$i];\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    for my $i ($m..$n) {\n        $sum += $list1->[$i];\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    for (my $i = $m; $i <= $n; $i++) {\n        $sum += $list1->[$i];\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    for my $i ($m..$n) {\n        $sum += $list1->[$i];\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    for (my $i = $m; $i <= $n; $i++) {\n        $sum += $list1->[$i];\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    for my $i ($m..$n) {\n        $sum += $list1->[$i];\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    foreach my $i ($m..$n) {\n        $sum += $list1->[$i];\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    foreach my $i ($m..$n) {\n        $sum += $list1->[$i];\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    for my $i ($m..$n) {\n        $sum += $list1->[$i];\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    for (my $i = $m; $i <= $n; $i++) {\n        $sum += $list1->[$i];\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    for my $i ($m .. $n) {\n        $sum += $list1->[$i];\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    for (my $i = $m; $i <= $n; $i++) {\n        $sum += $list1->[$i];\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    for my $i ($m..$n) {\n        $sum += $list1->[$i];\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    for my $i ($m..$n) {\n        $sum += $list1->[$i];\n    }\n    return $sum;\n}",
    "    my $sum = 0;\n    for my $i ($m..$n) {\n        $sum += $list1->[$i];\n    }\n    return $sum;\n}"
  ]
}
{
  "name": "mbpp_282_sub_list",
  "language": "pl",
  "prompt": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_282_sub_list.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "results": [
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for (my $i = 0; $i < scalar @$nums1; $i++) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for(my $i = 0; $i < scalar @$nums1; $i++) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for (my $i = 0; $i < @$nums1; $i++) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#$nums1) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @res;\n    for my $i (0 .. @$nums1 - 1) {\n        push @res, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@res;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for (my $i = 0; $i < @$nums1; $i++) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my $len = scalar @$nums1;\n    my @result;\n    for my $i (0..$len-1) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for (my $i = 0; $i < scalar @$nums1; $i++) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. @$nums1 - 1) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123321,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp9e_24gkr.pl line 10.\nBEGIN failed--compilation aborted at /tmp/tmp9e_24gkr.pl line 10.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for (my $i = 0; $i < @$nums1; $i++) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @sub;\n    for my $i (0 .. $#{$nums1}) {\n        push @sub, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@sub;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123321,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmphrkvhzfw.pl line 10.\nBEGIN failed--compilation aborted at /tmp/tmphrkvhzfw.pl line 10.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for (my $i = 0; $i < @$nums1; $i++) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my $result = [];\n    for (my $i = 0; $i < scalar @$nums1; $i++) {\n        push @$result, $nums1->[$i] - $nums2->[$i];\n    }\n    return $result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123321,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpvexgnvi2.pl line 10.\nBEGIN failed--compilation aborted at /tmp/tmpvexgnvi2.pl line 10.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for (my $i = 0; $i < @$nums1; $i++) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @res;\n    for (my $i = 0; $i < scalar @$nums1; $i++) {\n        push @res, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@res;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123321,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpg7c9q7ty.pl line 10.\nBEGIN failed--compilation aborted at /tmp/tmpg7c9q7ty.pl line 10.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#$nums1) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123321,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpg5nr8i2t.pl line 10.\nBEGIN failed--compilation aborted at /tmp/tmpg5nr8i2t.pl line 10.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for (my $i = 0; $i < scalar @$nums1; $i++) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @res = ();\n    for my $i (0 .. $#{$nums1}) {\n        push @res, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@res;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123321,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp9pvpvs5y.pl line 10.\nBEGIN failed--compilation aborted at /tmp/tmp9pvpvs5y.pl line 10.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my $len = @$nums1;\n    my @result;\n    for (my $i = 0; $i < $len; $i++) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123321,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpfdp8_1dr.pl line 11.\nBEGIN failed--compilation aborted at /tmp/tmpfdp8_1dr.pl line 11.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for (my $i = 0; $i < @$nums1; $i++) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for(my $i = 0; $i < scalar(@$nums1); $i++) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123321,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpewetxpea.pl line 10.\nBEGIN failed--compilation aborted at /tmp/tmpewetxpea.pl line 10.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123321,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp_q7eecl2.pl line 10.\nBEGIN failed--compilation aborted at /tmp/tmp_q7eecl2.pl line 10.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for (my $i = 0; $i < scalar @$nums1; $i++) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123321,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp_q7eecl2.pl line 10.\nBEGIN failed--compilation aborted at /tmp/tmp_q7eecl2.pl line 10.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for (my $i = 0; $i < scalar(@$nums1); $i++) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123321,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmprj5zgdlj.pl line 10.\nBEGIN failed--compilation aborted at /tmp/tmprj5zgdlj.pl line 10.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for (my $i = 0; $i < scalar(@$nums1); $i++) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123321,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmprj5zgdlj.pl line 10.\nBEGIN failed--compilation aborted at /tmp/tmprj5zgdlj.pl line 10.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @sub_list;\n    for (my $i = 0; $i < scalar @$nums1; $i++) {\n        push @sub_list, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@sub_list;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123321,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpjl_tysfo.pl line 10.\nBEGIN failed--compilation aborted at /tmp/tmpjl_tysfo.pl line 10.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..@$nums1-1) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123321,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpd4g2ifsb.pl line 10.\nBEGIN failed--compilation aborted at /tmp/tmpd4g2ifsb.pl line 10.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#$nums1) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123321,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpg5nr8i2t.pl line 10.\nBEGIN failed--compilation aborted at /tmp/tmpg5nr8i2t.pl line 10.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for (my $i = 0; $i < scalar @$nums1; $i++) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for (my $i = 0; $i < @$nums1; $i++) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my $len = scalar @$nums1;\n    my @res;\n    for (my $i = 0; $i < $len; $i++) {\n        push @res, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@res;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123321,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpzl0ho9xm.pl line 11.\nBEGIN failed--compilation aborted at /tmp/tmpzl0ho9xm.pl line 11.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for (my $i = 0; $i < @$nums1; $i++) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123321,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp_q7eecl2.pl line 10.\nBEGIN failed--compilation aborted at /tmp/tmp_q7eecl2.pl line 10.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for (my $i = 0; $i < @$nums1; $i++) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#$nums1) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my $n = @$nums1;\n    my $m = @$nums2;\n    if ($n != $m) {\n        die \"sub_list: arrays must be the same length\";\n    }\n    my @result;\n    for (my $i = 0; $i < $n; $i++) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123321,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpo98_1ddi.pl line 15.\nBEGIN failed--compilation aborted at /tmp/tmpo98_1ddi.pl line 15.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for (my $i = 0; $i < @$nums1; $i++) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for(my $i = 0; $i < scalar(@$nums1); $i++) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123321,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpewetxpea.pl line 10.\nBEGIN failed--compilation aborted at /tmp/tmpewetxpea.pl line 10.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#$nums1) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123321,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpg5nr8i2t.pl line 10.\nBEGIN failed--compilation aborted at /tmp/tmpg5nr8i2t.pl line 10.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#$nums1) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123321,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpg5nr8i2t.pl line 10.\nBEGIN failed--compilation aborted at /tmp/tmpg5nr8i2t.pl line 10.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#$nums1) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my $len = scalar @$nums1;\n    my @res;\n    for (my $i = 0; $i < $len; $i++) {\n        push @res, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@res;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123321,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpzl0ho9xm.pl line 11.\nBEGIN failed--compilation aborted at /tmp/tmpzl0ho9xm.pl line 11.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my $len = scalar @$nums1;\n    my @res;\n    for (my $i = 0; $i < $len; $i++) {\n        push @res, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@res;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123321,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpzl0ho9xm.pl line 11.\nBEGIN failed--compilation aborted at /tmp/tmpzl0ho9xm.pl line 11.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for (my $i = 0; $i < scalar @$nums1; $i++) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for (my $i = 0; $i < @$nums1; $i++) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for (my $i = 0; $i < @$nums1; $i++) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#$nums1) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123321,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpg5nr8i2t.pl line 10.\nBEGIN failed--compilation aborted at /tmp/tmpg5nr8i2t.pl line 10.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result = ();\n    for (my $i = 0; $i < scalar(@$nums1); $i++) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123321,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpbb0jch1o.pl line 10.\nBEGIN failed--compilation aborted at /tmp/tmpbb0jch1o.pl line 10.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for (my $i = 0; $i < scalar(@$nums1); $i++) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123321,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmprj5zgdlj.pl line 10.\nBEGIN failed--compilation aborted at /tmp/tmprj5zgdlj.pl line 10.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @sub_list = ();\n    for (my $i = 0; $i < scalar @$nums1; $i++) {\n        push @sub_list, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@sub_list;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123321,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpdiwk89ry.pl line 10.\nBEGIN failed--compilation aborted at /tmp/tmpdiwk89ry.pl line 10.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#{$nums1}) {\n        my $diff = $nums1->[$i] - $nums2->[$i];\n        push @result, $diff;\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123321,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmplz20at45.pl line 11.\nBEGIN failed--compilation aborted at /tmp/tmplz20at45.pl line 11.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @sub_list;\n    for (my $i = 0; $i < scalar @$nums1; $i++) {\n        push @sub_list, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@sub_list;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123321,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpjl_tysfo.pl line 10.\nBEGIN failed--compilation aborted at /tmp/tmpjl_tysfo.pl line 10.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for (my $i = 0; $i < @$nums1; $i++) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return @result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123321,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpcstvt5lt.pl line 10.\nBEGIN failed--compilation aborted at /tmp/tmpcstvt5lt.pl line 10.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for (my $i = 0; $i < scalar @$nums1; $i++) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my $len = scalar @$nums1;\n    my @result;\n    for (my $i = 0; $i < $len; $i++) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123321,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpzxkx0nld.pl line 11.\nBEGIN failed--compilation aborted at /tmp/tmpzxkx0nld.pl line 11.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for (my $i = 0; $i < @$nums1; $i++) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for (my $i = 0; $i < @$nums1; $i++) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0..$#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to subtract two arrays element-wise.\nsub sub_list {\n    my($nums1, $nums2) = @_;\n    my @result;\n    for my $i (0 .. $#{$nums1}) {\n        push @result, $nums1->[$i] - $nums2->[$i];\n    }\n    return \\@result;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sub_list;\n        if(eq_deeply($candidate->([1, 2, 3], [4, 5, 6]),[-3, -3, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2], [3, 4]),[-2, -2])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([90, 120], [50, 70]),[40, 50])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665510374,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
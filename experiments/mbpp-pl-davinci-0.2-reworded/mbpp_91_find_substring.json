{
  "name": "mbpp_91_find_substring",
  "language": "pl",
  "prompt": "# Write a function to check if a string is present as a substring in a given array of string values.\nsub find_substring {\n    my($str1, $sub_str) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_91_find_substring.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&find_substring;\n        if(eq_deeply($candidate->([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ack\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"abc\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([\"red\", \"black\", \"white\", \"green\", \"orange\"], \"ange\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my @str_arr = split(/\\s+/, $str1);\n    for my $str (@str_arr) {\n        if($str eq $sub_str) {\n            return 1;\n        }\n    }\n    return 0;\n}",
    "    my $result = 0;\n    for my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my @str_arr = split(/\\s+/, $str1);\n    my $found = 0;\n    foreach my $str (@str_arr) {\n        if ($str eq $sub_str) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $found = 0;\n    for my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $found = 0;\n    foreach my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $result = 0;\n    foreach my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $result = 0;\n    if (index($str1, $sub_str) != -1) {\n        $result = 1;\n    }\n    return $result;\n}",
    "    my $found = 0;\n    foreach my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $found = 0;\n    foreach my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    return 1 if $str1 =~ /$sub_str/;\n    return 0;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $found = 0;\n    for my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    return index($str1, $sub_str) != -1;\n}",
    "    my $flag = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $flag = 1;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my @str_arr = split(/ /, $str1);\n    foreach my $str (@str_arr) {\n        if($str eq $sub_str) {\n            return 1;\n        }\n    }\n    return 0;\n}",
    "    my $flag = 0;\n    foreach my $str (@$str1) {\n        if($str =~ /$sub_str/){\n            $flag = 1;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    if (index($str1, $sub_str) != -1) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $result = 0;\n    for my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $flag = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $flag = 1;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my $result = 0;\n    foreach my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $result = 0;\n    foreach my $str (@$str1) {\n        if($str =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $found = 0;\n    my $len1 = length($str1);\n    my $len2 = length($sub_str);\n    for($i = 0; $i < $len1; $i++) {\n        if($str1[$i] == $sub_str[$j]) {\n            $j++;\n            if($j == $len2) {\n                $found = 1;\n                last;\n            }\n        }\n    }\n    return $found;\n}",
    "    my @str_arr = split(/ /, $str1);\n    my $flag = 0;\n    foreach my $str (@str_arr) {\n        if($str eq $sub_str) {\n            $flag = 1;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my @str1 = split('', $str1);\n    my @sub_str = split('', $sub_str);\n    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    while($i < scalar(@str1)) {\n        if($str1[$i] eq $sub_str[$j]) {\n            $i++;\n            $j++;\n        }\n        else {\n            $i++;\n            $j = 0;\n        }\n        if($j == scalar(@sub_str)) {\n            $flag = 1;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my $found = 0;\n    foreach my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $result = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $result = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    my $len1 = length($str1);\n    my $len2 = length($sub_str);\n    for ($i = 0; $i < $len1; $i++) {\n        if ($str1[$i] == $sub_str[$j]) {\n            $j++;\n        }\n        if ($j == $len2) {\n            $flag = 1;\n            last;\n        }\n    }\n    if ($flag == 1) {\n        print \"Substring found\\n\";\n    }\n    else {\n        print \"Substring not found\\n\";\n    }\n}",
    "    my $found = 0;\n    foreach my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $flag = 0;\n    foreach my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $flag = 1;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $found = 0;\n    foreach my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $result = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $result = 0;\n    foreach my $str (@$str1) {\n        if($str =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $result = 0;\n    foreach my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $len1 = length($str1);\n    my $len2 = length($sub_str);\n    my $found = 0;\n    for($i = 0; $i < $len1; $i++) {\n        if($str1[$i] eq $sub_str[$j]) {\n            $j++;\n        }\n        else {\n            $j = 0;\n        }\n        if($j == $len2) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    if (index($str1, $sub_str) != -1) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $result = 0;\n    foreach my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $found = 0;\n    foreach my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $result = 0;\n    foreach my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my @str_arr = split(/ /, $str1);\n    foreach my $str (@str_arr) {\n        if ($str eq $sub_str) {\n            return 1;\n        }\n    }\n    return 0;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $found = 0;\n    for my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $result = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $str_len = length($str1);\n    my $sub_str_len = length($sub_str);\n    my $i = 0;\n    my $j = 0;\n    my $found = 0;\n    for($i = 0; $i < $str_len; $i++) {\n        if($str1[$i] == $sub_str[$j]) {\n            $j++;\n            if($j == $sub_str_len) {\n                $found = 1;\n                last;\n            }\n        }\n        else {\n            $j = 0;\n        }\n    }\n    return $found;\n}",
    "    my $found = 0;\n    for my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $found = 0;\n    foreach my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my @str_arr = split(/\\s+/, $str1);\n    my $flag = 0;\n    foreach my $str (@str_arr) {\n        if ($str eq $sub_str) {\n            $flag = 1;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my $found = 0;\n    foreach my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $sub_str_length = length($sub_str);\n    my $str1_length = length($str1);\n    my $i = 0;\n    my $j = 0;\n    my $found = 0;\n    for($i = 0; $i < $str1_length; $i++) {\n        if($sub_str[$j] eq $str1[$i]) {\n            $j++;\n        }\n        else {\n            $j = 0;\n        }\n        if($j == $sub_str_length) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $found = 0;\n    for my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $result = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $found = 0;\n    foreach my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $result = 0;\n    for my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $str_len = length($str1);\n    my $sub_str_len = length($sub_str);\n    my $i;\n    my $j;\n    my $k;\n    for($i = 0; $i < $str_len - $sub_str_len; $i++) {\n        $k = $i;\n        for($j = 0; $j < $sub_str_len; $j++) {\n            if($str1[$k] != $sub_str[$j]) {\n                last;\n            }\n            $k++;\n        }\n        if($j == $sub_str_len) {\n            return 1;\n        }\n    }\n    return 0;\n}",
    "    my $found = 0;\n    foreach my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $count = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $result = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $flag = 0;\n    foreach my $str (@$str1) {\n        if($str =~ /$sub_str/) {\n            $flag = 1;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    if (index($str1, $sub_str) != -1) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    my $len = length($sub_str);\n    my $i = 0;\n    while($i < length($str1)) {\n        if(substr($str1, $i, $len) eq $sub_str) {\n            return 1;\n        }\n        $i++;\n    }\n    return 0;\n}",
    "    my @str1 = split //, $str1;\n    my @sub_str = split //, $sub_str;\n    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    while ($i < scalar @str1) {\n        if ($str1[$i] eq $sub_str[$j]) {\n            $i++;\n            $j++;\n        }\n        else {\n            $i++;\n            $j = 0;\n        }\n        if ($j == scalar @sub_str) {\n            $flag = 1;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my $found = 0;\n    foreach my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $result = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $result = 0;\n    foreach my $str2 (@$str1) {\n        if (index($str2, $sub_str) != -1) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $result = 0;\n    foreach my $str (@$str1) {\n        if($str =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $count = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $found = 0;\n    foreach my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $count = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $result = 0;\n    foreach my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $result = 0;\n    foreach my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $result = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $result = 0;\n    for my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if (index($str, $sub_str) != -1) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $result = 0;\n    foreach my $str (@$str1) {\n        if($str =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $count = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $flag = 0;\n    foreach my $str (@$str1) {\n        if($str =~ /$sub_str/) {\n            $flag = 1;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my @str_arr = split(/\\s+/, $str1);\n    my $i = 0;\n    foreach my $str (@str_arr) {\n        if ($str eq $sub_str) {\n            return $i;\n        }\n        $i++;\n    }\n    return -1;\n}",
    "    my $result = 0;\n    foreach my $str (@$str1) {\n        if($str =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $result = 0;\n    foreach my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    return $str1 =~ /$sub_str/;\n}",
    "    my $result = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $result = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $flag = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $flag = 1;\n        }\n    }\n    return $flag;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $result = 0;\n    foreach my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $result = 0;\n    foreach my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $result = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ m/$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $found = 0;\n    foreach my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $result = 0;\n    foreach my $str (@$str1) {\n        if($str =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    if(index($str1, $sub_str) != -1) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $flag = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $flag = 1;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my $len = length($sub_str);\n    my $i = 0;\n    while ($i < length($str1) - $len + 1) {\n        if (substr($str1, $i, $len) eq $sub_str) {\n            return 1;\n        }\n        $i++;\n    }\n    return 0;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $len = length($sub_str);\n    my $i = 0;\n    while($i < length($str1)) {\n        if(substr($str1, $i, $len) eq $sub_str) {\n            return 1;\n        }\n        $i++;\n    }\n    return 0;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    my $len1 = length($str1);\n    my $len2 = length($sub_str);\n    for($i = 0; $i < $len1; $i++) {\n        for($j = 0; $j < $len2; $j++) {\n            if(substr($str1, $i, 1) eq substr($sub_str, $j, 1)) {\n                $flag = 1;\n            }\n            else {\n                $flag = 0;\n                last;\n            }\n        }\n        if($flag == 1) {\n            last;\n        }\n    }\n    if($flag == 1) {\n        print \"Substring is present in the string\\n\";\n    }\n    else {\n        print \"Substring is not present in the string\\n\";\n    }\n}",
    "    my $found = 0;\n    foreach my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    return $str1 =~ /$sub_str/;\n}",
    "    my $pos = index($str1, $sub_str);\n    if ($pos == -1) {\n        return 0;\n    }\n    else {\n        return 1;\n    }\n}",
    "    my $flag = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $flag = 1;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my $found = 0;\n    for my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $result = 0;\n    foreach my $str (@$str1) {\n        if($str =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my @str1 = split(//, $str1);\n    my @sub_str = split(//, $sub_str);\n    my $len = length($sub_str);\n    my $i = 0;\n    my $j = 0;\n    my $found = 0;\n    while($i < length($str1)) {\n        if($str1[$i] eq $sub_str[$j]) {\n            $j++;\n            $i++;\n        }\n        else {\n            $i++;\n            $j = 0;\n        }\n        if($j == $len) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $len = length($sub_str);\n    my $i = 0;\n    my $j = 0;\n    my $found = 0;\n    for ($i = 0; $i < length($str1) - $len; $i++) {\n        for ($j = 0; $j < $len; $j++) {\n            if (substr($str1, $i + $j, 1) ne substr($sub_str, $j, 1)) {\n                $found = 0;\n                last;\n            }\n            $found = 1;\n        }\n        if ($found) {\n            return 1;\n        }\n    }\n    return 0;\n}",
    "    return 1 if $str1 =~ /$sub_str/;\n    return 0;\n}",
    "    my $flag = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $flag = 1;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    if (index($str1, $sub_str) != -1) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $result = 0;\n    for my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $flag = 0;\n    for(my $i=0; $i<scalar(@$str1); $i++) {\n        if(index($$str1[$i], $sub_str) != -1) {\n            $flag = 1;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my $result = 0;\n    for my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $result = 0;\n    for my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $found = 0;\n    foreach my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $result = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $found = 0;\n    foreach my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $result = 0;\n    foreach my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $result = 0;\n    for my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my @str_arr = split(/\\s+/, $str1);\n    my $flag = 0;\n    foreach my $str (@str_arr) {\n        if ($str eq $sub_str) {\n            $flag = 1;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my $len = length($sub_str);\n    my $i = 0;\n    while ($i < length($str1)) {\n        my $sub_str1 = substr($str1, $i, $len);\n        if ($sub_str1 eq $sub_str) {\n            return 1;\n        }\n        $i++;\n    }\n    return 0;\n}",
    "    my $len = length($sub_str);\n    my $i = 0;\n    while($i < length($str1)) {\n        if(substr($str1, $i, $len) eq $sub_str) {\n            return 1;\n        }\n        $i++;\n    }\n    return 0;\n}",
    "    my $found = 0;\n    for my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my @str_arr = split(/\\s+/, $str1);\n    foreach my $str (@str_arr) {\n        if ($str eq $sub_str) {\n            return 1;\n        }\n    }\n    return 0;\n}",
    "    my $len = length($sub_str);\n    my $i = 0;\n    my $j = 0;\n    my $found = 0;\n    my $count = 0;\n    while($i < length($str1)) {\n        if(substr($str1, $i, $len) eq $sub_str) {\n            $found = 1;\n            $count++;\n            $i = $i + $len;\n        }\n        else {\n            $i++;\n        }\n    }\n    if($found == 1) {\n        return $count;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $found = 0;\n    for my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $result = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $result = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $result = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    if (index($str1, $sub_str) != -1) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $result = 0;\n    foreach my $str (@$str1) {\n        if($str =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $found = 0;\n    for my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    return $str1 =~ /$sub_str/;\n}",
    "    my @str1 = split('', $str1);\n    my @sub_str = split('', $sub_str);\n    my $len = length($sub_str);\n    my $i = 0;\n    my $j = 0;\n    my $found = 0;\n    while($i < length($str1)) {\n        if($str1[$i] eq $sub_str[$j]) {\n            $i++;\n            $j++;\n        }\n        else {\n            $i++;\n            $j = 0;\n        }\n        if($j == $len) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $found = 0;\n    for my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $result = 0;\n    if (index($str1, $sub_str) != -1) {\n        $result = 1;\n    }\n    return $result;\n}",
    "    my $len = length($sub_str);\n    for (my $i = 0; $i < length($str1) - $len + 1; $i++) {\n        if (substr($str1, $i, $len) eq $sub_str) {\n            return $i;\n        }\n    }\n    return -1;\n}",
    "    my @str_arr = split(/\\s+/, $str1);\n    foreach my $str (@str_arr) {\n        if ($str =~ /$sub_str/) {\n            return 1;\n        }\n    }\n    return 0;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my @arr = split(/ /, $str1);\n    my $flag = 0;\n    foreach my $str (@arr) {\n        if($str eq $sub_str) {\n            $flag = 1;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my $len = length($sub_str);\n    my $i = 0;\n    my $j = 0;\n    for($i = 0; $i < length($str1) - $len; $i++) {\n        for($j = 0; $j < $len; $j++) {\n            if(substr($str1, $i+$j, 1) ne substr($sub_str, $j, 1)) {\n                last;\n            }\n        }\n        if($j == $len) {\n            return 1;\n        }\n    }\n    return 0;\n}",
    "    my @str_arr = split(/\\s+/, $str1);\n    my $flag = 0;\n    foreach my $str (@str_arr) {\n        if ($str eq $sub_str) {\n            $flag = 1;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my @arr = split(/\\s+/, $str1);\n    my $result = 0;\n    foreach my $str (@arr) {\n        if ($str =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $result = 0;\n    if ($str1 =~ /$sub_str/) {\n        $result = 1;\n    }\n    return $result;\n}",
    "    my $result = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $flag = 0;\n    my @str_array = split(/\\s+/, $str1);\n    foreach my $str (@str_array) {\n        if ($str =~ /$sub_str/) {\n            $flag = 1;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $len = length($sub_str);\n    for (my $i = 0; $i < length($str1) - $len + 1; $i++) {\n        if (substr($str1, $i, $len) eq $sub_str) {\n            return 1;\n        }\n    }\n    return 0;\n}",
    "    my $found = 0;\n    for my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my @str_array = split(/ /, $str1);\n    my $flag = 0;\n    foreach my $str (@str_array) {\n        if ($str eq $sub_str) {\n            $flag = 1;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my $result = 0;\n    foreach my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $found = 0;\n    foreach my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my @str = @$str1;\n    my $flag = 0;\n    foreach my $str (@str) {\n        if ($str =~ /$sub_str/) {\n            $flag = 1;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    my $len = length($sub_str);\n    my $i = 0;\n    my $j = 0;\n    my $found = 0;\n    while($i < length($str1)) {\n        if(substr($str1, $i, $len) eq $sub_str) {\n            $found = 1;\n            last;\n        }\n        $i++;\n    }\n    return $found;\n}",
    "    my $found = 0;\n    foreach my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    if (index($str1, $sub_str) != -1) {\n        return 1;\n    }\n    return 0;\n}",
    "    my $found = 0;\n    for my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $len = length($sub_str);\n    my $i = 0;\n    while ($i < length($str1)) {\n        if (substr($str1, $i, $len) eq $sub_str) {\n            return 1;\n        }\n        $i++;\n    }\n    return 0;\n}",
    "    my $str_len = length($str1);\n    my $sub_str_len = length($sub_str);\n    my $i = 0;\n    my $j = 0;\n    my $found = 0;\n    while($i < $str_len && $j < $sub_str_len) {\n        if($str1[$i] == $sub_str[$j]) {\n            $i++;\n            $j++;\n        }\n        else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    if($j == $sub_str_len) {\n        $found = 1;\n    }\n    return $found;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    my $len1 = length($str1);\n    my $len2 = length($sub_str);\n    for($i = 0; $i < $len1; $i++) {\n        if($str1[$i] == $sub_str[$j]) {\n            $j++;\n        }\n        else {\n            $j = 0;\n        }\n        if($j == $len2) {\n            $flag = 1;\n            last;\n        }\n    }\n    if($flag == 1) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $found = 0;\n    foreach my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n        }\n    }\n    return $found;\n}",
    "    my $found = 0;\n    foreach my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $result = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $result = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $result = 0;\n    for my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $result = 1;\n        }\n    }\n    return $result;\n}",
    "    my $len = length($str1);\n    my $sub_len = length($sub_str);\n    my $i;\n    my $j;\n    for($i = 0; $i <= $len - $sub_len; $i++) {\n        for($j = 0; $j < $sub_len; $j++) {\n            if(substr($str1, $i + $j, 1) ne substr($sub_str, $j, 1)) {\n                last;\n            }\n        }\n        if($j == $sub_len) {\n            return 1;\n        }\n    }\n    return 0;\n}",
    "    my $len = length($sub_str);\n    my $i = 0;\n    while($i < length($str1)) {\n        if(substr($str1, $i, $len) eq $sub_str) {\n            return 1;\n        }\n        $i++;\n    }\n    return 0;\n}",
    "    for my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            return 1;\n        }\n    }\n    return 0;\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $result = 0;\n    foreach my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $found = 0;\n    foreach my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $result = 0;\n    for my $str (@$str1) {\n        if (index($str, $sub_str) != -1) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my $result = 0;\n    for my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}",
    "    my @arr = split(/\\s+/, $str1);\n    foreach my $str (@arr) {\n        if ($str =~ /$sub_str/) {\n            return 1;\n        }\n    }\n    return 0;\n}",
    "    my $len = length($sub_str);\n    my $i = 0;\n    my $j = 0;\n    my $found = 0;\n    my $count = 0;\n    while($i < length($str1)) {\n        if(substr($str1, $i, $len) eq $sub_str) {\n            $found = 1;\n            $count++;\n        }\n        $i++;\n    }\n    if($found == 1) {\n        print \"The substring $sub_str is present in $str1 $count times\\n\";\n    }\n    else {\n        print \"The substring $sub_str is not present in $str1\\n\";\n    }\n}",
    "    my $found = 0;\n    foreach my $str (@$str1) {\n        if ($str =~ /$sub_str/) {\n            $found = 1;\n            last;\n        }\n    }\n    return $found;\n}",
    "    my $flag = 0;\n    foreach my $str (@$str1) {\n        if($str =~ /$sub_str/) {\n            $flag = 1;\n            last;\n        }\n    }\n    return $flag;\n}",
    "    return $str1 =~ /$sub_str/;\n}",
    "    my $result = 0;\n    foreach my $str2 (@$str1) {\n        if ($str2 =~ /$sub_str/) {\n            $result = 1;\n            last;\n        }\n    }\n    return $result;\n}"
  ]
}
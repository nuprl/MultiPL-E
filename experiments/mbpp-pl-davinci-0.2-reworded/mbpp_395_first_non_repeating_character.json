{
  "name": "mbpp_395_first_non_repeating_character",
  "language": "pl",
  "prompt": "# Write a plthon function to find the first non-repeated character in a given string.\nsub first_non_repeating_character {\n    my($str1) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_395_first_non_repeating_character.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&first_non_repeating_character;\n        if(eq_deeply($candidate->(\"abcabc\"),undef)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"abc\"),\"a\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"ababc\"),\"c\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n    return undef;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char (@char) {\n        $count{$char}++;\n    }\n    foreach my $char (@char) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    my @characters = split //, $str1;\n    foreach my $char (@characters) {\n        $count{$char}++;\n    }\n    foreach my $char (@characters) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my @str_array = split(//, $str1);\n    my %count;\n    foreach my $char (@str_array) {\n        $count{$char}++;\n    }\n    foreach my $char (@str_array) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n    return \"No non-repeating character found\";\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n    return undef;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n    return undef;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n    return undef;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n    return undef;\n}",
    "    my(%count);\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    my @chars = split(//, $str1);\n    foreach my $char (@chars) {\n        $count{$char}++;\n    }\n    foreach my $char (@chars) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my(%hash,$chr,$i);\n    for($i=0;$i<length($str1);$i++) {\n        $chr = substr($str1,$i,1);\n        if(exists($hash{$chr})) {\n            $hash{$chr} = $hash{$chr} + 1;\n        }\n        else {\n            $hash{$chr} = 1;\n        }\n    }\n    for($i=0;$i<length($str1);$i++) {\n        $chr = substr($str1,$i,1);\n        if($hash{$chr} == 1) {\n            return $chr;\n        }\n    }\n    return \"\";\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char(@char) {\n        $count{$char}++;\n    }\n    foreach my $char(@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char(@char) {\n        $count{$char}++;\n    }\n    foreach my $char(@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    my @array = split('', $str1);\n    foreach my $char (@array) {\n        $count{$char}++;\n    }\n    foreach my $char (@array) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n}\nprint first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char(@char) {\n        $count{$char}++;\n    }\n    foreach my $char(@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char(@char) {\n        $count{$char}++;\n    }\n    foreach my $char(@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    my @characters = split(//, $str1);\n    foreach my $char (@characters) {\n        $count{$char}++;\n    }\n    foreach my $char (keys %count) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my(%hash) = ();\n    my(@arr) = split(//, $str1);\n    foreach my $char (@arr) {\n        if(exists $hash{$char}) {\n            $hash{$char} += 1;\n        } else {\n            $hash{$char} = 1;\n        }\n    }\n    foreach my $char (@arr) {\n        if($hash{$char} == 1) {\n            return $char;\n        }\n    }\n    return \"\";\n}",
    "    my %count;\n    my @chars = split(//, $str1);\n    foreach my $char (@chars) {\n        $count{$char}++;\n    }\n    foreach my $char (@chars) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n    return \"No non-repeating character found\";\n}",
    "    my(%count);\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n}",
    "    my(@char_array) = split(//, $str1);\n    my(%char_hash) = ();\n    foreach my $char (@char_array) {\n        if(exists $char_hash{$char}) {\n            $char_hash{$char}++;\n        } else {\n            $char_hash{$char} = 1;\n        }\n    }\n    foreach my $char (@char_array) {\n        if($char_hash{$char} == 1) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n}\nprint first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        $char{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        if ($char{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    my @char = split('', $str1);\n    foreach my $char (@char) {\n        $count{$char}++;\n    }\n    foreach my $char (@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n    return -1;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %count;\n    my @char = split //, $str1;\n    foreach my $char (@char) {\n        $count{$char}++;\n    }\n    foreach my $char (@char) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n    return undef;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n    return '-1';\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $count = 0;\n    my $len = length($str1);\n    for($i = 0; $i < $len; $i++) {\n        $count = 0;\n        for($j = 0; $j < $len; $j++) {\n            if(substr($str1, $i, 1) eq substr($str1, $j, 1)) {\n                $count++;\n            }\n        }\n        if($count == 1) {\n            return substr($str1, $i, 1);\n        }\n    }\n    return -1;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n    return -1;\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char (@char) {\n        $count{$char}++;\n    }\n    foreach my $char (@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n    return -1;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n    return undef;\n}",
    "    my(%count);\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n    return undef;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n    return undef;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n}",
    "    my %count;\n    my @char = split //, $str1;\n    foreach my $char(@char) {\n        $count{$char}++;\n    }\n    foreach my $char(@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n}",
    "    my %char_count;\n    foreach my $char (split //, $str1) {\n        $char_count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $char_count{$char} == 1;\n    }\n    return undef;\n}",
    "    my %hash;\n    my $i;\n    my $j;\n    my $len = length($str1);\n    for($i=0;$i<$len;$i++) {\n        $hash{substr($str1,$i,1)}++;\n    }\n    for($j=0;$j<$len;$j++) {\n        if($hash{substr($str1,$j,1)} == 1) {\n            return substr($str1,$j,1);\n        }\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n}\nprint(first_non_repeating_character('the quick brown fox jumps then quickly blow air'));",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n    return undef;\n}",
    "    my %count;\n    my @char = split(//,$str1);\n    foreach my $char(@char) {\n        $count{$char}++;\n    }\n    foreach my $char(@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n    return undef;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %char;\n    my @characters = split(//, $str1);\n    foreach my $char (@characters) {\n        $char{$char} += 1;\n    }\n    foreach my $char (keys %char) {\n        if ($char{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char (@char) {\n        $count{$char}++;\n    }\n    foreach my $char (@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n    return -1;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $count = 0;\n    my $length = length($str1);\n    for($i = 0; $i < $length; $i++) {\n        $count = 0;\n        for($j = 0; $j < $length; $j++) {\n            if(substr($str1, $i, 1) eq substr($str1, $j, 1)) {\n                $count++;\n            }\n        }\n        if($count == 1) {\n            return substr($str1, $i, 1);\n        }\n    }\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char(@char) {\n        $count{$char}++;\n    }\n    foreach my $char(@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    my @char = split(\"\", $str1);\n    foreach my $char(@char) {\n        $count{$char}++;\n    }\n    foreach my $char(@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n    return \"No non-repeating character\";\n}",
    "    my(%count);\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n    return undef;\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char(@char) {\n        $count{$char}++;\n    }\n    foreach my $char(@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n    return undef;\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char(@char) {\n        $count{$char}++;\n    }\n    foreach my $char(@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %hash;\n    my @arr = split(\"\", $str1);\n    foreach my $char (@arr) {\n        $hash{$char}++;\n    }\n    foreach my $char (@arr) {\n        if($hash{$char} == 1) {\n            return $char;\n        }\n    }\n    return -1;\n}",
    "    my(%hash, $i, $char);\n    for($i=0; $i<length($str1); $i++) {\n        $char = substr($str1, $i, 1);\n        $hash{$char}++;\n    }\n    foreach $char (keys %hash) {\n        if($hash{$char} == 1) {\n            return $char;\n        }\n    }\n    return -1;\n}",
    "    my %count;\n    my @char = split //, $str1;\n    foreach my $char(@char) {\n        $count{$char}++;\n    }\n    foreach my $char(@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %hash;\n    foreach my $char (split //, $str1) {\n        $hash{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        if ($hash{$char} == 1) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n    return undef;\n}",
    "    my %count;\n    my @chars = split(//, $str1);\n    foreach my $char (@chars) {\n        $count{$char}++;\n    }\n    foreach my $char (@chars) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n    return -1;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char (@char) {\n        $count{$char}++;\n    }\n    foreach my $char (@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n    return undef;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n    return undef;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n}",
    "    my %count;\n    my @characters = split //, $str1;\n    foreach my $char (@characters) {\n        $count{$char}++;\n    }\n    foreach my $char (keys %count) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char(@char){\n        $count{$char}++;\n    }\n    foreach my $char(@char){\n        if($count{$char} == 1){\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    my @characters = split(//, $str1);\n    foreach my $char (@characters) {\n        $count{$char}++;\n    }\n    foreach my $char (@characters) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n    return \"No non-repeating character found\";\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char(@char) {\n        $count{$char}++;\n    }\n    foreach my $char(@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n    return -1;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n    return undef;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n    return undef;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n    return undef;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %count;\n    my @characters = split(//, $str1);\n    foreach my $char (@characters) {\n        $count{$char}++;\n    }\n    foreach my $char (@characters) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n    return -1;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char (@char) {\n        $count{$char}++;\n    }\n    foreach my $char (@char) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n    return \"No non-repeating character found\";\n}",
    "    my %count;\n    my @char = split //, $str1;\n    foreach my $char (@char) {\n        $count{$char}++;\n    }\n    foreach my $char (@char) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n}\nprint first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my @str = split(//,$str1);\n    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    for($i = 0; $i < @str; $i++) {\n        for($j = 0; $j < @str; $j++) {\n            if($str[$i] eq $str[$j] && $i != $j) {\n                $flag = 1;\n                last;\n            }\n        }\n        if($flag == 0) {\n            return $str[$i];\n        }\n        $flag = 0;\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n}",
    "    my %count;\n    my @characters = split(//, $str1);\n    foreach my $char (@characters) {\n        $count{$char}++;\n    }\n    foreach my $char (@characters) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n    return \"\";\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char(@char){\n        $count{$char}++;\n    }\n    foreach my $char(@char){\n        if($count{$char} == 1){\n            return $char;\n        }\n    }\n}",
    "    my %hash;\n    my @array = split(\"\", $str1);\n    foreach my $char (@array) {\n        if (exists $hash{$char}) {\n            $hash{$char} += 1;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    foreach my $char (@array) {\n        if ($hash{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n    return -1;\n}",
    "    my %hash;\n    my @arr = split('',$str1);\n    foreach my $char (@arr) {\n        $hash{$char}++;\n    }\n    foreach my $char (@arr) {\n        if($hash{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char(@char) {\n        $count{$char}++;\n    }\n    foreach my $char(@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n}\nprint(\"Enter the string : \");\n$str1 = <STDIN>;\nchomp($str1);\n$result = first_non_repeating_character($str1);\nprint(\"First non-repeating character in the given string is : $result\\n\");",
    "    my %hash;\n    my @str = split(\"\", $str1);\n    foreach my $char (@str) {\n        $hash{$char}++;\n    }\n    foreach my $char (@str) {\n        if($hash{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    my $i = 0;\n    my $j = 0;\n    my $char = \"\";\n    my $flag = 0;\n    my $len = length($str1);\n    while($i < $len) {\n        $char = substr($str1, $i, 1);\n        $count{$char}++;\n        $i++;\n    }\n    while($j < $len) {\n        $char = substr($str1, $j, 1);\n        if($count{$char} == 1) {\n            $flag = 1;\n            last;\n        }\n        $j++;\n    }\n    if($flag == 1) {\n        return $char;\n    } else {\n        return \"No non-repeating character\";\n    }\n}",
    "    my %char_count;\n    my @char_array = split(//, $str1);\n    foreach my $char (@char_array) {\n        $char_count{$char}++;\n    }\n    foreach my $char (@char_array) {\n        if ($char_count{$char} == 1) {\n            return $char;\n        }\n    }\n    return \"\";\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n    return undef;\n}",
    "    my %hash;\n    my @str1 = split(\"\", $str1);\n    foreach my $char (@str1) {\n        $hash{$char}++;\n    }\n    foreach my $char (@str1) {\n        if($hash{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $count = 0;\n    my $len = length($str1);\n    for($i = 0; $i < $len; $i++) {\n        $count = 0;\n        for($j = 0; $j < $len; $j++) {\n            if(substr($str1, $i, 1) eq substr($str1, $j, 1)) {\n                $count++;\n            }\n        }\n        if($count == 1) {\n            return substr($str1, $i, 1);\n        }\n    }\n    return \"\";\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char(@char) {\n        $count{$char}++;\n    }\n    foreach my $char(@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n    return \"No non-repeating character found\";\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n    return \"\";\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n    return undef;\n}",
    "    my %count;\n    my @chars = split //, $str1;\n    foreach my $char (@chars) {\n        $count{$char}++;\n    }\n    foreach my $char (@chars) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n    return undef;\n}",
    "    my %char;\n    my @char = split(//, $str1);\n    foreach my $char (@char) {\n        $char{$char}++;\n    }\n    foreach my $char (@char) {\n        if ($char{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my(%hash, $char);\n    foreach $char (split //, $str1) {\n        $hash{$char}++;\n    }\n    foreach $char (split //, $str1) {\n        if($hash{$char} == 1) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char(@char) {\n        $count{$char}++;\n    }\n    foreach my $char(@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n    return '-1';\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char(@char) {\n        $count{$char}++;\n    }\n    foreach my $char(@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n}\nprint(first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\"));",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %char;\n    my $i;\n    my @characters = split(\"\", $str1);\n    foreach $i (@characters) {\n        $char{$i}++;\n    }\n    foreach $i (@characters) {\n        if($char{$i} == 1) {\n            return $i;\n        }\n    }\n}",
    "    my %hash = ();\n    my @array = split(//,$str1);\n    foreach my $char (@array) {\n        $hash{$char}++;\n    }\n    foreach my $char (@array) {\n        if($hash{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %hash = ();\n    my $char;\n    foreach $char (split //, $str1) {\n        $hash{$char} += 1;\n    }\n    foreach $char (split //, $str1) {\n        if($hash{$char} == 1) {\n            return $char;\n        }\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char (@char) {\n        $count{$char}++;\n    }\n    foreach my $char (@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n    return -1;\n}",
    "    my %hash;\n    foreach my $char (split //, $str1) {\n        $hash{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        if ($hash{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n    return undef;\n}\nprint first_non_repeating_character('the quick brown fox jumps then quickly blow air');",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n    return undef;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n}",
    "    my %char_count;\n    foreach my $char (split //, $str1) {\n        $char_count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        if ($char_count{$char} == 1) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %count;\n    my $i;\n    my @char = split //, $str1;\n    for($i=0; $i<=$#char; $i++) {\n        $count{$char[$i]}++;\n    }\n    for($i=0; $i<=$#char; $i++) {\n        if($count{$char[$i]} == 1) {\n            return $char[$i];\n        }\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n    return undef;\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char(@char) {\n        $count{$char}++;\n    }\n    foreach my $char(@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    my $c;\n    foreach $c (split //, $str1) {\n        $count{$c}++;\n    }\n    foreach $c (split //, $str1) {\n        if ($count{$c} == 1) {\n            return $c;\n        }\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n    return undef;\n}",
    "    my %hash;\n    my @char_array = split(//, $str1);\n    foreach my $char (@char_array) {\n        if(exists $hash{$char}) {\n            $hash{$char} = $hash{$char} + 1;\n        } else {\n            $hash{$char} = 1;\n        }\n    }\n    foreach my $char (@char_array) {\n        if($hash{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n    return 'No non-repeating character';\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n    return undef;\n}",
    "    my %char_count;\n    my $i;\n    for ($i = 0; $i < length($str1); $i++) {\n        $char_count{substr($str1, $i, 1)}++;\n    }\n    for ($i = 0; $i < length($str1); $i++) {\n        if ($char_count{substr($str1, $i, 1)} == 1) {\n            return substr($str1, $i, 1);\n        }\n    }\n    return -1;\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char(@char) {\n        $count{$char}++;\n    }\n    foreach my $char(@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    my @char = split(//,$str1);\n    foreach my $char(@char){\n        $count{$char}++;\n    }\n    foreach my $char(@char){\n        if($count{$char} == 1){\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char(@char) {\n        $count{$char}++;\n    }\n    foreach my $char(@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char (@char) {\n        $count{$char}++;\n    }\n    foreach my $char (@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my(%hash,$i,$j,$flag);\n    for($i=0;$i<length($str1);$i++) {\n        $hash{substr($str1,$i,1)}++;\n    }\n    for($j=0;$j<length($str1);$j++) {\n        if($hash{substr($str1,$j,1)} == 1) {\n            $flag = 1;\n            last;\n        }\n    }\n    if($flag == 1) {\n        return substr($str1,$j,1);\n    }\n    else {\n        return \"No non-repeated character\";\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n    return undef;\n}",
    "    my @str1 = split(//, $str1);\n    my %count;\n    foreach my $char (@str1) {\n        $count{$char}++;\n    }\n    foreach my $char (@str1) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n    return -1;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n    return undef;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n}",
    "    my %count;\n    my @characters = split(//, $str1);\n    foreach my $char (@characters) {\n        $count{$char}++;\n    }\n    foreach my $char (@characters) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %hash;\n    my $char;\n    my @characters = split('', $str1);\n    foreach $char (@characters) {\n        $hash{$char}++;\n    }\n    foreach $char (keys %hash) {\n        if ($hash{$char} == 1) {\n            return $char;\n        }\n    }\n    return -1;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n}\nprint(first_non_repeating_character(\"abcdabcd\"));",
    "    my $i = 0;\n    my $j = 0;\n    my $flag = 0;\n    my @str = split(\"\",$str1);\n    for($i = 0; $i < length($str1); $i++) {\n        $flag = 0;\n        for($j = 0; $j < length($str1); $j++) {\n            if($str[$i] eq $str[$j]) {\n                $flag++;\n            }\n        }\n        if($flag == 1) {\n            return $str[$i];\n        }\n    }\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char (@char) {\n        $count{$char}++;\n    }\n    foreach my $char (@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n    return \"No non-repeating character found\";\n}",
    "    my %count;\n    my @char = split('', $str1);\n    foreach my $char(@char) {\n        $count{$char}++;\n    }\n    foreach my $char(@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n    return undef;\n}",
    "    my %count = ();\n    my @char = split(//,$str1);\n    foreach my $char(@char){\n        $count{$char}++;\n    }\n    foreach my $char(@char){\n        if($count{$char} == 1){\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n}\nprint first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\");",
    "    my %count;\n    my @chars = split //, $str1;\n    foreach my $char (@chars) {\n        $count{$char}++;\n    }\n    foreach my $char (@chars) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n    return undef;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n    return undef;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n    return undef;\n}",
    "    my %count;\n    my @char = split(//,$str1);\n    foreach my $char(@char) {\n        $count{$char}++;\n    }\n    foreach my $char(@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char (@char) {\n        $count{$char}++;\n    }\n    foreach my $char (@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n    return \"\";\n}",
    "    my(%hash, $i, $j);\n    for($i = 0; $i < length($str1); $i++) {\n        $hash{substr($str1, $i, 1)}++;\n    }\n    for($j = 0; $j < length($str1); $j++) {\n        if($hash{substr($str1, $j, 1)} == 1) {\n            return substr($str1, $j, 1);\n        }\n    }\n}",
    "    my %count;\n    my @char = split('', $str1);\n    foreach my $char(@char) {\n        $count{$char}++;\n    }\n    foreach my $char(@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n    return undef;\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char (@char) {\n        $count{$char}++;\n    }\n    foreach my $char (keys %count) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n}",
    "    my $i;\n    my $j;\n    my $flag;\n    for($i=0;$i<length($str1);$i++) {\n        $flag = 0;\n        for($j=0;$j<length($str1);$j++) {\n            if($i != $j) {\n                if(substr($str1,$i,1) eq substr($str1,$j,1)) {\n                    $flag = 1;\n                    last;\n                }\n            }\n        }\n        if($flag == 0) {\n            return substr($str1,$i,1);\n        }\n    }\n}",
    "    my %hash;\n    my @arr = split(\"\", $str1);\n    foreach my $char (@arr) {\n        $hash{$char}++;\n    }\n    foreach my $char (@arr) {\n        if($hash{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char(@char) {\n        $count{$char}++;\n    }\n    foreach my $char(@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n    return undef;\n}",
    "    my(%hash, $i, $j, $flag);\n    for($i = 0; $i < length($str1); $i++) {\n        $flag = 0;\n        for($j = 0; $j < length($str1); $j++) {\n            if($i != $j) {\n                if(substr($str1, $i, 1) eq substr($str1, $j, 1)) {\n                    $flag = 1;\n                    last;\n                }\n            }\n        }\n        if($flag == 0) {\n            return substr($str1, $i, 1);\n        }\n    }\n    return -1;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n    return undef;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    my @characters = split //, $str1;\n    foreach my $char (@characters) {\n        $count{$char}++;\n    }\n    foreach my $char (keys %count) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n    return undef;\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char(@char) {\n        $count{$char}++;\n    }\n    foreach my $char(@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n}\nprint(first_non_repeating_character(\"abcdabcd\"));",
    "    my %count;\n    my @characters = split(//, $str1);\n    foreach my $char (@characters) {\n        $count{$char}++;\n    }\n    foreach my $char (keys %count) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n}",
    "    my %hash;\n    foreach my $char (split //, $str1) {\n        $hash{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        if ($hash{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n    return undef;\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char(@char) {\n        $count{$char}++;\n    }\n    foreach my $char(@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n}\nprint(first_non_repeating_character(\"the quick brown fox jumps then quickly blow air\"));",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n}\nprint(first_non_repeating_character('abcdab') . \"\\n\");\nprint(first_non_repeating_character('abcdabc') . \"\\n\");\nprint(first_non_repeating_character('abcdabcd') . \"\\n\");",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n    return undef;\n}\nprint first_non_repeating_character('the quick brown fox jumps then quickly blow air');",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char (@char) {\n        $count{$char}++;\n    }\n    foreach my $char (@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        $char{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $char{$char} == 1;\n    }\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char(@char) {\n        $count{$char}++;\n    }\n    foreach my $char(@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n    return -1;\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char (@char) {\n        $count{$char}++;\n    }\n    foreach my $char (@char) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n    return -1;\n}",
    "    my %hash;\n    my $i;\n    my $j;\n    my $flag;\n    my $char;\n    my $length = length($str1);\n    for($i = 0; $i < $length; $i++) {\n        $char = substr($str1, $i, 1);\n        $hash{$char}++;\n    }\n    for($j = 0; $j < $length; $j++) {\n        $char = substr($str1, $j, 1);\n        if($hash{$char} == 1) {\n            $flag = 1;\n            last;\n        }\n    }\n    if($flag == 1) {\n        print \"First non-repeating character is: $char\\n\";\n    }\n    else {\n        print \"No non-repeating character found\\n\";\n    }\n}",
    "    my %count;\n    my @chars = split(//, $str1);\n    foreach my $char (@chars) {\n        $count{$char}++;\n    }\n    foreach my $char (@chars) {\n        if ($count{$char} == 1) {\n            return $char;\n        }\n    }\n    return -1;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $count{$char} == 1;\n    }\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        $char{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        return $char if $char{$char} == 1;\n    }\n    return undef;\n}",
    "    my %count;\n    my @char = split(//, $str1);\n    foreach my $char (@char) {\n        $count{$char}++;\n    }\n    foreach my $char (@char) {\n        if($count{$char} == 1) {\n            return $char;\n        }\n    }\n}"
  ]
}
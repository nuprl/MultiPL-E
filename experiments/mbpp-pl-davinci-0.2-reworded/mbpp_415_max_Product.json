{
  "name": "mbpp_415_max_Product",
  "language": "pl",
  "prompt": "# Write a plthon function to find a pair with highest product from a given array of integers.\nsub max_Product {\n    my($arr) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_415_max_Product.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&max_Product;\n        if(eq_deeply($candidate->([1, 2, 3, 4, 7, 0, 8, 4]),[7, 8])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([0, -1, -2, -4, 5, 0, -6]),[-4, -6])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 2, 3]),[2, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my $max_product = 0;\n    my $size = scalar @$arr;\n    for(my $i = 0; $i < $size; $i++) {\n        for(my $j = $i + 1; $j < $size; $j++) {\n            if($arr->[$i] * $arr->[$j] > $max_product) {\n                $max_product = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max_product;\n}",
    "    my $max1 = 0;\n    my $max2 = 0;\n    my $max3 = 0;\n    my $max4 = 0;\n    my $max5 = 0;\n    my $max6 = 0;\n    my $max7 = 0;\n    my $max8 = 0;\n    my $max9 = 0;\n    my $max10 = 0;\n    my $max11 = 0;\n    my $max12 = 0;\n    my $max13 = 0;\n    my $max14 = 0;\n    my $max15 = 0;\n    my $max16 = 0;\n    my $max17 = 0;\n    my $max18 = 0;\n    my $max19 = 0;\n    my $max20 = 0;\n    my $max21 = 0;\n    my $max22 = 0;\n    my $max23 = 0;\n    my $max24 = 0;\n    my $max25 = 0;\n    my $max26 = 0;\n    my $max27 = 0;\n    my $max28 = 0;\n    my $max29 = 0;\n    my $max30 = 0;\n    my $max31 = 0;\n    my $max32 = 0;\n    my $max33 = 0;\n    my $max34 = 0;\n    my $max35 = 0;\n    my $max36 = 0;\n    my $max37 = 0;\n    my $max38 = 0;\n    my $max39 = 0;\n    my $max40 = 0;\n    my $max41 = 0;\n    my $max42 = 0;\n    my $max43 = 0;\n    my $max44 = 0;\n    my $max45 = 0;\n    my $max46 = 0;\n    my $max47 = 0;\n    my $max48 = 0;\n    my $max49 = 0;\n    my $max50 = 0;\n    my $max51 = 0;\n    my $max52 = 0;\n    my $max53 = 0;\n    my $max54 = 0;\n    my $max55 = 0;\n    my $max56 = 0;\n    my $max57 = 0",
    "    my $n = scalar(@$arr);\n    if ($n < 2) {\n        return -1;\n    }\n    my $a = $arr->[0];\n    my $b = $arr->[1];\n    if ($a < $b) {\n        ($a, $b) = ($b, $a);\n    }\n    for (my $i = 2; $i < $n; $i++) {\n        if ($arr->[$i] > $a) {\n            $b = $a;\n            $a = $arr->[$i];\n        }\n        elsif ($arr->[$i] > $b) {\n            $b = $arr->[$i];\n        }\n    }\n    return $a * $b;\n}",
    "    my $n = scalar(@$arr);\n    if ($n < 2) {\n        print \"No pairs exists\\n\";\n        return;\n    }\n    my $a = $arr->[0];\n    my $b = $arr->[1];\n    if ($a < $b) {\n        $a = $arr->[1];\n        $b = $arr->[0];\n    }\n    for (my $i = 2; $i < $n; $i++) {\n        if ($arr->[$i] > $a) {\n            $b = $a;\n            $a = $arr->[$i];\n        }\n        elsif ($arr->[$i] > $b) {\n            $b = $arr->[$i];\n        }\n    }\n    print \"Max product pair is [$a, $b]\\n\";\n}",
    "    my $max_product = $arr->[0] * $arr->[1];\n    my $size = scalar @$arr;\n    for(my $i = 0; $i < $size; $i++) {\n        for(my $j = $i + 1; $j < $size; $j++) {\n            if(($arr->[$i] * $arr->[$j]) > $max_product) {\n                $max_product = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max_product;\n}",
    "    my $len = scalar(@$arr);\n    my $max = -9999999999;\n    for(my $i = 0; $i < $len; $i++) {\n        for(my $j = $i + 1; $j < $len; $j++) {\n            my $product = $arr->[$i] * $arr->[$j];\n            if($product > $max) {\n                $max = $product;\n            }\n        }\n    }\n    return $max;\n}",
    "    my $max_product = $arr->[0] * $arr->[1];\n    my $size = scalar @$arr;\n    for (my $i = 0; $i < $size; $i++) {\n        for (my $j = $i + 1; $j < $size; $j++) {\n            if (($arr->[$i] * $arr->[$j]) > $max_product) {\n                $max_product = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max_product;\n}",
    "    my $max_product = $arr->[0] * $arr->[1];\n    my $size = scalar @$arr;\n    for (my $i = 0; $i < $size; $i++) {\n        for (my $j = $i + 1; $j < $size; $j++) {\n            if (($arr->[$i] * $arr->[$j]) > $max_product) {\n                $max_product = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max_product;\n}",
    "    my $max = $arr->[0] * $arr->[1];\n    for (my $i=0; $i<@$arr; $i++) {\n        for (my $j=$i+1; $j<@$arr; $j++) {\n            if ($arr->[$i] * $arr->[$j] > $max) {\n                $max = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max;\n}",
    "    my $max_product = $arr->[0] * $arr->[1];\n    my $size = scalar @$arr;\n    for (my $i = 0; $i < $size; $i++) {\n        for (my $j = $i + 1; $j < $size; $j++) {\n            if (($arr->[$i] * $arr->[$j]) > $max_product) {\n                $max_product = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max_product;\n}",
    "    my $n = scalar(@$arr);\n    if ($n < 2) {\n        return -1;\n    }\n    my $a = $arr->[0];\n    my $b = $arr->[1];\n    if ($a < $b) {\n        ($a, $b) = ($b, $a);\n    }\n    for (my $i = 2; $i < $n; $i++) {\n        if ($arr->[$i] > $a) {\n            $b = $a;\n            $a = $arr->[$i];\n        }\n        elsif ($arr->[$i] > $b) {\n            $b = $arr->[$i];\n        }\n    }\n    return $a * $b;\n}",
    "    my $max1 = -1;\n    my $max2 = -1;\n    foreach my $i (@$arr) {\n        if ($i > $max1) {\n            $max2 = $max1;\n            $max1 = $i;\n        }\n        elsif ($i > $max2) {\n            $max2 = $i;\n        }\n    }\n    return ($max1, $max2);\n}",
    "    my $max1 = -999999;\n    my $max2 = -999999;\n    my $max3 = -999999;\n    my $min1 = 999999;\n    my $min2 = 999999;\n    my $n = scalar(@$arr);\n    for(my $i = 0; $i < $n; $i++) {\n        if($arr->[$i] > $max1) {\n            $max3 = $max2;\n            $max2 = $max1;\n            $max1 = $arr->[$i];\n        }\n        elsif($arr->[$i] > $max2) {\n            $max3 = $max2;\n            $max2 = $arr->[$i];\n        }\n        elsif($arr->[$i] > $max3) {\n            $max3 = $arr->[$i];\n        }\n        if($arr->[$i] < $min1) {\n            $min2 = $min1;\n            $min1 = $arr->[$i];\n        }\n        elsif($arr->[$i] < $min2) {\n            $min2 = $arr->[$i];\n        }\n    }\n    return max($max1 * $max2 * $max3, $min1 * $min2 * $max1);\n}",
    "    my $max1 = -99999999;\n    my $max2 = -99999999;\n    my $min1 = 99999999;\n    my $min2 = 99999999;\n    for my $i (0..$#{$arr}) {\n        if ($arr->[$i] > $max1) {\n            $max2 = $max1;\n            $max1 = $arr->[$i];\n        } elsif ($arr->[$i] > $max2) {\n            $max2 = $arr->[$i];\n        }\n        if ($arr->[$i] < $min1) {\n            $min2 = $min1;\n            $min1 = $arr->[$i];\n        } elsif ($arr->[$i] < $min2) {\n            $min2 = $arr->[$i];\n        }\n    }\n    my $max = $max1 * $max2;\n    my $min = $min1 * $min2;\n    if ($max > $min) {\n        return $max;\n    } else {\n        return $min;\n    }\n}",
    "    my $n = scalar @$arr;\n    if ($n < 2) {\n        die \"Invalid Input\";\n    }\n    my $a = $arr->[0];\n    my $b = $arr->[1];\n    if ($a < $b) {\n        ($a, $b) = ($b, $a);\n    }\n    for (my $i = 2; $i < $n; $i++) {\n        if ($arr->[$i] > $a) {\n            $b = $a;\n            $a = $arr->[$i];\n        }\n        elsif ($arr->[$i] > $b) {\n            $b = $arr->[$i];\n        }\n    }\n    return $a * $b;\n}",
    "    my $max1 = 0;\n    my $max2 = 0;\n    my $max3 = 0;\n    my $min1 = 0;\n    my $min2 = 0;\n    my $max = 0;\n    foreach my $i (@$arr) {\n        if ($i > $max1) {\n            $max3 = $max2;\n            $max2 = $max1;\n            $max1 = $i;\n        } elsif ($i > $max2) {\n            $max3 = $max2;\n            $max2 = $i;\n        } elsif ($i > $max3) {\n            $max3 = $i;\n        }\n        if ($i < $min1) {\n            $min2 = $min1;\n            $min1 = $i;\n        } elsif ($i < $min2) {\n            $min2 = $i;\n        }\n    }\n    $max = $max1 * $max2 * $max3;\n    $max = $max1 * $min1 * $min2 if ($max < $max1 * $min1 * $min2);\n    return $max;\n}",
    "    my $max1 = -1;\n    my $max2 = -1;\n    for (my $i = 0; $i < scalar(@$arr); $i++) {\n        if ($max1 < $arr->[$i]) {\n            $max2 = $max1;\n            $max1 = $arr->[$i];\n        }\n        elsif ($max2 < $arr->[$i]) {\n            $max2 = $arr->[$i];\n        }\n    }\n    return $max1 * $max2;\n}",
    "    my $max_product = $arr->[0] * $arr->[1];\n    my $size = @$arr;\n    for(my $i = 0; $i < $size; $i++) {\n        for(my $j = $i + 1; $j < $size; $j++) {\n            if(($arr->[$i] * $arr->[$j]) > $max_product) {\n                $max_product = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max_product;\n}",
    "    my $max_product = $arr->[0] * $arr->[1];\n    my $size = scalar @$arr;\n    for (my $i = 0; $i < $size; $i++) {\n        for (my $j = $i + 1; $j < $size; $j++) {\n            if (($arr->[$i] * $arr->[$j]) > $max_product) {\n                $max_product = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max_product;\n}",
    "    my $max = $arr->[0] * $arr->[1];\n    my $size = scalar @$arr;\n    for(my $i = 0; $i < $size; $i++) {\n        for(my $j = $i + 1; $j < $size; $j++) {\n            if($arr->[$i] * $arr->[$j] > $max) {\n                $max = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max;\n}",
    "    my $size = scalar(@$arr);\n    if ($size < 2) {\n        print \"Invalid Input\";\n        return;\n    }\n    my $a = $arr->[0];\n    my $b = $arr->[1];\n    if ($a < $b) {\n        $a = $arr->[1];\n        $b = $arr->[0];\n    }\n    for (my $i = 2; $i < $size; $i++) {\n        if ($arr->[$i] > $a) {\n            $b = $a;\n            $a = $arr->[$i];\n        }\n        elsif ($arr->[$i] > $b) {\n            $b = $arr->[$i];\n        }\n    }\n    print \"Max Product Pair is [$a, $b] \\n\";\n    return $a * $b;\n}",
    "    my $max = $arr->[0] * $arr->[1];\n    for(my $i = 0; $i < scalar(@$arr) - 1; $i++) {\n        for(my $j = $i + 1; $j < scalar(@$arr); $j++) {\n            if($arr->[$i] * $arr->[$j] > $max) {\n                $max = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max;\n}",
    "    my $max_product = 0;\n    my $size = scalar @$arr;\n    for (my $i = 0; $i < $size; $i++) {\n        for (my $j = $i + 1; $j < $size; $j++) {\n            if (($arr->[$i] * $arr->[$j]) > $max_product) {\n                $max_product = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max_product;\n}",
    "    my $max = 0;\n    my $i = 0;\n    my $j = 0;\n    my $n = scalar @$arr;\n    for($i = 0; $i < $n; $i++) {\n        for($j = $i + 1; $j < $n; $j++) {\n            if($arr->[$i] * $arr->[$j] > $max) {\n                $max = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max;\n}",
    "    my $max1 = -1;\n    my $max2 = -1;\n    for(my $i = 0; $i < @$arr; $i++) {\n        if(@$arr[$i] > $max1) {\n            $max2 = $max1;\n            $max1 = @$arr[$i];\n        }\n        elsif(@$arr[$i] > $max2) {\n            $max2 = @$arr[$i];\n        }\n    }\n    return $max1 * $max2;\n}",
    "    my $max1 = 0;\n    my $max2 = 0;\n    my $max3 = 0;\n    my $min1 = 0;\n    my $min2 = 0;\n    my $len = scalar(@$arr);\n    for(my $i = 0; $i < $len; $i++) {\n        if($arr->[$i] > $max1) {\n            $max3 = $max2;\n            $max2 = $max1;\n            $max1 = $arr->[$i];\n        }\n        elsif($arr->[$i] > $max2) {\n            $max3 = $max2;\n            $max2 = $arr->[$i];\n        }\n        elsif($arr->[$i] > $max3) {\n            $max3 = $arr->[$i];\n        }\n        if($arr->[$i] < $min1) {\n            $min2 = $min1;\n            $min1 = $arr->[$i];\n        }\n        elsif($arr->[$i] < $min2) {\n            $min2 = $arr->[$i];\n        }\n    }\n    return max($max1 * $max2 * $max3, $max1 * $min1 * $min2);\n}",
    "    my $max1 = -1;\n    my $max2 = -1;\n    for(my $i = 0; $i <= $#{$arr}; $i++) {\n        if($arr->[$i] > $max1) {\n            $max2 = $max1;\n            $max1 = $arr->[$i];\n        }\n        elsif($arr->[$i] > $max2) {\n            $max2 = $arr->[$i];\n        }\n    }\n    return $max1 * $max2;\n}",
    "    my $max_product = $arr->[0] * $arr->[1];\n    my $size = scalar @$arr;\n    for (my $i = 0; $i < $size; $i++) {\n        for (my $j = $i + 1; $j < $size; $j++) {\n            if (($arr->[$i] * $arr->[$j]) > $max_product) {\n                $max_product = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max_product;\n}",
    "    my $max_product = $arr->[0] * $arr->[1];\n    my $size = @$arr;\n    for (my $i = 0; $i < $size; $i++) {\n        for (my $j = $i + 1; $j < $size; $j++) {\n            if (($arr->[$i] * $arr->[$j]) > $max_product) {\n                $max_product = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max_product;\n}",
    "    my $max1 = -1;\n    my $max2 = -1;\n    for(my $i = 0; $i <= $#$arr; $i++) {\n        if($arr->[$i] > $max1) {\n            $max2 = $max1;\n            $max1 = $arr->[$i];\n        }\n        elsif($arr->[$i] > $max2) {\n            $max2 = $arr->[$i];\n        }\n    }\n    return $max1 * $max2;\n}",
    "    my $max_product = $arr->[0] * $arr->[1];\n    my $size = scalar @$arr;\n    for (my $i = 0; $i < $size; $i++) {\n        for (my $j = $i + 1; $j < $size; $j++) {\n            if (($arr->[$i] * $arr->[$j]) > $max_product) {\n                $max_product = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max_product;\n}",
    "    my $max = $arr->[0] * $arr->[1];\n    my $size = scalar @$arr;\n    for (my $i = 0; $i < $size; $i++) {\n        for (my $j = $i + 1; $j < $size; $j++) {\n            if ($max < $arr->[$i] * $arr->[$j]) {\n                $max = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max;\n}",
    "    my $max_product = $arr->[0] * $arr->[1];\n    my $size = scalar @$arr;\n    for (my $i = 0; $i < $size; $i++) {\n        for (my $j = $i + 1; $j < $size; $j++) {\n            if (($arr->[$i] * $arr->[$j]) > $max_product) {\n                $max_product = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max_product;\n}",
    "    my $max1 = 0;\n    my $max2 = 0;\n    for(my $i = 0; $i < scalar(@$arr); $i++) {\n        if($arr->[$i] > $max1) {\n            $max2 = $max1;\n            $max1 = $arr->[$i];\n        }\n        elsif($arr->[$i] > $max2) {\n            $max2 = $arr->[$i];\n        }\n    }\n    return $max1 * $max2;\n}",
    "    my $max_product = $arr->[0] * $arr->[1];\n    my $size = scalar @$arr;\n    for(my $i = 0; $i < $size; $i++) {\n        for(my $j = $i + 1; $j < $size; $j++) {\n            if(($arr->[$i] * $arr->[$j]) > $max_product) {\n                $max_product = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max_product;\n}",
    "    my $max1 = -1;\n    my $max2 = -1;\n    for (my $i = 0; $i < scalar(@$arr); $i++) {\n        if ($arr->[$i] > $max1) {\n            $max2 = $max1;\n            $max1 = $arr->[$i];\n        } elsif ($arr->[$i] > $max2) {\n            $max2 = $arr->[$i];\n        }\n    }\n    return $max1 * $max2;\n}",
    "    my $max_product = $arr->[0] * $arr->[1];\n    my $size = scalar @$arr;\n    for(my $i = 0; $i < $size; $i++) {\n        for(my $j = $i + 1; $j < $size; $j++) {\n            if(($arr->[$i] * $arr->[$j]) > $max_product) {\n                $max_product = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max_product;\n}",
    "    my $max_product = $arr->[0] * $arr->[1];\n    my $size = @$arr;\n    for(my $i = 0; $i < $size; $i++) {\n        for(my $j = $i + 1; $j < $size; $j++) {\n            if($max_product < ($arr->[$i] * $arr->[$j])) {\n                $max_product = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max_product;\n}",
    "    my $max = $arr->[0] * $arr->[1];\n    for(my $i = 0; $i < scalar(@$arr); $i++) {\n        for(my $j = $i+1; $j < scalar(@$arr); $j++) {\n            if($arr->[$i] * $arr->[$j] > $max) {\n                $max = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    if ($n < 2) {\n        print \"No pairs exists\\n\";\n        return;\n    }\n    my $a = $arr->[0];\n    my $b = $arr->[1];\n    if ($a < $b) {\n        ($a, $b) = ($b, $a);\n    }\n    for (my $i = 2; $i < $n; $i++) {\n        if ($arr->[$i] > $a) {\n            $b = $a;\n            $a = $arr->[$i];\n        }\n        elsif ($arr->[$i] > $b) {\n            $b = $arr->[$i];\n        }\n    }\n    print \"Max product pair is [$a, $b]\\n\";\n}",
    "    my $max1 = -1;\n    my $max2 = -1;\n    foreach my $i (@$arr) {\n        if ($i > $max1) {\n            $max2 = $max1;\n            $max1 = $i;\n        } elsif ($i > $max2) {\n            $max2 = $i;\n        }\n    }\n    return ($max1, $max2);\n}",
    "    my $max_product = $arr->[0] * $arr->[1];\n    my $size = scalar @$arr;\n    for (my $i = 0; $i < $size; $i++) {\n        for (my $j = $i + 1; $j < $size; $j++) {\n            if (($arr->[$i] * $arr->[$j]) > $max_product) {\n                $max_product = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max_product;\n}",
    "    my $max = 0;\n    my $product = 0;\n    for (my $i = 0; $i < scalar(@$arr); $i++) {\n        for (my $j = $i + 1; $j < scalar(@$arr); $j++) {\n            $product = $arr->[$i] * $arr->[$j];\n            if ($product > $max) {\n                $max = $product;\n            }\n        }\n    }\n    return $max;\n}",
    "    my $max_product = $arr->[0] * $arr->[1];\n    my $size = scalar @$arr;\n    for (my $i = 0; $i < $size; $i++) {\n        for (my $j = $i + 1; $j < $size; $j++) {\n            if (($arr->[$i] * $arr->[$j]) > $max_product) {\n                $max_product = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max_product;\n}",
    "    my $max_product = $arr->[0] * $arr->[1];\n    my $size = scalar @$arr;\n    for(my $i = 0; $i < $size; $i++) {\n        for(my $j = $i + 1; $j < $size; $j++) {\n            if($max_product < $arr->[$i] * $arr->[$j]) {\n                $max_product = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max_product;\n}",
    "    my $max_product = $arr->[0] * $arr->[1];\n    my $size = scalar @$arr;\n    for (my $i = 0; $i < $size; $i++) {\n        for (my $j = $i + 1; $j < $size; $j++) {\n            if (($arr->[$i] * $arr->[$j]) > $max_product) {\n                $max_product = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max_product;\n}",
    "    my $size = scalar(@$arr);\n    if ($size < 2) {\n        return -1;\n    }\n    my $a = $arr->[0];\n    my $b = $arr->[1];\n    if ($a < $b) {\n        ($a, $b) = ($b, $a);\n    }\n    for (my $i = 2; $i < $size; $i++) {\n        if ($arr->[$i] > $a) {\n            $b = $a;\n            $a = $arr->[$i];\n        } elsif ($arr->[$i] > $b) {\n            $b = $arr->[$i];\n        }\n    }\n    return $a * $b;\n}",
    "    my $max_product = $arr->[0] * $arr->[1];\n    my $size = scalar @$arr;\n    for(my $i = 0; $i < $size; $i++) {\n        for(my $j = $i + 1; $j < $size; $j++) {\n            if(($arr->[$i] * $arr->[$j]) > $max_product) {\n                $max_product = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max_product;\n}",
    "    my $n = scalar(@$arr);\n    if ($n < 2) {\n        print \"No pairs exists\\n\";\n        return;\n    }\n    if ($n == 2) {\n        print \"Max product pair is $arr->[0] and $arr->[1]\\n\";\n        return;\n    }\n    my $a = $arr->[0];\n    my $b = $arr->[1];\n    if ($arr->[0] < $arr->[1]) {\n        $a = $arr->[1];\n        $b = $arr->[0];\n    }\n    for (my $i = 2; $i < $n; $i++) {\n        if ($arr->[$i] > $a) {\n            $b = $a;\n            $a = $arr->[$i];\n        }\n        elsif ($arr->[$i] > $b) {\n            $b = $arr->[$i];\n        }\n    }\n    print \"Max product pair is $a and $b\\n\";\n}",
    "    my $n = scalar(@$arr);\n    my $max_product = 0;\n    for (my $i = 0; $i < $n; $i++) {\n        for (my $j = $i + 1; $j < $n; $j++) {\n            if ($max_product < $arr->[$i] * $arr->[$j]) {\n                $max_product = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max_product;\n}",
    "    my $max_product = $arr->[0] * $arr->[1];\n    my $size = scalar @$arr;\n    for(my $i=0; $i<$size; $i++) {\n        for(my $j=$i+1; $j<$size; $j++) {\n            if(($arr->[$i] * $arr->[$j]) > $max_product) {\n                $max_product = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max_product;\n}",
    "    my $n = scalar @$arr;\n    my $max_product = -1;\n    for (my $i = 0; $i < $n; $i++) {\n        for (my $j = $i + 1; $j < $n; $j++) {\n            if ($max_product < $arr->[$i] * $arr->[$j]) {\n                $max_product = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max_product;\n}",
    "    my $max1 = -1;\n    my $max2 = -1;\n    for(my $i=0; $i<scalar(@$arr); $i++) {\n        if($arr->[$i] > $max1) {\n            $max2 = $max1;\n            $max1 = $arr->[$i];\n        }\n        elsif($arr->[$i] > $max2) {\n            $max2 = $arr->[$i];\n        }\n    }\n    return $max1 * $max2;\n}\nmy @arr = (1, 4, 3, 6, 7, 0);\nprint \"Max Product Pair is: \".max_Product(\\@arr).\"\\n\";",
    "    my $max = 0;\n    my $product = 0;\n    for(my $i = 0; $i < scalar(@$arr); $i++) {\n        for(my $j = $i + 1; $j < scalar(@$arr); $j++) {\n            $product = @$arr[$i] * @$arr[$j];\n            if($product > $max) {\n                $max = $product;\n            }\n        }\n    }\n    return $max;\n}",
    "    my $max = $arr->[0] * $arr->[1];\n    for(my $i = 0; $i < scalar @$arr; $i++) {\n        for(my $j = $i+1; $j < scalar @$arr; $j++) {\n            if($arr->[$i] * $arr->[$j] > $max) {\n                $max = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max;\n}",
    "    my $max1 = -1;\n    my $max2 = -1;\n    for(my $i = 0; $i <= $#$arr; $i++) {\n        if($arr->[$i] > $max1) {\n            $max2 = $max1;\n            $max1 = $arr->[$i];\n        }\n        elsif($arr->[$i] > $max2) {\n            $max2 = $arr->[$i];\n        }\n    }\n    return $max1 * $max2;\n}",
    "    my $max1 = -1;\n    my $max2 = -1;\n    foreach my $i (@$arr) {\n        if ($i > $max1) {\n            $max2 = $max1;\n            $max1 = $i;\n        }\n        elsif ($i > $max2) {\n            $max2 = $i;\n        }\n    }\n    return $max1 * $max2;\n}",
    "    my $max1 = 0;\n    my $max2 = 0;\n    my $max3 = 0;\n    my $max4 = 0;\n    my $max5 = 0;\n    my $max6 = 0;\n    my $max7 = 0;\n    my $max8 = 0;\n    my $max9 = 0;\n    my $max10 = 0;\n    my $max11 = 0;\n    my $max12 = 0;\n    my $max13 = 0;\n    my $max14 = 0;\n    my $max15 = 0;\n    my $max16 = 0;\n    my $max17 = 0;\n    my $max18 = 0;\n    my $max19 = 0;\n    my $max20 = 0;\n    my $max21 = 0;\n    my $max22 = 0;\n    my $max23 = 0;\n    my $max24 = 0;\n    my $max25 = 0;\n    my $max26 = 0;\n    my $max27 = 0;\n    my $max28 = 0;\n    my $max29 = 0;\n    my $max30 = 0;\n    my $max31 = 0;\n    my $max32 = 0;\n    my $max33 = 0;\n    my $max34 = 0;\n    my $max35 = 0;\n    my $max36 = 0;\n    my $max37 = 0;\n    my $max38 = 0;\n    my $max39 = 0;\n    my $max40 = 0;\n    my $max41 = 0;\n    my $max42 = 0;\n    my $max43 = 0;\n    my $max44 = 0;\n    my $max45 = 0;\n    my $max46 = 0;\n    my $max47 = 0;\n    my $max48 = 0;\n    my $max49 = 0;\n    my $max50 = 0;\n    my $max51 = 0;\n    my $max52 = 0;\n    my $max53 = 0;\n    my $max54 = 0;\n    my $max55 = 0;\n    my $max56 = 0;\n    my $max57 = 0",
    "    my $max_product = $arr->[0] * $arr->[1];\n    my $size = @$arr;\n    for (my $i = 0; $i < $size; $i++) {\n        for (my $j = $i + 1; $j < $size; $j++) {\n            if (($arr->[$i] * $arr->[$j]) > $max_product) {\n                $max_product = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max_product;\n}",
    "    my $n = scalar(@$arr);\n    if ($n < 2) {\n        print \"No pairs exists\\n\";\n        return;\n    }\n    if ($n == 2) {\n        print \"Max product pair is $arr->[0] and $arr->[1]\\n\";\n        return;\n    }\n    my $a = $arr->[0];\n    my $b = $arr->[1];\n    if ($arr->[0] < $arr->[1]) {\n        $a = $arr->[1];\n        $b = $arr->[0];\n    }\n    for (my $i = 2; $i < $n; $i++) {\n        if ($arr->[$i] > $a) {\n            $b = $a;\n            $a = $arr->[$i];\n        } elsif ($arr->[$i] > $b) {\n            $b = $arr->[$i];\n        }\n    }\n    print \"Max product pair is $a and $b\\n\";\n}",
    "    my $max1 = -1;\n    my $max2 = -1;\n    for(my $i=0; $i<scalar(@$arr); $i++) {\n        if($arr->[$i] > $max1) {\n            $max2 = $max1;\n            $max1 = $arr->[$i];\n        }\n        elsif($arr->[$i] > $max2) {\n            $max2 = $arr->[$i];\n        }\n    }\n    return $max1 * $max2;\n}",
    "    my $max_product = $arr->[0] * $arr->[1];\n    my $size = scalar @$arr;\n    for (my $i = 0; $i < $size; $i++) {\n        for (my $j = $i + 1; $j < $size; $j++) {\n            if (($arr->[$i] * $arr->[$j]) > $max_product) {\n                $max_product = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max_product;\n}",
    "    my $max = $arr->[0] * $arr->[1];\n    for (my $i = 0; $i < scalar(@$arr); $i++) {\n        for (my $j = $i + 1; $j < scalar(@$arr); $j++) {\n            if ($arr->[$i] * $arr->[$j] > $max) {\n                $max = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max;\n}",
    "    my $max_product = $arr->[0] * $arr->[1];\n    my $size = scalar @$arr;\n    for (my $i = 0; $i < $size; $i++) {\n        for (my $j = $i + 1; $j < $size; $j++) {\n            if (($arr->[$i] * $arr->[$j]) > $max_product) {\n                $max_product = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max_product;\n}",
    "    my $n = scalar(@$arr);\n    if ($n < 2) {\n        print \"No pairs exists\\n\";\n        return;\n    }\n    my $a = $arr->[0];\n    my $b = $arr->[1];\n    if ($a < $b) {\n        $a = $arr->[1];\n        $b = $arr->[0];\n    }\n    for (my $i = 2; $i < $n; $i++) {\n        if ($arr->[$i] > $a) {\n            $b = $a;\n            $a = $arr->[$i];\n        }\n        elsif ($arr->[$i] > $b) {\n            $b = $arr->[$i];\n        }\n    }\n    print \"Max product pair is [$a, $b]\\n\";\n}",
    "    my $n = scalar(@$arr);\n    if ($n < 2) {\n        print \"No pairs exists\\n\";\n        return;\n    }\n    my $a = $arr->[0];\n    my $b = $arr->[1];\n    if ($a < $b) {\n        $a = $arr->[1];\n        $b = $arr->[0];\n    }\n    for (my $i = 2; $i < $n; $i++) {\n        if ($arr->[$i] > $a) {\n            $b = $a;\n            $a = $arr->[$i];\n        }\n        elsif ($arr->[$i] > $b) {\n            $b = $arr->[$i];\n        }\n    }\n    print \"Max product pair is [$a, $b]\\n\";\n}",
    "    my $max1 = -1;\n    my $max2 = -1;\n    for (my $i = 0; $i < @$arr; $i++) {\n        if ($max1 < $arr->[$i]) {\n            $max2 = $max1;\n            $max1 = $arr->[$i];\n        }\n        elsif ($max2 < $arr->[$i]) {\n            $max2 = $arr->[$i];\n        }\n    }\n    return $max1 * $max2;\n}",
    "    my $max1 = -1;\n    my $max2 = -1;\n    for (my $i = 0; $i < scalar(@$arr); $i++) {\n        if ($arr->[$i] > $max1) {\n            $max2 = $max1;\n            $max1 = $arr->[$i];\n        } elsif ($arr->[$i] > $max2) {\n            $max2 = $arr->[$i];\n        }\n    }\n    return $max1 * $max2;\n}",
    "    my $max = $arr->[0] * $arr->[1];\n    my $size = scalar(@$arr);\n    for (my $i = 0; $i < $size; $i++) {\n        for (my $j = $i + 1; $j < $size; $j++) {\n            if ($arr->[$i] * $arr->[$j] > $max) {\n                $max = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max;\n}",
    "    my $max1 = 0;\n    my $max2 = 0;\n    foreach my $i (@$arr) {\n        if ($i > $max1) {\n            $max2 = $max1;\n            $max1 = $i;\n        }\n        elsif ($i > $max2) {\n            $max2 = $i;\n        }\n    }\n    return $max1 * $max2;\n}",
    "    my $max_product = $arr->[0] * $arr->[1];\n    my $size = scalar @$arr;\n    for (my $i = 0; $i < $size; $i++) {\n        for (my $j = $i + 1; $j < $size; $j++) {\n            if (($arr->[$i] * $arr->[$j]) > $max_product) {\n                $max_product = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max_product;\n}",
    "    my $max_product = $arr->[0] * $arr->[1];\n    my $size = scalar @$arr;\n    for (my $i = 0; $i < $size; $i++) {\n        for (my $j = $i + 1; $j < $size; $j++) {\n            if (($arr->[$i] * $arr->[$j]) > $max_product) {\n                $max_product = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max_product;\n}",
    "    my $max1 = -1;\n    my $max2 = -1;\n    for (my $i = 0; $i < scalar(@$arr); $i++) {\n        if ($max1 < $$arr[$i]) {\n            $max2 = $max1;\n            $max1 = $$arr[$i];\n        }\n        elsif ($max2 < $$arr[$i]) {\n            $max2 = $$arr[$i];\n        }\n    }\n    return $max1 * $max2;\n}",
    "    my $max1 = -1;\n    my $max2 = -1;\n    for(my $i = 0; $i <= $#$arr; $i++) {\n        if($arr->[$i] > $max1) {\n            $max2 = $max1;\n            $max1 = $arr->[$i];\n        }\n        elsif($arr->[$i] > $max2) {\n            $max2 = $arr->[$i];\n        }\n    }\n    return $max1 * $max2;\n}",
    "    my $max_product = $arr->[0] * $arr->[1];\n    my $size = scalar @$arr;\n    for (my $i = 0; $i < $size; $i++) {\n        for (my $j = $i + 1; $j < $size; $j++) {\n            if (($arr->[$i] * $arr->[$j]) > $max_product) {\n                $max_product = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max_product;\n}",
    "    my $max_product = $arr->[0] * $arr->[1];\n    my $size = scalar @$arr;\n    for (my $i = 0; $i < $size; $i++) {\n        for (my $j = $i + 1; $j < $size; $j++) {\n            if (($arr->[$i] * $arr->[$j]) > $max_product) {\n                $max_product = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max_product;\n}",
    "    my $max = $arr->[0] * $arr->[1];\n    for(my $i = 0; $i < scalar(@$arr); $i++) {\n        for(my $j = $i + 1; $j < scalar(@$arr); $j++) {\n            $max = $arr->[$i] * $arr->[$j] if $max < $arr->[$i] * $arr->[$j];\n        }\n    }\n    return $max;\n}",
    "    my $max1 = -999999999999;\n    my $max2 = -999999999999;\n    my $max3 = -999999999999;\n    my $min1 = 999999999999;\n    my $min2 = 999999999999;\n    for (my $i = 0; $i < scalar(@$arr); $i++) {\n        if ($arr->[$i] > $max1) {\n            $max3 = $max2;\n            $max2 = $max1;\n            $max1 = $arr->[$i];\n        } elsif ($arr->[$i] > $max2) {\n            $max3 = $max2;\n            $max2 = $arr->[$i];\n        } elsif ($arr->[$i] > $max3) {\n            $max3 = $arr->[$i];\n        }\n        if ($arr->[$i] < $min1) {\n            $min2 = $min1;\n            $min1 = $arr->[$i];\n        } elsif ($arr->[$i] < $min2) {\n            $min2 = $arr->[$i];\n        }\n    }\n    return max($max1 * $max2 * $max3, $max1 * $min1 * $min2);\n}",
    "    my $max_product = $arr->[0] * $arr->[1];\n    my $size = @$arr;\n    for (my $i = 0; $i < $size; $i++) {\n        for (my $j = $i + 1; $j < $size; $j++) {\n            if (($arr->[$i] * $arr->[$j]) > $max_product) {\n                $max_product = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max_product;\n}",
    "    my $n = scalar(@$arr);\n    my $max_product = 0;\n    for(my $i = 0; $i < $n; $i++) {\n        for(my $j = $i + 1; $j < $n; $j++) {\n            if($arr->[$i] * $arr->[$j] > $max_product) {\n                $max_product = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max_product;\n}",
    "    my $max1 = 0;\n    my $max2 = 0;\n    my $max3 = 0;\n    my $min1 = 0;\n    my $min2 = 0;\n    my $max_product = 0;\n    foreach my $i (@$arr) {\n        if($i > $max1) {\n            $max3 = $max2;\n            $max2 = $max1;\n            $max1 = $i;\n        }\n        elsif($i > $max2) {\n            $max3 = $max2;\n            $max2 = $i;\n        }\n        elsif($i > $max3) {\n            $max3 = $i;\n        }\n        if($i < $min1) {\n            $min2 = $min1;\n            $min1 = $i;\n        }\n        elsif($i < $min2) {\n            $min2 = $i;\n        }\n    }\n    $max_product = $max1 * $max2 * $max3;\n    if($max_product < $max1 * $min1 * $min2) {\n        $max_product = $max1 * $min1 * $min2;\n    }\n    return $max_product;\n}",
    "    my $n = scalar(@$arr);\n    my $max_product = 0;\n    for(my $i = 0; $i < $n; $i++) {\n        for(my $j = $i + 1; $j < $n; $j++) {\n            if($arr->[$i] * $arr->[$j] > $max_product) {\n                $max_product = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max_product;\n}",
    "    my $max = 0;\n    my $max1 = 0;\n    my $max2 = 0;\n    my $max3 = 0;\n    my $max4 = 0;\n    my $max5 = 0;\n    my $max6 = 0;\n    my $max7 = 0;\n    my $max8 = 0;\n    my $max9 = 0;\n    my $max10 = 0;\n    my $max11 = 0;\n    my $max12 = 0;\n    my $max13 = 0;\n    my $max14 = 0;\n    my $max15 = 0;\n    my $max16 = 0;\n    my $max17 = 0;\n    my $max18 = 0;\n    my $max19 = 0;\n    my $max20 = 0;\n    my $max21 = 0;\n    my $max22 = 0;\n    my $max23 = 0;\n    my $max24 = 0;\n    my $max25 = 0;\n    my $max26 = 0;\n    my $max27 = 0;\n    my $max28 = 0;\n    my $max29 = 0;\n    my $max30 = 0;\n    my $max31 = 0;\n    my $max32 = 0;\n    my $max33 = 0;\n    my $max34 = 0;\n    my $max35 = 0;\n    my $max36 = 0;\n    my $max37 = 0;\n    my $max38 = 0;\n    my $max39 = 0;\n    my $max40 = 0;\n    my $max41 = 0;\n    my $max42 = 0;\n    my $max43 = 0;\n    my $max44 = 0;\n    my $max45 = 0;\n    my $max46 = 0;\n    my $max47 = 0;\n    my $max48 = 0;\n    my $max49 = 0;\n    my $max50 = 0;\n    my $max51 = 0;\n    my $max52 = 0;\n    my $max53 = 0;\n    my $max54 = 0;\n    my $max55 = 0;\n    my $max56 = 0;",
    "    my $max = 0;\n    my $n = @$arr;\n    for(my $i=0; $i<$n; $i++) {\n        for(my $j=$i+1; $j<$n; $j++) {\n            if($arr->[$i] * $arr->[$j] > $max) {\n                $max = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max;\n}",
    "    my $max_product = 0;\n    my $size = @$arr;\n    for(my $i=0; $i<$size; $i++) {\n        for(my $j=$i+1; $j<$size; $j++) {\n            if(($arr->[$i] * $arr->[$j]) > $max_product) {\n                $max_product = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max_product;\n}",
    "    my $n = scalar(@$arr);\n    my $max_product = 0;\n    for(my $i = 0; $i < $n; $i++) {\n        for(my $j = $i + 1; $j < $n; $j++) {\n            if($arr->[$i] * $arr->[$j] > $max_product) {\n                $max_product = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max_product;\n}",
    "    my $size = scalar(@$arr);\n    if ($size < 2) {\n        print \"No pairs exists\\n\";\n        return;\n    }\n    my $max_product = $arr->[0] * $arr->[1];\n    my $first = $arr->[0];\n    my $second = $arr->[1];\n    for (my $i = 0; $i < $size; $i++) {\n        for (my $j = $i + 1; $j < $size; $j++) {\n            if ($max_product < ($arr->[$i] * $arr->[$j])) {\n                $max_product = $arr->[$i] * $arr->[$j];\n                $first = $arr->[$i];\n                $second = $arr->[$j];\n            }\n        }\n    }\n    print \"Max product is $max_product\\n\";\n    print \"Pair is ($first, $second)\\n\";\n}",
    "    my $max1 = 0;\n    my $max2 = 0;\n    foreach my $i (@$arr) {\n        if ($i > $max1) {\n            $max2 = $max1;\n            $max1 = $i;\n        } elsif ($i > $max2) {\n            $max2 = $i;\n        }\n    }\n    return $max1 * $max2;\n}",
    "    my $max = $arr->[0] * $arr->[1];\n    for(my $i = 0; $i < scalar(@$arr) - 1; $i++) {\n        for(my $j = $i + 1; $j < scalar(@$arr); $j++) {\n            if($arr->[$i] * $arr->[$j] > $max) {\n                $max = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max;\n}",
    "    my $max_product = $arr->[0] * $arr->[1];\n    my $size = scalar @$arr;\n    for (my $i = 0; $i < $size; $i++) {\n        for (my $j = $i + 1; $j < $size; $j++) {\n            if (($arr->[$i] * $arr->[$j]) > $max_product) {\n                $max_product = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max_product;\n}",
    "    my $max = $arr->[0] * $arr->[1];\n    for(my $i = 0; $i < scalar(@$arr); $i++) {\n        for(my $j = $i + 1; $j < scalar(@$arr); $j++) {\n            if($arr->[$i] * $arr->[$j] > $max) {\n                $max = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max;\n}",
    "    my $max_product = $arr->[0] * $arr->[1];\n    my $size = scalar @$arr;\n    for (my $i = 0; $i < $size; $i++) {\n        for (my $j = $i + 1; $j < $size; $j++) {\n            if (($arr->[$i] * $arr->[$j]) > $max_product) {\n                $max_product = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max_product;\n}",
    "    my $max = $arr->[0] * $arr->[1];\n    my $size = scalar @$arr;\n    for (my $i = 0; $i < $size; $i++) {\n        for (my $j = $i + 1; $j < $size; $j++) {\n            if ($arr->[$i] * $arr->[$j] > $max) {\n                $max = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max;\n}",
    "    my $max_product = $arr->[0] * $arr->[1];\n    my $size = scalar @$arr;\n    for (my $i = 0; $i < $size; $i++) {\n        for (my $j = $i + 1; $j < $size; $j++) {\n            if (($arr->[$i] * $arr->[$j]) > $max_product) {\n                $max_product = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max_product;\n}",
    "    my $max_product = $arr->[0] * $arr->[1];\n    my $size = @$arr;\n    for (my $i = 0; $i < $size; $i++) {\n        for (my $j = $i + 1; $j < $size; $j++) {\n            if (($arr->[$i] * $arr->[$j]) > $max_product) {\n                $max_product = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max_product;\n}",
    "    my $n = scalar(@$arr);\n    my $max_product = 0;\n    for (my $i = 0; $i < $n; $i++) {\n        for (my $j = $i + 1; $j < $n; $j++) {\n            $max_product = max($max_product, $arr->[$i] * $arr->[$j]);\n        }\n    }\n    return $max_product;\n}",
    "    my $max_product = $arr->[0] * $arr->[1];\n    my $size = @$arr;\n    for (my $i = 0; $i < $size; $i++) {\n        for (my $j = $i + 1; $j < $size; $j++) {\n            if (($arr->[$i] * $arr->[$j]) > $max_product) {\n                $max_product = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max_product;\n}",
    "    my $max1 = -1;\n    my $max2 = -1;\n    my $size = scalar @$arr;\n    for (my $i = 0; $i < $size; $i++) {\n        if ($arr->[$i] > $max1) {\n            $max2 = $max1;\n            $max1 = $arr->[$i];\n        } elsif ($arr->[$i] > $max2) {\n            $max2 = $arr->[$i];\n        }\n    }\n    return $max1 * $max2;\n}",
    "    my $max1 = 0;\n    my $max2 = 0;\n    my $max3 = 0;\n    my $min1 = 0;\n    my $min2 = 0;\n    my $max_product = 0;\n    foreach my $num (@$arr) {\n        if ($num > $max1) {\n            $max3 = $max2;\n            $max2 = $max1;\n            $max1 = $num;\n        }\n        elsif ($num > $max2) {\n            $max3 = $max2;\n            $max2 = $num;\n        }\n        elsif ($num > $max3) {\n            $max3 = $num;\n        }\n        if ($num < $min1) {\n            $min2 = $min1;\n            $min1 = $num;\n        }\n        elsif ($num < $min2) {\n            $min2 = $num;\n        }\n    }\n    $max_product = max($max1 * $max2 * $max3, $max1 * $min1 * $min2);\n    return $max_product;\n}",
    "    my $max1 = -1;\n    my $max2 = -1;\n    my $size = scalar(@$arr);\n    for (my $i = 0; $i < $size; $i++) {\n        if ($max1 < $arr->[$i]) {\n            $max2 = $max1;\n            $max1 = $arr->[$i];\n        } elsif ($max2 < $arr->[$i]) {\n            $max2 = $arr->[$i];\n        }\n    }\n    return $max1 * $max2;\n}",
    "    my $n = scalar(@$arr);\n    my $max_product = -1;\n    for (my $i = 0; $i < $n; $i++) {\n        for (my $j = $i + 1; $j < $n; $j++) {\n            if ($arr->[$i] * $arr->[$j] > $max_product) {\n                $max_product = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max_product;\n}",
    "    my $n = scalar(@$arr);\n    my $max_product = 0;\n    for(my $i = 0; $i < $n; $i++) {\n        for(my $j = $i + 1; $j < $n; $j++) {\n            if(($arr->[$i] * $arr->[$j]) > $max_product) {\n                $max_product = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max_product;\n}",
    "    my $max = $arr->[0] * $arr->[1];\n    for(my $i = 0; $i < scalar(@$arr); $i++) {\n        for(my $j = $i + 1; $j < scalar(@$arr); $j++) {\n            if($arr->[$i] * $arr->[$j] > $max) {\n                $max = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max;\n}",
    "    my $max_product = $arr->[0] * $arr->[1];\n    my $size = scalar @$arr;\n    for (my $i = 0; $i < $size; $i++) {\n        for (my $j = $i + 1; $j < $size; $j++) {\n            if (($arr->[$i] * $arr->[$j]) > $max_product) {\n                $max_product = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max_product;\n}",
    "    my $n = scalar(@$arr);\n    my $max_product = 0;\n    for(my $i = 0; $i < $n; $i++) {\n        for(my $j = $i + 1; $j < $n; $j++) {\n            if($arr->[$i] * $arr->[$j] > $max_product) {\n                $max_product = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max_product;\n}",
    "    my $max1 = -1;\n    my $max2 = -1;\n    for (my $i = 0; $i < scalar(@$arr); $i++) {\n        if ($max1 < $arr->[$i]) {\n            $max2 = $max1;\n            $max1 = $arr->[$i];\n        }\n        elsif ($max2 < $arr->[$i]) {\n            $max2 = $arr->[$i];\n        }\n    }\n    return $max1 * $max2;\n}",
    "    my $max = $arr->[0] * $arr->[1];\n    for(my $i = 0; $i < scalar @$arr; $i++) {\n        for(my $j = $i + 1; $j < scalar @$arr; $j++) {\n            if($arr->[$i] * $arr->[$j] > $max) {\n                $max = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max;\n}",
    "    my $max = $arr->[0] * $arr->[1];\n    for(my $i = 0; $i < scalar(@$arr); $i++) {\n        for(my $j = $i + 1; $j < scalar(@$arr); $j++) {\n            if($arr->[$i] * $arr->[$j] > $max) {\n                $max = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max;\n}",
    "    my $max_product = 0;\n    my $n = scalar(@$arr);\n    for(my $i=0; $i<$n; $i++) {\n        for(my $j=$i+1; $j<$n; $j++) {\n            if($arr->[$i]*$arr->[$j] > $max_product) {\n                $max_product = $arr->[$i]*$arr->[$j];\n            }\n        }\n    }\n    return $max_product;\n}",
    "    my $max1 = 0;\n    my $max2 = 0;\n    foreach my $i (@$arr) {\n        if($i > $max1) {\n            $max2 = $max1;\n            $max1 = $i;\n        }\n        elsif($i > $max2) {\n            $max2 = $i;\n        }\n    }\n    return $max1 * $max2;\n}",
    "    my $max = $arr->[0] * $arr->[1];\n    my $size = scalar @$arr;\n    for(my $i = 0; $i < $size; $i++) {\n        for(my $j = $i + 1; $j < $size; $j++) {\n            if($max < $arr->[$i] * $arr->[$j]) {\n                $max = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    my $max_product = $arr->[0] * $arr->[1];\n    my $max_i = 0;\n    my $max_j = 1;\n    for (my $i = 0; $i < $n; $i++) {\n        for (my $j = $i + 1; $j < $n; $j++) {\n            if ($arr->[$i] * $arr->[$j] > $max_product) {\n                $max_product = $arr->[$i] * $arr->[$j];\n                $max_i = $i;\n                $max_j = $j;\n            }\n        }\n    }\n    return ($max_i, $max_j);\n}",
    "    my $n = scalar(@$arr);\n    if ($n < 2) {\n        print \"No pairs exists\\n\";\n        return;\n    }\n    my $a = $arr->[0];\n    my $b = $arr->[1];\n    if ($a < $b) {\n        $a = $arr->[1];\n        $b = $arr->[0];\n    }\n    for (my $i = 2; $i < $n; $i++) {\n        if ($arr->[$i] > $a) {\n            $b = $a;\n            $a = $arr->[$i];\n        }\n        elsif ($arr->[$i] > $b) {\n            $b = $arr->[$i];\n        }\n    }\n    print \"Max product pair is [$a, $b]\\n\";\n}\nmy @arr = (1, 4, 3, 6, 7, 0);\nmax_Product(\\@arr);",
    "    my $max_product = 0;\n    my $n = scalar(@$arr);\n    for (my $i = 0; $i < $n; $i++) {\n        for (my $j = $i + 1; $j < $n; $j++) {\n            if (($arr->[$i] * $arr->[$j]) > $max_product) {\n                $max_product = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max_product;\n}",
    "    my $max1 = 0;\n    my $max2 = 0;\n    my $max3 = 0;\n    my $max4 = 0;\n    foreach my $i (@$arr) {\n        if($i > $max1) {\n            $max4 = $max3;\n            $max3 = $max2;\n            $max2 = $max1;\n            $max1 = $i;\n        }\n        elsif($i > $max2) {\n            $max4 = $max3;\n            $max3 = $max2;\n            $max2 = $i;\n        }\n        elsif($i > $max3) {\n            $max4 = $max3;\n            $max3 = $i;\n        }\n        elsif($i > $max4) {\n            $max4 = $i;\n        }\n    }\n    return $max1 * $max2;\n}",
    "    my $max_product = $arr->[0] * $arr->[1];\n    my $size = @$arr;\n    for (my $i = 0; $i < $size; $i++) {\n        for (my $j = $i + 1; $j < $size; $j++) {\n            if (($arr->[$i] * $arr->[$j]) > $max_product) {\n                $max_product = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max_product;\n}",
    "    my $max1 = -1;\n    my $max2 = -1;\n    for(my $i = 0; $i < scalar(@$arr); $i++) {\n        if($max1 < $arr->[$i]) {\n            $max2 = $max1;\n            $max1 = $arr->[$i];\n        }\n        elsif($max2 < $arr->[$i]) {\n            $max2 = $arr->[$i];\n        }\n    }\n    return $max1 * $max2;\n}",
    "    my $max1 = 0;\n    my $max2 = 0;\n    for(my $i=0; $i<scalar(@$arr); $i++) {\n        if($max1 < $$arr[$i]) {\n            $max2 = $max1;\n            $max1 = $$arr[$i];\n        }\n        elsif($max2 < $$arr[$i]) {\n            $max2 = $$arr[$i];\n        }\n    }\n    return $max1 * $max2;\n}",
    "    my $max = $arr->[0] * $arr->[1];\n    for(my $i = 0; $i < scalar(@$arr) - 1; $i++) {\n        for(my $j = $i + 1; $j < scalar(@$arr); $j++) {\n            if($arr->[$i] * $arr->[$j] > $max) {\n                $max = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max;\n}",
    "    my $max_product = $arr->[0] * $arr->[1];\n    my $size = scalar @$arr;\n    for (my $i = 0; $i < $size; $i++) {\n        for (my $j = $i + 1; $j < $size; $j++) {\n            if (($arr->[$i] * $arr->[$j]) > $max_product) {\n                $max_product = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max_product;\n}",
    "    my $max1 = -1;\n    my $max2 = -1;\n    for(my $i = 0; $i < scalar(@$arr); $i++) {\n        if($arr->[$i] > $max1) {\n            $max2 = $max1;\n            $max1 = $arr->[$i];\n        }\n        elsif($arr->[$i] > $max2) {\n            $max2 = $arr->[$i];\n        }\n    }\n    return $max1 * $max2;\n}",
    "    my $max_product = $arr->[0] * $arr->[1];\n    my $size = scalar @$arr;\n    for (my $i = 0; $i < $size; $i++) {\n        for (my $j = $i + 1; $j < $size; $j++) {\n            if (($arr->[$i] * $arr->[$j]) > $max_product) {\n                $max_product = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max_product;\n}",
    "    my $max1 = 0;\n    my $max2 = 0;\n    my $max3 = 0;\n    my $min1 = 0;\n    my $min2 = 0;\n    my $len = scalar @$arr;\n    for(my $i = 0; $i < $len; $i++){\n        if($arr->[$i] > $max1){\n            $max3 = $max2;\n            $max2 = $max1;\n            $max1 = $arr->[$i];\n        }\n        elsif($arr->[$i] > $max2){\n            $max3 = $max2;\n            $max2 = $arr->[$i];\n        }\n        elsif($arr->[$i] > $max3){\n            $max3 = $arr->[$i];\n        }\n        if($arr->[$i] < $min1){\n            $min2 = $min1;\n            $min1 = $arr->[$i];\n        }\n        elsif($arr->[$i] < $min2){\n            $min2 = $arr->[$i];\n        }\n    }\n    return max($max1 * $max2 * $max3, $min1 * $min2 * $max1);\n}",
    "    my $max = -999999999999;\n    my $n = scalar(@{$arr});\n    for(my $i = 0; $i < $n; $i++) {\n        for(my $j = $i + 1; $j < $n; $j++) {\n            if($arr->[$i] * $arr->[$j] > $max) {\n                $max = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max;\n}",
    "    my $max1 = $arr->[0];\n    my $max2 = $arr->[1];\n    my $min1 = $arr->[0];\n    my $min2 = $arr->[1];\n    for(my $i = 2; $i < scalar(@$arr); $i++) {\n        if($arr->[$i] > $max1) {\n            $max2 = $max1;\n            $max1 = $arr->[$i];\n        }\n        elsif($arr->[$i] > $max2) {\n            $max2 = $arr->[$i];\n        }\n        if($arr->[$i] < $min1) {\n            $min2 = $min1;\n            $min1 = $arr->[$i];\n        }\n        elsif($arr->[$i] < $min2) {\n            $min2 = $arr->[$i];\n        }\n    }\n    my $max_product = $max1 * $max2;\n    my $min_product = $min1 * $min2;\n    if($max_product > $min_product) {\n        return $max_product;\n    }\n    else {\n        return $min_product;\n    }\n}",
    "    my $max_product = 0;\n    my $n = scalar(@$arr);\n    for(my $i = 0; $i < $n; $i++) {\n        for(my $j = $i + 1; $j < $n; $j++) {\n            if($arr->[$i] * $arr->[$j] > $max_product) {\n                $max_product = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max_product;\n}",
    "    my $n = scalar(@$arr);\n    if ($n < 2) {\n        print \"No pairs exists\\n\";\n        return;\n    }\n    my $a = $arr->[0];\n    my $b = $arr->[1];\n    if ($a < $b) {\n        $a = $arr->[1];\n        $b = $arr->[0];\n    }\n    for (my $i = 2; $i < $n; $i++) {\n        if ($arr->[$i] > $a) {\n            $b = $a;\n            $a = $arr->[$i];\n        }\n        elsif ($arr->[$i] > $b) {\n            $b = $arr->[$i];\n        }\n    }\n    print \"Max product pair is [$a, $b]\\n\";\n}",
    "    my $max_product = $arr->[0] * $arr->[1];\n    my $size = scalar @$arr;\n    for (my $i = 0; $i < $size; $i++) {\n        for (my $j = $i + 1; $j < $size; $j++) {\n            if (($arr->[$i] * $arr->[$j]) > $max_product) {\n                $max_product = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max_product;\n}",
    "    my $max_product = 0;\n    my $n = scalar(@$arr);\n    for (my $i = 0; $i < $n; $i++) {\n        for (my $j = $i + 1; $j < $n; $j++) {\n            if (($arr->[$i] * $arr->[$j]) > $max_product) {\n                $max_product = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max_product;\n}",
    "    my $n = scalar(@$arr);\n    my $max_product = 0;\n    for (my $i = 0; $i < $n; $i++) {\n        for (my $j = $i + 1; $j < $n; $j++) {\n            if ($arr->[$i] * $arr->[$j] > $max_product) {\n                $max_product = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max_product;\n}",
    "    my $max = $arr->[0] * $arr->[1];\n    for(my $i = 0; $i < scalar(@$arr); $i++) {\n        for(my $j = $i+1; $j < scalar(@$arr); $j++) {\n            if($arr->[$i] * $arr->[$j] > $max) {\n                $max = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max;\n}",
    "    my $size = scalar(@$arr);\n    if ($size < 2) {\n        print \"Invalid Input\";\n        return;\n    }\n    my $a = $arr->[0];\n    my $b = $arr->[1];\n    if ($a < $b) {\n        $a = $arr->[1];\n        $b = $arr->[0];\n    }\n    for (my $i = 2; $i < $size; $i++) {\n        if ($arr->[$i] > $a) {\n            $b = $a;\n            $a = $arr->[$i];\n        }\n        elsif ($arr->[$i] > $b) {\n            $b = $arr->[$i];\n        }\n    }\n    print \"Max product is $a * $b = \", $a * $b;\n}",
    "    my $max = $arr->[0] * $arr->[1];\n    for(my $i = 0; $i < scalar @$arr; $i++) {\n        for(my $j = $i + 1; $j < scalar @$arr; $j++) {\n            if($arr->[$i] * $arr->[$j] > $max) {\n                $max = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max;\n}",
    "    my $max1 = -1;\n    my $max2 = -1;\n    for(my $i = 0; $i < scalar(@$arr); $i++) {\n        if($arr->[$i] > $max1) {\n            $max2 = $max1;\n            $max1 = $arr->[$i];\n        }\n        elsif($arr->[$i] > $max2) {\n            $max2 = $arr->[$i];\n        }\n    }\n    return $max1 * $max2;\n}",
    "    my $max = $arr->[0] * $arr->[1];\n    for(my $i = 0; $i < scalar(@$arr); $i++) {\n        for(my $j = $i + 1; $j < scalar(@$arr); $j++) {\n            if($arr->[$i] * $arr->[$j] > $max) {\n                $max = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max;\n}",
    "    my $max = $arr->[0] * $arr->[1];\n    for(my $i = 0; $i < scalar(@$arr); $i++) {\n        for(my $j = $i + 1; $j < scalar(@$arr); $j++) {\n            if($arr->[$i] * $arr->[$j] > $max) {\n                $max = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    if ($n < 2) {\n        print \"No pairs exists\\n\";\n        return;\n    }\n    my $a = $arr->[0];\n    my $b = $arr->[1];\n    if ($a < $b) {\n        ($a, $b) = ($b, $a);\n    }\n    for (my $i = 2; $i < $n; $i++) {\n        if ($arr->[$i] > $a) {\n            $b = $a;\n            $a = $arr->[$i];\n        }\n        elsif ($arr->[$i] > $b) {\n            $b = $arr->[$i];\n        }\n    }\n    print \"Max product pair is [$a, $b]\\n\";\n}",
    "    my $max1 = -1;\n    my $max2 = -1;\n    for(my $i=0; $i<=$#{$arr}; $i++) {\n        if(${$arr}[$i] > $max1) {\n            $max2 = $max1;\n            $max1 = ${$arr}[$i];\n        }\n        elsif(${$arr}[$i] > $max2) {\n            $max2 = ${$arr}[$i];\n        }\n    }\n    return $max1 * $max2;\n}",
    "    my $max = $arr->[0] * $arr->[1];\n    my $size = scalar @$arr;\n    for(my $i = 0; $i < $size; $i++) {\n        for(my $j = $i + 1; $j < $size; $j++) {\n            if(($arr->[$i] * $arr->[$j]) > $max) {\n                $max = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max;\n}",
    "    my $max1 = 0;\n    my $max2 = 0;\n    foreach my $i (@$arr) {\n        if ($i > $max1) {\n            $max2 = $max1;\n            $max1 = $i;\n        } elsif ($i > $max2) {\n            $max2 = $i;\n        }\n    }\n    return $max1 * $max2;\n}",
    "    my $max_product = $arr->[0] * $arr->[1];\n    my $size = scalar @$arr;\n    for(my $i = 0; $i < $size; $i++) {\n        for(my $j = $i + 1; $j < $size; $j++) {\n            if(($arr->[$i] * $arr->[$j]) > $max_product) {\n                $max_product = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max_product;\n}",
    "    my $max_product = 0;\n    my $size = scalar(@$arr);\n    for(my $i = 0; $i < $size; $i++) {\n        for(my $j = $i + 1; $j < $size; $j++) {\n            if($arr->[$i] * $arr->[$j] > $max_product) {\n                $max_product = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max_product;\n}",
    "    my $n = scalar(@$arr);\n    if ($n < 2) {\n        return -1;\n    }\n    my $a = $arr->[0];\n    my $b = $arr->[1];\n    if ($a < $b) {\n        $a = $arr->[1];\n        $b = $arr->[0];\n    }\n    for (my $i = 2; $i < $n; $i++) {\n        if ($arr->[$i] > $a) {\n            $b = $a;\n            $a = $arr->[$i];\n        }\n        elsif ($arr->[$i] > $b) {\n            $b = $arr->[$i];\n        }\n    }\n    return $a * $b;\n}\nmy $arr = [1, 4, 3, 6, 7, 0];\nprint \"Max product is \", max_Product($arr), \"\\n\";",
    "    my $max_product = 0;\n    my $size = @$arr;\n    for(my $i=0; $i<$size; $i++) {\n        for(my $j=$i+1; $j<$size; $j++) {\n            if(($arr->[$i] * $arr->[$j]) > $max_product) {\n                $max_product = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max_product;\n}",
    "    my $max1 = 0;\n    my $max2 = 0;\n    foreach my $i (@$arr) {\n        if ($i > $max1) {\n            $max2 = $max1;\n            $max1 = $i;\n        }\n        elsif ($i > $max2) {\n            $max2 = $i;\n        }\n    }\n    return $max1 * $max2;\n}",
    "    my $max = $arr->[0] * $arr->[1];\n    for(my $i = 0; $i < scalar(@$arr); $i++) {\n        for(my $j = $i+1; $j < scalar(@$arr); $j++) {\n            if($max < $arr->[$i] * $arr->[$j]) {\n                $max = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max;\n}",
    "    my $max_product = $arr->[0] * $arr->[1];\n    my $size = scalar @$arr;\n    for (my $i = 0; $i < $size; $i++) {\n        for (my $j = $i + 1; $j < $size; $j++) {\n            if (($arr->[$i] * $arr->[$j]) > $max_product) {\n                $max_product = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max_product;\n}",
    "    my $max_product = $arr->[0] * $arr->[1];\n    my $size = scalar @$arr;\n    for (my $i = 0; $i < $size; $i++) {\n        for (my $j = $i + 1; $j < $size; $j++) {\n            if (($arr->[$i] * $arr->[$j]) > $max_product) {\n                $max_product = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max_product;\n}",
    "    my $max1 = 0;\n    my $max2 = 0;\n    my $max3 = 0;\n    my $min1 = 0;\n    my $min2 = 0;\n    my $max_product = 0;\n    my $i = 0;\n    my $size = scalar @$arr;\n    for($i = 0; $i < $size; $i++) {\n        if($arr->[$i] > $max1) {\n            $max3 = $max2;\n            $max2 = $max1;\n            $max1 = $arr->[$i];\n        }\n        elsif($arr->[$i] > $max2) {\n            $max3 = $max2;\n            $max2 = $arr->[$i];\n        }\n        elsif($arr->[$i] > $max3) {\n            $max3 = $arr->[$i];\n        }\n        if($arr->[$i] < $min1) {\n            $min2 = $min1;\n            $min1 = $arr->[$i];\n        }\n        elsif($arr->[$i] < $min2) {\n            $min2 = $arr->[$i];\n        }\n    }\n    $max_product = max($max1 * $max2 * $max3, $max1 * $min1 * $min2);\n    return $max_product;\n}",
    "    my $max = $arr->[0] * $arr->[1];\n    for(my $i = 0; $i < scalar(@$arr); $i++) {\n        for(my $j = $i + 1; $j < scalar(@$arr); $j++) {\n            if($arr->[$i] * $arr->[$j] > $max) {\n                $max = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max;\n}",
    "    my $max_product = $arr->[0] * $arr->[1];\n    my $size = scalar @$arr;\n    for (my $i = 0; $i < $size; $i++) {\n        for (my $j = $i + 1; $j < $size; $j++) {\n            if (($arr->[$i] * $arr->[$j]) > $max_product) {\n                $max_product = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max_product;\n}",
    "    my $max_product = 0;\n    for(my $i = 0; $i < scalar(@$arr); $i++) {\n        for(my $j = $i + 1; $j < scalar(@$arr); $j++) {\n            if($arr->[$i] * $arr->[$j] > $max_product) {\n                $max_product = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max_product;\n}",
    "    my $max_product = $arr->[0] * $arr->[1];\n    my $size = @$arr;\n    for (my $i = 0; $i < $size; $i++) {\n        for (my $j = $i + 1; $j < $size; $j++) {\n            if (($arr->[$i] * $arr->[$j]) > $max_product) {\n                $max_product = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max_product;\n}",
    "    my $max = $arr->[0] * $arr->[1];\n    my $size = scalar @$arr;\n    for(my $i=0; $i<$size; $i++) {\n        for(my $j=$i+1; $j<$size; $j++) {\n            if($max < $arr->[$i] * $arr->[$j]) {\n                $max = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max;\n}",
    "    my $max1 = -1;\n    my $max2 = -1;\n    foreach my $i (@$arr) {\n        if($i > $max1) {\n            $max2 = $max1;\n            $max1 = $i;\n        }\n        elsif($i > $max2) {\n            $max2 = $i;\n        }\n    }\n    return $max1 * $max2;\n}",
    "    my $n = scalar(@$arr);\n    if ($n < 2) {\n        print \"No pairs exists\\n\";\n        return;\n    }\n    my $a = $arr->[0];\n    my $b = $arr->[1];\n    if ($a < $b) {\n        $a = $arr->[1];\n        $b = $arr->[0];\n    }\n    for (my $i = 2; $i < $n; $i++) {\n        if ($arr->[$i] > $a) {\n            $b = $a;\n            $a = $arr->[$i];\n        }\n        elsif ($arr->[$i] > $b) {\n            $b = $arr->[$i];\n        }\n    }\n    return $a * $b;\n}",
    "    my $max1 = -1;\n    my $max2 = -1;\n    for (my $i = 0; $i < scalar @$arr; $i++) {\n        if ($arr->[$i] > $max1) {\n            $max2 = $max1;\n            $max1 = $arr->[$i];\n        } elsif ($arr->[$i] > $max2) {\n            $max2 = $arr->[$i];\n        }\n    }\n    return $max1 * $max2;\n}",
    "    my $max_product = 0;\n    my $size = scalar @$arr;\n    for (my $i = 0; $i < $size; $i++) {\n        for (my $j = $i + 1; $j < $size; $j++) {\n            if (($$arr[$i] * $$arr[$j]) > $max_product) {\n                $max_product = $$arr[$i] * $$arr[$j];\n            }\n        }\n    }\n    return $max_product;\n}",
    "    my $max1 = 0;\n    my $max2 = 0;\n    my $max3 = 0;\n    my $min1 = 0;\n    my $min2 = 0;\n    my $max_product = 0;\n    for(my $i = 0; $i < scalar(@$arr); $i++) {\n        if($arr->[$i] > $max1) {\n            $max3 = $max2;\n            $max2 = $max1;\n            $max1 = $arr->[$i];\n        }\n        elsif($arr->[$i] > $max2) {\n            $max3 = $max2;\n            $max2 = $arr->[$i];\n        }\n        elsif($arr->[$i] > $max3) {\n            $max3 = $arr->[$i];\n        }\n        if($arr->[$i] < $min1) {\n            $min2 = $min1;\n            $min1 = $arr->[$i];\n        }\n        elsif($arr->[$i] < $min2) {\n            $min2 = $arr->[$i];\n        }\n    }\n    $max_product = max($max1 * $max2 * $max3, $max1 * $min1 * $min2);\n    return $max_product;\n}",
    "    my $n = scalar(@$arr);\n    if ($n < 2) {\n        print \"No pairs exists\\n\";\n        return;\n    }\n    my $a = $arr->[0];\n    my $b = $arr->[1];\n    if ($a < $b) {\n        $a = $arr->[1];\n        $b = $arr->[0];\n    }\n    for (my $i = 2; $i < $n; $i++) {\n        if ($arr->[$i] > $a) {\n            $b = $a;\n            $a = $arr->[$i];\n        }\n        elsif ($arr->[$i] > $b) {\n            $b = $arr->[$i];\n        }\n    }\n    print \"Max product pair is [$a, $b]\\n\";\n}",
    "    my $max1 = -1;\n    my $max2 = -1;\n    my $max3 = -1;\n    my $min1 = -1;\n    my $min2 = -1;\n    for(my $i = 0; $i < scalar(@$arr); $i++) {\n        if($arr->[$i] > $max1) {\n            $max3 = $max2;\n            $max2 = $max1;\n            $max1 = $arr->[$i];\n        }\n        elsif($arr->[$i] > $max2) {\n            $max3 = $max2;\n            $max2 = $arr->[$i];\n        }\n        elsif($arr->[$i] > $max3) {\n            $max3 = $arr->[$i];\n        }\n        if($arr->[$i] < $min1) {\n            $min2 = $min1;\n            $min1 = $arr->[$i];\n        }\n        elsif($arr->[$i] < $min2) {\n            $min2 = $arr->[$i];\n        }\n    }\n    my $max_product = max($max1 * $max2 * $max3, $max1 * $min1 * $min2);\n    return $max_product;\n}",
    "    my $n = scalar(@$arr);\n    if ($n < 2) {\n        print \"No pairs exists\\n\";\n        return;\n    }\n    if ($n == 2) {\n        print \"Max product pair is ($arr->[0], $arr->[1])\\n\";\n        return;\n    }\n    my $max_product = $arr->[0] * $arr->[1];\n    my $max_first = $arr->[0];\n    my $max_second = $arr->[1];\n    for (my $i = 0; $i < $n; $i++) {\n        for (my $j = $i + 1; $j < $n; $j++) {\n            if ($max_product < ($arr->[$i] * $arr->[$j])) {\n                $max_product = $arr->[$i] * $arr->[$j];\n                $max_first = $arr->[$i];\n                $max_second = $arr->[$j];\n            }\n        }\n    }\n    print \"Max product pair is ($max_first, $max_second)\\n\";\n}",
    "    my $max_product = 0;\n    for(my $i = 0; $i < scalar(@$arr); $i++) {\n        for(my $j = $i + 1; $j < scalar(@$arr); $j++) {\n            if($max_product < $arr->[$i] * $arr->[$j]) {\n                $max_product = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max_product;\n}",
    "    my $max_product = $arr->[0] * $arr->[1];\n    my $size = scalar @$arr;\n    for (my $i = 0; $i < $size; $i++) {\n        for (my $j = $i + 1; $j < $size; $j++) {\n            if (($arr->[$i] * $arr->[$j]) > $max_product) {\n                $max_product = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max_product;\n}",
    "    my $max = 0;\n    my $n = scalar(@$arr);\n    for(my $i=0;$i<$n;$i++) {\n        for(my $j=$i+1;$j<$n;$j++) {\n            if($max < $arr->[$i] * $arr->[$j]) {\n                $max = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max;\n}",
    "    my $max1 = -1;\n    my $max2 = -1;\n    for(my $i = 0; $i < scalar(@$arr); $i++) {\n        if ($arr->[$i] > $max1) {\n            $max2 = $max1;\n            $max1 = $arr->[$i];\n        } elsif ($arr->[$i] > $max2) {\n            $max2 = $arr->[$i];\n        }\n    }\n    return $max1 * $max2;\n}",
    "    my $n = scalar(@$arr);\n    if ($n < 2) {\n        return -1;\n    }\n    my $max_product = $arr->[0] * $arr->[1];\n    for (my $i = 0; $i < $n; $i++) {\n        for (my $j = $i + 1; $j < $n; $j++) {\n            if ($max_product < $arr->[$i] * $arr->[$j]) {\n                $max_product = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max_product;\n}",
    "    my $max_product = $arr->[0] * $arr->[1];\n    my $size = scalar @$arr;\n    for (my $i = 0; $i < $size; $i++) {\n        for (my $j = $i + 1; $j < $size; $j++) {\n            if (($arr->[$i] * $arr->[$j]) > $max_product) {\n                $max_product = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max_product;\n}",
    "    my $max = $arr->[0] * $arr->[1];\n    my $i = 0;\n    my $j = 1;\n    for(my $k = 0; $k < scalar(@$arr) - 1; $k++) {\n        if($arr->[$k] * $arr->[$k + 1] > $max) {\n            $max = $arr->[$k] * $arr->[$k + 1];\n            $i = $k;\n            $j = $k + 1;\n        }\n    }\n    return ($arr->[$i], $arr->[$j]);\n}",
    "    my $n = scalar(@$arr);\n    if ($n < 2) {\n        print \"No pairs exists\\n\";\n        return;\n    }\n    my $max_product = $arr->[0] * $arr->[1];\n    my $max_i = 0;\n    my $max_j = 1;\n    for (my $i = 0; $i < $n; $i++) {\n        for (my $j = $i + 1; $j < $n; $j++) {\n            if ($arr->[$i] * $arr->[$j] > $max_product) {\n                $max_product = $arr->[$i] * $arr->[$j];\n                $max_i = $i;\n                $max_j = $j;\n            }\n        }\n    }\n    print \"Max product pair is [\", $arr->[$max_i], \", \", $arr->[$max_j], \"]\\n\";\n}",
    "    my $n = scalar(@$arr);\n    if ($n < 2) {\n        return -1;\n    }\n    my $max_product = $arr->[0] * $arr->[1];\n    my $first = $arr->[0];\n    my $second = $arr->[1];\n    for (my $i = 0; $i < $n; $i++) {\n        for (my $j = $i + 1; $j < $n; $j++) {\n            if ($arr->[$i] * $arr->[$j] > $max_product) {\n                $max_product = $arr->[$i] * $arr->[$j];\n                $first = $arr->[$i];\n                $second = $arr->[$j];\n            }\n        }\n    }\n    return ($first, $second);\n}",
    "    my $max_product = $arr->[0] * $arr->[1];\n    my $size = @$arr;\n    for(my $i = 0; $i < $size; $i++) {\n        for(my $j = $i + 1; $j < $size; $j++) {\n            if(($arr->[$i] * $arr->[$j]) > $max_product) {\n                $max_product = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max_product;\n}",
    "    my $max_product = 0;\n    my $size = scalar(@$arr);\n    for (my $i = 0; $i < $size; $i++) {\n        for (my $j = $i + 1; $j < $size; $j++) {\n            if (($arr->[$i] * $arr->[$j]) > $max_product) {\n                $max_product = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max_product;\n}",
    "    my $n = scalar(@$arr);\n    if ($n < 2) {\n        die \"Invalid input\";\n    }\n    my $max_product = $arr->[0] * $arr->[1];\n    my $max_i = 0;\n    my $max_j = 1;\n    for (my $i = 0; $i < $n; $i++) {\n        for (my $j = $i + 1; $j < $n; $j++) {\n            if ($arr->[$i] * $arr->[$j] > $max_product) {\n                $max_product = $arr->[$i] * $arr->[$j];\n                $max_i = $i;\n                $max_j = $j;\n            }\n        }\n    }\n    return ($arr->[$max_i], $arr->[$max_j]);\n}",
    "    my $max = 0;\n    for(my $i = 0; $i < scalar(@$arr); $i++) {\n        for(my $j = $i + 1; $j < scalar(@$arr); $j++) {\n            if($arr->[$i] * $arr->[$j] > $max) {\n                $max = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max;\n}",
    "    my $max = $arr->[0] * $arr->[1];\n    for(my $i = 0; $i < @$arr; $i++) {\n        for(my $j = $i + 1; $j < @$arr; $j++) {\n            my $product = $arr->[$i] * $arr->[$j];\n            if($product > $max) {\n                $max = $product;\n            }\n        }\n    }\n    return $max;\n}",
    "    my $max1 = -1;\n    my $max2 = -1;\n    for(my $i = 0; $i < scalar(@$arr); $i++) {\n        if($arr->[$i] > $max1) {\n            $max2 = $max1;\n            $max1 = $arr->[$i];\n        }\n        elsif($arr->[$i] > $max2) {\n            $max2 = $arr->[$i];\n        }\n    }\n    return $max1 * $max2;\n}",
    "    my $n = scalar(@$arr);\n    if ($n < 2) {\n        print \"No pairs exists\\n\";\n        return;\n    }\n    my $a = $arr->[0];\n    my $b = $arr->[1];\n    if ($a < $b) {\n        $a = $arr->[1];\n        $b = $arr->[0];\n    }\n    for (my $i = 2; $i < $n; $i++) {\n        if ($arr->[$i] > $a) {\n            $b = $a;\n            $a = $arr->[$i];\n        }\n        elsif ($arr->[$i] > $b) {\n            $b = $arr->[$i];\n        }\n    }\n    print \"Max product pair is [$a, $b]\\n\";\n}",
    "    my $max = $arr->[0] * $arr->[1];\n    my $max_i = 0;\n    my $max_j = 1;\n    for(my $i = 0; $i < scalar @$arr; $i++) {\n        for(my $j = $i + 1; $j < scalar @$arr; $j++) {\n            if($arr->[$i] * $arr->[$j] > $max) {\n                $max = $arr->[$i] * $arr->[$j];\n                $max_i = $i;\n                $max_j = $j;\n            }\n        }\n    }\n    return ($max_i, $max_j);\n}",
    "    my $max_product = $arr->[0] * $arr->[1];\n    my $size = scalar @$arr;\n    for (my $i = 0; $i < $size; $i++) {\n        for (my $j = $i + 1; $j < $size; $j++) {\n            if (($arr->[$i] * $arr->[$j]) > $max_product) {\n                $max_product = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max_product;\n}",
    "    my $n = scalar(@$arr);\n    if ($n < 2) {\n        print \"No pairs exists\\n\";\n        return;\n    }\n    my $a = $arr->[0];\n    my $b = $arr->[1];\n    if ($a < $b) {\n        ($a, $b) = ($b, $a);\n    }\n    for (my $i = 2; $i < $n; $i++) {\n        if ($arr->[$i] > $a) {\n            $b = $a;\n            $a = $arr->[$i];\n        }\n        elsif ($arr->[$i] > $b) {\n            $b = $arr->[$i];\n        }\n    }\n    print \"Max product pair is [$a, $b]\\n\";\n}",
    "    my $max1 = 0;\n    my $max2 = 0;\n    my $max3 = 0;\n    my $min1 = 0;\n    my $min2 = 0;\n    my $max_product = 0;\n    my $min_product = 0;\n    my $product = 0;\n    foreach my $i (@$arr) {\n        if ($i > $max1) {\n            $max3 = $max2;\n            $max2 = $max1;\n            $max1 = $i;\n        } elsif ($i > $max2) {\n            $max3 = $max2;\n            $max2 = $i;\n        } elsif ($i > $max3) {\n            $max3 = $i;\n        }\n        if ($i < $min1) {\n            $min2 = $min1;\n            $min1 = $i;\n        } elsif ($i < $min2) {\n            $min2 = $i;\n        }\n    }\n    $max_product = $max1 * $max2 * $max3;\n    $min_product = $min1 * $min2 * $max1;\n    if ($max_product > $min_product) {\n        $product = $max_product;\n    } else {\n        $product = $min_product;\n    }\n    return $product;\n}",
    "    my $n = scalar(@$arr);\n    if ($n < 2) {\n        print \"No pairs exists\\n\";\n        return;\n    }\n    my $a = $arr->[0];\n    my $b = $arr->[1];\n    if ($a < $b) {\n        $a = $arr->[1];\n        $b = $arr->[0];\n    }\n    for (my $i = 2; $i < $n; $i++) {\n        if ($arr->[$i] > $a) {\n            $b = $a;\n            $a = $arr->[$i];\n        } elsif ($arr->[$i] > $b) {\n            $b = $arr->[$i];\n        }\n    }\n    print \"Max product pair is [$a, $b]\\n\";\n}",
    "    my $n = scalar(@$arr);\n    if ($n < 2) {\n        die \"Invalid Input\";\n    }\n    my $a = $arr->[0];\n    my $b = $arr->[1];\n    if ($a < $b) {\n        ($a, $b) = ($b, $a);\n    }\n    for (my $i = 2; $i < $n; $i++) {\n        if ($arr->[$i] > $a) {\n            $b = $a;\n            $a = $arr->[$i];\n        }\n        elsif ($arr->[$i] > $b) {\n            $b = $arr->[$i];\n        }\n    }\n    return $a * $b;\n}",
    "    my $n = scalar(@$arr);\n    if ($n < 2) {\n        return -1;\n    }\n    my $a = $arr->[0];\n    my $b = $arr->[1];\n    if ($a < $b) {\n        ($a, $b) = ($b, $a);\n    }\n    for (my $i = 2; $i < $n; $i++) {\n        if ($arr->[$i] > $a) {\n            $b = $a;\n            $a = $arr->[$i];\n        }\n        elsif ($arr->[$i] > $b) {\n            $b = $arr->[$i];\n        }\n    }\n    return $a * $b;\n}",
    "    my $max = 0;\n    my $n = scalar(@$arr);\n    for(my $i = 0; $i < $n; $i++) {\n        for(my $j = $i+1; $j < $n; $j++) {\n            if($arr->[$i] * $arr->[$j] > $max) {\n                $max = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max;\n}",
    "    my $max_product = $arr->[0] * $arr->[1];\n    my $size = @$arr;\n    for (my $i = 0; $i < $size; $i++) {\n        for (my $j = $i + 1; $j < $size; $j++) {\n            if (($arr->[$i] * $arr->[$j]) > $max_product) {\n                $max_product = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max_product;\n}",
    "    my $max_product = 0;\n    my $size = scalar(@$arr);\n    for(my $i = 0; $i < $size; $i++) {\n        for(my $j = $i + 1; $j < $size; $j++) {\n            if(($arr->[$i] * $arr->[$j]) > $max_product) {\n                $max_product = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max_product;\n}",
    "    my $max_product = $arr->[0] * $arr->[1];\n    my $size = scalar @$arr;\n    for (my $i = 0; $i < $size; $i++) {\n        for (my $j = $i + 1; $j < $size; $j++) {\n            if (($arr->[$i] * $arr->[$j]) > $max_product) {\n                $max_product = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max_product;\n}\nmy @arr = (1, 4, 3, 6, 7, 0);\nprint max_Product(\\@arr);",
    "    my $n = scalar(@$arr);\n    if ($n < 2) {\n        print \"No pairs exists\\n\";\n        return;\n    }\n    my $a = $arr->[0];\n    my $b = $arr->[1];\n    if ($a < $b) {\n        $a = $arr->[1];\n        $b = $arr->[0];\n    }\n    for (my $i = 2; $i < $n; $i++) {\n        if ($arr->[$i] > $a) {\n            $b = $a;\n            $a = $arr->[$i];\n        }\n        elsif ($arr->[$i] > $b) {\n            $b = $arr->[$i];\n        }\n    }\n    print \"Max product pair is [$a, $b]\\n\";\n}",
    "    my $max1 = -1;\n    my $max2 = -1;\n    for(my $i = 0; $i <= $#$arr; $i++) {\n        if($arr->[$i] > $max1) {\n            $max2 = $max1;\n            $max1 = $arr->[$i];\n        }\n        elsif($arr->[$i] > $max2) {\n            $max2 = $arr->[$i];\n        }\n    }\n    return $max1 * $max2;\n}",
    "    my $max_product = $arr->[0] * $arr->[1];\n    my $size = @$arr;\n    for (my $i = 0; $i < $size; $i++) {\n        for (my $j = $i + 1; $j < $size; $j++) {\n            if (($arr->[$i] * $arr->[$j]) > $max_product) {\n                $max_product = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max_product;\n}\nmy $arr = [1, 4, 3, 6, 7, 0];\nprint \"Maximum Product Pair is : \", max_Product($arr), \"\\n\";",
    "    my $n = scalar(@$arr);\n    if ($n < 2) {\n        print \"No pairs exists\\n\";\n        return;\n    }\n    my $a = $arr->[0];\n    my $b = $arr->[1];\n    if ($a < $b) {\n        $a = $arr->[1];\n        $b = $arr->[0];\n    }\n    for (my $i = 2; $i < $n; $i++) {\n        if ($arr->[$i] > $a) {\n            $b = $a;\n            $a = $arr->[$i];\n        }\n        elsif ($arr->[$i] > $b) {\n            $b = $arr->[$i];\n        }\n    }\n    print \"Max product pair is ($a, $b)\\n\";\n}",
    "    my $max1 = -1;\n    my $max2 = -1;\n    for (my $i = 0; $i < scalar(@$arr); $i++) {\n        if ($arr->[$i] > $max1) {\n            $max2 = $max1;\n            $max1 = $arr->[$i];\n        } elsif ($arr->[$i] > $max2) {\n            $max2 = $arr->[$i];\n        }\n    }\n    return $max1 * $max2;\n}",
    "    my $max_product = $arr->[0] * $arr->[1];\n    my $size = scalar @$arr;\n    for (my $i = 0; $i < $size; $i++) {\n        for (my $j = $i + 1; $j < $size; $j++) {\n            if (($arr->[$i] * $arr->[$j]) > $max_product) {\n                $max_product = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max_product;\n}",
    "    my $max = $arr->[0] * $arr->[1];\n    my $size = scalar @$arr;\n    for(my $i = 0; $i < $size; $i++) {\n        for(my $j = $i + 1; $j < $size; $j++) {\n            if($arr->[$i] * $arr->[$j] > $max) {\n                $max = $arr->[$i] * $arr->[$j];\n            }\n        }\n    }\n    return $max;\n}",
    "    my $max1 = -1;\n    my $max2 = -1;\n    my $max3 = -1;\n    my $min1 = -1;\n    my $min2 = -1;\n    my $n = scalar(@$arr);\n    for (my $i = 0; $i < $n; $i++) {\n        if ($arr->[$i] > $max1) {\n            $max3 = $max2;\n            $max2 = $max1;\n            $max1 = $arr->[$i];\n        } elsif ($arr->[$i] > $max2) {\n            $max3 = $max2;\n            $max2 = $arr->[$i];\n        } elsif ($arr->[$i] > $max3) {\n            $max3 = $arr->[$i];\n        }\n        if ($arr->[$i] < $min1) {\n            $min2 = $min1;\n            $min1 = $arr->[$i];\n        } elsif ($arr->[$i] < $min2) {\n            $min2 = $arr->[$i];\n        }\n    }\n    return max($max1 * $max2 * $max3, $max1 * $min1 * $min2);\n}",
    "    my $max1 = -1;\n    my $max2 = -1;\n    for(my $i=0; $i<scalar(@$arr); $i++) {\n        if($max1 < $arr->[$i]) {\n            $max2 = $max1;\n            $max1 = $arr->[$i];\n        }\n        elsif($max2 < $arr->[$i]) {\n            $max2 = $arr->[$i];\n        }\n    }\n    return $max1 * $max2;\n}",
    "    my $n = scalar(@$arr);\n    if ($n < 2) {\n        print \"No pairs exists\\n\";\n        return;\n    }\n    my $a = $arr->[0];\n    my $b = $arr->[1];\n    if ($a < $b) {\n        $a = $arr->[1];\n        $b = $arr->[0];\n    }\n    for (my $i = 2; $i < $n; $i++) {\n        if ($arr->[$i] > $a) {\n            $b = $a;\n            $a = $arr->[$i];\n        }\n        elsif ($arr->[$i] > $b) {\n            $b = $arr->[$i];\n        }\n    }\n    print \"Max product pair is [$a, $b]\\n\";\n}",
    "    my $max = $arr->[0] * $arr->[1];\n    my $max_i = 0;\n    my $max_j = 1;\n    for (my $i = 0; $i < scalar @$arr; $i++) {\n        for (my $j = $i + 1; $j < scalar @$arr; $j++) {\n            if ($arr->[$i] * $arr->[$j] > $max) {\n                $max = $arr->[$i] * $arr->[$j];\n                $max_i = $i;\n                $max_j = $j;\n            }\n        }\n    }\n    return ($max_i, $max_j);\n}"
  ]
}
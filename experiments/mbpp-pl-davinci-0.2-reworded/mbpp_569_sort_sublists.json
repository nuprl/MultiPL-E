{
  "name": "mbpp_569_sort_sublists",
  "language": "pl",
  "prompt": "# Write a function to sort each subarray of strings in a given array of arrays.\nsub sort_sublists {\n    my($list1) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_569_sort_sublists.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_sublists;\n        if(eq_deeply($candidate->([[\"green\", \"orange\"], [\"black\", \"white\"], [\"white\", \"black\", \"orange\"]]),[[\"green\", \"orange\"], [\"black\", \"white\"], [\"black\", \"orange\", \"white\"]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"green\", \"orange\"], [\"black\"], [\"green\", \"orange\"], [\"white\"]]),[[\"green\", \"orange\"], [\"black\"], [\"green\", \"orange\"], [\"white\"]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[\"a\", \"b\"], [\"d\", \"c\"], [\"g\", \"h\"], [\"f\", \"e\"]]),[[\"a\", \"b\"], [\"c\", \"d\"], [\"g\", \"h\"], [\"e\", \"f\"]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my @list2 = @$list1;\n    foreach my $sublist (@list2) {\n        @$sublist = sort @$sublist;\n    }\n    return @list2;\n}",
    "    my @list2 = @$list1;\n    foreach my $i (0..$#list2) {\n        my @list3 = @{$list2[$i]};\n        @list3 = sort @list3;\n        $list2[$i] = \\@list3;\n    }\n    return \\@list2;\n}",
    "    my @list2 = @$list1;\n    for my $i (0 .. $#list2) {\n        my @sublist = @{$list2[$i]};\n        @sublist = sort @sublist;\n        $list2[$i] = \\@sublist;\n    }\n    return \\@list2;\n}",
    "    my @list2 = @$list1;\n    foreach my $sublist (@list2) {\n        my @sublist2 = @$sublist;\n        @sublist2 = sort @sublist2;\n        $sublist = \\@sublist2;\n    }\n    return \\@list2;\n}",
    "    my @list2 = @{$list1};\n    foreach my $sublist (@list2) {\n        @{$sublist} = sort @{$sublist};\n    }\n    return @list2;\n}",
    "    my @list2 = @$list1;\n    my @list3 = ();\n    foreach my $i (@list2) {\n        my @list4 = @$i;\n        my @list5 = sort @list4;\n        push @list3, \\@list5;\n    }\n    return \\@list3;\n}",
    "    my @list2 = @$list1;\n    for my $i (0..$#list2) {\n        @{$list2[$i]} = sort @{$list2[$i]};\n    }\n    return \\@list2;\n}",
    "    my @list2 = @$list1;\n    foreach my $i (0 .. $#list2) {\n        my @list3 = @{$list2[$i]};\n        @list3 = sort @list3;\n        $list2[$i] = \\@list3;\n    }\n    return \\@list2;\n}",
    "    my @list2 = ();\n    foreach my $sublist (@$list1) {\n        my @sorted = sort { $a cmp $b } @$sublist;\n        push @list2, \\@sorted;\n    }\n    return \\@list2;\n}",
    "    my @list2 = ();\n    foreach my $sublist (@$list1) {\n        my @sublist = @$sublist;\n        push @list2, [sort @sublist];\n    }\n    return @list2;\n}",
    "    my @list = @$list1;\n    foreach my $i (0..$#list) {\n        my @sublist = @{$list[$i]};\n        @sublist = sort {$a cmp $b} @sublist;\n        $list[$i] = \\@sublist;\n    }\n    return \\@list;\n}",
    "    my @list2 = ();\n    foreach my $sublist (@$list1) {\n        my @sorted_sublist = sort @$sublist;\n        push @list2, \\@sorted_sublist;\n    }\n    return \\@list2;\n}",
    "    my @list2;\n    foreach my $sublist (@$list1) {\n        my @sublist = @$sublist;\n        push @list2, [ sort @sublist ];\n    }\n    return @list2;\n}",
    "    my @list2 = @$list1;\n    for my $i (0..$#list2) {\n        my @list3 = @{$list2[$i]};\n        @list3 = sort {$a cmp $b} @list3;\n        $list2[$i] = \\@list3;\n    }\n    return \\@list2;\n}",
    "    my @list2 = @$list1;\n    foreach my $i (0..$#list2) {\n        my @list3 = @{$list2[$i]};\n        @list3 = sort @list3;\n        $list2[$i] = \\@list3;\n    }\n    return \\@list2;\n}",
    "    my @list2 = @$list1;\n    for my $i (0 .. $#list2) {\n        my @list3 = @{$list2[$i]};\n        @list3 = sort @list3;\n        $list2[$i] = \\@list3;\n    }\n    return \\@list2;\n}",
    "    my @list2 = map { [ sort @$_ ] } @$list1;\n    return \\@list2;\n}",
    "    my @list2 = ();\n    foreach my $list (@$list1) {\n        my @sorted = sort @$list;\n        push @list2, \\@sorted;\n    }\n    return \\@list2;\n}",
    "    my @list2 = ();\n    foreach my $sublist (@$list1) {\n        my @sorted = sort @$sublist;\n        push @list2, \\@sorted;\n    }\n    return \\@list2;\n}",
    "    my @sorted_list;\n    foreach my $list2 (@$list1) {\n        my @sorted_list2 = sort @$list2;\n        push @sorted_list, \\@sorted_list2;\n    }\n    return \\@sorted_list;\n}"
  ]
}
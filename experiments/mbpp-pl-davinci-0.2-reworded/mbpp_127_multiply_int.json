{
  "name": "mbpp_127_multiply_int",
  "language": "pl",
  "prompt": "# Write a function to multiply two integers.\nsub multiply_int {\n    my($x, $y) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_127_multiply_int.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&multiply_int;\n        if(eq_deeply($candidate->(10, 20),200)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(5, 10),50)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(4, 8),32)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    return $x * $y;\n}",
    "    return $x * $y;\n}",
    "    return $x * $y;\n}",
    "    return $x * $y;\n}",
    "    my $result = 0;\n    while ($y) {\n        if ($y & 1) {\n            $result += $x;\n        }\n        $x <<= 1;\n        $y >>= 1;\n    }\n    return $result;\n}",
    "    return $x * $y;\n}",
    "    return $x * $y;\n}",
    "    return $x * $y;\n}",
    "    return $x * $y;\n}",
    "    return $x * $y;\n}",
    "    return $x * $y;\n}",
    "    return $x * $y;\n}",
    "    return $x * $y;\n}",
    "    return $x * $y;\n}",
    "    return $x * $y;\n}",
    "    return $x * $y;\n}",
    "    return $x * $y;\n}",
    "    return $x * $y;\n}",
    "    return $x * $y;\n}",
    "    return $x * $y;\n}"
  ]
}
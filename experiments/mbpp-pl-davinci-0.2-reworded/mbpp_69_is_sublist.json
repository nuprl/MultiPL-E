{
  "name": "mbpp_69_is_sublist",
  "language": "pl",
  "prompt": "# Write a function to check whether an array contains the given subarray or not.\nsub is_sublist {\n    my($l, $s) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_69_is_sublist.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&is_sublist;\n        if(eq_deeply($candidate->([2, 4, 3, 5, 7], [3, 7]),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 3, 5, 7], [4, 3]),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 3, 5, 7], [1, 6]),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    for my $i (0 .. $#$l) {\n        if(@$s == grep { $l->[$i+$_] eq $s->[$_] } 0 .. $#$s) {\n            return 1;\n        }\n    }\n    return 0;\n}",
    "    my $ll = scalar @$l;\n    my $sl = scalar @$s;\n    for my $i (0..$ll-$sl) {\n        my $j = 0;\n        for ($j = 0; $j < $sl; $j++) {\n            last if $l->[$i+$j] != $s->[$j];\n        }\n        return 1 if $j == $sl;\n    }\n    return 0;\n}",
    "    return 0 if @$s > @$l;\n    for my $i (0 .. @$l - @$s) {\n        my $j;\n        for ($j = 0; $j < @$s && $l->[$i+$j] == $s->[$j]; $j++) { }\n        return 1 if $j == @$s;\n    }\n    return 0;\n}",
    "    return 0 if @$s > @$l;\n    for my $i (0 .. @$l - @$s) {\n        return 1 if join(',', @$l[$i .. $i + @$s - 1]) eq join(',', @$s);\n    }\n    return 0;\n}",
    "    for my $i (0 .. $#$l) {\n        my $j;\n        for ($j = 0; $j <= $#$s && $l->[$i+$j] eq $s->[$j]; $j++) { }\n        return 1 if $j > $#$s;\n    }\n    return 0;\n}",
    "    if (scalar(@$s) > scalar(@$l)) {\n        return 0;\n    }\n    my $i = 0;\n    my $j = 0;\n    while ($i < scalar(@$l) && $j < scalar(@$s)) {\n        if ($l->[$i] == $s->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    return $j == scalar(@$s);\n}",
    "    my $len_l = @$l;\n    my $len_s = @$s;\n    if ($len_s > $len_l) {\n        return 0;\n    }\n    my $i = 0;\n    my $j = 0;\n    while ($i < $len_l && $j < $len_s) {\n        if ($l->[$i] == $s->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    if ($j == $len_s) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    my $i = 0;\n    for my $e (@$l) {\n        if ($e == $s->[$i]) {\n            if (++$i == @$s) {\n                return 1;\n            }\n        } else {\n            $i = 0;\n        }\n    }\n    return 0;\n}",
    "    my $len = @$s;\n    for my $i (0..@$l-$len) {\n        my $j;\n        for ($j = 0; $j < $len; $j++) {\n            last if $l->[$i+$j] != $s->[$j];\n        }\n        return 1 if $j == $len;\n    }\n    return 0;\n}",
    "    my $i = 0;\n    for my $e (@$l) {\n        if ($e == $s->[$i]) {\n            if (++$i == @$s) {\n                return 1;\n            }\n        } else {\n            $i = 0;\n        }\n    }\n    return 0;\n}",
    "    my $i = 0;\n    for my $e (@$l) {\n        return 1 if $e eq $s->[$i];\n        $i++ if $e eq $s->[$i];\n        return 0 if $i >= @$s;\n    }\n    return 0;\n}",
    "    my $i = 0;\n    for my $e (@$l) {\n        if ($e == $s->[$i]) {\n            $i++;\n            return 1 if $i == @$s;\n        } else {\n            $i = 0;\n        }\n    }\n    return 0;\n}",
    "    return 0 if @$s > @$l;\n    for my $i (0 .. @$l - @$s) {\n        my $j;\n        for ($j = 0; $j < @$s && $l->[$i + $j] == $s->[$j]; $j++) { }\n        return 1 if $j == @$s;\n    }\n    return 0;\n}",
    "    for my $i (0 .. $#$l) {\n        my $j;\n        for ($j = 0; $j <= $#$s && $l->[$i+$j] eq $s->[$j]; $j++) { }\n        return 1 if $j > $#$s;\n    }\n    return 0;\n}",
    "    my $i = 0;\n    for my $e (@$l) {\n        if ($e == $s->[$i]) {\n            $i++;\n            return 1 if $i == @$s;\n        } else {\n            $i = 0;\n        }\n    }\n    return 0;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = @$l;\n    my $m = @$s;\n    while ($i < $n && $j < $m) {\n        if ($l->[$i] == $s->[$j]) {\n            $j++;\n        }\n        $i++;\n    }\n    return $j == $m;\n}",
    "    my $i = 0;\n    my $j = 0;\n    while ($i < @$l && $j < @$s) {\n        if ($l->[$i] == $s->[$j]) {\n            $j++;\n        } else {\n            $j = 0;\n        }\n        $i++;\n    }\n    return $j == @$s;\n}",
    "    my $i = 0;\n    my $j = 0;\n    while ($i < @$l && $j < @$s) {\n        if ($l->[$i] == $s->[$j]) {\n            $i++;\n            $j++;\n        }\n        else {\n            $i++;\n        }\n    }\n    return $j == @$s;\n}",
    "    my $i = 0;\n    for my $e (@$l) {\n        if ($e == $s->[$i]) {\n            if (++$i == @$s) {\n                return 1;\n            }\n        } else {\n            $i = 0;\n        }\n    }\n    return 0;\n}",
    "    my $i = 0;\n    for my $e (@$l) {\n        if ($e == $s->[$i]) {\n            $i++;\n            if ($i == @$s) {\n                return 1;\n            }\n        } else {\n            $i = 0;\n        }\n    }\n    return 0;\n}",
    "    my $i = 0;\n    for my $e (@$l) {\n        if ($e == $s->[$i]) {\n            $i++;\n            return 1 if $i == @$s;\n        } else {\n            $i = 0;\n        }\n    }\n    return 0;\n}",
    "    my $i = 0;\n    for my $e (@$l) {\n        if ($e == $s->[$i]) {\n            if (++$i == @$s) {\n                return 1;\n            }\n        } else {\n            $i = 0;\n        }\n    }\n    return 0;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = @$l;\n    my $m = @$s;\n    while ($i < $n && $j < $m) {\n        if ($l->[$i] == $s->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    return $j == $m;\n}",
    "    my $len = @$s;\n    for (my $i = 0; $i <= @$l - $len; $i++) {\n        if (join(',', @$l[$i..$i+$len-1]) eq join(',', @$s)) {\n            return 1;\n        }\n    }\n    return 0;\n}",
    "    for my $i (0 .. $#$l) {\n        my $j;\n        for ($j = 0; $j <= $#$s && $l->[$i+$j] eq $s->[$j]; $j++) { }\n        return 1 if $j > $#$s;\n    }\n    return 0;\n}",
    "    my $i = 0;\n    my $j = 0;\n    while ($i < @$l && $j < @$s) {\n        if ($l->[$i] == $s->[$j]) {\n            $j++;\n        }\n        $i++;\n    }\n    return $j == @$s;\n}",
    "    my $len = @$s;\n    for (my $i = 0; $i < @$l - $len + 1; $i++) {\n        my $j = 0;\n        for (; $j < $len; $j++) {\n            last if $l->[$i + $j] != $s->[$j];\n        }\n        return 1 if $j == $len;\n    }\n    return 0;\n}",
    "    return 0 if @$s > @$l;\n    for my $i (0 .. $#$l - $#$s) {\n        return 1 if join(',', @$l[$i .. $i + $#$s]) eq join(',', @$s);\n    }\n    return 0;\n}",
    "    return 0 if @$s > @$l;\n    for my $i (0 .. $#$l - $#$s) {\n        return 1 if \"@$l[$i..$i+$#$s]\" eq \"@$s\";\n    }\n    return 0;\n}",
    "    return 0 if @$s > @$l;\n    for my $i (0 .. $#$l - $#$s) {\n        return 1 if join(',', @$l[$i .. $i + $#$s]) eq join(',', @$s);\n    }\n    return 0;\n}",
    "    my $i = 0;\n    for my $e (@$l) {\n        if ($e == $s->[$i]) {\n            $i++;\n            if ($i == @$s) {\n                return 1;\n            }\n        } else {\n            $i = 0;\n        }\n    }\n    return 0;\n}",
    "    my $i = 0;\n    while ($i < @$l) {\n        my $j = 0;\n        while ($j < @$s && $l->[$i + $j] eq $s->[$j]) {\n            $j++;\n        }\n        return 1 if $j == @$s;\n        $i++;\n    }\n    return 0;\n}",
    "    for my $i (0 .. $#$l) {\n        my $j;\n        for ($j = 0; $j <= $#$s && $l->[$i+$j] eq $s->[$j]; $j++) { }\n        return 1 if $j > $#$s;\n    }\n    return 0;\n}",
    "    my $len = @$s;\n    for my $i (0 .. @$l - $len) {\n        my $j;\n        for ($j = 0; $j < $len; $j++) {\n            last if $l->[$i+$j] != $s->[$j];\n        }\n        return 1 if $j == $len;\n    }\n    return 0;\n}",
    "    my $i = 0;\n    for my $e (@$l) {\n        if ($e == $s->[$i]) {\n            $i++;\n            return 1 if $i == @$s;\n        } else {\n            $i = 0;\n        }\n    }\n    return 0;\n}",
    "    return 0 if @$s > @$l;\n    for my $i (0 .. $#$l - $#$s) {\n        my $j;\n        for ($j = 0; $j <= $#$s && $l->[$i+$j] == $s->[$j]; $j++) { }\n        return 1 if $j > $#$s;\n    }\n    return 0;\n}",
    "    return 0 if @$s > @$l;\n    for my $i (0 .. @$l - @$s) {\n        my $j;\n        for ($j = 0; $j < @$s && $l->[$i + $j] == $s->[$j]; $j++) {\n        }\n        return 1 if $j == @$s;\n    }\n    return 0;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = @$l;\n    my $m = @$s;\n    while ($i < $n && $j < $m) {\n        if ($l->[$i] == $s->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    return $j == $m;\n}",
    "    my $i = 0;\n    my $j = 0;\n    while ($i < @$l && $j < @$s) {\n        if ($l->[$i] == $s->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    return $j == @$s;\n}",
    "    for my $i (0 .. $#$l) {\n        if(@$s == grep { $l->[$i + $_] eq $s->[$_] } 0 .. $#$s) {\n            return 1;\n        }\n    }\n    return 0;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = @$l;\n    my $m = @$s;\n    while ($i < $n) {\n        if ($l->[$i] == $s->[$j]) {\n            $j++;\n        } else {\n            $j = 0;\n        }\n        if ($j == $m) {\n            return 1;\n        }\n        $i++;\n    }\n    return 0;\n}",
    "    for my $i (0 .. @$l - @$s) {\n        return 1 if join(',', @$l[$i .. $i+@$s-1]) eq join(',', @$s);\n    }\n    return 0;\n}",
    "    my $i = 0;\n    for my $e (@$l) {\n        if ($e == $s->[$i]) {\n            if (++$i == @$s) {\n                return 1;\n            }\n        } else {\n            $i = 0;\n        }\n    }\n    return 0;\n}",
    "    my $i = 0;\n    my $j = 0;\n    while ($i < @$l && $j < @$s) {\n        if ($l->[$i] == $s->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    return $j == @$s;\n}",
    "    return 0 if @$s > @$l;\n    for my $i (0 .. @$l - @$s) {\n        my $j;\n        for ($j = 0; $j < @$s && $l->[$i+$j] == $s->[$j]; $j++) { }\n        return 1 if $j == @$s;\n    }\n    return 0;\n}",
    "    my $len = @$s;\n    for (my $i = 0; $i <= @$l - $len; $i++) {\n        my $j = 0;\n        while ($j < $len && $l->[$i + $j] == $s->[$j]) {\n            $j++;\n        }\n        return 1 if $j == $len;\n    }\n    return 0;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = @$l;\n    my $m = @$s;\n    while ($i < $n && $j < $m) {\n        if ($l->[$i] == $s->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    return $j == $m;\n}",
    "    return 0 if @$s > @$l;\n    for my $i (0 .. $#$l - $#$s) {\n        return 1 if join(\",\", @$s) eq join(\",\", @$l[$i .. $i + $#$s]);\n    }\n    return 0;\n}",
    "    my $i = 0;\n    my $j = 0;\n    while ($i < @$l && $j < @$s) {\n        if ($l->[$i] == $s->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    return $j == @$s;\n}",
    "    my @l = @$l;\n    my @s = @$s;\n    for my $i (0..$#l) {\n        my $j = 0;\n        for ($j = 0; $j <= $#s; $j++) {\n            last if $l[$i+$j] ne $s[$j];\n        }\n        return 1 if $j > $#s;\n    }\n    return 0;\n}",
    "    return 0 if @$s > @$l;\n    for my $i (0 .. @$l - @$s) {\n        my $j;\n        for ($j = 0; $j < @$s && $l->[$i + $j] == $s->[$j]; $j++) {}\n        return 1 if $j == @$s;\n    }\n    return 0;\n}",
    "    my $len = @$s;\n    for my $i (0..@$l-$len) {\n        my $j = 0;\n        for ($j = 0; $j < $len; $j++) {\n            last if $l->[$i+$j] != $s->[$j];\n        }\n        return 1 if $j == $len;\n    }\n    return 0;\n}",
    "    my $i = 0;\n    my $j = 0;\n    while ($i < @$l && $j < @$s) {\n        if ($l->[$i] == $s->[$j]) {\n            $j++;\n        }\n        $i++;\n    }\n    return $j == @$s;\n}",
    "    my $len = @$s;\n    for my $i (0 .. @$l - $len) {\n        my $j;\n        for ($j = 0; $j < $len; $j++) {\n            last if $l->[$i+$j] ne $s->[$j];\n        }\n        return 1 if $j == $len;\n    }\n    return 0;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = @$l;\n    my $m = @$s;\n    while ($i < $n && $j < $m) {\n        if ($l->[$i] == $s->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    return $j == $m;\n}",
    "    my $len = @$s;\n    for (my $i = 0; $i < @$l - $len + 1; $i++) {\n        my $j = 0;\n        for (; $j < $len; $j++) {\n            last if $l->[$i + $j] ne $s->[$j];\n        }\n        return 1 if $j == $len;\n    }\n    return 0;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = @$l;\n    my $m = @$s;\n    while ($i < $n && $j < $m) {\n        if ($l->[$i] == $s->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    return $j == $m;\n}",
    "    my $len_l = scalar @$l;\n    my $len_s = scalar @$s;\n    for (my $i = 0; $i <= $len_l - $len_s; $i++) {\n        my $j = 0;\n        for (; $j < $len_s; $j++) {\n            last if $l->[$i + $j] ne $s->[$j];\n        }\n        return 1 if $j == $len_s;\n    }\n    return 0;\n}",
    "    my $i = 0;\n    my $j = 0;\n    while ($i < @$l && $j < @$s) {\n        if ($l->[$i] == $s->[$j]) {\n            $j++;\n        }\n        $i++;\n    }\n    return $j == @$s;\n}",
    "    my $i = 0;\n    my $j = 0;\n    while ($i < @$l && $j < @$s) {\n        if ($l->[$i] == $s->[$j]) {\n            $j++;\n        } else {\n            $j = 0;\n        }\n        $i++;\n    }\n    return $j == @$s;\n}",
    "    for my $i (0 .. $#$l) {\n        if(@$s == grep $l->[$i + $_] eq $s->[$_], 0 .. $#$s) {\n            return 1;\n        }\n    }\n    return 0;\n}",
    "    my $len = @$s;\n    for (my $i = 0; $i <= @$l - $len; $i++) {\n        if (join(',', @$l[$i..$i+$len-1]) eq join(',', @$s)) {\n            return 1;\n        }\n    }\n    return 0;\n}",
    "    my $i = 0;\n    my $j = 0;\n    while($i < @$l && $j < @$s) {\n        if($l->[$i] == $s->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    return $j == @$s;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = @$l;\n    my $m = @$s;\n    while ($i < $n && $j < $m) {\n        if ($l->[$i] == $s->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    return $j == $m;\n}",
    "    for my $i (0..$#$l) {\n        my $j = 0;\n        for ($j = 0; $j <= $#$s && $l->[$i+$j] eq $s->[$j]; $j++) {}\n        return 1 if $j > $#$s;\n    }\n    return 0;\n}",
    "    my $i = 0;\n    my $j = 0;\n    while ($i < @$l && $j < @$s) {\n        if ($l->[$i] == $s->[$j]) {\n            $j++;\n        } else {\n            $j = 0;\n        }\n        $i++;\n    }\n    return $j == @$s;\n}",
    "    for (my $i = 0; $i <= $#$l; $i++) {\n        if ($l->[$i] eq $s->[0]) {\n            my $j = 0;\n            for (; $j <= $#$s; $j++) {\n                if ($l->[$i+$j] ne $s->[$j]) {\n                    last;\n                }\n            }\n            if ($j > $#$s) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}",
    "    my $i = 0;\n    my $j = 0;\n    while ($i < @$l && $j < @$s) {\n        if ($l->[$i] == $s->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    return $j == @$s;\n}",
    "    return 0 if @$s > @$l;\n    for my $i (0 .. $#$l - $#$s) {\n        return 1 if join('', @$l[$i .. $i + $#$s]) eq join('', @$s);\n    }\n    return 0;\n}",
    "    my $len = @$s;\n    for (my $i = 0; $i < @$l; $i++) {\n        if (join(',', @$l[$i..$i+$len-1]) eq join(',', @$s)) {\n            return 1;\n        }\n    }\n    return 0;\n}",
    "    my $i = 0;\n    for (@$l) {\n        if ($_ eq $s->[$i]) {\n            $i++;\n            return 1 if $i == @$s;\n        } else {\n            $i = 0;\n        }\n    }\n    return 0;\n}",
    "    my $i = 0;\n    for (@$l) {\n        return 1 if $i >= @$s;\n        $i++ if $_ == $s->[$i];\n    }\n    return 0;\n}",
    "    my $len = @$s;\n    for my $i (0 .. @$l - $len) {\n        my $j;\n        for ($j = 0; $j < $len; $j++) {\n            last if $l->[$i+$j] ne $s->[$j];\n        }\n        return 1 if $j == $len;\n    }\n    return 0;\n}",
    "    my $i = 0;\n    my $j = 0;\n    while ($i < @$l && $j < @$s) {\n        if ($l->[$i] == $s->[$j]) {\n            $j++;\n        } else {\n            $j = 0;\n        }\n        $i++;\n    }\n    return $j == @$s;\n}",
    "    my $i = 0;\n    my $j = 0;\n    while ($i < @$l && $j < @$s) {\n        if ($l->[$i] == $s->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    return $j == @$s;\n}",
    "    return 0 if @$s > @$l;\n    for my $i (0 .. @$l - @$s) {\n        my $j;\n        for ($j = 0; $j < @$s; $j++) {\n            last if $l->[$i+$j] ne $s->[$j];\n        }\n        return 1 if $j == @$s;\n    }\n    return 0;\n}",
    "    my $i = 0;\n    my $j = 0;\n    while ($i < @$l && $j < @$s) {\n        if ($l->[$i] == $s->[$j]) {\n            $j++;\n        } else {\n            $j = 0;\n        }\n        $i++;\n    }\n    return $j == @$s;\n}",
    "    my $len = scalar @$s;\n    for my $i (0 .. @$l - $len) {\n        my $j = 0;\n        for ($j = 0; $j < $len; $j++) {\n            last if $l->[$i + $j] ne $s->[$j];\n        }\n        return 1 if $j == $len;\n    }\n    return 0;\n}",
    "    return 0 if @$s > @$l;\n    for my $i (0 .. $#$l - $#$s) {\n        return 1 if join(',', @$l[$i .. $i + $#$s]) eq join(',', @$s);\n    }\n    return 0;\n}",
    "    my $len_l = @$l;\n    my $len_s = @$s;\n    for (my $i = 0; $i <= $len_l - $len_s; $i++) {\n        my $j = 0;\n        for (; $j < $len_s; $j++) {\n            last if $l->[$i + $j] != $s->[$j];\n        }\n        return 1 if $j == $len_s;\n    }\n    return 0;\n}",
    "    my $i = 0;\n    for my $x (@$l) {\n        if ($x == $s->[$i]) {\n            $i++;\n            return 1 if $i == @$s;\n        } else {\n            $i = 0;\n        }\n    }\n    return 0;\n}",
    "    my $len = @$s;\n    for my $i (0 .. @$l - $len) {\n        my $j;\n        for ($j = 0; $j < $len; $j++) {\n            last if $l->[$i + $j] ne $s->[$j];\n        }\n        return 1 if $j == $len;\n    }\n    return 0;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = @$l;\n    my $m = @$s;\n    while ($i < $n && $j < $m) {\n        if ($l->[$i] == $s->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    return $j == $m;\n}",
    "    my $i = 0;\n    my $j = 0;\n    while ($i < @$l) {\n        if ($l->[$i] == $s->[$j]) {\n            $j++;\n            if ($j == @$s) {\n                return 1;\n            }\n        } else {\n            $j = 0;\n        }\n        $i++;\n    }\n    return 0;\n}",
    "    my $len = @$s;\n    for (my $i = 0; $i <= @$l - $len; $i++) {\n        my $j = 0;\n        for (; $j < $len; $j++) {\n            last if $l->[$i + $j] != $s->[$j];\n        }\n        return 1 if $j == $len;\n    }\n    return 0;\n}",
    "    my $i = 0;\n    for my $e (@$l) {\n        if ($e == $s->[$i]) {\n            $i++;\n            return 1 if $i == @$s;\n        } else {\n            $i = 0;\n        }\n    }\n    return 0;\n}",
    "    my $i = 0;\n    for (@$l) {\n        if ($_ == $s->[$i]) {\n            $i++;\n            return 1 if $i == @$s;\n        } else {\n            $i = 0;\n        }\n    }\n    return 0;\n}",
    "    return 0 if @$s > @$l;\n    for my $i (0 .. @$l - @$s) {\n        my $j;\n        for ($j = 0; $j < @$s && $l->[$i+$j] eq $s->[$j]; $j++) { }\n        return 1 if $j == @$s;\n    }\n    return 0;\n}",
    "    my $len = @$s;\n    for (my $i = 0; $i < @$l; $i++) {\n        my $j = 0;\n        while ($j < $len && $l->[$i + $j] == $s->[$j]) {\n            $j++;\n        }\n        return 1 if $j == $len;\n    }\n    return 0;\n}",
    "    my $len = @$s;\n    for (my $i = 0; $i < @$l - $len + 1; $i++) {\n        my $sub = [@{$l}[$i .. $i+$len-1]];\n        return 1 if is_equal($sub, $s);\n    }\n    return 0;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $m = @$l;\n    my $n = @$s;\n    while ($i < $m && $j < $n) {\n        if ($l->[$i] == $s->[$j]) {\n            $i++;\n            $j++;\n        }\n        else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    return $j == $n;\n}",
    "    my $i = 0;\n    for my $e (@$l) {\n        if ($e == $s->[$i]) {\n            if (++$i == @$s) {\n                return 1;\n            }\n        } else {\n            $i = 0;\n        }\n    }\n    return 0;\n}",
    "    return 0 if @$s > @$l;\n    for my $i (0 .. @$l - @$s) {\n        my $j;\n        for ($j = 0; $j < @$s && $l->[$i+$j] == $s->[$j]; $j++) { }\n        return 1 if $j == @$s;\n    }\n    return 0;\n}",
    "    my $i = 0;\n    my $j = 0;\n    while ($i < @$l && $j < @$s) {\n        if ($l->[$i] == $s->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    return $j == @$s;\n}",
    "    my $i = 0;\n    my $j = 0;\n    while ($i < @$l && $j < @$s) {\n        if ($l->[$i] == $s->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    return $j == @$s;\n}",
    "    my $i = 0;\n    for my $e (@$l) {\n        if ($e == $s->[$i]) {\n            $i++;\n            if ($i == @$s) {\n                return 1;\n            }\n        } else {\n            $i = 0;\n        }\n    }\n    return 0;\n}",
    "    my $i = 0;\n    my $j = 0;\n    while ($i < @$l && $j < @$s) {\n        if ($l->[$i] == $s->[$j]) {\n            $j++;\n        } else {\n            $j = 0;\n        }\n        $i++;\n    }\n    return $j == @$s;\n}",
    "    for my $i (0 .. $#$l) {\n        my $j;\n        for ($j = 0; $j <= $#$s && $l->[$i+$j] eq $s->[$j]; $j++) { }\n        return 1 if $j > $#$s;\n    }\n    return 0;\n}",
    "    my $len = @$s;\n    for (my $i = 0; $i < @$l - $len + 1; $i++) {\n        my $j = 0;\n        for ($j = 0; $j < $len; $j++) {\n            last if $l->[$i + $j] != $s->[$j];\n        }\n        return 1 if $j == $len;\n    }\n    return 0;\n}",
    "    my $i = 0;\n    for (@$l) {\n        if ($_ == $s->[$i]) {\n            $i++;\n            return 1 if $i == @$s;\n        } else {\n            $i = 0;\n        }\n    }\n    return 0;\n}",
    "    return 0 if @$s > @$l;\n    for my $i (0 .. $#$l - $#$s) {\n        return 1 if join(',', @$l[$i..$i+$#$s]) eq join(',', @$s);\n    }\n    return 0;\n}",
    "    return 0 if @$s > @$l;\n    for my $i (0 .. $#$l - $#$s) {\n        my $j;\n        for ($j = 0; $j <= $#$s && $l->[$i+$j] eq $s->[$j]; $j++) { }\n        return 1 if $j > $#$s;\n    }\n    return 0;\n}",
    "    my $i = 0;\n    for my $e (@$l) {\n        if ($e == $s->[$i]) {\n            if (++$i == @$s) {\n                return 1;\n            }\n        } else {\n            $i = 0;\n        }\n    }\n    return 0;\n}",
    "    return 0 if @$s > @$l;\n    for my $i (0 .. @$l - @$s) {\n        my $j;\n        for ($j = 0; $j < @$s && $l->[$i + $j] == $s->[$j]; $j++) { }\n        return 1 if $j == @$s;\n    }\n    return 0;\n}",
    "    my $i = 0;\n    for my $e (@$l) {\n        return 1 if $e eq $s->[$i];\n        $i++ if $e eq $s->[0];\n        $i = 0 if $i >= @$s;\n    }\n    return 0;\n}",
    "    return 0 if @$s > @$l;\n    for my $i (0 .. $#$l - $#$s) {\n        return 1 if join('', @$s) eq join('', @$l[$i .. $i + $#$s]);\n    }\n    return 0;\n}",
    "    for my $i (0 .. $#$l) {\n        my $j;\n        for ($j = 0; $j <= $#$s && $l->[$i+$j] eq $s->[$j]; $j++) { }\n        return 1 if $j > $#$s;\n    }\n    return 0;\n}",
    "    my $i = 0;\n    for my $e (@$l) {\n        if ($e == $s->[$i]) {\n            $i++;\n            return 1 if $i == @$s;\n        } else {\n            $i = 0;\n        }\n    }\n    return 0;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $m = @$l;\n    my $n = @$s;\n    while ($i < $m && $j < $n) {\n        if ($l->[$i] == $s->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    return $j == $n;\n}",
    "    my $i = 0;\n    for my $e (@$l) {\n        if ($e == $s->[$i]) {\n            if (++$i == @$s) {\n                return 1;\n            }\n        } else {\n            $i = 0;\n        }\n    }\n    return 0;\n}",
    "    my $i = 0;\n    my $j = 0;\n    while ($i < @$l && $j < @$s) {\n        if ($l->[$i] == $s->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    return $j == @$s;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = @$l;\n    my $m = @$s;\n    while ($i < $n && $j < $m) {\n        if ($l->[$i] == $s->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    return $j == $m;\n}",
    "    my $len = @$s;\n    for (my $i = 0; $i < @$l - $len + 1; $i++) {\n        my $sub = [@$l[$i..$i+$len-1]];\n        return 1 if is_equal($sub, $s);\n    }\n    return 0;\n}",
    "    my $len_l = @$l;\n    my $len_s = @$s;\n    for my $i (0 .. $len_l - $len_s) {\n        my $j = 0;\n        for ($j = 0; $j < $len_s; $j++) {\n            last if $l->[$i + $j] != $s->[$j];\n        }\n        return 1 if $j == $len_s;\n    }\n    return 0;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = @$l;\n    my $m = @$s;\n    while ($i < $n) {\n        if ($l->[$i] == $s->[$j]) {\n            $j++;\n        } else {\n            $j = 0;\n        }\n        if ($j == $m) {\n            return 1;\n        }\n        $i++;\n    }\n    return 0;\n}",
    "    return 0 if @$s > @$l;\n    for my $i (0 .. @$l - @$s) {\n        my $j;\n        for ($j = 0; $j < @$s && $l->[$i + $j] == $s->[$j]; $j++) {}\n        return 1 if $j == @$s;\n    }\n    return 0;\n}",
    "    for my $i (0 .. $#$l) {\n        my $j;\n        for ($j = 0; $j <= $#$s && $l->[$i+$j] eq $s->[$j]; $j++) {}\n        return 1 if $j > $#$s;\n    }\n    return 0;\n}",
    "    my $i = 0;\n    for my $e (@$l) {\n        if ($e == $s->[$i]) {\n            $i++;\n            return 1 if $i == @$s;\n        } else {\n            $i = 0;\n        }\n    }\n    return 0;\n}",
    "    my $i = 0;\n    my $j = 0;\n    while ($i < @$l && $j < @$s) {\n        if ($l->[$i] == $s->[$j]) {\n            $j++;\n        }\n        $i++;\n    }\n    return $j == @$s;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = scalar @$l;\n    my $m = scalar @$s;\n    while ($i < $n && $j < $m) {\n        if ($l->[$i] == $s->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    return $j == $m;\n}",
    "    my $len = @$s;\n    for my $i (0..@$l-$len) {\n        my $j;\n        for ($j=0; $j<$len; $j++) {\n            last if $l->[$i+$j] != $s->[$j];\n        }\n        return 1 if $j == $len;\n    }\n    return 0;\n}",
    "    my $i = 0;\n    my $j = 0;\n    while ($i < @$l && $j < @$s) {\n        if ($l->[$i] == $s->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    return $j == @$s;\n}",
    "    my $len = @$s;\n    for (my $i = 0; $i <= @$l - $len; $i++) {\n        my $j = 0;\n        while ($j < $len && $l->[$i + $j] == $s->[$j]) {\n            $j++;\n        }\n        return 1 if $j == $len;\n    }\n    return 0;\n}",
    "    my $i = 0;\n    my $j = 0;\n    while ($i < @$l) {\n        if ($l->[$i] == $s->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n            $j = 0;\n        }\n        return 1 if $j == @$s;\n    }\n    return 0;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = @$l;\n    my $m = @$s;\n    while ($i < $n && $j < $m) {\n        if ($l->[$i] == $s->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    return $j == $m;\n}",
    "    my $i = 0;\n    my $j = 0;\n    while ($i < @$l && $j < @$s) {\n        if ($l->[$i] == $s->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    return $j == @$s;\n}",
    "    for my $i (0 .. $#$l) {\n        my $j;\n        for ($j = 0; $j <= $#$s && $l->[$i+$j] eq $s->[$j]; $j++) { }\n        return 1 if $j > $#$s;\n    }\n    return 0;\n}",
    "    my $len = @$s;\n    for (my $i = 0; $i < @$l; $i++) {\n        if ($l->[$i] == $s->[0]) {\n            my $j = 0;\n            for (; $j < $len; $j++) {\n                if ($l->[$i + $j] != $s->[$j]) {\n                    last;\n                }\n            }\n            if ($j == $len) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}",
    "    for my $i (0..$#$l) {\n        my $j = 0;\n        for ($j = 0; $j <= $#$s && $l->[$i+$j] eq $s->[$j]; $j++) { }\n        return 1 if $j == $#$s + 1;\n    }\n    return 0;\n}",
    "    my $len_l = @$l;\n    my $len_s = @$s;\n    for (my $i = 0; $i <= $len_l - $len_s; $i++) {\n        my $j = 0;\n        for (; $j < $len_s; $j++) {\n            last if $l->[$i + $j] != $s->[$j];\n        }\n        return 1 if $j == $len_s;\n    }\n    return 0;\n}",
    "    my $len = @$s;\n    for (my $i = 0; $i < @$l; $i++) {\n        if ($l->[$i] == $s->[0]) {\n            my $j = 1;\n            while ($j < $len && $l->[$i + $j] == $s->[$j]) {\n                $j++;\n            }\n            return 1 if $j == $len;\n        }\n    }\n    return 0;\n}",
    "    for my $i (0 .. $#$l) {\n        if(@$s == grep $l->[$i + $_] eq $s->[$_], 0 .. $#$s) {\n            return 1;\n        }\n    }\n    return 0;\n}",
    "    my $i = 0;\n    for my $e (@$l) {\n        if ($e == $s->[$i]) {\n            if (++$i == @$s) {\n                return 1;\n            }\n        } else {\n            $i = 0;\n        }\n    }\n    return 0;\n}",
    "    my $i = 0;\n    my $j = 0;\n    while ($i < @$l && $j < @$s) {\n        if ($l->[$i] == $s->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    return $j == @$s;\n}",
    "    return 0 if @$s > @$l;\n    for my $i (0 .. $#$l - $#$s) {\n        return 1 if join(',', @$s) eq join(',', @$l[$i .. $i + $#$s]);\n    }\n    return 0;\n}",
    "    return 0 if @$s > @$l;\n    for my $i (0 .. @$l - @$s) {\n        my $j;\n        for ($j = 0; $j < @$s && $l->[$i + $j] == $s->[$j]; $j++) { }\n        return 1 if $j == @$s;\n    }\n    return 0;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = @$l;\n    my $m = @$s;\n    while ($i < $n && $j < $m) {\n        if ($l->[$i] == $s->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    return $j == $m;\n}",
    "    my $i = 0;\n    my $j = 0;\n    while ($i < @$l && $j < @$s) {\n        if ($l->[$i] == $s->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    return $j == @$s;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = @$l;\n    my $m = @$s;\n    while ($i < $n && $j < $m) {\n        if ($l->[$i] == $s->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    return $j == $m;\n}",
    "    my $i = 0;\n    for my $e (@$l) {\n        if ($e == $s->[$i]) {\n            if (++$i == @$s) {\n                return 1;\n            }\n        } else {\n            $i = 0;\n        }\n    }\n    return 0;\n}",
    "    my $len = @$s;\n    for (my $i = 0; $i <= @$l - $len; $i++) {\n        if (@$l[$i..$i+$len-1] ~~ @$s) {\n            return 1;\n        }\n    }\n    return 0;\n}",
    "    my $i = 0;\n    my $j = 0;\n    while ($i < @$l && $j < @$s) {\n        if ($l->[$i] == $s->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    return $j == @$s;\n}",
    "    my $i = 0;\n    my $j = 0;\n    while ($i < @$l && $j < @$s) {\n        if ($l->[$i] == $s->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    return $j == @$s;\n}",
    "    my $len = scalar @$s;\n    for my $i (0..scalar @$l - $len) {\n        my $j = 0;\n        while ($j < $len && $l->[$i+$j] == $s->[$j]) {\n            $j++;\n        }\n        return 1 if $j == $len;\n    }\n    return 0;\n}",
    "    my $i = 0;\n    for my $e (@$l) {\n        if($e == $s->[$i]) {\n            $i++;\n            if($i == @$s) {\n                return 1;\n            }\n        } else {\n            $i = 0;\n        }\n    }\n    return 0;\n}",
    "    for my $i (0 .. $#$l) {\n        my $j;\n        for ($j = 0; $j <= $#$s && $l->[$i+$j] eq $s->[$j]; $j++) { }\n        return 1 if $j > $#$s;\n    }\n    return 0;\n}",
    "    my $i = 0;\n    my $j = 0;\n    while ($i < @$l && $j < @$s) {\n        if ($l->[$i] == $s->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    return $j == @$s;\n}",
    "    return 0 if @$s > @$l;\n    for my $i (0 .. $#$l - $#$s) {\n        return 1 if join('', @$s) eq join('', @$l[$i .. $i + $#$s]);\n    }\n    return 0;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = @$l;\n    my $m = @$s;\n    while ($i < $n && $j < $m) {\n        if ($l->[$i] == $s->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    return $j == $m;\n}",
    "    my $len = @$s;\n    for (my $i = 0; $i <= @$l - $len; $i++) {\n        if (@$l[$i..$i+$len-1] eq @$s) {\n            return 1;\n        }\n    }\n    return 0;\n}",
    "    my $i = 0;\n    for my $e (@$l) {\n        if ($e == $s->[$i]) {\n            $i++;\n            return 1 if $i == @$s;\n        } else {\n            $i = 0;\n        }\n    }\n    return 0;\n}",
    "    my $i = 0;\n    my $j = 0;\n    while ($i < @$l && $j < @$s) {\n        if ($l->[$i] == $s->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    return $j == @$s;\n}",
    "    return 0 if @$s > @$l;\n    for my $i (0 .. $#$l - $#$s) {\n        return 1 if join(',', @$l[$i .. $i + $#$s]) eq join(',', @$s);\n    }\n    return 0;\n}",
    "    my $i = 0;\n    my $j = 0;\n    while ($i < @$l && $j < @$s) {\n        if ($l->[$i] == $s->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n            $j = 0;\n        }\n    }\n    return $j == @$s;\n}",
    "    my $i = 0;\n    for my $e (@$l) {\n        if ($e == $s->[$i]) {\n            if (++$i == @$s) {\n                return 1;\n            }\n        } else {\n            $i = 0;\n        }\n    }\n    return 0;\n}",
    "    for my $i (0..$#$l) {\n        my $j;\n        for ($j = 0; $j <= $#$s && $l->[$i + $j] eq $s->[$j]; $j++) {\n        }\n        return 1 if $j > $#$s;\n    }\n    return 0;\n}",
    "    my $len = @$s;\n    for (my $i = 0; $i < @$l; $i++) {\n        if ($l->[$i] == $s->[0]) {\n            my $j = 1;\n            while ($j < $len) {\n                if ($l->[$i + $j] != $s->[$j]) {\n                    last;\n                }\n                $j++;\n            }\n            if ($j == $len) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = @$l;\n    my $m = @$s;\n    while ($i < $n && $j < $m) {\n        if ($l->[$i] == $s->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    return $j == $m;\n}",
    "    my $i = 0;\n    my $j = 0;\n    while ($i < @$l && $j < @$s) {\n        if ($l->[$i] == $s->[$j]) {\n            $j++;\n        } else {\n            $j = 0;\n        }\n        $i++;\n    }\n    return $j == @$s;\n}",
    "    my $i = 0;\n    my $j = 0;\n    while ($i < @$l && $j < @$s) {\n        if ($l->[$i] == $s->[$j]) {\n            $j++;\n        } else {\n            $j = 0;\n        }\n        $i++;\n    }\n    return $j == @$s;\n}",
    "    my $i = 0;\n    my $j = 0;\n    while ($i < @$l && $j < @$s) {\n        if ($l->[$i] == $s->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n            $j = 0;\n        }\n    }\n    return $j == @$s;\n}",
    "    my $i = 0;\n    for my $e (@$l) {\n        if ($e == $s->[$i]) {\n            if (++$i == @$s) {\n                return 1;\n            }\n        } else {\n            $i = 0;\n        }\n    }\n    return 0;\n}",
    "    my $i = 0;\n    my $j = 0;\n    while ($i < @$l && $j < @$s) {\n        if ($l->[$i] == $s->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    return $j == @$s;\n}",
    "    my $len = scalar @$s;\n    for my $i (0 .. @$l - $len) {\n        my $j;\n        for ($j = 0; $j < $len; $j++) {\n            last if $l->[$i+$j] != $s->[$j];\n        }\n        return 1 if $j == $len;\n    }\n    return 0;\n}",
    "    my $i = 0;\n    my $j = 0;\n    while ($i < @$l && $j < @$s) {\n        if ($l->[$i] == $s->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    return $j == @$s;\n}",
    "    my $i = 0;\n    for my $e (@$l) {\n        if ($e == $s->[$i]) {\n            if (++$i == @$s) {\n                return 1;\n            }\n        } else {\n            $i = 0;\n        }\n    }\n    return 0;\n}",
    "    my $i = 0;\n    for my $e (@$l) {\n        if ($e == $s->[$i]) {\n            $i++;\n            if ($i == @$s) {\n                return 1;\n            }\n        } else {\n            $i = 0;\n        }\n    }\n    return 0;\n}",
    "    for my $i (0 .. $#$l) {\n        my $j;\n        for ($j = 0; $j < @$s && $i + $j <= $#$l && $l->[$i + $j] == $s->[$j]; $j++) {\n        }\n        return 1 if $j == @$s;\n    }\n    return 0;\n}",
    "    return 0 if @$s > @$l;\n    for my $i (0 .. @$l - @$s) {\n        my $j;\n        for ($j = 0; $j < @$s && $l->[$i+$j] == $s->[$j]; $j++) { }\n        return 1 if $j == @$s;\n    }\n    return 0;\n}",
    "    my $i = 0;\n    my $j = 0;\n    while ($i < @$l && $j < @$s) {\n        if ($l->[$i] == $s->[$j]) {\n            $j++;\n        } else {\n            $j = 0;\n        }\n        $i++;\n    }\n    return $j == @$s;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = @$l;\n    my $m = @$s;\n    while ($i < $n && $j < $m) {\n        if ($l->[$i] == $s->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    return $j == $m;\n}",
    "    my $len_l = @$l;\n    my $len_s = @$s;\n    for(my $i = 0; $i <= $len_l - $len_s; $i++) {\n        my $j = 0;\n        for(; $j < $len_s; $j++) {\n            last if $l->[$i + $j] != $s->[$j];\n        }\n        return 1 if $j == $len_s;\n    }\n    return 0;\n}",
    "    return 0 if @$s > @$l;\n    for my $i (0 .. $#$l - $#$s) {\n        return 1 if join(',', @$s) eq join(',', @$l[$i .. $i + $#$s]);\n    }\n    return 0;\n}",
    "    my $i = 0;\n    for my $e (@$l) {\n        if ($e == $s->[$i]) {\n            $i++;\n            if ($i == @$s) {\n                return 1;\n            }\n        } else {\n            $i = 0;\n        }\n    }\n    return 0;\n}",
    "    return 0 if @$s > @$l;\n    for my $i (0 .. $#$l - $#$s) {\n        return 1 if join(',', @$l[$i .. $i + $#$s]) eq join(',', @$s);\n    }\n    return 0;\n}",
    "    my $i = 0;\n    my $j = 0;\n    while ($i < @$l && $j < @$s) {\n        if ($l->[$i] == $s->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    return $j == @$s;\n}",
    "    my $i = 0;\n    for my $e (@$l) {\n        if ($e == $s->[$i]) {\n            if (++$i == @$s) {\n                return 1;\n            }\n        } else {\n            $i = 0;\n        }\n    }\n    return 0;\n}",
    "    for my $i (0..$#$l) {\n        my $j;\n        for ($j = 0; $j <= $#$s && $l->[$i+$j] eq $s->[$j]; $j++) { }\n        return 1 if $j > $#$s;\n    }\n    return 0;\n}",
    "    my $i = 0;\n    my $j = 0;\n    while ($i < @$l && $j < @$s) {\n        if ($l->[$i] == $s->[$j]) {\n            $j++;\n        } else {\n            $j = 0;\n        }\n        $i++;\n    }\n    return $j == @$s;\n}",
    "    my $len = @$s;\n    for (my $i = 0; $i < @$l; $i++) {\n        if ($l->[$i] == $s->[0]) {\n            my $j = 1;\n            for (; $j < $len; $j++) {\n                if ($l->[$i+$j] != $s->[$j]) {\n                    last;\n                }\n            }\n            if ($j == $len) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}",
    "    my $i = 0;\n    for my $e (@$l) {\n        if ($e == $s->[$i]) {\n            if (++$i == @$s) {\n                return 1;\n            }\n        } else {\n            $i = 0;\n        }\n    }\n    return 0;\n}",
    "    my $len_l = scalar @$l;\n    my $len_s = scalar @$s;\n    my $i = 0;\n    my $j = 0;\n    while ($i < $len_l && $j < $len_s) {\n        if ($l->[$i] == $s->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    return $j == $len_s;\n}",
    "    my $len = @$s;\n    for (my $i = 0; $i < @$l - $len + 1; $i++) {\n        my $j = 0;\n        for (; $j < $len; $j++) {\n            last if $l->[$i + $j] ne $s->[$j];\n        }\n        return 1 if $j == $len;\n    }\n    return 0;\n}",
    "    my $i = 0;\n    my $j = 0;\n    while ($i < @$l && $j < @$s) {\n        if ($l->[$i] == $s->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i++;\n        }\n    }\n    return $j == @$s;\n}",
    "    my $i = 0;\n    for my $e (@$l) {\n        if ($e == $s->[$i]) {\n            $i++;\n            if ($i == @$s) {\n                return 1;\n            }\n        } else {\n            $i = 0;\n        }\n    }\n    return 0;\n}",
    "    my $i = 0;\n    for my $e (@$l) {\n        if ($e == $s->[$i]) {\n            $i++;\n            return 1 if $i == @$s;\n        } else {\n            $i = 0;\n        }\n    }\n    return 0;\n}",
    "    my $i = 0;\n    for my $e (@$l) {\n        if ($e == $s->[$i]) {\n            $i++;\n            if ($i == @$s) {\n                return 1;\n            }\n        } else {\n            $i = 0;\n        }\n    }\n    return 0;\n}",
    "    my $len_l = scalar @$l;\n    my $len_s = scalar @$s;\n    my $i = 0;\n    my $j = 0;\n    while ($i < $len_l && $j < $len_s) {\n        if ($l->[$i] == $s->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    return $j == $len_s;\n}",
    "    for my $i (0 .. $#$l - $#$s) {\n        return 1 if join('', @$l[$i..$i+$#$s]) eq join('', @$s);\n    }\n    return 0;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = scalar @$l;\n    my $m = scalar @$s;\n    while ($i < $n && $j < $m) {\n        if ($l->[$i] == $s->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    return $j == $m;\n}",
    "    return 0 if @$s > @$l;\n    for my $i (0 .. $#$l - $#$s) {\n        return 1 if join(',', @$l[$i .. $i + $#$s]) eq join(',', @$s);\n    }\n    return 0;\n}",
    "    my $i = 0;\n    my $j = 0;\n    while ($i < @$l && $j < @$s) {\n        if ($l->[$i] == $s->[$j]) {\n            $j++;\n        } else {\n            $j = 0;\n        }\n        $i++;\n    }\n    return $j == @$s;\n}",
    "    my $i = 0;\n    for my $e (@$l) {\n        if ($e == $s->[$i]) {\n            $i++;\n            return 1 if $i == @$s;\n        } else {\n            $i = 0;\n        }\n    }\n    return 0;\n}",
    "    my $i = 0;\n    for (@$l) {\n        if ($_ eq $s->[$i]) {\n            $i++;\n            return 1 if $i == @$s;\n        } else {\n            $i = 0;\n        }\n    }\n    return 0;\n}",
    "    my $i;\n    for ($i=0; $i<@$l; $i++) {\n        my $j;\n        for ($j=0; $j<@$s; $j++) {\n            last if $l->[$i+$j] ne $s->[$j];\n        }\n        return 1 if $j == @$s;\n    }\n    return 0;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = @$l;\n    my $m = @$s;\n    while ($i < $n && $j < $m) {\n        if ($l->[$i] == $s->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    return $j == $m;\n}",
    "    my $len = @$s;\n    for my $i (0 .. @$l - $len) {\n        my $j;\n        for ($j = 0; $j < $len; $j++) {\n            last if $l->[$i+$j] != $s->[$j];\n        }\n        return 1 if $j == $len;\n    }\n    return 0;\n}",
    "    my $i = 0;\n    my $j = 0;\n    my $n = @$l;\n    my $m = @$s;\n    while ($i < $n && $j < $m) {\n        if ($l->[$i] == $s->[$j]) {\n            $i++;\n            $j++;\n        } else {\n            $i = $i - $j + 1;\n            $j = 0;\n        }\n    }\n    return $j == $m;\n}",
    "    my $i = 0;\n    for my $e (@$l) {\n        return 1 if $e eq $s->[$i];\n        $i++ if $e eq $s->[$i];\n        $i = 0 if $i >= @$s;\n    }\n    return 0;\n}",
    "    my $i = 0;\n    my $j = 0;\n    while ($i < @$l && $j < @$s) {\n        if ($l->[$i] == $s->[$j]) {\n            $i++;\n            $j++;\n        }\n        else {\n            $i++;\n        }\n    }\n    return $j == @$s;\n}"
  ]
}
{
  "name": "mbpp_441_surfacearea_cube",
  "language": "pl",
  "prompt": "# Write a function to find the surface area of a cube of a given size.\nsub surfacearea_cube {\n    my($l) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_441_surfacearea_cube.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&surfacearea_cube;\n        if(eq_deeply($candidate->(5),150)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(3),54)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10),600)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l**2;\n}",
    "    return 6 * $l**2;\n}",
    "    return 6 * $l**2;\n}",
    "    return 6 * $l ** 2;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l**2;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l**2;\n}",
    "    return 6*$l**2;\n}",
    "    return 6 * $l**2;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l**2;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l**2;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l**2;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l**2;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l**2;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l**2;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l**2;\n}",
    "    return 6 * $l ** 2;\n}",
    "    return 6 * $l**2;\n}",
    "    return 6 * $l**2;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l**2;\n}",
    "    return 6 * $l**2;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l**2;\n}",
    "    return 6 * $l**2;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l**2;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l**2;\n}",
    "    return 6 * $l**2;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l**2;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l**2;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l**2;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l**2;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l**2;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l**2;\n}",
    "    return 6 * $l ** 2;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l**2;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l**2;\n}",
    "    return 6 * $l**2;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l**2;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6*$l**2;\n}",
    "    return 6 * $l**2;\n}",
    "    return 6 * $l**2;\n}",
    "    return 6 * $l**2;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l**2;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l**2;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l**2;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6*$l**2;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6*$l**2;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l**2;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l**2;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l**2;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l**2;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l**2;\n}",
    "    return 6 * ($l ** 2);\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l**2;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l**2;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l**2;\n}",
    "    return 6 * $l**2;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l**2;\n}",
    "    return 6 * $l**2;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l**2;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l**2;\n}",
    "    return 6 * $l**2;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l**2;\n}",
    "    return 6 * $l**2;\n}",
    "    return 6 * $l**2;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l * $l;\n}",
    "    return 6 * $l ** 2;\n}"
  ]
}
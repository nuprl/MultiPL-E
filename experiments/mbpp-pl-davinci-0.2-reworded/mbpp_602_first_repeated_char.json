{
  "name": "mbpp_602_first_repeated_char",
  "language": "pl",
  "prompt": "# Write a plthon function to find the first repeated character in a given string.\nsub first_repeated_char {\n    my($str1) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_602_first_repeated_char.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&first_repeated_char;\n        if(eq_deeply($candidate->(\"abcabc\"),\"a\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"abc\"),undef)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"123123\"),\"1\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my %hash;\n    my @char = split(//, $str1);\n    foreach my $char (@char) {\n        if (exists($hash{$char})) {\n            return $char;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return -1;\n}",
    "    my %hash = ();\n    foreach my $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            return $char;\n        } else {\n            $hash{$char} = 1;\n        }\n    }\n    return undef;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if($count{$char} > 1) {\n            return $char;\n        }\n    }\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        if (exists $char{$char}) {\n            return $char;\n        } else {\n            $char{$char} = 1;\n        }\n    }\n    return undef;\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        $char{$char}++;\n        if ($char{$char} == 2) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if ($count{$char} == 2) {\n            return $char;\n        }\n    }\n    return \"No repeated character\";\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        $char{$char}++;\n        if ($char{$char} == 2) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %hash = ();\n    foreach my $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            return $char;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return undef;\n}",
    "    my(%hash,$ch);\n    foreach $ch(split //,$str1) {\n        if(exists $hash{$ch}) {\n            return $ch;\n        }\n        else {\n            $hash{$ch} = 1;\n        }\n    }\n    return \"No repeated character found\";\n}",
    "    my @str = split('',$str1);\n    my %hash;\n    foreach my $char (@str) {\n        if(exists $hash{$char}) {\n            return $char;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return -1;\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        if(exists($char{$char})) {\n            return $char;\n        } else {\n            $char{$char} = 1;\n        }\n    }\n    return undef;\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        $char{$char}++;\n        if($char{$char} == 2) {\n            return $char;\n        }\n    }\n    return \"No repeated character found\";\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        $char{$char}++;\n        return $char if $char{$char} == 2;\n    }\n}\nprint first_repeated_char(\"the quick brown fox jumps then quickly blow air\");",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        $char{$char}++;\n        if ($char{$char} == 2) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        if (exists $char{$char}) {\n            return $char;\n        }\n        else {\n            $char{$char} = 1;\n        }\n    }\n    return undef;\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        if (exists $char{$char}) {\n            return $char;\n        }\n        else {\n            $char{$char} = 1;\n        }\n    }\n    return undef;\n}",
    "    my %char;\n    foreach my $char(split //, $str1) {\n        $char{$char}++;\n    }\n    foreach my $char(split //, $str1) {\n        if($char{$char} > 1) {\n            return $char;\n        }\n    }\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        if(exists($char{$char})) {\n            return $char;\n        }\n        else {\n            $char{$char} = 1;\n        }\n    }\n    return undef;\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        $char{$char}++;\n        if ($char{$char} > 1) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        $char{$char}++;\n        if($char{$char} == 2) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %hash;\n    my $i;\n    for($i=0;$i<length($str1);$i++) {\n        my $char = substr($str1,$i,1);\n        if(exists $hash{$char}) {\n            return $char;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return -1;\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        $char{$char}++;\n        if($char{$char} == 2) {\n            return $char;\n        }\n    }\n    return 0;\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        if (exists $char{$char}) {\n            return $char;\n        } else {\n            $char{$char} = 1;\n        }\n    }\n    return undef;\n}",
    "    my %hash;\n    foreach my $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            return $char;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return undef;\n}",
    "    my %hash = ();\n    my $i = 0;\n    my $len = length($str1);\n    while($i < $len) {\n        my $char = substr($str1, $i, 1);\n        if(exists $hash{$char}) {\n            return $char;\n        } else {\n            $hash{$char} = 1;\n        }\n        $i++;\n    }\n    return \"\";\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        if (exists $char{$char}) {\n            return $char;\n        }\n        else {\n            $char{$char} = 1;\n        }\n    }\n    return undef;\n}",
    "    my(%hash) = ();\n    my($i, $char);\n    for($i=0; $i<length($str1); $i++) {\n        $char = substr($str1, $i, 1);\n        if(exists($hash{$char})) {\n            return $char;\n        } else {\n            $hash{$char} = 1;\n        }\n    }\n    return -1;\n}",
    "    my %hash;\n    my $i;\n    my $char;\n    for($i=0;$i<length($str1);$i++) {\n        $char = substr($str1,$i,1);\n        if(exists($hash{$char})) {\n            return $char;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return 0;\n}",
    "    my %hash;\n    my $i;\n    my $len = length($str1);\n    for($i=0;$i<$len;$i++) {\n        my $char = substr($str1,$i,1);\n        if(exists($hash{$char})) {\n            return $char;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return 0;\n}",
    "    my %hash;\n    my @arr = split(\"\",$str1);\n    foreach my $char (@arr) {\n        if(exists($hash{$char})) {\n            return $char;\n        } else {\n            $hash{$char} = 1;\n        }\n    }\n    return -1;\n}",
    "    my %hash;\n    foreach my $char (split //, $str1) {\n        if(exists $hash{$char}) {\n            return $char;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return undef;\n}",
    "    my(%hash, $i, $char);\n    for($i=0; $i<length($str1); $i++) {\n        $char = substr($str1, $i, 1);\n        if(exists($hash{$char})) {\n            return $char;\n        } else {\n            $hash{$char} = 1;\n        }\n    }\n    return -1;\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        $char{$char}++;\n        if ($char{$char} == 2) {\n            return $char;\n        }\n    }\n    return \"No repeated character\";\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        $char{$char}++;\n        if ($char{$char} == 2) {\n            return $char;\n        }\n    }\n    return -1;\n}",
    "    my %hash;\n    my $i;\n    my $len = length($str1);\n    for($i=0; $i<$len; $i++) {\n        my $char = substr($str1, $i, 1);\n        if(exists($hash{$char})) {\n            return $char;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return -1;\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        $char{$char}++;\n        if($char{$char} == 2) {\n            return $char;\n        }\n    }\n    return 'No repeated character';\n}",
    "    my %hash;\n    foreach my $char (split //, $str1) {\n        if(exists $hash{$char}) {\n            return $char;\n        } else {\n            $hash{$char} = 1;\n        }\n    }\n    return undef;\n}",
    "    my %hash;\n    foreach my $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            return $char;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return undef;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if ($count{$char} == 2) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if ($count{$char} > 1) {\n            return $char;\n        }\n    }\n    return undef;\n}\nprint first_repeated_char(\"abcdabcd\");\nprint \"\\n\";",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if ($count{$char} > 1) {\n            return $char;\n        }\n    }\n    return 0;\n}\nprint(first_repeated_char(\"the quick brown fox jumps then quickly blow air\"));",
    "    my %hash;\n    my @char = split(//,$str1);\n    foreach my $char(@char) {\n        if(exists($hash{$char})) {\n            return $char;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return -1;\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        if (exists $char{$char}) {\n            return $char;\n        }\n        else {\n            $char{$char} = 1;\n        }\n    }\n    return undef;\n}",
    "    my(%hash,$char);\n    foreach $char (split //, $str1) {\n        if(exists $hash{$char}) {\n            return $char;\n        } else {\n            $hash{$char} = 1;\n        }\n    }\n    return \"No repeated character found\";\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        $char{$char}++;\n        if ($char{$char} > 1) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        if (exists $char{$char}) {\n            return $char;\n        } else {\n            $char{$char} = 1;\n        }\n    }\n    return undef;\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        if (exists($char{$char})) {\n            return $char;\n        } else {\n            $char{$char} = 1;\n        }\n    }\n    return undef;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if ($count{$char} > 1) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %hash;\n    foreach my $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            return $char;\n        } else {\n            $hash{$char} = 1;\n        }\n    }\n    return undef;\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        $char{$char}++;\n        if ($char{$char} > 1) {\n            return $char;\n        }\n    }\n    return undef;\n}\nprint first_repeated_char(\"abcdabcd\");\nprint \"\\n\";",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        if (exists $char{$char}) {\n            return $char;\n        } else {\n            $char{$char} = 1;\n        }\n    }\n    return undef;\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        $char{$char}++;\n        if ($char{$char} > 1) {\n            return $char;\n        }\n    }\n}",
    "    my %hash;\n    my $char;\n    foreach $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            return $char;\n        } else {\n            $hash{$char} = 1;\n        }\n    }\n    return \"No repeated character\";\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if ($count{$char} == 2) {\n            return $char;\n        }\n    }\n    return 0;\n}",
    "    my %hash;\n    my $i;\n    for($i = 0; $i < length($str1); $i++) {\n        my $ch = substr($str1, $i, 1);\n        if(exists($hash{$ch})) {\n            return $ch;\n        }\n        else {\n            $hash{$ch} = 1;\n        }\n    }\n    return -1;\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        if (exists $char{$char}) {\n            return $char;\n        } else {\n            $char{$char} = 1;\n        }\n    }\n    return \"No repeated character\";\n}",
    "    my %hash;\n    my $i;\n    my $len = length($str1);\n    for($i=0;$i<$len;$i++) {\n        my $char = substr($str1,$i,1);\n        if(exists($hash{$char})) {\n            return $char;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return 0;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if($count{$char} > 1) {\n            return $char;\n        }\n    }\n    return 'No repeated character found';\n}",
    "    my %hash;\n    foreach my $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            return $char;\n        } else {\n            $hash{$char} = 1;\n        }\n    }\n    return undef;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if ($count{$char} > 1) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        if (exists $char{$char}) {\n            return $char;\n        }\n        else {\n            $char{$char} = 1;\n        }\n    }\n    return undef;\n}",
    "    my %hash;\n    my $i;\n    my $char;\n    my $len = length($str1);\n    for($i = 0; $i < $len; $i++) {\n        $char = substr($str1, $i, 1);\n        if(exists($hash{$char})) {\n            return $char;\n        }\n        $hash{$char} = 1;\n    }\n    return \"\";\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        if (exists($char{$char})) {\n            return $char;\n        }\n        else {\n            $char{$char} = 1;\n        }\n    }\n    return undef;\n}",
    "    my(@str1) = split(//, $str1);\n    my(%count);\n    foreach my $char (@str1) {\n        $count{$char}++;\n    }\n    foreach my $char (keys %count) {\n        if($count{$char} > 1) {\n            return $char;\n        }\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if($count{$char} > 1) {\n            return $char;\n        }\n    }\n    return \"No repeated character\";\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        if (exists $char{$char}) {\n            return $char;\n        } else {\n            $char{$char} = 1;\n        }\n    }\n    return undef;\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        if (exists $char{$char}) {\n            return $char;\n        }\n        else {\n            $char{$char} = 1;\n        }\n    }\n    return undef;\n}",
    "    my(%hash) = ();\n    my($i, $char);\n    for($i=0; $i<length($str1); $i++) {\n        $char = substr($str1, $i, 1);\n        if(exists($hash{$char})) {\n            return $char;\n        } else {\n            $hash{$char} = 1;\n        }\n    }\n    return \"\";\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        if (exists $char{$char}) {\n            return $char;\n        }\n        else {\n            $char{$char} = 1;\n        }\n    }\n    return undef;\n}",
    "    my %hash;\n    my @str = split('', $str1);\n    foreach my $char (@str) {\n        if (exists $hash{$char}) {\n            return $char;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n}",
    "    my %hash = ();\n    my $i = 0;\n    my $len = length($str1);\n    for($i = 0; $i < $len; $i++) {\n        my $char = substr($str1, $i, 1);\n        if(exists $hash{$char}) {\n            return $char;\n        } else {\n            $hash{$char} = 1;\n        }\n    }\n    return -1;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if ($count{$char} > 1) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if ($count{$char} == 2) {\n            return $char;\n        }\n    }\n    return \"No repeated character\";\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        if (exists($char{$char})) {\n            return $char;\n        }\n        else {\n            $char{$char} = 1;\n        }\n    }\n    return undef;\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        if (exists $char{$char}) {\n            return $char;\n        }\n        else {\n            $char{$char} = 1;\n        }\n    }\n    return \"No repeated character found\";\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        $char{$char}++;\n        if ($char{$char} == 2) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %count;\n    my $c;\n    foreach $c (split //, $str1) {\n        $count{$c}++;\n    }\n    foreach $c (split //, $str1) {\n        if($count{$c} > 1) {\n            return $c;\n        }\n    }\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if($count{$char} == 2) {\n            return $char;\n        }\n    }\n    return 0;\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        $char{$char}++;\n        if ($char{$char} == 2) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %hash;\n    my $i;\n    my $j;\n    my $len = length($str1);\n    for($i = 0; $i < $len; $i++) {\n        $j = substr($str1, $i, 1);\n        if(exists($hash{$j})) {\n            return $j;\n        }\n        else {\n            $hash{$j} = 1;\n        }\n    }\n    return \"\";\n}",
    "    my %hash;\n    my $i;\n    my $char;\n    my $len = length($str1);\n    for($i=0; $i<$len; $i++) {\n        $char = substr($str1, $i, 1);\n        if(exists($hash{$char})) {\n            return $char;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return \"No repeated character\";\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        $char{$char}++;\n        if ($char{$char} > 1) {\n            return $char;\n        }\n    }\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        if (exists $char{$char}) {\n            return $char;\n        } else {\n            $char{$char} = 1;\n        }\n    }\n    return undef;\n}",
    "    my %hash;\n    my $i;\n    my $len = length($str1);\n    for($i=0;$i<$len;$i++) {\n        my $char = substr($str1,$i,1);\n        if(exists $hash{$char}) {\n            return $char;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return undef;\n}",
    "    my %hash;\n    my $char;\n    foreach $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            return $char;\n        } else {\n            $hash{$char} = 1;\n        }\n    }\n    return -1;\n}",
    "    my %hash = ();\n    foreach my $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            return $char;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return \"No repeated character\";\n}",
    "    my %count;\n    my $c;\n    foreach $c (split //, $str1) {\n        $count{$c}++;\n    }\n    foreach $c (split //, $str1) {\n        if($count{$c} > 1) {\n            return $c;\n        }\n    }\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        $char{$char}++;\n        if ($char{$char} == 2) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %hash;\n    foreach my $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            return $char;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return \"No repeated character found\";\n}",
    "    my %hash = ();\n    foreach my $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            return $char;\n        }\n        $hash{$char} = 1;\n    }\n    return \"\";\n}",
    "    my %hash;\n    my $i;\n    my @array = split(//, $str1);\n    for($i = 0; $i <= $#array; $i++) {\n        if(exists($hash{$array[$i]})) {\n            return $array[$i];\n        }\n        else {\n            $hash{$array[$i]} = 1;\n        }\n    }\n    return -1;\n}",
    "    my %hash;\n    my @char = split(//, $str1);\n    foreach my $char (@char) {\n        if (exists($hash{$char})) {\n            return $char;\n        } else {\n            $hash{$char} = 1;\n        }\n    }\n    return 0;\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        $char{$char}++;\n        if ($char{$char} == 2) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        $char{$char}++;\n        if ($char{$char} == 2) {\n            return $char;\n        }\n    }\n}",
    "    my %char;\n    my $c;\n    foreach $c (split //, $str1) {\n        if (exists($char{$c})) {\n            return $c;\n        } else {\n            $char{$c} = 1;\n        }\n    }\n    return 0;\n}",
    "    my $count = 0;\n    my $len = length($str1);\n    for(my $i = 0; $i < $len; $i++) {\n        for(my $j = $i+1; $j < $len; $j++) {\n            if(substr($str1, $i, 1) eq substr($str1, $j, 1)) {\n                $count++;\n                return substr($str1, $i, 1);\n            }\n        }\n    }\n    if($count == 0) {\n        return -1;\n    }\n}",
    "    my(%hash) = ();\n    my($i, $char);\n    for($i=0; $i<length($str1); $i++) {\n        $char = substr($str1, $i, 1);\n        if(exists($hash{$char})) {\n            return $char;\n        } else {\n            $hash{$char} = 1;\n        }\n    }\n    return -1;\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        $char{$char}++;\n        if ($char{$char} == 2) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        $char{$char}++;\n        if ($char{$char} > 1) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if ($count{$char} > 1) {\n            return $char;\n        }\n    }\n    return 0;\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        if (exists($char{$char})) {\n            return $char;\n        }\n        else {\n            $char{$char} = 1;\n        }\n    }\n    return undef;\n}",
    "    my %hash;\n    my $i;\n    my @str = split(\"\",$str1);\n    for($i=0;$i<=$#str;$i++) {\n        if(exists($hash{$str[$i]})) {\n            return $str[$i];\n        }\n        else {\n            $hash{$str[$i]} = 1;\n        }\n    }\n    return 0;\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        $char{$char}++;\n        if ($char{$char} > 1) {\n            return $char;\n        }\n    }\n    return \"No repeated character\";\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        $char{$char}++;\n        if ($char{$char} > 1) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %char;\n    my $c;\n    foreach $c (split //, $str1) {\n        if (exists($char{$c})) {\n            return $c;\n        } else {\n            $char{$c} = 1;\n        }\n    }\n    return \"\";\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        if (exists $char{$char}) {\n            return $char;\n        }\n        else {\n            $char{$char} = 1;\n        }\n    }\n    return undef;\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        if (exists $char{$char}) {\n            return $char;\n        } else {\n            $char{$char} = 1;\n        }\n    }\n    return undef;\n}",
    "    my %hash;\n    foreach my $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            return $char;\n        } else {\n            $hash{$char} = 1;\n        }\n    }\n    return \"No repeated character\";\n}",
    "    my %hash;\n    my $i;\n    for($i=0;$i<length($str1);$i++) {\n        my $char = substr($str1,$i,1);\n        if(exists $hash{$char}) {\n            return $char;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return \"No repeated character\";\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        $char{$char}++;\n        if ($char{$char} == 2) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        $char{$char}++;\n        if ($char{$char} > 1) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %hash;\n    my @char = split(//,$str1);\n    foreach my $char(@char) {\n        if(exists($hash{$char})) {\n            return $char;\n        } else {\n            $hash{$char} = 1;\n        }\n    }\n    return -1;\n}\nprint \"Enter the string : \";\nmy $str1 = <STDIN>;\nchomp($str1);\nmy $result = first_repeated_char($str1);\nif($result == -1) {\n    print \"No repeated character found in the string\\n\";\n} else {\n    print \"First repeated character in the string is : $result\\n\";\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        if (exists $char{$char}) {\n            return $char;\n        }\n        else {\n            $char{$char} = 1;\n        }\n    }\n    return undef;\n}",
    "    my %hash;\n    my $char;\n    foreach $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            return $char;\n        } else {\n            $hash{$char} = 1;\n        }\n    }\n    return undef;\n}",
    "    my %hash = ();\n    my @arr = split(\"\",$str1);\n    foreach my $char (@arr) {\n        if(exists $hash{$char}) {\n            return $char;\n        } else {\n            $hash{$char} = 1;\n        }\n    }\n    return \"No repeated character\";\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if ($count{$char} > 1) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        $char{$char}++;\n        if ($char{$char} == 2) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        $char{$char}++;\n        if ($char{$char} == 2) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my @str = split(\"\", $str1);\n    my %hash;\n    foreach my $char (@str) {\n        if (exists $hash{$char}) {\n            return $char;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return \"No repeated character\";\n}",
    "    my %hash = ();\n    foreach my $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            return $char;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return 0;\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        $char{$char}++;\n        if ($char{$char} == 2) {\n            return $char;\n        }\n    }\n    return \"No repeated characters found!\";\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        $char{$char}++;\n        if ($char{$char} == 2) {\n            return $char;\n        }\n    }\n    return \"No repeated character\";\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if ($count{$char} > 1) {\n            return $char;\n        }\n    }\n    return \"No repeated character\";\n}",
    "    my %hash = ();\n    foreach my $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            return $char;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return -1;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if ($count{$char} == 2) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        $char{$char}++;\n        if ($char{$char} == 2) {\n            return $char;\n        }\n    }\n    return;\n}\nprint first_repeated_char(\"the quick brown fox jumps then quickly blow air\");",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        $char{$char}++;\n        if ($char{$char} > 1) {\n            return $char;\n        }\n    }\n}",
    "    my %hash = ();\n    foreach my $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            return $char;\n        } else {\n            $hash{$char} = 1;\n        }\n    }\n    return undef;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if($count{$char} == 2) {\n            return $char;\n        }\n    }\n    return \"No repeated character found\";\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if ($count{$char} > 1) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if ($count{$char} == 2) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %hash;\n    foreach my $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            return $char;\n        } else {\n            $hash{$char} = 1;\n        }\n    }\n    return undef;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if ($count{$char} > 1) {\n            return $char;\n        }\n    }\n    return 0;\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        $char{$char}++;\n        if ($char{$char} == 2) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if ($count{$char} == 2) {\n            return $char;\n        }\n    }\n    return 'No repeated character';\n}",
    "    my %hash;\n    foreach my $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            return $char;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return undef;\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        if (exists $char{$char}) {\n            return $char;\n        }\n        else {\n            $char{$char} = 1;\n        }\n    }\n    return undef;\n}",
    "    my(%hash) = ();\n    my($i, $char);\n    for($i=0; $i<length($str1); $i++) {\n        $char = substr($str1, $i, 1);\n        if(exists($hash{$char})) {\n            return $char;\n        } else {\n            $hash{$char} = 1;\n        }\n    }\n    return undef;\n}",
    "    my %hash;\n    my $i;\n    my $j;\n    my $len = length($str1);\n    for($i = 0; $i < $len; $i++) {\n        $j = substr($str1, $i, 1);\n        if(exists($hash{$j})) {\n            return $j;\n        } else {\n            $hash{$j} = 1;\n        }\n    }\n    return \"\";\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if ($count{$char} == 2) {\n            return $char;\n        }\n    }\n    return \"No repeated character\";\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        if (exists $char{$char}) {\n            return $char;\n        }\n        else {\n            $char{$char} = 1;\n        }\n    }\n    return undef;\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        if (exists $char{$char}) {\n            return $char;\n        } else {\n            $char{$char} = 1;\n        }\n    }\n    return undef;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if ($count{$char} > 1) {\n            return $char;\n        }\n    }\n    return \"No repeated character found\";\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if ($count{$char} > 1) {\n            return $char;\n        }\n    }\n    return;\n}",
    "    my $i;\n    my $j;\n    my $count = 0;\n    my $len = length($str1);\n    for($i = 0; $i < $len; $i++) {\n        for($j = $i + 1; $j < $len; $j++) {\n            if(substr($str1, $i, 1) eq substr($str1, $j, 1)) {\n                $count = 1;\n                last;\n            }\n        }\n        if($count == 1) {\n            last;\n        }\n    }\n    if($count == 1) {\n        return substr($str1, $i, 1);\n    }\n    else {\n        return \"No repeated character\";\n    }\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        if (exists $char{$char}) {\n            return $char;\n        } else {\n            $char{$char} = 1;\n        }\n    }\n    return undef;\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        $char{$char}++;\n        if ($char{$char} == 2) {\n            return $char;\n        }\n    }\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        if (exists $char{$char}) {\n            return $char;\n        } else {\n            $char{$char} = 1;\n        }\n    }\n    return undef;\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        $char{$char}++;\n        if ($char{$char} == 2) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %char;\n    foreach my $char(split //, $str1) {\n        $char{$char}++;\n        if($char{$char} == 2) {\n            return $char;\n        }\n    }\n    return \"No repeated character\";\n}",
    "    my @str = split(//,$str1);\n    my %count;\n    foreach my $char(@str) {\n        $count{$char}++;\n    }\n    foreach my $char(@str) {\n        if($count{$char} > 1) {\n            return $char;\n        }\n    }\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        $char{$char}++;\n        if ($char{$char} == 2) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %hash;\n    my $i;\n    for($i=0;$i<length($str1);$i++) {\n        if(exists($hash{substr($str1,$i,1)})) {\n            return substr($str1,$i,1);\n        }\n        else {\n            $hash{substr($str1,$i,1)} = 1;\n        }\n    }\n    return \"\";\n}",
    "    my %hash;\n    foreach my $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            return $char;\n        } else {\n            $hash{$char} = 1;\n        }\n    }\n    return undef;\n}",
    "    my %hash;\n    for my $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            return $char;\n        } else {\n            $hash{$char} = 1;\n        }\n    }\n    return undef;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if ($count{$char} > 1) {\n            return $char;\n        }\n    }\n}\nprint first_repeated_char(\"abcdabcd\");",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        $char{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        if ($char{$char} > 1) {\n            return $char;\n        }\n    }\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        $char{$char}++;\n        if ($char{$char} == 2) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        if (exists($char{$char})) {\n            return $char;\n        }\n        else {\n            $char{$char} = 1;\n        }\n    }\n    return undef;\n}",
    "    my %hash = ();\n    foreach my $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            return $char;\n        } else {\n            $hash{$char} = 1;\n        }\n    }\n    return undef;\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        if (exists $char{$char}) {\n            return $char;\n        }\n        else {\n            $char{$char} = 1;\n        }\n    }\n    return undef;\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        if (exists $char{$char}) {\n            return $char;\n        }\n        else {\n            $char{$char} = 1;\n        }\n    }\n    return undef;\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        $char{$char}++;\n        if ($char{$char} == 2) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        $char{$char}++;\n        if ($char{$char} == 2) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %hash;\n    my $char;\n    foreach $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            return $char;\n        } else {\n            $hash{$char} = 1;\n        }\n    }\n    return 0;\n}",
    "    my $i;\n    my $j;\n    my $flag = 0;\n    my @str = split('', $str1);\n    for($i = 0; $i <= $#str; $i++) {\n        for($j = $i + 1; $j <= $#str; $j++) {\n            if($str[$i] eq $str[$j]) {\n                $flag = 1;\n                last;\n            }\n        }\n        if($flag == 1) {\n            last;\n        }\n    }\n    if($flag == 1) {\n        print \"First repeated character is $str[$i]\\n\";\n    }\n    else {\n        print \"No repeated character found\\n\";\n    }\n}",
    "    my %hash;\n    foreach my $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            return $char;\n        } else {\n            $hash{$char} = 1;\n        }\n    }\n    return \"No repeated character\";\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if($count{$char} > 1) {\n            return $char;\n        }\n    }\n    return \"No repeated character\";\n}",
    "    my %hash;\n    foreach my $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            return $char;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return -1;\n}",
    "    my %hash;\n    my $char;\n    foreach $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            return $char;\n        } else {\n            $hash{$char} = 1;\n        }\n    }\n    return \"No repeated character\";\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        $char{$char}++;\n        if ($char{$char} == 2) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        $char{$char}++;\n        if ($char{$char} > 1) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        if (exists $char{$char}) {\n            return $char;\n        }\n        else {\n            $char{$char} = 1;\n        }\n    }\n    return;\n}",
    "    my %count;\n    my $c;\n    foreach $c (split //, $str1) {\n        $count{$c}++;\n    }\n    foreach $c (split //, $str1) {\n        if($count{$c} > 1) {\n            return $c;\n        }\n    }\n}",
    "    my %hash = ();\n    foreach my $char (split //, $str1) {\n        if (exists($hash{$char})) {\n            return $char;\n        } else {\n            $hash{$char} = 1;\n        }\n    }\n    return -1;\n}",
    "    my %char;\n    foreach my $char (split //, lc $str1) {\n        $char{$char}++;\n        return $char if $char{$char} == 2;\n    }\n    return;\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if ($count{$char} > 1) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %count;\n    my $c;\n    foreach $c (split //, $str1) {\n        $count{$c}++;\n    }\n    foreach $c (split //, $str1) {\n        if($count{$c} > 1) {\n            return $c;\n        }\n    }\n}",
    "    my %hash;\n    my $c;\n    foreach $c (split //, $str1) {\n        if (exists($hash{$c})) {\n            return $c;\n        }\n        else {\n            $hash{$c} = 1;\n        }\n    }\n    return 0;\n}",
    "    my(%hash, $char);\n    foreach $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            return $char;\n        } else {\n            $hash{$char} = 1;\n        }\n    }\n    return undef;\n}",
    "    my %count;\n    foreach my $char(split //, $str1) {\n        $count{$char}++;\n        if($count{$char} > 1) {\n            return $char;\n        }\n    }\n    return 0;\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        $char{$char}++;\n        if ($char{$char} == 2) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %hash;\n    my @char = split(//, $str1);\n    foreach my $char (@char) {\n        if (exists($hash{$char})) {\n            return $char;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return -1;\n}",
    "    my %hash = ();\n    my $char;\n    foreach $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            return $char;\n        } else {\n            $hash{$char} = 1;\n        }\n    }\n    return \"No repeated character\";\n}",
    "    my %count;\n    foreach my $char (split //, $str1) {\n        $count{$char}++;\n        if ($count{$char} > 1) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        $char{$char}++;\n        if ($char{$char} == 2) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        $char{$char}++;\n        if ($char{$char} > 1) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %count;\n    my $c;\n    foreach $c (split //, $str1) {\n        $count{$c}++;\n    }\n    foreach $c (split //, $str1) {\n        if($count{$c} > 1) {\n            return $c;\n        }\n    }\n    return 0;\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        if (exists $char{$char}) {\n            return $char;\n        }\n        else {\n            $char{$char} = 1;\n        }\n    }\n    return undef;\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        $char{$char}++;\n        if ($char{$char} == 2) {\n            return $char;\n        }\n    }\n    return 0;\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        if (exists $char{$char}) {\n            return $char;\n        }\n        else {\n            $char{$char} = 1;\n        }\n    }\n    return undef;\n}",
    "    my %hash = ();\n    foreach my $char (split //, $str1) {\n        if (exists $hash{$char}) {\n            return $char;\n        }\n        else {\n            $hash{$char} = 1;\n        }\n    }\n    return \"No repeated character\";\n}",
    "    my(%hash) = ();\n    my($i, $char);\n    for($i=0; $i<length($str1); $i++) {\n        $char = substr($str1, $i, 1);\n        if(exists($hash{$char})) {\n            return $char;\n        } else {\n            $hash{$char} = 1;\n        }\n    }\n    return '\\0';\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        $char{$char}++;\n        if ($char{$char} == 2) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %hash;\n    my $i;\n    my @str = split('', $str1);\n    for($i=0; $i<=$#str; $i++) {\n        if(exists($hash{$str[$i]})) {\n            return $str[$i];\n        }\n        else {\n            $hash{$str[$i]} = 1;\n        }\n    }\n    return -1;\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        if (exists($char{$char})) {\n            return $char;\n        } else {\n            $char{$char} = 1;\n        }\n    }\n    return \"No repeated character\";\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        $char{$char}++;\n        if ($char{$char} == 2) {\n            return $char;\n        }\n    }\n    return undef;\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        if (exists $char{$char}) {\n            return $char;\n        }\n        else {\n            $char{$char} = 1;\n        }\n    }\n    return undef;\n}",
    "    my %char;\n    foreach my $char (split //, $str1) {\n        $char{$char}++;\n    }\n    foreach my $char (split //, $str1) {\n        if($char{$char} > 1) {\n            return $char;\n        }\n    }\n}\nprint(first_repeated_char(\"thequickbrownfoxjumpsoverthelazydog\"));",
    "    my @str = split(//,$str1);\n    my $i;\n    my $j;\n    my $flag = 0;\n    for($i=0;$i<=$#str;$i++) {\n        for($j=$i+1;$j<=$#str;$j++) {\n            if($str[$i] eq $str[$j]) {\n                $flag = 1;\n                last;\n            }\n        }\n        if($flag == 1) {\n            last;\n        }\n    }\n    if($flag == 1) {\n        return $str[$i];\n    }\n    else {\n        return -1;\n    }\n}"
  ]
}
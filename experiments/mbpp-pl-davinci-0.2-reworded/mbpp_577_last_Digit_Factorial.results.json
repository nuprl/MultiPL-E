{
  "name": "mbpp_577_last_Digit_Factorial",
  "language": "pl",
  "prompt": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_577_last_Digit_Factorial.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "results": [
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nprint(\"Enter the number : \");\nmy $n = <STDIN>;\nchomp($n);\nmy $result = last_Digit_Factorial($n);\nprint(\"Last digit of factorial of $n is $result\\n\");\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "Enter the number : Last digit of factorial of  is 1\nok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nprint(\"Enter the number: \");\nmy $n = <STDIN>;\nchomp($n);\nmy $result = last_Digit_Factorial($n);\nprint(\"Last digit in factorial of $n is: $result\\n\");\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "Enter the number: Last digit in factorial of  is: 1\nok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i=1;$i<=$n;$i++) {\n        $fact = $fact * $i;\n    }\n    my $last_digit = $fact % 10;\n    return $last_digit;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    my $last_digit = $fact % 10;\n    return $last_digit;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = ($fact * $i) % 10;\n    }\n    return $fact;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact *= $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nprint(\"Enter the number : \");\nmy $n = <STDIN>;\nchomp($n);\nmy $result = last_Digit_Factorial($n);\nprint(\"Last digit in factorial of $n is : $result\\n\");\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "Enter the number : Last digit in factorial of  is : 1\nok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++){\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    my $last_digit = $fact % 10;\n    return $last_digit;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact *= $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact = ($fact * $i) % 10;\n    }\n    return $fact;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123859,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpym2vjenx.pl line 10.\nBEGIN failed--compilation aborted at /tmp/tmpym2vjenx.pl line 10.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++){\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nprint(\"Enter a number: \");\nmy $n = <STDIN>;\nprint(\"Last digit in factorial of $n is: \", last_Digit_Factorial($n));\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123859,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp5ihx7_dm.pl line 13.\nBEGIN failed--compilation aborted at /tmp/tmp5ihx7_dm.pl line 13.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact *= $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    my $last_digit = $fact % 10;\n    return $last_digit;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    print \"Factorial of $n is $fact\\n\";\n    my $last_digit = $fact % 10;\n    print \"Last digit in factorial of $n is $last_digit\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123859,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpg_l4je9x.pl line 12.\nBEGIN failed--compilation aborted at /tmp/tmpg_l4je9x.pl line 12.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact *= $i;\n    }\n    return $fact % 10;\n}\nprint(last_Digit_Factorial(5));\nprint(\"\\n\");\nprint(last_Digit_Factorial(12));\nprint(\"\\n\");\nprint(last_Digit_Factorial(20));\nprint(\"\\n\");\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123859,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpii3jo_xh.pl line 16.\nBEGIN failed--compilation aborted at /tmp/tmpii3jo_xh.pl line 16.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nprint(\"Enter the number: \");\nmy $n = <STDIN>;\nprint(\"Last digit in factorial of $n is: \", last_Digit_Factorial($n));\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123859,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpuwzizl64.pl line 13.\nBEGIN failed--compilation aborted at /tmp/tmpuwzizl64.pl line 13.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = ($fact * $i) % 10;\n    }\n    return $fact;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    print \"Factorial of $n is $fact\\n\";\n    my $last_digit = $fact % 10;\n    print \"Last digit of factorial of $n is $last_digit\\n\";\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123859,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpk303l_kc.pl line 12.\nBEGIN failed--compilation aborted at /tmp/tmpk303l_kc.pl line 12.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact = ($fact * $i) % 10;\n    }\n    return $fact;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123859,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpym2vjenx.pl line 10.\nBEGIN failed--compilation aborted at /tmp/tmpym2vjenx.pl line 10.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    my $last_digit = $fact % 10;\n    return $last_digit;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact = ($fact * $i) % 10;\n    }\n    return $fact;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123859,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpym2vjenx.pl line 10.\nBEGIN failed--compilation aborted at /tmp/tmpym2vjenx.pl line 10.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    my $last_digit = $fact % 10;\n    return $last_digit;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    my $last_digit = $fact % 10;\n    return $last_digit;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123859,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpl7o04w57.pl line 11.\nBEGIN failed--compilation aborted at /tmp/tmpl7o04w57.pl line 11.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = ($fact * $i) % 10;\n    }\n    return $fact;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact = ($fact * $i) % 10;\n    }\n    return $fact;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123859,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpym2vjenx.pl line 10.\nBEGIN failed--compilation aborted at /tmp/tmpym2vjenx.pl line 10.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    my $last_digit = $fact % 10;\n    return $last_digit;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    my $last_digit = $fact % 10;\n    return $last_digit;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact *= $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact *= $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    my $last_digit = $fact % 10;\n    return $last_digit;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i=1; $i<=$n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123859,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp4v1ytpfm.pl line 10.\nBEGIN failed--compilation aborted at /tmp/tmp4v1ytpfm.pl line 10.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i=1;$i<=$n;$i++) {\n        $fact = $fact * $i;\n    }\n    $fact = $fact % 10;\n    return $fact;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123859,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpuc5tt7n3.pl line 11.\nBEGIN failed--compilation aborted at /tmp/tmpuc5tt7n3.pl line 11.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact *= $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact *= $i;\n    }\n    return $fact % 10;\n}\nprint(\"Enter the number to find the last digit in factorial of a given number : \");\n$n = <STDIN>;\nchomp($n);\n$res = last_Digit_Factorial($n);\nprint(\"The last digit in factorial of a given number : $res\\n\");\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123859,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpvjcvfqb_.pl line 15.\nBEGIN failed--compilation aborted at /tmp/tmpvjcvfqb_.pl line 15.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    my $last_digit = $fact % 10;\n    return $last_digit;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = $n; $i > 0; $i--) {\n        $fact = $fact * $i;\n    }\n    my $last_digit = $fact % 10;\n    return $last_digit;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123859,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpls3u1ba3.pl line 11.\nBEGIN failed--compilation aborted at /tmp/tmpls3u1ba3.pl line 11.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nprint(\"Enter the number : \");\n$n = <STDIN>;\nchomp($n);\n$result = last_Digit_Factorial($n);\nprint(\"Last digit in factorial of $n is $result\\n\");\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123859,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpzo2hrgf3.pl line 15.\nBEGIN failed--compilation aborted at /tmp/tmpzo2hrgf3.pl line 15.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    my $last_digit = $fact % 10;\n    return $last_digit;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    my $last_digit = $fact % 10;\n    return $last_digit;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact *= $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = ($fact * $i) % 10;\n    }\n    return $fact;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i=1;$i<=$n;$i++) {\n        $fact = $fact * $i;\n    }\n    my $last_digit = $fact % 10;\n    return $last_digit;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    my $last_digit = $fact % 10;\n    return $last_digit;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact *= $i;\n    }\n    return $fact % 10;\n}\nprint(\"Enter the number : \");\nmy $n = <STDIN>;\nprint(\"Last digit in factorial of $n is : \",last_Digit_Factorial($n));\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123859,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp6wg5t6rr.pl line 13.\nBEGIN failed--compilation aborted at /tmp/tmp6wg5t6rr.pl line 13.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nprint \"Enter the number: \";\nmy $num = <STDIN>;\nchomp($num);\nmy $result = last_Digit_Factorial($num);\nprint \"The last digit of factorial of $num is $result\\n\";\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123859,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp9i1_awpe.pl line 15.\nBEGIN failed--compilation aborted at /tmp/tmp9i1_awpe.pl line 15.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    my $last_digit = $fact % 10;\n    return $last_digit;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = ($fact * $i) % 10;\n    }\n    return $fact;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!ok!",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact = ($fact * $i) % 10;\n    }\n    return $fact;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123859,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpym2vjenx.pl line 10.\nBEGIN failed--compilation aborted at /tmp/tmpym2vjenx.pl line 10.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact *= $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact *= $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123859,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpt0plyi_2.pl line 10.\nBEGIN failed--compilation aborted at /tmp/tmpt0plyi_2.pl line 10.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i=1;$i<=$n;$i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123859,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp_jv_3ytr.pl line 10.\nBEGIN failed--compilation aborted at /tmp/tmp_jv_3ytr.pl line 10.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact *= $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    my $last_digit = $fact % 10;\n    return $last_digit;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    my $last_digit = $fact % 10;\n    return $last_digit;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123859,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpl7o04w57.pl line 11.\nBEGIN failed--compilation aborted at /tmp/tmpl7o04w57.pl line 11.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    my $last_digit = $fact % 10;\n    return $last_digit;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123859,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpl7o04w57.pl line 11.\nBEGIN failed--compilation aborted at /tmp/tmpl7o04w57.pl line 11.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact *= $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++){\n        $fact = ($fact * $i) % 10;\n    }\n    return $fact;\n}\nprint(\"Enter the number : \");\nmy $n = <STDIN>;\nprint(\"Last digit in factorial of $n is : \", last_Digit_Factorial($n));\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123859,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp803g8_oc.pl line 13.\nBEGIN failed--compilation aborted at /tmp/tmp803g8_oc.pl line 13.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    my $last_digit = $fact % 10;\n    return $last_digit;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    my $last_digit = $fact % 10;\n    return $last_digit;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact *= $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    my $last_digit = $fact % 10;\n    return $last_digit;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123859,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpl7o04w57.pl line 11.\nBEGIN failed--compilation aborted at /tmp/tmpl7o04w57.pl line 11.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $factorial = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $factorial = ($factorial * $i) % 10;\n    }\n    return $factorial;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123859,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpi3mc2d__.pl line 10.\nBEGIN failed--compilation aborted at /tmp/tmpi3mc2d__.pl line 10.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    my $last_digit = $fact % 10;\n    return $last_digit;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123859,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpl7o04w57.pl line 11.\nBEGIN failed--compilation aborted at /tmp/tmpl7o04w57.pl line 11.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact *= $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123859,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpt0plyi_2.pl line 10.\nBEGIN failed--compilation aborted at /tmp/tmpt0plyi_2.pl line 10.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i=1;$i<=$n;$i++) {\n        $fact = ($fact * $i) % 10;\n    }\n    return $fact;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123859,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpvh0bov17.pl line 10.\nBEGIN failed--compilation aborted at /tmp/tmpvh0bov17.pl line 10.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact *= $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nprint(\"Enter the number : \");\n$n = <STDIN>;\nchomp($n);\n$res = last_Digit_Factorial($n);\nprint(\"Last digit in factorial of $n is $res\\n\");\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123859,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp1_q0qyxg.pl line 15.\nBEGIN failed--compilation aborted at /tmp/tmp1_q0qyxg.pl line 15.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nprint(\"Enter the number : \");\nmy $n = <STDIN>;\nchomp($n);\nmy $result = last_Digit_Factorial($n);\nprint(\"Last digit of factorial of $n is : $result\\n\");\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123859,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp71nz6mwz.pl line 15.\nBEGIN failed--compilation aborted at /tmp/tmp71nz6mwz.pl line 15.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    my $last_digit = $fact % 10;\n    return $last_digit;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123859,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpl7o04w57.pl line 11.\nBEGIN failed--compilation aborted at /tmp/tmpl7o04w57.pl line 11.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my @factorial = (1);\n    for (my $i = 1; $i <= $n; $i++) {\n        $factorial[$i] = $i * $factorial[$i-1];\n    }\n    return $factorial[$n] % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123859,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpy6_g63ag.pl line 10.\nBEGIN failed--compilation aborted at /tmp/tmpy6_g63ag.pl line 10.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact *= $i;\n    }\n    return $fact % 10;\n}\nprint(\"Enter a number: \");\nmy $num = <STDIN>;\nchomp($num);\nprint(\"Last digit in factorial of $num is \", last_Digit_Factorial($num), \"\\n\");\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123859,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp22nss7zr.pl line 14.\nBEGIN failed--compilation aborted at /tmp/tmp22nss7zr.pl line 14.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nprint(\"Enter the number : \");\nmy $n = <STDIN>;\nprint(\"Last digit in factorial of $n is : \", last_Digit_Factorial($n));\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123859,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpalr7_oga.pl line 13.\nBEGIN failed--compilation aborted at /tmp/tmpalr7_oga.pl line 13.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    my $last_digit = $fact % 10;\n    return $last_digit;\n}\nprint \"Enter a number: \";\nmy $n = <STDIN>;\nchomp($n);\nmy $last_digit = last_Digit_Factorial($n);\nprint \"Last digit in factorial of $n is $last_digit\\n\";\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123859,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpuof8iyes.pl line 16.\nBEGIN failed--compilation aborted at /tmp/tmpuof8iyes.pl line 16.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact *= $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    my $last_digit = $fact % 10;\n    return $last_digit;\n}\nprint(\"Enter the number to find the last digit in factorial of a given number: \");\nmy $n = <STDIN>;\nchomp($n);\nmy $result = last_Digit_Factorial($n);\nprint(\"The last digit in factorial of a given number: $result\\n\");\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123859,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp3p17o109.pl line 16.\nBEGIN failed--compilation aborted at /tmp/tmp3p17o109.pl line 16.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nprint(\"Enter a number : \");\nmy $n = <STDIN>;\nchomp($n);\nmy $result = last_Digit_Factorial($n);\nprint(\"Last digit in factorial of $n is : $result\\n\");\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123859,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp4jguel0n.pl line 15.\nBEGIN failed--compilation aborted at /tmp/tmp4jguel0n.pl line 15.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = ($fact * $i) % 10;\n    }\n    return $fact;\n}\nprint(\"Enter the number : \");\n$n = <STDIN>;\nprint(\"Last digit in factorial of $n is : \", last_Digit_Factorial($n));\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123859,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmp7ho80hyx.pl line 13.\nBEGIN failed--compilation aborted at /tmp/tmp7ho80hyx.pl line 13.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for(my $i = 1; $i <= $n; $i++) {\n        $fact = ($fact * $i) % 10;\n    }\n    return $fact;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1666123859,
      "stdout": "",
      "stderr": "Can't locate Test/Deep.pm in @INC (you may need to install the Test::Deep module) (@INC contains: /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/perl5 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/site_perl/5.34.1 /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1/x86_64-linux-thread-multi /home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/perl-5.34.1-2zl6xulqjttcl6s22da2nkbwez43nwnr/lib/5.34.1) at /tmp/tmpym2vjenx.pl line 10.\nBEGIN failed--compilation aborted at /tmp/tmpym2vjenx.pl line 10.\n",
      "exit_code": 2,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    my $last_digit = $fact % 10;\n    return $last_digit;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a plthon function to find the last digit in factorial of a given number.\nsub last_Digit_Factorial {\n    my($n) = @_;\n    my $fact = 1;\n    for (my $i = 1; $i <= $n; $i++) {\n        $fact = $fact * $i;\n    }\n    return $fact % 10;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&last_Digit_Factorial;\n        if(eq_deeply($candidate->(4),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(21),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(30),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
      "timestamp": 1665509706,
      "stdout": "ok!ok!",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
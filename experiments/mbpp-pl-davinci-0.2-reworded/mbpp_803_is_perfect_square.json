{
  "name": "mbpp_803_is_perfect_square",
  "language": "pl",
  "prompt": "# Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nsub is_perfect_square {\n    my($n) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_803_is_perfect_square.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&is_perfect_square;\n        if(eq_deeply($candidate->(10),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(36),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(14),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(196),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(125),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(15625),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my $x = int(sqrt($n));\n    return ($x * $x == $n);\n}",
    "    my $x = int(sqrt($n));\n    return ($x * $x == $n);\n}",
    "    my $x = sqrt($n);\n    return ($x == int($x));\n}",
    "    my $x = int(sqrt($n));\n    return $x * $x == $n;\n}",
    "    my $x = int(sqrt($n));\n    return ($x * $x == $n);\n}",
    "    my $x = int(sqrt($n));\n    return $x * $x == $n;\n}",
    "    my $x = int(sqrt($n));\n    return $x * $x == $n;\n}",
    "    my $x = int(sqrt($n));\n    return $x * $x == $n;\n}",
    "    my $x = sqrt($n);\n    return $x == int($x);\n}",
    "    my $x = int(sqrt($n));\n    return $x * $x == $n;\n}",
    "    my $x = int(sqrt($n));\n    return $x * $x == $n;\n}",
    "    my $x = int(sqrt($n));\n    return $x * $x == $n;\n}",
    "    my $x = int(sqrt($n));\n    return ($x * $x == $n);\n}",
    "    my $x = int(sqrt($n));\n    return $x * $x == $n;\n}",
    "    my $sqrt = sqrt($n);\n    return ($sqrt * $sqrt == $n);\n}",
    "    my $x = sqrt($n);\n    return ($x * $x == $n);\n}",
    "    my $x = int(sqrt($n));\n    return $x * $x == $n;\n}",
    "    my $x = int(sqrt($n));\n    return $x * $x == $n;\n}",
    "    if ($n < 0) {\n        return 0;\n    }\n    my $x = int(sqrt($n));\n    return ($x * $x == $n);\n}",
    "    my $x = int(sqrt($n));\n    return ($x * $x == $n);\n}"
  ]
}
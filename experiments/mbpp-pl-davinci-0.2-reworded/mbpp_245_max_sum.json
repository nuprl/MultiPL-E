{
  "name": "mbpp_245_max_sum",
  "language": "pl",
  "prompt": "# Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nsub max_sum {\n    my($arr) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_245_max_sum.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&max_sum;\n        if(eq_deeply($candidate->([1, 15, 51, 45, 33, 100, 12, 18, 9]),194)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([80, 60, 30, 40, 20, 10]),210)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 3, 14, 16, 21, 23, 29, 30]),138)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my @inc = @$arr;\n    my @dec = @$arr;\n    for my $i (1..$#$arr) {\n        for my $j (0..$i-1) {\n            if ($arr->[$j] < $arr->[$i]) {\n                $inc[$i] = max($inc[$i], $inc[$j] + $arr->[$i]);\n            }\n        }\n    }\n    for my $i (reverse 1..$#$arr) {\n        for my $j (reverse 0..$i-1) {\n            if ($arr->[$j] < $arr->[$i]) {\n                $dec[$i] = max($dec[$i], $dec[$j] + $arr->[$i]);\n            }\n        }\n    }\n    my $max = 0;\n    for my $i (0..$#$arr) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar @$arr;\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $arr->[0];\n    $dec[$n-1] = $arr->[$n-1];\n    for my $i (1..$n-1) {\n        $inc[$i] = max($inc[$i-1], $arr->[$i]);\n    }\n    for my $i ($n-2..0) {\n        $dec[$i] = max($dec[$i+1], $arr->[$i]);\n    }\n    my $max = 0;\n    for my $i (0..$n-1) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;",
    "    my $max = 0;\n    my $len = scalar @$arr;\n    for (my $i = 0; $i < $len; $i++) {\n        my $sum = 0;\n        for (my $j = $i; $j < $len; $j++) {\n            $sum += $arr->[$j];\n            $max = $sum if $sum > $max;\n        }\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    my $inc = [0];\n    my $dec = [0];\n    for (my $i = 1; $i < $n; $i++) {\n        for (my $j = 0; $j < $i; $j++) {\n            if ($arr->[$i] > $arr->[$j] && $inc->[$i] < $inc->[$j]) {\n                $inc->[$i] = $inc->[$j];\n            }\n        }\n        $inc->[$i] += $arr->[$i];\n    }\n    for (my $i = $n - 2; $i >= 0; $i--) {\n        for (my $j = $n - 1; $j > $i; $j--) {\n            if ($arr->[$i] > $arr->[$j] && $dec->[$i] < $dec->[$j]) {\n                $dec->[$i] = $dec->[$j];\n            }\n        }\n        $dec->[$i] += $arr->[$i];\n    }\n    my $max = 0;\n    for (my $i = 0; $i < $n; $i++) {\n        if ($max < $inc->[$i] + $dec->[$i] - $arr->[$i]) {\n            $max = $inc->[$i] + $dec->[$i] - $arr->[$i];\n        }\n    }\n    return $max;\n}",
    "    my $n = scalar @$arr;\n    my $inc = [ map { $_ } (0..$n-1) ];\n    my $dec = [ map { $_ } (0..$n-1) ];\n    for (my $i = 1; $i < $n; $i++) {\n        for (my $j = 0; $j < $i; $j++) {\n            if ($arr->[$i] > $arr->[$j] && $inc->[$i] < $inc->[$j] + $arr->[$i]) {\n                $inc->[$i] = $inc->[$j] + $arr->[$i];\n            }\n        }\n    }\n    for (my $i = $n-2; $i >= 0; $i--) {\n        for (my $j = $n-1; $j > $i; $j--) {\n            if ($arr->[$i] > $arr->[$j] && $dec->[$i] < $dec->[$j] + $arr->[$i]) {\n                $dec->[$i] = $dec->[$j] + $arr->[$i];\n            }\n        }\n    }\n    my $max = 0;\n    for (my $i = 0; $i < $n; $i++) {\n        $max = $inc->[$i] + $dec->[$i] - $arr->[$i] if $max < $inc->[$i] + $dec->[$i] - $arr->[$i];\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $n = scalar @$arr;\n    for my $i (0..$n-1) {\n        my $sum = 0;\n        for my $j ($i..$n-1) {\n            $sum += $arr->[$j];\n            $max = $sum if $sum > $max;\n        }\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;",
    "    my $n = scalar(@$arr);\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $arr->[0];\n    $dec[$n-1] = $arr->[$n-1];\n    for (my $i = 1; $i < $n; $i++) {\n        $inc[$i] = $arr->[$i];\n        for (my $j = 0; $j < $i; $j++) {\n            if ($arr->[$j] < $arr->[$i]) {\n                $inc[$i] = max($inc[$i], $inc[$j] + $arr->[$i]);\n            }\n        }\n    }\n    for (my $i = $n-2; $i >= 0; $i--) {\n        $dec[$i] = $arr->[$i];\n        for (my $j = $n-1; $j > $i; $j--) {\n            if ($arr->[$j] < $arr->[$i]) {\n                $dec[$i] = max($dec[$i], $dec[$j] + $arr->[$i]);\n            }\n        }\n    }\n    my $max = 0;\n    for (my $i = 0; $i < $n; $i++) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    my $max_sum = 0;\n    for my $i (0..$n-1) {\n        my $sum = 0;\n        for my $j ($i..$n-1) {\n            $sum += $arr->[$j];\n            $max_sum = $sum if $sum > $max_sum;\n        }\n    }\n    return $max_sum;\n}",
    "    my $n = scalar @$arr;\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $arr->[0];\n    $dec[$n-1] = $arr->[$n-1];\n    for (my $i = 1; $i < $n; $i++) {\n        $inc[$i] = $arr->[$i];\n        for (my $j = 0; $j < $i; $j++) {\n            if ($arr->[$i] > $arr->[$j]) {\n                $inc[$i] = max($inc[$i], $inc[$j] + $arr->[$i]);\n            }\n        }\n    }\n    for (my $i = $n-2; $i >= 0; $i--) {\n        $dec[$i] = $arr->[$i];\n        for (my $j = $n-1; $j > $i; $j--) {\n            if ($arr->[$i] > $arr->[$j]) {\n                $dec[$i] = max($dec[$i], $dec[$j] + $arr->[$i]);\n            }\n        }\n    }\n    my $max = 0;\n    for (my $i = 0; $i < $n; $i++) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $arr->[0];\n    $dec[$n-1] = $arr->[$n-1];\n    for my $i (1..$n-1) {\n        $inc[$i] = max($inc[$i-1], $arr->[$i]);\n    }\n    for my $i ($n-2..0) {\n        $dec[$i] = max($dec[$i+1], $arr->[$i]);\n    }\n    my $max = 0;\n    for my $i (0..$n-1) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my @inc = (0) x scalar @$arr;\n    my @dec = (0) x scalar @$arr;\n    $inc[0] = $arr->[0];\n    $dec[-1] = $arr->[-1];\n    for my $i (1..$#$arr) {\n        $inc[$i] = max($inc[$i-1] + $arr->[$i], $arr->[$i]);\n    }\n    for my $i (reverse 1..$#$arr) {\n        $dec[$i-1] = max($dec[$i] + $arr->[$i-1], $arr->[$i-1]);\n    }\n    my $max = 0;\n    for my $i (0..$#$arr) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    my $inc = [@$arr];\n    my $dec = [@$arr];\n    for (my $i = 1; $i < $n; $i++) {\n        for (my $j = 0; $j < $i; $j++) {\n            if ($arr->[$i] > $arr->[$j] && $inc->[$i] < $inc->[$j] + $arr->[$i]) {\n                $inc->[$i] = $inc->[$j] + $arr->[$i];\n            }\n        }\n    }\n    for (my $i = $n - 2; $i >= 0; $i--) {\n        for (my $j = $n - 1; $j > $i; $j--) {\n            if ($arr->[$i] > $arr->[$j] && $dec->[$i] < $dec->[$j] + $arr->[$i]) {\n                $dec->[$i] = $dec->[$j] + $arr->[$i];\n            }\n        }\n    }\n    my $max = $inc->[0] + $dec->[0] - $arr->[0];\n    for (my $i = 1; $i < $n; $i++) {\n        if ($max < $inc->[$i] + $dec->[$i] - $arr->[$i]) {\n            $max = $inc->[$i] + $dec->[$i] - $arr->[$i];\n        }\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $arr->[0];\n    $dec[$n-1] = $arr->[$n-1];\n    for my $i (1..$n-1) {\n        $inc[$i] = max($inc[$i-1] + $arr->[$i], $arr->[$i]);\n    }\n    for my $i ($n-2..0) {\n        $dec[$i] = max($dec[$i+1] + $arr->[$i], $arr->[$i]);\n    }\n    my $max = $inc[0] + $dec[0] - $arr->[0];\n    for my $i (1..$n-1) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $arr->[0];\n    for (my $i = 1; $i < $n; $i++) {\n        $inc[$i] = $arr->[$i];\n        for (my $j = 0; $j < $i; $j++) {\n            if ($arr->[$i] > $arr->[$j]) {\n                $inc[$i] = max($inc[$i], $inc[$j] + $arr->[$i]);\n            }\n        }\n    }\n    $dec[$n - 1] = $arr->[$n - 1];\n    for (my $i = $n - 2; $i >= 0; $i--) {\n        $dec[$i] = $arr->[$i];\n        for (my $j = $n - 1; $j > $i; $j--) {\n            if ($arr->[$i] > $arr->[$j]) {\n                $dec[$i] = max($dec[$i], $dec[$j] + $arr->[$i]);\n            }\n        }\n    }\n    my $max = $inc[0] + $dec[0] - $arr->[0];\n    for (my $i = 1; $i < $n; $i++) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar @$arr;\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;",
    "    my $n = scalar(@$arr);\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $arr->[0];\n    $dec[$n-1] = $arr->[$n-1];\n    for(my $i = 1; $i < $n; $i++) {\n        $inc[$i] = max($inc[$i-1]+$arr->[$i], $arr->[$i]);\n    }\n    for(my $i = $n-2; $i >= 0; $i--) {\n        $dec[$i] = max($dec[$i+1]+$arr->[$i], $arr->[$i]);\n    }\n    my $max = 0;\n    for(my $i = 0; $i < $n; $i++) {\n        $max = max($max, $inc[$i]+$dec[$i]-$arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;",
    "    my $n = scalar(@$arr);\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $arr->[0];\n    $dec[$n - 1] = $arr->[$n - 1];\n    for my $i (1 .. $n - 1) {\n        $inc[$i] = max($inc[$i - 1] + $arr->[$i], $arr->[$i]);\n    }\n    for my $i (reverse 0 .. $n - 2) {\n        $dec[$i] = max($dec[$i + 1] + $arr->[$i], $arr->[$i]);\n    }\n    my $max = $inc[0] + $dec[0] - $arr->[0];\n    for my $i (1 .. $n - 1) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar @$arr;\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $dec[$n-1] = $arr->[0];\n    for my $i (1..$n-1) {\n        $inc[$i] = $arr->[$i] + max($inc[$i-1], 0);\n        $dec[$n-$i-1] = $arr->[$n-$i-1] + max($dec[$n-$i], 0);\n    }\n    my $max = 0;\n    for my $i (0..$n-1) {\n        $max = max($max, $inc[$i] + $dec[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    my @inc = @$arr;\n    my @dec = @$arr;\n    for my $i (1..$n-1) {\n        for my $j (0..$i-1) {\n            if ($arr->[$i] > $arr->[$j]) {\n                $inc[$i] = max($inc[$i], $inc[$j] + $arr->[$i]);\n            }\n        }\n    }\n    for my $i (reverse(0..$n-2)) {\n        for my $j (reverse($i+1..$n-1)) {\n            if ($arr->[$i] > $arr->[$j]) {\n                $dec[$i] = max($dec[$i], $dec[$j] + $arr->[$i]);\n            }\n        }\n    }\n    my $max = 0;\n    for my $i (0..$n-1) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    my $inc = [0];\n    my $dec = [0];\n    my $max = 0;\n    for my $i (0..$n-1) {\n        $inc->[$i] = $arr->[$i];\n        $dec->[$i] = $arr->[$i];\n    }\n    for my $i (1..$n-1) {\n        for my $j (0..$i-1) {\n            if ($arr->[$i] > $arr->[$j] && $inc->[$i] < $inc->[$j] + $arr->[$i]) {\n                $inc->[$i] = $inc->[$j] + $arr->[$i];\n            }\n        }\n    }\n    for my $i ($n-2..0) {\n        for my $j ($n-1..$i+1) {\n            if ($arr->[$i] > $arr->[$j] && $dec->[$i] < $dec->[$j] + $arr->[$i]) {\n                $dec->[$i] = $dec->[$j] + $arr->[$i];\n            }\n        }\n    }\n    for my $i (0..$n-1) {\n        if ($max < $inc->[$i] + $dec->[$i] - $arr->[$i]) {\n            $max = $inc->[$i] + $dec->[$i] - $arr->[$i];\n        }\n    }\n    return $max;\n}",
    "    my $len = scalar @$arr;\n    my $max_sum = 0;\n    my $sum = 0;\n    for(my $i = 0; $i < $len; $i++) {\n        $sum += $arr->[$i];\n        if($sum < 0) {\n            $sum = 0;\n        }\n        if($sum > $max_sum) {\n            $max_sum = $sum;\n        }\n    }\n    return $max_sum;\n}",
    "    my $n = scalar(@$arr);\n    my $inc = [ (0) x $n ];\n    my $dec = [ (0) x $n ];\n    $inc->[0] = $arr->[0];\n    $dec->[$n-1] = $arr->[$n-1];\n    for my $i (1 .. $n-1) {\n        $inc->[$i] = max($inc->[$i-1], $arr->[$i]);\n    }\n    for my $i (reverse 0 .. $n-2) {\n        $dec->[$i] = max($dec->[$i+1], $arr->[$i]);\n    }\n    my $max = 0;\n    for my $i (0 .. $n-1) {\n        $max = max($max, $inc->[$i] + $dec->[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    my $inc = [0];\n    my $dec = [0];\n    for my $i (1 .. $n - 1) {\n        for my $j (0 .. $i - 1) {\n            if ($arr->[$i] > $arr->[$j]) {\n                $inc->[$i] = max($inc->[$i], $inc->[$j] + $arr->[$i]);\n            }\n        }\n    }\n    for my $i (reverse 1 .. $n - 1) {\n        for my $j (reverse 0 .. $i - 1) {\n            if ($arr->[$i] < $arr->[$j]) {\n                $dec->[$i] = max($dec->[$i], $dec->[$j] + $arr->[$i]);\n            }\n        }\n    }\n    my $max = 0;\n    for my $i (0 .. $n - 1) {\n        $max = max($max, $inc->[$i] + $dec->[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $arr->[0];\n    $dec[$n-1] = $arr->[$n-1];\n    for(my $i=1; $i<$n; $i++) {\n        $inc[$i] = $arr->[$i];\n        for(my $j=0; $j<$i; $j++) {\n            if($arr->[$i] > $arr->[$j]) {\n                $inc[$i] = max($inc[$i], $inc[$j] + $arr->[$i]);\n            }\n        }\n    }\n    for(my $i=$n-2; $i>=0; $i--) {\n        $dec[$i] = $arr->[$i];\n        for(my $j=$n-1; $j>$i; $j--) {\n            if($arr->[$i] > $arr->[$j]) {\n                $dec[$i] = max($dec[$i], $dec[$j] + $arr->[$i]);\n            }\n        }\n    }\n    my $max = 0;\n    for(my $i=0; $i<$n; $i++) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my @inc = (0) x scalar(@$arr);\n    my @dec = (0) x scalar(@$arr);",
    "    my $len = scalar @$arr;\n    my $inc = [0..$len-1];\n    my $dec = [0..$len-1];\n    for my $i (1..$len-1) {\n        for my $j (0..$i-1) {\n            if ($arr->[$i] > $arr->[$j]) {\n                $inc->[$i] = max($inc->[$i], $inc->[$j] + $arr->[$i]);\n            }\n        }\n    }\n    for my $i ($len-2..0) {\n        for my $j ($len-1..$i+1) {\n            if ($arr->[$i] > $arr->[$j]) {\n                $dec->[$i] = max($dec->[$i], $dec->[$j] + $arr->[$i]);\n            }\n        }\n    }\n    my $max = 0;\n    for my $i (0..$len-1) {\n        $max = max($max, $inc->[$i] + $dec->[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $arr->[0];\n    $dec[$n-1] = $arr->[$n-1];\n    for (my $i = 1; $i < $n; $i++) {\n        $inc[$i] = $arr->[$i];\n        for (my $j = 0; $j < $i; $j++) {\n            if ($arr->[$j] < $arr->[$i]) {\n                $inc[$i] = max($inc[$i], $inc[$j] + $arr->[$i]);\n            }\n        }\n    }\n    for (my $i = $n-2; $i >= 0; $i--) {\n        $dec[$i] = $arr->[$i];\n        for (my $j = $n-1; $j > $i; $j--) {\n            if ($arr->[$j] < $arr->[$i]) {\n                $dec[$i] = max($dec[$i], $dec[$j] + $arr->[$i]);\n            }\n        }\n    }\n    my $max = 0;\n    for (my $i = 0; $i < $n; $i++) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $arr->[0];\n    for my $i (1..$n-1) {\n        $inc[$i] = $arr->[$i];\n        for my $j (0..$i-1) {\n            if ($arr->[$i] > $arr->[$j]) {\n                $inc[$i] = max($inc[$i], $inc[$j] + $arr->[$i]);\n            }\n        }\n    }\n    $dec[$n-1] = $arr->[$n-1];\n    for my $i (reverse 0..$n-2) {\n        $dec[$i] = $arr->[$i];\n        for my $j (reverse $i+1..$n-1) {\n            if ($arr->[$i] > $arr->[$j]) {\n                $dec[$i] = max($dec[$i], $dec[$j] + $arr->[$i]);\n            }\n        }\n    }\n    my $max = 0;\n    for my $i (0..$n-1) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $dec[$n-1] = $arr->[0];\n    for my $i (1 .. $n-1) {\n        $inc[$i] = max($inc[$i-1], $arr->[$i]);\n        $dec[$n-$i-1] = max($dec[$n-$i], $arr->[$n-$i-1]);\n    }\n    my $max = $inc[0] + $dec[0] - $arr->[0];\n    for my $i (1 .. $n-1) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $n = scalar @$arr;\n    for my $i (0 .. $n-1) {\n        my $sum = 0;\n        my $j = $i;\n        while ($j < $n) {\n            $sum += $arr->[$j];\n            $j++;\n        }\n        $j = $i-1;\n        while ($j >= 0) {\n            $sum += $arr->[$j];\n            $j--;\n        }\n        $max = $sum if $sum > $max;\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;",
    "    my $n = scalar(@$arr);\n    my $max_sum = 0;\n    my $max_sum_left = 0;\n    my $max_sum_right = 0;\n    my $max_sum_left_arr = [];\n    my $max_sum_right_arr = [];\n    for (my $i = 0; $i < $n; $i++) {\n        $max_sum_left_arr->[$i] = $arr->[$i];\n        $max_sum_right_arr->[$i] = $arr->[$i];\n    }\n    for (my $i = 1; $i < $n; $i++) {\n        for (my $j = 0; $j < $i; $j++) {\n            if ($arr->[$i] > $arr->[$j] && $max_sum_left_arr->[$i] < $max_sum_left_arr->[$j] + $arr->[$i]) {\n                $max_sum_left_arr->[$i] = $max_sum_left_arr->[$j] + $arr->[$i];\n            }\n        }\n    }\n    for (my $i = $n - 2; $i >= 0; $i--) {\n        for (my $j = $n - 1; $j > $i; $j--) {\n            if ($arr->[$i] > $arr->[$j] && $max_sum_right_arr->[$i] < $max_sum_right_arr->[$j] + $arr->[$i]) {\n                $max_sum_right_arr->[$i] = $max_sum_right_arr->[$j] + $arr->[$i];\n            }\n        }\n    }\n    for (my $i = 0; $i < $n; $i++) {\n        if ($max_sum < $max_sum_left_arr->[$i] + $max_sum_right_arr->[$i] - $arr->[$i]) {\n            $max_sum = $max_sum_left_arr->[",
    "    my $n = scalar(@$arr);\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $arr->[0];\n    $dec[$n - 1] = $arr->[$n - 1];\n    for (my $i = 1; $i < $n; $i++) {\n        $inc[$i] = max($inc[$i - 1] + $arr->[$i], $arr->[$i]);\n    }\n    for (my $i = $n - 2; $i >= 0; $i--) {\n        $dec[$i] = max($dec[$i + 1] + $arr->[$i], $arr->[$i]);\n    }\n    my $max = $inc[0] + $dec[0] - $arr->[0];\n    for (my $i = 1; $i < $n; $i++) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar @$arr;\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;",
    "    my $max = 0;\n    my $n = scalar(@$arr);\n    my $inc = [0];\n    my $dec = [0];\n    for my $i (0..$n-1) {\n        $inc->[$i] = $arr->[$i];\n        $dec->[$i] = $arr->[$i];\n        for my $j (0..$i-1) {\n            if ($arr->[$j] < $arr->[$i]) {\n                $inc->[$i] = max($inc->[$i], $inc->[$j] + $arr->[$i]);\n            }\n            if ($arr->[$j] > $arr->[$i]) {\n                $dec->[$i] = max($dec->[$i], $dec->[$j] + $arr->[$i]);\n            }\n        }\n        $max = max($max, $inc->[$i] + $dec->[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar @$arr;\n    my $inc = [ map { $_ } (0..$n-1) ];\n    my $dec = [ map { $_ } (0..$n-1) ];\n    my $max = $arr->[0];\n    for my $i (1..$n-1) {\n        for my $j (0..$i-1) {\n            if ($arr->[$i] > $arr->[$j] && $inc->[$i] < $inc->[$j] + $arr->[$i]) {\n                $inc->[$i] = $inc->[$j] + $arr->[$i];\n            }\n        }\n        $max = $inc->[$i] if $max < $inc->[$i];\n    }\n    for my $i (reverse 0..$n-1) {\n        for my $j (reverse 0..$i-1) {\n            if ($arr->[$i] > $arr->[$j] && $dec->[$i] < $dec->[$j] + $arr->[$i]) {\n                $dec->[$i] = $dec->[$j] + $arr->[$i];\n            }\n        }\n        $max = $dec->[$i] if $max < $dec->[$i];\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $arr->[0];\n    $dec[$n-1] = $arr->[$n-1];\n    for (my $i = 1; $i < $n; $i++) {\n        $inc[$i] = max($inc[$i-1], $arr->[$i]);\n    }\n    for (my $i = $n-2; $i >= 0; $i--) {\n        $dec[$i] = max($dec[$i+1], $arr->[$i]);\n    }\n    my $max = 0;\n    for (my $i = 0; $i < $n; $i++) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar @$arr;\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $dec[$n-1] = $arr->[0];\n    for my $i (1..$n-1) {\n        $inc[$i] = max($arr->[$i], $inc[$i-1] + $arr->[$i]);\n        $dec[$n-$i-1] = max($arr->[$n-$i-1], $dec[$n-$i] + $arr->[$n-$i-1]);\n    }\n    my $max = $inc[0] + $dec[0] - $arr->[0];\n    for my $i (1..$n-1) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar @$arr;\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;",
    "    my $n = scalar @$arr;\n    my $inc = [0];\n    my $dec = [0];\n    for my $i (1..$n-1) {\n        for my $j (0..$i-1) {\n            if ($arr->[$i] > $arr->[$j] && $inc->[$i] < $inc->[$j]) {\n                $inc->[$i] = $inc->[$j];\n            }\n        }\n        $inc->[$i] += $arr->[$i];\n    }\n    for my $i ($n-2..0) {\n        for my $j ($n-1..$i+1) {\n            if ($arr->[$i] > $arr->[$j] && $dec->[$i] < $dec->[$j]) {\n                $dec->[$i] = $dec->[$j];\n            }\n        }\n        $dec->[$i] += $arr->[$i];\n    }\n    my $max = 0;\n    for my $i (0..$n-1) {\n        $max = $inc->[$i] + $dec->[$i] - $arr->[$i] if $max < $inc->[$i] + $dec->[$i] - $arr->[$i];\n    }\n    return $max;\n}",
    "    my $n = scalar @$arr;\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $arr->[0];\n    $dec[$n - 1] = $arr->[$n - 1];\n    for (my $i = 1; $i < $n; $i++) {\n        $inc[$i] = max($inc[$i - 1], $arr->[$i]);\n    }\n    for (my $i = $n - 2; $i >= 0; $i--) {\n        $dec[$i] = max($dec[$i + 1], $arr->[$i]);\n    }\n    my $max = 0;\n    for (my $i = 0; $i < $n; $i++) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my @inc = (0) x scalar @$arr;\n    my @dec = (0) x scalar @$arr;\n    $inc[0] = $arr->[0];\n    $dec[-1] = $arr->[-1];\n    for my $i (1..$#$arr) {\n        $inc[$i] = max($inc[$i-1] + $arr->[$i], $arr->[$i]);\n    }\n    for my $i (reverse 1..$#$arr) {\n        $dec[$i-1] = max($dec[$i] + $arr->[$i-1], $arr->[$i-1]);\n    }\n    my $max = 0;\n    for my $i (0..$#$arr) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar @$arr;\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $arr->[0];\n    $dec[$n-1] = $arr->[$n-1];\n    for(my $i = 1; $i < $n; $i++) {\n        $inc[$i] = max($inc[$i-1], $arr->[$i]);\n    }\n    for(my $i = $n-2; $i >= 0; $i--) {\n        $dec[$i] = max($dec[$i+1], $arr->[$i]);\n    }\n    my $max = 0;\n    for(my $i = 0; $i < $n; $i++) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar @$arr;\n    my $inc = [0];\n    my $dec = [0];\n    for my $i (0..$n-1) {\n        my $max = $arr->[$i];\n        for my $j (0..$i-1) {\n            if ($arr->[$j] < $arr->[$i]) {\n                $max = max($max, $inc->[$j] + $arr->[$i]);\n            }\n        }\n        $inc->[$i] = $max;\n    }\n    for my $i ($n-1..0) {\n        my $max = $arr->[$i];\n        for my $j ($n-1..$i+1) {\n            if ($arr->[$j] < $arr->[$i]) {\n                $max = max($max, $dec->[$j] + $arr->[$i]);\n            }\n        }\n        $dec->[$i] = $max;\n    }\n    my $max = 0;\n    for my $i (0..$n-1) {\n        $max = max($max, $inc->[$i] + $dec->[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar @$arr;\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $arr->[0];\n    $dec[$n - 1] = $arr->[$n - 1];\n    for my $i (1 .. $n - 1) {\n        $inc[$i] = max($inc[$i - 1], $arr->[$i]);\n        $dec[$n - 1 - $i] = max($dec[$n - $i], $arr->[$n - 1 - $i]);\n    }\n    my $max = 0;\n    for my $i (0 .. $n - 1) {\n        $max = max($max, $inc[$i] + $dec[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    my $inc = [ (0) x $n ];\n    my $dec = [ (0) x $n ];",
    "    my @inc = (0) x scalar(@$arr);\n    my @dec = (0) x scalar(@$arr);\n    $inc[0] = $dec[0] = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        $inc[$i] = max($inc[$i-1] + $arr->[$i], $arr->[$i]);\n        $dec[$i] = max($dec[$i-1] + $arr->[$i], $arr->[$i]);\n    }\n    my $max = $inc[0];\n    for my $i (1 .. $#$arr) {\n        $max = max($max, $inc[$i-1] + $dec[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $arr->[0];\n    $dec[$n - 1] = $arr->[$n - 1];\n    for (my $i = 1; $i < $n; $i++) {\n        $inc[$i] = $arr->[$i];\n        for (my $j = 0; $j < $i; $j++) {\n            if ($arr->[$j] < $arr->[$i]) {\n                $inc[$i] = max($inc[$i], $inc[$j] + $arr->[$i]);\n            }\n        }\n    }\n    for (my $i = $n - 2; $i >= 0; $i--) {\n        $dec[$i] = $arr->[$i];\n        for (my $j = $n - 1; $j > $i; $j--) {\n            if ($arr->[$j] < $arr->[$i]) {\n                $dec[$i] = max($dec[$i], $dec[$j] + $arr->[$i]);\n            }\n        }\n    }\n    my $max = $inc[0] + $dec[0] - $arr->[0];\n    for (my $i = 1; $i < $n; $i++) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $dec[$n-1] = $arr->[0];\n    for(my $i=1; $i<$n; $i++) {\n        $inc[$i] = $arr->[$i];\n        for(my $j=0; $j<$i; $j++) {\n            $inc[$i] = max($inc[$i], $inc[$j]+$arr->[$i]) if $arr->[$j] < $arr->[$i];\n        }\n    }\n    for(my $i=$n-2; $i>=0; $i--) {\n        $dec[$i] = $arr->[$i];\n        for(my $j=$n-1; $j>$i; $j--) {\n            $dec[$i] = max($dec[$i], $dec[$j]+$arr->[$i]) if $arr->[$j] < $arr->[$i];\n        }\n    }\n    my $max = 0;\n    for(my $i=0; $i<$n; $i++) {\n        $max = max($max, $inc[$i]+$dec[$i]-$arr->[$i]);\n    }\n    return $max;\n}",
    "    my $sum = 0;\n    my $max = 0;\n    for my $i (0..$#$arr) {\n        $sum += $arr->[$i];\n        if ($sum < 0) {\n            $sum = 0;\n        } else {\n            $max = $sum if $sum > $max;\n        }\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    my $inc = [0..$n-1];\n    my $dec = [0..$n-1];\n    for(my $i=1; $i<$n; $i++) {\n        for(my $j=0; $j<$i; $j++) {\n            if($arr->[$i] > $arr->[$j] && $inc->[$i] < $inc->[$j] + $arr->[$i]) {\n                $inc->[$i] = $inc->[$j] + $arr->[$i];\n            }\n        }\n    }\n    for(my $i=$n-2; $i>=0; $i--) {\n        for(my $j=$n-1; $j>$i; $j--) {\n            if($arr->[$i] > $arr->[$j] && $dec->[$i] < $dec->[$j] + $arr->[$i]) {\n                $dec->[$i] = $dec->[$j] + $arr->[$i];\n            }\n        }\n    }\n    my $max = 0;\n    for(my $i=0; $i<$n; $i++) {\n        $max = $inc->[$i] + $dec->[$i] - $arr->[$i] if $max < $inc->[$i] + $dec->[$i] - $arr->[$i];\n    }\n    return $max;\n}",
    "    my $n = @$arr;\n    my $inc = [@$arr];\n    my $dec = [@$arr];\n    my $max = $arr->[0];\n    for my $i (1..$n-1) {\n        for my $j (0..$i-1) {\n            if ($arr->[$i] > $arr->[$j] && $inc->[$i] < $inc->[$j] + $arr->[$i]) {\n                $inc->[$i] = $inc->[$j] + $arr->[$i];\n            }\n            if ($arr->[$i] < $arr->[$j] && $dec->[$i] < $dec->[$j] + $arr->[$i]) {\n                $dec->[$i] = $dec->[$j] + $arr->[$i];\n            }\n        }\n        $max = max($max, $inc->[$i], $dec->[$i]);\n    }\n    return $max;\n}",
    "    my @inc = @$arr;\n    my @dec = @$arr;\n    for my $i (1..$#$arr) {\n        for my $j (0..$i-1) {\n            if ($arr->[$i] > $arr->[$j] && $inc[$i] < $inc[$j] + $arr->[$i]) {\n                $inc[$i] = $inc[$j] + $arr->[$i];\n            }\n        }\n    }\n    for my $i (reverse 0..$#$arr-1) {\n        for my $j (reverse 0..$i+1) {\n            if ($arr->[$i] > $arr->[$j] && $dec[$i] < $dec[$j] + $arr->[$i]) {\n                $dec[$i] = $dec[$j] + $arr->[$i];\n            }\n        }\n    }\n    my $max = 0;\n    for my $i (0..$#$arr) {\n        $max = $inc[$i] + $dec[$i] - $arr->[$i] if $inc[$i] + $dec[$i] - $arr->[$i] > $max;\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $arr->[0];\n    $dec[$n-1] = $arr->[$n-1];\n    for (my $i = 1; $i < $n; $i++) {\n        $inc[$i] = $arr->[$i];\n        for (my $j = 0; $j < $i; $j++) {\n            if ($arr->[$j] < $arr->[$i]) {\n                $inc[$i] = max($inc[$i], $inc[$j] + $arr->[$i]);\n            }\n        }\n    }\n    for (my $i = $n-2; $i >= 0; $i--) {\n        $dec[$i] = $arr->[$i];\n        for (my $j = $n-1; $j > $i; $j--) {\n            if ($arr->[$j] < $arr->[$i]) {\n                $dec[$i] = max($dec[$i], $dec[$j] + $arr->[$i]);\n            }\n        }\n    }\n    my $max = 0;\n    for (my $i = 0; $i < $n; $i++) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar @$arr;\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $arr->[0];\n    $dec[$n-1] = $arr->[$n-1];\n    for (my $i = 1; $i < $n; $i++) {\n        $inc[$i] = max($inc[$i-1], $arr->[$i]);\n    }\n    for (my $i = $n-2; $i >= 0; $i--) {\n        $dec[$i] = max($dec[$i+1], $arr->[$i]);\n    }\n    my $max = 0;\n    for (my $i = 0; $i < $n; $i++) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $arr->[0];\n    $dec[$n-1] = $arr->[$n-1];\n    for (my $i = 1; $i < $n; $i++) {\n        $inc[$i] = max($inc[$i-1], $arr->[$i]);\n    }\n    for (my $i = $n-2; $i >= 0; $i--) {\n        $dec[$i] = max($dec[$i+1], $arr->[$i]);\n    }\n    my $max = 0;\n    for (my $i = 0; $i < $n; $i++) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar @$arr;\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $arr->[0];\n    $dec[$n-1] = $arr->[$n-1];\n    for my $i (1..$n-1) {\n        for my $j (0..$i-1) {\n            if ($arr->[$i] > $arr->[$j]) {\n                $inc[$i] = max($inc[$i], $inc[$j] + $arr->[$i]);\n            }\n        }\n    }\n    for my $i ($n-2..0) {\n        for my $j ($n-1..$i+1) {\n            if ($arr->[$i] > $arr->[$j]) {\n                $dec[$i] = max($dec[$i], $dec[$j] + $arr->[$i]);\n            }\n        }\n    }\n    my $max = 0;\n    for my $i (0..$n-1) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar @$arr;\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $dec[$n-1] = $arr->[0];\n    for my $i (1..$n-1) {\n        $inc[$i] = $arr->[$i] + max($inc[$i-1], 0);\n        $dec[$n-$i-1] = $arr->[$n-$i-1] + max($dec[$n-$i], 0);\n    }\n    my $max = $inc[0] + $dec[0] - $arr->[0];\n    for my $i (1..$n-1) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $n = scalar(@$arr);\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;",
    "    my $n = scalar @$arr;\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;",
    "    my $n = scalar @$arr;\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $arr->[0];\n    $dec[$n-1] = $arr->[$n-1];\n    for (my $i = 1; $i < $n; $i++) {\n        $inc[$i] = max($arr->[$i], $inc[$i-1] + $arr->[$i]);\n    }\n    for (my $i = $n-2; $i >= 0; $i--) {\n        $dec[$i] = max($arr->[$i], $dec[$i+1] + $arr->[$i]);\n    }\n    my $max = 0;\n    for (my $i = 0; $i < $n; $i++) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my @inc = inc_sum($arr);\n    my @dec = dec_sum($arr);\n    my $max = 0;\n    for my $i (0..$#inc) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $arr->[0];\n    $dec[$n - 1] = $arr->[$n - 1];\n    for (my $i = 1; $i < $n; $i++) {\n        $inc[$i] = $arr->[$i];\n        for (my $j = 0; $j < $i; $j++) {\n            if ($arr->[$i] > $arr->[$j]) {\n                $inc[$i] = max($inc[$i], $inc[$j] + $arr->[$i]);\n            }\n        }\n    }\n    for (my $i = $n - 2; $i >= 0; $i--) {\n        $dec[$i] = $arr->[$i];\n        for (my $j = $n - 1; $j > $i; $j--) {\n            if ($arr->[$i] > $arr->[$j]) {\n                $dec[$i] = max($dec[$i], $dec[$j] + $arr->[$i]);\n            }\n        }\n    }\n    my $max = $inc[0] + $dec[0] - $arr->[0];\n    for (my $i = 1; $i < $n; $i++) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $len = scalar @$arr;\n    my @inc = (0) x $len;\n    my @dec = (0) x $len;\n    $inc[0] = $dec[$len-1] = $arr->[0];\n    for (my $i=1; $i<$len; $i++) {\n        $inc[$i] = max($inc[$i-1] + $arr->[$i], $arr->[$i]);\n    }\n    for (my $i=$len-2; $i>=0; $i--) {\n        $dec[$i] = max($dec[$i+1] + $arr->[$i], $arr->[$i]);\n    }\n    my $max = $inc[0] + $dec[0] - $arr->[0];\n    for (my $i=1; $i<$len; $i++) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $size = scalar @$arr;\n    my @inc = (0) x $size;\n    my @dec = (0) x $size;",
    "    my $n = scalar @$arr;\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $arr->[0];\n    $dec[$n-1] = $arr->[$n-1];\n    for(my $i = 1; $i < $n; $i++) {\n        $inc[$i] = max($inc[$i-1], $arr->[$i]);\n    }\n    for(my $i = $n-2; $i >= 0; $i--) {\n        $dec[$i] = max($dec[$i+1], $arr->[$i]);\n    }\n    my $max = 0;\n    for(my $i = 0; $i < $n; $i++) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $len = scalar @$arr;\n    my @inc = (0) x $len;\n    my @dec = (0) x $len;\n    $inc[0] = $dec[$len-1] = $arr->[0];\n    for my $i (1..$len-1) {\n        $inc[$i] = max($inc[$i-1]+$arr->[$i], $arr->[$i]);\n        $dec[$len-$i-1] = max($dec[$len-$i]+$arr->[$len-$i-1], $arr->[$len-$i-1]);\n    }\n    my $max = $inc[0] + $dec[0];\n    for my $i (1..$len-1) {\n        $max = max($max, $inc[$i] + $dec[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar @$arr;\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $arr->[0];\n    $dec[$n-1] = $arr->[$n-1];\n    for my $i (1..$n-1) {\n        for my $j (0..$i-1) {\n            if ($arr->[$i] > $arr->[$j]) {\n                $inc[$i] = max($inc[$i], $inc[$j] + $arr->[$i]);\n            }\n        }\n    }\n    for my $i ($n-2..0) {\n        for my $j ($n-1..$i+1) {\n            if ($arr->[$i] > $arr->[$j]) {\n                $dec[$i] = max($dec[$i], $dec[$j] + $arr->[$i]);\n            }\n        }\n    }\n    my $max = 0;\n    for my $i (0..$n-1) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $arr->[0];\n    $dec[$n-1] = $arr->[$n-1];\n    for (my $i = 1; $i < $n; $i++) {\n        $inc[$i] = $arr->[$i];\n        for (my $j = 0; $j < $i; $j++) {\n            if ($arr->[$i] > $arr->[$j] && $inc[$i] < $inc[$j] + $arr->[$i]) {\n                $inc[$i] = $inc[$j] + $arr->[$i];\n            }\n        }\n    }\n    for (my $i = $n-2; $i >= 0; $i--) {\n        $dec[$i] = $arr->[$i];\n        for (my $j = $n-1; $j > $i; $j--) {\n            if ($arr->[$i] > $arr->[$j] && $dec[$i] < $dec[$j] + $arr->[$i]) {\n                $dec[$i] = $dec[$j] + $arr->[$i];\n            }\n        }\n    }\n    my $max = 0;\n    for (my $i = 0; $i < $n; $i++) {\n        $max = $inc[$i] + $dec[$i] - $arr->[$i] if $max < $inc[$i] + $dec[$i] - $arr->[$i];\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    my $inc = [0];\n    my $dec = [0];\n    $inc->[0] = $arr->[0];\n    $dec->[$n-1] = $arr->[$n-1];\n    for my $i (1..$n-1) {\n        $inc->[$i] = $arr->[$i];\n        for my $j (0..$i-1) {\n            if ($arr->[$i] > $arr->[$j]) {\n                $inc->[$i] = max($inc->[$i], $inc->[$j] + $arr->[$i]);\n            }\n        }\n    }\n    for my $i ($n-2..0) {\n        $dec->[$i] = $arr->[$i];\n        for my $j ($i+1..$n-1) {\n            if ($arr->[$i] > $arr->[$j]) {\n                $dec->[$i] = max($dec->[$i], $dec->[$j] + $arr->[$i]);\n            }\n        }\n    }\n    my $max = 0;\n    for my $i (0..$n-1) {\n        $max = max($max, $inc->[$i] + $dec->[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar @$arr;\n    my @inc = (1) x $n;\n    my @dec = (1) x $n;\n    for my $i (1..$n-1) {\n        for my $j (0..$i-1) {\n            if ($arr->[$i] > $arr->[$j] && $inc[$i] < $inc[$j] + 1) {\n                $inc[$i] = $inc[$j] + 1;\n            }\n        }\n    }\n    for my $i ($n-2..0) {\n        for my $j ($n-1..$i+1) {\n            if ($arr->[$i] > $arr->[$j] && $dec[$i] < $dec[$j] + 1) {\n                $dec[$i] = $dec[$j] + 1;\n            }\n        }\n    }\n    my $max = 0;\n    for my $i (0..$n-1) {\n        $max = $inc[$i] + $dec[$i] - 1 if $max < $inc[$i] + $dec[$i] - 1;\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $arr->[0];\n    $dec[$n-1] = $arr->[$n-1];\n    for my $i (1..$n-1) {\n        $inc[$i] = max($inc[$i-1]+$arr->[$i], $arr->[$i]);\n    }\n    for my $i (reverse(0..$n-2)) {\n        $dec[$i] = max($dec[$i+1]+$arr->[$i], $arr->[$i]);\n    }\n    my $max = 0;\n    for my $i (0..$n-1) {\n        $max = max($max, $inc[$i]+$dec[$i]-$arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    my @inc = @$arr;\n    my @dec = @$arr;\n    for my $i (1..$n-1) {\n        for my $j (0..$i-1) {\n            if ($arr->[$i] > $arr->[$j] && $inc[$i] < $inc[$j] + $arr->[$i]) {\n                $inc[$i] = $inc[$j] + $arr->[$i];\n            }\n        }\n    }\n    for my $i (reverse 1..$n-1) {\n        for my $j (reverse 0..$i-1) {\n            if ($arr->[$i] > $arr->[$j] && $dec[$i] < $dec[$j] + $arr->[$i]) {\n                $dec[$i] = $dec[$j] + $arr->[$i];\n            }\n        }\n    }\n    my $max = 0;\n    for my $i (0..$n-1) {\n        $max = $inc[$i] + $dec[$i] - $arr->[$i] if $max < $inc[$i] + $dec[$i] - $arr->[$i];\n    }\n    return $max;\n}",
    "    my $n = scalar @$arr;\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $dec[0] = $arr->[0];\n    for my $i (1 .. $n-1) {\n        $inc[$i] = $arr->[$i];\n        for my $j (0 .. $i-1) {\n            $inc[$i] = max($inc[$i], $inc[$j] + $arr->[$i]) if $arr->[$j] < $arr->[$i];\n        }\n    }\n    $dec[$n-1] = $arr->[$n-1];\n    for my $i (reverse 0 .. $n-2) {\n        $dec[$i] = $arr->[$i];\n        for my $j (reverse 0 .. $i+1) {\n            $dec[$i] = max($dec[$i], $dec[$j] + $arr->[$i]) if $arr->[$j] < $arr->[$i];\n        }\n    }\n    my $max = $inc[0] + $dec[0] - $arr->[0];\n    for my $i (1 .. $n-1) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    my $inc = [ (0) x $n ];\n    my $dec = [ (0) x $n ];\n    $inc->[0] = $arr->[0];\n    $dec->[$n-1] = $arr->[$n-1];\n    for (my $i = 1; $i < $n; $i++) {\n        $inc->[$i] = max($inc->[$i-1], $arr->[$i]);\n    }\n    for (my $i = $n-2; $i >= 0; $i--) {\n        $dec->[$i] = max($dec->[$i+1], $arr->[$i]);\n    }\n    my $max = 0;\n    for (my $i = 0; $i < $n; $i++) {\n        $max = max($max, $inc->[$i] + $dec->[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar @$arr;\n    my $inc = [0];\n    my $dec = [0];\n    my $max = 0;\n    for my $i (0..$n-1) {\n        $inc->[$i] = $arr->[$i];\n        $dec->[$i] = $arr->[$i];\n        for my $j (0..$i-1) {\n            if ($arr->[$i] > $arr->[$j]) {\n                $inc->[$i] = max($inc->[$i], $inc->[$j] + $arr->[$i]);\n            }\n            if ($arr->[$i] < $arr->[$j]) {\n                $dec->[$i] = max($dec->[$i], $dec->[$j] + $arr->[$i]);\n            }\n        }\n        $max = max($max, $inc->[$i] + $dec->[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;",
    "    my $n = scalar(@$arr);\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $arr->[0];\n    $dec[$n-1] = $arr->[$n-1];\n    for (my $i = 1; $i < $n; $i++) {\n        $inc[$i] = $arr->[$i];\n        for (my $j = 0; $j < $i; $j++) {\n            if ($arr->[$i] > $arr->[$j]) {\n                $inc[$i] = max($inc[$i], $inc[$j] + $arr->[$i]);\n            }\n        }\n    }\n    for (my $i = $n-2; $i >= 0; $i--) {\n        $dec[$i] = $arr->[$i];\n        for (my $j = $n-1; $j > $i; $j--) {\n            if ($arr->[$i] > $arr->[$j]) {\n                $dec[$i] = max($dec[$i], $dec[$j] + $arr->[$i]);\n            }\n        }\n    }\n    my $max = $inc[0] + $dec[0] - $arr->[0];\n    for (my $i = 1; $i < $n; $i++) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $arr->[0];\n    $dec[$n-1] = $arr->[$n-1];\n    for my $i (1..$n-1) {\n        $inc[$i] = $arr->[$i] + max($inc[$i-1], 0);\n        $dec[$n-$i-1] = $arr->[$n-$i-1] + max($dec[$n-$i], 0);\n    }\n    my $max = $inc[0] + $dec[0];\n    for my $i (1..$n-1) {\n        $max = max($max, $inc[$i] + $dec[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $arr->[0];\n    $dec[$n-1] = $arr->[$n-1];\n    for (my $i = 1; $i < $n; $i++) {\n        $inc[$i] = $arr->[$i];\n        for (my $j = 0; $j < $i; $j++) {\n            if ($arr->[$j] < $arr->[$i]) {\n                $inc[$i] = max($inc[$i], $inc[$j] + $arr->[$i]);\n            }\n        }\n    }\n    for (my $i = $n-2; $i >= 0; $i--) {\n        $dec[$i] = $arr->[$i];\n        for (my $j = $n-1; $j > $i; $j--) {\n            if ($arr->[$j] < $arr->[$i]) {\n                $dec[$i] = max($dec[$i], $dec[$j] + $arr->[$i]);\n            }\n        }\n    }\n    my $max = 0;\n    for (my $i = 0; $i < $n; $i++) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $dec[$n-1] = $arr->[0];\n    for(my $i = 1; $i < $n; $i++) {\n        $inc[$i] = max($inc[$i-1] + $arr->[$i], $arr->[$i]);\n    }\n    for(my $i = $n-2; $i >= 0; $i--) {\n        $dec[$i] = max($dec[$i+1] + $arr->[$i], $arr->[$i]);\n    }\n    my $max = $inc[0] + $dec[0] - $arr->[0];\n    for(my $i = 1; $i < $n; $i++) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar @$arr;\n    my $inc = [0];\n    my $dec = [0];\n    for my $i (1..$n-1) {\n        for my $j (0..$i-1) {\n            if ($arr->[$i] > $arr->[$j] && $inc->[$j] + $arr->[$i] > $inc->[$i]) {\n                $inc->[$i] = $inc->[$j] + $arr->[$i];\n            }\n        }\n    }\n    for my $i ($n-2..0) {\n        for my $j ($n-1..$i+1) {\n            if ($arr->[$i] > $arr->[$j] && $dec->[$j] + $arr->[$i] > $dec->[$i]) {\n                $dec->[$i] = $dec->[$j] + $arr->[$i];\n            }\n        }\n    }\n    my $max = 0;\n    for my $i (0..$n-1) {\n        $max = $inc->[$i] + $dec->[$i] - $arr->[$i] if $inc->[$i] + $dec->[$i] - $arr->[$i] > $max;\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    my $max = $arr->[0];\n    my $inc = [$arr->[0]];\n    my $dec = [$arr->[0]];\n    for (my $i = 1; $i < $n; $i++) {\n        $inc->[$i] = $arr->[$i];\n        $dec->[$i] = $arr->[$i];\n        for (my $j = 0; $j < $i; $j++) {\n            if ($arr->[$i] > $arr->[$j]) {\n                $inc->[$i] = max($inc->[$i], $inc->[$j] + $arr->[$i]);\n            }\n            if ($arr->[$i] < $arr->[$j]) {\n                $dec->[$i] = max($dec->[$i], $dec->[$j] + $arr->[$i]);\n            }\n        }\n        $max = max($max, $inc->[$i], $dec->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar @$arr;\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $arr->[0];\n    $dec[$n - 1] = $arr->[$n - 1];\n    for my $i (1 .. $n - 1) {\n        $inc[$i] = $arr->[$i];\n        for my $j (0 .. $i - 1) {\n            if ($arr->[$j] < $arr->[$i]) {\n                $inc[$i] = max($inc[$i], $inc[$j] + $arr->[$i]);\n            }\n        }\n    }\n    for my $i ($n - 2 .. 0) {\n        $dec[$i] = $arr->[$i];\n        for my $j ($i + 1 .. $n - 1) {\n            if ($arr->[$j] < $arr->[$i]) {\n                $dec[$i] = max($dec[$i], $dec[$j] + $arr->[$i]);\n            }\n        }\n    }\n    my $max = 0;\n    for my $i (0 .. $n - 1) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $arr->[0];\n    $dec[$n - 1] = $arr->[$n - 1];\n    for (my $i = 1; $i < $n; $i++) {\n        $inc[$i] = $arr->[$i];\n        for (my $j = 0; $j < $i; $j++) {\n            if ($arr->[$i] > $arr->[$j]) {\n                $inc[$i] = max($inc[$i], $inc[$j] + $arr->[$i]);\n            }\n        }\n    }\n    for (my $i = $n - 2; $i >= 0; $i--) {\n        $dec[$i] = $arr->[$i];\n        for (my $j = $n - 1; $j > $i; $j--) {\n            if ($arr->[$i] > $arr->[$j]) {\n                $dec[$i] = max($dec[$i], $dec[$j] + $arr->[$i]);\n            }\n        }\n    }\n    my $max = 0;\n    for (my $i = 0; $i < $n; $i++) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    my $max_sum = 0;\n    for my $i (0 .. $n - 1) {\n        my $sum = 0;\n        for my $j ($i .. $n - 1) {\n            $sum += $arr->[$j];\n            $max_sum = $sum if $sum > $max_sum;\n        }\n    }\n    return $max_sum;\n}",
    "    my $max = 0;\n    my $n = scalar(@$arr);\n    my $inc = [0];\n    my $dec = [0];\n    for (my $i = 0; $i < $n; $i++) {\n        $inc->[$i] = $arr->[$i];\n        $dec->[$i] = $arr->[$i];\n    }\n    for (my $i = 1; $i < $n; $i++) {\n        for (my $j = 0; $j < $i; $j++) {\n            if ($arr->[$i] > $arr->[$j]) {\n                $inc->[$i] = max($inc->[$i], $inc->[$j] + $arr->[$i]);\n            }\n        }\n    }\n    for (my $i = $n - 2; $i >= 0; $i--) {\n        for (my $j = $n - 1; $j > $i; $j--) {\n            if ($arr->[$i] > $arr->[$j]) {\n                $dec->[$i] = max($dec->[$i], $dec->[$j] + $arr->[$i]);\n            }\n        }\n    }\n    for (my $i = 0; $i < $n; $i++) {\n        $max = max($max, $inc->[$i] + $dec->[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar @$arr;\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $arr->[0];\n    $dec[$n-1] = $arr->[$n-1];\n    for my $i (1..$n-1) {\n        $inc[$i] = $arr->[$i];\n        for my $j (0..$i-1) {\n            if ($arr->[$i] > $arr->[$j]) {\n                $inc[$i] = max($inc[$i], $inc[$j] + $arr->[$i]);\n            }\n        }\n    }\n    for my $i ($n-2..0) {\n        $dec[$i] = $arr->[$i];\n        for my $j ($i+1..$n-1) {\n            if ($arr->[$i] > $arr->[$j]) {\n                $dec[$i] = max($dec[$i], $dec[$j] + $arr->[$i]);\n            }\n        }\n    }\n    my $max = 0;\n    for my $i (0..$n-1) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $len = scalar(@$arr);\n    my @inc = (0) x $len;\n    my @dec = (0) x $len;",
    "    my $n = scalar(@$arr);\n    my $inc = [0];\n    my $dec = [0];\n    for(my $i = 1; $i < $n; $i++) {\n        for(my $j = 0; $j < $i; $j++) {\n            if($arr->[$i] > $arr->[$j] && $inc->[$i] < $inc->[$j]) {\n                $inc->[$i] = $inc->[$j];\n            }\n        }\n        $inc->[$i] += $arr->[$i];\n    }\n    for(my $i = $n - 2; $i >= 0; $i--) {\n        for(my $j = $n - 1; $j > $i; $j--) {\n            if($arr->[$i] > $arr->[$j] && $dec->[$i] < $dec->[$j]) {\n                $dec->[$i] = $dec->[$j];\n            }\n        }\n        $dec->[$i] += $arr->[$i];\n    }\n    my $max = 0;\n    for(my $i = 0; $i < $n; $i++) {\n        $max = max($max, $inc->[$i] + $dec->[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar @$arr;\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $arr->[0];\n    $dec[$n-1] = $arr->[$n-1];\n    for my $i (1..$n-1) {\n        $inc[$i] = max($inc[$i-1], $arr->[$i]);\n    }\n    for my $i (reverse 0..$n-2) {\n        $dec[$i] = max($dec[$i+1], $arr->[$i]);\n    }\n    my $max = 0;\n    for my $i (0..$n-1) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    my $inc = [0];\n    my $dec = [0];\n    for my $i (0 .. $n - 1) {\n        $inc->[$i] = $arr->[$i];\n        $dec->[$i] = $arr->[$i];\n    }\n    for my $i (1 .. $n - 1) {\n        for my $j (0 .. $i - 1) {\n            if ($arr->[$i] > $arr->[$j] && $inc->[$i] < $inc->[$j] + $arr->[$i]) {\n                $inc->[$i] = $inc->[$j] + $arr->[$i];\n            }\n        }\n    }\n    for my $i (reverse(1 .. $n - 1)) {\n        for my $j (reverse(0 .. $i - 1)) {\n            if ($arr->[$i] > $arr->[$j] && $dec->[$i] < $dec->[$j] + $arr->[$i]) {\n                $dec->[$i] = $dec->[$j] + $arr->[$i];\n            }\n        }\n    }\n    my $max = 0;\n    for my $i (0 .. $n - 1) {\n        $max = $inc->[$i] + $dec->[$i] - $arr->[$i] if $max < $inc->[$i] + $dec->[$i] - $arr->[$i];\n    }\n    return $max;\n}",
    "    my $n = scalar @$arr;\n    my $max_sum = 0;\n    my $max_sum_left = 0;\n    my $max_sum_right = 0;\n    my $max_sum_left_arr = [];\n    my $max_sum_right_arr = [];\n    for (my $i = 0; $i < $n; $i++) {\n        $max_sum_left_arr->[$i] = $arr->[$i];\n        $max_sum_right_arr->[$i] = $arr->[$i];\n    }\n    for (my $i = 1; $i < $n; $i++) {\n        for (my $j = 0; $j < $i; $j++) {\n            if ($arr->[$j] < $arr->[$i]) {\n                $max_sum_left_arr->[$i] = max($max_sum_left_arr->[$i], $max_sum_left_arr->[$j] + $arr->[$i]);\n            }\n        }\n    }\n    for (my $i = $n - 2; $i >= 0; $i--) {\n        for (my $j = $n - 1; $j > $i; $j--) {\n            if ($arr->[$j] < $arr->[$i]) {\n                $max_sum_right_arr->[$i] = max($max_sum_right_arr->[$i], $max_sum_right_arr->[$j] + $arr->[$i]);\n            }\n        }\n    }\n    for (my $i = 0; $i < $n; $i++) {\n        $max_sum = max($max_sum, $max_sum_left_arr->[$i] + $max_sum_right_arr->[$i] - $arr->[$i]);\n    }\n    return $max_sum;\n}",
    "    my $n = scalar @$arr;\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $arr->[0];\n    $dec[$n-1] = $arr->[$n-1];\n    for my $i (1..$n-1) {\n        $inc[$i] = max($inc[$i-1], $arr->[$i]);\n    }\n    for my $i ($n-2..0) {\n        $dec[$i] = max($dec[$i+1], $arr->[$i]);\n    }\n    my $max = $inc[0] + $dec[0];\n    for my $i (1..$n-1) {\n        $max = max($max, $inc[$i] + $dec[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    my $inc = [ map { $_ } (0..$n-1) ];\n    my $dec = [ map { $_ } (0..$n-1) ];\n    for my $i (1..$n-1) {\n        for my $j (0..$i-1) {\n            if ($arr->[$i] > $arr->[$j] && $inc->[$i] < $inc->[$j] + $arr->[$i]) {\n                $inc->[$i] = $inc->[$j] + $arr->[$i];\n            }\n        }\n    }\n    for my $i (reverse(0..$n-2)) {\n        for my $j ($i+1..$n-1) {\n            if ($arr->[$i] > $arr->[$j] && $dec->[$i] < $dec->[$j] + $arr->[$i]) {\n                $dec->[$i] = $dec->[$j] + $arr->[$i];\n            }\n        }\n    }\n    my $max = 0;\n    for my $i (0..$n-1) {\n        $max = $inc->[$i] + $dec->[$i] - $arr->[$i] if $max < $inc->[$i] + $dec->[$i] - $arr->[$i];\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $arr->[0];\n    for my $i (1..$n-1) {\n        $inc[$i] = $arr->[$i];\n        for my $j (0..$i-1) {\n            if ($arr->[$i] > $arr->[$j]) {\n                $inc[$i] = max($inc[$i], $inc[$j] + $arr->[$i]);\n            }\n        }\n    }\n    $dec[$n-1] = $arr->[$n-1];\n    for my $i (reverse 0..$n-2) {\n        $dec[$i] = $arr->[$i];\n        for my $j (reverse $i+1..$n-1) {\n            if ($arr->[$i] > $arr->[$j]) {\n                $dec[$i] = max($dec[$i], $dec[$j] + $arr->[$i]);\n            }\n        }\n    }\n    my $max = $inc[0] + $dec[0] - $arr->[0];\n    for my $i (1..$n-1) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar @$arr;\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $dec[0] = $arr->[0];\n    for my $i (1..$n-1) {\n        $inc[$i] = $arr->[$i];\n        for my $j (0..$i-1) {\n            $inc[$i] = max($inc[$i], $inc[$j] + $arr->[$i]) if $arr->[$j] < $arr->[$i];\n        }\n    }\n    for my $i (1..$n-1) {\n        $dec[$i] = $arr->[$i];\n        for my $j (0..$i-1) {\n            $dec[$i] = max($dec[$i], $dec[$j] + $arr->[$i]) if $arr->[$j] > $arr->[$i];\n        }\n    }\n    my $max = 0;\n    for my $i (0..$n-1) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $arr->[0];\n    $dec[$n-1] = $arr->[$n-1];\n    for(my $i=1; $i<$n; $i++) {\n        $inc[$i] = $arr->[$i];\n        for(my $j=0; $j<$i; $j++) {\n            if($arr->[$i] > $arr->[$j]) {\n                $inc[$i] = max($inc[$i], $inc[$j] + $arr->[$i]);\n            }\n        }\n    }\n    for(my $i=$n-2; $i>=0; $i--) {\n        $dec[$i] = $arr->[$i];\n        for(my $j=$n-1; $j>$i; $j--) {\n            if($arr->[$i] > $arr->[$j]) {\n                $dec[$i] = max($dec[$i], $dec[$j] + $arr->[$i]);\n            }\n        }\n    }\n    my $max = 0;\n    for(my $i=0; $i<$n; $i++) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $sum = 0;\n    my $len = scalar(@$arr);\n    for (my $i = 0; $i < $len; $i++) {\n        $sum += $arr->[$i];\n        $max = $sum if $sum > $max;\n        $sum = 0 if $sum < 0;\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    my @inc = (1) x $n;\n    my @dec = (1) x $n;\n    for my $i (1 .. $n - 1) {\n        for my $j (0 .. $i - 1) {\n            if ($arr->[$i] > $arr->[$j]) {\n                $inc[$i] = max($inc[$i], $inc[$j] + 1);\n            }\n        }\n    }\n    for my $i (reverse(1 .. $n - 1)) {\n        for my $j (reverse(0 .. $i - 1)) {\n            if ($arr->[$i] < $arr->[$j]) {\n                $dec[$i] = max($dec[$i], $dec[$j] + 1);\n            }\n        }\n    }\n    my $max = 0;\n    for my $i (0 .. $n - 1) {\n        $max = max($max, $inc[$i] + $dec[$i] - 1);\n    }\n    return $max;\n}",
    "    my $n = scalar @$arr;\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $arr->[0];\n    $dec[$n-1] = $arr->[$n-1];\n    for(my $i=1; $i<$n; $i++) {\n        $inc[$i] = max($inc[$i-1], $arr->[$i]);\n    }\n    for(my $i=$n-2; $i>=0; $i--) {\n        $dec[$i] = max($dec[$i+1], $arr->[$i]);\n    }\n    my $max = $inc[0] + $dec[0];\n    for(my $i=1; $i<$n; $i++) {\n        $max = max($max, $inc[$i] + $dec[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    my $inc = [0];\n    my $dec = [0];\n    $inc->[0] = $arr->[0];\n    $dec->[$n-1] = $arr->[$n-1];\n    for (my $i = 1; $i < $n; $i++) {\n        $inc->[$i] = $arr->[$i];\n        for (my $j = 0; $j < $i; $j++) {\n            if ($arr->[$i] > $arr->[$j] && $inc->[$i] < $inc->[$j] + $arr->[$i]) {\n                $inc->[$i] = $inc->[$j] + $arr->[$i];\n            }\n        }\n    }\n    for (my $i = $n-2; $i >= 0; $i--) {\n        $dec->[$i] = $arr->[$i];\n        for (my $j = $n-1; $j > $i; $j--) {\n            if ($arr->[$i] > $arr->[$j] && $dec->[$i] < $dec->[$j] + $arr->[$i]) {\n                $dec->[$i] = $dec->[$j] + $arr->[$i];\n            }\n        }\n    }\n    my $max = 0;\n    for (my $i = 0; $i < $n; $i++) {\n        if ($max < $inc->[$i] + $dec->[$i] - $arr->[$i]) {\n            $max = $inc->[$i] + $dec->[$i] - $arr->[$i];\n        }\n    }\n    return $max;\n}",
    "    my $n = scalar @$arr;\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $dec[$n-1] = $arr->[0];\n    for my $i (1..$n-1) {\n        $inc[$i] = max($arr->[$i], $inc[$i-1] + $arr->[$i]);\n        $dec[$n-$i-1] = max($arr->[$n-$i-1], $dec[$n-$i] + $arr->[$n-$i-1]);\n    }\n    my $max = $inc[0] + $dec[0] - $arr->[0];\n    for my $i (1..$n-1) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $n = scalar @$arr;\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    for (my $i = 0; $i < $n; $i++) {\n        $inc[$i] = $arr->[$i];\n        for (my $j = 0; $j < $i; $j++) {\n            if ($arr->[$i] > $arr->[$j] && $inc[$i] < $inc[$j] + $arr->[$i]) {\n                $inc[$i] = $inc[$j] + $arr->[$i];\n            }\n        }\n    }\n    for (my $i = $n - 1; $i >= 0; $i--) {\n        $dec[$i] = $arr->[$i];\n        for (my $j = $n - 1; $j > $i; $j--) {\n            if ($arr->[$i] > $arr->[$j] && $dec[$i] < $dec[$j] + $arr->[$i]) {\n                $dec[$i] = $dec[$j] + $arr->[$i];\n            }\n        }\n    }\n    for (my $i = 0; $i < $n; $i++) {\n        $max = $inc[$i] + $dec[$i] - $arr->[$i] if $max < $inc[$i] + $dec[$i] - $arr->[$i];\n    }\n    return $max;\n}",
    "    my $n = scalar @$arr;\n    my $inc = [ map { $_ } (0..$n-1) ];\n    my $dec = [ map { $_ } (0..$n-1) ];\n    my $max = 0;\n    for my $i (1..$n-1) {\n        for my $j (0..$i-1) {\n            if ($arr->[$i] > $arr->[$j] && $inc->[$i] < $inc->[$j] + $arr->[$i]) {\n                $inc->[$i] = $inc->[$j] + $arr->[$i];\n            }\n        }\n    }\n    for my $i (reverse 0..$n-2) {\n        for my $j ($i+1..$n-1) {\n            if ($arr->[$i] > $arr->[$j] && $dec->[$i] < $dec->[$j] + $arr->[$i]) {\n                $dec->[$i] = $dec->[$j] + $arr->[$i];\n            }\n        }\n    }\n    for my $i (0..$n-1) {\n        $max = max($max, $inc->[$i] + $dec->[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $arr->[0];\n    $dec[$n-1] = $arr->[$n-1];\n    for (my $i = 1; $i < $n; $i++) {\n        $inc[$i] = max($inc[$i-1], $arr->[$i]);\n    }\n    for (my $i = $n-2; $i >= 0; $i--) {\n        $dec[$i] = max($dec[$i+1], $arr->[$i]);\n    }\n    my $max = 0;\n    for (my $i = 0; $i < $n; $i++) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    my $inc = [0..$n-1];\n    my $dec = [0..$n-1];\n    for my $i (1..$n-1) {\n        for my $j (0..$i-1) {\n            if ($arr->[$i] > $arr->[$j] && $inc->[$i] < $inc->[$j] + $arr->[$i]) {\n                $inc->[$i] = $inc->[$j] + $arr->[$i];\n            }\n        }\n    }\n    for my $i ($n-2..0) {\n        for my $j ($n-1..$i+1) {\n            if ($arr->[$i] > $arr->[$j] && $dec->[$i] < $dec->[$j] + $arr->[$i]) {\n                $dec->[$i] = $dec->[$j] + $arr->[$i];\n            }\n        }\n    }\n    my $max = $inc->[0] + $dec->[0] - $arr->[0];\n    for my $i (1..$n-1) {\n        if ($max < $inc->[$i] + $dec->[$i] - $arr->[$i]) {\n            $max = $inc->[$i] + $dec->[$i] - $arr->[$i];\n        }\n    }\n    return $max;\n}",
    "    my $n = scalar @$arr;\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $dec[$n-1] = $arr->[0];\n    for my $i (1..$n-1) {\n        $inc[$i] = max($inc[$i-1] + $arr->[$i], $arr->[$i]);\n        $dec[$n-$i-1] = max($dec[$n-$i] + $arr->[$n-$i-1], $arr->[$n-$i-1]);\n    }\n    my $max = $inc[0] + $dec[0] - $arr->[0];\n    for my $i (1..$n-1) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar @$arr;\n    my @inc = @$arr;\n    my @dec = @$arr;",
    "    my $n = scalar @$arr;\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $arr->[0];\n    $dec[$n-1] = $arr->[$n-1];\n    for my $i (1..$n-1) {\n        $inc[$i] = max($inc[$i-1], $arr->[$i]);\n    }\n    for my $i ($n-2..0) {\n        $dec[$i] = max($dec[$i+1], $arr->[$i]);\n    }\n    my $max = 0;\n    for my $i (0..$n-1) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    my $inc = [0];\n    my $dec = [0];\n    for (my $i = 0; $i < $n; $i++) {\n        $inc->[$i] = $arr->[$i];\n        $dec->[$i] = $arr->[$i];\n    }\n    for (my $i = 1; $i < $n; $i++) {\n        for (my $j = 0; $j < $i; $j++) {\n            if ($arr->[$i] > $arr->[$j] && $inc->[$i] < $inc->[$j] + $arr->[$i]) {\n                $inc->[$i] = $inc->[$j] + $arr->[$i];\n            }\n        }\n    }\n    for (my $i = $n - 2; $i >= 0; $i--) {\n        for (my $j = $n - 1; $j > $i; $j--) {\n            if ($arr->[$i] > $arr->[$j] && $dec->[$i] < $dec->[$j] + $arr->[$i]) {\n                $dec->[$i] = $dec->[$j] + $arr->[$i];\n            }\n        }\n    }\n    my $max = 0;\n    for (my $i = 0; $i < $n; $i++) {\n        $max = $inc->[$i] + $dec->[$i] - $arr->[$i] if $max < $inc->[$i] + $dec->[$i] - $arr->[$i];\n    }\n    return $max;\n}",
    "    my $n = scalar @$arr;\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $arr->[0];\n    $dec[$n-1] = $arr->[$n-1];\n    for (my $i = 1; $i < $n; $i++) {\n        $inc[$i] = max($inc[$i-1] + $arr->[$i], $arr->[$i]);\n    }\n    for (my $i = $n-2; $i >= 0; $i--) {\n        $dec[$i] = max($dec[$i+1] + $arr->[$i], $arr->[$i]);\n    }\n    my $max = $inc[0] + $dec[0] - $arr->[0];\n    for (my $i = 1; $i < $n; $i++) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my @inc = (0) x scalar @$arr;\n    my @dec = (0) x scalar @$arr;",
    "    my $n = scalar(@$arr);\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $arr->[0];\n    $dec[$n-1] = $arr->[$n-1];\n    for (my $i = 1; $i < $n; $i++) {\n        $inc[$i] = $arr->[$i];\n        for (my $j = 0; $j < $i; $j++) {\n            if ($arr->[$i] > $arr->[$j]) {\n                $inc[$i] = max($inc[$i], $inc[$j] + $arr->[$i]);\n            }\n        }\n    }\n    for (my $i = $n-2; $i >= 0; $i--) {\n        $dec[$i] = $arr->[$i];\n        for (my $j = $n-1; $j > $i; $j--) {\n            if ($arr->[$i] > $arr->[$j]) {\n                $dec[$i] = max($dec[$i], $dec[$j] + $arr->[$i]);\n            }\n        }\n    }\n    my $max = 0;\n    for (my $i = 0; $i < $n; $i++) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar @$arr;\n    my $inc = [0..$n-1];\n    my $dec = [0..$n-1];\n    for my $i (1..$n-1) {\n        for my $j (0..$i-1) {\n            if ($arr->[$j] < $arr->[$i]) {\n                $inc->[$i] = max($inc->[$i], $inc->[$j] + $arr->[$i]);\n            }\n        }\n    }\n    for my $i ($n-2..0) {\n        for my $j ($n-1..$i+1) {\n            if ($arr->[$j] < $arr->[$i]) {\n                $dec->[$i] = max($dec->[$i], $dec->[$j] + $arr->[$i]);\n            }\n        }\n    }\n    my $max = 0;\n    for my $i (0..$n-1) {\n        $max = max($max, $inc->[$i] + $dec->[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar @$arr;\n    my $inc = [0];\n    my $dec = [0];\n    for my $i (0..$n-1) {\n        $inc->[$i] = $arr->[$i];\n        $dec->[$i] = $arr->[$i];\n    }",
    "    my $n = scalar(@$arr);\n    my $inc = [0];\n    my $dec = [0];\n    for my $i (1..$n-1) {\n        for my $j (0..$i-1) {\n            if ($arr->[$i] > $arr->[$j] && $inc->[$i] < $inc->[$j]) {\n                $inc->[$i] = $inc->[$j];\n            }\n        }\n        $inc->[$i] += $arr->[$i];\n    }\n    for my $i ($n-2..0) {\n        for my $j ($n-1..$i+1) {\n            if ($arr->[$i] > $arr->[$j] && $dec->[$i] < $dec->[$j]) {\n                $dec->[$i] = $dec->[$j];\n            }\n        }\n        $dec->[$i] += $arr->[$i];\n    }\n    my $max = 0;\n    for my $i (0..$n-1) {\n        $max = $inc->[$i] + $dec->[$i] - $arr->[$i] if $max < $inc->[$i] + $dec->[$i] - $arr->[$i];\n    }\n    return $max;\n}",
    "    my @inc = @$arr;\n    my @dec = @$arr;\n    for my $i (1..$#$arr) {\n        for my $j (0..$i-1) {\n            if ($arr->[$i] > $arr->[$j]) {\n                $inc[$i] = max($inc[$i], $inc[$j] + $arr->[$i]);\n            }\n        }\n    }\n    for my $i (reverse 1..$#$arr) {\n        for my $j (reverse 0..$i-1) {\n            if ($arr->[$i] > $arr->[$j]) {\n                $dec[$i] = max($dec[$i], $dec[$j] + $arr->[$i]);\n            }\n        }\n    }\n    my $max = 0;\n    for my $i (0..$#$arr) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar @$arr;\n    my $inc = [0];\n    my $dec = [0];\n    my $max = 0;\n    for my $i (0..$n-1) {\n        $inc->[$i] = $arr->[$i];\n        for my $j (0..$i-1) {\n            if ($arr->[$j] < $arr->[$i]) {\n                $inc->[$i] = max($inc->[$i], $inc->[$j] + $arr->[$i]);\n            }\n        }\n        $dec->[$n-1-$i] = $arr->[$n-1-$i];\n        for my $j (0..$i-1) {\n            if ($arr->[$n-1-$j] < $arr->[$n-1-$i]) {\n                $dec->[$n-1-$i] = max($dec->[$n-1-$i], $dec->[$n-1-$j] + $arr->[$n-1-$i]);\n            }\n        }\n    }\n    for my $i (0..$n-1) {\n        $max = max($max, $inc->[$i] + $dec->[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    my $inc = [0..$n-1];\n    my $dec = [0..$n-1];\n    for (my $i = 1; $i < $n; $i++) {\n        for (my $j = 0; $j < $i; $j++) {\n            if ($arr->[$i] > $arr->[$j] && $inc->[$i] < $inc->[$j] + $arr->[$i]) {\n                $inc->[$i] = $inc->[$j] + $arr->[$i];\n            }\n        }\n    }\n    for (my $i = $n-2; $i >= 0; $i--) {\n        for (my $j = $n-1; $j > $i; $j--) {\n            if ($arr->[$i] > $arr->[$j] && $dec->[$i] < $dec->[$j] + $arr->[$i]) {\n                $dec->[$i] = $dec->[$j] + $arr->[$i];\n            }\n        }\n    }\n    my $max = 0;\n    for (my $i = 0; $i < $n; $i++) {\n        $max = max($max, $inc->[$i] + $dec->[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $arr->[0];\n    $dec[$n-1] = $arr->[$n-1];\n    for my $i (1..$n-1) {\n        $inc[$i] = max($inc[$i-1] + $arr->[$i], $arr->[$i]);\n    }\n    for my $i ($n-2..0) {\n        $dec[$i] = max($dec[$i+1] + $arr->[$i], $arr->[$i]);\n    }\n    my $max = $inc[0] + $dec[0] - $arr->[0];\n    for my $i (1..$n-1) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $arr->[0];\n    $dec[$n-1] = $arr->[$n-1];\n    for my $i (1..$n-1) {\n        $inc[$i] = $arr->[$i];\n        for my $j (0..$i-1) {\n            if ($arr->[$i] > $arr->[$j]) {\n                $inc[$i] = max($inc[$i], $inc[$j] + $arr->[$i]);\n            }\n        }\n    }\n    for my $i (reverse 0..$n-2) {\n        $dec[$i] = $arr->[$i];\n        for my $j (reverse $i+1..$n-1) {\n            if ($arr->[$i] > $arr->[$j]) {\n                $dec[$i] = max($dec[$i], $dec[$j] + $arr->[$i]);\n            }\n        }\n    }\n    my $max = $inc[0] + $dec[0] - $arr->[0];\n    for my $i (1..$n-1) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my @inc = (0) x scalar(@$arr);\n    my @dec = (0) x scalar(@$arr);\n    $inc[0] = $dec[0] = $arr->[0];\n    for my $i (1 .. $#$arr) {\n        $inc[$i] = max($inc[$i-1] + $arr->[$i], $arr->[$i]);\n        $dec[$i] = max($dec[$i-1] + $arr->[$i], $arr->[$i]);\n    }\n    my $max = 0;\n    for my $i (0 .. $#$arr) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    my $inc = [0..$n-1];\n    my $dec = [0..$n-1];\n    for my $i (1..$n-1) {\n        for my $j (0..$i-1) {\n            if ($arr->[$i] > $arr->[$j] && $inc->[$i] < $inc->[$j] + $arr->[$i]) {\n                $inc->[$i] = $inc->[$j] + $arr->[$i];\n            }\n        }\n    }\n    for my $i ($n-2..0) {\n        for my $j ($n-1..$i+1) {\n            if ($arr->[$i] > $arr->[$j] && $dec->[$i] < $dec->[$j] + $arr->[$i]) {\n                $dec->[$i] = $dec->[$j] + $arr->[$i];\n            }\n        }\n    }\n    my $max = 0;\n    for my $i (0..$n-1) {\n        $max = $inc->[$i] + $dec->[$i] - $arr->[$i] if $max < $inc->[$i] + $dec->[$i] - $arr->[$i];\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    my $inc = [0..$n-1];\n    my $dec = [0..$n-1];\n    for my $i (1..$n-1) {\n        for my $j (0..$i-1) {\n            if ($arr->[$i] > $arr->[$j] && $inc->[$i] < $inc->[$j] + $arr->[$i]) {\n                $inc->[$i] = $inc->[$j] + $arr->[$i];\n            }\n        }\n    }\n    for my $i ($n-2..0) {\n        for my $j ($n-1..$i+1) {\n            if ($arr->[$i] > $arr->[$j] && $dec->[$i] < $dec->[$j] + $arr->[$i]) {\n                $dec->[$i] = $dec->[$j] + $arr->[$i];\n            }\n        }\n    }\n    my $max = 0;\n    for my $i (0..$n-1) {\n        $max = $inc->[$i] + $dec->[$i] - $arr->[$i] if $max < $inc->[$i] + $dec->[$i] - $arr->[$i];\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $n = scalar @$arr;\n    for my $i (0..$n-1) {\n        my $sum = 0;\n        for my $j ($i..$n-1) {\n            $sum += $arr->[$j];\n            $max = $sum if $sum > $max;\n        }\n    }\n    return $max;\n}",
    "    my $n = scalar @$arr;\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $arr->[0];\n    $dec[$n-1] = $arr->[$n-1];\n    for my $i (1..$n-1) {\n        $inc[$i] = max($arr->[$i], $inc[$i-1] + $arr->[$i]);\n    }\n    for my $i (reverse 0..$n-2) {\n        $dec[$i] = max($arr->[$i], $dec[$i+1] + $arr->[$i]);\n    }\n    my $max = 0;\n    for my $i (0..$n-1) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $arr->[0];\n    $dec[$n-1] = $arr->[$n-1];\n    for (my $i = 1; $i < $n; $i++) {\n        $inc[$i] = $arr->[$i];\n        for (my $j = 0; $j < $i; $j++) {\n            if ($arr->[$i] > $arr->[$j]) {\n                $inc[$i] = max($inc[$i], $inc[$j] + $arr->[$i]);\n            }\n        }\n    }\n    for (my $i = $n-2; $i >= 0; $i--) {\n        $dec[$i] = $arr->[$i];\n        for (my $j = $n-1; $j > $i; $j--) {\n            if ($arr->[$i] > $arr->[$j]) {\n                $dec[$i] = max($dec[$i], $dec[$j] + $arr->[$i]);\n            }\n        }\n    }\n    my $max = 0;\n    for (my $i = 0; $i < $n; $i++) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar @$arr;\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;",
    "    my $n = scalar(@$arr);\n    my $inc = [0..$n-1];\n    my $dec = [0..$n-1];\n    for my $i (1..$n-1) {\n        for my $j (0..$i-1) {\n            if ($arr->[$i] > $arr->[$j] && $inc->[$i] < $inc->[$j] + $arr->[$i]) {\n                $inc->[$i] = $inc->[$j] + $arr->[$i];\n            }\n        }\n    }\n    for my $i ($n-2..0) {\n        for my $j ($n-1..$i+1) {\n            if ($arr->[$i] > $arr->[$j] && $dec->[$i] < $dec->[$j] + $arr->[$i]) {\n                $dec->[$i] = $dec->[$j] + $arr->[$i];\n            }\n        }\n    }\n    my $max = 0;\n    for my $i (0..$n-1) {\n        $max = max($max, $inc->[$i] + $dec->[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar @$arr;\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $arr->[0];\n    $dec[$n-1] = $arr->[$n-1];\n    for my $i (1..$n-1) {\n        $inc[$i] = max($inc[$i-1] + $arr->[$i], $arr->[$i]);\n    }\n    for my $i (reverse 0..$n-2) {\n        $dec[$i] = max($dec[$i+1] + $arr->[$i], $arr->[$i]);\n    }\n    my $max = $inc[0] + $dec[0] - $arr->[0];\n    for my $i (1..$n-1) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    my $inc = [map {0} (0..$n-1)];\n    my $dec = [map {0} (0..$n-1)];\n    $inc->[0] = $arr->[0];\n    $dec->[$n-1] = $arr->[$n-1];\n    for my $i (1..$n-1) {\n        $inc->[$i] = $arr->[$i];\n        for my $j (0..$i-1) {\n            if ($arr->[$i] > $arr->[$j]) {\n                $inc->[$i] = max($inc->[$i], $inc->[$j] + $arr->[$i]);\n            }\n        }\n    }\n    for my $i ($n-2..0) {\n        $dec->[$i] = $arr->[$i];\n        for my $j ($i+1..$n-1) {\n            if ($arr->[$i] > $arr->[$j]) {\n                $dec->[$i] = max($dec->[$i], $dec->[$j] + $arr->[$i]);\n            }\n        }\n    }\n    my $max = 0;\n    for my $i (0..$n-1) {\n        $max = max($max, $inc->[$i] + $dec->[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    my $inc = [map {$_} (0..$n-1)];\n    my $dec = [map {$_} (0..$n-1)];\n    for my $i (1..$n-1) {\n        for my $j (0..$i-1) {\n            if ($arr->[$i] > $arr->[$j] && $inc->[$i] < $inc->[$j] + $arr->[$i]) {\n                $inc->[$i] = $inc->[$j] + $arr->[$i];\n            }\n        }\n    }\n    for my $i ($n-2..0) {\n        for my $j ($n-1..$i+1) {\n            if ($arr->[$i] > $arr->[$j] && $dec->[$i] < $dec->[$j] + $arr->[$i]) {\n                $dec->[$i] = $dec->[$j] + $arr->[$i];\n            }\n        }\n    }\n    my $max = 0;\n    for my $i (0..$n-1) {\n        $max = $inc->[$i] + $dec->[$i] - $arr->[$i] if $max < $inc->[$i] + $dec->[$i] - $arr->[$i];\n    }\n    return $max;\n}",
    "    my $n = scalar @$arr;\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $arr->[0];\n    $dec[$n-1] = $arr->[$n-1];\n    for my $i (1 .. $n-1) {\n        $inc[$i] = max($inc[$i-1], $arr->[$i]);\n        $dec[$n-$i-1] = max($dec[$n-$i], $arr->[$n-$i-1]);\n    }\n    my $max = 0;\n    for my $i (0 .. $n-1) {\n        $max = max($max, $inc[$i] + $dec[$i]);\n    }\n    return $max;\n}",
    "    my $len = scalar(@$arr);\n    my @l = (0) x $len;\n    my @r = (0) x $len;\n    $l[0] = $arr->[0];\n    $r[$len-1] = $arr->[$len-1];\n    for(my $i = 1; $i < $len; $i++) {\n        $l[$i] = max($arr->[$i], $l[$i-1] + $arr->[$i]);\n    }\n    for(my $i = $len-2; $i >= 0; $i--) {\n        $r[$i] = max($arr->[$i], $r[$i+1] + $arr->[$i]);\n    }\n    my $max = $l[0] + $r[0] - $arr->[0];\n    for(my $i = 1; $i < $len; $i++) {\n        $max = max($max, $l[$i] + $r[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $dec[$n-1] = $arr->[0];\n    for (my $i = 1; $i < $n; $i++) {\n        $inc[$i] = max($inc[$i-1] + $arr->[$i], $arr->[$i]);\n    }\n    for (my $i = $n-2; $i >= 0; $i--) {\n        $dec[$i] = max($dec[$i+1] + $arr->[$i], $arr->[$i]);\n    }\n    my $max = 0;\n    for (my $i = 0; $i < $n; $i++) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar @$arr;\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $arr->[0];\n    $dec[$n-1] = $arr->[$n-1];\n    for(my $i = 1; $i < $n; $i++) {\n        $inc[$i] = $arr->[$i];\n        for(my $j = 0; $j < $i; $j++) {\n            if($arr->[$i] > $arr->[$j]) {\n                $inc[$i] = max($inc[$i], $inc[$j] + $arr->[$i]);\n            }\n        }\n    }\n    for(my $i = $n-2; $i >= 0; $i--) {\n        $dec[$i] = $arr->[$i];\n        for(my $j = $n-1; $j > $i; $j--) {\n            if($arr->[$i] > $arr->[$j]) {\n                $dec[$i] = max($dec[$i], $dec[$j] + $arr->[$i]);\n            }\n        }\n    }\n    my $max = 0;\n    for(my $i = 0; $i < $n; $i++) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $n = scalar @$arr;\n    for my $i (0..$n-1) {\n        my $sum = 0;\n        for my $j ($i..$n-1) {\n            $sum += $arr->[$j];\n            $max = $sum if $sum > $max;\n        }\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $arr->[0];\n    $dec[$n-1] = $arr->[$n-1];\n    for(my $i=1; $i<$n; $i++) {\n        $inc[$i] = $arr->[$i];\n        for(my $j=0; $j<$i; $j++) {\n            if($arr->[$i] > $arr->[$j]) {\n                $inc[$i] = max($inc[$i], $inc[$j] + $arr->[$i]);\n            }\n        }\n    }\n    for(my $i=$n-2; $i>=0; $i--) {\n        $dec[$i] = $arr->[$i];\n        for(my $j=$n-1; $j>$i; $j--) {\n            if($arr->[$i] > $arr->[$j]) {\n                $dec[$i] = max($dec[$i], $dec[$j] + $arr->[$i]);\n            }\n        }\n    }\n    my $max = 0;\n    for(my $i=0; $i<$n; $i++) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my @inc = (0) x scalar @$arr;\n    my @dec = (0) x scalar @$arr;\n    $inc[0] = $arr->[0];\n    $dec[-1] = $arr->[-1];\n    for my $i (1..$#$arr) {\n        $inc[$i] = max($inc[$i-1] + $arr->[$i], $arr->[$i]);\n    }\n    for my $i (reverse 1..$#$arr) {\n        $dec[$i-1] = max($dec[$i] + $arr->[$i-1], $arr->[$i-1]);\n    }\n    my $max = 0;\n    for my $i (0..$#$arr) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;",
    "    my $n = scalar(@$arr);\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $arr->[0];\n    $dec[$n-1] = $arr->[$n-1];\n    for (my $i = 1; $i < $n; $i++) {\n        $inc[$i] = max($inc[$i-1] + $arr->[$i], $arr->[$i]);\n    }\n    for (my $i = $n-2; $i >= 0; $i--) {\n        $dec[$i] = max($dec[$i+1] + $arr->[$i], $arr->[$i]);\n    }\n    my $max = 0;\n    for (my $i = 0; $i < $n; $i++) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $arr->[0];\n    $dec[$n - 1] = $arr->[$n - 1];\n    for my $i (1 .. $n - 1) {\n        $inc[$i] = $arr->[$i];\n        for my $j (0 .. $i - 1) {\n            if ($arr->[$i] > $arr->[$j]) {\n                $inc[$i] = max($inc[$i], $inc[$j] + $arr->[$i]);\n            }\n        }\n    }\n    for my $i ($n - 2 .. 0) {\n        $dec[$i] = $arr->[$i];\n        for my $j ($i + 1 .. $n - 1) {\n            if ($arr->[$i] > $arr->[$j]) {\n                $dec[$i] = max($dec[$i], $dec[$j] + $arr->[$i]);\n            }\n        }\n    }\n    my $max = 0;\n    for my $i (0 .. $n - 1) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $dec[$n-1] = $arr->[0];\n    for my $i (1..$n-1) {\n        $inc[$i] = max($arr->[$i], $inc[$i-1] + $arr->[$i]);\n        $dec[$n-$i-1] = max($arr->[$n-$i-1], $dec[$n-$i] + $arr->[$n-$i-1]);\n    }\n    my $max = $inc[0] + $dec[0] - $arr->[0];\n    for my $i (1..$n-1) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $arr->[0];\n    $dec[$n-1] = $arr->[$n-1];\n    for (my $i = 1; $i < $n; $i++) {\n        $inc[$i] = $arr->[$i];\n        for (my $j = 0; $j < $i; $j++) {\n            if ($arr->[$i] > $arr->[$j]) {\n                $inc[$i] = max($inc[$i], $inc[$j] + $arr->[$i]);\n            }\n        }\n    }\n    for (my $i = $n - 2; $i >= 0; $i--) {\n        $dec[$i] = $arr->[$i];\n        for (my $j = $n - 1; $j > $i; $j--) {\n            if ($arr->[$i] > $arr->[$j]) {\n                $dec[$i] = max($dec[$i], $dec[$j] + $arr->[$i]);\n            }\n        }\n    }\n    my $max = 0;\n    for (my $i = 0; $i < $n; $i++) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar @$arr;\n    my $inc = [0];\n    my $dec = [0];\n    my $max = 0;\n    for my $i (0 .. $n - 1) {\n        $inc->[$i] = $arr->[$i];\n        $dec->[$i] = $arr->[$i];\n        for my $j (0 .. $i - 1) {\n            if ($arr->[$i] > $arr->[$j]) {\n                $inc->[$i] = max($inc->[$i], $inc->[$j] + $arr->[$i]);\n            }\n            if ($arr->[$i] < $arr->[$j]) {\n                $dec->[$i] = max($dec->[$i], $dec->[$j] + $arr->[$i]);\n            }\n        }\n        $max = max($max, $inc->[$i] + $dec->[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = @$arr;\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $dec[0] = $arr->[0];\n    for my $i (1..$n-1) {\n        $inc[$i] = $arr->[$i];\n        for my $j (0..$i-1) {\n            $inc[$i] = max($inc[$i], $inc[$j] + $arr->[$i]) if $arr->[$i] > $arr->[$j];\n        }\n    }\n    $dec[$n-1] = $arr->[$n-1];\n    for my $i (reverse 0..$n-2) {\n        $dec[$i] = $arr->[$i];\n        for my $j (reverse $i+1..$n-1) {\n            $dec[$i] = max($dec[$i], $dec[$j] + $arr->[$i]) if $arr->[$i] > $arr->[$j];\n        }\n    }\n    my $max = 0;\n    for my $i (0..$n-1) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar @$arr;\n    my $inc = [map {$_} (0..$n-1)];\n    my $dec = [map {$_} (0..$n-1)];\n    $inc->[0] = $arr->[0];\n    $dec->[$n-1] = $arr->[$n-1];\n    for (my $i = 1; $i < $n; $i++) {\n        for (my $j = 0; $j < $i; $j++) {\n            if ($arr->[$i] > $arr->[$j] && $inc->[$i] < $inc->[$j] + $arr->[$i]) {\n                $inc->[$i] = $inc->[$j] + $arr->[$i];\n            }\n        }\n    }\n    for (my $i = $n-2; $i >= 0; $i--) {\n        for (my $j = $n-1; $j > $i; $j--) {\n            if ($arr->[$i] > $arr->[$j] && $dec->[$i] < $dec->[$j] + $arr->[$i]) {\n                $dec->[$i] = $dec->[$j] + $arr->[$i];\n            }\n        }\n    }\n    my $max = $inc->[0] + $dec->[0] - $arr->[0];\n    for (my $i = 1; $i < $n; $i++) {\n        if ($inc->[$i] + $dec->[$i] - $arr->[$i] > $max) {\n            $max = $inc->[$i] + $dec->[$i] - $arr->[$i];\n        }\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $arr->[0];\n    $dec[$n-1] = $arr->[$n-1];\n    for (my $i=1; $i<$n; $i++) {\n        $inc[$i] = $arr->[$i];\n        for (my $j=0; $j<$i; $j++) {\n            if ($arr->[$i] > $arr->[$j]) {\n                $inc[$i] = max($inc[$i], $inc[$j] + $arr->[$i]);\n            }\n        }\n    }\n    for (my $i=$n-2; $i>=0; $i--) {\n        $dec[$i] = $arr->[$i];\n        for (my $j=$n-1; $j>$i; $j--) {\n            if ($arr->[$i] > $arr->[$j]) {\n                $dec[$i] = max($dec[$i], $dec[$j] + $arr->[$i]);\n            }\n        }\n    }\n    my $max = 0;\n    for (my $i=0; $i<$n; $i++) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    my $inc = [0];\n    my $dec = [0];\n    for(my $i = 1; $i < $n; $i++) {\n        for(my $j = 0; $j < $i; $j++) {\n            if($arr->[$j] < $arr->[$i]) {\n                $inc->[$i] = max($inc->[$i], $inc->[$j] + $arr->[$i]);\n            }\n        }\n    }\n    for(my $i = $n - 2; $i >= 0; $i--) {\n        for(my $j = $n - 1; $j > $i; $j--) {\n            if($arr->[$j] < $arr->[$i]) {\n                $dec->[$i] = max($dec->[$i], $dec->[$j] + $arr->[$i]);\n            }\n        }\n    }\n    my $max = 0;\n    for(my $i = 0; $i < $n; $i++) {\n        $max = max($max, $inc->[$i] + $dec->[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $n = @$arr;\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    for my $i (0..$n-1) {\n        $inc[$i] = $arr->[$i];\n        for my $j (0..$i-1) {\n            if ($arr->[$j] < $arr->[$i]) {\n                $inc[$i] = max($inc[$i], $inc[$j] + $arr->[$i]);\n            }\n        }\n    }\n    for my $i ($n-1..0) {\n        $dec[$i] = $arr->[$i];\n        for my $j ($i+1..$n-1) {\n            if ($arr->[$j] < $arr->[$i]) {\n                $dec[$i] = max($dec[$i], $dec[$j] + $arr->[$i]);\n            }\n        }\n    }\n    for my $i (0..$n-1) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar @$arr;\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;",
    "    my $n = scalar @$arr;\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;",
    "    my $n = scalar @$arr;\n    my $inc = [ (0) x $n ];\n    my $dec = [ (0) x $n ];\n    $inc->[0] = $arr->[0];\n    $dec->[$n-1] = $arr->[$n-1];\n    for my $i (1 .. $n-1) {\n        $inc->[$i] = max($inc->[$i-1], $arr->[$i]);\n    }\n    for my $i (reverse 0 .. $n-2) {\n        $dec->[$i] = max($dec->[$i+1], $arr->[$i]);\n    }\n    my $max = 0;\n    for my $i (0 .. $n-1) {\n        $max = max($max, $inc->[$i] + $dec->[$i]);\n    }\n    return $max;\n}",
    "    my @inc = @{inc_sum($arr)};\n    my @dec = @{dec_sum($arr)};\n    my $max = 0;\n    for my $i (0..$#inc) {\n        $max = $inc[$i] + $dec[$i] - $arr->[$i] if $inc[$i] + $dec[$i] - $arr->[$i] > $max;\n    }\n    return $max;\n}",
    "    my $len = scalar @$arr;\n    my @inc = (0) x $len;\n    my @dec = (0) x $len;",
    "    my $n = scalar @$arr;\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $arr->[0];\n    $dec[$n-1] = $arr->[$n-1];\n    for(my $i = 1; $i < $n; $i++) {\n        for(my $j = 0; $j < $i; $j++) {\n            if($arr->[$j] < $arr->[$i]) {\n                $inc[$i] = max($inc[$i], $inc[$j] + $arr->[$i]);\n            }\n        }\n    }\n    for(my $i = $n-2; $i >= 0; $i--) {\n        for(my $j = $n-1; $j > $i; $j--) {\n            if($arr->[$j] < $arr->[$i]) {\n                $dec[$i] = max($dec[$i], $dec[$j] + $arr->[$i]);\n            }\n        }\n    }\n    my $max = 0;\n    for(my $i = 0; $i < $n; $i++) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $len = scalar(@$arr);\n    my $max = $arr->[0];\n    my $max_sum = 0;\n    for (my $i = 0; $i < $len; $i++) {\n        my $sum = 0;\n        for (my $j = $i; $j < $len; $j++) {\n            $sum += $arr->[$j];\n            if ($sum > $max_sum) {\n                $max_sum = $sum;\n            }\n        }\n    }\n    return $max_sum;\n}",
    "    my $n = scalar(@$arr);\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $arr->[0];\n    $dec[$n - 1] = $arr->[$n - 1];\n    for my $i (1 .. $n - 1) {\n        $inc[$i] = max($inc[$i - 1], $arr->[$i]);\n    }\n    for my $i (reverse(0 .. $n - 2)) {\n        $dec[$i] = max($dec[$i + 1], $arr->[$i]);\n    }\n    my $max = 0;\n    for my $i (0 .. $n - 1) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar @$arr;\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $arr->[0];\n    $dec[$n-1] = $arr->[$n-1];\n    for my $i (1..$n-1) {\n        $inc[$i] = max($inc[$i-1] + $arr->[$i], $arr->[$i]);\n    }\n    for my $i (reverse 1..$n-1) {\n        $dec[$i-1] = max($dec[$i] + $arr->[$i-1], $arr->[$i-1]);\n    }\n    my $max = 0;\n    for my $i (0..$n-1) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my @inc = (0) x scalar @$arr;\n    my @dec = (0) x scalar @$arr;",
    "    my $max_sum = 0;\n    my $n = scalar @$arr;\n    for my $i (0..$n-1) {\n        my $sum = 0;\n        for my $j (0..$i) {\n            $sum += $arr->[$j];\n        }\n        for my $j ($i..$n-1) {\n            $sum += $arr->[$j];\n        }\n        $max_sum = $sum if $sum > $max_sum;\n    }\n    return $max_sum;\n}",
    "    my $n = scalar(@$arr);\n    my $inc = [ (0) x $n ];\n    my $dec = [ (0) x $n ];",
    "    my $n = scalar @$arr;\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $arr->[0];\n    $dec[$n-1] = $arr->[$n-1];\n    for(my $i = 1; $i < $n; $i++) {\n        $inc[$i] = max($arr->[$i], $inc[$i-1] + $arr->[$i]);\n    }\n    for(my $i = $n-2; $i >= 0; $i--) {\n        $dec[$i] = max($arr->[$i], $dec[$i+1] + $arr->[$i]);\n    }\n    my $max = $inc[0] + $dec[0] - $arr->[0];\n    for(my $i = 1; $i < $n; $i++) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar @$arr;\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;",
    "    my $n = scalar(@$arr);\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $arr->[0];\n    $dec[$n-1] = $arr->[$n-1];\n    for(my $i=1; $i<$n; $i++) {\n        $inc[$i] = $arr->[$i];\n        for(my $j=0; $j<$i; $j++) {\n            if($arr->[$i] > $arr->[$j]) {\n                $inc[$i] = max($inc[$i], $inc[$j] + $arr->[$i]);\n            }\n        }\n    }\n    for(my $i=$n-2; $i>=0; $i--) {\n        $dec[$i] = $arr->[$i];\n        for(my $j=$n-1; $j>$i; $j--) {\n            if($arr->[$i] > $arr->[$j]) {\n                $dec[$i] = max($dec[$i], $dec[$j] + $arr->[$i]);\n            }\n        }\n    }\n    my $max = 0;\n    for(my $i=0; $i<$n; $i++) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar @$arr;\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $arr->[0];\n    $dec[$n-1] = $arr->[$n-1];\n    for (my $i = 1; $i < $n; $i++) {\n        $inc[$i] = $arr->[$i];\n        for (my $j = 0; $j < $i; $j++) {\n            if ($arr->[$j] < $arr->[$i]) {\n                $inc[$i] = max($inc[$i], $inc[$j] + $arr->[$i]);\n            }\n        }\n    }\n    for (my $i = $n-2; $i >= 0; $i--) {\n        $dec[$i] = $arr->[$i];\n        for (my $j = $n-1; $j > $i; $j--) {\n            if ($arr->[$j] < $arr->[$i]) {\n                $dec[$i] = max($dec[$i], $dec[$j] + $arr->[$i]);\n            }\n        }\n    }\n    my $max = 0;\n    for (my $i = 0; $i < $n; $i++) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $arr->[0];\n    $dec[$n-1] = $arr->[$n-1];\n    for(my $i=1; $i<$n; $i++) {\n        $inc[$i] = $arr->[$i];\n        for(my $j=0; $j<$i; $j++) {\n            if($arr->[$i] > $arr->[$j]) {\n                $inc[$i] = max($inc[$i], $inc[$j] + $arr->[$i]);\n            }\n        }\n    }\n    for(my $i=$n-2; $i>=0; $i--) {\n        $dec[$i] = $arr->[$i];\n        for(my $j=$n-1; $j>$i; $j--) {\n            if($arr->[$i] > $arr->[$j]) {\n                $dec[$i] = max($dec[$i], $dec[$j] + $arr->[$i]);\n            }\n        }\n    }\n    my $max = 0;\n    for(my $i=0; $i<$n; $i++) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar @$arr;\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $dec[$n-1] = $arr->[0];\n    for my $i (1..$n-1) {\n        $inc[$i] = $arr->[$i] + max($inc[$i-1], 0);\n        $dec[$n-$i-1] = $arr->[$n-$i-1] + max($dec[$n-$i], 0);\n    }\n    my $max = 0;\n    for my $i (0..$n-1) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar @$arr;\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $dec[$n-1] = $arr->[0];\n    for my $i (1..$n-1) {\n        $inc[$i] = max($inc[$i-1] + $arr->[$i], $arr->[$i]);\n        $dec[$n-$i-1] = max($dec[$n-$i] + $arr->[$n-$i-1], $arr->[$n-$i-1]);\n    }\n    my $max = $inc[0] + $dec[0] - $arr->[0];\n    for my $i (1..$n-1) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar @$arr;\n    my $inc = [map {$_} (0..$n-1)];\n    my $dec = [map {$_} (0..$n-1)];\n    for my $i (1..$n-1) {\n        for my $j (0..$i-1) {\n            if ($arr->[$i] > $arr->[$j] && $inc->[$i] < $inc->[$j] + $arr->[$i]) {\n                $inc->[$i] = $inc->[$j] + $arr->[$i];\n            }\n        }\n    }\n    for my $i ($n-2..0) {\n        for my $j ($n-1..$i+1) {\n            if ($arr->[$i] > $arr->[$j] && $dec->[$i] < $dec->[$j] + $arr->[$i]) {\n                $dec->[$i] = $dec->[$j] + $arr->[$i];\n            }\n        }\n    }\n    my $max = 0;\n    for my $i (0..$n-1) {\n        $max = $inc->[$i] + $dec->[$i] - $arr->[$i] if $max < $inc->[$i] + $dec->[$i] - $arr->[$i];\n    }\n    return $max;\n}",
    "    my $n = scalar @$arr;\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $dec[$n-1] = $arr->[0];\n    for my $i (1..$n-1) {\n        $inc[$i] = max($arr->[$i], $inc[$i-1] + $arr->[$i]);\n        $dec[$n-$i-1] = max($arr->[$n-$i-1], $dec[$n-$i] + $arr->[$n-$i-1]);\n    }\n    my $max = $inc[0] + $dec[0] - $arr->[0];\n    for my $i (1..$n-1) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $arr->[0];\n    $dec[$n-1] = $arr->[$n-1];\n    for my $i (1..$n-1) {\n        $inc[$i] = max($inc[$i-1], $arr->[$i]);\n    }\n    for my $i ($n-2..0) {\n        $dec[$i] = max($dec[$i+1], $arr->[$i]);\n    }\n    my $max = 0;\n    for my $i (0..$n-1) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    my $inc = [0..$n-1];\n    my $dec = [0..$n-1];\n    my $max = $arr->[0];\n    for my $i (1..$n-1) {\n        for my $j (0..$i-1) {\n            if ($arr->[$i] > $arr->[$j] && $inc->[$i] < $inc->[$j] + $arr->[$i]) {\n                $inc->[$i] = $inc->[$j] + $arr->[$i];\n            }\n        }\n        $max = $inc->[$i] if $max < $inc->[$i];\n    }\n    for my $i (reverse 0..$n-2) {\n        for my $j (reverse 0..$i+1) {\n            if ($arr->[$i] > $arr->[$j] && $dec->[$i] < $dec->[$j] + $arr->[$i]) {\n                $dec->[$i] = $dec->[$j] + $arr->[$i];\n            }\n        }\n        $max = $dec->[$i] if $max < $dec->[$i];\n    }\n    for my $i (0..$n-2) {\n        $max = $inc->[$i] + $dec->[$i] - $arr->[$i] if $max < $inc->[$i] + $dec->[$i] - $arr->[$i];\n    }\n    return $max;\n}",
    "    my $n = scalar @$arr;\n    my @l = (0) x $n;\n    my @r = (0) x $n;\n    $l[0] = $arr->[0];\n    $r[$n-1] = $arr->[$n-1];\n    for (my $i = 1; $i < $n; $i++) {\n        $l[$i] = max($arr->[$i], $l[$i-1] + $arr->[$i]);\n    }\n    for (my $i = $n-2; $i >= 0; $i--) {\n        $r[$i] = max($arr->[$i], $r[$i+1] + $arr->[$i]);\n    }\n    my $max = $l[0] + $r[1];\n    for (my $i = 1; $i < $n-1; $i++) {\n        $max = max($max, $l[$i] + $r[$i+1]);\n    }\n    return $max;\n}",
    "    my $n = scalar @$arr;\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $arr->[0];\n    $dec[$n-1] = $arr->[$n-1];\n    for my $i (1..$n-1) {\n        $inc[$i] = max($inc[$i-1], $arr->[$i]);\n    }\n    for my $i (reverse 0..$n-2) {\n        $dec[$i] = max($dec[$i+1], $arr->[$i]);\n    }\n    my $max = 0;\n    for my $i (0..$n-1) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $len = scalar @$arr;\n    for my $i (0..$len-1) {\n        my $sum = 0;\n        my $j = $i;\n        while ($j < $len) {\n            $sum += $arr->[$j];\n            $j++;\n            if ($j < $len && $arr->[$j] < $arr->[$j-1]) {\n                last;\n            }\n        }\n        while ($j < $len) {\n            $sum += $arr->[$j];\n            $j++;\n            if ($j < $len && $arr->[$j] > $arr->[$j-1]) {\n                last;\n            }\n        }\n        $max = $sum if $sum > $max;\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    my $inc = [0];\n    my $dec = [0];\n    my $max = 0;\n    for my $i (0..$n-1) {\n        $inc->[$i] = $arr->[$i];\n        for my $j (0..$i-1) {\n            if ($arr->[$j] < $arr->[$i]) {\n                $inc->[$i] = max($inc->[$i], $inc->[$j] + $arr->[$i]);\n            }\n        }\n    }\n    for my $i ($n-1..0) {\n        $dec->[$i] = $arr->[$i];\n        for my $j ($i+1..$n-1) {\n            if ($arr->[$j] < $arr->[$i]) {\n                $dec->[$i] = max($dec->[$i], $dec->[$j] + $arr->[$i]);\n            }\n        }\n    }\n    for my $i (0..$n-1) {\n        $max = max($max, $inc->[$i] + $dec->[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar @$arr;\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;",
    "    my $n = scalar(@$arr);\n    my $inc = [@$arr];\n    my $dec = [@$arr];\n    for my $i (1..$n-1) {\n        for my $j (0..$i-1) {\n            if ($arr->[$i] > $arr->[$j] && $inc->[$i] < $inc->[$j] + $arr->[$i]) {\n                $inc->[$i] = $inc->[$j] + $arr->[$i];\n            }\n        }\n    }\n    for my $i (reverse(0..$n-2)) {\n        for my $j (reverse($i+1..$n-1)) {\n            if ($arr->[$i] > $arr->[$j] && $dec->[$i] < $dec->[$j] + $arr->[$i]) {\n                $dec->[$i] = $dec->[$j] + $arr->[$i];\n            }\n        }\n    }\n    my $max = 0;\n    for my $i (0..$n-1) {\n        $max = $inc->[$i] + $dec->[$i] - $arr->[$i] if $max < $inc->[$i] + $dec->[$i] - $arr->[$i];\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $sum = 0;\n    my $i = 0;\n    my $j = $#{$arr};\n    while ($i <= $j) {\n        if ($arr->[$i] < $arr->[$j]) {\n            $sum += $arr->[$i];\n            $i++;\n        } else {\n            $sum += $arr->[$j];\n            $j--;\n        }\n        $max = $sum if $sum > $max;\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    my $inc = [0];\n    my $dec = [0];\n    for(my $i = 1; $i < $n; $i++) {\n        $inc->[$i] = $arr->[$i];\n        for(my $j = 0; $j < $i; $j++) {\n            if($arr->[$j] < $arr->[$i]) {\n                $inc->[$i] = max($inc->[$i], $inc->[$j] + $arr->[$i]);\n            }\n        }\n    }\n    for(my $i = $n - 2; $i >= 0; $i--) {\n        $dec->[$i] = $arr->[$i];\n        for(my $j = $n - 1; $j > $i; $j--) {\n            if($arr->[$j] < $arr->[$i]) {\n                $dec->[$i] = max($dec->[$i], $dec->[$j] + $arr->[$i]);\n            }\n        }\n    }\n    my $max = 0;\n    for(my $i = 0; $i < $n; $i++) {\n        $max = max($max, $inc->[$i] + $dec->[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar @$arr;\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $arr->[0];\n    $dec[$n-1] = $arr->[$n-1];\n    for my $i (1 .. $n-1) {\n        $inc[$i] = $arr->[$i];\n        for my $j (0 .. $i-1) {\n            if ($arr->[$i] > $arr->[$j]) {\n                $inc[$i] = max($inc[$i], $inc[$j] + $arr->[$i]);\n            }\n        }\n    }\n    for my $i ($n-2 .. 0) {\n        $dec[$i] = $arr->[$i];\n        for my $j ($i+1 .. $n-1) {\n            if ($arr->[$i] > $arr->[$j]) {\n                $dec[$i] = max($dec[$i], $dec[$j] + $arr->[$i]);\n            }\n        }\n    }\n    my $max = $inc[0] + $dec[0] - $arr->[0];\n    for my $i (1 .. $n-1) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar @$arr;\n    my $inc = [ (0) x $n ];\n    my $dec = [ (0) x $n ];",
    "    my $max = 0;\n    my $n = scalar(@$arr);\n    for (my $i = 0; $i < $n; $i++) {\n        my $sum = 0;\n        for (my $j = $i; $j < $n; $j++) {\n            $sum += $arr->[$j];\n            $max = $sum if $sum > $max;\n        }\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $dec[0] = $arr->[0];\n    for my $i (1..$n-1) {\n        $inc[$i] = $arr->[$i];\n        for my $j (0..$i-1) {\n            if ($arr->[$i] > $arr->[$j]) {\n                $inc[$i] = max($inc[$i], $inc[$j] + $arr->[$i]);\n            }\n        }\n        $dec[$i] = $arr->[$i];\n        for my $j (0..$i-1) {\n            if ($arr->[$i] < $arr->[$j]) {\n                $dec[$i] = max($dec[$i], $dec[$j] + $arr->[$i]);\n            }\n        }\n    }\n    my $max = $inc[0] + $dec[0] - $arr->[0];\n    for my $i (1..$n-1) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my @inc = (0) x scalar @$arr;\n    my @dec = (0) x scalar @$arr;\n    $inc[0] = $dec[0] = $arr->[0];\n    for my $i (1..$#$arr) {\n        $inc[$i] = max($inc[$i-1] + $arr->[$i], $arr->[$i]);\n        $dec[$i] = max($dec[$i-1] + $arr->[$i], $arr->[$i]);\n    }\n    my $max = $arr->[0];\n    for my $i (1..$#$arr) {\n        $max = max($max, $inc[$i-1] + $dec[$i]);\n    }\n    return $max;\n}",
    "    my @inc = @$arr;\n    my @dec = @$arr;\n    for my $i (0..$#$arr) {\n        for my $j (0..$i-1) {\n            if ($arr->[$j] < $arr->[$i]) {\n                $inc[$i] = max($inc[$i], $inc[$j] + $arr->[$i]);\n            }\n        }\n    }\n    for my $i (reverse 0..$#$arr) {\n        for my $j (reverse 0..$i+1) {\n            if ($arr->[$j] < $arr->[$i]) {\n                $dec[$i] = max($dec[$i], $dec[$j] + $arr->[$i]);\n            }\n        }\n    }\n    my $max = 0;\n    for my $i (0..$#$arr) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar @$arr;\n    my $inc = [0..$n-1];\n    my $dec = [0..$n-1];\n    for my $i (1..$n-1) {\n        for my $j (0..$i-1) {\n            if ($arr->[$i] > $arr->[$j] && $inc->[$i] < $inc->[$j] + $arr->[$i]) {\n                $inc->[$i] = $inc->[$j] + $arr->[$i];\n            }\n        }\n    }\n    for my $i ($n-2..0) {\n        for my $j ($n-1..$i+1) {\n            if ($arr->[$i] > $arr->[$j] && $dec->[$i] < $dec->[$j] + $arr->[$i]) {\n                $dec->[$i] = $dec->[$j] + $arr->[$i];\n            }\n        }\n    }\n    my $max = 0;\n    for my $i (0..$n-1) {\n        $max = $inc->[$i] + $dec->[$i] - $arr->[$i] if $max < $inc->[$i] + $dec->[$i] - $arr->[$i];\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    my $inc = [ (0) x $n ];\n    my $dec = [ (0) x $n ];\n    $inc->[0] = $arr->[0];\n    $dec->[$n-1] = $arr->[$n-1];\n    for my $i (1..$n-1) {\n        $inc->[$i] = $arr->[$i];\n        for my $j (0..$i-1) {\n            if ($arr->[$i] > $arr->[$j]) {\n                $inc->[$i] = max($inc->[$i], $inc->[$j] + $arr->[$i]);\n            }\n        }\n    }\n    for my $i (reverse 0..$n-2) {\n        $dec->[$i] = $arr->[$i];\n        for my $j (reverse $i+1..$n-1) {\n            if ($arr->[$i] > $arr->[$j]) {\n                $dec->[$i] = max($dec->[$i], $dec->[$j] + $arr->[$i]);\n            }\n        }\n    }\n    my $max = 0;\n    for my $i (0..$n-1) {\n        $max = max($max, $inc->[$i] + $dec->[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $arr->[0];\n    $dec[$n-1] = $arr->[$n-1];\n    for my $i (1..$n-1) {\n        $inc[$i] = $arr->[$i] + max($inc[$i-1], 0);\n        $dec[$n-$i-1] = $arr->[$n-$i-1] + max($dec[$n-$i], 0);\n    }\n    my $max = $inc[0] + $dec[0];\n    for my $i (1..$n-1) {\n        $max = max($max, $inc[$i] + $dec[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar @$arr;\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;",
    "    my $n = scalar(@$arr);\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $arr->[0];\n    $dec[$n-1] = $arr->[$n-1];\n    for (my $i = 1; $i < $n; $i++) {\n        $inc[$i] = $arr->[$i];\n        for (my $j = 0; $j < $i; $j++) {\n            if ($arr->[$i] > $arr->[$j]) {\n                $inc[$i] = max($inc[$i], $inc[$j] + $arr->[$i]);\n            }\n        }\n    }\n    for (my $i = $n-2; $i >= 0; $i--) {\n        $dec[$i] = $arr->[$i];\n        for (my $j = $n-1; $j > $i; $j--) {\n            if ($arr->[$i] > $arr->[$j]) {\n                $dec[$i] = max($dec[$i], $dec[$j] + $arr->[$i]);\n            }\n        }\n    }\n    my $max = 0;\n    for (my $i = 0; $i < $n; $i++) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar @$arr;\n    my @inc = (0) x $n;\n    my @dec = (0) x $n;\n    $inc[0] = $arr->[0];\n    $dec[$n-1] = $arr->[$n-1];\n    for my $i (1..$n-1) {\n        $inc[$i] = $arr->[$i] + max($inc[$i-1], 0);\n    }\n    for my $i (reverse 0..$n-2) {\n        $dec[$i] = $arr->[$i] + max($dec[$i+1], 0);\n    }\n    my $max = 0;\n    for my $i (0..$n-1) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}",
    "    my $len = scalar(@$arr);\n    my @inc = (0) x $len;\n    my @dec = (0) x $len;\n    $inc[0] = $arr->[0];\n    $dec[$len-1] = $arr->[$len-1];\n    for my $i (1..$len-1) {\n        $inc[$i] = max($inc[$i-1], $arr->[$i]);\n    }\n    for my $i ($len-2..0) {\n        $dec[$i] = max($dec[$i+1], $arr->[$i]);\n    }\n    my $max = 0;\n    for my $i (0..$len-1) {\n        $max = max($max, $inc[$i] + $dec[$i]);\n    }\n    return $max;\n}",
    "    my $n = scalar(@$arr);\n    my $inc = [ map { $_ } (0..$n-1) ];\n    my $dec = [ map { $_ } (0..$n-1) ];\n    for my $i (1..$n-1) {\n        for my $j (0..$i-1) {\n            if ($arr->[$i] > $arr->[$j] && $inc->[$i] < $inc->[$j] + $arr->[$i]) {\n                $inc->[$i] = $inc->[$j] + $arr->[$i];\n            }\n        }\n    }\n    for my $i (reverse(0..$n-2)) {\n        for my $j ($i+1..$n-1) {\n            if ($arr->[$i] > $arr->[$j] && $dec->[$i] < $dec->[$j] + $arr->[$i]) {\n                $dec->[$i] = $dec->[$j] + $arr->[$i];\n            }\n        }\n    }\n    my $max = 0;\n    for my $i (0..$n-1) {\n        $max = $inc->[$i] + $dec->[$i] - $arr->[$i] if $max < $inc->[$i] + $dec->[$i] - $arr->[$i];\n    }\n    return $max;\n}",
    "    my @inc = (0) x scalar @$arr;\n    my @dec = (0) x scalar @$arr;\n    $inc[0] = $dec[0] = $arr->[0];\n    for my $i (1..$#$arr) {\n        $inc[$i] = $arr->[$i];\n        $dec[$i] = $arr->[$i];\n        for my $j (0..$i-1) {\n            if ($arr->[$i] > $arr->[$j]) {\n                $inc[$i] = max($inc[$i], $inc[$j] + $arr->[$i]);\n            }\n            if ($arr->[$i] < $arr->[$j]) {\n                $dec[$i] = max($dec[$i], $dec[$j] + $arr->[$i]);\n            }\n        }\n    }\n    my $max = 0;\n    for my $i (0..$#$arr) {\n        $max = max($max, $inc[$i] + $dec[$i] - $arr->[$i]);\n    }\n    return $max;\n}"
  ]
}
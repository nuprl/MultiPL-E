{
  "name": "mbpp_562_Find_Max_Length",
  "language": "pl",
  "prompt": "# Write a plthon function to find the length of the longest subarrays.\nsub Find_Max_Length {\n    my($lst) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_562_Find_Max_Length.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&Find_Max_Length;\n        if(eq_deeply($candidate->([[1], [1, 4], [5, 6, 7, 8]]),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[0, 1], [2, 2], [3, 2, 1]]),3)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[7], [22, 23], [13, 14, 15], [10, 20, 30, 40, 50]]),5)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my $max = 0;\n    my $count = 0;\n    for(my $i = 0; $i < scalar @$lst; $i++) {\n        if($lst->[$i] == 0) {\n            $count++;\n        }\n        else {\n            $count = 0;\n        }\n        if($count > $max) {\n            $max = $count;\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $count = 0;\n    my $i = 0;\n    my $len = scalar(@$lst);\n    while($i < $len) {\n        if($lst->[$i] == 1) {\n            $count++;\n            if($count > $max) {\n                $max = $count;\n            }\n        } else {\n            $count = 0;\n        }\n        $i++;\n    }\n    return $max;\n}",
    "    my $max_length = 0;\n    my $length = 0;\n    for(my $i=0; $i<@$lst; $i++) {\n        if($lst->[$i] == 1) {\n            $length++;\n        } else {\n            $length = 0;\n        }\n        if($length > $max_length) {\n            $max_length = $length;\n        }\n    }\n    return $max_length;\n}",
    "    my $max_length = 0;\n    my $length = 0;\n    my $i = 0;\n    my $j = 0;\n    my $n = scalar(@$lst);\n    while ($i < $n) {\n        if ($lst->[$i] == 0) {\n            $length = 0;\n            $j = $i + 1;\n            while ($j < $n && $lst->[$j] == 0) {\n                $length++;\n                $j++;\n            }\n            if ($length > $max_length) {\n                $max_length = $length;\n            }\n            $i = $j;\n        } else {\n            $i++;\n        }\n    }\n    return $max_length;\n}",
    "    my $max_length = 0;\n    my $cur_length = 0;\n    my $prev_zero = -1;\n    my $cur_zero = -1;\n    for(my $i = 0; $i < scalar(@$lst); $i++) {\n        if($lst->[$i] == 0) {\n            $cur_zero = $i;\n            if($prev_zero == -1) {\n                $cur_length = $i + 1;\n            } else {\n                $cur_length = $i - $prev_zero - 1;\n            }\n            $prev_zero = $cur_zero;\n        } else {\n            $cur_length++;\n        }\n        if($cur_length > $max_length) {\n            $max_length = $cur_length;\n        }\n    }\n    return $max_length;\n}",
    "    my $max_length = 0;\n    my $curr_length = 0;\n    my $prev_zero = -1;\n    my $n = scalar(@$lst);\n    for(my $i = 0; $i < $n; $i++) {\n        if($lst->[$i] == 0) {\n            if($prev_zero != -1) {\n                $curr_length = $i - $prev_zero - 1;\n            } else {\n                $curr_length = $i;\n            }\n            $prev_zero = $i;\n        } else {\n            $curr_length++;\n        }\n        if($curr_length > $max_length) {\n            $max_length = $curr_length;\n        }\n    }\n    return $max_length;\n}",
    "    my $max_length = 0;\n    my $length = 0;\n    my $i = 0;\n    while ($i < scalar(@$lst)) {\n        if ($lst->[$i] == 1) {\n            $length++;\n        } else {\n            $length = 0;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n        $i++;\n    }\n    return $max_length;\n}",
    "    my $max_len = 0;\n    my $len = 0;\n    my $i = 0;\n    my $j = 0;\n    my $n = @$lst;\n    while($i < $n) {\n        if($lst->[$i] == 0) {\n            $len = 0;\n            $j = $i + 1;\n            while($j < $n && $lst->[$j] == 0) {\n                $len++;\n                $j++;\n            }\n            if($len > $max_len) {\n                $max_len = $len;\n            }\n            $i = $j;\n        }\n        else {\n            $i++;\n        }\n    }\n    return $max_len;\n}",
    "    my $max_length = 0;\n    my $length = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r =",
    "    my $max_length = 0;\n    my $length = 0;\n    my $i = 0;\n    while ($i < scalar(@$lst)) {\n        if ($lst->[$i] == 1) {\n            $length++;\n        } else {\n            $length = 0;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n        $i++;\n    }\n    return $max_length;\n}",
    "    my $max_length = 0;\n    my $cur_length = 0;\n    my $prev_length = 0;\n    my $prev_char = '';\n    my $cur_char = '';\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n =",
    "    my $max_len = 0;\n    my $curr_len = 0;\n    for (my $i = 0; $i < @$lst; $i++) {\n        if ($lst->[$i] == 0) {\n            $curr_len = 0;\n        } else {\n            $curr_len++;\n            $max_len = $curr_len if ($max_len < $curr_len);\n        }\n    }\n    return $max_len;\n}",
    "    my $max_length = 0;\n    my $count = 0;\n    my $i = 0;\n    while($i < scalar(@$lst)) {\n        if($lst->[$i] == 0) {\n            $count++;\n        }\n        else {\n            $count--;\n        }\n        if($count == 0) {\n            $max_length = $i + 1;\n        }\n        $i++;\n    }\n    return $max_length;\n}",
    "    my $max_len = 0;\n    my $len = 0;\n    my $i = 0;\n    my $j = 0;\n    my $n = scalar(@$lst);\n    while($i < $n) {\n        if($lst->[$i] == 0) {\n            $len = 0;\n            $j = $i;\n            while($j < $n && $lst->[$j] == 0) {\n                $len++;\n                $j++;\n            }\n            if($len > $max_len) {\n                $max_len = $len;\n            }\n            $i = $j;\n        }\n        else {\n            $i++;\n        }\n    }\n    return $max_len;\n}",
    "    my $max_len = 0;\n    my $cur_len = 0;\n    my $prev_len = 0;\n    my $prev_val = 0;\n    my $cur_val = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n    my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $a = 0;\n    my $b = 0;\n    my $c = 0;\n    my $d = 0;\n    my $e = 0;\n    my $f = 0;\n    my $g = 0;\n    my $h = 0;\n    my $i = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my $m = 0;\n    my $n =",
    "    my $max_length = 0;\n    my $length = 0;\n    my $i = 0;\n    while ($i < scalar(@$lst)) {\n        if ($lst->[$i] == 1) {\n            $length++;\n        } else {\n            $length = 0;\n        }\n        if ($length > $max_length) {\n            $max_length = $length;\n        }\n        $i++;\n    }\n    return $max_length;\n}",
    "    my $max_len = 0;\n    my $curr_len = 0;\n    my $i = 0;\n    while($i < scalar(@$lst)) {\n        if($lst->[$i] == 0) {\n            $curr_len = 0;\n        }\n        else {\n            $curr_len++;\n            if($curr_len > $max_len) {\n                $max_len = $curr_len;\n            }\n        }\n        $i++;\n    }\n    return $max_len;\n}",
    "    my $max = 0;\n    my $count = 0;\n    foreach my $i (@$lst) {\n        if ($i == 0) {\n            $count = 0;\n        } else {\n            $count++;\n            $max = $count if $count > $max;\n        }\n    }\n    return $max;\n}",
    "    my $max_length = 0;\n    my $length = 0;\n    my $i = 0;\n    my $j = 0;\n    my $n = scalar(@$lst);\n    while ($i < $n) {\n        if ($lst->[$i] == 0) {\n            $length = 0;\n            $i++;\n        }\n        else {\n            $j = $i;\n            while ($j < $n && $lst->[$j] == 1) {\n                $length++;\n                $j++;\n            }\n            $i = $j;\n            if ($length > $max_length) {\n                $max_length = $length;\n            }\n        }\n    }\n    return $max_length;\n}",
    "    my $max_len = 0;\n    my $cur_len = 0;\n    my $i = 0;\n    my $j = 0;\n    my $n = @$lst;\n    while($i < $n) {\n        if($lst->[$i] == 0) {\n            $cur_len = 0;\n            $j = $i + 1;\n            while($j < $n && $lst->[$j] == 0) {\n                $cur_len++;\n                $j++;\n            }\n            if($cur_len > $max_len) {\n                $max_len = $cur_len;\n            }\n            $i = $j;\n        }\n        else {\n            $i++;\n        }\n    }\n    return $max_len;\n}"
  ]
}
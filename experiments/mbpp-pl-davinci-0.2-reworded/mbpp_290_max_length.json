{
  "name": "mbpp_290_max_length",
  "language": "pl",
  "prompt": "# Write a function to find the array of maximum length in an array of arrays.\nsub max_length {\n    my($list1) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_290_max_length.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&max_length;\n        if(eq_deeply($candidate->([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]),[3, [13, 15, 17]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[1], [5, 7], [10, 12, 14, 15]]),[4, [10, 12, 14, 15]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[5], [15, 20, 25]]),[3, [15, 20, 25]])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my $max = 0;\n    my $max_array;\n    foreach my $array (@$list1) {\n        my $length = scalar @$array;\n        if ($length > $max) {\n            $max = $length;\n            $max_array = $array;\n        }\n    }\n    return $max_array;\n}",
    "    my $max = 0;\n    my $max_list;\n    for my $list (@$list1) {\n        if (scalar(@$list) > $max) {\n            $max = scalar(@$list);\n            $max_list = $list;\n        }\n    }\n    return $max_list;\n}",
    "    my $max = 0;\n    my $max_array;\n    foreach my $array (@$list1) {\n        my $length = scalar(@$array);\n        if ($length > $max) {\n            $max = $length;\n            $max_array = $array;\n        }\n    }\n    return $max_array;\n}",
    "    my $max_length = 0;\n    my $max_length_array;\n    foreach my $list2 (@$list1) {\n        my $length = scalar @$list2;\n        if ($length > $max_length) {\n            $max_length = $length;\n            $max_length_array = $list2;\n        }\n    }\n    return $max_length_array;\n}",
    "    my $max_length = 0;\n    my $max_length_array;\n    foreach my $list2 (@$list1) {\n        my $length = scalar @$list2;\n        if ($length > $max_length) {\n            $max_length = $length;\n            $max_length_array = $list2;\n        }\n    }\n    return $max_length_array;\n}",
    "    my $max = 0;\n    my $max_list;\n    foreach my $list (@$list1) {\n        if (scalar @$list > $max) {\n            $max = scalar @$list;\n            $max_list = $list;\n        }\n    }\n    return $max_list;\n}",
    "    my $max = 0;\n    my $max_list;\n    foreach my $list (@$list1) {\n        if (@$list > $max) {\n            $max = @$list;\n            $max_list = $list;\n        }\n    }\n    return $max_list;\n}",
    "    my $max = 0;\n    my $max_list;\n    foreach my $list (@$list1) {\n        if (scalar @$list > $max) {\n            $max = scalar @$list;\n            $max_list = $list;\n        }\n    }\n    return $max_list;\n}",
    "    my $max = 0;\n    my $max_list;\n    foreach my $list2 (@$list1) {\n        if (scalar @$list2 > $max) {\n            $max = scalar @$list2;\n            $max_list = $list2;\n        }\n    }\n    return $max_list;\n}",
    "    my $max_length = 0;\n    my @max_length_array;\n    foreach my $list2 (@$list1) {\n        if (scalar @$list2 > $max_length) {\n            $max_length = scalar @$list2;\n            @max_length_array = @$list2;\n        }\n    }\n    return @max_length_array;\n}",
    "    my $max = 0;\n    my $max_list;\n    foreach my $list2 (@$list1) {\n        my $len = @$list2;\n        if ($len > $max) {\n            $max = $len;\n            $max_list = $list2;\n        }\n    }\n    return $max_list;\n}",
    "    my $max = 0;\n    my $max_list;\n    foreach my $list (@$list1) {\n        if (@$list > $max) {\n            $max = @$list;\n            $max_list = $list;\n        }\n    }\n    return $max_list;\n}",
    "    my $max = 0;\n    my $max_list;\n    foreach my $list (@$list1) {\n        if (scalar(@$list) > $max) {\n            $max = scalar(@$list);\n            $max_list = $list;\n        }\n    }\n    return $max_list;\n}",
    "    my $max_length = 0;\n    my @max_length_array;\n    foreach my $list2 (@$list1) {\n        if (scalar(@$list2) > $max_length) {\n            $max_length = scalar(@$list2);\n            @max_length_array = @$list2;\n        }\n    }\n    return @max_length_array;\n}",
    "    my $max_length = 0;\n    my $max_length_array;\n    foreach my $array (@$list1) {\n        if (scalar @$array > $max_length) {\n            $max_length = scalar @$array;\n            $max_length_array = $array;\n        }\n    }\n    return $max_length_array;\n}",
    "    my $max_length = 0;\n    my $max_length_array;\n    foreach my $list2 (@$list1) {\n        if (scalar(@$list2) > $max_length) {\n            $max_length = scalar(@$list2);\n            $max_length_array = $list2;\n        }\n    }\n    return $max_length_array;\n}",
    "    my $max = 0;\n    my $max_list;\n    foreach my $list (@$list1) {\n        if (@$list > $max) {\n            $max = @$list;\n            $max_list = $list;\n        }\n    }\n    return $max_list;\n}",
    "    my $max = 0;\n    my $max_list;\n    foreach my $list (@$list1) {\n        if (scalar @$list > $max) {\n            $max = scalar @$list;\n            $max_list = $list;\n        }\n    }\n    return $max_list;\n}",
    "    my $max = 0;\n    foreach my $list2 (@$list1) {\n        my $length = @$list2;\n        $max = $length if $length > $max;\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $max_list;\n    foreach my $list (@$list1) {\n        if (@$list > $max) {\n            $max = @$list;\n            $max_list = $list;\n        }\n    }\n    return $max_list;\n}"
  ]
}
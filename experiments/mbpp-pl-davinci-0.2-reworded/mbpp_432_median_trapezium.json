{
  "name": "mbpp_432_median_trapezium",
  "language": "pl",
  "prompt": "# Write a function to find the median length of a trapezium.\nsub median_trapezium {\n    my($base1, $base2, $height) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_432_median_trapezium.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&median_trapezium;\n        if(eq_deeply($candidate->(15, 25, 35),20)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(10, 20, 30),15)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(6, 9, 4),7.5)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    return ($base1 + $base2) / 2 * $height;\n}",
    "    return ($base1 + $base2) / 2 * $height;\n}",
    "    my $median = sqrt(($base1**2 + $base2**2) / 2);\n    return $median * $height / 2;\n}",
    "    return ($base1 + $base2) / 2 * $height;\n}",
    "    return ($base1 + $base2) / 2 * $height;\n}",
    "    return ($base1 + $base2) / 2 * $height;\n}",
    "    return ($base1 + $base2) / 2 * $height;\n}",
    "    return ($base1 + $base2) / 2 * $height;\n}",
    "    my $median = sqrt(($base1**2 + $base2**2)/2);\n    return $median;\n}",
    "    return ($base1 + $base2) / 2 * $height;\n}",
    "    return ($base1 + $base2) / 2 * $height;\n}",
    "    return ($base1 + $base2) / 2 * $height;\n}",
    "    return ($base1 + $base2) / 2 * $height;\n}",
    "    return ($base1 + $base2) / 2 * $height;\n}",
    "    my $median = sqrt($height**2 + ($base1 - $base2)**2 / 4);\n    return $median;\n}",
    "    return ($base1 + $base2) / 2 * $height;\n}",
    "    return ($base1 + $base2) / 2 * $height;\n}",
    "    return ($base1 + $base2) / 2 * $height;\n}",
    "    return ($base1 + $base2) / 2 * $height;\n}",
    "    return ($base1 + $base2) / 2 * $height;\n}"
  ]
}
{
  "name": "mbpp_477_is_lower",
  "language": "pl",
  "prompt": "# Write a plthon function to convert the given string to lower case.\nsub is_lower {\n    my($string) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_477_is_lower.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&is_lower;\n        if(eq_deeply($candidate->(\"InValid\"),\"invalid\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"TruE\"),\"true\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"SenTenCE\"),\"sentence\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    my($i);\n    for($i=0; $i<length($string); $i++) {\n        if(ord(substr($string, $i, 1)) >= ord('A') && ord(substr($string, $i, 1)) <= ord('Z')) {\n            return 0;\n        }\n    }\n    return 1;\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    }\n    return 0;\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if ($string =~ /^[a-z]+$/) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    if ($string eq lc $string) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if ($string =~ /[a-z]/) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if($string eq lc($string)) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    return $string eq lc($string);\n}",
    "    if($string =~ /^[a-z]+$/) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    if($string eq lc($string)) {\n        return 1;\n    }\n    return 0;\n}",
    "    $string =~ tr/A-Z/a-z/;\n    return $string;\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if($string =~ /^[a-z]+$/) {\n        return 1;\n    }\n    return 0;\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if($string =~ /^[a-z]+$/) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    if ($string =~ /[a-z]/) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    if ($string =~ /[a-z]/) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    if($string eq lc($string)) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if ($string =~ /^[a-z]+$/) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if ($string =~ /[a-z]/) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if ($string eq lc $string) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    return $string =~ /^[a-z]+$/;\n}",
    "    if($string =~ /[a-z]/) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if ($string eq lc $string) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    return $string =~ /^[a-z]+$/;\n}\nprint is_lower(\"hello\").\"\\n\";\nprint is_lower(\"hello world\").\"\\n\";\nprint is_lower(\"HELLO\").\"\\n\";",
    "    if ($string eq lc $string) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    if ($string =~ /^[a-z]+$/) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    return $string eq lc($string);\n}",
    "    if ($string =~ /[a-z]/) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    return $string =~ /^[a-z]+$/;\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if ($string =~ /[a-z]/) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    if ($string =~ /[a-z]/) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if($string eq lc $string) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if($string =~ /[a-z]/) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    my $result = 0;\n    if ($string =~ /^[a-z]+$/) {\n        $result = 1;\n    }\n    return $result;\n}",
    "    if ($string eq lc $string) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if($string eq lc $string) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    $string =~ tr/A-Z/a-z/;\n    return $string;\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    return $string eq lc $string;\n}",
    "    if ($string =~ /[a-z]/) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    if ($string =~ /[a-z]/) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    if($string eq lc($string)) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    if($string eq lc $string) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    if ($string =~ /[a-z]/) {\n        return 1;\n    }\n    return 0;\n}",
    "    if ($string eq lc $string) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if ($string =~ /[a-z]/) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    if ($string =~ /[a-z]/) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if ($string =~ /[a-z]/) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    return $string eq lc $string;\n}",
    "    if ($string eq lc $string) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if ($string =~ /[a-z]/) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\nprint(is_lower(\"The quick Brow Fox\"));\nprint(is_lower(\"THE QUICK BROWN FOX\"));",
    "    my $result = lc($string);\n    return $result;\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    return $string eq lc($string);\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if($string eq lc($string)) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    if ($string =~ /[a-z]/) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if ($string =~ /[a-z]/) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if($string eq lc($string)){\n        return 1;\n    }\n    else{\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if ($string =~ /[a-z]/) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if($string eq lc $string) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if ($string =~ /[a-z]/) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    if($string eq lc $string) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if ($string eq lc $string) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if($string eq lc($string)) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if($string eq lc $string) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    if ($string =~ /[a-z]/) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    if ($string =~ /[a-z]/) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    if ($string =~ /[a-z]/) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if ($string =~ /[a-z]/) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    if ($string eq lc $string) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    if($string eq lc $string) {\n        return 1;\n    }\n    return 0;\n}",
    "    if($string eq lc $string) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if($string eq lc($string)) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    if($string eq lc($string)) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    if ($string =~ /^[a-z]+$/) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if($string eq lc($string)) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    if($string eq lc $string) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    if ($string eq lc $string) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if ($string =~ /[a-z]/) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if ($string eq lc $string) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if($string eq lc $string) {\n        return 1;\n    }\n    return 0;\n}",
    "    if ($string eq lc $string) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    return $string =~ /^[a-z]+$/;\n}",
    "    if($string eq lc $string) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    if ($string =~ /^[a-z]+$/) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if($string eq lc($string)){\n        return 1;\n    }\n    else{\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if($string eq lc($string)) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    return $string =~ /^[a-z]+$/;\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if($string eq lc $string){\n        return 1;\n    }\n    else{\n        return 0;\n    }\n}\nprint(is_lower(\"HELLO\"));\nprint(\"\\n\");\nprint(is_lower(\"hello\"));\nprint(\"\\n\");",
    "    if ($string =~ /[a-z]/) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    if($string eq lc($string)){\n        return 1;\n    }\n    else{\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if($string eq lc $string){\n        return 1;\n    }\n    else{\n        return 0;\n    }\n}\nprint(is_lower(\"PYTHON\").\"\\n\");\nprint(is_lower(\"python\").\"\\n\");",
    "    if ($string =~ /[a-z]/) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if($string eq lc($string)) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    return lc($string);\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if ($string =~ /[a-z]/) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if($string eq lc($string)){\n        return 1;\n    }\n    else{\n        return 0;\n    }\n}",
    "    if($string eq lc $string) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if ($string eq lc $string) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    $string =~ tr/[A-Z]/[a-z]/;\n    return $string;\n}",
    "    if ($string eq lc $string) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if($string eq lc($string)) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    if ($string eq lc $string) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if ($string =~ /[a-z]/) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    return $string =~ /^[a-z]+$/;\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if ($string eq lc $string) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    if ($string =~ /[a-z]/) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    my($result);\n    if ($string =~ /[A-Z]/) {\n        $result = 0;\n    } else {\n        $result = 1;\n    }\n    return $result;\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if ($string eq lc $string) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if ($string eq lc $string) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if ($string =~ /^[a-z]+$/) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if ($string eq lc($string)) {\n        return 1;\n    } else {\n        return 0;\n    }\n}",
    "    if($string eq lc $string) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    if ($string =~ /^[a-z]+$/) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}",
    "    if ($string eq lc $string) {\n        return 1;\n    } else {\n        return 0;\n    }\n}"
  ]
}
{
  "name": "mbpp_160_find_solution",
  "language": "pl",
  "prompt": "# Write a function that returns integers x and y that satisfy ax + by = n as an array, or return undef if no solution exists.\nsub find_solution {\n    my($a, $b, $n) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_160_find_solution.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&find_solution;\n        if(eq_deeply($candidate->(2, 3, 7),[2, 1])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(4, 2, 7),undef)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1, 13, 17),[4, 1])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    if ($a == 0) {\n        return undef if $n % $b != 0;\n        return [0, $n / $b];\n    }\n    my $x = find_solution($b % $a, $a, $n % $a);\n    return undef unless defined $x;\n    [$x->[1] - $b / $a * $x->[0], $x->[0]];\n}",
    "    my $x = 0;\n    my $y = 0;\n    while (1) {\n        if ($a * $x + $b * $y == $n) {\n            return [$x, $y];\n        }\n        if ($x == 0) {\n            $y++;\n        } else {\n            $x--;\n            $y++;\n        }\n        if ($x < 0) {\n            return undef;\n        }\n    }\n}",
    "    for my $x (0 .. $n) {\n        return [$x, ($n - $a * $x) / $b] if ($n - $a * $x) % $b == 0;\n    }\n    return undef;\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $found = 0;\n    my $x_max = $n / $a;\n    my $y_max = $n / $b;\n    for my $x (0 .. $x_max) {\n        for my $y (0 .. $y_max) {\n            if ($a * $x + $b * $y == $n) {\n                $found = 1;\n                last;\n            }\n        }\n        if ($found) {\n            last;\n        }\n    }\n    if ($found) {\n        return [$x, $y];\n    } else {\n        return undef;\n    }\n}",
    "    my $x = 0;\n    my $y = 0;\n    while ($x * $a <= $n) {\n        my $y = ($n - $x * $a) / $b;\n        return [$x, $y] if $y == int($y);\n        $x++;\n    }\n    return undef;\n}",
    "    my $x = 0;\n    my $y = 0;\n    while (1) {\n        my $x_candidate = $x + $b;\n        my $y_candidate = $y - $a;\n        if ($x_candidate % $a == 0 && $y_candidate % $b == 0) {\n            $x = $x_candidate;\n            $y = $y_candidate;\n        } else {\n            $x_candidate = $x - $b;\n            $y_candidate = $y + $a;\n            if ($x_candidate % $a == 0 && $y_candidate % $b == 0) {\n                $x = $x_candidate;\n                $y = $y_candidate;\n            } else {\n                last;\n            }\n        }\n    }\n    if ($a * $x + $b * $y == $n) {\n        return [$x, $y];\n    } else {\n        return undef;\n    }\n}",
    "    for my $x (0 .. $n) {\n        for my $y (0 .. $n) {\n            return [$x, $y] if $a * $x + $b * $y == $n;\n        }\n    }\n    return undef;\n}",
    "    my $x = 0;\n    my $y = 0;\n    while ($a * $x <= $n) {\n        my $r = $n - $a * $x;\n        if ($r % $b == 0) {\n            $y = $r / $b;\n            return [$x, $y];\n        }\n        $x++;\n    }\n    return undef;\n}",
    "    for my $x (0 .. $n) {\n        return [$x, ($n - $a * $x) / $b] if ($n - $a * $x) % $b == 0;\n    }\n    return undef;\n}",
    "    return undef if $n % gcd($a, $b) != 0;\n    my($x, $y) = extended_gcd($a, $b);\n    return [$x * $n / gcd($a, $b), $y * $n / gcd($a, $b)];\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $found = 0;\n    while ($x <= $n) {\n        $y = ($n - $a * $x) / $b;\n        if ($a * $x + $b * $y == $n) {\n            $found = 1;\n            last;\n        }\n        $x++;\n    }\n    if ($found) {\n        return [$x, $y];\n    } else {\n        return undef;\n    }\n}",
    "    my $x = 0;\n    my $y = 0;\n    while ($x * $a <= $n) {\n        $y = ($n - $x * $a) / $b;\n        return [$x, $y] if $y == int($y);\n        $x++;\n    }\n    return undef;\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    my $x1 = 0;\n    my $y1 = 1;\n    my $a1 = $a / $d;\n    my $b1 = $b / $d;\n    while ($a1 * $x1 + $b1 * $y1 != 1) {\n        my $q = int($a1 / $b1);\n        my $r = $a1 % $b1;\n        my $x2 = $x1;\n        my $y2 = $y1;\n        $x1 = $y2;\n        $y1 = $x2 - $q * $y2;\n        $a1 = $b1;\n        $b1 = $r;\n    }\n    $x = $n * $x1 / $d;\n    $y = ($n - $a * $x) / $b;\n    return [$x, $y];\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    my $x1 = 0;\n    my $y1 = 1;\n    my $a1 = $a / $d;\n    my $b1 = $b / $d;\n    while ($a1 * $x1 + $b1 * $y1 != 1) {\n        my $q = int($a1 / $b1);\n        my $r = $a1 % $b1;\n        $x = $x1;\n        $y = $y1;\n        $x1 = $y;\n        $y1 = $x - $q * $y;\n        $a1 = $b1;\n        $b1 = $r;\n    }\n    return [$x * ($n / $d), $y * ($n / $d)];\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    ($x, $y) = find_solution($b % $a, $a, $n);\n    $x -= int($b / $a) * $y;\n    return ($x, $y);\n}",
    "    if ($n % gcd($a, $b) != 0) {\n        return undef;\n    }\n    my $x = 0;\n    my $y = $n / $b;\n    while ($a * $x <= $n) {\n        my $t = ($n - $a * $x) / $b;\n        if ($t == int($t)) {\n            return [$x, $t];\n        }\n        $x++;\n    }\n    return undef;\n}",
    "    my $x = 0;\n    my $y = 0;\n    while ($a * $x <= $n) {\n        my $remainder = $n - $a * $x;\n        if ($remainder % $b == 0) {\n            $y = $remainder / $b;\n            return [$x, $y];\n        }\n        $x++;\n    }\n    return undef;\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    my $x1 = 0;\n    my $y1 = 1;\n    my $x2 = 1;\n    my $y2 = 0;\n    while ($a % $b != 0) {\n        my $q = int($a / $b);\n        my $r = $a % $b;\n        $x = $x2 - $q * $x1;\n        $y = $y2 - $q * $y1;\n        $a = $b;\n        $b = $r;\n        $x2 = $x1;\n        $y2 = $y1;\n        $x1 = $x;\n        $y1 = $y;\n    }\n    $x = $x2;\n    $y = $y2;\n    return [$x, $y];\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d) {\n        return undef;\n    }\n    ($x, $y) = ext_gcd($a, $b);\n    $x *= $n / $d;\n    $y *= $n / $d;\n    return ($x, $y);\n}",
    "    my $d = gcd($a, $b);\n    return undef if $n % $d != 0;\n    my $x = mult_inv($a / $d, $b / $d) * $n / $d;\n    my $y = ($n - $a * $x) / $b;\n    return [$x, $y];\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    my $x1 = 0;\n    my $y1 = 1;\n    my $a1 = $a / $d;\n    my $b1 = $b / $d;\n    while ($a1 * $x1 + $b1 * $y1 != 1) {\n        my $q = int($a1 / $b1);\n        my $r = $a1 % $b1;\n        $x = $x1;\n        $x1 = $y1;\n        $y1 = $x - $q * $y1;\n        $a1 = $b1;\n        $b1 = $r;\n    }\n    $x = $n * $x1 / $d;\n    $y = ($n - $a * $x) / $b;\n    return [$x, $y];\n}",
    "    my $x = 0;\n    my $y = 0;\n    while ($x * $a <= $n) {\n        while ($x * $a + $y * $b <= $n) {\n            if ($x * $a + $y * $b == $n) {\n                return [$x, $y];\n            }\n            $y++;\n        }\n        $x++;\n        $y = 0;\n    }\n    return undef;\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $found = 0;\n    while ($x <= $n) {\n        my $remainder = $n - $a * $x;\n        if ($remainder % $b == 0) {\n            $y = $remainder / $b;\n            $found = 1;\n            last;\n        }\n        $x++;\n    }\n    if ($found) {\n        return [$x, $y];\n    } else {\n        return undef;\n    }\n}",
    "    my $x = 0;\n    my $y = 0;\n    while ($x * $a <= $n) {\n        $y = ($n - $x * $a) / $b;\n        return [$x, $y] if $y == int($y);\n        $x++;\n    }\n    return undef;\n}",
    "    my $x = 0;\n    my $y = 0;\n    while ($x * $a + $y * $b != $n) {\n        $x++;\n        $y++;\n    }\n    return [$x, $y];\n}",
    "    my $x = 0;\n    my $y = 0;\n    while (1) {\n        my $x1 = $b * $y;\n        my $y1 = $a * $x + $n;\n        if ($x1 == $x && $y1 == $y) {\n            return undef;\n        }\n        $x = $x1;\n        $y = $y1;\n        if ($x % $b == 0 && $y % $a == 0) {\n            return [$x / $b, $y / $a];\n        }\n    }\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    my $x1 = 0;\n    my $y1 = 1;\n    my $x2 = 1;\n    my $y2 = 0;\n    while ($a % $b != 0) {\n        my $q = int($a / $b);\n        my $r = $a % $b;\n        $x = $x2 - $q * $x1;\n        $y = $y2 - $q * $y1;\n        $a = $b;\n        $b = $r;\n        $x2 = $x1;\n        $y2 = $y1;\n        $x1 = $x;\n        $y1 = $y;\n    }\n    $x = $x2 - int($a / $b) * $x1;\n    $y = $y2 - int($a / $b) * $y1;\n    return [$x, $y];\n}",
    "    my $x = 0;\n    my $y = 0;\n    while ($x <= $n) {\n        my $remainder = $n - $a * $x;\n        if ($remainder % $b == 0) {\n            $y = $remainder / $b;\n            return [$x, $y];\n        }\n        $x++;\n    }\n    return undef;\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    ($x, $y) = find_solution($b % $a, $a, $n);\n    $x = $x - int($b / $a) * $y;\n    return ($x, $y);\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    $a /= $d;\n    $b /= $d;\n    $n /= $d;\n    my $x1 = 0;\n    my $y1 = 1;\n    my $x2 = 1;\n    my $y2 = 0;\n    while ($b > 0) {\n        my $q = int($a / $b);\n        my $r = $a % $b;\n        $x = $x2 - $q * $x1;\n        $y = $y2 - $q * $y1;\n        $a = $b;\n        $b = $r;\n        $x2 = $x1;\n        $y2 = $y1;\n        $x1 = $x;\n        $y1 = $y;\n    }\n    return [$x2, $y2];\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    my $x1 = 0;\n    my $y1 = 1;\n    my $a1 = $a / $d;\n    my $b1 = $b / $d;\n    while ($a1 * $x1 + $b1 * $y1 != 1) {\n        my $q = int($a1 / $b1);\n        my $r = $a1 % $b1;\n        my $x2 = $x1;\n        my $y2 = $y1;\n        $x1 = $y2;\n        $y1 = $x2 - $q * $y2;\n        $a1 = $b1;\n        $b1 = $r;\n    }\n    $x = $n / $d * $x1;\n    $y = $n / $d * $y1;\n    return ($x, $y);\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    ($x, $y) = find_solution($b % $a, $a, $n);\n    $x = $x - int($b / $a) * $y;\n    return ($x, $y);\n}",
    "    my $x = 0;\n    my $y = 0;\n    while ($x * $a <= $n) {\n        my $remainder = $n - $x * $a;\n        if ($remainder % $b == 0) {\n            $y = $remainder / $b;\n            return [$x, $y];\n        }\n        $x++;\n    }\n    return undef;\n}",
    "    return undef if $n % gcd($a, $b) != 0;\n    my($x, $y) = (0, 0);\n    my $d = gcd($a, $b);\n    ($x, $y) = find_solution($b/$d, $a/$d, $n/$d) if $d != 1;\n    $x -= int($b/$d) * $y;\n    return [$x, $y];\n}",
    "    my $x = 0;\n    my $y = 0;\n    while ($x * $a <= $n) {\n        if (($n - $x * $a) % $b == 0) {\n            $y = ($n - $x * $a) / $b;\n            return [$x, $y];\n        }\n        $x++;\n    }\n    return undef;\n}",
    "    my $x = 0;\n    my $y = 0;\n    while ($a * $x <= $n) {\n        my $remainder = $n - $a * $x;\n        if ($remainder % $b == 0) {\n            $y = $remainder / $b;\n            return [$x, $y];\n        }\n        $x++;\n    }\n    return undef;\n}",
    "    return undef if $a == 0 && $b == 0;\n    return undef if $n % gcd($a, $b) != 0;\n    return [0, $n / $b] if $a == 0;\n    return [$n / $a, 0] if $b == 0;\n    my($x, $y) = find_solution($b, $a % $b, $n);\n    return [$y, $x - int($a / $b) * $y];\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    ($x, $y) = find_solution($b % $a, $a, $n);\n    return ($y - int($b / $a) * $x, $x);\n}",
    "    my $x = 0;\n    my $y = 0;\n    while ($x * $a + $y * $b != $n) {\n        $x++;\n        $y = int(($n - $x * $a) / $b);\n    }\n    return [$x, $y];\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d) {\n        return undef;\n    }\n    $a /= $d;\n    $b /= $d;\n    $n /= $d;\n    my $x1 = 0;\n    my $x2 = 1;\n    my $y1 = 1;\n    my $y2 = 0;\n    while ($a != 0) {\n        my $q = int($b / $a);\n        my $r = $b % $a;\n        $x = $x2 - $q * $x1;\n        $y = $y2 - $q * $y1;\n        $b = $a;\n        $a = $r;\n        $x2 = $x1;\n        $x1 = $x;\n        $y2 = $y1;\n        $y1 = $y;\n    }\n    return [$x2 * $n, $y2 * $n];\n}",
    "    return undef if $n % gcd($a, $b) != 0;\n    my $x = 0;\n    my $y = $n / $b;\n    while ($a * $x + $b * $y != $n) {\n        $x += 1;\n        $y = ($n - $a * $x) / $b;\n    }\n    return [$x, $y];\n}",
    "    my $d = gcd($a, $b);\n    return undef unless $n % $d == 0;\n    my($x, $y) = extended_gcd($a, $b);\n    my $factor = $n / $d;\n    return [$x * $factor, $y * $factor];\n}",
    "    return undef if $n % gcd($a, $b) != 0;\n    my $x = 0;\n    my $y = $n / $b;\n    while ($a * $x + $b * $y != $n) {\n        $x++;\n        $y = ($n - $a * $x) / $b;\n    }\n    return [$x, $y];\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    ($x, $y) = find_solution($b % $a, $a, $n);\n    $x = $x - int($b / $a) * $y;\n    return ($x, $y);\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    my $x1 = 1;\n    my $y1 = 0;\n    my $x2 = 0;\n    my $y2 = 1;\n    my $q = int($a / $b);\n    my $r = $a % $b;\n    while ($r > 0) {\n        my $temp = $x2;\n        $x2 = $x1 - $q * $x2;\n        $x1 = $temp;\n        $temp = $y2;\n        $y2 = $y1 - $q * $y2;\n        $y1 = $temp;\n        $a = $b;\n        $b = $r;\n        $q = int($a / $b);\n        $r = $a % $b;\n    }\n    $x = $x2 * ($n / $d);\n    $y = $y2 * ($n / $d);\n    return [$x, $y];\n}",
    "    return undef if $n % gcd($a, $b) != 0;\n    my($x, $y) = (0, 0);\n    my($x1, $y1) = (1, 0);\n    my($x2, $y2) = (0, 1);\n    while ($b != 0) {\n        my $q = int($a / $b);\n        ($x, $x1, $x2) = ($x1 - $q * $x2, $x2, $x - $q * $x2);\n        ($y, $y1, $y2) = ($y1 - $q * $y2, $y2, $y - $q * $y2);\n        ($a, $b) = ($b, $a % $b);\n    }\n    return [$x, $y];\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    my $x1 = 0;\n    my $y1 = 1;\n    my $a1 = $a / $d;\n    my $b1 = $b / $d;\n    while ($a1 * $x1 + $b1 * $y1 != 1) {\n        my $q = int($a1 / $b1);\n        my $r = $a1 % $b1;\n        $x = $x1;\n        $y = $y1;\n        $x1 = $y;\n        $y1 = $x - $q * $y;\n        $a1 = $b1;\n        $b1 = $r;\n    }\n    return [$x1 * $n / $d, $y1 * $n / $d];\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d) {\n        return undef;\n    }\n    $a /= $d;\n    $b /= $d;\n    $n /= $d;\n    my $x1 = 0;\n    my $y1 = 1;\n    while ($a % $b) {\n        my $q = int($a / $b);\n        my $r = $a % $b;\n        $x = $x1 - $q * $x;\n        $y = $y1 - $q * $y;\n        $a = $b;\n        $b = $r;\n        $x1 = $x;\n        $y1 = $y;\n    }\n    $x = $x1;\n    $y = $y1;\n    return [$x, $y];\n}",
    "    my $x = 0;\n    my $y = 0;\n    while ($a * $x <= $n) {\n        my $r = $n - $a * $x;\n        if ($r % $b == 0) {\n            $y = $r / $b;\n            return [$x, $y];\n        }\n        $x++;\n    }\n    return undef;\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    my $x1 = 0;\n    my $y1 = 1;\n    my $x2 = 1;\n    my $y2 = 0;\n    my $q = int($a / $b);\n    my $r = $a % $b;\n    while ($r > 0) {\n        my $temp = $x2;\n        $x2 = $x1 - $q * $x2;\n        $x1 = $temp;\n        $temp = $y2;\n        $y2 = $y1 - $q * $y2;\n        $y1 = $temp;\n        $a = $b;\n        $b = $r;\n        $q = int($a / $b);\n        $r = $a % $b;\n    }\n    $x = $x2 * ($n / $d);\n    $y = $y2 * ($n / $d);\n    return ($x, $y);\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    my $x1 = 1;\n    my $y1 = 0;\n    my $x2 = 0;\n    my $y2 = 1;\n    while ($b != 0) {\n        my $q = int($a / $b);\n        my $r = $a % $b;\n        $x = $x2 - $q * $x1;\n        $y = $y2 - $q * $y1;\n        $a = $b;\n        $b = $r;\n        $x2 = $x1;\n        $y2 = $y1;\n        $x1 = $x;\n        $y1 = $y;\n    }\n    $x = $x2;\n    $y = $y2;\n    $x *= $n / $d;\n    $y *= $n / $d;\n    return [$x, $y];\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    my $x1 = 0;\n    my $y1 = 1;\n    my $x2 = 1;\n    my $y2 = 0;\n    my $q = int($a / $b);\n    my $r = $a % $b;\n    while ($r > 0) {\n        my $temp = $x2;\n        $x2 = $x1 - $q * $x2;\n        $x1 = $temp;\n        $temp = $y2;\n        $y2 = $y1 - $q * $y2;\n        $y1 = $temp;\n        $a = $b;\n        $b = $r;\n        $q = int($a / $b);\n        $r = $a % $b;\n    }\n    $x = $x2 * ($n / $d);\n    $y = $y2 * ($n / $d);\n    return [$x, $y];\n}",
    "    my $x = 0;\n    my $y = 0;\n    while ($x * $a <= $n) {\n        my $remainder = $n - $x * $a;\n        if ($remainder % $b == 0) {\n            $y = $remainder / $b;\n            return [$x, $y];\n        }\n        $x++;\n    }\n    return undef;\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    my $x1 = 0;\n    my $y1 = 1;\n    my $x2 = 1;\n    my $y2 = 0;\n    my $q = $a / $b;\n    my $r = $a % $b;\n    while ($r > 0) {\n        my $temp = $x2;\n        $x2 = $x1 - $q * $x2;\n        $x1 = $temp;\n        $temp = $y2;\n        $y2 = $y1 - $q * $y2;\n        $y1 = $temp;\n        $a = $b;\n        $b = $r;\n        $q = $a / $b;\n        $r = $a % $b;\n    }\n    $x = $x2 * ($n / $d);\n    $y = $y2 * ($n / $d);\n    return [$x, $y];\n}",
    "    my($x, $y) = (0, 0);\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    ($a, $b, $n) = ($a/$d, $b/$d, $n/$d);\n    my $x1 = 0;\n    my $y1 = 1;\n    while ($a % $b != 0) {\n        my $q = int($a / $b);\n        my $r = $a % $b;\n        $x = $x1;\n        $y = $y1;\n        $x1 = $y;\n        $y1 = $x - $q * $y;\n        ($a, $b) = ($b, $r);\n    }\n    return [$b * $x + $n * $y1, $n * $x1];\n}",
    "    return undef if $n % gcd($a, $b) != 0;\n    my($x, $y) = (0, 0);\n    my($x1, $y1) = (1, 0);\n    my($x2, $y2) = (0, 1);\n    while ($b != 0) {\n        my $q = int($a / $b);\n        ($x, $x1, $x2) = ($x1 - $q * $x2, $x2, $x - $q * $x2);\n        ($y, $y1, $y2) = ($y1 - $q * $y2, $y2, $y - $q * $y2);\n        ($a, $b) = ($b, $a % $b);\n    }\n    return [$x, $y];\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    my $x1 = 0;\n    my $y1 = 1;\n    my $x2 = 1;\n    my $y2 = 0;\n    my $q = 0;\n    my $r = 0;\n    while ($b != 0) {\n        $q = int($a / $b);\n        $r = $a % $b;\n        $x = $x2 - $q * $x1;\n        $y = $y2 - $q * $y1;\n        $a = $b;\n        $b = $r;\n        $x2 = $x1;\n        $x1 = $x;\n        $y2 = $y1;\n        $y1 = $y;\n    }\n    $x = $x2;\n    $y = $y2;\n    return [$x, $y];\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    my $x1 = 0;\n    my $y1 = 1;\n    my $a1 = $a / $d;\n    my $b1 = $b / $d;\n    while ($a1 * $x1 + $b1 * $y1 != 1) {\n        if ($a1 * $x1 + $b1 * $y1 < 1) {\n            $x1++;\n        } else {\n            $y1--;\n        }\n    }\n    $x = $x1 * ($n / $d);\n    $y = $y1 * ($n / $d);\n    return [$x, $y];\n}",
    "    my $x = 0;\n    my $y = 0;\n    while ($x <= $n) {\n        $y = ($n - $a * $x) / $b;\n        return [$x, $y] if ($y == int($y));\n        $x++;\n    }\n    return undef;\n}",
    "    my($x, $y);\n    for ($x = 0; $x <= $n; $x++) {\n        for ($y = 0; $y <= $n; $y++) {\n            return [$x, $y] if $a * $x + $b * $y == $n;\n        }\n    }\n    return undef;\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    my $x1 = 1;\n    my $y1 = 0;\n    my $x2 = 0;\n    my $y2 = 1;\n    while ($b != 0) {\n        my $q = int($a / $b);\n        my $r = $a % $b;\n        $x = $x2 - $q * $x1;\n        $y = $y2 - $q * $y1;\n        $a = $b;\n        $b = $r;\n        $x2 = $x1;\n        $y2 = $y1;\n        $x1 = $x;\n        $y1 = $y;\n    }\n    $x = $x2 * ($n / $d);\n    $y = $y2 * ($n / $d);\n    return [$x, $y];\n}",
    "    my $x = 0;\n    my $y = 0;\n    while (1) {\n        my $x_new = $x + $b;\n        my $y_new = $y - $a;\n        if ($x_new >= 0 && $y_new >= 0 && $x_new % $b == 0 && $y_new % $a == 0) {\n            $x = $x_new;\n            $y = $y_new;\n            last if $x + $y == $n;\n        }\n        $x_new = $x - $b;\n        $y_new = $y + $a;\n        if ($x_new >= 0 && $y_new >= 0 && $x_new % $b == 0 && $y_new % $a == 0) {\n            $x = $x_new;\n            $y = $y_new;\n            last if $x + $y == $n;\n        }\n        return undef if $x == 0 && $y == 0;\n    }\n    return [$x, $y];\n}",
    "    if ($n % gcd($a, $b) != 0) {\n        return undef;\n    }\n    my $x = mult_inv($a, $b);\n    my $y = mult_inv($b, $a);\n    my $d = gcd($a, $b);\n    return [$x * ($n / $d), $y * ($n / $d)];\n}",
    "    my($x, $y, $d);\n    $d = gcd($a, $b);\n    return undef unless $n % $d == 0;\n    ($x, $y) = bezout($a, $b);\n    ($x, $y) = (int($x * $n / $d), int($y * $n / $d));\n    return ($x, $y);\n}",
    "    return undef if $n % gcd($a, $b) != 0;\n    my($x, $y) = (0, 0);\n    my $d = gcd($a, $b);\n    my $x1 = $n / $d;\n    my $y1 = 0;\n    my $x2 = 0;\n    my $y2 = $n / $d;\n    while ($x1 != $x2 || $y1 != $y2) {\n        if ($x1 < $x2) {\n            $x1 += $b / $d;\n            $y1 -= $a / $d;\n        } elsif ($x1 > $x2) {\n            $x2 += $b / $d;\n            $y2 -= $a / $d;\n        } else {\n            $x1 += $b / $d;\n            $y1 -= $a / $d;\n            $x2 += $b / $d;\n            $y2 -= $a / $d;\n        }\n    }\n    return [$x1, $y1];\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d) {\n        return undef;\n    }\n    ($a, $b, $x, $y) = extended_gcd($a, $b);\n    $x *= $n / $d;\n    $y *= $n / $d;\n    return ($x, $y);\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    my $x1 = 0;\n    my $y1 = 1;\n    my $a1 = $a / $d;\n    my $b1 = $b / $d;\n    while ($a1 * $x1 + $b1 * $y1 != 1) {\n        my $q = int($a1 / $b1);\n        my $r = $a1 % $b1;\n        $x = $x1;\n        $x1 = $y1;\n        $y1 = $x - $q * $y1;\n        $a1 = $b1;\n        $b1 = $r;\n    }\n    $x = $n * $x1 / $d;\n    $y = ($n - $a * $x) / $b;\n    return [$x, $y];\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    my $x1 = 0;\n    my $y1 = 1;\n    my $x2 = 1;\n    my $y2 = 0;\n    while ($a % $b != 0) {\n        my $q = int($a / $b);\n        my $r = $a % $b;\n        $x = $x2 - $q * $x1;\n        $y = $y2 - $q * $y1;\n        $a = $b;\n        $b = $r;\n        $x2 = $x1;\n        $y2 = $y1;\n        $x1 = $x;\n        $y1 = $y;\n    }\n    $x = $x2 - int($a / $b) * $x1;\n    $y = $y2 - int($a / $b) * $y1;\n    return [$x, $y];\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    my $x1 = 0;\n    my $y1 = 1;\n    my $x2 = 1;\n    my $y2 = 0;\n    my $q = $a / $b;\n    my $r = $a % $b;\n    while ($r > 0) {\n        my $temp = $x2;\n        $x2 = $x1 - $q * $x2;\n        $x1 = $temp;\n        $temp = $y2;\n        $y2 = $y1 - $q * $y2;\n        $y1 = $temp;\n        $a = $b;\n        $b = $r;\n        $q = $a / $b;\n        $r = $a % $b;\n    }\n    $x = $x2 * ($n / $d);\n    $y = $y2 * ($n / $d);\n    return [$x, $y];\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    my $x1 = 0;\n    my $y1 = 1;\n    my $x2 = 1;\n    my $y2 = 0;\n    my $q = 0;\n    my $r = 0;\n    while ($a % $b != 0) {\n        $q = int($a / $b);\n        $r = $a % $b;\n        $x = $x2 - $q * $x1;\n        $y = $y2 - $q * $y1;\n        $a = $b;\n        $b = $r;\n        $x2 = $x1;\n        $x1 = $x;\n        $y2 = $y1;\n        $y1 = $y;\n    }\n    $x = $x2 - $q * $x1;\n    $y = $y2 - $q * $y1;\n    return [$x, $y];\n}",
    "    if ($n % gcd($a, $b)) {\n        return undef;\n    }\n    my $x = $n / $a;\n    my $y = $n / $b;\n    while ($x * $a + $y * $b != $n) {\n        if ($x * $a + $y * $b > $n) {\n            $y--;\n        }\n        else {\n            $x++;\n        }\n    }\n    return [$x, $y];\n}",
    "    my $x = 0;\n    my $y = 0;\n    while ($x * $a <= $n) {\n        if (($n - $x * $a) % $b == 0) {\n            $y = ($n - $x * $a) / $b;\n            return [$x, $y];\n        }\n        $x++;\n    }\n    return undef;\n}",
    "    if ($a == 0) {\n        return undef if $n % $b != 0;\n        return [0, $n / $b];\n    }\n    my $x = find_solution($b % $a, $a, $n % $a);\n    return undef if !defined $x;\n    my $y = ($n - $b * $x->[0]) / $a;\n    return [$x->[0], $y];\n}",
    "    my $x = 0;\n    my $y = 0;\n    while (1) {\n        my $r = $n - $a * $x;\n        if ($r % $b == 0) {\n            $y = $r / $b;\n            return [$x, $y];\n        }\n        $x++;\n    }\n}",
    "    my $x = 0;\n    my $y = 0;\n    while ($a * $x <= $n) {\n        my $remainder = $n - $a * $x;\n        if ($remainder % $b == 0) {\n            $y = $remainder / $b;\n            return [$x, $y];\n        }\n        $x++;\n    }\n    return undef;\n}",
    "\n    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    my $x1 = 0;\n    my $x2 = 1;\n    my $y1 = 1;\n    my $y2 = 0;\n    my $q = 0;\n    my $r = 0;\n    while ($a != 0) {\n        $q = int($b / $a);\n        $r = $b % $a;\n        $x = $x2 - $q * $x1;\n        $y = $y2 - $q * $y1;\n        $b = $a;\n        $a = $r;\n        $x2 = $x1;\n        $x1 = $x;\n        $y2 = $y1;\n        $y1 = $y;\n    }\n    return [$x2, $y2];\n}",
    "    my $x = 0;\n    my $y = 0;",
    "    return undef if $n % gcd($a, $b) != 0;\n    my $x = mult_inv($a, $b);\n    my $y = mult_inv($b, $a);\n    return [$x * ($n / $b), $y * ($n / $a)];\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    my $x0 = 0;\n    my $y0 = 1;\n    my $x1 = 1;\n    my $y1 = 0;\n    my $q = 0;\n    my $r = 0;\n    while ($a % $b != 0) {\n        $q = int($a / $b);\n        $r = $a % $b;\n        $x = $x0 - $q * $x1;\n        $y = $y0 - $q * $y1;\n        $a = $b;\n        $b = $r;\n        $x0 = $x1;\n        $y0 = $y1;\n        $x1 = $x;\n        $y1 = $y;\n    }\n    $x = $x0 - $q * $x1;\n    $y = $y0 - $q * $y1;\n    return [$x, $y];\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    my $x1 = 0;\n    my $y1 = 1;\n    my $x2 = 1;\n    my $y2 = 0;\n    my $q = 0;\n    my $r = 0;\n    while ($a % $b != 0) {\n        $q = int($a / $b);\n        $r = $a % $b;\n        $x = $x2 - $q * $x1;\n        $y = $y2 - $q * $y1;\n        $a = $b;\n        $b = $r;\n        $x2 = $x1;\n        $x1 = $x;\n        $y2 = $y1;\n        $y1 = $y;\n    }\n    $x = $x2;\n    $y = $y2;\n    return [$x, $y];\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    return undef if $n % $d != 0;\n    my $x1 = 1;\n    my $y1 = 0;\n    my $x2 = 0;\n    my $y2 = 1;\n    while ($b != 0) {\n        my $q = int($a / $b);\n        my $r = $a % $b;\n        $x = $x2 - $q * $x1;\n        $y = $y2 - $q * $y1;\n        $a = $b;\n        $b = $r;\n        $x2 = $x1;\n        $y2 = $y1;\n        $x1 = $x;\n        $y1 = $y;\n    }\n    return [$x2, $y2];\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    my $x1 = 0;\n    my $y1 = 1;\n    my $a1 = $a / $d;\n    my $b1 = $b / $d;\n    while ($a1 * $x1 + $b1 * $y1 != 1) {\n        my $q = int($a1 / $b1);\n        my $r = $a1 % $b1;\n        $x = $x1;\n        $x1 = $y1;\n        $y1 = $x - $q * $y1;\n        $a1 = $b1;\n        $b1 = $r;\n    }\n    return [$x1 * ($n / $d), $y1 * ($n / $d)];\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    my $x1 = 0;\n    my $y1 = 1;\n    my $x2 = 1;\n    my $y2 = 0;\n    my $q = 0;\n    my $r = 0;\n    while ($a % $b != 0) {\n        $q = int($a / $b);\n        $r = $a % $b;\n        $x = $x2 - $q * $x1;\n        $y = $y2 - $q * $y1;\n        $a = $b;\n        $b = $r;\n        $x2 = $x1;\n        $x1 = $x;\n        $y2 = $y1;\n        $y1 = $y;\n    }\n    $x = $x2 - $q * $x1;\n    $y = $y2 - $q * $y1;\n    return [$x, $y];\n}",
    "    my $x = 0;\n    my $y = 0;\n    while ($x * $a <= $n) {\n        if (($n - $x * $a) % $b == 0) {\n            $y = ($n - $x * $a) / $b;\n            return [$x, $y];\n        }\n        $x++;\n    }\n    return undef;\n}",
    "    if ($n % gcd($a, $b)) {\n        return undef;\n    }\n    my $x = $n / $a;\n    my $y = 0;\n    while ($x >= 0) {\n        if ($n - $a * $x == $b * $y) {\n            return [$x, $y];\n        }\n        $x--;\n        $y++;\n    }\n    return undef;\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    ($x, $y) = find_solution($b % $a, $a, $n);\n    return ($y - int($b / $a) * $x, $x);\n}",
    "    return undef if $n % gcd($a, $b) != 0;\n    my($x, $y) = (0, 0);\n    my($x1, $y1) = (1, 0);\n    my($x2, $y2) = (0, 1);\n    while ($b != 0) {\n        my $q = int($a / $b);\n        ($x, $x1, $x2) = ($x1 - $q * $x2, $x2, $x - $q * $x2);\n        ($y, $y1, $y2) = ($y1 - $q * $y2, $y2, $y - $q * $y2);\n        ($a, $b) = ($b, $a % $b);\n    }\n    return [$x, $y];\n}",
    "    my $x = 0;\n    my $y = 0;\n    while ($x * $a <= $n) {\n        if (($n - $x * $a) % $b == 0) {\n            $y = ($n - $x * $a) / $b;\n            return [$x, $y];\n        }\n        $x++;\n    }\n    return undef;\n}",
    "    if ($n % gcd($a, $b) != 0) {\n        return undef;\n    }\n    my $x = 0;\n    my $y = $n / $b;\n    while ($a * $x + $b * $y != $n) {\n        if ($a * $x + $b * $y < $n) {\n            $x += 1;\n        } else {\n            $y -= 1;\n        }\n    }\n    return [$x, $y];\n}",
    "    my $x = 0;\n    my $y = 0;\n    while ($x * $a <= $n) {\n        my $remainder = $n - $x * $a;\n        if ($remainder % $b == 0) {\n            $y = $remainder / $b;\n            return [$x, $y];\n        }\n        $x++;\n    }\n    return undef;\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    my $x1 = 1;\n    my $y1 = 0;\n    my $x2 = 0;\n    my $y2 = 1;\n    while ($b > 0) {\n        my $q = int($a / $b);\n        my $r = $a % $b;\n        $x = $x2 - $q * $x1;\n        $y = $y2 - $q * $y1;\n        $a = $b;\n        $b = $r;\n        $x2 = $x1;\n        $y2 = $y1;\n        $x1 = $x;\n        $y1 = $y;\n    }\n    return [$x2, $y2];\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    my $x1 = 0;\n    my $x2 = 1;\n    my $y1 = 1;\n    my $y2 = 0;\n    my $q = 0;\n    my $r = 0;\n    while ($a != 0) {\n        $q = int($b / $a);\n        $r = $b % $a;\n        $x = $x2 - $q * $x1;\n        $y = $y2 - $q * $y1;\n        $b = $a;\n        $a = $r;\n        $x2 = $x1;\n        $x1 = $x;\n        $y2 = $y1;\n        $y1 = $y;\n    }\n    $x = $x2;\n    $y = $y2;\n    return [$x, $y];\n}",
    "    if ($a < $b) {\n        ($a, $b) = ($b, $a);\n    }\n    my $x = 0;\n    my $y = 0;\n    while ($a * $x <= $n) {\n        my $r = $n - $a * $x;\n        if ($r % $b == 0) {\n            $y = $r / $b;\n            return [$x, $y];\n        }\n        $x++;\n    }\n    return undef;\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    my $x1 = 0;\n    my $y1 = 1;\n    my $a1 = $a / $d;\n    my $b1 = $b / $d;\n    while ($a1 * $x1 + $b1 * $y1 != 1) {\n        my $q = int($a1 / $b1);\n        my $r = $a1 % $b1;\n        $x = $x1;\n        $y = $y1;\n        $x1 = $y;\n        $y1 = $x - $q * $y;\n        $a1 = $b1;\n        $b1 = $r;\n    }\n    return [$x * ($n / $d), $y * ($n / $d)];\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    ($x, $y) = ext_gcd($a, $b);\n    $x *= $n / $d;\n    $y *= $n / $d;\n    return ($x, $y);\n}",
    "    my $x = 0;\n    my $y = 0;\n    while ($x * $a <= $n) {\n        if (($n - $x * $a) % $b == 0) {\n            $y = ($n - $x * $a) / $b;\n            return [$x, $y];\n        }\n        $x++;\n    }\n    return undef;\n}",
    "    my($x, $y, $d);\n    $d = gcd($a, $b);\n    return undef unless $n % $d == 0;\n    ($x, $y) = extended_gcd($a, $b);\n    ($x, $y) = ( $x * $n / $d, $y * $n / $d );\n    return ($x, $y);\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $found = 0;\n    while ($x <= $n) {\n        $y = ($n - $a * $x) / $b;\n        if ($y == int($y)) {\n            $found = 1;\n            last;\n        }\n        $x++;\n    }\n    return $found ? [$x, $y] : undef;\n}",
    "    my $x = 0;\n    my $y = 0;\n    while ($x * $a <= $n) {\n        my $rem = $n - $x * $a;\n        if ($rem % $b == 0) {\n            $y = $rem / $b;\n            return [$x, $y];\n        }\n        $x++;\n    }\n    return undef;\n}",
    "    my($x, $y);\n    return undef unless $n % gcd($a, $b) == 0;\n    ($x, $y) = find_solution($b, $a % $b, $n);\n    return ($y, $x - int($a / $b) * $y);\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    ($x, $y) = find_solution($b % $a, $a, ($n - $b * int($n / $b)) / $d);\n    return ($y - int($b / $a) * $x, $x);\n}",
    "    my $x = 0;\n    my $y = 0;\n    while ($x * $a <= $n) {\n        if (($n - $x * $a) % $b == 0) {\n            $y = ($n - $x * $a) / $b;\n            return [$x, $y];\n        }\n        $x++;\n    }\n    return undef;\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    my $x1 = 1;\n    my $y1 = 0;\n    my $x2 = 0;\n    my $y2 = 1;\n    while ($b != 0) {\n        my $q = int($a / $b);\n        my $r = $a % $b;\n        $x = $x2 - $q * $x1;\n        $y = $y2 - $q * $y1;\n        $a = $b;\n        $b = $r;\n        $x2 = $x1;\n        $y2 = $y1;\n        $x1 = $x;\n        $y1 = $y;\n    }\n    $x = $x2;\n    $y = $y2;\n    return [$x, $y];\n}",
    "    my $x = 0;\n    my $y = 0;\n    while ($x * $a <= $n) {\n        if (($n - $x * $a) % $b == 0) {\n            $y = ($n - $x * $a) / $b;\n            return [$x, $y];\n        }\n        $x++;\n    }\n    return undef;\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    my $x1 = 1;\n    my $y1 = 0;\n    my $x2 = 0;\n    my $y2 = 1;\n    while ($b != 0) {\n        my $q = int($a / $b);\n        my $r = $a % $b;\n        $x = $x2 - $q * $x1;\n        $y = $y2 - $q * $y1;\n        $a = $b;\n        $b = $r;\n        $x2 = $x1;\n        $y2 = $y1;\n        $x1 = $x;\n        $y1 = $y;\n    }\n    return [$x2, $y2];\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    my $x1 = 0;\n    my $y1 = 1;\n    my $x2 = 1;\n    my $y2 = 0;\n    while ($a % $b != 0) {\n        my $q = int($a / $b);\n        my $r = $a % $b;\n        $x = $x2 - $q * $x1;\n        $y = $y2 - $q * $y1;\n        $a = $b;\n        $b = $r;\n        $x2 = $x1;\n        $y2 = $y1;\n        $x1 = $x;\n        $y1 = $y;\n    }\n    return [$x, $y];\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $x_step = 1;\n    my $y_step = 1;\n    my $x_max = $n;\n    my $y_max = $n;\n    my $x_min = 0;\n    my $y_min = 0;\n    my $found = 0;\n    while(!$found) {\n        if(($x * $a) + ($y * $b) == $n) {\n            $found = 1;\n        }\n        if($x_step == 1) {\n            $x++;\n            if($x == $x_max) {\n                $x_step = -1;\n                $x_max--;\n            }\n        } else {\n            $x--;\n            if($x == $x_min) {\n                $x_step = 1;\n                $x_min++;\n            }\n        }\n        if($y_step == 1) {\n            $y++;\n            if($y == $y_max) {\n                $y_step = -1;\n                $y_max--;\n            }\n        } else {\n            $y--;\n            if($y == $y_min) {\n                $y_step = 1;\n                $y_min++;\n            }\n        }\n    }\n    return [$x, $y];\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    my $x1 = 0;\n    my $y1 = 1;\n    my $x2 = 1;\n    my $y2 = 0;\n    my $q = 0;\n    my $r = 0;\n    while ($b != 0) {\n        $q = int($a / $b);\n        $r = $a % $b;\n        $x = $x2 - $q * $x1;\n        $y = $y2 - $q * $y1;\n        $a = $b;\n        $b = $r;\n        $x2 = $x1;\n        $x1 = $x;\n        $y2 = $y1;\n        $y1 = $y;\n    }\n    $x = $x2;\n    $y = $y2;\n    return [$x, $y];\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    my $x1 = 0;\n    my $y1 = 1;\n    my $x2 = 1;\n    my $y2 = 0;\n    my $q = 0;\n    while ($a != 0) {\n        $q = int($b / $a);\n        ($a, $b) = ($b % $a, $a);\n        ($x1, $x2) = ($x2 - $q * $x1, $x1);\n        ($y1, $y2) = ($y2 - $q * $y1, $y1);\n    }\n    $x = $x2 * ($n / $d);\n    $y = $y2 * ($n / $d);\n    return [$x, $y];\n}",
    "    my $x = 0;\n    my $y = 0;\n    while ($x * $a <= $n) {\n        if (($n - $x * $a) % $b == 0) {\n            $y = ($n - $x * $a) / $b;\n            return [$x, $y];\n        }\n        $x++;\n    }\n    return undef;\n}",
    "    if ($n % gcd($a, $b)) {\n        return undef;\n    }\n    my($x, $y) = bezout($a, $b);\n    return [$x * $n / gcd($a, $b), $y * $n / gcd($a, $b)];\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    my $x1 = 0;\n    my $y1 = 1;\n    my $a1 = $a / $d;\n    my $b1 = $b / $d;\n    while ($a1 * $x1 + $b1 * $y1 != 1) {\n        my $q = int($a1 / $b1);\n        my $r = $a1 % $b1;\n        my $x2 = $x1;\n        my $y2 = $y1;\n        $x1 = $y2;\n        $y1 = $x2 - $q * $y2;\n        $a1 = $b1;\n        $b1 = $r;\n    }\n    $x = $n / $d * $x1;\n    $y = $n / $d * $y1;\n    return [$x, $y];\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    my $x1 = 0;\n    my $y1 = 1;\n    my $a1 = $a / $d;\n    my $b1 = $b / $d;\n    my $q = $a1 / $b1;\n    my $r = $a1 % $b1;\n    my $x2 = 1;\n    my $y2 = $q * -1;\n    while ($r != 0) {\n        $a1 = $b1;\n        $b1 = $r;\n        $x = $x2;\n        $y = $y2;\n        $q = $a1 / $b1;\n        $r = $a1 % $b1;\n        $x2 = $x1 - $q * $x2;\n        $y2 = $y1 - $q * $y2;\n        $x1 = $x;\n        $y1 = $y;\n    }\n    my $factor = $n / $d;\n    $x2 *= $factor;\n    $y2 *= $factor;\n    return [$x2, $y2];\n}",
    "    if ($n % gcd($a, $b) != 0) {\n        return undef;\n    }\n    my $x = 0;\n    my $y = $n / $b;\n    while ($a * $x + $b * $y != $n) {\n        if ($a * $x + $b * $y < $n) {\n            $x++;\n        } else {\n            $y--;\n        }\n    }\n    return [$x, $y];\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    my $x1 = 0;\n    my $y1 = 1;\n    my $a1 = $a / $d;\n    my $b1 = $b / $d;\n    while ($a1 * $x1 + $b1 * $y1 != 1) {\n        my $q = int($a1 / $b1);\n        my $r = $a1 % $b1;\n        $x = $x1;\n        $x1 = $y1;\n        $y1 = $x - $q * $y1;\n        $a1 = $b1;\n        $b1 = $r;\n    }\n    $x = $n * $x1 / $d;\n    $y = ($n - $a * $x) / $b;\n    return [$x, $y];\n}",
    "    my $x = 0;\n    my $y = 0;\n    while($x * $a <= $n) {\n        if(($n - $x * $a) % $b == 0) {\n            $y = ($n - $x * $a) / $b;\n            return [$x, $y];\n        }\n        $x++;\n    }\n    return undef;\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    my $x1 = 0;\n    my $y1 = 1;\n    my $x2 = 1;\n    my $y2 = 0;\n    my $q = $a / $b;\n    my $r = $a % $b;\n    while ($r > 0) {\n        my $temp = $x2;\n        $x2 = $x1 - $q * $x2;\n        $x1 = $temp;\n        $temp = $y2;\n        $y2 = $y1 - $q * $y2;\n        $y1 = $temp;\n        $a = $b;\n        $b = $r;\n        $q = $a / $b;\n        $r = $a % $b;\n    }\n    $x = $x2 * ($n / $d);\n    $y = $y2 * ($n / $d);\n    return [$x, $y];\n}",
    "    my $x = 0;\n    my $y = 0;\n    while ($x * $a <= $n) {\n        while ($x * $a + $y * $b <= $n) {\n            if ($x * $a + $y * $b == $n) {\n                return [$x, $y];\n            }\n            $y++;\n        }\n        $x++;\n    }\n    return undef;\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    my $x1 = 0;\n    my $y1 = 1;\n    my $x2 = 1;\n    my $y2 = 0;\n    my $q = 0;\n    while ($a != 0) {\n        $q = int($b / $a);\n        ($a, $b) = ($b % $a, $a);\n        ($x1, $x2) = ($x2 - $q * $x1, $x1);\n        ($y1, $y2) = ($y2 - $q * $y1, $y1);\n    }\n    $x = $x2 * ($n / $d);\n    $y = $y2 * ($n / $d);\n    return [$x, $y];\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    my $x1 = 1;\n    my $y1 = 0;\n    my $x2 = 0;\n    my $y2 = 1;\n    my $q = int($a / $b);\n    my $r = $a % $b;\n    while ($r > 0) {\n        my $temp = $x2;\n        $x2 = $x1 - $q * $x2;\n        $x1 = $temp;\n        $temp = $y2;\n        $y2 = $y1 - $q * $y2;\n        $y1 = $temp;\n        $a = $b;\n        $b = $r;\n        $q = int($a / $b);\n        $r = $a % $b;\n    }\n    $x = $x2 * int($n / $d);\n    $y = $y2 * int($n / $d);\n    return [$x, $y];\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    ($x, $y) = find_solution($b % $a, $a, $n);\n    $x = $x - int($b / $a) * $y;\n    return ($x, $y);\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    my $x1 = 0;\n    my $y1 = 1;\n    my $x2 = 1;\n    my $y2 = 0;\n    my $q = 0;\n    while ($a != 0) {\n        $q = int($b / $a);\n        ($x, $y) = ($x2 - $q * $x1, $y2 - $q * $y1);\n        ($a, $b) = ($b % $a, $a);\n        ($x2, $y2) = ($x1, $y1);\n        ($x1, $y1) = ($x, $y);\n    }\n    return [$x2, $y2];\n}",
    "    my $x = 0;\n    my $y = 0;\n    while ($x * $a <= $n) {\n        if (($n - $x * $a) % $b == 0) {\n            $y = ($n - $x * $a) / $b;\n            return [$x, $y];\n        }\n        $x++;\n    }\n    return undef;\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    ($x, $y) = find_solution($b % $a, $a, $n);\n    $x = $x - int($b / $a) * $y;\n    return ($x, $y);\n}",
    "    my $x = 0;\n    my $y = 0;\n    while ($x * $a <= $n) {\n        if (($n - $x * $a) % $b == 0) {\n            $y = ($n - $x * $a) / $b;\n            return ($x, $y);\n        }\n        $x++;\n    }\n    return undef;\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    my $x1 = 1;\n    my $y1 = 0;\n    my $x2 = 0;\n    my $y2 = 1;\n    while ($b != 0) {\n        my $q = int($a / $b);\n        my $r = $a % $b;\n        $x = $x2 - $q * $x1;\n        $y = $y2 - $q * $y1;\n        $a = $b;\n        $b = $r;\n        $x2 = $x1;\n        $y2 = $y1;\n        $x1 = $x;\n        $y1 = $y;\n    }\n    return [$x2, $y2];\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    my $x1 = 0;\n    my $y1 = 1;\n    my $a1 = $a / $d;\n    my $b1 = $b / $d;\n    while ($a1 * $x1 + $b1 * $y1 != 1) {\n        if ($a1 * $x1 + $b1 * $y1 < 1) {\n            $x1 += 1;\n        } else {\n            $y1 -= 1;\n        }\n    }\n    $x = $n / $d * $x1;\n    $y = $n / $d * $y1;\n    return [$x, $y];\n}",
    "    return undef if $n % gcd($a, $b) != 0;\n    my $x = $n / $a;\n    my $y = 0;\n    while ($a * $x + $b * $y != $n) {\n        $y++;\n    }\n    return [$x, $y];\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d) {\n        return undef;\n    }\n    ($x, $y) = find_solution($b % $a, $a, $n);\n    return ($y - int($b / $a) * $x, $x);\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $gcd = gcd($a, $b);\n    if ($n % $gcd != 0) {\n        return undef;\n    }\n    my $d = $gcd;\n    my $x1 = 1;\n    my $x2 = 0;\n    my $y1 = 0;\n    my $y2 = 1;\n    while ($a % $d == 0 && $b % $d == 0) {\n        $a /= $d;\n        $b /= $d;\n        ($x1, $x2) = ($x2, $x1 - $a / $d * $x2);\n        ($y1, $y2) = ($y2, $y1 - $b / $d * $y2);\n        $d = gcd($a, $b);\n    }\n    $x = $n / $d * $x2;\n    $y = $n / $d * $y2;\n    return [$x, $y];\n}",
    "    my $x = 0;\n    my $y = 0;\n    while ($x * $a <= $n) {\n        if (($n - $x * $a) % $b == 0) {\n            $y = ($n - $x * $a) / $b;\n            return [$x, $y];\n        }\n        $x++;\n    }\n    return undef;\n}",
    "    return undef unless $n % gcd($a, $b) == 0;\n    my($x, $y) = bezout($a, $b);\n    my $d = gcd($a, $b);\n    return [$x * $n / $d, $y * $n / $d];\n}",
    "    if ($a == 0) {\n        return undef if $n % $b != 0;\n        return [0, $n / $b];\n    }\n    my $x = find_solution($b % $a, $a, $n % $a);\n    return undef unless defined $x;\n    my $y = ($n - $b * $x->[0]) / $a;\n    return [$x->[0], $y];\n}",
    "    if ($a == 0) {\n        return undef if $n % $b != 0;\n        return [0, $n / $b];\n    }\n    my $x = find_solution($b % $a, $a, $n);\n    return undef if !defined $x;\n    return [$x->[1] - int($b / $a) * $x->[0], $x->[0]];\n}",
    "    my $x = 0;\n    my $y = 0;\n    while ($x * $a <= $n) {\n        my $remainder = $n - $x * $a;\n        if ($remainder % $b == 0) {\n            $y = $remainder / $b;\n            return [$x, $y];\n        }\n        $x++;\n    }\n    return undef;\n}",
    "    if ($n % gcd($a, $b) != 0) {\n        return undef;\n    }\n    my $x = $n / $a;\n    my $y = 0;\n    while ($x * $a + $y * $b != $n) {\n        $y++;\n        $x = ($n - $y * $b) / $a;\n    }\n    return [$x, $y];\n}",
    "    my $x = 0;\n    my $y = 0;\n    while ($x * $a <= $n) {\n        if (($n - $x * $a) % $b == 0) {\n            $y = ($n - $x * $a) / $b;\n            return [$x, $y];\n        }\n        $x++;\n    }\n    return undef;\n}",
    "    for my $x (0..$n) {\n        for my $y (0..$n) {\n            return [$x, $y] if $a * $x + $b * $y == $n;\n        }\n    }\n    return;\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    my $x1 = 1;\n    my $x2 = 0;\n    my $y1 = 0;\n    my $y2 = 1;\n    my $q = 0;\n    my $r = 0;\n    while ($b != 0) {\n        $q = int($a / $b);\n        $r = $a % $b;\n        $x = $x2 - $q * $x1;\n        $y = $y2 - $q * $y1;\n        $a = $b;\n        $b = $r;\n        $x2 = $x1;\n        $x1 = $x;\n        $y2 = $y1;\n        $y1 = $y;\n    }\n    $x = $x2;\n    $y = $y2;\n    return [$x, $y];\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    return undef if $n % $d != 0;\n    my $x1 = 0;\n    my $y1 = 1;\n    my $x2 = 1;\n    my $y2 = 0;\n    my $q = int($a / $b);\n    my $r = $a % $b;\n    while ($r > 0) {\n        my $temp = $x2;\n        $x2 = $x1 - $q * $x2;\n        $x1 = $temp;\n        $temp = $y2;\n        $y2 = $y1 - $q * $y2;\n        $y1 = $temp;\n        $a = $b;\n        $b = $r;\n        $q = int($a / $b);\n        $r = $a % $b;\n    }\n    $x = $x2 * ($n / $d);\n    $y = $y2 * ($n / $d);\n    return [$x, $y];\n}",
    "    my $x = 0;\n    my $y = 0;\n    while ($a * $x <= $n) {\n        my $r = $n - $a * $x;\n        if ($r % $b == 0) {\n            $y = $r / $b;\n            return [$x, $y];\n        }\n        $x++;\n    }\n    return undef;\n}",
    "    my $x = 0;\n    my $y = 0;\n    while ($x * $a <= $n) {\n        if (($n - $x * $a) % $b == 0) {\n            $y = ($n - $x * $a) / $b;\n            return [$x, $y];\n        }\n        $x++;\n    }\n    return undef;\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    my $x1 = 0;\n    my $y1 = 1;\n    my $x2 = 1;\n    my $y2 = 0;\n    while ($b != 0) {\n        my $q = int($a / $b);\n        my $r = $a % $b;\n        $x = $x2 - $q * $x1;\n        $y = $y2 - $q * $y1;\n        $a = $b;\n        $b = $r;\n        $x2 = $x1;\n        $y2 = $y1;\n        $x1 = $x;\n        $y1 = $y;\n    }\n    $x = $x2;\n    $y = $y2;\n    return [$x, $y];\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    my $x1 = 0;\n    my $y1 = 1;\n    my $x2 = 1;\n    my $y2 = 0;\n    my $q = 0;\n    my $r = 0;\n    while ($a % $b != 0) {\n        $q = int($a / $b);\n        $r = $a % $b;\n        $x = $x2 - $q * $x1;\n        $y = $y2 - $q * $y1;\n        $a = $b;\n        $b = $r;\n        $x2 = $x1;\n        $x1 = $x;\n        $y2 = $y1;\n        $y1 = $y;\n    }\n    $x = $x2 - $q * $x1;\n    $y = $y2 - $q * $y1;\n    return ($x, $y);\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    ($x, $y) = find_solution($b % $a, $a, $n);\n    return ($y - ($b / $a) * $x, $x);\n}",
    "    return undef if $n % gcd($a, $b) != 0;\n    my($x, $y) = (0, 0);\n    my $d = gcd($a, $b);\n    ($x, $y) = find_solution($b/$d, $a/$d, $n/$d) if $d != 1;\n    $x -= $b/$d if $n/$d < 0;\n    $y += $a/$d if $n/$d < 0;\n    return [$x, $y];\n}",
    "    my $x = 0;\n    my $y = 0;\n    while ($a * $x <= $n) {\n        my $r = $n - $a * $x;\n        if ($r % $b == 0) {\n            $y = $r / $b;\n            return [$x, $y];\n        }\n        $x++;\n    }\n    return undef;\n}",
    "    my $x = 0;\n    my $y = 0;\n    while ($a * $x <= $n) {\n        if (($n - $a * $x) % $b == 0) {\n            $y = ($n - $a * $x) / $b;\n            return [$x, $y];\n        }\n        $x++;\n    }\n    return undef;\n}",
    "    my $x = 0;\n    my $y = 0;\n    while (1) {\n        my $x_new = $x + $b;\n        my $y_new = $y - $a;\n        if ($x_new >= 0 && $y_new >= 0 && $x_new + $y_new == $n) {\n            return [$x_new, $y_new];\n        }\n        $x = $x_new;\n        $y = $y_new;\n        if ($x < 0 && $y < 0) {\n            return undef;\n        }\n    }\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $gcd = gcd($a, $b);\n    if ($n % $gcd != 0) {\n        return undef;\n    }\n    my $x0 = 0;\n    my $y0 = 1;\n    my $x1 = 1;\n    my $y1 = 0;\n    my $q = int($a / $b);\n    my $r = $a % $b;\n    while ($r > 0) {\n        my $x2 = $x0 - $q * $x1;\n        my $y2 = $y0 - $q * $y1;\n        $x0 = $x1;\n        $y0 = $y1;\n        $x1 = $x2;\n        $y1 = $y2;\n        $a = $b;\n        $b = $r;\n        $q = int($a / $b);\n        $r = $a % $b;\n    }\n    $x = $x1 * int($n / $b);\n    $y = $y1 * int($n / $b);\n    return [$x, $y];\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    my $x1 = 0;\n    my $y1 = 1;\n    my $x2 = 1;\n    my $y2 = 0;\n    my $q = 0;\n    my $r = 0;\n    while ($b > 0) {\n        $q = int($a / $b);\n        $r = $a % $b;\n        $x = $x2 - $q * $x1;\n        $y = $y2 - $q * $y1;\n        $a = $b;\n        $b = $r;\n        $x2 = $x1;\n        $x1 = $x;\n        $y2 = $y1;\n        $y1 = $y;\n    }\n    $x = $x2;\n    $y = $y2;\n    return [$x, $y];\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    my $x1 = $x;\n    my $y1 = $y;\n    my $x2 = 1;\n    my $y2 = 0;\n    my $q = $a / $b;\n    my $r = $a % $b;\n    while ($r > 0) {\n        my $temp = $x2;\n        $x2 = $x1 - $q * $x2;\n        $x1 = $temp;\n        $temp = $y2;\n        $y2 = $y1 - $q * $y2;\n        $y1 = $temp;\n        $a = $b;\n        $b = $r;\n        $q = $a / $b;\n        $r = $a % $b;\n    }\n    $x = $x2 * ($n / $d);\n    $y = $y2 * ($n / $d);\n    return [$x, $y];\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    my $x1 = 0;\n    my $y1 = 1;\n    my $x2 = 1;\n    my $y2 = 0;\n    my $q = 0;\n    my $r = 0;\n    while ($b != 0) {\n        $q = int($a / $b);\n        $r = $a % $b;\n        $x = $x2 - $q * $x1;\n        $y = $y2 - $q * $y1;\n        $a = $b;\n        $b = $r;\n        $x2 = $x1;\n        $x1 = $x;\n        $y2 = $y1;\n        $y1 = $y;\n    }\n    $x = $x2;\n    $y = $y2;\n    return [$x, $y];\n}",
    "    my $x = 0;\n    my $y = 0;\n    while ($a * $x <= $n) {\n        my $r = $n - $a * $x;\n        if ($r % $b == 0) {\n            $y = $r / $b;\n            return ($x, $y);\n        }\n        $x++;\n    }\n    return undef;\n}",
    "    my $x = 0;\n    my $y = 0;\n    while ($x * $a <= $n) {\n        if (($n - $x * $a) % $b == 0) {\n            $y = ($n - $x * $a) / $b;\n            return [$x, $y];\n        }\n        $x++;\n    }\n    return undef;\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    ($x, $y) = find_solution($b % $a, $a, $n);\n    $x = $y - int($b / $a) * $x;\n    $y = int($n / $a) * $x + $y;\n    return ($x, $y);\n}",
    "    my $x = 0;\n    my $y = 0;\n    while (1) {\n        if ($a * $x + $b * $y == $n) {\n            return [$x, $y];\n        }\n        if ($a * $x + $b * $y > $n) {\n            return undef;\n        }\n        if ($x == 0) {\n            $y++;\n        } else {\n            $x--;\n            $y++;\n        }\n    }\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    my $x1 = 0;\n    my $y1 = 1;\n    my $x2 = 1;\n    my $y2 = 0;\n    my $q = 0;\n    while ($a != 0) {\n        $q = int($b / $a);\n        ($a, $b) = ($b % $a, $a);\n        ($x1, $x2) = ($x2 - $q * $x1, $x1);\n        ($y1, $y2) = ($y2 - $q * $y1, $y1);\n    }\n    $x = $x2 * ($n / $d);\n    $y = $y2 * ($n / $d);\n    return [$x, $y];\n}",
    "    my($x, $y);\n    my $d = gcd($a, $b);\n    if ($n % $d) {\n        return undef;\n    }\n    $x = $n / $d * inverse_mod($a / $d, $b / $d);\n    $y = ($n - $a * $x) / $b;\n    return [$x, $y];\n}",
    "    my $x = 0;\n    my $y = 0;\n    while (1) {\n        my $r = $n - $a * $x;\n        if ($r % $b == 0) {\n            $y = $r / $b;\n            return [$x, $y];\n        }\n        $x++;\n    }\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    my $x1 = 1;\n    my $y1 = 0;\n    my $x2 = 0;\n    my $y2 = 1;\n    my $q = int($a / $b);\n    my $r = $a % $b;\n    while ($r > 0) {\n        my $temp = $x2;\n        $x2 = $x1 - $q * $x2;\n        $x1 = $temp;\n        $temp = $y2;\n        $y2 = $y1 - $q * $y2;\n        $y1 = $temp;\n        $a = $b;\n        $b = $r;\n        $q = int($a / $b);\n        $r = $a % $b;\n    }\n    $x = $x2 * ($n / $d);\n    $y = $y2 * ($n / $d);\n    return [$x, $y];\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    my $x1;\n    my $y1;\n    my $x2;\n    my $y2;\n    my $q;\n    ($x1, $y1, $x2, $y2) = (1, 0, 0, 1);\n    while ($a != 0) {\n        $q = int($b / $a);\n        ($x, $y, $x1, $y1, $x2, $y2, $a, $b) = ($x2, $y2, $x1 - $q * $x2, $y1 - $q * $y2, $x, $y, $b % $a, $a);\n    }\n    $x = $x * ($n / $d);\n    $y = $y * ($n / $d);\n    return [$x, $y];\n}",
    "    my($x, $y);\n    if ($n % gcd($a, $b) == 0) {\n        ($x, $y) = find_solution_helper($a, $b, $n);\n    } else {\n        return undef;\n    }\n    return [$x, $y];\n}",
    "    my $x = 0;\n    my $y = 0;\n    while ($x * $a <= $n) {\n        $y = ($n - $x * $a) / $b;\n        if ($y == int($y)) {\n            return [$x, $y];\n        }\n        $x++;\n    }\n    return undef;\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    my $x1 = 0;\n    my $y1 = 1;\n    my $a1 = $a / $d;\n    my $b1 = $b / $d;\n    while ($a1 * $x1 + $b1 * $y1 != 1) {\n        my $q = int($a1 / $b1);\n        my $r = $a1 % $b1;\n        $x = $x1;\n        $x1 = $y1;\n        $y1 = $x - $q * $y1;\n        $a1 = $b1;\n        $b1 = $r;\n    }\n    $x = $n / $d * $x1;\n    $y = ($n - $a * $x) / $b;\n    return [$x, $y];\n}",
    "    if ($n % gcd($a, $b) != 0) {\n        return undef;\n    }\n    my $x = $n / $a;\n    my $y = $n / $b;\n    my $d = gcd($a, $b);\n    my $x0 = $x * $a / $d;\n    my $y0 = $y * $b / $d;\n    my $x1 = $x0;\n    my $y1 = $y0;\n    while ($x0 > $x) {\n        $x1 -= $b / $d;\n        $y1 += $a / $d;\n    }\n    while ($x1 < $x) {\n        $x0 += $b / $d;\n        $y0 -= $a / $d;\n    }\n    return [$x0, $y0];\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    ($x, $y) = find_solution($b % $a, $a, $n);\n    return ($y - int($b / $a) * $x, $x);\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    my $x1 = 0;\n    my $x2 = 1;\n    my $y1 = 1;\n    my $y2 = 0;\n    my $q = 0;\n    my $r = 0;\n    while ($a != 0) {\n        $q = int($b / $a);\n        $r = $b % $a;\n        $x = $x2 - $q * $x1;\n        $y = $y2 - $q * $y1;\n        $b = $a;\n        $a = $r;\n        $x2 = $x1;\n        $x1 = $x;\n        $y2 = $y1;\n        $y1 = $y;\n    }\n    $x = $x2;\n    $y = $y2;\n    return [$x, $y];\n}",
    "    if ($n % gcd($a, $b) != 0) {\n        return undef;\n    }\n    my($x, $y) = (0, 1);\n    my($u, $v) = (1, 0);\n    my($q, $r);\n    while ($a != 0) {\n        ($q, $r) = ($b / $a, $b % $a);\n        ($u, $v) = ($x - $u * $q, $y - $v * $q);\n        ($a, $b) = ($r, $a);\n        ($x, $y) = ($u, $v);\n    }\n    return [$x, $y];\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    my $x1 = 0;\n    my $y1 = 1;\n    my $a1 = $a / $d;\n    my $b1 = $b / $d;\n    while ($a1 * $x1 + $b1 * $y1 != 1) {\n        my $q = int($a1 / $b1);\n        my $r = $a1 % $b1;\n        $x = $x1;\n        $x1 = $y1;\n        $y1 = $x - $q * $y1;\n        $a1 = $b1;\n        $b1 = $r;\n    }\n    $x = $n * $x1 / $d;\n    $y = ($n - $a * $x) / $b;\n    return [$x, $y];\n}",
    "    for my $x (0..$n) {\n        for my $y (0..$n) {\n            return [$x, $y] if $a * $x + $b * $y == $n;\n        }\n    }\n    return undef;\n}",
    "    return undef if $a == 0 && $b == 0;\n    return undef if $n % gcd($a, $b) != 0;\n    my($x, $y) = (0, 1);\n    my($u, $v) = (1, 0);\n    while ($a != 0) {\n        my $q = $b / $a;\n        ($x, $y, $u, $v) = ($u, $v, $x - $q * $u, $y - $q * $v);\n        ($a, $b) = ($b % $a, $a);\n    }\n    return [$n / $b * $x, $n / $b * $y];\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d) {\n        return undef;\n    }\n    ($x, $y) = ext_gcd($a, $b);\n    $x *= $n / $d;\n    $y *= $n / $d;\n    return ($x, $y);\n}",
    "    my($x, $y);\n    if ($n % gcd($a, $b) != 0) {\n        return undef;\n    }\n    else {\n        ($x, $y) = find_solution_helper($a, $b, $n);\n        return [$x, $y];\n    }\n}",
    "    if ($n % gcd($a, $b)) {\n        return undef;\n    }\n    my $x = $n / $a;\n    my $y = $n / $b;\n    my $d = gcd($a, $b);\n    my $x0 = $x * $a / $d;\n    my $y0 = $y * $b / $d;\n    my $x1 = $x0 - $b / $d;\n    my $y1 = $y0 + $a / $d;\n    return [$x1, $y1];\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    my $x1 = 0;\n    my $y1 = 1;\n    my $x2 = 1;\n    my $y2 = 0;\n    my $q = 0;\n    my $r = 0;\n    while ($a % $b != 0) {\n        $q = int($a / $b);\n        $r = $a % $b;\n        $x = $x2 - $q * $x1;\n        $y = $y2 - $q * $y1;\n        $a = $b;\n        $b = $r;\n        $x2 = $x1;\n        $x1 = $x;\n        $y2 = $y1;\n        $y1 = $y;\n    }\n    $x = $x2;\n    $y = $y2;\n    $x *= $n / $d;\n    $y *= $n / $d;\n    return [$x, $y];\n}",
    "    my($x, $y);\n    if ($n % gcd($a, $b) != 0) {\n        return undef;\n    }\n    else {\n        ($x, $y) = find_solution_recursive($a, $b, $n);\n        return [$x, $y];\n    }\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    my $x1 = 0;\n    my $y1 = 1;\n    my $x2 = 1;\n    my $y2 = 0;\n    my $q = 0;\n    my $r = 0;\n    while ($b != 0) {\n        $q = int($a / $b);\n        $r = $a % $b;\n        $x = $x2 - $q * $x1;\n        $y = $y2 - $q * $y1;\n        $a = $b;\n        $b = $r;\n        $x2 = $x1;\n        $y2 = $y1;\n        $x1 = $x;\n        $y1 = $y;\n    }\n    $x = $x2;\n    $y = $y2;\n    return [$x, $y];\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d) {\n        return undef;\n    }\n    $a /= $d;\n    $b /= $d;\n    $n /= $d;\n    my $x1 = 0;\n    my $y1 = 1;\n    my $x2 = 1;\n    my $y2 = 0;\n    while ($b) {\n        my $q = int($a / $b);\n        my $r = $a % $b;\n        $x = $x2 - $q * $x1;\n        $y = $y2 - $q * $y1;\n        $a = $b;\n        $b = $r;\n        $x2 = $x1;\n        $y2 = $y1;\n        $x1 = $x;\n        $y1 = $y;\n    }\n    return [$x2 * $n, $y2 * $n];\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    my $x1 = 0;\n    my $y1 = 1;\n    my $x2 = 1;\n    my $y2 = 0;\n    my $q = int($a / $b);\n    my $r = $a % $b;\n    while ($r > 0) {\n        my $temp = $x2;\n        $x2 = $x1 - $q * $x2;\n        $x1 = $temp;\n        $temp = $y2;\n        $y2 = $y1 - $q * $y2;\n        $y1 = $temp;\n        $a = $b;\n        $b = $r;\n        $q = int($a / $b);\n        $r = $a % $b;\n    }\n    $x = $x2 * int($n / $d);\n    $y = $y2 * int($n / $d);\n    return [$x, $y];\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    ($x, $y) = find_solution($b % $a, $a, $n);\n    return ($y - int($b / $a) * $x, $x);\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    while ($x * $a + $y * $b != $n) {\n        if ($x * $a + $y * $b < $n) {\n            $x++;\n        }\n        else {\n            $y++;\n        }\n    }\n    return [$x, $y];\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    ($x, $y) = find_solution($b % $a, $a, $n);\n    $x -= int($b / $a) * $y;\n    return ($x, $y);\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d != 0) {\n        return undef;\n    }\n    my $x1 = 0;\n    my $y1 = 1;\n    my $a1 = $a / $d;\n    my $b1 = $b / $d;\n    while ($a1 * $x1 + $b1 * $y1 != 1) {\n        if ($a1 * $x1 + $b1 * $y1 < 1) {\n            $x1++;\n        } else {\n            $y1--;\n        }\n    }\n    $x = $n / $d * $x1;\n    $y = $n / $d * $y1;\n    return [$x, $y];\n}",
    "    if ($n % gcd($a, $b) != 0) {\n        return undef;\n    }\n    my($x, $y) = (0, 0);\n    while ($a * $x + $b * $y != $n) {\n        if ($a * $x + $b * $y < $n) {\n            $x++;\n        } else {\n            $y--;\n        }\n    }\n    return [$x, $y];\n}",
    "    if ($a == 0) {\n        return undef if $n % $b != 0;\n        return [0, $n / $b];\n    }\n    my $x = find_solution($b % $a, $a, $n % $a);\n    return undef if !defined $x;\n    return [$x->[1], $x->[0] - int($b / $a) * $x->[1]];\n}",
    "    if ($n % gcd($a, $b) != 0) {\n        return undef;\n    }\n    my($x, $y) = extended_gcd($a, $b);\n    return [$x * $n / gcd($a, $b), $y * $n / gcd($a, $b)];\n}",
    "    my $x = 0;\n    my $y = 0;\n    while ($x * $a <= $n) {\n        if (($n - $x * $a) % $b == 0) {\n            $y = ($n - $x * $a) / $b;\n            return [$x, $y];\n        }\n        $x++;\n    }\n    return undef;\n}",
    "    my $x = 0;\n    my $y = 0;\n    while ($a * $x <= $n) {\n        my $remainder = $n - $a * $x;\n        if ($remainder % $b == 0) {\n            $y = $remainder / $b;\n            return [$x, $y];\n        }\n        $x++;\n    }\n    return undef;\n}",
    "    my $x = 0;\n    my $y = 0;\n    while ($a * $x <= $n) {\n        my $remainder = $n - $a * $x;\n        if ($remainder % $b == 0) {\n            $y = $remainder / $b;\n            return [$x, $y];\n        }\n        $x++;\n    }\n    return undef;\n}",
    "    my $x = 0;\n    my $y = 0;\n    while ($x * $a <= $n) {\n        my $remainder = $n - $x * $a;\n        if ($remainder % $b == 0) {\n            $y = $remainder / $b;\n            return [$x, $y];\n        }\n        $x++;\n    }\n    return undef;\n}",
    "    for my $x (0 .. $n) {\n        for my $y (0 .. $n) {\n            if ($a * $x + $b * $y == $n) {\n                return [$x, $y];\n            }\n        }\n    }\n    return undef;\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $found = 0;\n    while ($x <= $n) {\n        $y = ($n - ($a * $x)) / $b;\n        if ($y == int($y)) {\n            $found = 1;\n            last;\n        }\n        $x++;\n    }\n    return $found ? [$x, $y] : undef;\n}",
    "    return undef if $n % gcd($a, $b) != 0;\n    my $x = $n / $a;\n    my $y = 0;\n    while ($x >= 0) {\n        if (($n - $a * $x) % $b == 0) {\n            $y = ($n - $a * $x) / $b;\n            return [$x, $y];\n        }\n        $x--;\n    }\n    return undef;\n}",
    "    my $x = 0;\n    my $y = 0;\n    while ($x * $a <= $n) {\n        while ($y * $b <= $n) {\n            if ($x * $a + $y * $b == $n) {\n                return [$x, $y];\n            }\n            $y++;\n        }\n        $x++;\n    }\n    return undef;\n}",
    "    return undef unless $n % gcd($a, $b) == 0;\n    my $x = $n / $a;\n    my $y = 0;\n    while ($x >= 0) {\n        if (($n - $a * $x) % $b == 0) {\n            $y = ($n - $a * $x) / $b;\n            return [$x, $y];\n        }\n        $x--;\n    }\n    return undef;\n}",
    "    my $x = 0;\n    my $y = 0;\n    my $d = gcd($a, $b);\n    if ($n % $d) {\n        return undef;\n    }\n    my $x1 = 1;\n    my $y1 = 0;\n    my $x2 = 0;\n    my $y2 = 1;\n    while ($b) {\n        my $q = int($a / $b);\n        ($a, $b) = ($b, $a % $b);\n        ($x1, $x2) = ($x2, $x1 - $q * $x2);\n        ($y1, $y2) = ($y2, $y1 - $q * $y2);\n    }\n    return [$x1 * $n / $d, $y1 * $n / $d];\n}",
    "    return undef if $n % gcd($a, $b) != 0;\n    my($x, $y) = (0, 0);\n    my($x1, $y1) = (1, 0);\n    my($x2, $y2) = (0, 1);\n    while ($a != 0) {\n        my $q = int($b / $a);\n        ($x, $x1, $x2) = ($x1 - $q * $x2, $x2, $x - $q * $x2);\n        ($y, $y1, $y2) = ($y1 - $q * $y2, $y2, $y - $q * $y2);\n        ($a, $b) = ($b % $a, $a);\n    }\n    return [$x, $y];\n}",
    "    my $x = 0;\n    my $y = 0;\n    while ($x * $a <= $n) {\n        my $remainder = $n - $x * $a;\n        if ($remainder % $b == 0) {\n            $y = $remainder / $b;\n            return [$x, $y];\n        }\n        $x++;\n    }\n    return undef;\n}"
  ]
}
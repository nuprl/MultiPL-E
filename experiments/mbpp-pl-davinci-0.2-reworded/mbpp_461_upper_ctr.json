{
  "name": "mbpp_461_upper_ctr",
  "language": "pl",
  "prompt": "# Write a plthon function to count the upper case characters in a given string.\nsub upper_ctr {\n    my($str) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_461_upper_ctr.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&upper_ctr;\n        if(eq_deeply($candidate->(\"PYthon\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"BigData\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"program\"),0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my $count = 0;\n    foreach my $char (split //, $str) {\n        $count++ if $char =~ /[A-Z]/;\n    }\n    return $count;\n}",
    "    my $count = 0;\n    for(my $i = 0; $i < length($str); $i++) {\n        if(substr($str, $i, 1) =~ /[A-Z]/) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    for my $char (split //, $str) {\n        if ($char =~ /[A-Z]/) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my($ctr) = 0;\n    foreach my $ch (split(//, $str)) {\n        if ($ch =~ /[A-Z]/) {\n            $ctr++;\n        }\n    }\n    return $ctr;\n}",
    "    my($ctr) = 0;\n    for(my($i) = 0; $i < length($str); $i++) {\n        if(substr($str, $i, 1) =~ /[A-Z]/) {\n            $ctr++;\n        }\n    }\n    return $ctr;\n}",
    "    my($ctr) = 0;\n    foreach my $char (split //, $str) {\n        if ($char =~ /[A-Z]/) {\n            $ctr++;\n        }\n    }\n    return $ctr;\n}",
    "    my $count = 0;\n    foreach my $char (split //, $str) {\n        if ($char =~ /[A-Z]/) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my($ctr) = 0;\n    foreach my $char (split //, $str) {\n        if ($char =~ /[A-Z]/) {\n            $ctr++;\n        }\n    }\n    return $ctr;\n}",
    "    my $count = 0;\n    foreach my $char (split //, $str) {\n        if ($char =~ /[A-Z]/) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my($ctr) = 0;\n    foreach(split(//, $str)) {\n        $ctr++ if($_ =~ /[A-Z]/);\n    }\n    return $ctr;\n}",
    "    my $count = 0;\n    foreach my $char (split //, $str) {\n        $count++ if $char =~ /[A-Z]/;\n    }\n    return $count;\n}",
    "    my $count = 0;\n    foreach my $char (split //, $str) {\n        if ($char =~ /[A-Z]/) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    foreach my $char (split //, $str) {\n        if ($char =~ /[A-Z]/) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my($ctr) = 0;\n    foreach my $char (split //, $str) {\n        $ctr++ if ($char =~ /[A-Z]/);\n    }\n    return $ctr;\n}",
    "    my($ctr) = 0;\n    for my $i (0 .. length($str) - 1) {\n        if (substr($str, $i, 1) =~ /[A-Z]/) {\n            $ctr++;\n        }\n    }\n    return $ctr;\n}",
    "    my $ctr = 0;\n    foreach my $c (split //, $str) {\n        $ctr++ if $c =~ /[A-Z]/;\n    }\n    return $ctr;\n}",
    "    my($ctr) = 0;\n    foreach my $char (split //, $str) {\n        if ($char =~ /[A-Z]/) {\n            $ctr++;\n        }\n    }\n    return $ctr;\n}",
    "    my $ctr = 0;\n    foreach my $char (split //, $str) {\n        if ($char =~ /[A-Z]/) {\n            $ctr++;\n        }\n    }\n    return $ctr;\n}",
    "    my $count = 0;\n    foreach my $char (split //, $str) {\n        if ($char =~ /[A-Z]/) {\n            $count++;\n        }\n    }\n    return $count;\n}",
    "    my $count = 0;\n    foreach my $char (split //, $str) {\n        if ($char =~ /[A-Z]/) {\n            $count++;\n        }\n    }\n    return $count;\n}"
  ]
}
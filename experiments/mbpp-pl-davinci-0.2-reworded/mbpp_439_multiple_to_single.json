{
  "name": "mbpp_439_multiple_to_single",
  "language": "pl",
  "prompt": "# Write a function to join an array of multiple integers into a single integer.\nsub multiple_to_single {\n    my($L) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_439_multiple_to_single.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&multiple_to_single;\n        if(eq_deeply($candidate->([11, 33, 50]),113350)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-1, 2, 3, 4, 5, 6]),-123456)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([10, 15, 20, 25]),10152025)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my $result = 0;\n    for my $i (0 .. $#$L) {\n        $result = $result * 10 + $L->[$i];\n    }\n    return $result;\n}",
    "    my $result = 0;\n    for my $i (0 .. $#$L) {\n        $result = $result * 10 + $L->[$i];\n    }\n    return $result;\n}",
    "    my $R = '';\n    foreach my $i (@$L) {\n        $R .= $i;\n    }\n    return $R;\n}",
    "    my $result = 0;\n    foreach my $i (@$L) {\n        $result = $result * 10 + $i;\n    }\n    return $result;\n}",
    "    my $result = 0;\n    foreach my $i (@$L) {\n        $result = $result * 10 + $i;\n    }\n    return $result;\n}",
    "    my $result = 0;\n    foreach my $i (@$L) {\n        $result = $result * 10 + $i;\n    }\n    return $result;\n}",
    "    my $s = '';\n    foreach my $i (@$L) {\n        $s .= chr($i);\n    }\n    return $s;\n}",
    "    my $s = \"\";\n    foreach my $i (@$L) {\n        $s .= $i;\n    }\n    return $s;\n}",
    "    my $result = 0;\n    foreach my $i (@$L) {\n        $result = $result * 10 + $i;\n    }\n    return $result;\n}",
    "    my $s = '';\n    foreach my $i (@$L) {\n        $s .= chr($i);\n    }\n    return $s;\n}",
    "    my $s = \"\";\n    foreach my $i (@$L) {\n\t$s .= $i;\n    }\n    return $s;\n}",
    "    my $result = 0;\n    foreach my $i (@$L) {\n        $result = $result * 10 + $i;\n    }\n    return $result;\n}",
    "    my $s = '';\n    foreach my $i (@$L) {\n        $s .= $i;\n    }\n    return $s;\n}",
    "    my $R = 0;\n    foreach my $i (@$L) {\n        $R = $R * 10 + $i;\n    }\n    return $R;\n}",
    "    my $s = '';\n    foreach my $i (@$L) {\n        $s .= $i;\n    }\n    return $s;\n}",
    "    my $s = \"\";\n    foreach my $i (@$L) {\n        $s .= $i;\n    }\n    return $s;\n}",
    "    my $result = 0;\n    for my $i (0 .. $#$L) {\n        $result += $L->[$i] * 10**$i;\n    }\n    return $result;\n}",
    "    my $result = 0;\n    foreach my $i (@$L) {\n        $result = $result * 10 + $i;\n    }\n    return $result;\n}",
    "    my $s = '';\n    foreach my $i (@$L) {\n        $s .= $i;\n    }\n    return $s;\n}",
    "    my $result = 0;\n    for my $i (@$L) {\n        $result = $result * 10 + $i;\n    }\n    return $result;\n}",
    "    my $s = '';\n    foreach my $i (@$L) {\n        $s .= $i;\n    }\n    return $s;\n}",
    "    my $R = 0;\n    for my $i (@$L) {\n        $R = $R * 10 + $i;\n    }\n    return $R;\n}",
    "    my $str = join('', @$L);\n    return $str;\n}",
    "    my $s = \"\";\n    foreach my $i (@$L) {\n        $s .= $i;\n    }\n    return $s;\n}",
    "    my $result = 0;\n    foreach my $i (@$L) {\n        $result = $result * 10 + $i;\n    }\n    return $result;\n}",
    "    my $R = 0;\n    foreach my $i (@$L) {\n        $R = $R * 10 + $i;\n    }\n    return $R;\n}",
    "    my $s = \"\";\n    foreach my $i (@$L) {\n        $s .= $i;\n    }\n    return $s;\n}",
    "    my $result = 0;\n    foreach my $i (@$L) {\n        $result = $result * 10 + $i;\n    }\n    return $result;\n}",
    "    my $s = '';\n    foreach my $i (@$L) {\n        $s .= $i;\n    }\n    return $s;\n}",
    "    my $result = 0;\n    foreach my $i (@$L) {\n        $result = $result * 10 + $i;\n    }\n    return $result;\n}",
    "    my $s = '';\n    foreach my $i (@$L) {\n        $s .= $i;\n    }\n    return $s;\n}",
    "    my $s = '';\n    for my $i (@$L) {\n        $s .= sprintf(\"%03d\", $i);\n    }\n    return $s;\n}",
    "    my $s = '';\n    foreach my $i (@$L) {\n        $s .= sprintf(\"%02d\", $i);\n    }\n    return $s;\n}",
    "    my $s = '';\n    foreach my $i (@$L) {\n        $s .= $i;\n    }\n    return $s;\n}",
    "    my $result = 0;\n    for my $i (@$L) {\n        $result = $result * 10 + $i;\n    }\n    return $result;\n}",
    "    my $s = \"\";\n    for my $i (@$L) {\n        $s .= $i;\n    }\n    return $s;\n}",
    "    my $result = 0;\n    foreach my $i (@$L) {\n        $result = $result * 10 + $i;\n    }\n    return $result;\n}",
    "    my $result = 0;\n    for my $i (@$L) {\n        $result = $result * 10 + $i;\n    }\n    return $result;\n}",
    "    my $s = \"\";\n    foreach my $i (@$L) {\n        $s .= $i;\n    }\n    return $s;\n}",
    "    my $result = 0;\n    foreach my $i (@$L) {\n        $result = $result * 10 + $i;\n    }\n    return $result;\n}",
    "    my $i;\n    my $s = \"\";\n    for ($i = 0; $i < @$L; $i++) {\n\t$s .= $L->[$i];\n    }\n    return $s;\n}",
    "    my $s = '';\n    for my $i (@$L) {\n        $s .= sprintf('%04d', $i);\n    }\n    return $s;\n}",
    "    my $R = '';\n    foreach my $i (@$L) {\n        $R .= $i;\n    }\n    return $R;\n}",
    "    my $result = 0;\n    foreach my $i (@$L) {\n        $result = $result * 10 + $i;\n    }\n    return $result;\n}",
    "    my $result = 0;\n    foreach my $i (@$L) {\n        $result = $result * 10 + $i;\n    }\n    return $result;\n}",
    "    my $s = '';\n    for my $i (@$L) {\n        $s .= sprintf(\"%03d\", $i);\n    }\n    return $s;\n}",
    "    my $result = 0;\n    foreach my $i (@$L) {\n        $result = $result * 10 + $i;\n    }\n    return $result;\n}",
    "    my $N = 0;\n    for my $i (0 .. $#$L) {\n        $N = $N * 10 + $L->[$i];\n    }\n    return $N;\n}",
    "    my $result = 0;\n    foreach my $i (@$L) {\n        $result = $result * 10 + $i;\n    }\n    return $result;\n}",
    "    my $result = 0;\n    foreach my $i (@$L) {\n        $result = $result * 10 + $i;\n    }\n    return $result;\n}",
    "    my $R = 0;\n    foreach my $i (@$L) {\n        $R = $R * 10 + $i;\n    }\n    return $R;\n}",
    "    my $s = \"\";\n    foreach my $i (@$L) {\n        $s .= $i;\n    }\n    return $s;\n}",
    "    my $s = '';\n    for my $i (@$L) {\n        $s .= sprintf(\"%03d\", $i);\n    }\n    return $s;\n}",
    "    my $result = 0;\n    foreach my $i (@$L) {\n        $result = $result * 10 + $i;\n    }\n    return $result;\n}",
    "    my $result = 0;\n    foreach my $i (@$L) {\n        $result = $result * 10 + $i;\n    }\n    return $result;\n}",
    "    my $result = 0;\n    foreach my $i (@$L) {\n        $result = $result * 10 + $i;\n    }\n    return $result;\n}",
    "    my $result = 0;\n    for my $i (@$L) {\n        $result = $result * 10 + $i;\n    }\n    return $result;\n}",
    "    my $i;\n    my $result = 0;\n    for ($i = 0; $i < @$L; $i++) {\n        $result = $result * 10 + $L->[$i];\n    }\n    return $result;\n}",
    "    my $s = \"\";\n    foreach my $i (@{$L}) {\n        $s .= $i;\n    }\n    return $s;\n}",
    "    my $result = 0;\n    foreach my $i (@$L) {\n        $result = $result * 10 + $i;\n    }\n    return $result;\n}",
    "    my $result = 0;\n    foreach my $i (@$L) {\n        $result = $result * 10 + $i;\n    }\n    return $result;\n}",
    "    my $s = '';\n    foreach my $i (@$L) {\n        $s .= $i;\n    }\n    return $s;\n}",
    "    my $result = 0;\n    foreach my $e (@$L) {\n        $result = $result * 10 + $e;\n    }\n    return $result;\n}",
    "    my $n = 0;\n    for my $i (@$L) {\n        $n = $n * 10 + $i;\n    }\n    return $n;\n}",
    "    my $i = 0;\n    my $n = 0;\n    while ($i < @$L) {\n        $n = $n * 10 + $L->[$i];\n        $i++;\n    }\n    return $n;\n}",
    "    my $R = 0;\n    foreach my $i (@$L) {\n        $R = $R * 10 + $i;\n    }\n    return $R;\n}",
    "    my $s = '';\n    foreach my $i (@$L) {\n        $s .= $i;\n    }\n    return $s;\n}",
    "    my $result = 0;\n    foreach my $i (@$L) {\n        $result = $result * 10 + $i;\n    }\n    return $result;\n}",
    "    my $s = \"\";\n    foreach my $i (@$L) {\n\t$s .= $i;\n    }\n    return $s;\n}",
    "    my $result = 0;\n    foreach my $i (@$L) {\n        $result = $result * 10 + $i;\n    }\n    return $result;\n}",
    "    my $s = '';\n    foreach my $i (@$L) {\n        $s .= $i;\n    }\n    return $s;\n}",
    "    my $s = '';\n    foreach my $i (@$L) {\n        $s .= $i;\n    }\n    return $s;\n}",
    "    my $s = \"\";\n    for my $i (@$L) {\n        $s .= $i;\n    }\n    return $s;\n}",
    "    my $s = \"\";\n    foreach my $i (@$L) {\n        $s .= $i;\n    }\n    return $s;\n}",
    "    my $s = \"\";\n    foreach my $i (@$L) {\n        $s .= $i;\n    }\n    return $s;\n}",
    "    my $R = 0;\n    for my $i (0 .. $#$L) {\n        $R += $L->[$i] * 10**$i;\n    }\n    return $R;\n}",
    "    my $result = 0;\n    my $i = 0;\n    for my $n (@$L) {\n        $result += $n * 10**$i;\n        $i++;\n    }\n    return $result;\n}",
    "    my $s = '';\n    for my $i (@$L) {\n        $s .= $i;\n    }\n    return $s;\n}",
    "    my $s = '';\n    foreach my $i (@$L) {\n        $s .= $i;\n    }\n    return $s;\n}",
    "    my $s = '';\n    for my $i (@$L) {\n        $s .= $i;\n    }\n    return $s;\n}",
    "    my $result = 0;\n    for my $i (0 .. $#$L) {\n        $result += $L->[$i] * 10**$i;\n    }\n    return $result;\n}",
    "    my $s = '';\n    foreach my $i (@$L) {\n        $s .= $i;\n    }\n    return $s;\n}",
    "    my $s = '';\n    foreach my $n (@$L) {\n        $s .= sprintf(\"%02d\", $n);\n    }\n    return $s;\n}",
    "    my $s = '';\n    foreach my $i (@$L) {\n        $s .= $i;\n    }\n    return $s;\n}",
    "    my $s = \"\";\n    foreach my $i (@$L) {\n        $s .= $i;\n    }\n    return $s;\n}",
    "    my $result = 0;\n    for my $i (@$L) {\n        $result = $result * 10 + $i;\n    }\n    return $result;\n}",
    "    my $s = '';\n    for my $i (@$L) {\n        $s .= $i;\n    }\n    return $s;\n}",
    "    my $s = '';\n    for my $i (@$L) {\n        $s .= $i;\n    }\n    return $s;\n}",
    "    my $s = \"\";\n    foreach my $i (@$L) {\n        $s .= $i;\n    }\n    return $s;\n}",
    "    my $s = \"\";\n    foreach my $i (@$L) {\n        $s .= $i;\n    }\n    return $s;\n}",
    "    my $s = \"\";\n    foreach my $i (@$L) {\n\t$s .= $i;\n    }\n    return $s;\n}",
    "    my $s = \"\";\n    foreach my $i (@$L) {\n\t$s .= $i;\n    }\n    return $s;\n}",
    "    my $s = '';\n    foreach my $i (@$L) {\n        $s .= $i;\n    }\n    return $s;\n}",
    "    my $result = 0;\n    foreach my $i (@$L) {\n        $result = $result * 10 + $i;\n    }\n    return $result;\n}",
    "    my $R = 0;\n    foreach my $i (@$L) {\n        $R = $R * 10 + $i;\n    }\n    return $R;\n}",
    "    my $s = '';\n    foreach my $i (@$L) {\n        $s .= $i;\n    }\n    return $s;\n}",
    "    my $result = 0;\n    foreach my $i (@$L) {\n        $result = $result * 10 + $i;\n    }\n    return $result;\n}",
    "    my $s = \"\";\n    foreach my $i (@$L) {\n\t$s .= $i;\n    }\n    return $s;\n}",
    "    my $result = 0;\n    foreach my $i (@$L) {\n        $result = $result * 10 + $i;\n    }\n    return $result;\n}",
    "    my $result = 0;\n    foreach my $i (@$L) {\n        $result = $result * 10 + $i;\n    }\n    return $result;\n}",
    "    my $str = join('', @$L);\n    return $str;\n}",
    "    my $result = 0;\n    foreach my $i (@$L) {\n        $result = $result * 10 + $i;\n    }\n    return $result;\n}",
    "    my $s = '';\n    foreach my $i (@$L) {\n        $s .= $i;\n    }\n    return $s;\n}",
    "    my $s = '';\n    foreach my $i (@$L) {\n        $s .= $i;\n    }\n    return $s;\n}",
    "    my $n = 0;\n    foreach my $i (@$L) {\n        $n = $n * 10 + $i;\n    }\n    return $n;\n}",
    "    my $result = 0;\n    foreach my $i (@$L) {\n        $result = $result * 10 + $i;\n    }\n    return $result;\n}",
    "    my $s = '';\n    foreach my $i (@$L) {\n        $s .= $i;\n    }\n    return $s;\n}",
    "    my $n = 0;\n    foreach my $d (@$L) {\n        $n = $n * 10 + $d;\n    }\n    return $n;\n}",
    "    my $s = '';\n    foreach my $i (@$L) {\n        $s .= $i;\n    }\n    return $s;\n}",
    "    my $s = join('', @$L);\n    return $s;\n}",
    "    my $s = \"\";\n    foreach my $i (@$L) {\n        $s .= $i;\n    }\n    return $s;\n}",
    "    my $s = '';\n    foreach my $i (@$L) {\n        $s .= sprintf(\"%03d\", $i);\n    }\n    return $s;\n}",
    "    my $s = '';\n    foreach my $i (@$L) {\n        $s .= $i;\n    }\n    return $s;\n}",
    "    my $R = 0;\n    foreach my $i (@$L) {\n        $R = $R * 10 + $i;\n    }\n    return $R;\n}",
    "    my $s = '';\n    foreach my $i (@$L) {\n        $s .= $i;\n    }\n    return $s;\n}",
    "    my $s = \"\";\n    foreach my $i (@$L) {\n        $s .= $i;\n    }\n    return $s;\n}",
    "    my $s = \"\";\n    for my $i (@$L) {\n        $s .= $i;\n    }\n    return $s;\n}",
    "    my $result = 0;\n    foreach my $i (@$L) {\n        $result = $result * 10 + $i;\n    }\n    return $result;\n}",
    "    my $result = 0;\n    foreach my $i (@$L) {\n        $result = $result * 10 + $i;\n    }\n    return $result;\n}",
    "    my $s = '';\n    foreach my $i (@$L) {\n        $s .= $i;\n    }\n    return $s;\n}",
    "    my $s = '';\n    for my $i (@$L) {\n        $s .= $i;\n    }\n    return $s;\n}",
    "    my $result = 0;\n    foreach my $i (@$L) {\n        $result = $result * 10 + $i;\n    }\n    return $result;\n}",
    "    my $result = 0;\n    for my $i (0 .. $#$L) {\n        $result += $L->[$i] * 10**$i;\n    }\n    return $result;\n}",
    "    my $result = 0;\n    foreach my $i (@$L) {\n        $result = $result * 10 + $i;\n    }\n    return $result;\n}",
    "    my $s = \"\";\n    foreach my $i (@$L) {\n        $s .= $i;\n    }\n    return $s;\n}",
    "    my $result = 0;\n    foreach my $i (@$L) {\n        $result = $result * 10 + $i;\n    }\n    return $result;\n}",
    "    my $result = 0;\n    for my $i (0 .. $#$L) {\n        $result += $L->[$i] * 10**$i;\n    }\n    return $result;\n}",
    "    my $s = '';\n    foreach my $i (@$L) {\n        $s .= $i;\n    }\n    return $s;\n}",
    "    my $s = \"\";\n    foreach my $i (@$L) {\n        $s .= $i;\n    }\n    return $s;\n}",
    "    my $n = 0;\n    for my $i (@$L) {\n        $n = $n * 10 + $i;\n    }\n    return $n;\n}",
    "    my $R = 0;\n    foreach my $i (@$L) {\n        $R = $R * 10 + $i;\n    }\n    return $R;\n}",
    "    my $result = 0;\n    foreach my $i (@$L) {\n        $result = $result * 10 + $i;\n    }\n    return $result;\n}",
    "    my $s = '';\n    for my $i (@$L) {\n        $s .= $i;\n    }\n    return $s;\n}",
    "    my $R = 0;\n    my $i = 0;\n    foreach my $n (@$L) {\n        $R += $n * 10**$i;\n        $i++;\n    }\n    return $R;\n}",
    "    my $result = 0;\n    foreach my $i (@$L) {\n        $result = $result * 10 + $i;\n    }\n    return $result;\n}",
    "    my $result = 0;\n    foreach my $i (@$L) {\n        $result = $result * 10 + $i;\n    }\n    return $result;\n}",
    "    my $s = '';\n    for my $i (@$L) {\n        $s .= sprintf(\"%03d\", $i);\n    }\n    return $s;\n}",
    "    my $R = 0;\n    foreach my $n (@$L) {\n        $R = $R * 10 + $n;\n    }\n    return $R;\n}",
    "    my $s = \"\";\n    foreach my $i (@$L) {\n        $s .= $i;\n    }\n    return $s;\n}",
    "    my $s = \"\";\n    foreach my $i (@$L) {\n        $s .= $i;\n    }\n    return $s;\n}",
    "    my $s = '';\n    foreach my $i (@$L) {\n        $s .= $i;\n    }\n    return $s;\n}",
    "    my $s = '';\n    foreach my $i (@$L) {\n        $s .= $i;\n    }\n    return $s;\n}",
    "    my $s = join('', @$L);\n    return $s;\n}",
    "    my $s = '';\n    foreach my $i (@$L) {\n        $s .= sprintf(\"%02d\", $i);\n    }\n    return $s;\n}",
    "    my $s = '';\n    foreach my $i (@$L) {\n        $s .= $i;\n    }\n    return $s;\n}",
    "    my $result = 0;\n    foreach my $i (@$L) {\n        $result = $result * 10 + $i;\n    }\n    return $result;\n}",
    "    my $s = \"\";\n    foreach my $i (@$L) {\n        $s .= $i;\n    }\n    return $s;\n}",
    "    my $s = '';\n    foreach my $i (@$L) {\n        $s .= $i;\n    }\n    return $s;\n}",
    "    my $n = 0;\n    foreach my $i (@$L) {\n        $n = $n * 10 + $i;\n    }\n    return $n;\n}",
    "    my $s = '';\n    foreach my $x (@$L) {\n        $s .= sprintf(\"%03d\", $x);\n    }\n    return $s;\n}",
    "    my $result = 0;\n    foreach my $i (@$L) {\n        $result = $result * 10 + $i;\n    }\n    return $result;\n}",
    "    my $s = '';\n    for (my $i = 0; $i < scalar(@$L); $i++) {\n        $s .= $L->[$i];\n    }\n    return $s;\n}",
    "    my $result = 0;\n    foreach my $i (@$L) {\n        $result = $result * 10 + $i;\n    }\n    return $result;\n}",
    "    my $single = 0;\n    foreach my $i (@$L) {\n        $single = $single * 10 + $i;\n    }\n    return $single;\n}",
    "    my $result = 0;\n    foreach my $i (@$L) {\n        $result = $result * 10 + $i;\n    }\n    return $result;\n}",
    "    my $result = 0;\n    for my $i (0 .. $#$L) {\n        $result = $result * 10 + $L->[$i];\n    }\n    return $result;\n}",
    "    my $s = '';\n    for my $i (@$L) {\n        $s .= $i;\n    }\n    return $s;\n}",
    "    my $R = 0;\n    foreach my $i (@$L) {\n        $R = $R * 10 + $i;\n    }\n    return $R;\n}",
    "    my $result = 0;\n    foreach my $i (@$L) {\n        $result = $result * 10 + $i;\n    }\n    return $result;\n}",
    "    my $s = join(\"\", @$L);\n    return $s;\n}",
    "    my $result = 0;\n    foreach my $i (@$L) {\n        $result = $result * 10 + $i;\n    }\n    return $result;\n}",
    "    my $s = \"\";\n    for my $i (@$L) {\n        $s .= $i;\n    }\n    return $s;\n}",
    "    my $result = 0;\n    foreach my $i (@$L) {\n        $result = $result * 10 + $i;\n    }\n    return $result;\n}",
    "    my $s = '';\n    foreach my $i (@$L) {\n        $s .= $i;\n    }\n    return $s;\n}",
    "    my $s = '';\n    foreach my $i (@$L) {\n        $s .= chr($i);\n    }\n    return $s;\n}",
    "    my $s = \"\";\n    foreach my $i (@$L) {\n        $s .= $i;\n    }\n    return $s;\n}",
    "    my $s = \"\";\n    foreach my $i (@$L) {\n        $s .= $i;\n    }\n    return $s;\n}",
    "    my $s = \"\";\n    foreach my $i (@$L) {\n        $s .= $i;\n    }\n    return $s;\n}",
    "    my $result = 0;\n    foreach my $i (@$L) {\n        $result = $result * 10 + $i;\n    }\n    return $result;\n}",
    "    my $result = 0;\n    for my $i (@$L) {\n        $result = $result * 10 + $i;\n    }\n    return $result;\n}",
    "    my $s = \"\";\n    for my $i (@$L) {\n        $s .= $i;\n    }\n    return $s;\n}",
    "    my $result = 0;\n    foreach my $i (@$L) {\n        $result = $result * 10 + $i;\n    }\n    return $result;\n}",
    "    my $R = 0;\n    foreach my $i (@$L) {\n        $R = $R * 10 + $i;\n    }\n    return $R;\n}",
    "    my $result = 0;\n    foreach my $i (@$L) {\n        $result = $result * 10 + $i;\n    }\n    return $result;\n}",
    "    my $n = 0;\n    foreach my $i (@$L) {\n        $n = $n * 10 + $i;\n    }\n    return $n;\n}",
    "    my $s = '';\n    foreach my $i (@$L) {\n        $s .= $i;\n    }\n    return $s;\n}",
    "    my $result = 0;\n    for my $i (0..$#$L) {\n        $result += $L->[$i] * 10**$i;\n    }\n    return $result;\n}",
    "    my $s = \"\";\n    foreach my $i (@$L) {\n        $s .= $i;\n    }\n    return $s;\n}",
    "    my $result = 0;\n    foreach my $i (@$L) {\n        $result = $result * 10 + $i;\n    }\n    return $result;\n}",
    "    my $s = \"\";\n    foreach my $i (@$L) {\n        $s .= $i;\n    }\n    return $s;\n}",
    "    my $s = \"\";\n    for my $i (@$L) {\n        $s .= $i;\n    }\n    return $s;\n}",
    "    my $s = '';\n    foreach my $i (@$L) {\n        $s .= chr($i);\n    }\n    return $s;\n}",
    "    my $s = \"\";\n    foreach my $i (@$L) {\n        $s .= $i;\n    }\n    return $s;\n}",
    "    my $result = 0;\n    foreach my $i (@$L) {\n        $result = $result * 10 + $i;\n    }\n    return $result;\n}",
    "    my $s = '';\n    foreach my $i (@$L) {\n        $s .= chr($i);\n    }\n    return $s;\n}",
    "    my $result = 0;\n    for my $i (0 .. $#$L) {\n        $result += $L->[$i] * 10**$i;\n    }\n    return $result;\n}",
    "    my $s = '';\n    for my $i (@$L) {\n        $s .= $i;\n    }\n    return $s;\n}",
    "    my $s = '';\n    foreach my $i (@$L) {\n        $s .= $i;\n    }\n    return $s;\n}",
    "    my $s = \"\";\n    foreach my $i (@$L) {\n        $s .= $i;\n    }\n    return $s;\n}",
    "    my $result = 0;\n    for my $i (@$L) {\n        $result = $result * 10 + $i;\n    }\n    return $result;\n}",
    "    my $result = 0;\n    foreach my $i (@$L) {\n        $result = $result * 10 + $i;\n    }\n    return $result;\n}",
    "    my $R = 0;\n    foreach my $i (@$L) {\n        $R = $R * 10 + $i;\n    }\n    return $R;\n}",
    "    my $s = '';\n    foreach my $i (@$L) {\n        $s .= $i;\n    }\n    return $s;\n}",
    "    my $s = '';\n    foreach my $i (@$L) {\n        $s .= sprintf(\"%03d\", $i);\n    }\n    return $s;\n}",
    "    my $result = 0;\n    foreach my $i (@$L) {\n        $result = $result * 10 + $i;\n    }\n    return $result;\n}",
    "    my $R = 0;\n    foreach my $i (@$L) {\n        $R = $R * 10 + $i;\n    }\n    return $R;\n}",
    "    my $str = join(\"\", @$L);\n    return $str;\n}",
    "    my $s = '';\n    for my $i (@$L) {\n        $s .= sprintf(\"%02d\", $i);\n    }\n    return $s;\n}",
    "    my $n = 0;\n    foreach my $i (@$L) {\n        $n = $n * 10 + $i;\n    }\n    return $n;\n}",
    "    my $single = 0;\n    foreach my $i (@$L) {\n        $single = $single * 10 + $i;\n    }\n    return $single;\n}"
  ]
}
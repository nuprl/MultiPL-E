{
  "name": "mbpp_120_max_product_tuple",
  "language": "pl",
  "prompt": "# Write a function to find the maximum absolute product between numbers in pairs of arrays within a given array.\nsub max_product_tuple {\n    my($list1) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_120_max_product_tuple.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&max_product_tuple;\n        if(eq_deeply($candidate->([[2, 7], [2, 6], [1, 8], [4, 9]]),36)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[10, 20], [15, 2], [5, 10]]),200)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([[11, 44], [10, 15], [20, 5], [12, 9]]),484)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    my $max_product = 0;\n    my $max_product_tuple = ();\n    my $max_product_tuple_index = 0;\n    my $max_product_tuple_index2 = 0;\n    my $max_product_tuple_index3 = 0;\n    my $max_product_tuple_index4 = 0;\n    my $max_product_tuple_index5 = 0;\n    my $max_product_tuple_index6 = 0;\n    my $max_product_tuple_index7 = 0;\n    my $max_product_tuple_index8 = 0;\n    my $max_product_tuple_index9 = 0;\n    my $max_product_tuple_index10 = 0;\n    my $max_product_tuple_index11 = 0;\n    my $max_product_tuple_index12 = 0;\n    my $max_product_tuple_index13 = 0;\n    my $max_product_tuple_index14 = 0;\n    my $max_product_tuple_index15 = 0;\n    my $max_product_tuple_index16 = 0;\n    my $max_product_tuple_index17 = 0;\n    my $max_product_tuple_index18 = 0;\n    my $max_product_tuple_index19 = 0;\n    my $max_product_tuple_index20 = 0;\n    my $max_product_tuple_index21 = 0;\n    my $max_product_tuple_index22 = 0;\n    my $max_product_tuple_index23 = 0;\n    my $max_product_tuple_index24 = 0;\n    my $max_product_tuple_index25 = 0;\n    my $max_product_tuple_index26 = 0;\n    my $max_product_tuple_index27 = 0;\n    my $max_product_tuple_index28 = 0;\n    my $max_product_tuple_index29 = 0;\n    my $max_product_tuple_index30 = 0;\n    my $max_product_tuple_",
    "    my $max = 0;\n    my $max_tuple = [];\n    my $list2 = [reverse @$list1];\n    for (my $i = 0; $i < scalar @$list1; $i++) {\n        for (my $j = 0; $j < scalar @$list2; $j++) {\n            my $product = abs($list1->[$i] * $list2->[$j]);\n            if ($product > $max) {\n                $max = $product;\n                $max_tuple = [$list1->[$i], $list2->[$j]];\n            }\n        }\n    }\n    return $max_tuple;\n}",
    "    my @list1 = @$list1;\n    my $max = 0;\n    for (my $i = 0; $i < @list1; $i++) {\n        for (my $j = $i + 1; $j < @list1; $j++) {\n            my $product = $list1[$i] * $list1[$j];\n            if ($product > $max) {\n                $max = $product;\n            }\n        }\n    }\n    return $max;\n}",
    "    my $max_product = 0;\n    my $max_product_tuple;\n    for my $i (0 .. $#$list1) {\n        for my $j ($i + 1 .. $#$list1) {\n            my $product = $list1->[$i] * $list1->[$j];\n            if ($product > $max_product) {\n                $max_product = $product;\n                $max_product_tuple = [$list1->[$i], $list1->[$j]];\n            }\n        }\n    }\n    return $max_product_tuple;\n}",
    "    my $max_product = 0;\n    my $max_product_tuple = ();\n    my $list2 = $list1;\n    foreach my $x (@$list1) {\n        foreach my $y (@$list2) {\n            my $product = $x * $y;\n            if ($product > $max_product) {\n                $max_product = $product;\n                $max_product_tuple = [$x, $y];\n            }\n        }\n    }\n    return $max_product_tuple;\n}",
    "    my @list1 = @$list1;\n    my @list2 = @list1;\n    my $max_product = 0;\n    for my $i (0..$#list1) {\n        for my $j (0..$#list2) {\n            my $product = $list1[$i] * $list2[$j];\n            $max_product = $product if $product > $max_product;\n        }\n    }\n    return $max_product;\n}",
    "    my $max_product = 0;\n    my $max_product_tuple = ();\n    for my $i (0 .. $#$list1) {\n        for my $j (0 .. $#$list1) {\n            my $product = $list1->[$i] * $list1->[$j];\n            if ($product > $max_product) {\n                $max_product = $product;\n                $max_product_tuple = [$list1->[$i], $list1->[$j]];\n            }\n        }\n    }\n    return $max_product_tuple;\n}",
    "    my $max_product = 0;\n    my $max_tuple = ();\n    for my $i (0 .. $#$list1) {\n        for my $j ($i+1 .. $#$list1) {\n            my $product = $list1->[$i] * $list1->[$j];\n            if ($product > $max_product) {\n                $max_product = $product;\n                $max_tuple = [$list1->[$i], $list1->[$j]];\n            }\n        }\n    }\n    return $max_tuple;\n}",
    "    my $max = 0;\n    my $max_tuple = ();\n    for my $i (0..$#{$list1}) {\n        for my $j ($i+1..$#{$list1}) {\n            my $product = $list1->[$i] * $list1->[$j];\n            if ($product > $max) {\n                $max = $product;\n                $max_tuple = [$list1->[$i], $list1->[$j]];\n            }\n        }\n    }\n    return $max_tuple;\n}",
    "    my $max = 0;\n    for my $i (0..$#$list1) {\n        for my $j (0..$#$list1) {\n            my $product = abs($list1->[$i] * $list1->[$j]);\n            if ($product > $max) {\n                $max = $product;\n            }\n        }\n    }\n    return $max;\n}",
    "    my $max_product = 0;\n    my $max_product_tuple = ();\n    for my $i (0 .. $#$list1) {\n        for my $j (0 .. $#$list1) {\n            my $product = $list1->[$i] * $list1->[$j];\n            if ($product > $max_product) {\n                $max_product = $product;\n                $max_product_tuple = [$list1->[$i], $list1->[$j]];\n            }\n        }\n    }\n    return $max_product_tuple;\n}",
    "    my $max = 0;\n    for (my $i = 0; $i < scalar(@$list1); $i++) {\n        for (my $j = $i + 1; $j < scalar(@$list1); $j++) {\n            my $product = abs($list1->[$i] * $list1->[$j]);\n            $max = $product if $product > $max;\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $max_tuple = ();\n    for my $i (0 .. $#$list1) {\n        for my $j ($i+1 .. $#$list1) {\n            my $product = abs($list1->[$i] * $list1->[$j]);\n            if ($product > $max) {\n                $max = $product;\n                $max_tuple = [$list1->[$i], $list1->[$j]];\n            }\n        }\n    }\n    return $max_tuple;\n}",
    "    my $max = 0;\n    my $n = scalar @$list1;\n    for(my $i = 0; $i < $n; $i++) {\n        for(my $j = $i + 1; $j < $n; $j++) {\n            my $product = abs($list1->[$i] * $list1->[$j]);\n            if($product > $max) {\n                $max = $product;\n            }\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    my $max_tuple = [];\n    for my $i (0..$#$list1) {\n        for my $j ($i+1..$#$list1) {\n            my $product = abs($list1->[$i] * $list1->[$j]);\n            if ($product > $max) {\n                $max = $product;\n                $max_tuple = [$list1->[$i], $list1->[$j]];\n            }\n        }\n    }\n    return $max_tuple;\n}",
    "    my $max = 0;\n    for my $i (0..$#$list1) {\n        for my $j (0..$#$list1) {\n            my $product = abs($list1->[$i] * $list1->[$j]);\n            $max = $product if $product > $max;\n        }\n    }\n    return $max;\n}",
    "    my $max_product = 0;\n    my $max_product_tuple = ();\n    for (my $i = 0; $i < scalar(@$list1); $i++) {\n        for (my $j = $i + 1; $j < scalar(@$list1); $j++) {\n            my $product = abs($list1->[$i] * $list1->[$j]);\n            if ($product > $max_product) {\n                $max_product = $product;\n                $max_product_tuple = [$list1->[$i], $list1->[$j]];\n            }\n        }\n    }\n    return $max_product_tuple;\n}",
    "    my $max = 0;\n    for my $i (0..$#$list1) {\n        for my $j (0..$#$list1) {\n            my $product = $list1->[$i] * $list1->[$j];\n            if ($product > $max) {\n                $max = $product;\n            }\n        }\n    }\n    return $max;\n}",
    "    my $max = 0;\n    for my $i (0 .. $#$list1) {\n        for my $j ($i+1 .. $#$list1) {\n            my $prod = abs($list1->[$i] * $list1->[$j]);\n            $max = $prod if $prod > $max;\n        }\n    }\n    return $max;\n}",
    "    my @list = @$list1;\n    my $max = 0;\n    for my $i (0..$#list) {\n        for my $j (0..$#list) {\n            my $product = abs($list[$i] * $list[$j]);\n            if ($product > $max) {\n                $max = $product;\n            }\n        }\n    }\n    return $max;\n}"
  ]
}
{
  "name": "mbpp_479_first_Digit",
  "language": "pl",
  "prompt": "# Write a plthon function to find the first digit of a given number.\nsub first_Digit {\n    my($n) = @_;\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_479_first_Digit.py",
  "prompt_terminology": "reworded",
  "tests": "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&first_Digit;\n        if(eq_deeply($candidate->(123),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(456),4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(12),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();",
  "stop_tokens": [
    "\nsub",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    while($n >= 10) {\n        $n = $n / 10;\n    }\n    return $n;\n}",
    "    while($n >= 10) {\n        $n = int($n / 10);\n    }\n    return $n;\n}",
    "    while($n >= 10) {\n        $n = $n/10;\n    }\n    return $n;\n}",
    "    while($n > -10 && $n < 10) {\n        return $n;\n    }\n    return first_Digit($n / 10);\n}",
    "    while ($n > 0) {\n        $n = $n / 10;\n    }\n    return $n;\n}",
    "    while($n >= 10) {\n        $n = $n / 10;\n    }\n    return $n;\n}",
    "    while($n >= 10) {\n        $n = int($n / 10);\n    }\n    return $n;\n}",
    "    while($n > 0) {\n        $n = $n / 10;\n    }\n    return $n;\n}",
    "    while ($n > -10 && $n < 10) {\n        return $n;\n    }\n    $n /= 10;\n    return first_Digit($n);\n}",
    "    while ($n > 0) {\n        if ($n < 10) {\n            return $n;\n        }\n        $n = int($n / 10);\n    }\n    return 0;\n}",
    "    while($n >= 10) {\n        $n /= 10;\n    }\n    return $n;\n}",
    "    while($n >= 10) {\n        $n = int($n / 10);\n    }\n    return $n;\n}",
    "    while ($n > 0) {\n        if ($n < 10) {\n            return $n;\n        }\n        $n = int($n / 10);\n    }\n    return $n;\n}",
    "    while ($n >= 10) {\n        $n = int($n / 10);\n    }\n    return $n;\n}",
    "    while ($n >= 10) {\n        $n = int($n / 10);\n    }\n    return $n;\n}",
    "    while ($n > -10 && $n < 10) {\n        return $n;\n    }\n    return first_Digit(int($n / 10));\n}",
    "    my $first_digit = substr($n, 0, 1);\n    return $first_digit;\n}",
    "    while ($n >= 10) {\n        $n /= 10;\n    }\n    return $n;\n}",
    "    while($n >= 10) {\n        $n = int($n / 10);\n    }\n    return $n;\n}",
    "    while($n >= 10) {\n        $n = $n / 10;\n    }\n    return $n;\n}"
  ]
}
language: sh
name: HumanEval_36_fizz_buzz
results:
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>>\
    \ fizz_buzz(78)\n# 2\n# >>> fizz_buzz(79)\n# 3\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n    if [[ ! \"$1\" =~ ^[0-9]+$ ]]; then\n        echo \"No, $1 is not a number\"\
    \n        return 1\n    fi\n    if [[ \"$1\" -lt 1 ]]; then\n        echo \"No,\
    \ $1 is less than one\"\n        return 1\n    fi\n    if [[ \"$1\" -gt 1 ]];\
    \ then\n        echo \"No, $1 is greater than one\"\n        return 1\n    fi\n\
    \    count=0\n    for ((n=1; n<=\"$1\"; n++)); do\n        if [[ $((n % 11)) -eq\
    \ 0 || $((n % 13)) -eq 0 ]]; then\n            count=$((count + $(num_seven \"\
    $n\")))\n        fi\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    fizz_buzz\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n \
    \   [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n\
    \    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n\
    \    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"\
    639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020492
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>>\
    \ fizz_buzz(78)\n# 2\n# >>> fizz_buzz(79)\n# 3\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  local sum=0\n  local i=$1\n  while [ $i -gt 0 ]; do\n    [ $((i % 11))\
    \ -eq 0 ] && [ $((i % 13)) -eq 0 ] && [ $((i % 77)) -eq 0 ] && ((sum+=2))\n  \
    \  [ $((i % 11)) -eq 0 ] && [ $((i % 13)) -eq 0 ] && [ $((i % 77)) -ne 0 ] &&\
    \ ((sum+=1))\n    [ $((i % 7)) -eq 0 ] && ((sum+=1))\n    ((i--))\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n\
    \    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n\
    \    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\"\
    \ ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate \"100000\"\
    ) = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020492
- exit_code: -1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>>\
    \ fizz_buzz(78)\n# 2\n# >>> fizz_buzz(79)\n# 3\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  n=$1\n  for ((i=1; i<n; i++)); do\n    if [[ $((i%11)) -eq 0 ]] || [[ $((i%13))\
    \ -eq 0 ]]; then\n      j=${i//7/}\n      echo ${#i}-${#j} | bc\n    fi\n  done\
    \ | awk '{sum+=$1} END {print sum}'\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=13 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=16 encoding='utf-8'>
  timestamp: 1660020497
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>>\
    \ fizz_buzz(78)\n# 2\n# >>> fizz_buzz(79)\n# 3\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n  if [[ $1 -lt 1 ]]; then\n    echo \"Error: argument must be an integer\
    \ greater than 0\"\n    return\n  fi\n\n  if ! [[ $1 =~ ^[0-9]+$ ]]; then\n  \
    \  echo \"Error: argument must be an integer\"\n    return\n  fi\n\n  i=0\n  count=0\n\
    \  while [[ $i -lt $1 ]]; do\n    # Check if i is divisible by 11 or 13\n    if\
    \ [[ $(($i % 11)) -eq 0 ]] || [[ $(($i % 13)) -eq 0 ]]; then\n      # Check if\
    \ i contains 7\n      if [[ $(($i / 10)) -eq 7 ]] || [[ $(($i % 10)) -eq 7 ]];\
    \ then\n        count=$(($count + 1))\n      fi\n    fi\n    i=$(($i + 1))\n \
    \ done\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate \"78\"\
    ) = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate \"100\"\
    ) = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\"\
    ) = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020492
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>>\
    \ fizz_buzz(78)\n# 2\n# >>> fizz_buzz(79)\n# 3\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n    local n=$1\n    local fizz=0\n    local buzz=0\n    local fizzbuzz=0\n\
    \    local i\n    for ((i=1; i<n; i++)); do\n        if [ $(($i % 11)) -eq 0 ]\
    \ || [ $(($i % 13)) -eq 0 ]; then\n            if [ $(($i % 11)) -eq 0 ]; then\n\
    \                fizz=$(($fizz + 1))\n            fi\n            if [ $(($i %\
    \ 13)) -eq 0 ]; then\n                buzz=$(($buzz + 1))\n            fi\n  \
    \          if [ $(($i % 11)) -eq 0 ] && [ $(($i % 13)) -eq 0 ]; then\n       \
    \         fizzbuzz=$(($fizzbuzz + 1))\n            fi\n        fi\n    done\n\
    \    echo $(($fizz * $buzz - $fizzbuzz))\n}\n\ncandidate() {\n    fizz_buzz \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[\
    \ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[\
    \ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n  \
    \  [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\"\
    \ ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020492
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>>\
    \ fizz_buzz(78)\n# 2\n# >>> fizz_buzz(79)\n# 3\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n\t# First, we split the number into an array of digits\n\tdigits=$(echo $1\
    \ | sed 's/\\(.\\)/\\1 /g')\n\t\n\t# Now we count the number of 7's in $digits\n\
    \techo $digits | grep -o 7 | wc -l\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020493
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>>\
    \ fizz_buzz(78)\n# 2\n# >>> fizz_buzz(79)\n# 3\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n    local i=0\n    local cnt=0\n    for ((i=0; i<$1; i++)); do\n        if\
    \ (( $i % 11 == 0 )) || (( $i % 13 == 0 )); then\n            if (( $i == *7*\
    \ )); then\n                cnt=$((cnt+1))\n            fi\n        fi\n    done\n\
    \    echo $cnt\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\"\
    \ ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"\
    3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") =\
    \ \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate \"\
    100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp1gyt5tub.sh: line 16: ((: 0 == *7* : syntax error: operand expected
    (error token is "*7* ")

    /tmp/tmp1gyt5tub.sh: line 16: ((: 11 == *7* : syntax error: operand expected (error
    token is "*7* ")

    /tmp/tmp1gyt5tub.sh: line 16: ((: 13 == *7* : syntax error: operand expected (error
    token is "*7* ")

    /tmp/tmp1gyt5tub.sh: line 16: ((: 22 == *7* : syntax error: operand expected (error
    token is "*7* ")

    /tmp/tmp1gyt5tub.sh: line 16: ((: 26 == *7* : syntax error: operand expected (error
    token is "*7* ")

    /tmp/tmp1gyt5tub.sh: line 16: ((: 33 == *7* : syntax error: operand expected (error
    token is "*7* ")

    /tmp/tmp1gyt5tub.sh: line 16: ((: 39 == *7* : syntax error: operand expected (error
    token is "*7* ")

    /tmp/tmp1gyt5tub.sh: line 16: ((: 44 == *7* : syntax error: operand expected (error
    token is "*7* ")

    /tmp/tmp1gyt5tub.sh: line 16: ((: 0 == *7* : syntax error: operand expected (error
    token is "*7* ")

    /tmp/tmp1gyt5tub.sh: line 16: ((: 11 == *7* : syntax error: operand expected (error
    token is "*7* ")

    /tmp/tmp1gyt5tub.sh: line 16: ((: 13 == *7* : syntax error: operand expected (error
    token is "*7* ")

    /tmp/tmp1gyt5tub.sh: line 16: ((: 22 == *7* : syntax error: operand expected (error
    token is "*7* ")

    /tmp/tmp1gyt5tub.sh: line 16: ((: 26 == *7* : syntax error: operand expected (error
    token is "*7* ")

    /tmp/tmp1gyt5tub.sh: line 16: ((: 33 == *7* : syntax error: operand expected (error
    token is "*7* ")

    /tmp/tmp1gyt5tub.sh: line 16: ((: 39 == *7* : syntax error: operand expected (error
    token is "*7* ")

    /tmp/tmp1gyt5tub.sh: line 16: ((: 44 == *7* : syntax error: operand expected (error
    token is "*7* ")

    /tmp/tmp1gyt5tub.sh: line 16: ((: 52 == *7* : syntax error: operand expected (error
    token is "*7* ")

    /tmp/tmp1gyt5tub.sh: line 16: ((: 55 == *7* : syntax error: operand expected (error
    token is "*7* ")

    /tmp/tmp1gyt5tub.sh: line 16: ((: 65 == *7* : syntax error: operand expected (error
    token is "*7* ")

    /tmp/tmp1gyt5tub.sh: line 16: ((: 66 == *7* : syntax error: operand expected (error
    token is "*7* ")

    /tmp/tmp1gyt5tub.sh: line 16: '
  stdout: ''
  timestamp: 1660020493
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>>\
    \ fizz_buzz(78)\n# 2\n# >>> fizz_buzz(79)\n# 3\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n    result=0\n    for (( i=1; i<$1; i++ )); do\n        if [[ $(( $i % 11\
    \ )) -eq 0 || $(( $i % 13 )) -eq 0 ]]; then\n            result=$(( $result +\
    \ $(count_seven $i) ))\n        fi\n    done\n    echo $result\n}\n\ncandidate()\
    \ {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\"\
    ) = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\"\
    ) = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpo21l98_e.sh: line 15: count_seven: command not found

    /tmp/tmpo21l98_e.sh: line 15: 0 +  : syntax error: operand expected (error token
    is "+  ")

    '
  stdout: ''
  timestamp: 1660020493
- exit_code: -1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>>\
    \ fizz_buzz(78)\n# 2\n# >>> fizz_buzz(79)\n# 3\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n    if [[ \"$1\" =~ ^[0-9]+$ ]]; then\n        count=0\n        for ((i=1;\
    \ i<\"$1\"; i++)); do\n            if [ $((i%11)) -eq 0 ] || [ $((i%13)) -eq 0\
    \ ]; then\n                count=$((count+$(echo $i | grep -o \"7\" | wc -l)))\n\
    \            fi\n        done\n        echo $count\n    else\n        echo \"\
    usage: fizz_buzz.sh [int]\"\n    fi\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=25 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=11 encoding='utf-8'>
  timestamp: 1660020498
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>>\
    \ fizz_buzz(78)\n# 2\n# >>> fizz_buzz(79)\n# 3\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n    if [[ ! $1 =~ ^[0-9]+$ ]]; then\n        echo 'Argument is not an integer.'\n\
    \        return 1\n    fi\n\n    local -i count=0\n    for i in $(seq 0 $1); do\n\
    \        local num=$(factor $i | awk '{print $2}')\n        [[ $num == 11 || $num\
    \ == 13 ]] && count=$((count + $(echo $i | grep -o 7 | wc -l)))\n    done\n  \
    \  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\"\
    \ ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"\
    3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") =\
    \ \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate \"\
    100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020493
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>>\
    \ fizz_buzz(78)\n# 2\n# >>> fizz_buzz(79)\n# 3\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n    local total=0\n    for n in $(seq 1 $1); do\n        if [[ $(($n % 11))\
    \ -eq 0 || $(($n % 13)) -eq 0 ]]; then\n            echo -n $n | tr -cd 7 | wc\
    \ -c\n            total=$(($total + $(echo -n $n | tr -cd 7 | wc -c)))\n     \
    \   fi\n    done\n    echo $total\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020493
- exit_code: -1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>>\
    \ fizz_buzz(78)\n# 2\n# >>> fizz_buzz(79)\n# 3\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n    (( $# == 1 )) || return 1\n    local n=$1 i=0 count\n    while (( ++i\
    \ < n )); do\n        if (( i % 11 == 0 || i % 13 == 0 )); then\n            count=$(\
    \ echo $i | tr -cd 7 | wc -c )\n            (( total += count ))\n        fi\n\
    \    done\n    echo $total\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=28 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=8 encoding='utf-8'>
  timestamp: 1660020498
- exit_code: -1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>>\
    \ fizz_buzz(78)\n# 2\n# >>> fizz_buzz(79)\n# 3\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n    local count=0\n    local i=0\n    while [ $i -lt $1 ]; do\n        if\
    \ [ $((i % 11)) -eq 0 -o $((i % 13)) -eq 0 ]; then\n            while [ $i -gt\
    \ 0 ]; do\n                if [ $((i % 10)) -eq 7 ]; then\n                  \
    \  ((count++))\n                fi\n                i=$((i / 10))\n          \
    \  done\n        fi\n        ((i++))\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\"\
    ) = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\"\
    ) = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=39 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=26 encoding='utf-8'>
  timestamp: 1660020498
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>>\
    \ fizz_buzz(78)\n# 2\n# >>> fizz_buzz(79)\n# 3\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n    local n=$1\n    local num_seven=0\n    local n=$((n - 1))\n    for i\
    \ in $(seq 0 $n); do\n        if [[ $((i % 11)) -eq 0 || $((i % 13)) -eq 0 ]];\
    \ then\n            if [[ $i =~ .*7.* ]]; then\n                num_seven=$((num_seven\
    \ + 1))\n            fi\n        fi\n    done\n    echo $num_seven\n}\n\ncandidate()\
    \ {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\"\
    ) = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\"\
    ) = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020493
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>>\
    \ fizz_buzz(78)\n# 2\n# >>> fizz_buzz(79)\n# 3\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n    if (( $1 < 0 )); then\n        echo \"Please enter a positive integer\
    \ for fizz_buzz.\"\n        return\n    fi\n    if (( $1 <= 10 )); then\n    \
    \    echo \"Please enter an integer greater than 10 for fizz_buzz.\"\n       \
    \ return\n    fi\n    if (( ($1 % 11 != 0) && ($1 % 13 != 0) )); then\n      \
    \  echo \"Please enter an integer divisible by 11 or 13 for fizz_buzz.\"\n   \
    \     return\n    fi\n    max=$1\n    if (( $1 % 11 == 0 )); then\n        max=$(($1/11))\n\
    \    fi\n    if (( $1 % 13 == 0 )); then\n        max=$(($1/13))\n    fi\n   \
    \ count=0\n    for ((i=1; i<=max; i++)); do\n        if (( $i % 11 == 0 )); then\n\
    \            s=$i\n        else\n            s=$(($i*11))\n        fi\n      \
    \  if (( $i % 13 == 0 )); then\n            s=$i\n        else\n            s=$(($i*13))\n\
    \        fi\n        if (( $s < $1 )); then\n            if [[ $s =~ ^.*7.*$ ]];\
    \ then\n                count=$(($count+1))\n            fi\n        fi\n    done\n\
    \    echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\"\
    \ ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"\
    3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") =\
    \ \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate \"\
    100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020493
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>>\
    \ fizz_buzz(78)\n# 2\n# >>> fizz_buzz(79)\n# 3\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n    local n=$1\n    local total=0\n    for (( i=0; i<$n; i++ ))\n    do\n\
    \        if (( i % 11 == 0 )) || (( i % 13 == 0 )); then\n            if [[ $i\
    \ =~ 7 ]]; then\n                total=$(( total + 1 ))\n            fi\n    \
    \    fi\n    done\n    echo $total\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020493
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>>\
    \ fizz_buzz(78)\n# 2\n# >>> fizz_buzz(79)\n# 3\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n    echo 'Not implemented'\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020493
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>>\
    \ fizz_buzz(78)\n# 2\n# >>> fizz_buzz(79)\n# 3\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n    if (( $1 < 1 )); then\n        echo \"Invalid number\"\n        return\
    \ 1\n    fi\n\n    local -r n=$1\n    local -i count=0\n    local -i i=0\n\n \
    \   while (( i < n )); do\n        let i++\n        if (( i % 11 == 0 || i % 13\
    \ == 0 )); then\n            if [[ \"$i\" =~ 7 ]]; then\n                let count++\n\
    \            fi\n        fi\n    done\n\n    echo $count\n}\n\ncandidate() {\n\
    \    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") =\
    \ \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\")\
    \ = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020493
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>>\
    \ fizz_buzz(78)\n# 2\n# >>> fizz_buzz(79)\n# 3\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n    if [ $# -eq 0 ]; then\n        echo \"No input number\"\n        return\n\
    \    fi\n    local number=$1\n    local cnt=0\n    for (( i=11; i<=$number; i+=11\
    \ )); do\n        if [[ $i =~ \"7\" ]]; then\n            (( cnt++ ))\n      \
    \  fi\n    done\n    for (( i=13; i<=$number; i+=13 )); do\n        if [[ $i =~\
    \ \"7\" ]]; then\n            (( cnt++ ))\n        fi\n    done\n    echo \"$cnt\"\
    \n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[\
    \ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n   \
    \ [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n\
    \    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") =\
    \ \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020493
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>>\
    \ fizz_buzz(78)\n# 2\n# >>> fizz_buzz(79)\n# 3\n#\n# $1 is an integer\nfizz_buzz()\
    \ {\n    n=$1\n    cnt=0\n    for i in $(seq 1 $n); do\n        if [[ $((i % 11))\
    \ -eq 0 ]] || [[ $((i % 13)) -eq 0 ]]; then\n            if [[ $i == *7* ]]; then\n\
    \                (( cnt++ ))\n            fi\n        fi\n    done\n    echo $cnt\n\
    }\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate\
    \ \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate\
    \ \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate\
    \ \"10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020493

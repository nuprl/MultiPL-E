name: HumanEval_45_triangle_area
language: sh
prompt: "#!/bin/bash\n# Given length of a side and high return area for a triangle.\n\
  # >>> triangle_area(5, 3)\n# 7.5\n#\n# $1 is an integer\n# $2 is an integer\ntriangle_area()\
  \ {\n"
tests: "}\n\ncandidate() {\n    triangle_area \"$@\"\n}\n\nset -e\nrun_test() {\n\
  \    [[ $(candidate \"5\" \"3\") = \"7.5\" ]]\n    [[ $(candidate \"2\" \"2\") =\
  \ \"2.0\" ]]\n    [[ $(candidate \"10\" \"8\") = \"40.0\" ]]\n}\n\nrun_test"
completions: ["    if (( $# == 2 ))\n    then\n        echo $(( ($1 * $2) / 2 ))\n\
    \    else\n        echo \"Error: bad parameter(s)\"\n    fi", "  if (( $# == 2\
    \ )) && [[ $1 =~ ^-?[0-9]+$ ]] && [[ $2 =~ ^-?[0-9]+$ ]]; then\n    echo \"scale=1;\
    \ $1 * $2 / 2\" | bc\n  else\n    echo \"Usage: triangle_area side_length high\"\
    \n  fi", "  local length=$1\n  local high=$2\n  local area=0\n  # (( ... )) is\
    \ an arithmetic context\n  (( area = length * high / 2 ))\n  echo $area", "\t\
    echo $1 $2 | awk '{printf \"%0.2f\", ($1 * $2)/2}'", "  local area\n  let area=$1*$2/2\n\
    \  echo $area", "  (( $# == 2 )) || return 1 # 2 args required\n\n  local area\n\
    \  area=$(echo \"$1 * $2 / 2\" | bc -l)\n\n  echo \"$area\"", "\t# bc is calculator\n\
    \techo \"scale=2; $1 * $2 / 2\" | bc", "  if [ $# -ne 2 ]; then\n    echo \"Usage:\
    \ $0 a b\" >&2\n    exit 1\n  fi\n  a=$1\n  b=$2\n  echo \"$((a * b)) / 2\" |\
    \ bc -l", "  echo 'define triangle_area(a, h) {return (a * h) / 2;} triangle_area('$1',\
    \ '$2')' | bc -l", '    echo $(echo "scale=2;($1 * $2)/2" | bc -l)', "    local\
    \ side=$1\n    local high=$2\n    local area\n    area=$(echo \"scale=2; $side\
    \ * $high / 2\" | bc)\n    echo \"$area\"", "    if [[ ! $1 =~ ^[0-9]+$ ]] ||\
    \ [[ ! $2 =~ ^[0-9]+$ ]]; then\n        echo \"usage: $0 <length> <high>\"\n \
    \       return 1\n    fi\n    let \"area = $1 * $2 * 0.5\"\n    echo $area", '    echo
    "scale=2;(sqrt(3)/4)*($1*$1)" | bc', '    echo "scale=2; ($1 * $2) / 2" | bc',
  "    if [[ ! $1 =~ ^-?[0-9]+$ ]] || [[ ! $2 =~ ^-?[0-9]+$ ]]; then\n        echo\
    \ \"Usage: triangle_area LENGTH HIGH\"\n        return 1\n    fi\n    python -c\
    \ \"print 0.5 * $1 * $2\"", "  if [ $# -ne 2 ]; then\n    echo 'usage: triangle_area\
    \ [length] [high]'\n    return 1\n  fi\n\n  echo \"scale=1; $1 * $2 / 2\" | bc",
  '  echo "$(bc <<< "$1 * $2 / 2")"', "  echo $1 $2 | awk '{ print ($1 * $2) / 2 }'",
  "  if [ $# -ne 2 ]; then\n    echo \"Wrong number of arguments\"\n    return 1\n\
    \  fi\n  local side=$1\n  local high=$2\n  if ! [[ \"$side\" =~ ^[0-9]+$ ]]; then\n\
    \    echo \"Side is not an integer\"\n    return 1\n  fi\n  if ! [[ \"$high\"\
    \ =~ ^[0-9]+$ ]]; then\n    echo \"High is not an integer\"\n    return 1\n  fi\n\
    \  bc -l <<< \"$side * $high / 2\"", "    local area\n    area=$( echo \"scale=2;\
    \ $1 * $2 / 2\" | bc )\n    echo $area"]
stop_tokens:
- "\n}"

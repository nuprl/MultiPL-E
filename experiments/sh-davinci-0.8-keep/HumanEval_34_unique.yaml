name: HumanEval_34_unique
language: sh
prompt: "#!/bin/bash\n# Return sorted unique elements in a list\n# >>> unique([5,\
  \ 3, 5, 2, 3, 3, 9, 0, 123])\n# [0, 2, 3, 5, 9, 123]\n#\n# $1 is a space-separated\
  \ list\nunique() {\n"
tests: "}\n\ncandidate() {\n    unique \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
  \ \"5 3 5 2 3 3 9 0 123\") = \"0 2 3 5 9 123\" ]]\n}\n\nrun_test"
completions: ["    list=\"$1\"\n    result=\"\"\n    for x in $list; do\n        if\
    \ ! [[ $result =~ (^|[[:space:]])\"$x\"($|[[:space:]]) ]]; then\n            result=\"\
    $result $x\"\n        fi\n    done\n    echo $result", "    echo \"$1\" | tr '\
    \ ' '\\n' | sort -n | uniq", "    echo $(echo \"$1\" | tr ' ' '\\n' | sort -n\
    \ | uniq | tr '\\n' ' ')", "    local __doc__=\"Return unique elements in $1\"\
    \n    local elems=${1// /$'\\n'}\n    sort -u <<<\"$elems\"", "    local list=\"\
    $1\"\n    _unique_test_empty \"$list\" && { echo; return; }\n    echo \"$list\"\
    \ | _unique_trim_duplicates", '    echo "$1" | tr " " "\n" | sort -u', '  echo
    "${1}" | tr " " "\n" | sort -u | tr "\n" " "', '    echo "$1" | tr " " "\n" |
    sort -n | uniq', "    declare -a keys\n    local in\n    for in in $1; do\n  \
    \      keys[$in]=$in\n    done\n    echo ${keys[@]} | sed 's/ /\\n/g' | sort -n",
  "    echo $1 | tr ' ' '\\n' | sort -n | uniq", "    local list=\"$1\"\n    local\
    \ elem i\n    local -a newlist\n\n    for elem in $list; do\n        i=0\n   \
    \     while [ \"$i\" -lt \"${#newlist[@]}\" ]; do\n            if [ \"$elem\"\
    \ = \"${newlist[$i]}\" ]; then\n                break\n            fi\n      \
    \      i=$((i + 1))\n        done\n        if [ \"$i\" -eq \"${#newlist[@]}\"\
    \ ]; then\n            newlist[$i]=\"$elem\"\n        fi\n    done\n\n    echo\
    \ \"${newlist[@]}\"", "  local arr=(\"$@\")\n  local seen=()\n  local out=()\n\
    \  for value in \"${arr[@]}\"; do\n    if [[ \"${seen[@]}\" =~ \"${value}\" ]];\
    \ then\n      continue\n    fi\n    seen+=(\"${value}\")\n    out+=(\"${value}\"\
    )\n  done\n  echo \"${out[@]}\"", "  echo \"$1\" | tr ' ' '\\n' | sort -u | tr\
    \ '\\n' ' '", "    echo \"${1}\" | tr ' ' '\\n' | sort -n | uniq | tr '\\n' '\
    \ '", "    local list=$(echo $1 | tr ' ' '\\n' | sort -u)\n    echo $list", " \
    \   local OLDIFS=\"$IFS\"\n    IFS=$'\\n'\n    printf \"%s\\n\" $1 | sort -un\n\
    \    IFS=\"$OLDIFS\"", "    local array=(${1// / })\n    local new_array\n   \
    \ local elem\n    for elem in \"${array[@]}\"; do\n        if [[ ! \" ${new_array[*]}\
    \ \" =~ \" ${elem} \" ]]; then\n            new_array+=($elem)\n        fi\n \
    \   done\n    echo ${new_array[@]}", "    local list=\"$1\"\n    for elem in $list;\
    \ do\n        echo \"$elem\"\n    done | sort -u", "    declare -a arr=($1)\n\
    \    echo ${arr[@]} | tr ' ' '\\n' | sort -n | uniq", "    if [[ -z \"$1\" ]];\
    \ then\n        cat -\n    else\n        printf '%s\\n' \"$1\" | sort -u\n   \
    \ fi"]
stop_tokens:
- "\n}"

name: HumanEval_35_max_element
language: sh
prompt: "#!/bin/bash\n# Return maximum element in the list.\n# >>> max_element([1,\
  \ 2, 3])\n# 3\n# >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n# 123\n\
  #\n# $1 is a space-separated list\nmax_element() {\n"
tests: "}\n\ncandidate() {\n    max_element \"$@\"\n}\n\nset -e\nrun_test() {\n  \
  \  [[ $(candidate \"1 2 3\") = \"3\" ]]\n    [[ $(candidate \"5 3 -5 2 -3 3 9 0\
  \ 124 1 -10\") = \"124\" ]]\n}\n\nrun_test"
completions: ["    local max=$1\n    for element in $1; do\n        if (( element\
    \ > max )); then\n            max=$element\n        fi\n    done\n    echo $max",
  "  echo \"$@\" | awk '{\n    x = $1;\n    for (i = 2; i <= NF; i++) {\n      if\
    \ ($i > x) {\n        x = $i;\n      }\n    }\n    print x;\n  }'", "  local list=\"\
    $1\"\n  local max_elem\n\n  max_elem=$(echo \"$list\" | cut -d' ' -f1)\n  for\
    \ elem in $list; do\n    (( elem > max_elem )) && max_elem=$elem\n  done\n\n \
    \ echo $max_elem", "  max_value=$1\n  for i in $@; do\n    if [ $i -gt $max_value\
    \ ]; then\n      max_value=$i\n    fi\n  done\n  echo $max_value", "    max=$1\n\
    \    for el in $@; do\n        [ $el -gt $max ] && max=$el\n    done\n    echo\
    \ $max", "\tlocal max=0\n\tfor i in $1; do\n\t\tif [ $i -gt $max ]; then\n\t\t\
    \tmax=$i\n\t\tfi\n\tdone\n\techo $max", "    max=${1%% *}\n    shift\n    for\
    \ n in $@; do\n        if [[ \"$n\" -gt \"$max\" ]]; then\n            max=$n\n\
    \        fi\n    done\n    echo $max", "  max=$1\n  for i in $1; do\n    if [\
    \ $i -gt $max ]; then\n      max=$i\n    fi\n  done\n  echo $max", "    local\
    \ max=${1%% *}\n    shift\n    for elem; do\n        if [[ $elem -gt $max ]];\
    \ then\n            max=$elem\n        fi\n    done\n    echo $max", "    local\
    \ list=\"$1\"\n    local max=0\n    local item=0\n    for item in $list; do\n\
    \        # If it's a number, let's find out if it's bigger than the current max\n\
    \        if [[ $item =~ ^[0-9]+$ ]]; then\n            if [[ $item -gt $max ]];\
    \ then\n                max=$item\n            fi\n        fi\n    done\n    echo\
    \ $max", "\tprintf '%s\\n' $1 | sort -nr | head -n 1", "  local max_el=$1\n  shift\n\
    \  while [ $# -gt 0 ]; do\n    if [ $1 -gt $max_el ]; then\n      max_el=$1\n\
    \    fi\n    shift\n  done\n  echo $max_el", "    echo $1 | tr ' ' '\\n' | sort\
    \ -n | tail -n 1", "    local max_element=0\n\n    while [ \"$1\" != \"\" ]; do\n\
    \        (( $1 > $max_element )) && max_element=$1\n        shift\n    done\n\n\
    \    echo $max_element", "    max=${1%% *}\n    for num in $@; do\n        if\
    \ [[ \"$num\" -gt \"$max\" ]]; then\n            max=$num\n        fi\n    done\n\
    \    echo $max", "  if [ $# -eq 0 ]; then\n    echo \"Usage: max_element([1, 2,\
    \ 3])\"\n    return 1\n  fi\n\n  local -a arr=()\n  while [ $# -gt 0 ]; do\n \
    \   arr=( \"${arr[@]}\" \"$1\" )\n    shift\n  done\n\n  # TODO \n  #* you can\
    \ use arithmetic expansion ($((...)) or expr ) for getting the maximum.\n  #*\
    \ See https://www.gnu.org/software/bash/manual/html_node/Shell-Arithmetic.html\n\
    \  #* Also, https://www.gnu.org/software/bash/manual/html_node/Bash-Conditional-Expressions.html\n\
    \  #* To get the maximum, you can first use the arithmetic expansion, and then\
    \ use a \"for\" loop. \n  #* To get the length of the array, you can use the following\
    \ command:\n  #*     $ echo ${#arr[@]}\n  #* To get the index of an element in\
    \ the array:\n  #*     $ echo \"${!arr[@]}\"\n  #* To access the element in the\
    \ array:\n  #*     $ echo \"${arr[0]}\" \n  #* To remove an element from the array:\n\
    \  #*     $ unset arr[3]\n  #* To remove the whole array:\n  #*     $ unset arr\n\
    \  #* arr+=(...) adds new elements to the end of the array\n  #* arr=(...) defines\
    \ a new array\n  #* You can use the following command to see all array elements:\n\
    \  #*     $ echo \"${arr[@]}\"\n\n  max=${arr[0]}\n  for i in ${arr[@]}; do\n\
    \    if [[ i -gt max ]]; then\n      max=$i\n    fi\n  done\n  echo $max", " \
    \   local max=-1\n    for var in $1; do\n        if [[ \"$var\" -gt \"$max\" ]];\
    \ then\n            max=\"$var\"\n        fi\n    done\n    echo \"$max\"", " \
    \   local max=0;\n    for element in $1; do\n        if [[ \"$element\" -gt \"\
    $max\" ]]; then\n            max=\"$element\";\n        fi\n    done;\n    echo\
    \ \"$max\";", "    # Your code here.\n    max=-1\n    for i in $@; do\n      \
    \  if [[ \"$i\" -gt \"$max\" ]]; then\n            max=$i\n        fi\n    done\n\
    \    echo $max", "    echo \"$@\" | tr ' ' '\\n' | sort -nr | head -n 1"]
stop_tokens:
- "\n}"

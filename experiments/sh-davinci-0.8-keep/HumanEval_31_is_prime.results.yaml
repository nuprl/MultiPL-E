language: sh
name: HumanEval_31_is_prime
results:
- exit_code: 1
  program: "#!/bin/bash\n# Return true if a given number is prime, and false otherwise.\n\
    # >>> is_prime(6)\n# False\n# >>> is_prime(101)\n# True\n# >>> is_prime(11)\n\
    # True\n# >>> is_prime(13441)\n# True\n# >>> is_prime(61)\n# True\n# >>> is_prime(4)\n\
    # False\n# >>> is_prime(1)\n# False\n#\n# $1 is an integer\nis_prime() {\n   \
    \ #Determine if a number is prime\n    if [ $1 -lt 1 ]; then\n        return 1\n\
    \    fi\n    for (( num=2; num<$1; num++ )); do\n        if [ $(( $1 % $num ))\
    \ -eq 0 ]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\
    \ncandidate() {\n    is_prime \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"6\") = \"false\" ]]\n    [[ $(candidate \"101\") = \"true\" ]]\n    [[ $(candidate\
    \ \"11\") = \"true\" ]]\n    [[ $(candidate \"13441\") = \"true\" ]]\n    [[ $(candidate\
    \ \"61\") = \"true\" ]]\n    [[ $(candidate \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"5\") = \"true\" ]]\n    [[ $(candidate\
    \ \"11\") = \"true\" ]]\n    [[ $(candidate \"17\") = \"true\" ]]\n    [[ $(candidate\
    \ \"85\") = \"false\" ]]\n    [[ $(candidate \"77\") = \"false\" ]]\n    [[ $(candidate\
    \ \"255379\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020317
- exit_code: 1
  program: "#!/bin/bash\n# Return true if a given number is prime, and false otherwise.\n\
    # >>> is_prime(6)\n# False\n# >>> is_prime(101)\n# True\n# >>> is_prime(11)\n\
    # True\n# >>> is_prime(13441)\n# True\n# >>> is_prime(61)\n# True\n# >>> is_prime(4)\n\
    # False\n# >>> is_prime(1)\n# False\n#\n# $1 is an integer\nis_prime() {\n  if\
    \ [ \"$1\" -eq 2 ]; then\n    echo True\n  elif [ \"$1\" -eq 1 ]; then\n    echo\
    \ False\n  elif [ \"$1\" -lt 1 ]; then\n    echo False\n  else\n    factor_count=`factors\
    \ \"$1\" | wc -l`\n    if [ \"$factor_count\" -eq 2 ]; then\n      echo True\n\
    \    else\n      echo False\n    fi\n  fi\n}\n\ncandidate() {\n    is_prime \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6\") = \"false\" ]]\n  \
    \  [[ $(candidate \"101\") = \"true\" ]]\n    [[ $(candidate \"11\") = \"true\"\
    \ ]]\n    [[ $(candidate \"13441\") = \"true\" ]]\n    [[ $(candidate \"61\")\
    \ = \"true\" ]]\n    [[ $(candidate \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"5\") = \"true\" ]]\n    [[ $(candidate\
    \ \"11\") = \"true\" ]]\n    [[ $(candidate \"17\") = \"true\" ]]\n    [[ $(candidate\
    \ \"85\") = \"false\" ]]\n    [[ $(candidate \"77\") = \"false\" ]]\n    [[ $(candidate\
    \ \"255379\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpnkcyr52_.sh: line 27: factors: command not found

    '
  stdout: ''
  timestamp: 1660020317
- exit_code: 1
  program: "#!/bin/bash\n# Return true if a given number is prime, and false otherwise.\n\
    # >>> is_prime(6)\n# False\n# >>> is_prime(101)\n# True\n# >>> is_prime(11)\n\
    # True\n# >>> is_prime(13441)\n# True\n# >>> is_prime(61)\n# True\n# >>> is_prime(4)\n\
    # False\n# >>> is_prime(1)\n# False\n#\n# $1 is an integer\nis_prime() {\n   \
    \ (( $1 > 1 )) || return 1\n    for ((i=2; i<=$1/2; i++)); do\n        (( $1 %\
    \ i == 0 )) && return 1\n    done\n    return 0\n}\n\ncandidate() {\n    is_prime\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6\") = \"false\" ]]\n\
    \    [[ $(candidate \"101\") = \"true\" ]]\n    [[ $(candidate \"11\") = \"true\"\
    \ ]]\n    [[ $(candidate \"13441\") = \"true\" ]]\n    [[ $(candidate \"61\")\
    \ = \"true\" ]]\n    [[ $(candidate \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"5\") = \"true\" ]]\n    [[ $(candidate\
    \ \"11\") = \"true\" ]]\n    [[ $(candidate \"17\") = \"true\" ]]\n    [[ $(candidate\
    \ \"85\") = \"false\" ]]\n    [[ $(candidate \"77\") = \"false\" ]]\n    [[ $(candidate\
    \ \"255379\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020317
- exit_code: 1
  program: "#!/bin/bash\n# Return true if a given number is prime, and false otherwise.\n\
    # >>> is_prime(6)\n# False\n# >>> is_prime(101)\n# True\n# >>> is_prime(11)\n\
    # True\n# >>> is_prime(13441)\n# True\n# >>> is_prime(61)\n# True\n# >>> is_prime(4)\n\
    # False\n# >>> is_prime(1)\n# False\n#\n# $1 is an integer\nis_prime() {\n   \
    \ if [ $1 -eq 1 ]; then\n        echo \"False\"\n    else\n        i=2\n     \
    \   while [ $i -lt $1 ]; do\n            if [ $(($1 % $i)) -eq 0 ]; then\n   \
    \             echo \"False\"\n                break\n            fi\n        \
    \    i=$(($i + 1))\n        done\n        if [ $i -eq $1 ]; then\n           \
    \ echo \"True\"\n        fi\n    fi\n}\n\ncandidate() {\n    is_prime \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"101\") = \"true\" ]]\n    [[ $(candidate \"11\") = \"true\" ]]\n    [[ $(candidate\
    \ \"13441\") = \"true\" ]]\n    [[ $(candidate \"61\") = \"true\" ]]\n    [[ $(candidate\
    \ \"4\") = \"false\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\") = \"true\" ]]\n    [[ $(candidate \"11\") = \"true\" ]]\n    [[ $(candidate\
    \ \"17\") = \"true\" ]]\n    [[ $(candidate \"85\") = \"false\" ]]\n    [[ $(candidate\
    \ \"77\") = \"false\" ]]\n    [[ $(candidate \"255379\") = \"false\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020317
- exit_code: 1
  program: "#!/bin/bash\n# Return true if a given number is prime, and false otherwise.\n\
    # >>> is_prime(6)\n# False\n# >>> is_prime(101)\n# True\n# >>> is_prime(11)\n\
    # True\n# >>> is_prime(13441)\n# True\n# >>> is_prime(61)\n# True\n# >>> is_prime(4)\n\
    # False\n# >>> is_prime(1)\n# False\n#\n# $1 is an integer\nis_prime() {\n   \
    \ if [[ $1 -eq 1 ]]; then\n        return 1\n    fi\n    for (( i=2; i<$1; i++\
    \ )); do\n        if [[ $(( $1 % $i )) -eq 0 ]]; then\n            return 1\n\
    \        fi\n    done\n    return 0\n}\n\ncandidate() {\n    is_prime \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"101\") = \"true\" ]]\n    [[ $(candidate \"11\") = \"true\" ]]\n    [[ $(candidate\
    \ \"13441\") = \"true\" ]]\n    [[ $(candidate \"61\") = \"true\" ]]\n    [[ $(candidate\
    \ \"4\") = \"false\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\") = \"true\" ]]\n    [[ $(candidate \"11\") = \"true\" ]]\n    [[ $(candidate\
    \ \"17\") = \"true\" ]]\n    [[ $(candidate \"85\") = \"false\" ]]\n    [[ $(candidate\
    \ \"77\") = \"false\" ]]\n    [[ $(candidate \"255379\") = \"false\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020317
- exit_code: 1
  program: "#!/bin/bash\n# Return true if a given number is prime, and false otherwise.\n\
    # >>> is_prime(6)\n# False\n# >>> is_prime(101)\n# True\n# >>> is_prime(11)\n\
    # True\n# >>> is_prime(13441)\n# True\n# >>> is_prime(61)\n# True\n# >>> is_prime(4)\n\
    # False\n# >>> is_prime(1)\n# False\n#\n# $1 is an integer\nis_prime() {\n   \
    \ # Write your code here\n    prime=1\n    for((i=2;i<$1;i++))\n    do\n     \
    \   if [[ `expr $1 % $i` -eq 0 ]]\n        then\n            prime=0\n       \
    \     break\n        fi\n    done\n    if [[ $prime -eq 1 ]]\n    then\n     \
    \   echo \"True\"\n    else\n        echo \"False\"\n    fi\n\n}\n\ncandidate()\
    \ {\n    is_prime \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6\"\
    ) = \"false\" ]]\n    [[ $(candidate \"101\") = \"true\" ]]\n    [[ $(candidate\
    \ \"11\") = \"true\" ]]\n    [[ $(candidate \"13441\") = \"true\" ]]\n    [[ $(candidate\
    \ \"61\") = \"true\" ]]\n    [[ $(candidate \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"5\") = \"true\" ]]\n    [[ $(candidate\
    \ \"11\") = \"true\" ]]\n    [[ $(candidate \"17\") = \"true\" ]]\n    [[ $(candidate\
    \ \"85\") = \"false\" ]]\n    [[ $(candidate \"77\") = \"false\" ]]\n    [[ $(candidate\
    \ \"255379\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020317
- exit_code: 1
  program: "#!/bin/bash\n# Return true if a given number is prime, and false otherwise.\n\
    # >>> is_prime(6)\n# False\n# >>> is_prime(101)\n# True\n# >>> is_prime(11)\n\
    # True\n# >>> is_prime(13441)\n# True\n# >>> is_prime(61)\n# True\n# >>> is_prime(4)\n\
    # False\n# >>> is_prime(1)\n# False\n#\n# $1 is an integer\nis_prime() {\n   \
    \ # there are no prime numbers less than 2\n    if [ $1 -lt 2 ]; then\n      \
    \  return 1;\n    fi\n    # the only even prime number is 2\n    if [ $1 -eq 2\
    \ ]; then\n        return 0;\n    fi\n    # all other prime numbers are odd\n\
    \    if [ $(( $1 % 2 )) -eq 0 ]; then\n        return 1;\n    fi\n    # now start\
    \ checking whether the number is prime\n    # try dividing by all odd numbers\
    \ starting from 3\n    for i in $(seq 3 2 $(($1 - 1))); do\n        if [ $(( $1\
    \ % $i )) -eq 0 ]; then\n            return 1;\n        fi\n    done\n    return\
    \ 0;\n}\n\ncandidate() {\n    is_prime \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"6\") = \"false\" ]]\n    [[ $(candidate \"101\") = \"true\"\
    \ ]]\n    [[ $(candidate \"11\") = \"true\" ]]\n    [[ $(candidate \"13441\")\
    \ = \"true\" ]]\n    [[ $(candidate \"61\") = \"true\" ]]\n    [[ $(candidate\
    \ \"4\") = \"false\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\") = \"true\" ]]\n    [[ $(candidate \"11\") = \"true\" ]]\n    [[ $(candidate\
    \ \"17\") = \"true\" ]]\n    [[ $(candidate \"85\") = \"false\" ]]\n    [[ $(candidate\
    \ \"77\") = \"false\" ]]\n    [[ $(candidate \"255379\") = \"false\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020317
- exit_code: 1
  program: "#!/bin/bash\n# Return true if a given number is prime, and false otherwise.\n\
    # >>> is_prime(6)\n# False\n# >>> is_prime(101)\n# True\n# >>> is_prime(11)\n\
    # True\n# >>> is_prime(13441)\n# True\n# >>> is_prime(61)\n# True\n# >>> is_prime(4)\n\
    # False\n# >>> is_prime(1)\n# False\n#\n# $1 is an integer\nis_prime() {\n\tdeclare\
    \ -i num=$1\n\tdeclare -i is_prime=1\n\tif ((num < 2)); then\n\t\treturn 1\n\t\
    fi\n\tfor ((i=2; i<num; i++)); do\n\t\tif ((num % i == 0)); then\n\t\t\tis_prime=0\n\
    \t\t\tbreak\n\t\tfi\n\tdone\n\treturn $is_prime\n}\n\ncandidate() {\n    is_prime\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6\") = \"false\" ]]\n\
    \    [[ $(candidate \"101\") = \"true\" ]]\n    [[ $(candidate \"11\") = \"true\"\
    \ ]]\n    [[ $(candidate \"13441\") = \"true\" ]]\n    [[ $(candidate \"61\")\
    \ = \"true\" ]]\n    [[ $(candidate \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"5\") = \"true\" ]]\n    [[ $(candidate\
    \ \"11\") = \"true\" ]]\n    [[ $(candidate \"17\") = \"true\" ]]\n    [[ $(candidate\
    \ \"85\") = \"false\" ]]\n    [[ $(candidate \"77\") = \"false\" ]]\n    [[ $(candidate\
    \ \"255379\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020317
- exit_code: 1
  program: "#!/bin/bash\n# Return true if a given number is prime, and false otherwise.\n\
    # >>> is_prime(6)\n# False\n# >>> is_prime(101)\n# True\n# >>> is_prime(11)\n\
    # True\n# >>> is_prime(13441)\n# True\n# >>> is_prime(61)\n# True\n# >>> is_prime(4)\n\
    # False\n# >>> is_prime(1)\n# False\n#\n# $1 is an integer\nis_prime() {\n  if\
    \ [ \"$1\" -lt 2 ]; then\n    echo 'False'\n    return 0\n  fi\n  if [ \"$1\"\
    \ -gt 2 ]; then\n    if [ \"$(( $1 % 2 ))\" -eq 0 ]; then\n      echo 'False'\n\
    \      return 0\n    fi\n  fi\n  divisor=3\n  max_divisor=$(( $1 / 2 ))\n  while\
    \ [ \"$divisor\" -le \"$max_divisor\" ]; do\n    if [ \"$(( $1 % $divisor ))\"\
    \ -eq 0 ]; then\n      echo 'False'\n      return 0\n    fi\n    divisor=$(( $divisor\
    \ + 2 ))\n  done\n  echo 'True'\n}\n\ncandidate() {\n    is_prime \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"101\") = \"true\" ]]\n    [[ $(candidate \"11\") = \"true\" ]]\n    [[ $(candidate\
    \ \"13441\") = \"true\" ]]\n    [[ $(candidate \"61\") = \"true\" ]]\n    [[ $(candidate\
    \ \"4\") = \"false\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\") = \"true\" ]]\n    [[ $(candidate \"11\") = \"true\" ]]\n    [[ $(candidate\
    \ \"17\") = \"true\" ]]\n    [[ $(candidate \"85\") = \"false\" ]]\n    [[ $(candidate\
    \ \"77\") = \"false\" ]]\n    [[ $(candidate \"255379\") = \"false\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020317
- exit_code: 1
  program: "#!/bin/bash\n# Return true if a given number is prime, and false otherwise.\n\
    # >>> is_prime(6)\n# False\n# >>> is_prime(101)\n# True\n# >>> is_prime(11)\n\
    # True\n# >>> is_prime(13441)\n# True\n# >>> is_prime(61)\n# True\n# >>> is_prime(4)\n\
    # False\n# >>> is_prime(1)\n# False\n#\n# $1 is an integer\nis_prime() {\n   \
    \ for ((i=2; i<=$1/2; i++)); do\n        if [ $(($1 % $i)) == 0 ]; then\n    \
    \        return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n  \
    \  is_prime \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6\") = \"\
    false\" ]]\n    [[ $(candidate \"101\") = \"true\" ]]\n    [[ $(candidate \"11\"\
    ) = \"true\" ]]\n    [[ $(candidate \"13441\") = \"true\" ]]\n    [[ $(candidate\
    \ \"61\") = \"true\" ]]\n    [[ $(candidate \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"5\") = \"true\" ]]\n    [[ $(candidate\
    \ \"11\") = \"true\" ]]\n    [[ $(candidate \"17\") = \"true\" ]]\n    [[ $(candidate\
    \ \"85\") = \"false\" ]]\n    [[ $(candidate \"77\") = \"false\" ]]\n    [[ $(candidate\
    \ \"255379\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020317
- exit_code: 1
  program: "#!/bin/bash\n# Return true if a given number is prime, and false otherwise.\n\
    # >>> is_prime(6)\n# False\n# >>> is_prime(101)\n# True\n# >>> is_prime(11)\n\
    # True\n# >>> is_prime(13441)\n# True\n# >>> is_prime(61)\n# True\n# >>> is_prime(4)\n\
    # False\n# >>> is_prime(1)\n# False\n#\n# $1 is an integer\nis_prime() {\n   \
    \ local number=$1\n    local count=0\n    local i=2\n    while [ $i -lt $number\
    \ ]\n    do\n        let remainder=number%i\n        if [ $remainder -eq 0 ]\n\
    \        then\n            let count+=1\n        fi\n        let i+=1\n    done\n\
    \    if [ $count -eq 0 ]\n    then\n        echo \"True\"\n    else\n        echo\
    \ \"False\"\n    fi\n}\n\ncandidate() {\n    is_prime \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"6\") = \"false\" ]]\n    [[ $(candidate \"101\") = \"\
    true\" ]]\n    [[ $(candidate \"11\") = \"true\" ]]\n    [[ $(candidate \"13441\"\
    ) = \"true\" ]]\n    [[ $(candidate \"61\") = \"true\" ]]\n    [[ $(candidate\
    \ \"4\") = \"false\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\") = \"true\" ]]\n    [[ $(candidate \"11\") = \"true\" ]]\n    [[ $(candidate\
    \ \"17\") = \"true\" ]]\n    [[ $(candidate \"85\") = \"false\" ]]\n    [[ $(candidate\
    \ \"77\") = \"false\" ]]\n    [[ $(candidate \"255379\") = \"false\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020317
- exit_code: 1
  program: "#!/bin/bash\n# Return true if a given number is prime, and false otherwise.\n\
    # >>> is_prime(6)\n# False\n# >>> is_prime(101)\n# True\n# >>> is_prime(11)\n\
    # True\n# >>> is_prime(13441)\n# True\n# >>> is_prime(61)\n# True\n# >>> is_prime(4)\n\
    # False\n# >>> is_prime(1)\n# False\n#\n# $1 is an integer\nis_prime() {\n  local\
    \ number=\"$1\"\n  # 1 is not a prime number\n  if [ \"$number\" -eq 1 ]; then\n\
    \    echo \"False\"\n    return\n  fi\n  # find upper bound of test interval\n\
    \  upper_bound=$(echo \"sqrt($number)\" | bc)\n  for (( i=2; i<=$upper_bound;\
    \ i++ )); do\n    if [ $(( number % i )) -eq 0 ]; then\n      echo \"False\"\n\
    \      return\n    fi\n  done\n  echo \"True\"\n}\n\ncandidate() {\n    is_prime\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6\") = \"false\" ]]\n\
    \    [[ $(candidate \"101\") = \"true\" ]]\n    [[ $(candidate \"11\") = \"true\"\
    \ ]]\n    [[ $(candidate \"13441\") = \"true\" ]]\n    [[ $(candidate \"61\")\
    \ = \"true\" ]]\n    [[ $(candidate \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"5\") = \"true\" ]]\n    [[ $(candidate\
    \ \"11\") = \"true\" ]]\n    [[ $(candidate \"17\") = \"true\" ]]\n    [[ $(candidate\
    \ \"85\") = \"false\" ]]\n    [[ $(candidate \"77\") = \"false\" ]]\n    [[ $(candidate\
    \ \"255379\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020317
- exit_code: 1
  program: "#!/bin/bash\n# Return true if a given number is prime, and false otherwise.\n\
    # >>> is_prime(6)\n# False\n# >>> is_prime(101)\n# True\n# >>> is_prime(11)\n\
    # True\n# >>> is_prime(13441)\n# True\n# >>> is_prime(61)\n# True\n# >>> is_prime(4)\n\
    # False\n# >>> is_prime(1)\n# False\n#\n# $1 is an integer\nis_prime() {\n   \
    \ local number=$1\n    local divisor=2\n    let local sqrt_number=number/2\n \
    \   while [ \"$divisor\" -le \"$sqrt_number\" ]; do\n        if [ $((number %\
    \ divisor)) -eq 0 ]; then\n            return 1\n        fi\n        let divisor=divisor+1\n\
    \    done\n    return 0\n}\n\ncandidate() {\n    is_prime \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"6\") = \"false\" ]]\n    [[ $(candidate \"\
    101\") = \"true\" ]]\n    [[ $(candidate \"11\") = \"true\" ]]\n    [[ $(candidate\
    \ \"13441\") = \"true\" ]]\n    [[ $(candidate \"61\") = \"true\" ]]\n    [[ $(candidate\
    \ \"4\") = \"false\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\") = \"true\" ]]\n    [[ $(candidate \"11\") = \"true\" ]]\n    [[ $(candidate\
    \ \"17\") = \"true\" ]]\n    [[ $(candidate \"85\") = \"false\" ]]\n    [[ $(candidate\
    \ \"77\") = \"false\" ]]\n    [[ $(candidate \"255379\") = \"false\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020317
- exit_code: 1
  program: "#!/bin/bash\n# Return true if a given number is prime, and false otherwise.\n\
    # >>> is_prime(6)\n# False\n# >>> is_prime(101)\n# True\n# >>> is_prime(11)\n\
    # True\n# >>> is_prime(13441)\n# True\n# >>> is_prime(61)\n# True\n# >>> is_prime(4)\n\
    # False\n# >>> is_prime(1)\n# False\n#\n# $1 is an integer\nis_prime() {\n  for\
    \ ((i=2; i<$1; i++)); do\n    if [ $(( $1 % $i )) -eq 0 ]; then\n      return\
    \ 1\n    fi\n  done\n  return 0\n}\n\ncandidate() {\n    is_prime \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"101\") = \"true\" ]]\n    [[ $(candidate \"11\") = \"true\" ]]\n    [[ $(candidate\
    \ \"13441\") = \"true\" ]]\n    [[ $(candidate \"61\") = \"true\" ]]\n    [[ $(candidate\
    \ \"4\") = \"false\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\") = \"true\" ]]\n    [[ $(candidate \"11\") = \"true\" ]]\n    [[ $(candidate\
    \ \"17\") = \"true\" ]]\n    [[ $(candidate \"85\") = \"false\" ]]\n    [[ $(candidate\
    \ \"77\") = \"false\" ]]\n    [[ $(candidate \"255379\") = \"false\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020317
- exit_code: 1
  program: "#!/bin/bash\n# Return true if a given number is prime, and false otherwise.\n\
    # >>> is_prime(6)\n# False\n# >>> is_prime(101)\n# True\n# >>> is_prime(11)\n\
    # True\n# >>> is_prime(13441)\n# True\n# >>> is_prime(61)\n# True\n# >>> is_prime(4)\n\
    # False\n# >>> is_prime(1)\n# False\n#\n# $1 is an integer\nis_prime() {\n   \
    \ if [ $1 -lt 2 ]; then\n        echo \"False\"\n        return 1\n    fi\n  \
    \  for ((i=2; i<=$1/2; i++)); do\n        # If remainder of the divisor is 0 then\
    \ it is not prime\n        if [ $(( $1 % $i )) -eq 0 ]; then\n            echo\
    \ \"False\"\n            return 1\n        fi\n    done\n    echo \"True\"\n \
    \   return 0\n}\n\ncandidate() {\n    is_prime \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"6\") = \"false\" ]]\n    [[ $(candidate \"101\") = \"\
    true\" ]]\n    [[ $(candidate \"11\") = \"true\" ]]\n    [[ $(candidate \"13441\"\
    ) = \"true\" ]]\n    [[ $(candidate \"61\") = \"true\" ]]\n    [[ $(candidate\
    \ \"4\") = \"false\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\") = \"true\" ]]\n    [[ $(candidate \"11\") = \"true\" ]]\n    [[ $(candidate\
    \ \"17\") = \"true\" ]]\n    [[ $(candidate \"85\") = \"false\" ]]\n    [[ $(candidate\
    \ \"77\") = \"false\" ]]\n    [[ $(candidate \"255379\") = \"false\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020317
- exit_code: 1
  program: "#!/bin/bash\n# Return true if a given number is prime, and false otherwise.\n\
    # >>> is_prime(6)\n# False\n# >>> is_prime(101)\n# True\n# >>> is_prime(11)\n\
    # True\n# >>> is_prime(13441)\n# True\n# >>> is_prime(61)\n# True\n# >>> is_prime(4)\n\
    # False\n# >>> is_prime(1)\n# False\n#\n# $1 is an integer\nis_prime() {\n  if\
    \ [ $1 -eq 1 ]; then\n    echo False\n  else\n    # If a number is divisible by\
    \ any number between 2 and n-1, then it is not prime.\n    for (( i=2; i<$1; i++\
    \ )); do\n      if [ $(($1 % $i)) -eq 0 ]; then\n        echo False\n        return\n\
    \      fi\n    done\n    echo True\n  fi\n}\n\ncandidate() {\n    is_prime \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6\") = \"false\" ]]\n  \
    \  [[ $(candidate \"101\") = \"true\" ]]\n    [[ $(candidate \"11\") = \"true\"\
    \ ]]\n    [[ $(candidate \"13441\") = \"true\" ]]\n    [[ $(candidate \"61\")\
    \ = \"true\" ]]\n    [[ $(candidate \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\") = \"false\" ]]\n    [[ $(candidate \"5\") = \"true\" ]]\n    [[ $(candidate\
    \ \"11\") = \"true\" ]]\n    [[ $(candidate \"17\") = \"true\" ]]\n    [[ $(candidate\
    \ \"85\") = \"false\" ]]\n    [[ $(candidate \"77\") = \"false\" ]]\n    [[ $(candidate\
    \ \"255379\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020317
- exit_code: 1
  program: "#!/bin/bash\n# Return true if a given number is prime, and false otherwise.\n\
    # >>> is_prime(6)\n# False\n# >>> is_prime(101)\n# True\n# >>> is_prime(11)\n\
    # True\n# >>> is_prime(13441)\n# True\n# >>> is_prime(61)\n# True\n# >>> is_prime(4)\n\
    # False\n# >>> is_prime(1)\n# False\n#\n# $1 is an integer\nis_prime() {\n   \
    \ local number=\"$1\"\n    if (($number == 1)); then\n        return 1\n    fi\n\
    \    if (($number == 2)); then\n        return 0\n    fi\n    if (( ($number %\
    \ 2) == 0 )); then\n        return 1\n    fi\n    local i\n    for ((i=3; i<=$number/2;\
    \ i+=2)); do\n        if (( ($number % i) == 0 )); then\n            return 1\n\
    \        fi\n    done\n    return 0\n}\n\ncandidate() {\n    is_prime \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"101\") = \"true\" ]]\n    [[ $(candidate \"11\") = \"true\" ]]\n    [[ $(candidate\
    \ \"13441\") = \"true\" ]]\n    [[ $(candidate \"61\") = \"true\" ]]\n    [[ $(candidate\
    \ \"4\") = \"false\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\") = \"true\" ]]\n    [[ $(candidate \"11\") = \"true\" ]]\n    [[ $(candidate\
    \ \"17\") = \"true\" ]]\n    [[ $(candidate \"85\") = \"false\" ]]\n    [[ $(candidate\
    \ \"77\") = \"false\" ]]\n    [[ $(candidate \"255379\") = \"false\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020317
- exit_code: 1
  program: "#!/bin/bash\n# Return true if a given number is prime, and false otherwise.\n\
    # >>> is_prime(6)\n# False\n# >>> is_prime(101)\n# True\n# >>> is_prime(11)\n\
    # True\n# >>> is_prime(13441)\n# True\n# >>> is_prime(61)\n# True\n# >>> is_prime(4)\n\
    # False\n# >>> is_prime(1)\n# False\n#\n# $1 is an integer\nis_prime() {\n   \
    \ n=$1\n    if [[ $n -eq 1 ]]; then\n        echo \"False\"\n        return\n\
    \    fi\n    if [[ $n -eq 2 ]]; then\n        echo \"True\"\n        return\n\
    \    fi\n    if [[ $(( n % 2 )) -eq 0 ]]; then\n        echo \"False\"\n     \
    \   return\n    fi\n    i=3\n    sqrt_n=$(echo \"sqrt($n)\" | bc)\n    while [\
    \ $i -le $sqrt_n ]; do\n        if [[ $(( n % i )) -eq 0 ]]; then\n          \
    \  echo \"False\"\n            return\n        fi\n        i=$(( i + 2 ))\n  \
    \  done\n    echo \"True\"\n}\n\ncandidate() {\n    is_prime \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"101\") = \"true\" ]]\n    [[ $(candidate \"11\") = \"true\" ]]\n    [[ $(candidate\
    \ \"13441\") = \"true\" ]]\n    [[ $(candidate \"61\") = \"true\" ]]\n    [[ $(candidate\
    \ \"4\") = \"false\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\") = \"true\" ]]\n    [[ $(candidate \"11\") = \"true\" ]]\n    [[ $(candidate\
    \ \"17\") = \"true\" ]]\n    [[ $(candidate \"85\") = \"false\" ]]\n    [[ $(candidate\
    \ \"77\") = \"false\" ]]\n    [[ $(candidate \"255379\") = \"false\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020317
- exit_code: 1
  program: "#!/bin/bash\n# Return true if a given number is prime, and false otherwise.\n\
    # >>> is_prime(6)\n# False\n# >>> is_prime(101)\n# True\n# >>> is_prime(11)\n\
    # True\n# >>> is_prime(13441)\n# True\n# >>> is_prime(61)\n# True\n# >>> is_prime(4)\n\
    # False\n# >>> is_prime(1)\n# False\n#\n# $1 is an integer\nis_prime() {\n   \
    \ if [[ $1 -lt 2 ]]; then\n        echo \"False\"\n        return\n    fi\n  \
    \  for (( i=2; i<$1; i++ )); do\n        if [[ $(( $1 % $i )) -eq 0 ]]; then\n\
    \            echo \"False\"\n            return\n        fi\n    done\n    echo\
    \ \"True\"\n}\n\ncandidate() {\n    is_prime \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"6\") = \"false\" ]]\n    [[ $(candidate \"101\") = \"true\"\
    \ ]]\n    [[ $(candidate \"11\") = \"true\" ]]\n    [[ $(candidate \"13441\")\
    \ = \"true\" ]]\n    [[ $(candidate \"61\") = \"true\" ]]\n    [[ $(candidate\
    \ \"4\") = \"false\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\") = \"true\" ]]\n    [[ $(candidate \"11\") = \"true\" ]]\n    [[ $(candidate\
    \ \"17\") = \"true\" ]]\n    [[ $(candidate \"85\") = \"false\" ]]\n    [[ $(candidate\
    \ \"77\") = \"false\" ]]\n    [[ $(candidate \"255379\") = \"false\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020317
- exit_code: 1
  program: "#!/bin/bash\n# Return true if a given number is prime, and false otherwise.\n\
    # >>> is_prime(6)\n# False\n# >>> is_prime(101)\n# True\n# >>> is_prime(11)\n\
    # True\n# >>> is_prime(13441)\n# True\n# >>> is_prime(61)\n# True\n# >>> is_prime(4)\n\
    # False\n# >>> is_prime(1)\n# False\n#\n# $1 is an integer\nis_prime() {\n  if\
    \ [ $1 -lt 2 ]; then\n    return 1\n  fi\n  # Note: This algorithm is a basic\
    \ trial division. \n  # It is slow, but it gets the job done.\n  if [ $1 -lt 4\
    \ ]; then\n    return 0\n  fi\n  if [ $(( $1 % 2 )) -eq 0 ]; then\n    return\
    \ 1\n  fi\n  if [ $1 -lt 9 ]; then\n    return 0\n  fi\n  if [ $(( $1 % 3 )) -eq\
    \ 0 ]; then\n    return 1\n  fi\n  if [ $1 -lt 25 ]; then\n    return 0\n  fi\n\
    \  k=5\n  limit=$(( $1 / k ))\n  while [ $k -le $limit ]; do\n    if [ $(( $1\
    \ % k )) -eq 0 ]; then\n      return 1\n    fi\n    if [ $(( $1 % ($k + 2) ))\
    \ -eq 0 ]; then\n      return 1\n    fi\n    k=$(( $k + 6 ))\n  done\n  return\
    \ 0\n}\n\ncandidate() {\n    is_prime \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"6\") = \"false\" ]]\n    [[ $(candidate \"101\") = \"true\" ]]\n\
    \    [[ $(candidate \"11\") = \"true\" ]]\n    [[ $(candidate \"13441\") = \"\
    true\" ]]\n    [[ $(candidate \"61\") = \"true\" ]]\n    [[ $(candidate \"4\"\
    ) = \"false\" ]]\n    [[ $(candidate \"1\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\") = \"true\" ]]\n    [[ $(candidate \"11\") = \"true\" ]]\n    [[ $(candidate\
    \ \"17\") = \"true\" ]]\n    [[ $(candidate \"85\") = \"false\" ]]\n    [[ $(candidate\
    \ \"77\") = \"false\" ]]\n    [[ $(candidate \"255379\") = \"false\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020317

name: HumanEval_121_solution
language: sh
prompt: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
  \ of the odd elements that are in even positions.\n# Examples\n# solution([5, 8,\
  \ 7, 1]) ==> 12\n# solution([3, 3, 3, 3, 3]) ==> 9\n# solution([30, 13, 24, 321])\
  \ ==>0\n#\n# $1 is a space-separated list\nsolution() {\n"
tests: "}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
  \ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\"\
  \ ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\"\
  ) = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30\
  \ 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
completions: ["  local -a nums=($1)\n  local odd=0\n  local sum=0\n  local index=0\n\
    \  for num in ${nums[@]}; do\n    if [ $(($index % 2)) -eq 0 ] && [ $(($num %\
    \ 2)) -ne 0 ]; then\n      let sum+=$num\n    fi\n    let index++\n  done\n  echo\
    \ $sum", "  # your solution here\n  awk '{\n      odd=0\n      sum=0\n      for(i=1;i<=NF;i++)\n\
    \      {\n          odd++\n          if(odd%2==0)\n          {\n             \
    \ if(i%2==0)\n              {\n                  sum+=$i\n              }\n  \
    \        }\n      }\n      print sum\n  }' <(echo \"$1\")", "  local array=($1)\n\
    \  local sum=0\n  for ((i=0; i<${#array[@]}; i+=2)); do\n    ((${array[i]} % 2\
    \ == 0)) && ((sum+=${array[i+1]}))\n  done\n  echo $sum", "    local input=$1\n\
    \    local odd_sum=0\n    local even_sum=0\n    local i=0\n    for element in\
    \ $input; do\n        let i++\n        if [ $(($i % 2)) -eq 0 ]; then\n      \
    \      odd_sum=$(($odd_sum + $element))\n        else\n            even_sum=$(($even_sum\
    \ + $element))\n        fi\n    done\n    echo $(($odd_sum - $even_sum))", " \
    \ local arg=\"$1\"\n  local sum=0\n  for i in $arg; do\n    if [ $(($i % 2)) -eq\
    \ 0 ] && [ $(($i % 4)) -ne 0 ]; then\n      sum=$(($sum + $i))\n    fi\n  done\n\
    \  echo $sum", "  arr=($1)\n  sum=0\n  for ((i=0; i<${#arr[@]}; i+=2)); do\n \
    \   (( arr[i] % 2 == 0 )) && (( sum+=arr[i] ))\n  done\n  echo $sum", "    # your\
    \ solution here\n    num=0\n    for i in `seq 0 $((${#1}-1))`; do\n        if\
    \ [ $((i%2)) -eq 0 ] && [ $(( ${1:$i:1}%2 )) -ne 0 ]; then\n            num=$((num+${1:$i:1}))\n\
    \        fi\n    done\n    echo $num", "  l=$1\n  sum=0\n  for (( i=0; i<${#l};\
    \ i++ )); do\n    if [[ $((i % 2)) -eq 0 ]]; then\n      if [[ $((l[i] % 2)) -ne\
    \ 0 ]]; then\n        sum=$((sum + l[i]))\n      fi\n    fi\n  done\n  echo $sum",
  "  local -a arr=($1)\n  local -i sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n \
    \   if (( $((i%2)) == 0 )) && (( $((arr[i]%2)) == 1 )); then\n      sum+=$((arr[i]))\n\
    \    fi\n  done\n  echo $sum", "  odd=()\n  even=()\n  for i in $1; do\n    if\
    \ ((i % 2 == 0)); then\n      even+=(\"$i\")\n    else\n      odd+=(\"$i\")\n\
    \    fi\n  done\n  c=0\n  r=0\n  for i in \"${even[@]}\"; do\n    c=$((c + 1))\n\
    \    if ((c % 2 == 0)); then\n      r=$((r + i))\n    fi\n  done\n  for i in \"\
    ${odd[@]}\"; do\n    c=$((c + 1))\n    if ((c % 2 == 0)); then\n      r=$((r +\
    \ i))\n    fi\n  done\n  echo $r", "    echo \"$1\" | awk '{\n        for (i =\
    \ 1; i <= NF; i++) {\n            if (i % 2 == 0 && $i % 2 == 1) {\n         \
    \       print $i\n            }\n        }\n    }' | paste -sd+ | bc", "  local\
    \ sum=0\n\n  for (( i=0; i<${#1}; i++ )); do\n    local curr_char=\"${1:$i:1}\"\
    \n    if [[ $curr_char == *[0-9]* ]]; then\n      if (( i % 2 == 0 )); then\n\
    \        if (( curr_char % 2 == 1 )); then\n          sum=$(( sum + curr_char\
    \ ))\n        fi\n      fi\n    fi\n  done\n\n  echo $sum", "  local list=\"$1\"\
    \n  local sum=0\n  local c=0\n  local arr\n  arr=($list)\n  for ((i=0; i<${#arr[@]};\
    \ i+=2)); do\n    if [ $((arr[i]%2)) -ne 0 ]; then\n      sum=$((sum+arr[i]))\n\
    \    fi\n  done\n  echo $sum", "  echo \"$1\" | sed 's/\\([0-9]*\\) \\([0-9]*\\\
    )/\\2 \\1/g' | sed 's/^\\([0-9]*\\) \\([0-9]*\\)/\\2 \\1/' | sed 's/\\([0-9]*\\\
    ) \\([0-9]*\\)/\\2 \\1/g' | sed 's/\\([0-9]*\\) \\([0-9]*\\)/\\2 \\1/g' | awk\
    \ '{print $1+$3+$5+$7+$9+$11+$13+$15+$17+$19+$21+$23+$25+$27+$29+$31+$33+$35+$37+$39+$41+$43+$45+$47+$49+$51+$53+$55+$57+$59+$61+$63+$65+$67+$69+$71+$73+$75+$77+$79+$81+$83+$85+$87+$89+$91+$93+$95+$97+$99+$101+$103+$105+$107+$109+$111+$113+$115+$117+$119+$121+$123+$125+$127+$129+$131+$133+$135+$137+$139+$141+$143+$145+$147+$149+$151+$153+$155+$157+$159+$161+$163+$165+$167+$169+$171+$173+$175+$177+$179+$181+$183+$185+$187+$189+$191+$193+$195+$197+$199+$201+$203+$205+$207+$209+$211+$213+$215+$217+$219+$221+$223+$225+$227+$229+$231+$233+$235+$237+$239+$241+$243+$245+$247+$249+$251+$253+$255+",
  "  sum=0\n  OIFS=$IFS\n  IFS=' ' read -r -a array <<< \"$1\"\n  for (( i=0; i<\"\
    ${#array[@]}\"; i++ )); do\n    if (( i % 2 == 0 )); then\n      if (( array[i]\
    \ % 2 != 0 )); then\n        (( sum += array[i] ))\n      fi\n    fi\n  done\n\
    \  echo $sum\n  IFS=$OIFS", "  for((i=0; i<${#1}; i++)); do\n    odd=${1:$i:1}\n\
    \    if [[ $(($i % 2)) == 0 ]] && [[ $(($odd % 2)) == 1 ]]; then\n      if [[\
    \ $total != \"\" ]]; then\n        total=$(($total + $odd))\n      else\n    \
    \    total=$odd\n      fi\n    fi\n  done\n  echo $total", "    echo $@ | sed\
    \ 's/ /\\n/g' | awk '{print NR%2==0?$1:\"\"}' | sed '/^$/d' | awk '{sum+=$1} END\
    \ {print sum}'", "  (($#%2==0)) && { echo 0; return; }\n  set -- $1\n  echo $((${@:2:$#}))",
  "  for i in $1\n  do\n    if [[ $(($i % 2)) -eq 0 ]]\n    then\n      echo $i\n\
    \    fi\n  done", "  a=\"$1\"\n  sum=0\n  for (( i=1; i<${#a}; i+=2 ))\n  do\n\
    \    sum=$((sum+a[i]))\n  done\n  echo $sum"]
stop_tokens:
- "\n}"

language: sh
name: HumanEval_23_strlen
results:
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n# >>> strlen('')\n# 0\n\
    # >>> strlen('abc')\n# 3\n#\n# $1 is a string\nstrlen() {\n    echo ${#1}\n}\n\
    \ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n    [[ $(candidate \"\
    asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020271
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n# >>> strlen('')\n# 0\n\
    # >>> strlen('abc')\n# 3\n#\n# $1 is a string\nstrlen() {\n  echo -n \"$1\" |\
    \ wc -c\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n   \
    \ [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020271
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n# >>> strlen('')\n# 0\n\
    # >>> strlen('abc')\n# 3\n#\n# $1 is a string\nstrlen() {\n    if [[ $# -eq 0\
    \ ]]; then\n        echo \"No string to measure\"\n        return 1\n    fi\n\
    \    echo ${#1}\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020271
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n# >>> strlen('')\n# 0\n\
    # >>> strlen('abc')\n# 3\n#\n# $1 is a string\nstrlen() {\n  echo \"${#1}\"\n\
    }\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n    [[ $(candidate \"\
    asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020271
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n# >>> strlen('')\n# 0\n\
    # >>> strlen('abc')\n# 3\n#\n# $1 is a string\nstrlen() {\n    echo $1 | awk '{\
    \ print length }'\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020271
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n# >>> strlen('')\n# 0\n\
    # >>> strlen('abc')\n# 3\n#\n# $1 is a string\nstrlen() {\n  if [ $# -ne 1 ];\
    \ then\n    echoerr \"strlen: exactly 1 argument required, $# provided\"\n   \
    \ return 1\n  fi\n  echo \"${#1}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"x\") = \"1\" ]]\n    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020271
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n# >>> strlen('')\n# 0\n\
    # >>> strlen('abc')\n# 3\n#\n# $1 is a string\nstrlen() {\n    local str=\"$1\"\
    \n    echo \"${#str}\"\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020271
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n# >>> strlen('')\n# 0\n\
    # >>> strlen('abc')\n# 3\n#\n# $1 is a string\nstrlen() {\n  echo -n $1 | wc -c\n\
    }\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n    [[ $(candidate \"\
    asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020271
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n# >>> strlen('')\n# 0\n\
    # >>> strlen('abc')\n# 3\n#\n# $1 is a string\nstrlen() {\n    if [ $# -eq 0 ];\
    \ then\n        echo '# strlen() needs at least one argument'\n        return\
    \ 1\n    fi\n    if [ -z \"$1\" ]; then\n        echo '0'\n    else\n        echo\
    \ \"${#1}\"\n    fi\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020271
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n# >>> strlen('')\n# 0\n\
    # >>> strlen('abc')\n# 3\n#\n# $1 is a string\nstrlen() {\n    local STR=$1\n\
    \    echo ${#STR}\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020271
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n# >>> strlen('')\n# 0\n\
    # >>> strlen('abc')\n# 3\n#\n# $1 is a string\nstrlen() {\n  local __resultvar=$2\n\
    \  local __var=$1\n  local __result=${#__var}\n  if [[ \"$__resultvar\" ]]; then\n\
    \    eval $__resultvar=\"'$__result'\"\n  else\n    echo \"$__result\"\n  fi\n\
    }\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n    [[ $(candidate \"\
    asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020271
- exit_code: 1
  program: "#!/bin/bash\n# Return length of given string\n# >>> strlen('')\n# 0\n\
    # >>> strlen('abc')\n# 3\n#\n# $1 is a string\nstrlen() {\n    echo $1 | wc -c\n\
    }\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n    [[ $(candidate \"\
    asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020271
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n# >>> strlen('')\n# 0\n\
    # >>> strlen('abc')\n# 3\n#\n# $1 is a string\nstrlen() {\n  if [ $# -ne 1 ];\
    \ then\n    echo \"USAGE: $0 str\"\n    return 1\n  fi\n  local str=\"$1\"\n \
    \ local len=${#str}\n  echo $len\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"x\") = \"1\" ]]\n    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020271
- exit_code: 1
  program: "#!/bin/bash\n# Return length of given string\n# >>> strlen('')\n# 0\n\
    # >>> strlen('abc')\n# 3\n#\n# $1 is a string\nstrlen() {\n  echo $1 | wc -c\n\
    }\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n    [[ $(candidate \"\
    asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020271
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n# >>> strlen('')\n# 0\n\
    # >>> strlen('abc')\n# 3\n#\n# $1 is a string\nstrlen() {\n    local str=\"$1\"\
    \n    if [ -z \"$str\" ]; then\n        echo \"0\"\n    else\n        echo \"\
    ${#str}\"\n    fi\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n\
    \    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020271
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n# >>> strlen('')\n# 0\n\
    # >>> strlen('abc')\n# 3\n#\n# $1 is a string\nstrlen() {\n  if [[ -z \"$1\" ]];\
    \ then\n    echo 0\n  else\n    echo \"${#1}\"\n  fi\n}\n\ncandidate() {\n   \
    \ strlen \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n\
    \    [[ $(candidate \"x\") = \"1\" ]]\n    [[ $(candidate \"asdasnakj\") = \"\
    9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020271
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n# >>> strlen('')\n# 0\n\
    # >>> strlen('abc')\n# 3\n#\n# $1 is a string\nstrlen() {\n    [ $# -eq 1 ] ||\
    \ return 1\n    echo ${#1}\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") =\
    \ \"1\" ]]\n    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020271
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n# >>> strlen('')\n# 0\n\
    # >>> strlen('abc')\n# 3\n#\n# $1 is a string\nstrlen() {\n    local STR=$1\n\
    \    local LEN=${#STR}\n    echo $LEN\n}\n\ncandidate() {\n    strlen \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"x\") = \"1\" ]]\n    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020271
- exit_code: 1
  program: "#!/bin/bash\n# Return length of given string\n# >>> strlen('')\n# 0\n\
    # >>> strlen('abc')\n# 3\n#\n# $1 is a string\nstrlen() {\n    echo -n \"$1\"\
    \ | awk '{print length}'\n}\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"x\") =\
    \ \"1\" ]]\n    [[ $(candidate \"asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020271
- exit_code: 0
  program: "#!/bin/bash\n# Return length of given string\n# >>> strlen('')\n# 0\n\
    # >>> strlen('abc')\n# 3\n#\n# $1 is a string\nstrlen() {\n    # ${#1} will expand\
    \ to the length of the string $1\n    local len=\"${#1}\"\n    echo \"$len\"\n\
    }\n\ncandidate() {\n    strlen \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"x\") = \"1\" ]]\n    [[ $(candidate \"\
    asdasnakj\") = \"9\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020271

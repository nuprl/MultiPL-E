name: HumanEval_55_fib
language: sh
prompt: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> fib(10)\n# 55\n# >>>\
  \ fib(1)\n# 1\n# >>> fib(8)\n# 21\n#\n# $1 is an integer\nfib() {\n"
tests: "}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
  \ \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
  \ \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate\
  \ \"12\") = \"144\" ]]\n}\n\nrun_test"
completions: ["    if [[ $1 -le 0 ]]; then\n        echo \"fib: argument must be greater\
    \ than 0\" >&2\n        return 1\n    fi\n    if [[ $1 -eq 1 ]]; then\n      \
    \  echo 0\n        return 0\n    fi\n    if [[ $1 -eq 2 ]]; then\n        echo\
    \ 1\n        return 0\n    fi\n    fn_2=0\n    fn_1=1\n    fn=1\n    for (( i=3;\
    \ i<=$1; i++ )); do\n        fn_2=$fn_1\n        fn_1=$fn\n        fn=$((fn_1+fn_2))\n\
    \    done\n    echo $fn", "    if (( $1 <= 2 )); then\n        echo 1\n    else\n\
    \        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n    fi", " \
    \   if [ $1 -lt 3 ]; then\n        echo 1\n    else\n        echo $(( $(fib $((\
    \ $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n    fi", "    local a=0\n    local b=1\n\
    \    for ((i=0; i<$1; i++)); do\n        local a_old=$a\n        a=$((a+b))\n\
    \        b=$a_old\n    done\n    echo $a", "    if [[ $1 == 0 ]]; then\n     \
    \   echo \"0\"\n    elif [[ $1 == 1 ]]; then\n        echo \"1\"\n    else\n \
    \       fib1=$(($1 - 1))\n        fib2=$(($1 - 2))\n        fib_res=$(($(fib $fib1)\
    \ + $(fib $fib2)))\n        echo $fib_res\n    fi", "    if (( $1 <= 2 )); then\n\
    \        echo \"1\"\n    else\n        echo \"$(( $(fib $(( $1 - 1 ))) + $(fib\
    \ $(( $1 - 2 ))) ))\"\n    fi", "  if [ $1 -le 1 ]; then\n    echo $1\n  else\n\
    \    a=$(fib $(( $1 - 1 )))\n    b=$(fib $(( $1 - 2 )))\n    echo $(( $a + $b\
    \ ))\n  fi", "    (( $1 == 0 )) && echo 1 || {\n        (( $1 == 1 )) && echo\
    \ 1 || {\n            (( $1 == 2 )) && echo 2 || {\n                echo $(( $(fib\
    \ $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n            }\n        }\n    }",
  "  if [ $1 -eq 1 ]; then\n    echo 1\n  elif [ $1 -eq 2 ]; then\n    echo 1\n  else\n\
    \    echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n  fi", "  local\
    \ n=$1\n  if [[ $n == 0 ]]; then\n    echo \"0\"\n  elif [[ $n == 1 ]]; then\n\
    \    echo \"1\"\n  else\n    echo \"$(( $(fib $((n-1))) + $(fib $((n-2))) ))\"\
    \n  fi", "    [ $1 -eq 0 ] && echo 0 && return 0\n    [ $1 -eq 1 ] && echo 1 &&\
    \ return 0\n    echo \"$(($(fib $(($1-1))) + $(fib $(($1-2)))))\"", "  if [ \"\
    $1\" -le 2 ]; then\n    echo \"1\"\n  else\n    echo $(( $(fib $(( $1 - 1 )))\
    \ + $(fib $(( $1 - 2 ))) ))\n  fi", "  if [[ $1 -eq 1 ]]; then\n    echo 1\n \
    \ elif [[ $1 -eq 2 ]]; then\n    echo 1\n  else\n    echo $((`fib $(( $1 - 1 ))`\
    \ + `fib $(( $1 - 2 ))`))\n  fi", "  local n=$1\n  if [[ \"$n\" == \"1\" ]]; then\n\
    \    echo \"1\"\n  elif [[ \"$n\" == \"2\" ]]; then\n    echo \"1\"\n  else\n\
    \    local n1=$(fib $((n-1)))\n    local n2=$(fib $((n-2)))\n    echo $((n1+n2))\n\
    \  fi", "    # Fill this in.\n    num=$1\n    if [ $num -eq 1 ] || [ $num -eq\
    \ 2 ]; then\n        echo \"1\"\n    else\n        ans1=$(($num-1))\n        ans2=$(($num-2))\n\
    \        ans1=$(fib $ans1)\n        ans2=$(fib $ans2)\n        answer=$(($ans1+$ans2))\n\
    \        echo $answer\n    fi", "  if [ $1 -le 0 ]; then\n    return 0\n  elif\
    \ [ $1 -eq 1 ]; then\n    return 1\n  fi\n  f0=0\n  f1=1\n  echo -n \"$f0 $f1\
    \ \"\n  for (( i=2; i<$1; i++ )); do\n    fn=$((f0+f1))\n    echo -n \"$fn \"\n\
    \    f0=$f1\n    f1=$fn\n  done\n  echo", "    n=$1\n    if [[ $n -lt 1 ]]; then\n\
    \        echo 0\n    elif [[ $n -eq 1 ]]; then\n        echo 1\n    else\n   \
    \     f0=0\n        f1=1\n        for i in $(seq 2 $n); do\n            fn=$((f0\
    \ + f1))\n            f0=$f1\n            f1=$fn\n        done\n        echo $fn\n\
    \    fi", "  if [ \"$1\" -le 0 ]; then\n    echo 0\n  elif [ \"$1\" -eq 1 ]; then\n\
    \    echo 1\n  else\n    echo $((`fib $(( $1 - 1 ))` + `fib $(( $1 - 2 ))`))\n\
    \  fi", "\tlocal ret=0\n\tlocal n=$1\n\t((n > 2)) && ret=$((fib($n-1) + fib($n-2)))\
    \ || ret=1\n\techo $ret", "\tlocal n=$1\n\tif [ $n -lt 3 ]; then\n\t\techo 1\n\
    \telse\n\t\t# fib(n-1) + fib(n-2)\n\t\techo $(($(fib $(($n-1))) + $(fib $(($n-2)))))\n\
    \tfi"]
stop_tokens:
- "\n}"

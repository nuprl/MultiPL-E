language: sh
name: HumanEval_98_count_upper
results:
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s, count the number of uppercase vowels\
    \ in even indices.\n# For example:\n# count_upper('aBCdEf') returns 1\n# count_upper('abcdefg')\
    \ returns 0\n# count_upper('dBBE') returns 0\n#\n# $1 is a string\ncount_upper()\
    \ {\n    echo $1 | grep -o '[A,E,I,O,U]' | grep -v '[A-DF-Z]' | grep -v '[H-W]'\
    \ | grep -v '[Y-Z]' | wc -l\n}\n\ncandidate() {\n    count_upper \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"aBCdEf\") = \"1\" ]]\n    [[ $(candidate\
    \ \"abcdefg\") = \"0\" ]]\n    [[ $(candidate \"dBBE\") = \"0\" ]]\n    [[ $(candidate\
    \ \"B\") = \"0\" ]]\n    [[ $(candidate \"U\") = \"1\" ]]\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"EEEE\") = \"2\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020345
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s, count the number of uppercase vowels\
    \ in even indices.\n# For example:\n# count_upper('aBCdEf') returns 1\n# count_upper('abcdefg')\
    \ returns 0\n# count_upper('dBBE') returns 0\n#\n# $1 is a string\ncount_upper()\
    \ {\n  local count=0\n  local i=0\n  local l=\"${#1}\"\n  while [ $i -lt $l ];\
    \ do\n    case \"${1:$i:1}\" in\n      A|E|I|O|U)\n        (( i % 2 )) && (( count++\
    \ ))\n        ;;\n    esac\n    (( i++ ))\n  done\n  echo $count\n}\n\ncandidate()\
    \ {\n    count_upper \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    aBCdEf\") = \"1\" ]]\n    [[ $(candidate \"abcdefg\") = \"0\" ]]\n    [[ $(candidate\
    \ \"dBBE\") = \"0\" ]]\n    [[ $(candidate \"B\") = \"0\" ]]\n    [[ $(candidate\
    \ \"U\") = \"1\" ]]\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    EEEE\") = \"2\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020345
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s, count the number of uppercase vowels\
    \ in even indices.\n# For example:\n# count_upper('aBCdEf') returns 1\n# count_upper('abcdefg')\
    \ returns 0\n# count_upper('dBBE') returns 0\n#\n# $1 is a string\ncount_upper()\
    \ {\n    local n=$(tr -dc '[A,E,I,O,U]' <<< \"$1\" | wc -c)\n    echo \"$((n/2))\"\
    \n}\n\ncandidate() {\n    count_upper \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"aBCdEf\") = \"1\" ]]\n    [[ $(candidate \"abcdefg\") = \"0\"\
    \ ]]\n    [[ $(candidate \"dBBE\") = \"0\" ]]\n    [[ $(candidate \"B\") = \"\
    0\" ]]\n    [[ $(candidate \"U\") = \"1\" ]]\n    [[ $(candidate \"\") = \"0\"\
    \ ]]\n    [[ $(candidate \"EEEE\") = \"2\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020345
- exit_code: 0
  program: "#!/bin/bash\n# Given a string s, count the number of uppercase vowels\
    \ in even indices.\n# For example:\n# count_upper('aBCdEf') returns 1\n# count_upper('abcdefg')\
    \ returns 0\n# count_upper('dBBE') returns 0\n#\n# $1 is a string\ncount_upper()\
    \ {\n    local str=\"$1\"\n    local vowels=\"AEIOU\"\n    local count=0\n   \
    \ local i=0\n    for ((i=0; i<${#str}; i++)); do\n        if [[ $((i % 2)) ==\
    \ 0 ]] && [[ \"${vowels}\" =~ ${str:$i:1} ]]; then\n            ((count++))\n\
    \        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_upper \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"aBCdEf\") = \"1\" ]]\n \
    \   [[ $(candidate \"abcdefg\") = \"0\" ]]\n    [[ $(candidate \"dBBE\") = \"\
    0\" ]]\n    [[ $(candidate \"B\") = \"0\" ]]\n    [[ $(candidate \"U\") = \"1\"\
    \ ]]\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"EEEE\") = \"2\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020345
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s, count the number of uppercase vowels\
    \ in even indices.\n# For example:\n# count_upper('aBCdEf') returns 1\n# count_upper('abcdefg')\
    \ returns 0\n# count_upper('dBBE') returns 0\n#\n# $1 is a string\ncount_upper()\
    \ {\n    if [ -z \"$1\" ]; then\n        return 0\n    fi\n    target=\"$1\"\n\
    \    counter=0\n    for ((i=0; i<${#target}; i++)); do\n        if [ $(($i % 2))\
    \ -eq 0 ]; then\n            letter=${target:$i:1}\n            if [[ $letter\
    \ =~ [AEIOU] ]]; then\n                counter=$(($counter + 1))\n           \
    \ fi\n        fi\n    done\n    echo $counter\n}\n\ncandidate() {\n    count_upper\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"aBCdEf\") = \"1\" ]]\n\
    \    [[ $(candidate \"abcdefg\") = \"0\" ]]\n    [[ $(candidate \"dBBE\") = \"\
    0\" ]]\n    [[ $(candidate \"B\") = \"0\" ]]\n    [[ $(candidate \"U\") = \"1\"\
    \ ]]\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"EEEE\") = \"2\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020345
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s, count the number of uppercase vowels\
    \ in even indices.\n# For example:\n# count_upper('aBCdEf') returns 1\n# count_upper('abcdefg')\
    \ returns 0\n# count_upper('dBBE') returns 0\n#\n# $1 is a string\ncount_upper()\
    \ {\n  # Using bash regexes\n  echo \"$1\" | grep -Eo '[AEIOU]{1}' | grep -Ec\
    \ '^[A-Z]$'\n}\n\ncandidate() {\n    count_upper \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"aBCdEf\") = \"1\" ]]\n    [[ $(candidate \"abcdefg\"\
    ) = \"0\" ]]\n    [[ $(candidate \"dBBE\") = \"0\" ]]\n    [[ $(candidate \"B\"\
    ) = \"0\" ]]\n    [[ $(candidate \"U\") = \"1\" ]]\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n    [[ $(candidate \"EEEE\") = \"2\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020345
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s, count the number of uppercase vowels\
    \ in even indices.\n# For example:\n# count_upper('aBCdEf') returns 1\n# count_upper('abcdefg')\
    \ returns 0\n# count_upper('dBBE') returns 0\n#\n# $1 is a string\ncount_upper()\
    \ {\n    echo \"$1\" | grep -o '[AEIOU]' | grep -E '^[A-Z]' | wc -l\n}\n\ncandidate()\
    \ {\n    count_upper \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    aBCdEf\") = \"1\" ]]\n    [[ $(candidate \"abcdefg\") = \"0\" ]]\n    [[ $(candidate\
    \ \"dBBE\") = \"0\" ]]\n    [[ $(candidate \"B\") = \"0\" ]]\n    [[ $(candidate\
    \ \"U\") = \"1\" ]]\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    EEEE\") = \"2\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020345
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s, count the number of uppercase vowels\
    \ in even indices.\n# For example:\n# count_upper('aBCdEf') returns 1\n# count_upper('abcdefg')\
    \ returns 0\n# count_upper('dBBE') returns 0\n#\n# $1 is a string\ncount_upper()\
    \ {\n  echo $1 | grep -o \"[AEIOU]\" | grep -cv \"^$\"\n}\n\ncandidate() {\n \
    \   count_upper \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"aBCdEf\"\
    ) = \"1\" ]]\n    [[ $(candidate \"abcdefg\") = \"0\" ]]\n    [[ $(candidate \"\
    dBBE\") = \"0\" ]]\n    [[ $(candidate \"B\") = \"0\" ]]\n    [[ $(candidate \"\
    U\") = \"1\" ]]\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"EEEE\"\
    ) = \"2\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020345
- exit_code: 0
  program: "#!/bin/bash\n# Given a string s, count the number of uppercase vowels\
    \ in even indices.\n# For example:\n# count_upper('aBCdEf') returns 1\n# count_upper('abcdefg')\
    \ returns 0\n# count_upper('dBBE') returns 0\n#\n# $1 is a string\ncount_upper()\
    \ {\n  local str=$1\n  local -i count=0\n\n  for (( i=0; i<${#str}; i+=2 )); do\n\
    \    if [[ ${str:$i:1} =~ [AEIOU] ]]; then\n      count+=1\n    fi\n  done\n\n\
    \  echo $count\n}\n\ncandidate() {\n    count_upper \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"aBCdEf\") = \"1\" ]]\n    [[ $(candidate \"abcdefg\"\
    ) = \"0\" ]]\n    [[ $(candidate \"dBBE\") = \"0\" ]]\n    [[ $(candidate \"B\"\
    ) = \"0\" ]]\n    [[ $(candidate \"U\") = \"1\" ]]\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n    [[ $(candidate \"EEEE\") = \"2\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020345
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s, count the number of uppercase vowels\
    \ in even indices.\n# For example:\n# count_upper('aBCdEf') returns 1\n# count_upper('abcdefg')\
    \ returns 0\n# count_upper('dBBE') returns 0\n#\n# $1 is a string\ncount_upper()\
    \ {\n    # your code here\n    echo \"Your string: $1\"\n    echo \"Uppercase\
    \ vowels in even indices:\"\n    if [[ $1 =~ [A] ]]; then\n        echo \"A\"\n\
    \    fi\n    if [[ $1 =~ [E] ]]; then\n        echo \"E\"\n    fi\n    if [[ $1\
    \ =~ [I] ]]; then\n        echo \"I\"\n    fi\n    if [[ $1 =~ [O] ]]; then\n\
    \        echo \"O\"\n    fi\n    if [[ $1 =~ [U] ]]; then\n        echo \"U\"\n\
    \    fi\n    echo \"Count is: \"\n    echo \"$1\" | grep -E -o '[A,E,I,O,U]' |\
    \ wc -l\n}\n\ncandidate() {\n    count_upper \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"aBCdEf\") = \"1\" ]]\n    [[ $(candidate \"abcdefg\") =\
    \ \"0\" ]]\n    [[ $(candidate \"dBBE\") = \"0\" ]]\n    [[ $(candidate \"B\"\
    ) = \"0\" ]]\n    [[ $(candidate \"U\") = \"1\" ]]\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n    [[ $(candidate \"EEEE\") = \"2\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020345
- exit_code: 0
  program: "#!/bin/bash\n# Given a string s, count the number of uppercase vowels\
    \ in even indices.\n# For example:\n# count_upper('aBCdEf') returns 1\n# count_upper('abcdefg')\
    \ returns 0\n# count_upper('dBBE') returns 0\n#\n# $1 is a string\ncount_upper()\
    \ {\n    local s=$1\n    local num_upper=0\n    for (( i=0; i<${#s}; i++ )); do\n\
    \        if [ $((i%2)) -eq 0 ]; then\n            # even\n            if [[ ${s:$i:1}\
    \ =~ [AEIOU] ]]; then\n                # uppercase\n                num_upper=$((num_upper+1))\n\
    \            fi\n        fi\n    done\n    echo $num_upper\n}\n\ncandidate() {\n\
    \    count_upper \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"aBCdEf\"\
    ) = \"1\" ]]\n    [[ $(candidate \"abcdefg\") = \"0\" ]]\n    [[ $(candidate \"\
    dBBE\") = \"0\" ]]\n    [[ $(candidate \"B\") = \"0\" ]]\n    [[ $(candidate \"\
    U\") = \"1\" ]]\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"EEEE\"\
    ) = \"2\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020345
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s, count the number of uppercase vowels\
    \ in even indices.\n# For example:\n# count_upper('aBCdEf') returns 1\n# count_upper('abcdefg')\
    \ returns 0\n# count_upper('dBBE') returns 0\n#\n# $1 is a string\ncount_upper()\
    \ {\n  echo $1 | tr -cd \"[AEIOU]{2}\" | wc -c\n}\n\ncandidate() {\n    count_upper\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"aBCdEf\") = \"1\" ]]\n\
    \    [[ $(candidate \"abcdefg\") = \"0\" ]]\n    [[ $(candidate \"dBBE\") = \"\
    0\" ]]\n    [[ $(candidate \"B\") = \"0\" ]]\n    [[ $(candidate \"U\") = \"1\"\
    \ ]]\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"EEEE\") = \"2\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020345
- exit_code: 0
  program: "#!/bin/bash\n# Given a string s, count the number of uppercase vowels\
    \ in even indices.\n# For example:\n# count_upper('aBCdEf') returns 1\n# count_upper('abcdefg')\
    \ returns 0\n# count_upper('dBBE') returns 0\n#\n# $1 is a string\ncount_upper()\
    \ {\n  s=\"$1\"\n  count=0\n  for ((i=0; i<${#s}; i+=2)); do\n    if [[ \"${s:$i:1}\"\
    \ =~ [AEIOU] ]]; then\n      (( count++ ))\n    fi\n  done\n  echo $count\n}\n\
    \ncandidate() {\n    count_upper \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"aBCdEf\") = \"1\" ]]\n    [[ $(candidate \"abcdefg\") = \"0\" ]]\n    [[ $(candidate\
    \ \"dBBE\") = \"0\" ]]\n    [[ $(candidate \"B\") = \"0\" ]]\n    [[ $(candidate\
    \ \"U\") = \"1\" ]]\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    EEEE\") = \"2\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020345
- exit_code: 2
  program: "#!/bin/bash\n# Given a string s, count the number of uppercase vowels\
    \ in even indices.\n# For example:\n# count_upper('aBCdEf') returns 1\n# count_upper('abcdefg')\
    \ returns 0\n# count_upper('dBBE') returns 0\n#\n# $1 is a string\ncount_upper()\
    \ {\n    # Use bash's string manipulation capabilities to your advantage.\n  \
    \  # See: http://tldp.org/LDP/abs/html/string-manipulation.html\n    #\n\n   \
    \ # Write code between the two comment lines.\n    # Insert a newline (\\n) at\
    \ the end of the code.\n    # ---------------------------------------------------------\n\
    \    # ---------------------------------------------------------\n}\n\ncandidate()\
    \ {\n    count_upper \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    aBCdEf\") = \"1\" ]]\n    [[ $(candidate \"abcdefg\") = \"0\" ]]\n    [[ $(candidate\
    \ \"dBBE\") = \"0\" ]]\n    [[ $(candidate \"B\") = \"0\" ]]\n    [[ $(candidate\
    \ \"U\") = \"1\" ]]\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    EEEE\") = \"2\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4nkvjv3i.sh: line 18: syntax error near unexpected token `}''

    /tmp/tmp4nkvjv3i.sh: line 18: `}''

    '
  stdout: ''
  timestamp: 1660020345
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s, count the number of uppercase vowels\
    \ in even indices.\n# For example:\n# count_upper('aBCdEf') returns 1\n# count_upper('abcdefg')\
    \ returns 0\n# count_upper('dBBE') returns 0\n#\n# $1 is a string\ncount_upper()\
    \ {\n  if [ -z \"$1\" ]; then\n    echo \"First argument is the string to be tested\"\
    \n    exit 1\n  fi\n  echo $1 | grep -E -o \"[aeiouAEIOU]\" | grep -E -o \"^[AEIOU]\"\
    \ | wc -l\n}\n\ncandidate() {\n    count_upper \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"aBCdEf\") = \"1\" ]]\n    [[ $(candidate \"abcdefg\"\
    ) = \"0\" ]]\n    [[ $(candidate \"dBBE\") = \"0\" ]]\n    [[ $(candidate \"B\"\
    ) = \"0\" ]]\n    [[ $(candidate \"U\") = \"1\" ]]\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n    [[ $(candidate \"EEEE\") = \"2\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020345
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s, count the number of uppercase vowels\
    \ in even indices.\n# For example:\n# count_upper('aBCdEf') returns 1\n# count_upper('abcdefg')\
    \ returns 0\n# count_upper('dBBE') returns 0\n#\n# $1 is a string\ncount_upper()\
    \ {\n    local count=0\n    local str=$1\n    local length=${#str}\n    local\
    \ vowels=(a e i o u)\n    local vowels_length=${#vowels[@]}\n    local i=0\n \
    \   local j=0\n    local word=0\n    while [ $i -lt $length ]; do\n        # Get\
    \ the current character\n        local current=${str:$i:1}\n        # Check to\
    \ see if it's a vowel\n        for (( j=0; j<$vowels_length; j++ )); do\n    \
    \        if [ \"$current\" == \"${vowels[$j]}\" ]; then\n                break\n\
    \            fi\n        done\n        # Check to see if it's in an even position\n\
    \        if [ $(($i % 2)) -eq 0 ]; then\n            if [ $j -lt $vowels_length\
    \ ]; then\n                # It's a vowel and it's in an even position\n     \
    \           (( count++ ))\n            fi\n        fi\n        (( i++ ))\n   \
    \ done\n    echo $count\n}\n\ncandidate() {\n    count_upper \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"aBCdEf\") = \"1\" ]]\n    [[ $(candidate\
    \ \"abcdefg\") = \"0\" ]]\n    [[ $(candidate \"dBBE\") = \"0\" ]]\n    [[ $(candidate\
    \ \"B\") = \"0\" ]]\n    [[ $(candidate \"U\") = \"1\" ]]\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"EEEE\") = \"2\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020345
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s, count the number of uppercase vowels\
    \ in even indices.\n# For example:\n# count_upper('aBCdEf') returns 1\n# count_upper('abcdefg')\
    \ returns 0\n# count_upper('dBBE') returns 0\n#\n# $1 is a string\ncount_upper()\
    \ {\n  echo \"$1\" | awk '{for(i=1;i<=length;i++){if($i~/[AEIOU]/&&i%2==0){count++;}}}END{print\
    \ count}'\n}\n\ncandidate() {\n    count_upper \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"aBCdEf\") = \"1\" ]]\n    [[ $(candidate \"abcdefg\"\
    ) = \"0\" ]]\n    [[ $(candidate \"dBBE\") = \"0\" ]]\n    [[ $(candidate \"B\"\
    ) = \"0\" ]]\n    [[ $(candidate \"U\") = \"1\" ]]\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n    [[ $(candidate \"EEEE\") = \"2\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020345
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s, count the number of uppercase vowels\
    \ in even indices.\n# For example:\n# count_upper('aBCdEf') returns 1\n# count_upper('abcdefg')\
    \ returns 0\n# count_upper('dBBE') returns 0\n#\n# $1 is a string\ncount_upper()\
    \ {\n  local UPPERCASE_VOWELS='[AEIOU]'\n  local EVEN_INDICES='[02468]'\n  echo\
    \ $1 | grep -oE \"${EVEN_INDICES}${UPPERCASE_VOWELS}\" | wc -l\n}\n\ncandidate()\
    \ {\n    count_upper \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    aBCdEf\") = \"1\" ]]\n    [[ $(candidate \"abcdefg\") = \"0\" ]]\n    [[ $(candidate\
    \ \"dBBE\") = \"0\" ]]\n    [[ $(candidate \"B\") = \"0\" ]]\n    [[ $(candidate\
    \ \"U\") = \"1\" ]]\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    EEEE\") = \"2\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020345
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s, count the number of uppercase vowels\
    \ in even indices.\n# For example:\n# count_upper('aBCdEf') returns 1\n# count_upper('abcdefg')\
    \ returns 0\n# count_upper('dBBE') returns 0\n#\n# $1 is a string\ncount_upper()\
    \ {\n  # Grab the even indices of the string.\n  uppers=$(echo $1 | grep -o -E\
    \ '(.).' | grep -E '[AEIOU]' | wc -l)\n  echo $uppers\n}\n\ncandidate() {\n  \
    \  count_upper \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"aBCdEf\"\
    ) = \"1\" ]]\n    [[ $(candidate \"abcdefg\") = \"0\" ]]\n    [[ $(candidate \"\
    dBBE\") = \"0\" ]]\n    [[ $(candidate \"B\") = \"0\" ]]\n    [[ $(candidate \"\
    U\") = \"1\" ]]\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"EEEE\"\
    ) = \"2\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020345
- exit_code: 1
  program: "#!/bin/bash\n# Given a string s, count the number of uppercase vowels\
    \ in even indices.\n# For example:\n# count_upper('aBCdEf') returns 1\n# count_upper('abcdefg')\
    \ returns 0\n# count_upper('dBBE') returns 0\n#\n# $1 is a string\ncount_upper()\
    \ {\n    echo $1 | grep -E '^.{2}[AEIOU]|^[^AEIOU].*[AEIOU]|.*[AEIOU][^AEIOU].*[AEIOU]|.*[AEIOU].{2}$'\
    \ | wc -l\n}\n\ncandidate() {\n    count_upper \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"aBCdEf\") = \"1\" ]]\n    [[ $(candidate \"abcdefg\"\
    ) = \"0\" ]]\n    [[ $(candidate \"dBBE\") = \"0\" ]]\n    [[ $(candidate \"B\"\
    ) = \"0\" ]]\n    [[ $(candidate \"U\") = \"1\" ]]\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n    [[ $(candidate \"EEEE\") = \"2\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020345

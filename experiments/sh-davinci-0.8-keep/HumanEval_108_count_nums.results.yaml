language: sh
name: HumanEval_108_count_nums
results:
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  (($# == 0)) && return 0\n  local count=0\n  for n in\
    \ $@; do\n    local s=${n/[^0-9]/} # remove non-digits\n    local s=${s//0/} \
    \    # remove zeros\n    [[ -n $s ]] && ((count++))\n  done\n  echo $count\n}\n\
    \ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020464
- exit_code: 2
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    # Make sure only positive numbers are passed to the\
    \ function\n    for n in $@; do\n        if [ $n -lt 0 ]; then\n            sign=${n:0:1}\n\
    \            [ $sign = \"-\" ] && n=${n:1}\n        fi\n        # Add each number\
    \ to the sum, then check if the sum is greater than 0\n        total=0\n     \
    \   for c in $(seq 1 ${#n}); do\n            let digit=10**(${#n}-$c)\n      \
    \      let remainder=$n%$digit\n            let n=$n-$remainder\n            let\
    \ digit=$remainder/($digit/10)\n            let total=$total+$digit\n        done\n\
    \        echo $total\n    done | grep -v 0 | wc -l\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpr4jj07g4.sh: line 21: syntax error near unexpected token `(''

    /tmp/tmpr4jj07g4.sh: line 21: `            let digit=10**(${#n}-$c)''

    '
  stdout: ''
  timestamp: 1660020464
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    str=\"$1\"\n    arr=($str)\n    count=0\n    for i\
    \ in \"${arr[@]}\"\n    do\n      sum=0\n      if [[ $i -lt 0 ]]; then\n     \
    \   i=$((0 - i))\n      fi\n      while [[ $i -gt 0 ]]; do\n        num=$((i %\
    \ 10))\n        sum=$((sum + num))\n        i=$((i / 10))\n      done\n      if\
    \ [[ $sum -gt 0 ]]; then\n        count=$((count + 1))\n      fi\n    done\n \
    \   echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020464
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    [ $# -eq 0 ] && return 0\n    [ $# -eq 1 ] && [ \"\
    $1\" -eq 0 ] && return 0\n    local num sum=0\n    for num in $@; do\n       \
    \ sum=$(( $sum + $num ))\n    done\n    [ $sum -gt 0 ] && return 1 || return 0\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp9tobvy1v.sh: line 13: [: : integer expression expected

    '
  stdout: ''
  timestamp: 1660020464
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local arr=(\"$@\")\n  local res=0\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    local num=${arr[$i]}\n    local sum=0\n    while ((num!=0));\
    \ do\n      ((sum+=num%10))\n      ((num/=10))\n    done\n    if ((sum>0)); then\n\
    \      ((res++))\n    fi\n  done\n  echo $res\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpetgxem3o.sh: line 17: ((: -1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmpetgxem3o.sh: line 17: ((: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1660020464
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    # Write your code here\n    local count=0\n\n    for\
    \ item in $@; do\n        local digits=0\n        if [[ $item -lt 0 ]]; then\n\
    \            item=$((-$item))\n        fi\n        while [[ $item -gt 0 ]]; do\n\
    \            digits=$((digits + (item % 10)))\n            item=$((item / 10))\n\
    \        done\n        if [[ $digits -gt 0 ]]; then\n            count=$((count\
    \ + 1))\n        fi\n    done\n\n    echo $count\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020464
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  declare -a arr=($1)\n  for i in $(seq 0 $((${#arr[@]}\
    \ - 1))); do\n    declare -i sum=0\n    for c in $(echo ${arr[$i]} | grep -o .);\
    \ do\n      sum=$(($sum + $c))\n    done\n    if [ $sum -le 0 ]; then\n      unset\
    \ arr[$i]\n    fi\n  done\n  echo ${#arr[@]}\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpwqqsiqsm.sh: line 16: 0 + -: syntax error: operand expected (error
    token is "-")

    '
  stdout: ''
  timestamp: 1660020464
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    nums=(\"$@\")\n    num_of_nums=0\n    for i in \"\
    ${nums[@]}\"; do\n        if [ $i -lt 0 ]; then\n            i=$((-$i))\n    \
    \    fi\n        sum=0\n        while [ $i -gt 0 ]; do\n            sum=$((sum\
    \ + i % 10))\n            i=$((i / 10))\n        done\n        if [ $sum -gt 0\
    \ ]; then\n            num_of_nums=$((num_of_nums + 1))\n        fi\n    done\n\
    \    echo $num_of_nums\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp976nqe3j.sh: line 15: [: -lt: unary operator expected

    /tmp/tmp976nqe3j.sh: line 19: [: -gt: unary operator expected

    /tmp/tmp976nqe3j.sh: line 15: [: -1: unary operator expected

    /tmp/tmp976nqe3j.sh: line 19: [: -1: unary operator expected

    /tmp/tmp976nqe3j.sh: line 15: [: too many arguments

    /tmp/tmp976nqe3j.sh: line 19: [: too many arguments

    '
  stdout: ''
  timestamp: 1660020464
- exit_code: 0
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local result=0\n    for num in $@; do\n        local\
    \ d=0\n        if [[ $num -lt 0 ]]; then\n            num=${num:1}\n         \
    \   d=$((- ${num:0:1}))\n        fi\n        while [[ -n $num ]]; do\n       \
    \     d=$((d + ${num:0:1}))\n            num=${num:1}\n        done\n        if\
    \ [[ $d -gt 0 ]]; then\n            result=$((result + 1))\n        fi\n    done\n\
    \    echo $result\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020464
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    # insert your code here\n    if [[ $# -eq 0 ]]; then\n\
    \        echo 0\n        return\n    fi\n   \n    count=0\n    for arg in $@;\
    \ do\n        sum=0\n        if [[ $arg -lt 0 ]]; then\n            arg=$((-$arg))\n\
    \        fi\n        while [[ $arg -gt 0 ]]; do\n            sum=$((sum + arg\
    \ % 10))\n            arg=$((arg / 10))\n        done\n        if [[ $sum -gt\
    \ 0 ]]; then\n            count=$((count + 1))\n        fi\n    done\n    echo\
    \ $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020464
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local numbers=($1)\n    local count=0\n    for i in\
    \ ${numbers[@]}; do\n        if [[ ${i:0:1} -gt 0 ]]; then\n            let count=$count+1\n\
    \        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    count_nums \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp196zgqui.sh: line 15: [[: -: syntax error: operand expected (error
    token is "-")

    /tmp/tmp196zgqui.sh: line 15: [[: -: syntax error: operand expected (error token
    is "-")

    /tmp/tmp196zgqui.sh: line 15: [[: -: syntax error: operand expected (error token
    is "-")

    /tmp/tmp196zgqui.sh: line 15: [[: -: syntax error: operand expected (error token
    is "-")

    /tmp/tmp196zgqui.sh: line 15: [[: -: syntax error: operand expected (error token
    is "-")

    /tmp/tmp196zgqui.sh: line 15: [[: -: syntax error: operand expected (error token
    is "-")

    /tmp/tmp196zgqui.sh: line 15: [[: -: syntax error: operand expected (error token
    is "-")

    /tmp/tmp196zgqui.sh: line 15: [[: -: syntax error: operand expected (error token
    is "-")

    '
  stdout: ''
  timestamp: 1660020464
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local l=\"$1\"\n  local count=0\n  for i in $l; do\n\
    \    local sum=0\n    for j in $(echo $i | grep -o .); do\n      ((sum += $j))\n\
    \    done\n    if [ $sum -gt 0 ]; then\n      ((count++))\n    fi\n  done\n  echo\
    \ $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpqa9e4iw1.sh: line 17: ((: sum += -: syntax error: operand expected
    (error token is "-")

    /tmp/tmpqa9e4iw1.sh: line 17: ((: sum += -: syntax error: operand expected (error
    token is "-")

    '
  stdout: ''
  timestamp: 1660020464
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local array=\"$1\"\n\n    if [[ -z \"$array\" ]];\
    \ then\n        echo 0\n        return\n    fi\n\n    local -a array=($array)\n\
    \    local counter=0\n\n    for i in \"${array[@]}\"; do\n        # Check if number\
    \ is negative\n        if [[ $i < 0 ]]; then\n            i=${i#-}\n        fi\n\
    \n        # Extract digits\n        while [[ $i -gt 0 ]]; do\n            counter=$((counter\
    \ + i % 10))\n            i=$((i / 10))\n        done\n    done\n\n    echo $counter\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020464
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local array=($1)\n    local count=0\n    for i in\
    \ ${array[@]}; do\n        # For negative numbers, the first signed digit (i.e.\
    \ sign) is negative\n        local sign=${i:0:1}\n        local num=${i:1}\n \
    \       #echo \"sign: $sign, num: $num\"\n        local sum=0\n        while [\
    \ $num -gt 0 ]; do\n            sum=$((num % 10 + sum))\n            num=$((num\
    \ / 10))\n        done\n        if [ $sum -gt 0 ]; then\n            #echo \"\
    sum = $sum\"\n            count=$((count + 1))\n        fi\n    done\n    echo\
    \ $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpaz3u3ahg.sh: line 20: [: -gt: unary operator expected

    '
  stdout: ''
  timestamp: 1660020464
- exit_code: -1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  while read -r num\n  do\n    echo \"$num\" | sed -e\
    \ 's/^-//' | sed -e 's/[0-9]//g' | sed -e 's/-//' | wc -c\n  done\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=29 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=16 encoding='utf-8'>
  timestamp: 1660020469
- exit_code: 0
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n  local array=()\n  local i=0\n  local sum=0\n  local\
    \ count=0\n  # Assign each element to an array\n  for e in $1; do\n    array[$i]=$e\n\
    \    ((i++))\n  done\n  # Reiterate the array, calculating the sum of each element\
    \ and\n  # incrementing the count if the sum is greater than 0\n  for ((i=0; i<${#array[@]};\
    \ i++)); do\n    sum=0\n    for ((j=0; j<${#array[$i]}; j++)); do\n      if [[\
    \ \"${array[$i]:$j:1}\" = \"-\" ]]; then\n        sum=$((sum + ${array[$i]:$j:2}))\n\
    \        ((j++))\n      else\n        sum=$((sum + ${array[$i]:$j:1}))\n     \
    \ fi\n    done\n    if [[ $sum -gt 0 ]]; then\n      ((count++))\n    fi\n  done\n\
    \  echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020464
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n\t(( $# == 0 )) && return 0\n\tlocal L=\"$*\"\n\techo\
    \ \"$L\" | tr -d ' ' | sed -e 's|^-||g' | fold -w1 | paste -sd+ | bc | wc -l\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '(standard_in) 1: syntax error

    (standard_in) 1: syntax error

    '
  stdout: ''
  timestamp: 1660020464
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n   sum=0\n   for i in $1\n   do\n      if [[ ${i:0:1}\
    \ == \"-\" ]]\n      then\n         (( sum += $i ))\n      else\n         (( sum\
    \ += ${i:0:1} + ${i:1:1} + ${i:2:1} ))\n      fi\n   done\n   echo $sum\n}\n\n\
    candidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpozd7g9mx.sh: line 19: ((: sum += 0 +  +  : syntax error: operand
    expected (error token is "+  ")

    '
  stdout: ''
  timestamp: 1660020464
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    local nums=($1)\n    local count=0\n    for num in\
    \ ${nums[@]}; do\n        local digits=($(echo ${num#-} | sed 's/./& /g'))\n \
    \       local sum=0\n        for d in ${digits[@]}; do\n            sum=$((sum\
    \ + d))\n        done\n        if [ ${num} -lt 0 ]; then\n            let sum=-sum\n\
    \        fi\n        if [ $sum -gt 0 ]; then\n            let count++\n      \
    \  fi\n    done\n    echo ${count}\n}\n\ncandidate() {\n    count_nums \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020464
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> count_nums([]) == 0\n# >>> count_nums([-1,\
    \ 11, -11]) == 1\n# >>> count_nums([1, 1, 2]) == 3\n#\n# $1 is a space-separated\
    \ list\ncount_nums() {\n    # Fill this in\n    echo \"0\"\n}\n\ncandidate() {\n\
    \    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020464

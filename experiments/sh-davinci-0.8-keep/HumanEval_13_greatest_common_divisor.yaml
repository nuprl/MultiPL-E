name: HumanEval_13_greatest_common_divisor
language: sh
prompt: "#!/bin/bash\n# Return a greatest common divisor of two integers a and b\n\
  # >>> greatest_common_divisor(3, 5)\n# 1\n# >>> greatest_common_divisor(25, 15)\n\
  # 5\n#\n# $1 is an integer\n# $2 is an integer\ngreatest_common_divisor() {\n"
tests: "}\n\ncandidate() {\n    greatest_common_divisor \"$@\"\n}\n\nset -e\nrun_test()\
  \ {\n    [[ $(candidate \"3\" \"7\") = \"1\" ]]\n    [[ $(candidate \"10\" \"15\"\
  ) = \"5\" ]]\n    [[ $(candidate \"49\" \"14\") = \"7\" ]]\n    [[ $(candidate \"\
  144\" \"60\") = \"12\" ]]\n}\n\nrun_test"
completions: ["    local a=$1\n    local b=$2\n    while [ $b -ne 0 ]; do\n      \
    \  local tmp=$b\n        b=$(( a % b ))\n        a=$tmp\n    done\n    echo $a",
  "  if [[ $1 == $2 ]]; then\n    echo $1\n  elif [[ $1 > $2 ]]; then\n    greatest_common_divisor\
    \ $(( $1 - $2 )) $2\n  else\n    greatest_common_divisor $1 $(( $2 - $1 ))\n \
    \ fi", "    if [ $# -eq 2 ]; then\n        local a=$1\n        local b=$2\n  \
    \      echo $a $b | awk '{print gcd($1, $2)}'\n    else\n        echo \"Usage:\
    \ greatest_common_divisor <a> <b>\"\n    fi", "  local a=$1\n  local b=$2\n  local\
    \ c=0\n  until [ $b -eq 0 ]; do\n    c=$((a % b))\n    a=$b\n    b=$c\n  done\n\
    \  echo $a", "  # Write your code here\n  gcd=$1\n  until [ $((gcd % $2)) == 0\
    \ ]; do\n    let gcd--\n  done\n  echo $gcd", "    # Write your code here\n  \
    \  x=$1\n    y=$2\n    while [ $y -ne 0 ]\n    do\n        let r=x%y\n       \
    \ x=$y\n        y=$r\n    done\n    echo $x", "    local a=$1\n    local b=$2\n\
    \    local gcd\n    while [ $b -ne 0 ]; do\n        gcd=$b\n        b=$((a % b))\n\
    \        a=$gcd\n    done\n    echo $a", "\tif [ $1 -eq $2 ]; then\n\t\tprintf\
    \ \"%d\\n\" $1\n\telif [ $1 -gt $2 ]; then\n\t\tgreatest_common_divisor $(( $1\
    \ - $2 )) $2\n\telse\n\t\tgreatest_common_divisor $1 $(( $2 - $1 ))\n\tfi", " \
    \   local -i a=$1 b=$2\n    local -i r\n    while (( b != 0 )); do\n        ((\
    \ r = a % b ))\n        (( a = b ))\n        (( b = r ))\n    done\n    (( a ))",
  "    # Write your code here\n    # To print results to the standard output you can\
    \ use echo\n    # Example: echo \"Hello world!\"\n    a=$1\n    b=$2\n    while\
    \ [[ $b -ne 0 ]]; do\n        r=$((a % b))\n        a=$b\n        b=$r\n    done\n\
    \    echo $a", "    a=$1\n    b=$2\n    if [[ $a -eq $b ]]; then\n        echo\
    \ $a\n    elif [[ $a -gt $b ]]; then\n        ((a %= b))\n        greatest_common_divisor\
    \ $a $b\n    else\n        ((b %= a))\n        greatest_common_divisor $a $b\n\
    \    fi", "    local dividend=$1\n    local divisor=$2\n    local remainder=1\n\
    \    if [[ \"$dividend\" -lt \"$divisor\" ]]; then\n        dividend=$2\n    \
    \    divisor=$1\n    fi\n    while [[ \"$remainder\" -ne 0 ]]; do\n        remainder=$((dividend\
    \ % divisor))\n        dividend=$divisor\n        divisor=$remainder\n    done\n\
    \    echo $dividend", "    gcd=1\n    d=2\n    until [ $1 -lt $d ]; do\n     \
    \   if [ $(($1 % $d)) -eq 0 ] && [ $(($2 % $d)) -eq 0 ]; then\n            gcd=$d\n\
    \        fi\n        d=$(($d + 1))\n    done\n    echo $gcd", "  if [ $# -ne 2\
    \ ]; then\n    echo \"Usage: $0 a b\" >&2\n    return 1\n  fi\n  local a=$1\n\
    \  local b=$2\n  while [ $b -ne 0 ]; do\n    local tmp=$b\n    b=$((a % b))\n\
    \    a=$tmp\n  done\n  echo $a", "    [ \"$#\" -ne 2 ] && return 1\n    if [ \"\
    $1\" -eq \"$2\" ]; then\n        echo \"$1\"\n    elif [ \"$1\" -gt \"$2\" ];\
    \ then\n        greatest_common_divisor \"$2\" \"$(( $1 - $2 ))\"\n    else\n\
    \        greatest_common_divisor \"$1\" \"$(( $2 - $1 ))\"\n    fi", "\tlocal\
    \ a=$1\n\tlocal b=$2\n\tlocal remainder=1\n\twhile [[ $remainder -ne 0 ]]; do\n\
    \t\tlocal remainder=$((a % b))\n\t\tlocal a=$b\n\t\tlocal b=$remainder\n\tdone\n\
    \techo $a", "    if (( $1 > $2 )); then\n        tmp=$1\n        a=$2\n      \
    \  b=$tmp\n    else\n        a=$1\n        b=$2\n    fi\n    while (( a != 0 ));\
    \ do\n        tmp=$a\n        a=$(( b % a ))\n        b=$tmp\n    done\n    echo\
    \ $b", "    # return 0 if any input is missing\n    [[ -z \"$1\" || -z \"$2\"\
    \ ]] && return 0\n\n    # remove unnecessary minus signs\n    a=$(sed -e 's/-//g'\
    \ <<< \"$1\")\n    b=$(sed -e 's/-//g' <<< \"$2\")\n\n    # replace with the smaller\
    \ value\n    [[ \"$a\" -gt \"$b\" ]] && a=\"$b\"\n\n    for ((i=a; i>=1; i--));\
    \ do\n        # break the loop when the integer divides both a and b\n       \
    \ [[ $(( a % i )) -eq 0 && $(( b % i )) -eq 0 ]] && break\n    done\n\n    echo\
    \ \"$i\"", "    # your code here\n    local a=$1\n    local b=$2\n    local c=0\n\
    \    if [ $a -lt $b ]; then\n        c=$a\n        a=$b\n        b=$c\n    fi\n\
    \    while [ $b -ne 0 ]; do\n        c=$(($a % $b))\n        a=$b\n        b=$c\n\
    \    done\n    echo $a", "  if [ $1 -eq $2 ]; then\n    printf \"%s\\n\" \"$1\"\
    \n  elif [ $1 -gt $2 ]; then\n    greatest_common_divisor $[$1-$2] $2\n  else\n\
    \    greatest_common_divisor $1 $[$2-$1]\n  fi"]
stop_tokens:
- "\n}"

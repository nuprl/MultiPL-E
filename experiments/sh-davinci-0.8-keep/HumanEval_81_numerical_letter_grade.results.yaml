language: sh
name: HumanEval_81_numerical_letter_grade
results:
- exit_code: 1
  program: "#!/bin/bash\n# It is the last week of the semester and the teacher has\
    \ to give the grades\n# to students. The teacher has been making her own algorithm\
    \ for grading.\n# The only problem is, she has lost the code she used for grading.\n\
    # She has given you a list of GPAs for some students and you have to write \n\
    # a function that can output a list of letter grades using the following table:\n\
    # GPA       |    Letter grade\n# 4.0                A+\n# > 3.7              \
    \  A \n# > 3.3                A- \n# > 3.0                B+\n# > 2.7        \
    \        B \n# > 2.3                B-\n# > 2.0                C+\n# > 1.7   \
    \             C\n# > 1.3                C-\n# > 1.0                D+ \n# > 0.7\
    \                D \n# > 0.0                D-\n# 0.0                E\n# Example:\n\
    # grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n#\n\
    # $1 is a space-separated list\nnumerical_letter_grade() {\n  # Make sure you\
    \ type 'return' in the last line\n  return \n}\n\ncandidate() {\n    numerical_letter_grade\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4.0 3 1.7 2 3.5\") =\
    \ \"A+ B C- C A-\" ]]\n    [[ $(candidate \"1.2\") = \"D+\" ]]\n    [[ $(candidate\
    \ \"0.5\") = \"D-\" ]]\n    [[ $(candidate \"0.0\") = \"E\" ]]\n    [[ $(candidate\
    \ \"1.0 0.3 1.5 2.8 3.3\") = \"D D- C- B B+\" ]]\n    [[ $(candidate \"0.0 0.7\"\
    ) = \"E D-\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020303
- exit_code: 1
  program: "#!/bin/bash\n# It is the last week of the semester and the teacher has\
    \ to give the grades\n# to students. The teacher has been making her own algorithm\
    \ for grading.\n# The only problem is, she has lost the code she used for grading.\n\
    # She has given you a list of GPAs for some students and you have to write \n\
    # a function that can output a list of letter grades using the following table:\n\
    # GPA       |    Letter grade\n# 4.0                A+\n# > 3.7              \
    \  A \n# > 3.3                A- \n# > 3.0                B+\n# > 2.7        \
    \        B \n# > 2.3                B-\n# > 2.0                C+\n# > 1.7   \
    \             C\n# > 1.3                C-\n# > 1.0                D+ \n# > 0.7\
    \                D \n# > 0.0                D-\n# 0.0                E\n# Example:\n\
    # grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n#\n\
    # $1 is a space-separated list\nnumerical_letter_grade() {\n    l=(\"A+\" \"A\"\
    \ \"A-\" \"B+\" \"B\" \"B-\" \"C+\" \"C\" \"C-\" \"D+\" \"D\" \"D-\" \"E\")\n\
    \    for i in $1\n    do\n        for j in {1..10}\n        do\n            if\
    \ (( $(echo \"$i > $j * 0.3\" | bc -l) ))\n            then\n                echo\
    \ -n ${l[$j]}\n            fi\n        done\n        echo -n \" \"\n    done\n\
    }\n\ncandidate() {\n    numerical_letter_grade \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4.0 3 1.7 2 3.5\") = \"A+ B C- C A-\" ]]\n    [[ $(candidate\
    \ \"1.2\") = \"D+\" ]]\n    [[ $(candidate \"0.5\") = \"D-\" ]]\n    [[ $(candidate\
    \ \"0.0\") = \"E\" ]]\n    [[ $(candidate \"1.0 0.3 1.5 2.8 3.3\") = \"D D- C-\
    \ B B+\" ]]\n    [[ $(candidate \"0.0 0.7\") = \"E D-\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020303
- exit_code: 2
  program: "#!/bin/bash\n# It is the last week of the semester and the teacher has\
    \ to give the grades\n# to students. The teacher has been making her own algorithm\
    \ for grading.\n# The only problem is, she has lost the code she used for grading.\n\
    # She has given you a list of GPAs for some students and you have to write \n\
    # a function that can output a list of letter grades using the following table:\n\
    # GPA       |    Letter grade\n# 4.0                A+\n# > 3.7              \
    \  A \n# > 3.3                A- \n# > 3.0                B+\n# > 2.7        \
    \        B \n# > 2.3                B-\n# > 2.0                C+\n# > 1.7   \
    \             C\n# > 1.3                C-\n# > 1.0                D+ \n# > 0.7\
    \                D \n# > 0.0                D-\n# 0.0                E\n# Example:\n\
    # grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n#\n\
    # $1 is a space-separated list\nnumerical_letter_grade() {\n  local -n grades=$1\n\
    \  for i in \"${grades[@]}\"; do\n    if [ $i == 4.0 ]; then\n      echo -n \"\
    A+ \"\n    elif [ $i == 4.0 ]; then\n      echo -n \"A+ \"\n    elif [ $i == 4.0\
    \ ]; then\n      echo -n \"A+ \"\n    elif [ $i == 4.0 ]; then\n      echo -n\
    \ \"A+ \"\n    elif [ $i == 4.0 ]; then\n      echo -n \"A+ \"\n    elif [ $i\
    \ == 4.0 ]; then\n      echo -n \"A+ \"\n    elif [ $i == 4.0 ]; then\n      echo\
    \ -n \"A+ \"\n    elif [ $i == 4.0 ]; then\n      echo -n \"A+ \"\n    elif [\
    \ $i == 4.0 ]; then\n      echo -n \"A+ \"\n    elif [ $i == 4.0 ]; then\n   \
    \   echo -n \"A+ \"\n    elif [ $i == 4.0 ]; then\n      echo -n \"A+ \"\n   \
    \ elif [ $i == 4.0 ]; then\n      echo -n \"A+ \"\n    elif [ $i == 4.0 ]; then\n\
    \      echo -n \"A+ \"\n    elif [ $i == 4.0 ]; then\n      echo -n \"A+ \"\n\
    \    elif [ $i == 4.0 ]; then\n      echo -n \"A+ \"\n    elif [ $i == 4.0 ];\
    \ then\n      echo -n \"A+ \"\n    elif [ $i == 4.0 ]; then\n      echo -n \"\
    A+ \"\n    elif [ $i == 4.0 ]; then\n      echo -n \"A+ \"\n    elif [ $i == 4.0\
    \ ]; then\n      echo -n \"A+ \"\n    elif [ $i == 4.0 ]; then\n      echo -n\
    \ \"A+ \"\n    elif [ $i == 4.0 ]; then\n      echo -n \"A+ \"\n    elif [ $i\
    \ == 4.0 ]; then\n      echo -n \"A+ \"\n    elif [ $i ==\n}\n\ncandidate() {\n\
    \    numerical_letter_grade \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4.0 3 1.7 2 3.5\") = \"A+ B C- C A-\" ]]\n    [[ $(candidate \"1.2\") = \"\
    D+\" ]]\n    [[ $(candidate \"0.5\") = \"D-\" ]]\n    [[ $(candidate \"0.0\")\
    \ = \"E\" ]]\n    [[ $(candidate \"1.0 0.3 1.5 2.8 3.3\") = \"D D- C- B B+\" ]]\n\
    \    [[ $(candidate \"0.0 0.7\") = \"E D-\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmphdrn7nfb.sh: line 73: syntax error near unexpected token `}''

    /tmp/tmphdrn7nfb.sh: line 73: `}''

    '
  stdout: ''
  timestamp: 1660020303
- exit_code: 1
  program: "#!/bin/bash\n# It is the last week of the semester and the teacher has\
    \ to give the grades\n# to students. The teacher has been making her own algorithm\
    \ for grading.\n# The only problem is, she has lost the code she used for grading.\n\
    # She has given you a list of GPAs for some students and you have to write \n\
    # a function that can output a list of letter grades using the following table:\n\
    # GPA       |    Letter grade\n# 4.0                A+\n# > 3.7              \
    \  A \n# > 3.3                A- \n# > 3.0                B+\n# > 2.7        \
    \        B \n# > 2.3                B-\n# > 2.0                C+\n# > 1.7   \
    \             C\n# > 1.3                C-\n# > 1.0                D+ \n# > 0.7\
    \                D \n# > 0.0                D-\n# 0.0                E\n# Example:\n\
    # grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n#\n\
    # $1 is a space-separated list\nnumerical_letter_grade() {\n\tGRADE=$1\n\tif [[\
    \ $GRADE == 4.0 ]]; then\n\t\techo \"A+\"\n\telif [[ $GRADE > 3.7 ]]; then\n\t\
    \techo \"A\"\n\telif [[ $GRADE > 3.3 ]]; then\n\t\techo \"A-\"\n\telif [[ $GRADE\
    \ > 3.0 ]]; then\n\t\techo \"B+\"\n\telif [[ $GRADE > 2.7 ]]; then\n\t\techo \"\
    B\"\n\telif [[ $GRADE > 2.3 ]]; then\n\t\techo \"B-\"\n\telif [[ $GRADE > 2.0\
    \ ]]; then\n\t\techo \"C+\"\n\telif [[ $GRADE > 1.7 ]]; then\n\t\techo \"C\"\n\
    \telif [[ $GRADE > 1.3 ]]; then\n\t\techo \"C-\"\n\telif [[ $GRADE > 1.0 ]]; then\n\
    \t\techo \"D+\"\n\telif [[ $GRADE > 0.7 ]]; then\n\t\techo \"D\"\n\telif [[ $GRADE\
    \ > 0.0 ]]; then\n\t\techo \"D-\"\n\telse\n\t\techo \"E\"\n\tfi\n}\n\ncandidate()\
    \ {\n    numerical_letter_grade \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4.0 3 1.7 2 3.5\") = \"A+ B C- C A-\" ]]\n    [[ $(candidate \"1.2\") = \"\
    D+\" ]]\n    [[ $(candidate \"0.5\") = \"D-\" ]]\n    [[ $(candidate \"0.0\")\
    \ = \"E\" ]]\n    [[ $(candidate \"1.0 0.3 1.5 2.8 3.3\") = \"D D- C- B B+\" ]]\n\
    \    [[ $(candidate \"0.0 0.7\") = \"E D-\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020303
- exit_code: 1
  program: "#!/bin/bash\n# It is the last week of the semester and the teacher has\
    \ to give the grades\n# to students. The teacher has been making her own algorithm\
    \ for grading.\n# The only problem is, she has lost the code she used for grading.\n\
    # She has given you a list of GPAs for some students and you have to write \n\
    # a function that can output a list of letter grades using the following table:\n\
    # GPA       |    Letter grade\n# 4.0                A+\n# > 3.7              \
    \  A \n# > 3.3                A- \n# > 3.0                B+\n# > 2.7        \
    \        B \n# > 2.3                B-\n# > 2.0                C+\n# > 1.7   \
    \             C\n# > 1.3                C-\n# > 1.0                D+ \n# > 0.7\
    \                D \n# > 0.0                D-\n# 0.0                E\n# Example:\n\
    # grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n#\n\
    # $1 is a space-separated list\nnumerical_letter_grade() {\n  local array grade_array=($1)\n\
    \  for num in ${grade_array[@]}; do\n    if (( $(echo \"$num == 4.0\" | bc -l)\
    \ )); then\n      printf \"%s\\n\" \"A+\"\n    elif (( $(echo \"$num > 3.7\" |\
    \ bc -l) )); then\n      printf \"%s\\n\" \"A\"\n    elif (( $(echo \"$num > 3.3\"\
    \ | bc -l) )); then\n      printf \"%s\\n\" \"A-\"\n    elif (( $(echo \"$num\
    \ > 3.0\" | bc -l) )); then\n      printf \"%s\\n\" \"B+\"\n    elif (( $(echo\
    \ \"$num > 2.7\" | bc -l) )); then\n      printf \"%s\\n\" \"B\"\n    elif ((\
    \ $(echo \"$num > 2.3\" | bc -l) )); then\n      printf \"%s\\n\" \"B-\"\n   \
    \ elif (( $(echo \"$num > 2.0\" | bc -l) )); then\n      printf \"%s\\n\" \"C+\"\
    \n    elif (( $(echo \"$num > 1.7\" | bc -l) )); then\n      printf \"%s\\n\"\
    \ \"C\"\n    elif (( $(echo \"$num > 1.3\" | bc -l) )); then\n      printf \"\
    %s\\n\" \"C-\"\n    elif (( $(echo \"$num > 1.0\" | bc -l) )); then\n      printf\
    \ \"%s\\n\" \"D+\"\n    elif (( $(echo \"$num > 0.7\" | bc -l) )); then\n    \
    \  printf \"%s\\n\" \"D\"\n    elif (( $(echo \"$num > 0.0\" | bc -l) )); then\n\
    \      printf \"%s\\n\" \"D-\"\n    else\n      printf \"%s\\n\" \"E\"\n    fi\n\
    \  done\n}\n\ncandidate() {\n    numerical_letter_grade \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4.0 3 1.7 2 3.5\") = \"A+ B C- C A-\" ]]\n\
    \    [[ $(candidate \"1.2\") = \"D+\" ]]\n    [[ $(candidate \"0.5\") = \"D-\"\
    \ ]]\n    [[ $(candidate \"0.0\") = \"E\" ]]\n    [[ $(candidate \"1.0 0.3 1.5\
    \ 2.8 3.3\") = \"D D- C- B B+\" ]]\n    [[ $(candidate \"0.0 0.7\") = \"E D-\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020303
- exit_code: 1
  program: "#!/bin/bash\n# It is the last week of the semester and the teacher has\
    \ to give the grades\n# to students. The teacher has been making her own algorithm\
    \ for grading.\n# The only problem is, she has lost the code she used for grading.\n\
    # She has given you a list of GPAs for some students and you have to write \n\
    # a function that can output a list of letter grades using the following table:\n\
    # GPA       |    Letter grade\n# 4.0                A+\n# > 3.7              \
    \  A \n# > 3.3                A- \n# > 3.0                B+\n# > 2.7        \
    \        B \n# > 2.3                B-\n# > 2.0                C+\n# > 1.7   \
    \             C\n# > 1.3                C-\n# > 1.0                D+ \n# > 0.7\
    \                D \n# > 0.0                D-\n# 0.0                E\n# Example:\n\
    # grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n#\n\
    # $1 is a space-separated list\nnumerical_letter_grade() {\n  str=\"\"\n  for\
    \ i in $1; do\n    if [ $(echo \"$i == 4.0\" | bc -l) -eq 1 ]; then\n      str=\"\
    $str A+\"\n    elif [ $(echo \"$i > 3.7\" | bc -l) -eq 1 ]; then\n      str=\"\
    $str A\"\n    elif [ $(echo \"$i > 3.3\" | bc -l) -eq 1 ]; then\n      str=\"\
    $str A-\"\n    elif [ $(echo \"$i > 3.0\" | bc -l) -eq 1 ]; then\n      str=\"\
    $str B+\"\n    elif [ $(echo \"$i > 2.7\" | bc -l) -eq 1 ]; then\n      str=\"\
    $str B\"\n    elif [ $(echo \"$i > 2.3\" | bc -l) -eq 1 ]; then\n      str=\"\
    $str B-\"\n    elif [ $(echo \"$i > 2.0\" | bc -l) -eq 1 ]; then\n      str=\"\
    $str C+\"\n    elif [ $(echo \"$i > 1.7\" | bc -l) -eq 1 ]; then\n      str=\"\
    $str C\"\n    elif [ $(echo \"$i > 1.3\" | bc -l) -eq 1 ]; then\n      str=\"\
    $str C-\"\n    elif [ $(echo \"$i > 1.0\" | bc -l) -eq 1 ]; then\n      str=\"\
    $str D+\"\n    elif [ $(echo \"$i > 0.7\" | bc -l) -eq 1 ]; then\n      str=\"\
    $str D\"\n    elif [ $(echo \"$i >= 0.0\" | bc -l) -eq 1 ]; then\n      str=\"\
    $str D-\"\n    else\n      str=\"$str E\"\n    fi\n  done\n  echo $str\n}\n\n\
    candidate() {\n    numerical_letter_grade \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4.0 3 1.7 2 3.5\") = \"A+ B C- C A-\" ]]\n    [[ $(candidate\
    \ \"1.2\") = \"D+\" ]]\n    [[ $(candidate \"0.5\") = \"D-\" ]]\n    [[ $(candidate\
    \ \"0.0\") = \"E\" ]]\n    [[ $(candidate \"1.0 0.3 1.5 2.8 3.3\") = \"D D- C-\
    \ B B+\" ]]\n    [[ $(candidate \"0.0 0.7\") = \"E D-\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020303
- exit_code: 1
  program: "#!/bin/bash\n# It is the last week of the semester and the teacher has\
    \ to give the grades\n# to students. The teacher has been making her own algorithm\
    \ for grading.\n# The only problem is, she has lost the code she used for grading.\n\
    # She has given you a list of GPAs for some students and you have to write \n\
    # a function that can output a list of letter grades using the following table:\n\
    # GPA       |    Letter grade\n# 4.0                A+\n# > 3.7              \
    \  A \n# > 3.3                A- \n# > 3.0                B+\n# > 2.7        \
    \        B \n# > 2.3                B-\n# > 2.0                C+\n# > 1.7   \
    \             C\n# > 1.3                C-\n# > 1.0                D+ \n# > 0.7\
    \                D \n# > 0.0                D-\n# 0.0                E\n# Example:\n\
    # grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n#\n\
    # $1 is a space-separated list\nnumerical_letter_grade() {\n    grade=$1\n   \
    \ if (( $(echo \"$grade >= 4.0\" | bc -l) )); then\n        echo \"A+\"\n    elif\
    \ (( $(echo \"$grade >= 3.7\" | bc -l) )); then\n        echo \"A\"\n    elif\
    \ (( $(echo \"$grade >= 3.3\" | bc -l) )); then\n        echo \"A-\"\n    elif\
    \ (( $(echo \"$grade >= 3.0\" | bc -l) )); then\n        echo \"B+\"\n    elif\
    \ (( $(echo \"$grade >= 2.7\" | bc -l) )); then\n        echo \"B\"\n    elif\
    \ (( $(echo \"$grade >= 2.3\" | bc -l) )); then\n        echo \"B-\"\n    elif\
    \ (( $(echo \"$grade >= 2.0\" | bc -l) )); then\n        echo \"C+\"\n    elif\
    \ (( $(echo \"$grade >= 1.7\" | bc -l) )); then\n        echo \"C\"\n    elif\
    \ (( $(echo \"$grade >= 1.3\" | bc -l) )); then\n        echo \"C-\"\n    elif\
    \ (( $(echo \"$grade >= 1.0\" | bc -l) )); then\n        echo \"D+\"\n    elif\
    \ (( $(echo \"$grade >= 0.7\" | bc -l) )); then\n        echo \"D\"\n    elif\
    \ (( $(echo \"$grade >= 0.0\" | bc -l) )); then\n        echo \"D-\"\n    else\n\
    \        echo \"E\"\n    fi\n}\n\ncandidate() {\n    numerical_letter_grade \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4.0 3 1.7 2 3.5\") = \"\
    A+ B C- C A-\" ]]\n    [[ $(candidate \"1.2\") = \"D+\" ]]\n    [[ $(candidate\
    \ \"0.5\") = \"D-\" ]]\n    [[ $(candidate \"0.0\") = \"E\" ]]\n    [[ $(candidate\
    \ \"1.0 0.3 1.5 2.8 3.3\") = \"D D- C- B B+\" ]]\n    [[ $(candidate \"0.0 0.7\"\
    ) = \"E D-\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '(standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    '
  stdout: ''
  timestamp: 1660020303
- exit_code: 1
  program: "#!/bin/bash\n# It is the last week of the semester and the teacher has\
    \ to give the grades\n# to students. The teacher has been making her own algorithm\
    \ for grading.\n# The only problem is, she has lost the code she used for grading.\n\
    # She has given you a list of GPAs for some students and you have to write \n\
    # a function that can output a list of letter grades using the following table:\n\
    # GPA       |    Letter grade\n# 4.0                A+\n# > 3.7              \
    \  A \n# > 3.3                A- \n# > 3.0                B+\n# > 2.7        \
    \        B \n# > 2.3                B-\n# > 2.0                C+\n# > 1.7   \
    \             C\n# > 1.3                C-\n# > 1.0                D+ \n# > 0.7\
    \                D \n# > 0.0                D-\n# 0.0                E\n# Example:\n\
    # grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n#\n\
    # $1 is a space-separated list\nnumerical_letter_grade() {\n  gpa=$1\n  if (($(echo\
    \ \"$gpa >= 4.0\" | bc -l))); then\n    echo 'A+'\n  elif (($(echo \"$gpa >= 3.7\"\
    \ | bc -l))); then\n    echo 'A'\n  elif (($(echo \"$gpa >= 3.3\" | bc -l)));\
    \ then\n    echo 'A-'\n  elif (($(echo \"$gpa >= 3.0\" | bc -l))); then\n    echo\
    \ 'B+'\n  elif (($(echo \"$gpa >= 2.7\" | bc -l))); then\n    echo 'B'\n  elif\
    \ (($(echo \"$gpa >= 2.3\" | bc -l))); then\n    echo 'B-'\n  elif (($(echo \"\
    $gpa >= 2.0\" | bc -l))); then\n    echo 'C+'\n  elif (($(echo \"$gpa >= 1.7\"\
    \ | bc -l))); then\n    echo 'C'\n  elif (($(echo \"$gpa >= 1.3\" | bc -l)));\
    \ then\n    echo 'C-'\n  elif (($(echo \"$gpa >= 1.0\" | bc -l))); then\n    echo\
    \ 'D+'\n  elif (($(echo \"$gpa >= 0.7\" | bc -l))); then\n    echo 'D'\n  elif\
    \ (($(echo \"$gpa >= 0.0\" | bc -l))); then\n    echo 'D-'\n  else\n    echo 'E'\n\
    \  fi\n}\n\ncandidate() {\n    numerical_letter_grade \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4.0 3 1.7 2 3.5\") = \"A+ B C- C A-\" ]]\n    [[ $(candidate\
    \ \"1.2\") = \"D+\" ]]\n    [[ $(candidate \"0.5\") = \"D-\" ]]\n    [[ $(candidate\
    \ \"0.0\") = \"E\" ]]\n    [[ $(candidate \"1.0 0.3 1.5 2.8 3.3\") = \"D D- C-\
    \ B B+\" ]]\n    [[ $(candidate \"0.0 0.7\") = \"E D-\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '(standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    '
  stdout: ''
  timestamp: 1660020303
- exit_code: 1
  program: "#!/bin/bash\n# It is the last week of the semester and the teacher has\
    \ to give the grades\n# to students. The teacher has been making her own algorithm\
    \ for grading.\n# The only problem is, she has lost the code she used for grading.\n\
    # She has given you a list of GPAs for some students and you have to write \n\
    # a function that can output a list of letter grades using the following table:\n\
    # GPA       |    Letter grade\n# 4.0                A+\n# > 3.7              \
    \  A \n# > 3.3                A- \n# > 3.0                B+\n# > 2.7        \
    \        B \n# > 2.3                B-\n# > 2.0                C+\n# > 1.7   \
    \             C\n# > 1.3                C-\n# > 1.0                D+ \n# > 0.7\
    \                D \n# > 0.0                D-\n# 0.0                E\n# Example:\n\
    # grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n#\n\
    # $1 is a space-separated list\nnumerical_letter_grade() {\n    local grade_list=$(echo\
    \ $1 | sed 's/[^0-9.]//g')\n    local letter_list=\"\"\n    for item in $grade_list;\
    \ do\n        if [ $item -ge 4.0 ]; then\n            letter_list=\"$letter_list\
    \ A+\"\n        elif [ $item -ge 3.7 ]; then\n            letter_list=\"$letter_list\
    \ A\"\n        elif [ $item -ge 3.3 ]; then\n            letter_list=\"$letter_list\
    \ A-\"\n        elif [ $item -ge 3.0 ]; then\n            letter_list=\"$letter_list\
    \ B+\"\n        elif [ $item -ge 2.7 ]; then\n            letter_list=\"$letter_list\
    \ B\"\n        elif [ $item -ge 2.3 ]; then\n            letter_list=\"$letter_list\
    \ B-\"\n        elif [ $item -ge 2.0 ]; then\n            letter_list=\"$letter_list\
    \ C+\"\n        elif [ $item -ge 1.7 ]; then\n            letter_list=\"$letter_list\
    \ C\"\n        elif [ $item -ge 1.3 ]; then\n            letter_list=\"$letter_list\
    \ C-\"\n        elif [ $item -ge 1.0 ]; then\n            letter_list=\"$letter_list\
    \ D+\"\n        elif [ $item -ge 0.7 ]; then\n            letter_list=\"$letter_list\
    \ D\"\n        elif [ $item -ge 0.0 ]; then\n            letter_list=\"$letter_list\
    \ D-\"\n        else\n            letter_list=\"$letter_list E\"\n        fi\n\
    \    done\n    echo $letter_list\n}\n\ncandidate() {\n    numerical_letter_grade\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4.0 3 1.7 2 3.5\") =\
    \ \"A+ B C- C A-\" ]]\n    [[ $(candidate \"1.2\") = \"D+\" ]]\n    [[ $(candidate\
    \ \"0.5\") = \"D-\" ]]\n    [[ $(candidate \"0.0\") = \"E\" ]]\n    [[ $(candidate\
    \ \"1.0 0.3 1.5 2.8 3.3\") = \"D D- C- B B+\" ]]\n    [[ $(candidate \"0.0 0.7\"\
    ) = \"E D-\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpl3wt2cbf.sh: line 29: [: 4.031.723.5: integer expression expected

    /tmp/tmpl3wt2cbf.sh: line 31: [: 4.031.723.5: integer expression expected

    /tmp/tmpl3wt2cbf.sh: line 33: [: 4.031.723.5: integer expression expected

    /tmp/tmpl3wt2cbf.sh: line 35: [: 4.031.723.5: integer expression expected

    /tmp/tmpl3wt2cbf.sh: line 37: [: 4.031.723.5: integer expression expected

    /tmp/tmpl3wt2cbf.sh: line 39: [: 4.031.723.5: integer expression expected

    /tmp/tmpl3wt2cbf.sh: line 41: [: 4.031.723.5: integer expression expected

    /tmp/tmpl3wt2cbf.sh: line 43: [: 4.031.723.5: integer expression expected

    /tmp/tmpl3wt2cbf.sh: line 45: [: 4.031.723.5: integer expression expected

    /tmp/tmpl3wt2cbf.sh: line 47: [: 4.031.723.5: integer expression expected

    /tmp/tmpl3wt2cbf.sh: line 49: [: 4.031.723.5: integer expression expected

    /tmp/tmpl3wt2cbf.sh: line 51: [: 4.031.723.5: integer expression expected

    '
  stdout: ''
  timestamp: 1660020303
- exit_code: 1
  program: "#!/bin/bash\n# It is the last week of the semester and the teacher has\
    \ to give the grades\n# to students. The teacher has been making her own algorithm\
    \ for grading.\n# The only problem is, she has lost the code she used for grading.\n\
    # She has given you a list of GPAs for some students and you have to write \n\
    # a function that can output a list of letter grades using the following table:\n\
    # GPA       |    Letter grade\n# 4.0                A+\n# > 3.7              \
    \  A \n# > 3.3                A- \n# > 3.0                B+\n# > 2.7        \
    \        B \n# > 2.3                B-\n# > 2.0                C+\n# > 1.7   \
    \             C\n# > 1.3                C-\n# > 1.0                D+ \n# > 0.7\
    \                D \n# > 0.0                D-\n# 0.0                E\n# Example:\n\
    # grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n#\n\
    # $1 is a space-separated list\nnumerical_letter_grade() {\n\tfor grade in $1;\
    \ do\n\t\t# Your code goes here\n\t\tif [ $(echo \"$grade >= 4.0\" | bc) -eq 1\
    \ ]; then\n\t\t\techo \"A+\"\n\t\telif [ $(echo \"$grade > 3.7\" | bc) -eq 1 ];\
    \ then\n\t\t\techo \"A\"\n\t\telif [ $(echo \"$grade > 3.3\" | bc) -eq 1 ]; then\n\
    \t\t\techo \"A-\"\n\t\telif [ $(echo \"$grade > 3.0\" | bc) -eq 1 ]; then\n\t\t\
    \techo \"B+\"\n\t\telif [ $(echo \"$grade > 2.7\" | bc) -eq 1 ]; then\n\t\t\t\
    echo \"B\"\n\t\telif [ $(echo \"$grade > 2.3\" | bc) -eq 1 ]; then\n\t\t\techo\
    \ \"B-\"\n\t\telif [ $(echo \"$grade > 2.0\" | bc) -eq 1 ]; then\n\t\t\techo \"\
    C+\"\n\t\telif [ $(echo \"$grade > 1.7\" | bc) -eq 1 ]; then\n\t\t\techo \"C\"\
    \n\t\telif [ $(echo \"$grade > 1.3\" | bc) -eq 1 ]; then\n\t\t\techo \"C-\"\n\t\
    \telif [ $(echo \"$grade > 1.0\" | bc) -eq 1 ]; then\n\t\t\techo \"D+\"\n\t\t\
    elif [ $(echo \"$grade > 0.7\" | bc) -eq 1 ]; then\n\t\t\techo \"D\"\n\t\telif\
    \ [ $(echo \"$grade > 0.0\" | bc) -eq 1 ]; then\n\t\t\techo \"D-\"\n\t\telse\n\
    \t\t\techo \"E\"\n\t\tfi\n\tdone\n}\n\ncandidate() {\n    numerical_letter_grade\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4.0 3 1.7 2 3.5\") =\
    \ \"A+ B C- C A-\" ]]\n    [[ $(candidate \"1.2\") = \"D+\" ]]\n    [[ $(candidate\
    \ \"0.5\") = \"D-\" ]]\n    [[ $(candidate \"0.0\") = \"E\" ]]\n    [[ $(candidate\
    \ \"1.0 0.3 1.5 2.8 3.3\") = \"D D- C- B B+\" ]]\n    [[ $(candidate \"0.0 0.7\"\
    ) = \"E D-\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020303
- exit_code: 1
  program: "#!/bin/bash\n# It is the last week of the semester and the teacher has\
    \ to give the grades\n# to students. The teacher has been making her own algorithm\
    \ for grading.\n# The only problem is, she has lost the code she used for grading.\n\
    # She has given you a list of GPAs for some students and you have to write \n\
    # a function that can output a list of letter grades using the following table:\n\
    # GPA       |    Letter grade\n# 4.0                A+\n# > 3.7              \
    \  A \n# > 3.3                A- \n# > 3.0                B+\n# > 2.7        \
    \        B \n# > 2.3                B-\n# > 2.0                C+\n# > 1.7   \
    \             C\n# > 1.3                C-\n# > 1.0                D+ \n# > 0.7\
    \                D \n# > 0.0                D-\n# 0.0                E\n# Example:\n\
    # grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n#\n\
    # $1 is a space-separated list\nnumerical_letter_grade() {\n  local grades=( $1\
    \ )\n  for i in \"${grades[@]}\"; do\n    case ${i} in\n      4.0) echo -n \"\
    A+ \";;\n      3.7|3.8|3.9) echo -n \"A \";;\n      3.3|3.4|3.5|3.6) echo -n \"\
    A- \";;\n      3.0|3.1|3.2) echo -n \"B+ \";;\n      2.7|2.8|2.9) echo -n \"B\
    \ \";;\n      2.3|2.4|2.5|2.6) echo -n \"B- \";;\n      2.0|2.1|2.2) echo -n \"\
    C+ \";;\n      1.7|1.8|1.9) echo -n \"C \";;\n      1.3|1.4|1.5|1.6) echo -n \"\
    C- \";;\n      1.0|1.1|1.2) echo -n \"D+ \";;\n      0.7|0.8|0.9) echo -n \"D\
    \ \";;\n      0.0|0.1|0.2|0.3|0.4|0.5|0.6) echo -n \"D- \";;\n      *) echo -n\
    \ \"E \";;\n    esac\n  done\n}\n\ncandidate() {\n    numerical_letter_grade \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4.0 3 1.7 2 3.5\") = \"\
    A+ B C- C A-\" ]]\n    [[ $(candidate \"1.2\") = \"D+\" ]]\n    [[ $(candidate\
    \ \"0.5\") = \"D-\" ]]\n    [[ $(candidate \"0.0\") = \"E\" ]]\n    [[ $(candidate\
    \ \"1.0 0.3 1.5 2.8 3.3\") = \"D D- C- B B+\" ]]\n    [[ $(candidate \"0.0 0.7\"\
    ) = \"E D-\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020303
- exit_code: 1
  program: "#!/bin/bash\n# It is the last week of the semester and the teacher has\
    \ to give the grades\n# to students. The teacher has been making her own algorithm\
    \ for grading.\n# The only problem is, she has lost the code she used for grading.\n\
    # She has given you a list of GPAs for some students and you have to write \n\
    # a function that can output a list of letter grades using the following table:\n\
    # GPA       |    Letter grade\n# 4.0                A+\n# > 3.7              \
    \  A \n# > 3.3                A- \n# > 3.0                B+\n# > 2.7        \
    \        B \n# > 2.3                B-\n# > 2.0                C+\n# > 1.7   \
    \             C\n# > 1.3                C-\n# > 1.0                D+ \n# > 0.7\
    \                D \n# > 0.0                D-\n# 0.0                E\n# Example:\n\
    # grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n#\n\
    # $1 is a space-separated list\nnumerical_letter_grade() {\n    # split argument\
    \ into an array called gpa\n    gpas=($1)\n    # loop through each gpa in gpas\
    \ array\n    for gpa in ${gpas[@]}; do\n        # calculate the letter grade based\
    \ on the gpa\n        if [ $gpa -eq 4.0 ]; then\n            letter_grade=\"A+\"\
    \n        elif [ $gpa -gt 3.7 ]; then\n            letter_grade=\"A\"\n      \
    \  elif [ $gpa -gt 3.3 ]; then\n            letter_grade=\"A-\"\n        elif\
    \ [ $gpa -gt 3.0 ]; then\n            letter_grade=\"B+\"\n        elif [ $gpa\
    \ -gt 2.7 ]; then\n            letter_grade=\"B\"\n        elif [ $gpa -gt 2.3\
    \ ]; then\n            letter_grade=\"B-\"\n        elif [ $gpa -gt 2.0 ]; then\n\
    \            letter_grade=\"C+\"\n        elif [ $gpa -gt 1.7 ]; then\n      \
    \      letter_grade=\"C\"\n        elif [ $gpa -gt 1.3 ]; then\n            letter_grade=\"\
    C-\"\n        elif [ $gpa -gt 1.0 ]; then\n            letter_grade=\"D+\"\n \
    \       elif [ $gpa -gt 0.7 ]; then\n            letter_grade=\"D\"\n        elif\
    \ [ $gpa -gt 0.0 ]; then\n            letter_grade=\"D-\"\n        else\n    \
    \        letter_grade=\"E\"\n        fi\n        # append letter grade to array\n\
    \        letter_grades+=(\"$letter_grade\")\n    done\n    # return the array\
    \ of letter grades\n    echo ${letter_grades[@]}\n}\n\ncandidate() {\n    numerical_letter_grade\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4.0 3 1.7 2 3.5\") =\
    \ \"A+ B C- C A-\" ]]\n    [[ $(candidate \"1.2\") = \"D+\" ]]\n    [[ $(candidate\
    \ \"0.5\") = \"D-\" ]]\n    [[ $(candidate \"0.0\") = \"E\" ]]\n    [[ $(candidate\
    \ \"1.0 0.3 1.5 2.8 3.3\") = \"D D- C- B B+\" ]]\n    [[ $(candidate \"0.0 0.7\"\
    ) = \"E D-\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpj_vlvqw2.sh: line 31: [: 4.0: integer expression expected

    /tmp/tmpj_vlvqw2.sh: line 33: [: 4.0: integer expression expected

    /tmp/tmpj_vlvqw2.sh: line 35: [: 4.0: integer expression expected

    /tmp/tmpj_vlvqw2.sh: line 37: [: 4.0: integer expression expected

    /tmp/tmpj_vlvqw2.sh: line 39: [: 4.0: integer expression expected

    /tmp/tmpj_vlvqw2.sh: line 41: [: 4.0: integer expression expected

    /tmp/tmpj_vlvqw2.sh: line 43: [: 4.0: integer expression expected

    /tmp/tmpj_vlvqw2.sh: line 45: [: 4.0: integer expression expected

    /tmp/tmpj_vlvqw2.sh: line 47: [: 4.0: integer expression expected

    /tmp/tmpj_vlvqw2.sh: line 49: [: 4.0: integer expression expected

    /tmp/tmpj_vlvqw2.sh: line 51: [: 4.0: integer expression expected

    /tmp/tmpj_vlvqw2.sh: line 53: [: 4.0: integer expression expected

    /tmp/tmpj_vlvqw2.sh: line 31: [: 4.0: integer expression expected

    /tmp/tmpj_vlvqw2.sh: line 33: [: 3.7: integer expression expected

    /tmp/tmpj_vlvqw2.sh: line 35: [: 3.3: integer expression expected

    /tmp/tmpj_vlvqw2.sh: line 37: [: 3.0: integer expression expected

    /tmp/tmpj_vlvqw2.sh: line 39: [: 2.7: integer expression expected

    /tmp/tmpj_vlvqw2.sh: line 41: [: 2.3: integer expression expected

    /tmp/tmpj_vlvqw2.sh: line 43: [: 2.0: integer expression expected

    /tmp/tmpj_vlvqw2.sh: line 45: [: 1.7: integer expression expected

    /tmp/tmpj_vlvqw2.sh: line 47: [: 1.3: integer expression expected

    /tmp/tmpj_vlvqw2.sh: line 49: [: 1.0: integer expression expected

    /tmp/tmpj_vlvqw2.sh: line 51: [: 0.7: integer expression expected

    /tmp/tmpj_vlvqw2.sh: line 53: [: 0.0: integer expression expected

    /tmp/tmpj_vlvqw2.sh: line 31: [: 1.7: integer expression expected

    /tmp/tmpj_vlvqw2.sh: line 33: [: 1.7: integer expression expected

    /tmp/tmpj_vlvqw2.sh: line 35: [: 1.7: integer expression expected

    /tmp/tmpj_vlvqw2.sh: line 37: [: 1.7: integer expression expected

    /tmp/tmpj_vlvqw2.sh: line 39: [: 1.7: integer expression expected

    /tmp/tmpj_vlvqw2.sh: line 41: [: 1.7: integer expression expected

    /tmp/tmpj_vlvqw2.sh: line 43: [: 1.7: integer expression expected

    /t'
  stdout: ''
  timestamp: 1660020303
- exit_code: 2
  program: "#!/bin/bash\n# It is the last week of the semester and the teacher has\
    \ to give the grades\n# to students. The teacher has been making her own algorithm\
    \ for grading.\n# The only problem is, she has lost the code she used for grading.\n\
    # She has given you a list of GPAs for some students and you have to write \n\
    # a function that can output a list of letter grades using the following table:\n\
    # GPA       |    Letter grade\n# 4.0                A+\n# > 3.7              \
    \  A \n# > 3.3                A- \n# > 3.0                B+\n# > 2.7        \
    \        B \n# > 2.3                B-\n# > 2.0                C+\n# > 1.7   \
    \             C\n# > 1.3                C-\n# > 1.0                D+ \n# > 0.7\
    \                D \n# > 0.0                D-\n# 0.0                E\n# Example:\n\
    # grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n#\n\
    # $1 is a space-separated list\nnumerical_letter_grade() {\n    for grade in $1;\
    \ do\n        case \"$grade\" in\n            4.0) echo \"A+\";;\n           \
    \ [3-4).[7-9]) echo \"A\";;\n            [3-4).[3-6]) echo \"A-\";;\n        \
    \    [3-4).0) echo \"B+\";;\n            [2-3).[7-9]) echo \"B\";;\n         \
    \   [2-3).[3-6]) echo \"B-\";;\n            [2-3).0) echo \"C+\";;\n         \
    \   [1-2).[7-9]) echo \"C\";;\n            [1-2).[3-6]) echo \"C-\";;\n      \
    \      [1-2).0) echo \"D+\";;\n            [0-1).[7-9]) echo \"D\";;\n       \
    \     [0-1).[0-6]) echo \"D-\";;\n            0.0) echo \"E\";;\n        esac\n\
    \    done\n}\n\ncandidate() {\n    numerical_letter_grade \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4.0 3 1.7 2 3.5\") = \"A+ B C- C A-\" ]]\n\
    \    [[ $(candidate \"1.2\") = \"D+\" ]]\n    [[ $(candidate \"0.5\") = \"D-\"\
    \ ]]\n    [[ $(candidate \"0.0\") = \"E\" ]]\n    [[ $(candidate \"1.0 0.3 1.5\
    \ 2.8 3.3\") = \"D D- C- B B+\" ]]\n    [[ $(candidate \"0.0 0.7\") = \"E D-\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpn0b4_v4v.sh: line 29: syntax error near unexpected token `)''

    /tmp/tmpn0b4_v4v.sh: line 29: `            [3-4).[7-9]) echo "A";;''

    '
  stdout: ''
  timestamp: 1660020303
- exit_code: 1
  program: "#!/bin/bash\n# It is the last week of the semester and the teacher has\
    \ to give the grades\n# to students. The teacher has been making her own algorithm\
    \ for grading.\n# The only problem is, she has lost the code she used for grading.\n\
    # She has given you a list of GPAs for some students and you have to write \n\
    # a function that can output a list of letter grades using the following table:\n\
    # GPA       |    Letter grade\n# 4.0                A+\n# > 3.7              \
    \  A \n# > 3.3                A- \n# > 3.0                B+\n# > 2.7        \
    \        B \n# > 2.3                B-\n# > 2.0                C+\n# > 1.7   \
    \             C\n# > 1.3                C-\n# > 1.0                D+ \n# > 0.7\
    \                D \n# > 0.0                D-\n# 0.0                E\n# Example:\n\
    # grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n#\n\
    # $1 is a space-separated list\nnumerical_letter_grade() {\n  # your code here\n\
    \  arr=($1)\n  for i in \"${arr[@]}\"\n  do\n    case \"$i\" in\n        4.0)\
    \ echo \"A+\";;\n        3.7) echo \"A\";;\n        3.3) echo \"A-\";;\n     \
    \   3.0) echo \"B+\";;\n        2.7) echo \"B\";;\n        2.3) echo \"B-\";;\n\
    \        2.0) echo \"C+\";;\n        1.7) echo \"C\";;\n        1.3) echo \"C-\"\
    ;;\n        1.0) echo \"D+\";;\n        0.7) echo \"D\";;\n        0.0) echo \"\
    D-\";;\n        *) echo \"E\";;\n    esac\n  done\n}\n\ncandidate() {\n    numerical_letter_grade\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4.0 3 1.7 2 3.5\") =\
    \ \"A+ B C- C A-\" ]]\n    [[ $(candidate \"1.2\") = \"D+\" ]]\n    [[ $(candidate\
    \ \"0.5\") = \"D-\" ]]\n    [[ $(candidate \"0.0\") = \"E\" ]]\n    [[ $(candidate\
    \ \"1.0 0.3 1.5 2.8 3.3\") = \"D D- C- B B+\" ]]\n    [[ $(candidate \"0.0 0.7\"\
    ) = \"E D-\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020303
- exit_code: 1
  program: "#!/bin/bash\n# It is the last week of the semester and the teacher has\
    \ to give the grades\n# to students. The teacher has been making her own algorithm\
    \ for grading.\n# The only problem is, she has lost the code she used for grading.\n\
    # She has given you a list of GPAs for some students and you have to write \n\
    # a function that can output a list of letter grades using the following table:\n\
    # GPA       |    Letter grade\n# 4.0                A+\n# > 3.7              \
    \  A \n# > 3.3                A- \n# > 3.0                B+\n# > 2.7        \
    \        B \n# > 2.3                B-\n# > 2.0                C+\n# > 1.7   \
    \             C\n# > 1.3                C-\n# > 1.0                D+ \n# > 0.7\
    \                D \n# > 0.0                D-\n# 0.0                E\n# Example:\n\
    # grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n#\n\
    # $1 is a space-separated list\nnumerical_letter_grade() {\n    if [ $1 -ge 4.0\
    \ ]; then\n        echo \"A+\"\n    elif [ $1 -ge 3.7 ]; then\n        echo \"\
    A\"\n    elif [ $1 -ge 3.3 ]; then\n        echo \"A-\"\n    elif [ $1 -ge 3.0\
    \ ]; then\n        echo \"B+\"\n    elif [ $1 -ge 2.7 ]; then\n        echo \"\
    B\"\n    elif [ $1 -ge 2.3 ]; then\n        echo \"B-\"\n    elif [ $1 -ge 2.0\
    \ ]; then\n        echo \"C+\"\n    elif [ $1 -ge 1.7 ]; then\n        echo \"\
    C\"\n    elif [ $1 -ge 1.3 ]; then\n        echo \"C-\"\n    elif [ $1 -ge 1.0\
    \ ]; then\n        echo \"D+\"\n    elif [ $1 -ge 0.7 ]; then\n        echo \"\
    D\"\n    elif [ $1 -ge 0.0 ]; then\n        echo \"D-\"\n    else\n        echo\
    \ \"E\"\n    fi\n}\n\ncandidate() {\n    numerical_letter_grade \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"4.0 3 1.7 2 3.5\") = \"A+ B C- C A-\"\
    \ ]]\n    [[ $(candidate \"1.2\") = \"D+\" ]]\n    [[ $(candidate \"0.5\") = \"\
    D-\" ]]\n    [[ $(candidate \"0.0\") = \"E\" ]]\n    [[ $(candidate \"1.0 0.3\
    \ 1.5 2.8 3.3\") = \"D D- C- B B+\" ]]\n    [[ $(candidate \"0.0 0.7\") = \"E\
    \ D-\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpk_k687kx.sh: line 26: [: too many arguments

    /tmp/tmpk_k687kx.sh: line 28: [: too many arguments

    /tmp/tmpk_k687kx.sh: line 30: [: too many arguments

    /tmp/tmpk_k687kx.sh: line 32: [: too many arguments

    /tmp/tmpk_k687kx.sh: line 34: [: too many arguments

    /tmp/tmpk_k687kx.sh: line 36: [: too many arguments

    /tmp/tmpk_k687kx.sh: line 38: [: too many arguments

    /tmp/tmpk_k687kx.sh: line 40: [: too many arguments

    /tmp/tmpk_k687kx.sh: line 42: [: too many arguments

    /tmp/tmpk_k687kx.sh: line 44: [: too many arguments

    /tmp/tmpk_k687kx.sh: line 46: [: too many arguments

    /tmp/tmpk_k687kx.sh: line 48: [: too many arguments

    '
  stdout: ''
  timestamp: 1660020303
- exit_code: 1
  program: "#!/bin/bash\n# It is the last week of the semester and the teacher has\
    \ to give the grades\n# to students. The teacher has been making her own algorithm\
    \ for grading.\n# The only problem is, she has lost the code she used for grading.\n\
    # She has given you a list of GPAs for some students and you have to write \n\
    # a function that can output a list of letter grades using the following table:\n\
    # GPA       |    Letter grade\n# 4.0                A+\n# > 3.7              \
    \  A \n# > 3.3                A- \n# > 3.0                B+\n# > 2.7        \
    \        B \n# > 2.3                B-\n# > 2.0                C+\n# > 1.7   \
    \             C\n# > 1.3                C-\n# > 1.0                D+ \n# > 0.7\
    \                D \n# > 0.0                D-\n# 0.0                E\n# Example:\n\
    # grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n#\n\
    # $1 is a space-separated list\nnumerical_letter_grade() {\n    local grades=$1\n\
    \    # write your code here\n}\n\ncandidate() {\n    numerical_letter_grade \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4.0 3 1.7 2 3.5\") = \"\
    A+ B C- C A-\" ]]\n    [[ $(candidate \"1.2\") = \"D+\" ]]\n    [[ $(candidate\
    \ \"0.5\") = \"D-\" ]]\n    [[ $(candidate \"0.0\") = \"E\" ]]\n    [[ $(candidate\
    \ \"1.0 0.3 1.5 2.8 3.3\") = \"D D- C- B B+\" ]]\n    [[ $(candidate \"0.0 0.7\"\
    ) = \"E D-\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020303
- exit_code: 1
  program: "#!/bin/bash\n# It is the last week of the semester and the teacher has\
    \ to give the grades\n# to students. The teacher has been making her own algorithm\
    \ for grading.\n# The only problem is, she has lost the code she used for grading.\n\
    # She has given you a list of GPAs for some students and you have to write \n\
    # a function that can output a list of letter grades using the following table:\n\
    # GPA       |    Letter grade\n# 4.0                A+\n# > 3.7              \
    \  A \n# > 3.3                A- \n# > 3.0                B+\n# > 2.7        \
    \        B \n# > 2.3                B-\n# > 2.0                C+\n# > 1.7   \
    \             C\n# > 1.3                C-\n# > 1.0                D+ \n# > 0.7\
    \                D \n# > 0.0                D-\n# 0.0                E\n# Example:\n\
    # grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n#\n\
    # $1 is a space-separated list\nnumerical_letter_grade() {\n    for gpa in $1\n\
    \    do\n        if (( $(echo \"$gpa > 4.0\" | bc -l) )); then echo \"A+\"; continue;\
    \ fi\n        if (( $(echo \"$gpa > 3.7\" | bc -l) )); then echo \"A\"; continue;\
    \ fi\n        if (( $(echo \"$gpa > 3.3\" | bc -l) )); then echo \"A-\"; continue;\
    \ fi\n        if (( $(echo \"$gpa > 3.0\" | bc -l) )); then echo \"B+\"; continue;\
    \ fi\n        if (( $(echo \"$gpa > 2.7\" | bc -l) )); then echo \"B\"; continue;\
    \ fi\n        if (( $(echo \"$gpa > 2.3\" | bc -l) )); then echo \"B-\"; continue;\
    \ fi\n        if (( $(echo \"$gpa > 2.0\" | bc -l) )); then echo \"C+\"; continue;\
    \ fi\n        if (( $(echo \"$gpa > 1.7\" | bc -l) )); then echo \"C\"; continue;\
    \ fi\n        if (( $(echo \"$gpa > 1.3\" | bc -l) )); then echo \"C-\"; continue;\
    \ fi\n        if (( $(echo \"$gpa > 1.0\" | bc -l) )); then echo \"D+\"; continue;\
    \ fi\n        if (( $(echo \"$gpa > 0.7\" | bc -l) )); then echo \"D\"; continue;\
    \ fi\n        if (( $(echo \"$gpa > 0.0\" | bc -l) )); then echo \"D-\"; continue;\
    \ fi\n        echo \"E\";\n    done\n}\n\ncandidate() {\n    numerical_letter_grade\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4.0 3 1.7 2 3.5\") =\
    \ \"A+ B C- C A-\" ]]\n    [[ $(candidate \"1.2\") = \"D+\" ]]\n    [[ $(candidate\
    \ \"0.5\") = \"D-\" ]]\n    [[ $(candidate \"0.0\") = \"E\" ]]\n    [[ $(candidate\
    \ \"1.0 0.3 1.5 2.8 3.3\") = \"D D- C- B B+\" ]]\n    [[ $(candidate \"0.0 0.7\"\
    ) = \"E D-\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020303
- exit_code: 1
  program: "#!/bin/bash\n# It is the last week of the semester and the teacher has\
    \ to give the grades\n# to students. The teacher has been making her own algorithm\
    \ for grading.\n# The only problem is, she has lost the code she used for grading.\n\
    # She has given you a list of GPAs for some students and you have to write \n\
    # a function that can output a list of letter grades using the following table:\n\
    # GPA       |    Letter grade\n# 4.0                A+\n# > 3.7              \
    \  A \n# > 3.3                A- \n# > 3.0                B+\n# > 2.7        \
    \        B \n# > 2.3                B-\n# > 2.0                C+\n# > 1.7   \
    \             C\n# > 1.3                C-\n# > 1.0                D+ \n# > 0.7\
    \                D \n# > 0.0                D-\n# 0.0                E\n# Example:\n\
    # grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n#\n\
    # $1 is a space-separated list\nnumerical_letter_grade() {\n    local grades=$1\n\
    \    ret=\"\"\n    for grade in $grades; do\n        case $grade in\n        \
    \    4.0|4)\n                letter=A+\n                ;;\n            3.7|3.8|3.9)\n\
    \                letter=A\n                ;;\n            3.3|3.4|3.5|3.6)\n\
    \                letter=A-\n                ;;\n            3.0|3.1|3.2)\n   \
    \             letter=B+\n                ;;\n            2.7|2.8|2.9)\n      \
    \          letter=B\n                ;;\n            2.3|2.4|2.5|2.6)\n      \
    \          letter=B-\n                ;;\n            2.0|2.1|2.2)\n         \
    \       letter=C+\n                ;;\n            1.7|1.8|1.9)\n            \
    \    letter=C\n                ;;\n            1.3|1.4|1.5|1.6)\n            \
    \    letter=C-\n                ;;\n            1.0|1.1|1.2)\n               \
    \ letter=D+\n                ;;\n            0.7|0.8|0.9)\n                letter=D\n\
    \                ;;\n            0.0|0.1|0.2|0.3|0.4|0.5|0.6)\n              \
    \  letter=D-\n                ;;\n            *)\n                letter=E\n \
    \               ;;\n        esac\n        ret=\"$ret $letter\"\n    done\n   \
    \ echo $ret\n}\n\ncandidate() {\n    numerical_letter_grade \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4.0 3 1.7 2 3.5\") = \"A+ B C- C A-\" ]]\n\
    \    [[ $(candidate \"1.2\") = \"D+\" ]]\n    [[ $(candidate \"0.5\") = \"D-\"\
    \ ]]\n    [[ $(candidate \"0.0\") = \"E\" ]]\n    [[ $(candidate \"1.0 0.3 1.5\
    \ 2.8 3.3\") = \"D D- C- B B+\" ]]\n    [[ $(candidate \"0.0 0.7\") = \"E D-\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020303
- exit_code: 1
  program: "#!/bin/bash\n# It is the last week of the semester and the teacher has\
    \ to give the grades\n# to students. The teacher has been making her own algorithm\
    \ for grading.\n# The only problem is, she has lost the code she used for grading.\n\
    # She has given you a list of GPAs for some students and you have to write \n\
    # a function that can output a list of letter grades using the following table:\n\
    # GPA       |    Letter grade\n# 4.0                A+\n# > 3.7              \
    \  A \n# > 3.3                A- \n# > 3.0                B+\n# > 2.7        \
    \        B \n# > 2.3                B-\n# > 2.0                C+\n# > 1.7   \
    \             C\n# > 1.3                C-\n# > 1.0                D+ \n# > 0.7\
    \                D \n# > 0.0                D-\n# 0.0                E\n# Example:\n\
    # grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n#\n\
    # $1 is a space-separated list\nnumerical_letter_grade() {\n    # Use a regex\
    \ to determine if we have a floating point grade (GPA)\n    # Otherwise, assume\
    \ we have integer grade.\n    if [[ $1 =~ ^([1-9][0-9]*)(\\.[0-9]+)?$ ]]; then\n\
    \        printf \"%0.2f\" $1\n    else\n        printf \"%02d\" $1\n    fi\n}\n\
    \ncandidate() {\n    numerical_letter_grade \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4.0 3 1.7 2 3.5\") = \"A+ B C- C A-\" ]]\n    [[ $(candidate\
    \ \"1.2\") = \"D+\" ]]\n    [[ $(candidate \"0.5\") = \"D-\" ]]\n    [[ $(candidate\
    \ \"0.0\") = \"E\" ]]\n    [[ $(candidate \"1.0 0.3 1.5 2.8 3.3\") = \"D D- C-\
    \ B B+\" ]]\n    [[ $(candidate \"0.0 0.7\") = \"E D-\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp8k0zclxb.sh: line 31: printf: 4.0: invalid number

    /tmp/tmp8k0zclxb.sh: line 31: printf: 1.7: invalid number

    /tmp/tmp8k0zclxb.sh: line 31: printf: 3.5: invalid number

    '
  stdout: ''
  timestamp: 1660020303
- exit_code: 1
  program: "#!/bin/bash\n# It is the last week of the semester and the teacher has\
    \ to give the grades\n# to students. The teacher has been making her own algorithm\
    \ for grading.\n# The only problem is, she has lost the code she used for grading.\n\
    # She has given you a list of GPAs for some students and you have to write \n\
    # a function that can output a list of letter grades using the following table:\n\
    # GPA       |    Letter grade\n# 4.0                A+\n# > 3.7              \
    \  A \n# > 3.3                A- \n# > 3.0                B+\n# > 2.7        \
    \        B \n# > 2.3                B-\n# > 2.0                C+\n# > 1.7   \
    \             C\n# > 1.3                C-\n# > 1.0                D+ \n# > 0.7\
    \                D \n# > 0.0                D-\n# 0.0                E\n# Example:\n\
    # grade_equation([4.0, 3, 1.7, 2, 3.5]) ==> ['A+', 'B', 'C-', 'C', 'A-']\n#\n\
    # $1 is a space-separated list\nnumerical_letter_grade() {\n    local -a letter_grades=('A+'\
    \ 'A' 'A-' 'B+' 'B' 'B-' 'C+' 'C' 'C-' 'D+' 'D' 'D-' 'E')\n    local -a numerical_grades=(\
    \ 4.0  3.7  3.3  3.0  2.7  2.3  2.0  1.7  1.3  1.0  0.7  0.0  0.0)\n    while\
    \ read -r num; do\n        local grade=\"${letter_grades[$(bash -c 'echo -e \"\
    ${@:1:'\"$#\"'}\"' \"${numerical_grades[@]}\" | awk -v num=\"$num\" '{\n     \
    \       for (i=1; i<=NF; i++) {\n                if (num > $i) {\n           \
    \         print i-1;\n                    exit;\n                }\n         \
    \   }\n        }')]}\"\n        echo \"$grade\"\n    done <<< \"$1\"\n}\n\ncandidate()\
    \ {\n    numerical_letter_grade \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4.0 3 1.7 2 3.5\") = \"A+ B C- C A-\" ]]\n    [[ $(candidate \"1.2\") = \"\
    D+\" ]]\n    [[ $(candidate \"0.5\") = \"D-\" ]]\n    [[ $(candidate \"0.0\")\
    \ = \"E\" ]]\n    [[ $(candidate \"1.0 0.3 1.5 2.8 3.3\") = \"D D- C- B B+\" ]]\n\
    \    [[ $(candidate \"0.0 0.7\") = \"E D-\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020303

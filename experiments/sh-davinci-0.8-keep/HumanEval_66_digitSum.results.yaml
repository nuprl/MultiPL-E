language: sh
name: HumanEval_66_digitSum
results:
- exit_code: 1
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    # digitSum(\"\") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n\
    # digitSum(\"helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\"\
    ) => 153\n#\n# $1 is a string\ndigitSum() {\n    local sum=0\n    for (( i=0;\
    \ i<${#1}; i++ )); do\n        (( ${1:$i:1} >= 65 && ${1:$i:1} <= 90 )) && ((\
    \ sum+=${1:$i:1} ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    digitSum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate \"abcCd\") = \"67\"\
    \ ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate \"woArBld\"\
    ) = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate\
    \ \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE Very Smart\")\
    \ = \"327\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020296
- exit_code: 1
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    # digitSum(\"\") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n\
    # digitSum(\"helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\"\
    ) => 153\n#\n# $1 is a string\ndigitSum() {\n    echo \"$1\" | fold -w1 | tr -d\
    \ '[:lower:]' | paste -sd+ | bc\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abAB\") = \"131\" ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate\
    \ \"helloE\") = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[\
    \ $(candidate \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\"\
    ) = \"151\" ]]\n    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020296
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    # digitSum(\"\") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n\
    # digitSum(\"helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\"\
    ) => 153\n#\n# $1 is a string\ndigitSum() {\n    local -i sum=0\n\n    for char\
    \ in $(sed 's/./&\\n/g' <<< \"$1\"); do\n        if [[ \"$char\" =~ [A-Z] ]];\
    \ then\n            sum=$(( sum + $(printf '%d' \"'$char\") ))\n        fi\n \
    \   done\n\n    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\"\
    ) = \"131\" ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate\
    \ \"helloE\") = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[\
    \ $(candidate \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\"\
    ) = \"151\" ]]\n    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020296
- exit_code: 1
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    # digitSum(\"\") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n\
    # digitSum(\"helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\"\
    ) => 153\n#\n# $1 is a string\ndigitSum() {\n  echo \"$1\" | tr -dc '[:upper:]'\
    \ | awk '{ SUM += 0 + $1 } END { print SUM }'\n}\n\ncandidate() {\n    digitSum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate \"abcCd\") = \"67\"\
    \ ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate \"woArBld\"\
    ) = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate\
    \ \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE Very Smart\")\
    \ = \"327\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020296
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    # digitSum(\"\") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n\
    # digitSum(\"helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\"\
    ) => 153\n#\n# $1 is a string\ndigitSum() {\n  local sum=0\n  for i in `echo $1\
    \ | grep -o .`; do\n    code=`printf %d \\'$i`\n    if [ $code -ge 65 ] && [ $code\
    \ -le 90 ]; then\n      sum=$((sum + code))\n    fi\n  done\n  echo $sum\n}\n\n\
    candidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate\
    \ \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020296
- exit_code: 1
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    # digitSum(\"\") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n\
    # digitSum(\"helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\"\
    ) => 153\n#\n# $1 is a string\ndigitSum() {\n    printf '%s' \"$1\" |\n    tr\
    \ -d '[:lower:]' |\n    awk '{for(i=1;i<=NF;i++) a+=sprintf(\"%d\\n\",$i)}END{print\
    \ a}'\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n\
    \    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"\
    69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\"\
    ) = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate\
    \ \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020296
- exit_code: 1
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    # digitSum(\"\") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n\
    # digitSum(\"helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\"\
    ) => 153\n#\n# $1 is a string\ndigitSum() {\n  local sum=0\n  local s=${1^^}\n\
    \  for((i=0;i<${#s};i++)); do\n    if [[ ${s:i:1} =~ ^[A-Z]$ ]]; then\n      let\
    \ sum+=${s:i:1}\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    digitSum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate \"abcCd\") = \"67\"\
    \ ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate \"woArBld\"\
    ) = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate\
    \ \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE Very Smart\")\
    \ = \"327\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020296
- exit_code: 1
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    # digitSum(\"\") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n\
    # digitSum(\"helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\"\
    ) => 153\n#\n# $1 is a string\ndigitSum() {\n\t[[ $1 =~ [A-Z] ]] && echo $1 |\
    \ grep -o [A-Z] | sed 's/./&+/g' | tr -d '\\n' | bc | awk '{print $1}' || echo\
    \ 0\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n  \
    \  [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"\
    69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\"\
    ) = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate\
    \ \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '(standard_in) 1: syntax error

    '
  stdout: ''
  timestamp: 1660020296
- exit_code: 1
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    # digitSum(\"\") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n\
    # digitSum(\"helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\"\
    ) => 153\n#\n# $1 is a string\ndigitSum() {\n    local -i sum=0\n    for((i=0;i<${#1};i++));\
    \ do\n        (( ${1:i:1} < 97 && ${1:i:1} > 64 )) && (( sum += ${1:i:1} ))\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\"\
    ) = \"131\" ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate\
    \ \"helloE\") = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[\
    \ $(candidate \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\"\
    ) = \"151\" ]]\n    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020296
- exit_code: 1
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    # digitSum(\"\") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n\
    # digitSum(\"helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\"\
    ) => 153\n#\n# $1 is a string\ndigitSum() {\n  printf \"%s\" \"$1\" | sed 's/[^A-Z]//g'\
    \ | awk '{sum=0; for(i=1;i<=length;i++) sum+=(ascii(substr($0,i,1))); print sum}'\n\
    }\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate\
    \ \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020296
- exit_code: 2
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    # digitSum(\"\") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n\
    # digitSum(\"helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\"\
    ) => 153\n#\n# $1 is a string\ndigitSum() {\n    echo \"$1\" |  tr -dc 'A-Z' |\n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate\
    \ \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpt10_pwiq.sh: line 264: syntax error near unexpected token `}''

    /tmp/tmpt10_pwiq.sh: line 264: `}''

    '
  stdout: ''
  timestamp: 1660020296
- exit_code: 1
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    # digitSum(\"\") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n\
    # digitSum(\"helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\"\
    ) => 153\n#\n# $1 is a string\ndigitSum() {\n    local str=\"\" sum=\"\"\n   \
    \ for (( i=0; i<${#1}; i++ )); do\n        [ \"${1:$i:1}\" == \"${1:$i:1^^}\"\
    \ ] && continue || str+=\"${1:$i:1}\"\n    done\n    sum=$( echo $str | grep -o\
    \ . | sed -e 's/[^0-9]//g' | awk '{s+=$1} END {print s}' )\n    echo \"$sum\"\n\
    }\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate\
    \ \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020296
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    # digitSum(\"\") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n\
    # digitSum(\"helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\"\
    ) => 153\n#\n# $1 is a string\ndigitSum() {\n    local result=0\n\n    for ((\
    \ i=0; i<${#1}; i++ )); do\n        local ascii=$(printf \"%d\" \"'${1:$i:1}\"\
    )\n        if [[ $ascii -ge 65 && $ascii -le 90 ]]; then\n            (( result\
    \ += ascii ))\n        fi\n    done\n\n    echo $result\n}\n\ncandidate() {\n\
    \    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate \"abcCd\"\
    ) = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate\
    \ \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n  \
    \  [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE\
    \ Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020296
- exit_code: 1
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    # digitSum(\"\") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n\
    # digitSum(\"helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\"\
    ) => 153\n#\n# $1 is a string\ndigitSum() {\n    if [ $# -eq 0 ]; then\n     \
    \   # $# is the number of arguments\n        echo 0\n    else\n        # first\
    \ argument $1\n        echo \"$1\" | tr -d [:lower:] | tr -cd [:alpha:] | sed\
    \ -e 's/A/1/g' -e 's/B/2/g' -e 's/C/3/g' -e 's/D/4/g' -e 's/E/5/g' -e 's/F/6/g'\
    \ -e 's/G/7/g' -e 's/H/8/g' -e 's/I/9/g' -e 's/J/10/g' -e 's/K/11/g' -e 's/L/12/g'\
    \ -e 's/M/13/g' -e 's/N/14/g' -e 's/O/15/g' -e 's/P/16/g' -e 's/Q/17/g' -e 's/R/18/g'\
    \ -e 's/S/19/g' -e 's/T/20/g' -e 's/U/21/g' -e 's/V/22/g' -e 's/W/23/g' -e 's/X/24/g'\
    \ -e 's/Y/25/g' -e 's/Z/26/g' | awk '{ sum=0; for(i=1;i<=NF;i++) { sum+=$i } print\
    \ sum }'\n    fi\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\"\
    \ ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\"\
    ) = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate\
    \ \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n\
    \    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020296
- exit_code: 0
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    # digitSum(\"\") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n\
    # digitSum(\"helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\"\
    ) => 153\n#\n# $1 is a string\ndigitSum() {\n    local total=0\n\n    for (( i=0;\
    \ i<${#1}; i++ )); do\n        local ch=${1:$i:1}\n        local int=$(printf\
    \ '%d' \"'$ch\")\n        ((int >= 65 && int <= 90)) && ((total += int))\n   \
    \ done\n\n    echo $total\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\"\
    ) = \"131\" ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate\
    \ \"helloE\") = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[\
    \ $(candidate \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\"\
    ) = \"151\" ]]\n    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020296
- exit_code: 1
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    # digitSum(\"\") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n\
    # digitSum(\"helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\"\
    ) => 153\n#\n# $1 is a string\ndigitSum() {\n\techo \"$1\" | grep -o \"[A-Z]\"\
    \ | awk '{sum+=$1} END {print sum}'\n}\n\ncandidate() {\n    digitSum \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abAB\") = \"131\" ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate\
    \ \"helloE\") = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[\
    \ $(candidate \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\"\
    ) = \"151\" ]]\n    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020296
- exit_code: 1
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    # digitSum(\"\") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n\
    # digitSum(\"helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\"\
    ) => 153\n#\n# $1 is a string\ndigitSum() {\n    echo $1 | sed 's/[^A-Z]//g' |\
    \ grep -o . | awk '{s=s+$1} END {print s}'\n}\n\ncandidate() {\n    digitSum \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abAB\") = \"131\" ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate\
    \ \"helloE\") = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[\
    \ $(candidate \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\"\
    ) = \"151\" ]]\n    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020296
- exit_code: 1
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    # digitSum(\"\") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n\
    # digitSum(\"helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\"\
    ) => 153\n#\n# $1 is a string\ndigitSum() {\n    echo \"$1\" | tr -cd '[:upper:]'\
    \ | grep -o . | awk '{s+=$1} END {print s}'\n}\n\ncandidate() {\n    digitSum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate \"abcCd\") = \"67\"\
    \ ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate \"woArBld\"\
    ) = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate\
    \ \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE Very Smart\")\
    \ = \"327\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020296
- exit_code: 1
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    # digitSum(\"\") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n\
    # digitSum(\"helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\"\
    ) => 153\n#\n# $1 is a string\ndigitSum() {\n    echo \"${1^^}\" | grep -o \"\
    [A-Z]\" | {\n    local sum=0\n    while read -r char; do\n        (( sum += \"\
    ${char}\" ))\n    done\n    echo \"$sum\"\n    }\n}\n\ncandidate() {\n    digitSum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abAB\") = \"131\" ]]\n    [[ $(candidate \"abcCd\") = \"67\"\
    \ ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n    [[ $(candidate \"woArBld\"\
    ) = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate\
    \ \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate \"You arE Very Smart\")\
    \ = \"327\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020296
- exit_code: 1
  program: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
    \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n\
    # digitSum(\"\") => 0\n# digitSum(\"abAB\") => 131\n# digitSum(\"abcCd\") => 67\n\
    # digitSum(\"helloE\") => 69\n# digitSum(\"woArBld\") => 131\n# digitSum(\"aAaaaXa\"\
    ) => 153\n#\n# $1 is a string\ndigitSum() {\n    # convert the string to an array\
    \ of the letters\n    array=($(echo $1 | fold -w1))\n    # -le is a less than\
    \ or equal to operator\n    local total=0\n    for value in ${array[@]}; do\n\
    \        if [ $(printf \"%d\" \"'$value\") -le $(printf \"%d\" \"'Z\") ]; then\n\
    \            total=$((total + $(printf \"%d\" \"'$value\")))\n        fi\n   \
    \ done\n    echo $total\n}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\"\
    ) = \"131\" ]]\n    [[ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate\
    \ \"helloE\") = \"69\" ]]\n    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[\
    \ $(candidate \"aAaaaXa\") = \"153\" ]]\n    [[ $(candidate \" How are yOu?\"\
    ) = \"151\" ]]\n    [[ $(candidate \"You arE Very Smart\") = \"327\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020296

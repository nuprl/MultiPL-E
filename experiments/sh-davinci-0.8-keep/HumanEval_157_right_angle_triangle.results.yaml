language: sh
name: HumanEval_157_right_angle_triangle
results:
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n    # place your code here\n    if [[ \"$1\" -gt \"\
    $2\" && \"$1\" -gt \"$3\" ]]; then\n        if [[ \"$(( $1 * $1 ))\" -eq \"$((\
    \ $2 * $2 + $3 * $3 ))\" ]]; then\n            echo True\n        else\n     \
    \       echo False\n        fi\n    elif [[ \"$2\" -gt \"$1\" && \"$2\" -gt \"\
    $3\" ]]; then\n        if [[ \"$(( $2 * $2 ))\" -eq \"$(( $1 * $1 + $3 * $3 ))\"\
    \ ]]; then\n            echo True\n        else\n            echo False\n    \
    \    fi\n    elif [[ \"$3\" -gt \"$1\" && \"$3\" -gt \"$2\" ]]; then\n       \
    \ if [[ \"$(( $3 * $3 ))\" -eq \"$(( $1 * $1 + $2 * $2 ))\" ]]; then\n       \
    \     echo True\n        else\n            echo False\n        fi\n    else\n\
    \        echo False\n    fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020425
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n  if (( $1 ** 2 + $2 ** 2 == $3 ** 2 ))\n  then\n  \
    \  echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020425
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n  if [[ $1 -eq $2 && $2 -eq $3 ]]; then\n    echo False\n\
    \  elif [[ $1 -eq $2 && $2 -gt $3 ]]; then\n    echo False\n  elif [[ $1 -eq $3\
    \ && $3 -gt $2 ]]; then\n    echo False\n  elif [[ $2 -eq $3 && $3 -gt $1 ]];\
    \ then\n    echo False\n  elif [[ $1 -gt $2 && $2 -gt $3 ]]; then\n    if [[ $(($1\
    \ * $1)) -eq $(($2 * $2 + $3 * $3)) ]]; then\n      echo True\n    else\n    \
    \  echo False\n    fi\n  elif [[ $1 -gt $3 && $3 -gt $2 ]]; then\n    if [[ $(($1\
    \ * $1)) -eq $(($2 * $2 + $3 * $3)) ]]; then\n      echo True\n    else\n    \
    \  echo False\n    fi\n  elif [[ $2 -gt $1 && $1 -gt $3 ]]; then\n    if [[ $(($2\
    \ * $2)) -eq $(($1 * $1 + $3 * $3)) ]]; then\n      echo True\n    else\n    \
    \  echo False\n    fi\n  elif [[ $2 -gt $3 && $3 -gt $1 ]]; then\n    if [[ $(($2\
    \ * $2)) -eq $(($1 * $1 + $3 * $3)) ]]; then\n      echo True\n    else\n    \
    \  echo False\n    fi\n  elif [[ $3 -gt $1 && $1 -gt $2 ]]; then\n    if [[ $(($3\
    \ * $3)) -eq $(($1 * $1 + $2 * $2)) ]]; then\n      echo True\n    else\n    \
    \  echo False\n    fi\n  elif [[ $3 -gt $2 && $2 -gt $1 ]]; then\n    if [[ $(($3\
    \ * $3)) -eq $(($1 * $1 + $2 * $2)) ]]; then\n      echo True\n    else\n    \
    \  echo False\n    fi\n  fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020425
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n  if (( $1**2 + $2**2 == $3**2 ))\n  then\n    return\
    \ 0\n  else\n    return 1\n  fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020425
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n  local a=$1\n  local b=$2\n  local c=$3\n  # The triangle\
    \ inequality states that the sum of the lengths of any two sides\n  # of a triangle\
    \ is greater than the length of the third side.\n  # http://mathworld.wolfram.com/TriangleInequality.html\n\
    \  if [ $(($a + $b)) -gt $c ] && [ $(($a + $c)) -gt $b ] && [ $(($b + $c)) -gt\
    \ $a ]; then\n    return 0\n  else\n    return 1\n  fi\n}\n\ncandidate() {\n \
    \   right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020425
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n    if [ $# -ne 3 ]; then\n        echo \"wrong input\"\
    \n        return\n    fi\n    if [ $1 -eq 0 -o $2 -eq 0 -o $3 -eq 0 ]; then\n\
    \        echo \"wrong input\"\n        return\n    fi\n    if [ $1 -eq $2 -a $2\
    \ -eq $3 ]; then\n        echo \"true\"\n        return\n    fi\n    a=$(echo\
    \ \"scale=2; $1^2\" | bc)\n    b=$(echo \"scale=2; $2^2\" | bc)\n    c=$(echo\
    \ \"scale=2; $3^2\" | bc)\n    if [ $(echo \"$a+$b\" | bc) -eq $c ]; then\n  \
    \      echo \"true\"\n        return\n    fi\n    if [ $(echo \"$a+$c\" | bc)\
    \ -eq $b ]; then\n        echo \"true\"\n        return\n    fi\n    if [ $(echo\
    \ \"$b+$c\" | bc) -eq $a ]; then\n        echo \"true\"\n        return\n    fi\n\
    \    echo \"false\"\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020425
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n    if [ $1 -gt 0 ] && [ $2 -gt 0 ] && [ $3 -gt 0 ];\
    \ then\n        if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n            # 3 equal\
    \ sides is an equilateral triangle\n            echo 'False'\n        elif [ $1\
    \ -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n            # 2 equal sides\
    \ is an isosceles triangle\n            echo 'False'\n        else\n         \
    \   # May be an right angled triangle.\n            # Let us see...\n        \
    \    # Start by finding the hypotenuse.\n            if [ $1 -gt $2 ] && [ $1\
    \ -gt $3 ]; then\n                # $1 is the hypotenuse\n                if [\
    \ $1 -eq $(($2**2 + $3**2)) ]; then\n                    echo 'True'\n       \
    \         else\n                    echo 'False'\n                fi\n       \
    \     elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n                # $2 is the hypotenuse\n\
    \                if [ $2 -eq $(($1**2 + $3**2)) ]; then\n                    echo\
    \ 'True'\n                else\n                    echo 'False'\n           \
    \     fi\n            elif [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n            \
    \    # $3 is the hypotenuse\n                if [ $3 -eq $(($1**2 + $2**2)) ];\
    \ then\n                    echo 'True'\n                else\n              \
    \      echo 'False'\n                fi\n            fi\n        fi\n    else\n\
    \        echo 'False'\n    fi\n}\n\ncandidate() {\n    right_angle_triangle \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020425
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n    if (($1**2 + $2**2 == $3**2)); then\n        echo\
    \ \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n   \
    \ right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020425
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n    # A right-angled triangle has the property that\
    \ the square of the longest\n    # side is equal to the sum of the squares of\
    \ the other two sides.\n    # Here, the longest side is the first argument and\
    \ the other two are \n    # passed as an array of the remaining arguments.\n \
    \   longest_side=$1\n    other_sides=(\"${@:2}\")\n\n    # Adding the squares\
    \ of the other two sides.\n    sum_of_squares=$(( other_sides[0]**2 + other_sides[1]**2\
    \ ))\n\n    # Check if the first argument is the longest side and if its square\
    \ is \n    # equal to the sum of the squares of the other two sides.\n    if [[\
    \ longest_side**2 -eq sum_of_squares ]]; then\n        echo \"True\"\n    else\n\
    \        echo \"False\"\n    fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020425
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n    let a=$1\n    let b=$2\n    let c=$3\n    if [ $a\
    \ -eq $b -a $b -eq $c ]; then\n        return 0\n    elif [ $a -lt $b -a $b -lt\
    \ $c ]; then\n        let a2=$a*$a\n        let b2=$b*$b\n        let c2=$c*$c\n\
    \        if [ $a2 -eq $b2 -a $b2 -eq $c2 ]; then\n            return 0\n     \
    \   fi\n    fi\n    return 1\n}\n\ncandidate() {\n    right_angle_triangle \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020425
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n\tif (( $# != 3 )); then\n\t\treturn 1\n\tfi\n\tif ((\
    \ $1 <= 0 )) || (( $2 <= 0 )) || (( $3 <= 0 )); then\n\t\treturn 1\n\tfi\n\tif\
    \ (( $1 >= $2 )) && (( $1 >= $3 )); then\n\t\tif (( $1**2 == $2**2 + $3**2 ));\
    \ then\n\t\t\treturn 0\n\t\tfi\n\telif (( $2 >= $1 )) && (( $2 >= $3 )); then\n\
    \t\tif (( $2**2 == $1**2 + $3**2 )); then\n\t\t\treturn 0\n\t\tfi\n\telif (( $3\
    \ >= $1 )) && (( $3 >= $2 )); then\n\t\tif (( $3**2 == $1**2 + $2**2 )); then\n\
    \t\t\treturn 0\n\t\tfi\n\tfi\n\treturn 1\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020425
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n    local _a=$1\n    local _b=$2\n    local _c=$3\n\
    \    if (( $1 == 0 || $2 == 0 || $3 == 0 )); then\n        echo False\n    else\n\
    \        # Pythagorean theorem\n        if (( $_a ** 2 + $_b ** 2 == $_c ** 2\
    \ ||\n              $_a ** 2 + $_c ** 2 == $_b ** 2 ||\n              $_b ** 2\
    \ + $_c ** 2 == $_a ** 2 )); then\n            echo True\n        else\n     \
    \       echo False\n        fi\n    fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020425
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n  if [ $1 -gt 0 ] && [ $2 -gt 0 ] && [ $3 -gt 0 ]; then\n\
    \    if [ $(($1**2)) -eq $(($2**2 + $3**2)) ] || \\\n       [ $(($2**2)) -eq $(($1**2\
    \ + $3**2)) ] || \\\n       [ $(($3**2)) -eq $(($1**2 + $2**2)) ]; then\n    \
    \  echo \"True\"\n    else\n      echo \"False\"\n    fi\n  else\n    echo \"\
    False\"\n  fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") =\
    \ \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020425
- exit_code: 2
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n  if [ $# -eq 3 ]; then\n    # Greater Than\n    if\
    \ [ $1 -gt $2 ]; then\n      # Greater Than\n      if [ $1 -gt $3 ]; then\n  \
    \      # Greater Than\n        if [ $2 -gt $3 ]; then\n          if [ $(($1 *\
    \ $1)) -eq $(($2 * $2 + $3 * $3)) ]; then\n            echo \"True\"\n       \
    \   else\n            echo \"False\"\n          fi\n        else\n          if\
    \ [ $(($1 * $1)) -eq $(($3 * $3 + $2 * $2)) ]; then\n            echo \"True\"\
    \n          else\n            echo \"False\"\n          fi\n        fi\n     \
    \ else\n        # Greater Than\n        if [ $3 -gt $2 ]; then\n          if [\
    \ $(($1 * $1)) -eq $(($3 * $3 + $2 * $2)) ]; then\n            echo \"True\"\n\
    \          else\n            echo \"False\"\n          fi\n        else\n    \
    \      if [ $(($1 * $1)) -eq $(($2 * $2 + $3 * $3)) ]; then\n            echo\
    \ \"True\"\n          else\n            echo \"False\"\n          fi\n       \
    \ fi\n      fi\n    else\n      # Greater Than\n      if [ $2 -gt $3 ]; then\n\
    \        # Greater Than\n        if [ $1 -gt $3 ]; then\n          if [ $(($2\
    \ * $2)) -eq $(($1 * $1 + $3 * $3)) ]; then\n            echo \"True\"\n     \
    \     else\n            echo \"False\"\n          fi\n        else\n         \
    \ if [ $(($2 * $2)) -eq $(($3 * $3 + $1 * $1)) ]; then\n            echo \"True\"\
    \n          else\n            echo \"False\"\n          fi\n        fi\n     \
    \ else\n        # Greater Than\n        if [ $3 -gt $1 ]; then\n          if [\
    \ $(($2 * $2)) -eq $(($3 * $3 + $1 * $1)) ]; then\n            echo \"True\"\n\
    \          else\n            echo \"False\"\n          fi\n        else\n    \
    \      if [ $(($2 * $2)) -eq $(($1 * $1 + $3 * $3)) ];\n}\n\ncandidate() {\n \
    \   right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpde5j5a95.sh: line 76: syntax error near unexpected token `}''

    /tmp/tmpde5j5a95.sh: line 76: `}''

    '
  stdout: ''
  timestamp: 1660020425
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n    if (( $(echo \"$1^2 + $2^2\" | bc) == $(echo \"\
    $3^2\" | bc) )); then\n        echo True\n    else\n        echo False\n    fi\n\
    }\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020425
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n  return_value=False\n  declare -A pythagoras=(\n  \
    \  [3,4,5]=0\n    [6,8,10]=0\n    [5,12,13]=0\n    [9,12,15]=0\n    [8,15,17]=0\n\
    \    [12,16,20]=0\n    [15,20,25]=0\n    [7,24,25]=0\n    [10,24,26]=0\n    [20,21,29]=0\n\
    \    [18,24,30]=0\n    [16,30,34]=0\n    [21,28,35]=0\n    [12,35,37]=0\n    [15,36,39]=0\n\
    \    [9,40,41]=0\n    [27,36,45]=0\n    [14,48,50]=0\n    [11,60,61]=0\n    [33,56,65]=0\n\
    \    [16,63,65]=0\n    [48,55,73]=0\n    [13,84,85]=0\n    [36,77,85]=0\n    [39,80,89]=0\n\
    \    [65,72,97]=0\n  )\n  for key in \"${!pythagoras[@]}\"; do\n    sides=(${key//,/\
    \ })\n    if [[ ($1 == ${sides[0]}) && ($2 == ${sides[1]}) && ($3 == ${sides[2]})\
    \ ]]; then\n      return_value=True\n      break\n    fi\n  done\n  echo $return_value\n\
    }\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020425
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n  local hypotenuse=$1\n  local side1=$2\n  local side2=$3\n\
    \  if [[ $side1 -gt $hypotenuse ]]; then\n    local temp=$side1\n    side1=$hypotenuse\n\
    \    hypotenuse=$temp\n  fi\n  if [[ $side2 -gt $hypotenuse ]]; then\n    local\
    \ temp=$side2\n    side2=$hypotenuse\n    hypotenuse=$temp\n  fi\n  # https://en.wikipedia.org/wiki/Pythagorean_theorem\n\
    \  if [[ $((side1*side1+side2*side2)) -eq $((hypotenuse*hypotenuse)) ]]; then\n\
    \    echo True\n  else\n    echo False\n  fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020425
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n    local first=$1\n    local second=$2\n    local third=$3\n\
    \    if [[ $first -gt 0 && $second -gt 0 && $third -gt 0 ]]; then\n        if\
    \ [[ $first == $second && $second == $third ]]; then\n            return 0\n \
    \       elif [[ $first == $second || $second == $third || $first == $third ]];\
    \ then\n            return 1\n        else\n            return 1\n        fi\n\
    \    else\n        return 1\n    fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020425
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n    local a=$1 b=$2 c=$3\n    local max=0\n    if [\
    \ $a -gt $b ]; then\n        max=$a\n    else\n        max=$b\n    fi\n    if\
    \ [ $max -lt $c ]; then\n        max=$c\n    fi\n    if [ $(expr $a \\* $a + $b\
    \ \\* $b) -eq $(expr $c \\* $c) ] || \\\n        [ $(expr $a \\* $a + $c \\* $c)\
    \ -eq $(expr $b \\* $b) ] || \\\n        [ $(expr $b \\* $b + $c \\* $c) -eq $(expr\
    \ $a \\* $a) ]; then\n        echo \"True\"\n    else\n        echo \"False\"\n\
    \    fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"\
    1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020425
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# right_angle_triangle(3, 4, 5) == True\n# right_angle_triangle(1,\
    \ 2, 3) == False\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\n\
    right_angle_triangle() {\n    local a=\"$1\"\n    local b=\"$2\"\n    local c=\"\
    $3\"\n    local hyp=$(python -c \"print($a*$a + $b*$b)\")\n    local ac=$(python\
    \ -c \"print($c*$c)\")\n    #echo \"a=$a, b=$b, c=$c, hyp=$hyp, ac=$ac\"\n   \
    \ if [[ $hyp -eq $ac ]]; then\n        echo \"True\"\n    else\n        echo \"\
    False\"\n    fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"\
    6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n\
    \    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"\
    10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"\
    true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate\
    \ \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020425

language: sh
name: HumanEval_152_compare
results:
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n  local -a a=($1)\n  local -a b=($2)\n  for ((i=0; i<${#a[@]};\
    \ i++)); do\n    if [ \"${a[$i]}\" -gt \"${b[$i]}\" ]; then\n      echo \"$((\
    \ ${a[$i]} - ${b[$i]} ))\"\n    else\n      echo \"$(( ${b[$i]} - ${a[$i]} ))\"\
    \n    fi\n  done\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020462
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    ans=()\n    i=0\n    while [ $i -lt ${#1[@]} ]; do\n\
    \        ans+=(\"$(( ${1[$i]} - ${2[$i]} ))\")\n        ((i++))\n    done\n  \
    \  echo \"${ans[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpr7h89kc_.sh: line 18: ${#1[@]}: bad substitution

    '
  stdout: ''
  timestamp: 1660020462
- exit_code: 2
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    # write your code here\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmptoov6_kq.sh: line 17: syntax error near unexpected token `}''

    /tmp/tmptoov6_kq.sh: line 17: `}''

    '
  stdout: ''
  timestamp: 1660020462
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    arr1=( $1 )\n    arr2=( $2 )\n    result=()\n    for\
    \ i in \"${!arr1[@]}\"; do\n        if [ \"${arr1[$i]}\" = \"${arr2[$i]}\" ];\
    \ then\n            result[i]=0\n        else\n            result[i]=$((arr1[$i]-arr2[$i]))\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    compare\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2\
    \ 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0\
    \ 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") =\
    \ \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020462
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n  local score=($1)\n  local guess=($2)\n  local result=()\n\
    \  for ((i=0; i<${#score[@]}; i++)); do\n    echo $((${score[$i]}-${guess[$i]}))\n\
    \  done\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n  \
    \  [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[\
    \ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2\
    \ 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020462
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n\t# write your code here\n\tfor i in $1; do\n\t\techo -n\
    \ \"$i \"\n\tdone\n\n\techo\n\tfor i in $2; do\n\t\techo -n \"$i \"\n\tdone\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020462
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    #your code here\n    # TODO: handle malformed input\n\
    \    local -a score=($1)\n    local -a guess=($2)\n    local -a results=()\n \
    \   local i=0\n    for i in ${!score[@]}; do\n        local result=${score[$i]}-${guess[$i]}\n\
    \        if [[ ${result} -lt 0 ]]; then\n            result=${result#-}\n    \
    \    fi\n        results+=(\"${result}\")\n    done\n    echo \"${results[@]}\"\
    \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020462
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local _s\n    for _s in $1; do\n        echo -n \"$_s\
    \ \"\n    done\n    echo\n    for _s in $2; do\n        echo -n \"$_s \"\n   \
    \ done\n    echo\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020462
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n\tif [[ ${#1[@]} -ne ${#2[@]} ]]; then\n\t\techo 'lists must\
    \ be of equal length'\n\t\treturn 1\n\tfi\n\tlocal -a retval=()\n\tlocal -a values1=($1)\n\
    \tlocal -a values2=($2)\n\tfor (( i=0; i<${#values1[@]}; i++ )); do\n\t\tif [[\
    \ ${values1[$i]} -eq ${values2[$i]} ]]; then\n\t\t\tretval+=(0)\n\t\telse\n\t\t\
    \tretval+=($(( ${values1[$i]} - ${values2[$i]} )))\n\t\tfi\n\tdone\n\techo ${retval[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpfqw622ba.sh: line 16: ${#1[@]}: bad substitution

    '
  stdout: ''
  timestamp: 1660020462
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n  for x in $1; do\n    echo -n $(( $x - ${2%% *} )) ' '\n\
    \    shift\n  done\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpcugr2osz.sh: line 17: 2 -  : syntax error: operand expected (error
    token is "-  ")

    '
  stdout: ''
  timestamp: 1660020462
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local IFS=\" \"\n    local -a a1=($1)\n    local -a a2=($2)\n\
    \    local -a ret\n    local index\n    #\n    # foreach a1\n    #    1) get index\
    \ of a1\n    #    2) if a1[index] != a2[index]\n    #        then ret[index] =\
    \ abs(a1[index] - a2[index])\n    #        else ret[index] = 0\n    # print ret\n\
    \    for index in \"${!a1[@]}\"; do\n        if [[ \"${a1[$index]}\" -ne \"${a2[$index]}\"\
    \ ]]; then\n            ret[$index]=$((${a1[$index]} - ${a2[$index]}))\n     \
    \   else\n            ret[$index]=0\n        fi\n    done\n    echo \"${ret[@]}\"\
    \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020462
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n  local IFS=' '\n  local arr1=($1)\n  local arr2=($2)\n \
    \ local result=()\n  # iterate over the first array\n  for i in \"${!arr1[@]}\"\
    ; do\n    # the value of each element\n    # is the absolute difference\n    #\
    \ between the values of the\n    # same position in the second array\n    result[i]=$(\
    \ echo ${arr1[i]} ${arr2[i]} | awk '{ printf(\"%d\", $1>$2?$1-$2:$2-$1) }' )\n\
    \  done\n  # print the result\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n \
    \   compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\
    \ 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\"\
    \ \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2\
    \ -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0\
    \ 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020462
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    # get length\n    len=$(echo $1 | wc -w)\n    # split\
    \ into arrays\n    IFS=\" \" read -r -a arr1 <<< \"$1\"\n    IFS=\" \" read -r\
    \ -a arr2 <<< \"$2\"\n    # iterate through the arrays\n    for (( i=0; i<$len;\
    \ i++ )); do\n        # keep the shorter one\n        a=${arr1[$i]}\n        b=${arr2[$i]}\n\
    \        if [[ $a -lt $b ]]; then\n            # a is the smaller one\n      \
    \      arr1[$i]=$a\n            arr2[$i]=$a\n        else\n            # b is\
    \ the smaller one\n            arr1[$i]=$b\n            arr2[$i]=$b\n        fi\n\
    \    done\n    # show the results\n    echo \"${arr1[@]}\"\n    echo \"${arr2[@]}\"\
    \n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020462
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local -n list_scores=$1\n    local -n list_guesses=$2\n\
    \    local -a list_results=()\n    local i\n    local result\n    for ((i=0; i<${#list_scores[@]};\
    \ i++)); do\n        result=$(( ${list_scores[$i]} - ${list_guesses[$i]} ))\n\
    \        result=${result#-} # remove the minus sign and make it positive\n   \
    \     list_results+=($result)\n    done\n    echo \"${list_results[@]}\"\n}\n\n\
    candidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpscp3u799.sh: line 16: local: `1 2 3 4 5 1'': invalid variable name
    for name reference

    /tmp/tmpscp3u799.sh: line 17: local: `1 2 3 4 2 -2'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660020462
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n  arr1=($1)\n  arr2=($2)\n  for (( i=0; i<${#arr1[@]}; i++\
    \ )); do\n    printf '%d ' \"$(( ${arr1[$i]} - ${arr2[$i]} ))\"\n  done\n  echo\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660020462
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n  local res=()\n  local IFS=\" \"\n  local guess=($1)\n \
    \ local score=($2)\n  local length=${#guess[@]}\n  local i\n  for ((i=0; i<length;\
    \ i++)); do\n    if [[ ${guess[$i]} -eq ${score[$i]} ]]; then\n      res+=(\"\
    0\")\n    else\n      res+=(\"$((${guess[$i]} - ${score[$i]}))\")\n    fi\n  done\n\
    \  echo \"${res[@]}\"\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n\
    \    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n  \
    \  [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"\
    1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020462
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    [[ \"$#\" -ne 2 ]] && return 1\n    local -a s=($1)\n\
    \    local -a g=($2)\n    local -a r=()\n    local l=\"${#s[@]}\"\n    for ((i=0;\
    \ i<l; i++)); do\n        r+=($(echo ${s[$i]} ${g[$i]} | awk '{ print ($1 < $2)\
    \ ? $2 - $1 : $1 - $2 }'))\n    done\n    echo ${r[@]}\n}\n\ncandidate() {\n \
    \   compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\
    \ 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\"\
    \ \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2\
    \ -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0\
    \ 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020462
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n\ta=(\"$@\")\n\tb=(\"$@\")\n\t#echo ${a[@]}\n\t#echo ${b[@]}\n\
    \tfor ((i=0; i<${#a[@]}; i++)); do\n\t\tb[$i]=$(( ${a[$i]} - ${b[$i]} ))\n\t\t\
    b[$i]=$(( ${b[$i]} < 0 ? -${b[$i]} : ${b[$i]} ))\n\tdone\n\techo ${b[@]}\n}\n\n\
    candidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpy1pgbtvh.sh: line 21: 1 2 3 4 5 1 - 1 2 3 4 5 1 : syntax error
    in expression (error token is "2 3 4 5 1 - 1 2 3 4 5 1 ")

    '
  stdout: ''
  timestamp: 1660020462
- exit_code: 1
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    for (( i=0; i<${#1}; i++ ))\n    do\n        # substract\
    \ the i-th element of $1 from the i-th element of $2\n        # abs() returns\
    \ the absolute value of a number\n        printf \"%d \" \"$(abs $[ ${1% *} -\
    \ ${2% *} ])\"\n        # remove the first elements of each array\n        1=${1#*\
    \ }\n        2=${2#* }\n    done\n}\n\ncandidate() {\n    compare \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"\
    0 0 0 0 3 3\" ]]\n    [[ $(candidate \"0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0\
    \ 0 0 0 0\" ]]\n    [[ $(candidate \"1 2 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n  \
    \  [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\") = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmprouzds9v.sh: line 20: 1 2 3 4 5 - 1 2 3 4 2 : syntax error in expression
    (error token is "2 3 4 5 - 1 2 3 4 2 ")

    /tmp/tmprouzds9v.sh: line 22: 1=2: command not found

    /tmp/tmprouzds9v.sh: line 23: 2=2: command not found

    /tmp/tmprouzds9v.sh: line 20: 1 2 3 4 5 - 1 2 3 4 2 : syntax error in expression
    (error token is "2 3 4 5 - 1 2 3 4 2 ")

    /tmp/tmprouzds9v.sh: line 22: 1=2: command not found

    /tmp/tmprouzds9v.sh: line 23: 2=2: command not found

    /tmp/tmprouzds9v.sh: line 20: 1 2 3 4 5 - 1 2 3 4 2 : syntax error in expression
    (error token is "2 3 4 5 - 1 2 3 4 2 ")

    /tmp/tmprouzds9v.sh: line 22: 1=2: command not found

    /tmp/tmprouzds9v.sh: line 23: 2=2: command not found

    /tmp/tmprouzds9v.sh: line 20: 1 2 3 4 5 - 1 2 3 4 2 : syntax error in expression
    (error token is "2 3 4 5 - 1 2 3 4 2 ")

    /tmp/tmprouzds9v.sh: line 22: 1=2: command not found

    /tmp/tmprouzds9v.sh: line 23: 2=2: command not found

    /tmp/tmprouzds9v.sh: line 20: 1 2 3 4 5 - 1 2 3 4 2 : syntax error in expression
    (error token is "2 3 4 5 - 1 2 3 4 2 ")

    /tmp/tmprouzds9v.sh: line 22: 1=2: command not found

    /tmp/tmprouzds9v.sh: line 23: 2=2: command not found

    /tmp/tmprouzds9v.sh: line 20: 1 2 3 4 5 - 1 2 3 4 2 : syntax error in expression
    (error token is "2 3 4 5 - 1 2 3 4 2 ")

    /tmp/tmprouzds9v.sh: line 22: 1=2: command not found

    /tmp/tmprouzds9v.sh: line 23: 2=2: command not found

    /tmp/tmprouzds9v.sh: line 20: 1 2 3 4 5 - 1 2 3 4 2 : syntax error in expression
    (error token is "2 3 4 5 - 1 2 3 4 2 ")

    /tmp/tmprouzds9v.sh: line 22: 1=2: command not found

    /tmp/tmprouzds9v.sh: line 23: 2=2: command not found

    /tmp/tmprouzds9v.sh: line 20: 1 2 3 4 5 - 1 2 3 4 2 : syntax error in expression
    (error token is "2 3 4 5 - 1 2 3 4 2 ")

    /tmp/tmprouzds9v.sh: line 22: 1=2: command not found

    /tmp/tmprouzds9v.sh: line 23: 2=2: command not found

    /tmp/tmprouzds9v.sh: line 20: 1 2 3 4 5 - 1 2 3 4 2 : syntax error in expression
    (error token is "2 3 4 5 - 1 2 3 4 2 ")

    /tmp/tmprouzds9v.sh: line 22: 1=2: command not found

    /tmp/tmprouzds9v.sh: line 23: 2=2: command not found

    /tmp/'
  stdout: ''
  timestamp: 1660020462
- exit_code: 0
  program: "#!/bin/bash\n# I think we all remember that feeling when the result of\
    \ some long-awaited\n# event is finally known. The feelings and thoughts you have\
    \ at that moment are\n# definitely worth noting down and comparing.\n# Your task\
    \ is to determine if a person correctly guessed the results of a number of matches.\n\
    # You are given two arrays of scores and guesses of equal length, where each index\
    \ shows a match. \n# Return an array of the same length denoting how far off each\
    \ guess was. If they have guessed correctly,\n# the value is 0, and if not, the\
    \ value is the absolute difference between the guess and the score.\n# example:\n\
    # compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n# compare([0,5,0,0,0,4],[4,1,1,0,0,-2])\
    \ -> [4,4,1,0,0,6]\n#\n# $1 is a space-separated list\n# $2 is a space-separated\
    \ list\ncompare() {\n    local -a scores=( $1 )\n    local -a guesses=( $2 )\n\
    \    local -a diffs\n    local i\n    for (( i=0; i<${#scores[@]}; i++ )); do\n\
    \        diffs[i]=$(( ${scores[i]} - ${guesses[i]} ))\n    done\n    echo ${diffs[@]}\n\
    }\n\ncandidate() {\n    compare \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4 5 1\" \"1 2 3 4 2 -2\") = \"0 0 0 0 3 3\" ]]\n    [[ $(candidate \"\
    0 0 0 0 0 0\" \"0 0 0 0 0 0\") = \"0 0 0 0 0 0\" ]]\n    [[ $(candidate \"1 2\
    \ 3\" \"-1 -2 -3\") = \"2 4 6\" ]]\n    [[ $(candidate \"1 2 3 5\" \"-1 2 3 4\"\
    ) = \"2 0 0 1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660020462

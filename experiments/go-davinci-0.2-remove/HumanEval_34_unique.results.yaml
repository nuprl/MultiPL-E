language: go_test.go
name: HumanEval_34_unique
results:
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    m\
    \ := make(map[int]bool)\n    for _, i := range l {\n        m[i] = true\n    }\n\
    \    var r []int\n    for k, _ := range m {\n        r = append(r, k)\n    }\n\
    \    return r\n}\n\nfunc TestUnique(t *testing.T) {\n  candidate := unique\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpc4vgo93t_test.go:34: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=2) %!s(int=9)\
    \ %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    if\
    \ len(l) == 0 {\n        return l\n    }\n    var u []int\n    u = append(u, l[0])\n\
    \    for _, v := range l[1:] {\n        if v != u[len(u)-1] {\n            u =\
    \ append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmp26w2ozt3_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    if\
    \ len(l) == 0 {\n        return l\n    }\n    var u []int\n    u = append(u, l[0])\n\
    \    for _, v := range l[1:] {\n        if v != u[len(u)-1] {\n            u =\
    \ append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmp26w2ozt3_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 2
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if !contains(u, v) {\n         \
    \   u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpk4ze6vhy_test.go:12:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    if\
    \ len(l) == 0 {\n        return l\n    }\n    var u []int\n    u = append(u, l[0])\n\
    \    for _, v := range l[1:] {\n        if v != u[len(u)-1] {\n            u =\
    \ append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmp26w2ozt3_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if len(u) == 0 || v != u[len(u)-1]\
    \ {\n            u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpu0upyxvz_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    u\
    \ := make([]int, 0, len(l))\n    m := make(map[int]bool)\n\n    for _, val :=\
    \ range l {\n        if _, ok := m[val]; !ok {\n            m[val] = true\n  \
    \          u = append(u, val)\n        }\n    }\n\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpq6ufrt_8_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=2) %!s(int=9)\
    \ %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.007s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 2
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if !contains(u, v) {\n         \
    \   u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpk4ze6vhy_test.go:12:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if len(u) == 0 || v != u[len(u)-1]\
    \ {\n            u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpu0upyxvz_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if len(u) == 0 || v != u[len(u)-1]\
    \ {\n            u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpu0upyxvz_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, i := range l {\n        if len(u) == 0 || i != u[len(u)-1]\
    \ {\n            u = append(u, i)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpt3cnmjv7_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 2
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if !contains(u, v) {\n         \
    \   u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpk4ze6vhy_test.go:12:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if len(u) == 0 || v != u[len(u)-1]\
    \ {\n            u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpu0upyxvz_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, i := range l {\n        if len(u) == 0 || i != u[len(u)-1]\
    \ {\n            u = append(u, i)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpt3cnmjv7_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    if\
    \ len(l) == 0 {\n        return l\n    }\n    r := make([]int, 0, len(l))\n  \
    \  r = append(r, l[0])\n    for _, v := range l[1:] {\n        if v != r[len(r)-1]\
    \ {\n            r = append(r, v)\n        }\n    }\n    return r\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpvag80pkm_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 2
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if !contains(u, v) {\n         \
    \   u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpk4ze6vhy_test.go:12:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if len(u) == 0 || v != u[len(u)-1]\
    \ {\n            u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpu0upyxvz_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if len(u) == 0 || v != u[len(u)-1]\
    \ {\n            u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpu0upyxvz_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    if\
    \ len(l) == 0 {\n        return l\n    }\n    if len(l) == 1 {\n        return\
    \ l\n    }\n    var u []int\n    for i := 0; i < len(l); i++ {\n        if i ==\
    \ 0 {\n            u = append(u, l[i])\n        } else {\n            if l[i]\
    \ != l[i-1] {\n                u = append(u, l[i])\n            }\n        }\n\
    \    }\n    return u\n}\n\nfunc TestUnique(t *testing.T) {\n  candidate := unique\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpt5o6324r_test.go:42: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.009s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    if\
    \ len(l) == 0 {\n        return l\n    }\n    u := []int{l[0]}\n    for _, v :=\
    \ range l[1:] {\n        if v != u[len(u)-1] {\n            u = append(u, v)\n\
    \        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T) {\n  candidate\
    \ := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmp8vm7yh_l_test.go:35: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, i := range l {\n        if len(u) == 0 || i != u[len(u)-1]\
    \ {\n            u = append(u, i)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpt3cnmjv7_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 2
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if !contains(u, v) {\n         \
    \   u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpk4ze6vhy_test.go:12:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if len(u) == 0 || v != u[len(u)-1]\
    \ {\n            u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpu0upyxvz_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    if\
    \ len(l) == 0 {\n        return l\n    }\n    var u []int\n    u = append(u, l[0])\n\
    \    for _, v := range l[1:] {\n        if v != u[len(u)-1] {\n            u =\
    \ append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmp26w2ozt3_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if len(u) == 0 || v != u[len(u)-1]\
    \ {\n            u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpu0upyxvz_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    m\
    \ := make(map[int]bool)\n    for _, v := range l {\n        m[v] = true\n    }\n\
    \    var r []int\n    for k, _ := range m {\n        r = append(r, k)\n    }\n\
    \    return r\n}\n\nfunc TestUnique(t *testing.T) {\n  candidate := unique\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpppgvegcq_test.go:34: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=0) %!s(int=123) %!s(int=5) %!s(int=3)\
    \ %!s(int=2) %!s(int=9)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if len(u) == 0 || v != u[len(u)-1]\
    \ {\n            u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpu0upyxvz_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    if\
    \ len(l) == 0 {\n        return l\n    }\n    u := []int{l[0]}\n    for _, v :=\
    \ range l[1:] {\n        if v != u[len(u)-1] {\n            u = append(u, v)\n\
    \        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T) {\n  candidate\
    \ := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmp8vm7yh_l_test.go:35: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 2
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if !contains(u, v) {\n         \
    \   u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpk4ze6vhy_test.go:12:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    if\
    \ len(l) == 0 {\n        return l\n    }\n    var u []int\n    u = append(u, l[0])\n\
    \    for _, v := range l[1:] {\n        if v != u[len(u)-1] {\n            u =\
    \ append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmp26w2ozt3_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    m\
    \ := make(map[int]bool)\n    for _, v := range l {\n        m[v] = true\n    }\n\
    \    r := make([]int, 0, len(m))\n    for k, _ := range m {\n        r = append(r,\
    \ k)\n    }\n    return r\n}\n\nfunc TestUnique(t *testing.T) {\n  candidate :=\
    \ unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpkqevw2qw_test.go:34: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=2) %!s(int=9)\
    \ %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 2
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if !contains(u, v) {\n         \
    \   u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpk4ze6vhy_test.go:12:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if len(u) == 0 || v != u[len(u)-1]\
    \ {\n            u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpu0upyxvz_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 2
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if !contains(u, v) {\n         \
    \   u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpk4ze6vhy_test.go:12:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if len(u) == 0 || v != u[len(u)-1]\
    \ {\n            u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpu0upyxvz_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    if\
    \ len(l) == 0 {\n        return l\n    }\n    var u []int\n    u = append(u, l[0])\n\
    \    for _, e := range l[1:] {\n        if e != u[len(u)-1] {\n            u =\
    \ append(u, e)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmp17p09bky_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 2
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if !contains(u, v) {\n         \
    \   u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpk4ze6vhy_test.go:12:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if len(u) == 0 || v != u[len(u)-1]\
    \ {\n            u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpu0upyxvz_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if len(u) == 0 || v != u[len(u)-1]\
    \ {\n            u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpu0upyxvz_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    if\
    \ len(l) == 0 {\n        return l\n    }\n    var u []int\n    u = append(u, l[0])\n\
    \    for _, v := range l[1:] {\n        if v != u[len(u)-1] {\n            u =\
    \ append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmp26w2ozt3_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 2
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if !contains(u, v) {\n         \
    \   u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpk4ze6vhy_test.go:12:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if len(u) == 0 || v != u[len(u)-1]\
    \ {\n            u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpu0upyxvz_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 2
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if !contains(u, v) {\n         \
    \   u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpk4ze6vhy_test.go:12:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if len(u) == 0 || v != u[len(u)-1]\
    \ {\n            u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpu0upyxvz_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if len(u) == 0 || v != u[len(u)-1]\
    \ {\n            u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpu0upyxvz_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 2
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, x := range l {\n        if !contains(u, x) {\n         \
    \   u = append(u, x)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpsnd_gyw6_test.go:12:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if len(u) == 0 || v != u[len(u)-1]\
    \ {\n            u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpu0upyxvz_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if len(u) == 0 || v != u[len(u)-1]\
    \ {\n            u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpu0upyxvz_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    m\
    \ := make(map[int]bool)\n    for _, v := range l {\n        m[v] = true\n    }\n\
    \    var u []int\n    for k, _ := range m {\n        u = append(u, k)\n    }\n\
    \    return u\n}\n\nfunc TestUnique(t *testing.T) {\n  candidate := unique\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpvm95913p_test.go:34: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=9) %!s(int=0) %!s(int=123) %!s(int=5)\
    \ %!s(int=3) %!s(int=2)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    if\
    \ len(l) == 0 {\n        return l\n    }\n    var u []int\n    u = append(u, l[0])\n\
    \    for _, v := range l[1:] {\n        if v != u[len(u)-1] {\n            u =\
    \ append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmp26w2ozt3_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if len(u) == 0 || v != u[len(u)-1]\
    \ {\n            u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpu0upyxvz_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    if\
    \ len(l) == 0 {\n        return l\n    }\n    u := make([]int, 0, len(l))\n  \
    \  u = append(u, l[0])\n    for _, e := range l[1:] {\n        if e != u[len(u)-1]\
    \ {\n            u = append(u, e)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmp13bfg5bi_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if len(u) == 0 || v != u[len(u)-1]\
    \ {\n            u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpu0upyxvz_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if len(u) == 0 || v != u[len(u)-1]\
    \ {\n            u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpu0upyxvz_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    m\
    \ := make(map[int]bool)\n    for _, v := range l {\n        m[v] = true\n    }\n\
    \    var r []int\n    for k, _ := range m {\n        r = append(r, k)\n    }\n\
    \    return r\n}\n\nfunc TestUnique(t *testing.T) {\n  candidate := unique\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpppgvegcq_test.go:34: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=0) %!s(int=123) %!s(int=5) %!s(int=3)\
    \ %!s(int=2) %!s(int=9)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if len(u) == 0 || v != u[len(u)-1]\
    \ {\n            u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpu0upyxvz_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    if\
    \ len(l) == 0 {\n        return l\n    }\n    var u []int\n    u = append(u, l[0])\n\
    \    for _, v := range l[1:] {\n        if v != u[len(u)-1] {\n            u =\
    \ append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmp26w2ozt3_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if len(u) == 0 || v != u[len(u)-1]\
    \ {\n            u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpu0upyxvz_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 2
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, i := range l {\n        if !contains(u, i) {\n         \
    \   u = append(u, i)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp31od9fo__test.go:12:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074876
- exit_code: 2
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if !contains(u, v) {\n         \
    \   u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpk4ze6vhy_test.go:12:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074876
- exit_code: 2
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if !contains(u, v) {\n         \
    \   u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpk4ze6vhy_test.go:12:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    if\
    \ len(l) == 0 {\n        return l\n    }\n    var u []int\n    u = append(u, l[0])\n\
    \    for _, v := range l[1:] {\n        if v != u[len(u)-1] {\n            u =\
    \ append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmp26w2ozt3_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if len(u) == 0 || v != u[len(u)-1]\
    \ {\n            u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpu0upyxvz_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if len(u) == 0 || v != u[len(u)-1]\
    \ {\n            u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpu0upyxvz_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 2
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if !contains(u, v) {\n         \
    \   u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpk4ze6vhy_test.go:12:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    m\
    \ := make(map[int]bool)\n    for _, v := range l {\n        m[v] = true\n    }\n\
    \    var r []int\n    for k, _ := range m {\n        r = append(r, k)\n    }\n\
    \    return r\n}\n\nfunc TestUnique(t *testing.T) {\n  candidate := unique\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpppgvegcq_test.go:34: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=0) %!s(int=123) %!s(int=5) %!s(int=3)\
    \ %!s(int=2) %!s(int=9)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if len(u) == 0 || v != u[len(u)-1]\
    \ {\n            u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpu0upyxvz_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    m\
    \ := make(map[int]bool)\n    for _, v := range l {\n        m[v] = true\n    }\n\
    \    var r []int\n    for k, _ := range m {\n        r = append(r, k)\n    }\n\
    \    return r\n}\n\nfunc TestUnique(t *testing.T) {\n  candidate := unique\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpppgvegcq_test.go:34: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=0) %!s(int=123) %!s(int=5) %!s(int=3)\
    \ %!s(int=2) %!s(int=9)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    m\
    \ := make(map[int]bool)\n    for _, v := range l {\n        m[v] = true\n    }\n\
    \    var r []int\n    for k, _ := range m {\n        r = append(r, k)\n    }\n\
    \    return r\n}\n\nfunc TestUnique(t *testing.T) {\n  candidate := unique\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpppgvegcq_test.go:34: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=0) %!s(int=123) %!s(int=5) %!s(int=3)\
    \ %!s(int=2) %!s(int=9)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 2
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if !contains(u, v) {\n         \
    \   u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpk4ze6vhy_test.go:12:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, i := range l {\n        if len(u) == 0 || i != u[len(u)-1]\
    \ {\n            u = append(u, i)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpt3cnmjv7_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if len(u) == 0 || v != u[len(u)-1]\
    \ {\n            u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpu0upyxvz_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    m\
    \ := make(map[int]bool)\n    for _, v := range l {\n        m[v] = true\n    }\n\
    \    var u []int\n    for k, _ := range m {\n        u = append(u, k)\n    }\n\
    \    return u\n}\n\nfunc TestUnique(t *testing.T) {\n  candidate := unique\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpvm95913p_test.go:34: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=9) %!s(int=0) %!s(int=123) %!s(int=5)\
    \ %!s(int=3) %!s(int=2)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if len(u) == 0 || v != u[len(u)-1]\
    \ {\n            u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpu0upyxvz_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if len(u) == 0 || v != u[len(u)-1]\
    \ {\n            u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpu0upyxvz_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if len(u) == 0 || v != u[len(u)-1]\
    \ {\n            u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpu0upyxvz_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 2
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if !contains(u, v) {\n         \
    \   u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpk4ze6vhy_test.go:12:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    if\
    \ len(l) == 0 {\n        return []int{}\n    }\n    if len(l) == 1 {\n       \
    \ return l\n    }\n    var result []int\n    result = append(result, l[0])\n \
    \   for i := 1; i < len(l); i++ {\n        if l[i] != l[i-1] {\n            result\
    \ = append(result, l[i])\n        }\n    }\n    return result\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpi_8rx04k_test.go:39: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.008s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 2
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if !contains(u, v) {\n         \
    \   u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpk4ze6vhy_test.go:12:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    if\
    \ len(l) == 0 {\n        return l\n    }\n    var u []int\n    u = append(u, l[0])\n\
    \    for _, e := range l[1:] {\n        if e != u[len(u)-1] {\n            u =\
    \ append(u, e)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmp17p09bky_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 2
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, i := range l {\n        if !contains(u, i) {\n         \
    \   u = append(u, i)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp31od9fo__test.go:12:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    if\
    \ len(l) == 0 {\n        return l\n    }\n    var u []int\n    u = append(u, l[0])\n\
    \    for _, v := range l[1:] {\n        if v != u[len(u)-1] {\n            u =\
    \ append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmp26w2ozt3_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    m\
    \ := make(map[int]bool)\n    for _, v := range l {\n        m[v] = true\n    }\n\
    \    u := make([]int, 0, len(m))\n    for k, _ := range m {\n        u = append(u,\
    \ k)\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T) {\n  candidate :=\
    \ unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpq7imp95o_test.go:34: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=2) %!s(int=9) %!s(int=0) %!s(int=123)\
    \ %!s(int=5) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 2
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if !contains(u, v) {\n         \
    \   u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpk4ze6vhy_test.go:12:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if len(u) == 0 || v != u[len(u)-1]\
    \ {\n            u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpu0upyxvz_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 2
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if !contains(u, v) {\n         \
    \   u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpk4ze6vhy_test.go:12:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    if\
    \ len(l) == 0 {\n        return l\n    }\n    if len(l) == 1 {\n        return\
    \ l\n    }\n    var u []int\n    u = append(u, l[0])\n    for _, v := range l[1:]\
    \ {\n        if v != u[len(u)-1] {\n            u = append(u, v)\n        }\n\
    \    }\n    return u\n}\n\nfunc TestUnique(t *testing.T) {\n  candidate := unique\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmp_8v_r8g4_test.go:39: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    m\
    \ := make(map[int]bool)\n    for _, v := range l {\n        m[v] = true\n    }\n\
    \    r := make([]int, 0, len(m))\n    for k, _ := range m {\n        r = append(r,\
    \ k)\n    }\n    return r\n}\n\nfunc TestUnique(t *testing.T) {\n  candidate :=\
    \ unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpkqevw2qw_test.go:34: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=2) %!s(int=9)\
    \ %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    m\
    \ := make(map[int]bool)\n    for _, v := range l {\n        m[v] = true\n    }\n\
    \    var r []int\n    for k, _ := range m {\n        r = append(r, k)\n    }\n\
    \    return r\n}\n\nfunc TestUnique(t *testing.T) {\n  candidate := unique\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpppgvegcq_test.go:34: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=0) %!s(int=123) %!s(int=5) %!s(int=3)\
    \ %!s(int=2) %!s(int=9)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    m\
    \ := make(map[int]bool)\n    for _, v := range l {\n        m[v] = true\n    }\n\
    \    var r []int\n    for k, _ := range m {\n        r = append(r, k)\n    }\n\
    \    return r\n}\n\nfunc TestUnique(t *testing.T) {\n  candidate := unique\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpppgvegcq_test.go:34: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=0) %!s(int=123) %!s(int=5) %!s(int=3)\
    \ %!s(int=2) %!s(int=9)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if len(u) == 0 || v != u[len(u)-1]\
    \ {\n            u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpu0upyxvz_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 2
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if !contains(u, v) {\n         \
    \   u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpk4ze6vhy_test.go:12:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074876
- exit_code: 2
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if !contains(u, v) {\n         \
    \   u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpk4ze6vhy_test.go:12:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    m\
    \ := make(map[int]bool)\n    for _, v := range l {\n        m[v] = true\n    }\n\
    \    var u []int\n    for k, _ := range m {\n        u = append(u, k)\n    }\n\
    \    return u\n}\n\nfunc TestUnique(t *testing.T) {\n  candidate := unique\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpvm95913p_test.go:34: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=9) %!s(int=0) %!s(int=123) %!s(int=5)\
    \ %!s(int=3) %!s(int=2)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    if\
    \ len(l) == 0 {\n        return l\n    }\n    var u []int\n    u = append(u, l[0])\n\
    \    for _, e := range l[1:] {\n        if e != u[len(u)-1] {\n            u =\
    \ append(u, e)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmp17p09bky_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    m\
    \ := make(map[int]bool)\n    for _, v := range l {\n        m[v] = true\n    }\n\
    \    var u []int\n    for k, _ := range m {\n        u = append(u, k)\n    }\n\
    \    return u\n}\n\nfunc TestUnique(t *testing.T) {\n  candidate := unique\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpvm95913p_test.go:34: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=9) %!s(int=0) %!s(int=123) %!s(int=5)\
    \ %!s(int=3) %!s(int=2)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if len(u) == 0 || v != u[len(u)-1]\
    \ {\n            u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpu0upyxvz_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    m\
    \ := make(map[int]bool)\n    for _, v := range l {\n        m[v] = true\n    }\n\
    \    var u []int\n    for k, _ := range m {\n        u = append(u, k)\n    }\n\
    \    return u\n}\n\nfunc TestUnique(t *testing.T) {\n  candidate := unique\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpvm95913p_test.go:34: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=9) %!s(int=0) %!s(int=123) %!s(int=5)\
    \ %!s(int=3) %!s(int=2)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    if\
    \ len(l) == 0 {\n        return l\n    }\n    u := []int{l[0]}\n    for _, v :=\
    \ range l[1:] {\n        if v != u[len(u)-1] {\n            u = append(u, v)\n\
    \        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T) {\n  candidate\
    \ := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmp8vm7yh_l_test.go:35: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 2
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if !contains(u, v) {\n         \
    \   u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpk4ze6vhy_test.go:12:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074876
- exit_code: 2
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if !contains(u, v) {\n         \
    \   u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpk4ze6vhy_test.go:12:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074876
- exit_code: 2
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if !contains(u, v) {\n         \
    \   u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpk4ze6vhy_test.go:12:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074876
- exit_code: 2
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if !contains(u, v) {\n         \
    \   u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpk4ze6vhy_test.go:12:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074876
- exit_code: 2
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if !contains(u, v) {\n         \
    \   u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpk4ze6vhy_test.go:12:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if len(u) == 0 || v != u[len(u)-1]\
    \ {\n            u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpu0upyxvz_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if len(u) == 0 || v != u[len(u)-1]\
    \ {\n            u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpu0upyxvz_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if len(u) == 0 || v != u[len(u)-1]\
    \ {\n            u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpu0upyxvz_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    m\
    \ := make(map[int]bool)\n    for _, v := range l {\n        m[v] = true\n    }\n\
    \    u := make([]int, 0, len(m))\n    for k, _ := range m {\n        u = append(u,\
    \ k)\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T) {\n  candidate :=\
    \ unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpq7imp95o_test.go:34: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=2) %!s(int=9) %!s(int=0) %!s(int=123)\
    \ %!s(int=5) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    m\
    \ := make(map[int]bool)\n    for _, v := range l {\n        m[v] = true\n    }\n\
    \    var r []int\n    for k, _ := range m {\n        r = append(r, k)\n    }\n\
    \    return r\n}\n\nfunc TestUnique(t *testing.T) {\n  candidate := unique\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpppgvegcq_test.go:34: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=0) %!s(int=123) %!s(int=5) %!s(int=3)\
    \ %!s(int=2) %!s(int=9)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    if\
    \ len(l) == 0 {\n        return l\n    }\n    u := []int{l[0]}\n    for _, i :=\
    \ range l {\n        if i != u[len(u)-1] {\n            u = append(u, i)\n   \
    \     }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T) {\n  candidate\
    \ := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmp_uclycif_test.go:35: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.002s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 2
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, e := range l {\n        if !contains(u, e) {\n         \
    \   u = append(u, e)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp4fmm7av5_test.go:12:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074876
- exit_code: 2
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if !contains(u, v) {\n         \
    \   u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpk4ze6vhy_test.go:12:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    if\
    \ len(l) == 0 {\n        return l\n    }\n    u := []int{l[0]}\n    for _, e :=\
    \ range l[1:] {\n        if e != u[len(u)-1] {\n            u = append(u, e)\n\
    \        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T) {\n  candidate\
    \ := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpvxepbmph_test.go:35: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    m\
    \ := make(map[int]bool)\n    for _, v := range l {\n        m[v] = true\n    }\n\
    \    u := make([]int, 0, len(m))\n    for k, _ := range m {\n        u = append(u,\
    \ k)\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T) {\n  candidate :=\
    \ unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpq7imp95o_test.go:34: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=2) %!s(int=9) %!s(int=0) %!s(int=123)\
    \ %!s(int=5) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if len(u) == 0 || v != u[len(u)-1]\
    \ {\n            u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpu0upyxvz_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 2
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if !contains(u, v) {\n         \
    \   u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpk4ze6vhy_test.go:12:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    m\
    \ := make(map[int]bool)\n    for _, v := range l {\n        m[v] = true\n    }\n\
    \    var r []int\n    for k, _ := range m {\n        r = append(r, k)\n    }\n\
    \    return r\n}\n\nfunc TestUnique(t *testing.T) {\n  candidate := unique\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpppgvegcq_test.go:34: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=0) %!s(int=123) %!s(int=5) %!s(int=3)\
    \ %!s(int=2) %!s(int=9)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if len(u) == 0 || v != u[len(u)-1]\
    \ {\n            u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpu0upyxvz_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if len(u) == 0 || v != u[len(u)-1]\
    \ {\n            u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpu0upyxvz_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if len(u) == 0 || v != u[len(u)-1]\
    \ {\n            u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpu0upyxvz_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 2
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if !contains(u, v) {\n         \
    \   u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpk4ze6vhy_test.go:12:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074876
- exit_code: 2
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if !contains(u, v) {\n         \
    \   u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpk4ze6vhy_test.go:12:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074876
- exit_code: 2
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, i := range l {\n        if !contains(u, i) {\n         \
    \   u = append(u, i)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp31od9fo__test.go:12:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ result []int\n    for _, v := range l {\n        if len(result) == 0 || result[len(result)-1]\
    \ != v {\n            result = append(result, v)\n        }\n    }\n    return\
    \ result\n}\n\nfunc TestUnique(t *testing.T) {\n  candidate := unique\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{5, 3, 5, 2, 3, 3, 9, 0, 123}), expected:\
    \ []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmp4_v3f3c0_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    if\
    \ len(l) == 0 {\n        return l\n    }\n    var u []int\n    u = append(u, l[0])\n\
    \    for _, e := range l[1:] {\n        if e != u[len(u)-1] {\n            u =\
    \ append(u, e)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmp17p09bky_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if len(u) == 0 || v != u[len(u)-1]\
    \ {\n            u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpu0upyxvz_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if len(u) == 0 || v != u[len(u)-1]\
    \ {\n            u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpu0upyxvz_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 2
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if !contains(u, v) {\n         \
    \   u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpk4ze6vhy_test.go:12:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if len(u) == 0 || v != u[len(u)-1]\
    \ {\n            u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpu0upyxvz_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    m\
    \ := make(map[int]bool)\n    for _, v := range l {\n        m[v] = true\n    }\n\
    \    var r []int\n    for k, _ := range m {\n        r = append(r, k)\n    }\n\
    \    return r\n}\n\nfunc TestUnique(t *testing.T) {\n  candidate := unique\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpppgvegcq_test.go:34: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=0) %!s(int=123) %!s(int=5) %!s(int=3)\
    \ %!s(int=2) %!s(int=9)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if len(u) == 0 || v != u[len(u)-1]\
    \ {\n            u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpu0upyxvz_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 2
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if !contains(u, v) {\n         \
    \   u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpk4ze6vhy_test.go:12:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if len(u) == 0 || v != u[len(u)-1]\
    \ {\n            u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpu0upyxvz_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 2
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if !contains(u, v) {\n         \
    \   u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpk4ze6vhy_test.go:12:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074876
- exit_code: 2
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if !contains(u, v) {\n         \
    \   u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpk4ze6vhy_test.go:12:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    if\
    \ len(l) == 0 {\n        return l\n    }\n    u := []int{l[0]}\n    for _, v :=\
    \ range l[1:] {\n        if v != u[len(u)-1] {\n            u = append(u, v)\n\
    \        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T) {\n  candidate\
    \ := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmp8vm7yh_l_test.go:35: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    m\
    \ := make(map[int]bool)\n    for _, v := range l {\n        m[v] = true\n    }\n\
    \    u := make([]int, 0, len(m))\n    for k, _ := range m {\n        u = append(u,\
    \ k)\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T) {\n  candidate :=\
    \ unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpq7imp95o_test.go:34: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=2) %!s(int=9) %!s(int=0) %!s(int=123)\
    \ %!s(int=5) %!s(int=3)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if len(u) == 0 || v != u[len(u)-1]\
    \ {\n            u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpu0upyxvz_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if len(u) == 0 || v != u[len(u)-1]\
    \ {\n            u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpu0upyxvz_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if len(u) == 0 || v != u[len(u)-1]\
    \ {\n            u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpu0upyxvz_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    if\
    \ len(l) == 0 {\n        return l\n    }\n    var u []int\n    u = append(u, l[0])\n\
    \    for _, v := range l[1:] {\n        if v != u[len(u)-1] {\n            u =\
    \ append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmp26w2ozt3_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ uniq []int\n    for _, v := range l {\n        if len(uniq) == 0 {\n       \
    \     uniq = append(uniq, v)\n        } else {\n            if uniq[len(uniq)-1]\
    \ != v {\n                uniq = append(uniq, v)\n            }\n        }\n \
    \   }\n    return uniq\n}\n\nfunc TestUnique(t *testing.T) {\n  candidate := unique\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpzth_nbjt_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074877
- exit_code: 2
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if !contains(u, v) {\n         \
    \   u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpk4ze6vhy_test.go:12:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if len(u) == 0 || v != u[len(u)-1]\
    \ {\n            u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpu0upyxvz_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if len(u) == 0 || v != u[len(u)-1]\
    \ {\n            u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpu0upyxvz_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if len(u) == 0 || v != u[len(u)-1]\
    \ {\n            u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpu0upyxvz_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    if\
    \ len(l) == 0 {\n        return l\n    }\n    u := []int{l[0]}\n    for _, v :=\
    \ range l[1:] {\n        if v != u[len(u)-1] {\n            u = append(u, v)\n\
    \        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T) {\n  candidate\
    \ := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmp8vm7yh_l_test.go:35: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    if\
    \ len(l) == 0 {\n        return l\n    }\n    u := []int{l[0]}\n    for _, v :=\
    \ range l[1:] {\n        if v != u[len(u)-1] {\n            u = append(u, v)\n\
    \        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T) {\n  candidate\
    \ := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmp8vm7yh_l_test.go:35: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if len(u) == 0 || v != u[len(u)-1]\
    \ {\n            u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpu0upyxvz_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if len(u) == 0 || v != u[len(u)-1]\
    \ {\n            u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpu0upyxvz_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 2
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if !in(u, v) {\n            u =\
    \ append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp8t74ttvv_test.go:12:13: undefined: in

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074877
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    if\
    \ len(l) == 0 {\n        return l\n    }\n    var u []int\n    u = append(u, l[0])\n\
    \    for _, v := range l[1:] {\n        if v != u[len(u)-1] {\n            u =\
    \ append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmp26w2ozt3_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if len(u) == 0 || v != u[len(u)-1]\
    \ {\n            u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpu0upyxvz_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if len(u) == 0 || v != u[len(u)-1]\
    \ {\n            u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpu0upyxvz_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, i := range l {\n        if len(u) == 0 || i != u[len(u)-1]\
    \ {\n            u = append(u, i)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpt3cnmjv7_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if len(u) == 0 || v != u[len(u)-1]\
    \ {\n            u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpu0upyxvz_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    if\
    \ len(l) == 0 {\n        return l\n    }\n    var u []int\n    u = append(u, l[0])\n\
    \    for _, v := range l[1:] {\n        if v != u[len(u)-1] {\n            u =\
    \ append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmp26w2ozt3_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 0
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    if\
    \ len(l) == 0 {\n        return l\n    }\n    // Sort the list\n    for i := 0;\
    \ i < len(l); i++ {\n        for j := i + 1; j < len(l); j++ {\n            if\
    \ l[i] > l[j] {\n                l[i], l[j] = l[j], l[i]\n            }\n    \
    \    }\n    }\n    // Remove duplicates\n    var u []int\n    u = append(u, l[0])\n\
    \    for i := 1; i < len(l); i++ {\n        if l[i] != l[i-1] {\n            u\
    \ = append(u, l[i])\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660074877
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if len(u) == 0 || v != u[len(u)-1]\
    \ {\n            u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpu0upyxvz_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if len(u) == 0 || v != u[len(u)-1]\
    \ {\n            u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpu0upyxvz_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    m\
    \ := make(map[int]bool)\n    for _, v := range l {\n        m[v] = true\n    }\n\
    \    r := make([]int, 0, len(m))\n    for k, _ := range m {\n        r = append(r,\
    \ k)\n    }\n    return r\n}\n\nfunc TestUnique(t *testing.T) {\n  candidate :=\
    \ unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpkqevw2qw_test.go:34: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=2) %!s(int=9)\
    \ %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 2
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if !contains(u, v) {\n         \
    \   u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpk4ze6vhy_test.go:12:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if len(u) == 0 || v != u[len(u)-1]\
    \ {\n            u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpu0upyxvz_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    m := make(map[int]bool)\n    for _, v := range l {\n        if\
    \ _, ok := m[v]; !ok {\n            m[v] = true\n            u = append(u, v)\n\
    \        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T) {\n  candidate\
    \ := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpjtq1caub_test.go:34: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=2) %!s(int=9)\
    \ %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074877
- exit_code: 2
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if !contains(u, v) {\n         \
    \   u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpk4ze6vhy_test.go:12:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    m\
    \ := make(map[int]bool)\n    for _, v := range l {\n        m[v] = true\n    }\n\
    \    var r []int\n    for k, _ := range m {\n        r = append(r, k)\n    }\n\
    \    return r\n}\n\nfunc TestUnique(t *testing.T) {\n  candidate := unique\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpppgvegcq_test.go:34: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=0) %!s(int=123) %!s(int=5) %!s(int=3)\
    \ %!s(int=2) %!s(int=9)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 2
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if !contains(u, v) {\n         \
    \   u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpk4ze6vhy_test.go:12:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074876
- exit_code: 2
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if !contains(u, v) {\n         \
    \   u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpk4ze6vhy_test.go:12:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    m\
    \ := make(map[int]bool)\n    for _, v := range l {\n        m[v] = true\n    }\n\
    \    var r []int\n    for k, _ := range m {\n        r = append(r, k)\n    }\n\
    \    return r\n}\n\nfunc TestUnique(t *testing.T) {\n  candidate := unique\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpppgvegcq_test.go:34: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=0) %!s(int=123) %!s(int=5) %!s(int=3)\
    \ %!s(int=2) %!s(int=9)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    if\
    \ len(l) == 0 {\n        return l\n    }\n    if len(l) == 1 {\n        return\
    \ l\n    }\n    var u []int\n    u = append(u, l[0])\n    for _, v := range l[1:]\
    \ {\n        if v != u[len(u)-1] {\n            u = append(u, v)\n        }\n\
    \    }\n    return u\n}\n\nfunc TestUnique(t *testing.T) {\n  candidate := unique\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmp_8v_r8g4_test.go:39: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 2
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if !contains(u, v) {\n         \
    \   u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpk4ze6vhy_test.go:12:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    if\
    \ len(l) == 0 {\n        return l\n    }\n    var u []int\n    u = append(u, l[0])\n\
    \    for _, v := range l[1:] {\n        if v != u[len(u)-1] {\n            u =\
    \ append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmp26w2ozt3_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    m\
    \ := make(map[int]bool)\n    for _, v := range l {\n        m[v] = true\n    }\n\
    \    var u []int\n    for k, _ := range m {\n        u = append(u, k)\n    }\n\
    \    return u\n}\n\nfunc TestUnique(t *testing.T) {\n  candidate := unique\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpvm95913p_test.go:34: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=9) %!s(int=0) %!s(int=123) %!s(int=5)\
    \ %!s(int=3) %!s(int=2)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    if\
    \ len(l) == 0 {\n        return l\n    }\n    var i, j int\n    for i = 1; i <\
    \ len(l); i++ {\n        if l[i] != l[j] {\n            j++\n            l[j]\
    \ = l[i]\n        }\n    }\n    return l[:j+1]\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpmwyav8xl_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074877
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if len(u) == 0 || v != u[len(u)-1]\
    \ {\n            u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpu0upyxvz_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if len(u) == 0 || v != u[len(u)-1]\
    \ {\n            u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpu0upyxvz_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if len(u) == 0 || v != u[len(u)-1]\
    \ {\n            u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpu0upyxvz_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 2
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if !contains(u, v) {\n         \
    \   u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpk4ze6vhy_test.go:12:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if len(u) == 0 || v != u[len(u)-1]\
    \ {\n            u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpu0upyxvz_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if len(u) == 0 || v != u[len(u)-1]\
    \ {\n            u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpu0upyxvz_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    if\
    \ len(l) == 0 {\n        return l\n    }\n    var u []int\n    u = append(u, l[0])\n\
    \    for _, v := range l[1:] {\n        if v != u[len(u)-1] {\n            u =\
    \ append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmp26w2ozt3_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 2
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if !contains(u, v) {\n         \
    \   u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpk4ze6vhy_test.go:12:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, i := range l {\n        if len(u) == 0 || i != u[len(u)-1]\
    \ {\n            u = append(u, i)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpt3cnmjv7_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    if\
    \ len(l) == 0 {\n        return l\n    }\n    var u []int\n    u = append(u, l[0])\n\
    \    for _, v := range l[1:] {\n        if v != u[len(u)-1] {\n            u =\
    \ append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmp26w2ozt3_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 2
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if !contains(u, v) {\n         \
    \   u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpk4ze6vhy_test.go:12:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    if\
    \ len(l) == 0 {\n        return l\n    }\n    var r []int\n    r = append(r, l[0])\n\
    \    for _, v := range l[1:] {\n        if v != r[len(r)-1] {\n            r =\
    \ append(r, v)\n        }\n    }\n    return r\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpr3vj7029_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074877
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if len(u) == 0 || v != u[len(u)-1]\
    \ {\n            u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpu0upyxvz_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if len(u) == 0 || v != u[len(u)-1]\
    \ {\n            u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpu0upyxvz_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    if\
    \ len(l) == 0 {\n        return l\n    }\n    u := make([]int, 0, len(l))\n  \
    \  u = append(u, l[0])\n    for _, v := range l[1:] {\n        if v != u[len(u)-1]\
    \ {\n            u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpnx2mw63j_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074877
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if len(u) == 0 || v != u[len(u)-1]\
    \ {\n            u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpu0upyxvz_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    m\
    \ := make(map[int]bool)\n    for _, v := range l {\n        m[v] = true\n    }\n\
    \    var r []int\n    for k, _ := range m {\n        r = append(r, k)\n    }\n\
    \    return r\n}\n\nfunc TestUnique(t *testing.T) {\n  candidate := unique\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpppgvegcq_test.go:34: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=0) %!s(int=123) %!s(int=5) %!s(int=3)\
    \ %!s(int=2) %!s(int=9)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    m\
    \ := make(map[int]bool)\n    for _, v := range l {\n        m[v] = true\n    }\n\
    \    var r []int\n    for k, _ := range m {\n        r = append(r, k)\n    }\n\
    \    return r\n}\n\nfunc TestUnique(t *testing.T) {\n  candidate := unique\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpppgvegcq_test.go:34: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=0) %!s(int=123) %!s(int=5) %!s(int=3)\
    \ %!s(int=2) %!s(int=9)]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    if\
    \ len(l) == 0 {\n        return l\n    }\n    u := []int{l[0]}\n    for _, v :=\
    \ range l[1:] {\n        if v != u[len(u)-1] {\n            u = append(u, v)\n\
    \        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T) {\n  candidate\
    \ := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmp8vm7yh_l_test.go:35: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 2
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if !contains(u, v) {\n         \
    \   u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpk4ze6vhy_test.go:12:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    if\
    \ len(l) == 0 {\n        return l\n    }\n    var u []int\n    u = append(u, l[0])\n\
    \    for _, e := range l[1:] {\n        if e != u[len(u)-1] {\n            u =\
    \ append(u, e)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmp17p09bky_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if len(u) == 0 || v != u[len(u)-1]\
    \ {\n            u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpu0upyxvz_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if len(u) == 0 || v != u[len(u)-1]\
    \ {\n            u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t\
    \ *testing.T) {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmpu0upyxvz_test.go:32: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 2
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if !contains(u, v) {\n         \
    \   u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpk4ze6vhy_test.go:12:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074876
- exit_code: 1
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    if\
    \ len(l) == 0 {\n        return l\n    }\n    var u []int\n    u = append(u, l[0])\n\
    \    for _, e := range l[1:] {\n        if e != u[len(u)-1] {\n            u =\
    \ append(u, e)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestUnique (0.00s)\n    --- FAIL: TestUnique/test_num__0 (0.00s)\n\
    \        tmp17p09bky_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=5)\
    \ %!s(int=9) %!s(int=123)]', got '[%!s(int=5) %!s(int=3) %!s(int=5) %!s(int=2)\
    \ %!s(int=3) %!s(int=9) %!s(int=0) %!s(int=123)]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074876
- exit_code: 2
  program: "package unique_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Return sorted unique elements in a list\nfunc unique(l []int) []int {\n    var\
    \ u []int\n    for _, v := range l {\n        if !contains(u, v) {\n         \
    \   u = append(u, v)\n        }\n    }\n    return u\n}\n\nfunc TestUnique(t *testing.T)\
    \ {\n  candidate := unique\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123}), expected: []int{0, 2, 3, 5, 9, 123} },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpk4ze6vhy_test.go:12:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074876

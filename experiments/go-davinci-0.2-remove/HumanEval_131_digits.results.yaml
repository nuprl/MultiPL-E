language: go_test.go
name: HumanEval_131_digits
results:
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 0
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    if\
    \ n < 10 {\n        if n % 2 == 1 {\n            return n\n        }\n       \
    \ return 0\n    }\n    if n % 2 == 1 {\n        return n % 10 * digits(n / 10)\n\
    \    }\n    return digits(n / 10)\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate\
    \ := digits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     {\
    \ actual: candidate(54), expected: 5 },\n     { actual: candidate(120), expected:\
    \ 1 },\n     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ result int\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 !=\
    \ 0 {\n            result *= digit\n        }\n        n /= 10\n    }\n    return\
    \ result\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54),\
    \ expected: 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual:\
    \ candidate(5014), expected: 5 },\n     { actual: candidate(98765), expected:\
    \ 315 },\n     { actual: candidate(5576543), expected: 2625 },\n     { actual:\
    \ candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmpurh25c12_test.go:42: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmpurh25c12_test.go:42: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmpurh25c12_test.go:42:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    if\
    \ n < 10 {\n        if n % 2 == 1 {\n            return n\n        }\n       \
    \ return 0\n    }\n    return (n % 10) * digits(n / 10)\n}\n\nfunc TestDigits(t\
    \ *testing.T) {\n  candidate := digits\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(5),\
    \ expected: 5 },\n     { actual: candidate(54), expected: 5 },\n     { actual:\
    \ candidate(120), expected: 1 },\n     { actual: candidate(5014), expected: 5\
    \ },\n     { actual: candidate(98765), expected: 315 },\n     { actual: candidate(5576543),\
    \ expected: 2625 },\n     { actual: candidate(2468), expected: 0 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__1 (0.00s)\n\
    \        tmpzcsxynv1_test.go:40: expected '%!s(int=5)', got '%!s(int=20)'\n  \
    \  --- FAIL: TestDigits/test_num__2 (0.00s)\n        tmpzcsxynv1_test.go:40: expected\
    \ '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__3 (0.00s)\n\
    \        tmpzcsxynv1_test.go:40: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__4 (0.00s)\n        tmpzcsxynv1_test.go:40: expected\
    \ '%!s(int=315)', got '%!s(int=15120)'\n    --- FAIL: TestDigits/test_num__5 (0.00s)\n\
    \        tmpzcsxynv1_test.go:40: expected '%!s(int=2625)', got '%!s(int=63000)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ result int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit %\
    \ 2 != 0 {\n            result *= digit\n        }\n        n /= 10\n    }\n \
    \   return result\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpin6v33ly_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    if\
    \ n < 10 {\n        if n % 2 == 1 {\n            return n\n        }\n       \
    \ return 0\n    }\n    var result int\n    for n > 0 {\n        digit := n % 10\n\
    \        if digit % 2 == 1 {\n            result *= digit\n        }\n       \
    \ n /= 10\n    }\n    return result\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate\
    \ := digits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     {\
    \ actual: candidate(54), expected: 5 },\n     { actual: candidate(120), expected:\
    \ 1 },\n     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__1 (0.00s)\n\
    \        tmpj1krd_37_test.go:48: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__2 (0.00s)\n        tmpj1krd_37_test.go:48: expected\
    \ '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__3 (0.00s)\n\
    \        tmpj1krd_37_test.go:48: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__4 (0.00s)\n        tmpj1krd_37_test.go:48: expected\
    \ '%!s(int=315)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__5 (0.00s)\n\
    \        tmpj1krd_37_test.go:48: expected '%!s(int=2625)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ result int\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 !=\
    \ 0 {\n            result *= digit\n        }\n        n /= 10\n    }\n    return\
    \ result\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54),\
    \ expected: 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual:\
    \ candidate(5014), expected: 5 },\n     { actual: candidate(98765), expected:\
    \ 315 },\n     { actual: candidate(5576543), expected: 2625 },\n     { actual:\
    \ candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmpurh25c12_test.go:42: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmpurh25c12_test.go:42: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmpurh25c12_test.go:42:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ result int\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 !=\
    \ 0 {\n            result *= digit\n        }\n        n /= 10\n    }\n    return\
    \ result\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54),\
    \ expected: 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual:\
    \ candidate(5014), expected: 5 },\n     { actual: candidate(98765), expected:\
    \ 315 },\n     { actual: candidate(5576543), expected: 2625 },\n     { actual:\
    \ candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmpurh25c12_test.go:42: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmpurh25c12_test.go:42: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmpurh25c12_test.go:42:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ result int\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 !=\
    \ 0 {\n            result *= digit\n        }\n        n /= 10\n    }\n    return\
    \ result\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54),\
    \ expected: 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual:\
    \ candidate(5014), expected: 5 },\n     { actual: candidate(98765), expected:\
    \ 315 },\n     { actual: candidate(5576543), expected: 2625 },\n     { actual:\
    \ candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmpurh25c12_test.go:42: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmpurh25c12_test.go:42: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmpurh25c12_test.go:42:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    product\
    \ := 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpj6asidw2_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ result int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit %\
    \ 2 != 0 {\n            result *= digit\n        }\n        n /= 10\n    }\n \
    \   return result\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpin6v33ly_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ result int\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 !=\
    \ 0 {\n            result *= digit\n        }\n        n /= 10\n    }\n    return\
    \ result\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54),\
    \ expected: 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual:\
    \ candidate(5014), expected: 5 },\n     { actual: candidate(98765), expected:\
    \ 315 },\n     { actual: candidate(5576543), expected: 2625 },\n     { actual:\
    \ candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmpurh25c12_test.go:42: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmpurh25c12_test.go:42: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmpurh25c12_test.go:42:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ result int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit %\
    \ 2 != 0 {\n            result *= digit\n        }\n        n /= 10\n    }\n \
    \   return result\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpin6v33ly_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 0
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    if\
    \ n < 10 {\n        if n % 2 == 1 {\n            return n\n        }\n       \
    \ return 0\n    }\n    digit := n % 10\n    if digit % 2 == 1 {\n        return\
    \ digit * digits(n / 10)\n    }\n    return digits(n / 10)\n}\n\nfunc TestDigits(t\
    \ *testing.T) {\n  candidate := digits\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(5),\
    \ expected: 5 },\n     { actual: candidate(54), expected: 5 },\n     { actual:\
    \ candidate(120), expected: 1 },\n     { actual: candidate(5014), expected: 5\
    \ },\n     { actual: candidate(98765), expected: 315 },\n     { actual: candidate(5576543),\
    \ expected: 2625 },\n     { actual: candidate(2468), expected: 0 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.004s\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ result int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit %\
    \ 2 != 0 {\n            result *= digit\n        }\n        n /= 10\n    }\n \
    \   return result\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpin6v33ly_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ result int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit %\
    \ 2 != 0 {\n            result *= digit\n        }\n        n /= 10\n    }\n \
    \   return result\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpin6v33ly_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ result int\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 !=\
    \ 0 {\n            result *= digit\n        }\n        n /= 10\n    }\n    return\
    \ result\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54),\
    \ expected: 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual:\
    \ candidate(5014), expected: 5 },\n     { actual: candidate(98765), expected:\
    \ 315 },\n     { actual: candidate(5576543), expected: 2625 },\n     { actual:\
    \ candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmpurh25c12_test.go:42: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmpurh25c12_test.go:42: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmpurh25c12_test.go:42:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ result int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit %\
    \ 2 != 0 {\n            result *= digit\n        }\n        n /= 10\n    }\n \
    \   return result\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpin6v33ly_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ prod int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2\
    \ != 0 {\n            prod *= digit\n        }\n        n /= 10\n    }\n    return\
    \ prod\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54),\
    \ expected: 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual:\
    \ candidate(5014), expected: 5 },\n     { actual: candidate(98765), expected:\
    \ 315 },\n     { actual: candidate(5576543), expected: 2625 },\n     { actual:\
    \ candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmphej5d3or_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    if\
    \ n < 10 {\n        if n % 2 == 1 {\n            return n\n        }\n       \
    \ return 0\n    }\n    return digits(n / 10) * (n % 10)\n}\n\nfunc TestDigits(t\
    \ *testing.T) {\n  candidate := digits\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(5),\
    \ expected: 5 },\n     { actual: candidate(54), expected: 5 },\n     { actual:\
    \ candidate(120), expected: 1 },\n     { actual: candidate(5014), expected: 5\
    \ },\n     { actual: candidate(98765), expected: 315 },\n     { actual: candidate(5576543),\
    \ expected: 2625 },\n     { actual: candidate(2468), expected: 0 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__1 (0.00s)\n\
    \        tmpm0n2n3ix_test.go:40: expected '%!s(int=5)', got '%!s(int=20)'\n  \
    \  --- FAIL: TestDigits/test_num__2 (0.00s)\n        tmpm0n2n3ix_test.go:40: expected\
    \ '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__3 (0.00s)\n\
    \        tmpm0n2n3ix_test.go:40: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__4 (0.00s)\n        tmpm0n2n3ix_test.go:40: expected\
    \ '%!s(int=315)', got '%!s(int=15120)'\n    --- FAIL: TestDigits/test_num__5 (0.00s)\n\
    \        tmpm0n2n3ix_test.go:40: expected '%!s(int=2625)', got '%!s(int=63000)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ result int\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 !=\
    \ 0 {\n            result *= digit\n        }\n        n /= 10\n    }\n    return\
    \ result\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54),\
    \ expected: 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual:\
    \ candidate(5014), expected: 5 },\n     { actual: candidate(98765), expected:\
    \ 315 },\n     { actual: candidate(5576543), expected: 2625 },\n     { actual:\
    \ candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmpurh25c12_test.go:42: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmpurh25c12_test.go:42: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmpurh25c12_test.go:42:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ result int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit %\
    \ 2 != 0 {\n            result *= digit\n        }\n        n /= 10\n    }\n \
    \   return result\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpin6v33ly_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 0
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    if\
    \ n < 10 {\n        if n % 2 == 1 {\n            return n\n        }\n       \
    \ return 0\n    }\n    if n % 2 == 1 {\n        return n % 10 * digits(n / 10)\n\
    \    }\n    return digits(n / 10)\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate\
    \ := digits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     {\
    \ actual: candidate(54), expected: 5 },\n     { actual: candidate(120), expected:\
    \ 1 },\n     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ result int\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 !=\
    \ 0 {\n            result *= digit\n        }\n        n /= 10\n    }\n    return\
    \ result\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54),\
    \ expected: 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual:\
    \ candidate(5014), expected: 5 },\n     { actual: candidate(98765), expected:\
    \ 315 },\n     { actual: candidate(5576543), expected: 2625 },\n     { actual:\
    \ candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmpurh25c12_test.go:42: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmpurh25c12_test.go:42: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmpurh25c12_test.go:42:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    if\
    \ n < 10 {\n        if n % 2 == 1 {\n            return n\n        }\n       \
    \ return 0\n    }\n    return digits(n / 10) * digits(n % 10)\n}\n\nfunc TestDigits(t\
    \ *testing.T) {\n  candidate := digits\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(5),\
    \ expected: 5 },\n     { actual: candidate(54), expected: 5 },\n     { actual:\
    \ candidate(120), expected: 1 },\n     { actual: candidate(5014), expected: 5\
    \ },\n     { actual: candidate(98765), expected: 315 },\n     { actual: candidate(5576543),\
    \ expected: 2625 },\n     { actual: candidate(2468), expected: 0 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__1 (0.00s)\n\
    \        tmpoyj5bihj_test.go:40: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__2 (0.00s)\n        tmpoyj5bihj_test.go:40: expected\
    \ '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__3 (0.00s)\n\
    \        tmpoyj5bihj_test.go:40: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__4 (0.00s)\n        tmpoyj5bihj_test.go:40: expected\
    \ '%!s(int=315)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__5 (0.00s)\n\
    \        tmpoyj5bihj_test.go:40: expected '%!s(int=2625)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ result int\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 !=\
    \ 0 {\n            result *= digit\n        }\n        n /= 10\n    }\n    return\
    \ result\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54),\
    \ expected: 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual:\
    \ candidate(5014), expected: 5 },\n     { actual: candidate(98765), expected:\
    \ 315 },\n     { actual: candidate(5576543), expected: 2625 },\n     { actual:\
    \ candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmpurh25c12_test.go:42: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmpurh25c12_test.go:42: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmpurh25c12_test.go:42:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ result int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit %\
    \ 2 != 0 {\n            result *= digit\n        }\n        n /= 10\n    }\n \
    \   return result\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpin6v33ly_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    product\
    \ := 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpj6asidw2_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ result int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit %\
    \ 2 != 0 {\n            result *= digit\n        }\n        n /= 10\n    }\n \
    \   return result\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpin6v33ly_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    if\
    \ n < 10 {\n        if n % 2 == 1 {\n            return n\n        }\n       \
    \ return 0\n    }\n    return digits(n / 10) * digits(n % 10)\n}\n\nfunc TestDigits(t\
    \ *testing.T) {\n  candidate := digits\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(5),\
    \ expected: 5 },\n     { actual: candidate(54), expected: 5 },\n     { actual:\
    \ candidate(120), expected: 1 },\n     { actual: candidate(5014), expected: 5\
    \ },\n     { actual: candidate(98765), expected: 315 },\n     { actual: candidate(5576543),\
    \ expected: 2625 },\n     { actual: candidate(2468), expected: 0 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__1 (0.00s)\n\
    \        tmpoyj5bihj_test.go:40: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__2 (0.00s)\n        tmpoyj5bihj_test.go:40: expected\
    \ '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__3 (0.00s)\n\
    \        tmpoyj5bihj_test.go:40: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__4 (0.00s)\n        tmpoyj5bihj_test.go:40: expected\
    \ '%!s(int=315)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__5 (0.00s)\n\
    \        tmpoyj5bihj_test.go:40: expected '%!s(int=2625)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ result int\n    var digit int\n    for n > 0 {\n        digit = n % 10\n   \
    \     if digit % 2 != 0 {\n            result *= digit\n        }\n        n /=\
    \ 10\n    }\n    return result\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate\
    \ := digits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     {\
    \ actual: candidate(54), expected: 5 },\n     { actual: candidate(120), expected:\
    \ 1 },\n     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmpe3jdfixv_test.go:43: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmpe3jdfixv_test.go:43: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmpe3jdfixv_test.go:43: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmpe3jdfixv_test.go:43: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmpe3jdfixv_test.go:43: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmpe3jdfixv_test.go:43:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    if\
    \ n == 0 {\n        return 0\n    }\n    var product int = 1\n    for n > 0 {\n\
    \        digit := n % 10\n        if digit % 2 != 0 {\n            product *=\
    \ digit\n        }\n        n /= 10\n    }\n    return product\n}\n\nfunc TestDigits(t\
    \ *testing.T) {\n  candidate := digits\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(5),\
    \ expected: 5 },\n     { actual: candidate(54), expected: 5 },\n     { actual:\
    \ candidate(120), expected: 1 },\n     { actual: candidate(5014), expected: 5\
    \ },\n     { actual: candidate(98765), expected: 315 },\n     { actual: candidate(5576543),\
    \ expected: 2625 },\n     { actual: candidate(2468), expected: 0 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpl6bcjxa7_test.go:45: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ result int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit %\
    \ 2 != 0 {\n            result *= digit\n        }\n        n /= 10\n    }\n \
    \   return result\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpin6v33ly_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ result int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit %\
    \ 2 != 0 {\n            result *= digit\n        }\n        n /= 10\n    }\n \
    \   return result\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpin6v33ly_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    product\
    \ := 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpj6asidw2_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    if\
    \ n < 10 {\n        if n % 2 == 1 {\n            return n\n        }\n       \
    \ return 0\n    }\n    return digits(n / 10) * digits(n % 10)\n}\n\nfunc TestDigits(t\
    \ *testing.T) {\n  candidate := digits\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(5),\
    \ expected: 5 },\n     { actual: candidate(54), expected: 5 },\n     { actual:\
    \ candidate(120), expected: 1 },\n     { actual: candidate(5014), expected: 5\
    \ },\n     { actual: candidate(98765), expected: 315 },\n     { actual: candidate(5576543),\
    \ expected: 2625 },\n     { actual: candidate(2468), expected: 0 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__1 (0.00s)\n\
    \        tmpoyj5bihj_test.go:40: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__2 (0.00s)\n        tmpoyj5bihj_test.go:40: expected\
    \ '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__3 (0.00s)\n\
    \        tmpoyj5bihj_test.go:40: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__4 (0.00s)\n        tmpoyj5bihj_test.go:40: expected\
    \ '%!s(int=315)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__5 (0.00s)\n\
    \        tmpoyj5bihj_test.go:40: expected '%!s(int=2625)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ result int\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 !=\
    \ 0 {\n            result *= digit\n        }\n        n /= 10\n    }\n    return\
    \ result\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54),\
    \ expected: 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual:\
    \ candidate(5014), expected: 5 },\n     { actual: candidate(98765), expected:\
    \ 315 },\n     { actual: candidate(5576543), expected: 2625 },\n     { actual:\
    \ candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmpurh25c12_test.go:42: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmpurh25c12_test.go:42: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmpurh25c12_test.go:42:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ result int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit %\
    \ 2 != 0 {\n            result *= digit\n        }\n        n /= 10\n    }\n \
    \   return result\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpin6v33ly_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ result int\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 !=\
    \ 0 {\n            result *= digit\n        }\n        n /= 10\n    }\n    return\
    \ result\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54),\
    \ expected: 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual:\
    \ candidate(5014), expected: 5 },\n     { actual: candidate(98765), expected:\
    \ 315 },\n     { actual: candidate(5576543), expected: 2625 },\n     { actual:\
    \ candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmpurh25c12_test.go:42: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmpurh25c12_test.go:42: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmpurh25c12_test.go:42:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ result int\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 !=\
    \ 0 {\n            result *= digit\n        }\n        n /= 10\n    }\n    return\
    \ result\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54),\
    \ expected: 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual:\
    \ candidate(5014), expected: 5 },\n     { actual: candidate(98765), expected:\
    \ 315 },\n     { actual: candidate(5576543), expected: 2625 },\n     { actual:\
    \ candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmpurh25c12_test.go:42: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmpurh25c12_test.go:42: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmpurh25c12_test.go:42:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    product\
    \ := 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpj6asidw2_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ result int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit %\
    \ 2 != 0 {\n            result *= digit\n        }\n        n /= 10\n    }\n \
    \   return result\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpin6v33ly_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ result int\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 !=\
    \ 0 {\n            result *= digit\n        }\n        n /= 10\n    }\n    return\
    \ result\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54),\
    \ expected: 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual:\
    \ candidate(5014), expected: 5 },\n     { actual: candidate(98765), expected:\
    \ 315 },\n     { actual: candidate(5576543), expected: 2625 },\n     { actual:\
    \ candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmpurh25c12_test.go:42: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmpurh25c12_test.go:42: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmpurh25c12_test.go:42:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ result int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit %\
    \ 2 != 0 {\n            result *= digit\n        }\n        n /= 10\n    }\n \
    \   return result\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpin6v33ly_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ result int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit %\
    \ 2 != 0 {\n            result *= digit\n        }\n        n /= 10\n    }\n \
    \   return result\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpin6v33ly_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    if\
    \ n == 0 {\n        return 0\n    }\n    var product int = 1\n    for n > 0 {\n\
    \        digit := n % 10\n        if digit % 2 != 0 {\n            product *=\
    \ digit\n        }\n        n /= 10\n    }\n    return product\n}\n\nfunc TestDigits(t\
    \ *testing.T) {\n  candidate := digits\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(5),\
    \ expected: 5 },\n     { actual: candidate(54), expected: 5 },\n     { actual:\
    \ candidate(120), expected: 1 },\n     { actual: candidate(5014), expected: 5\
    \ },\n     { actual: candidate(98765), expected: 315 },\n     { actual: candidate(5576543),\
    \ expected: 2625 },\n     { actual: candidate(2468), expected: 0 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpl6bcjxa7_test.go:45: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    result\
    \ := 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            result *= digit\n        }\n        n /= 10\n    }\n    return result\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpp3dypllt_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ result int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit %\
    \ 2 != 0 {\n            result *= digit\n        }\n        n /= 10\n    }\n \
    \   return result\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpin6v33ly_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    if\
    \ n == 0 {\n        return 0\n    }\n    var product int = 1\n    for n > 0 {\n\
    \        digit := n % 10\n        if digit % 2 != 0 {\n            product *=\
    \ digit\n        }\n        n /= 10\n    }\n    return product\n}\n\nfunc TestDigits(t\
    \ *testing.T) {\n  candidate := digits\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(5),\
    \ expected: 5 },\n     { actual: candidate(54), expected: 5 },\n     { actual:\
    \ candidate(120), expected: 1 },\n     { actual: candidate(5014), expected: 5\
    \ },\n     { actual: candidate(98765), expected: 315 },\n     { actual: candidate(5576543),\
    \ expected: 2625 },\n     { actual: candidate(2468), expected: 0 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpl6bcjxa7_test.go:45: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    if\
    \ n == 0 {\n        return 0\n    }\n\n    var result int = 1\n    for n > 0 {\n\
    \        digit := n % 10\n        if digit % 2 != 0 {\n            result *= digit\n\
    \        }\n        n /= 10\n    }\n    return result\n}\n\nfunc TestDigits(t\
    \ *testing.T) {\n  candidate := digits\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(5),\
    \ expected: 5 },\n     { actual: candidate(54), expected: 5 },\n     { actual:\
    \ candidate(120), expected: 1 },\n     { actual: candidate(5014), expected: 5\
    \ },\n     { actual: candidate(98765), expected: 315 },\n     { actual: candidate(5576543),\
    \ expected: 2625 },\n     { actual: candidate(2468), expected: 0 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmphd7h27js_test.go:46: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    if\
    \ n == 0 {\n        return 0\n    }\n    var product int = 1\n    for n > 0 {\n\
    \        digit := n % 10\n        if digit % 2 != 0 {\n            product *=\
    \ digit\n        }\n        n /= 10\n    }\n    return product\n}\n\nfunc TestDigits(t\
    \ *testing.T) {\n  candidate := digits\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(5),\
    \ expected: 5 },\n     { actual: candidate(54), expected: 5 },\n     { actual:\
    \ candidate(120), expected: 1 },\n     { actual: candidate(5014), expected: 5\
    \ },\n     { actual: candidate(98765), expected: 315 },\n     { actual: candidate(5576543),\
    \ expected: 2625 },\n     { actual: candidate(2468), expected: 0 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpl6bcjxa7_test.go:45: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ result int\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 !=\
    \ 0 {\n            result *= digit\n        }\n        n /= 10\n    }\n    return\
    \ result\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54),\
    \ expected: 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual:\
    \ candidate(5014), expected: 5 },\n     { actual: candidate(98765), expected:\
    \ 315 },\n     { actual: candidate(5576543), expected: 2625 },\n     { actual:\
    \ candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmpurh25c12_test.go:42: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmpurh25c12_test.go:42: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmpurh25c12_test.go:42:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 0
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    if\
    \ n < 10 {\n        if n % 2 == 1 {\n            return n\n        }\n       \
    \ return 0\n    }\n    lastDigit := n % 10\n    if lastDigit % 2 == 1 {\n    \
    \    return digits(n / 10) * lastDigit\n    }\n    return digits(n / 10)\n}\n\n\
    func TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ result int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit %\
    \ 2 != 0 {\n            result *= digit\n        }\n        n /= 10\n    }\n \
    \   return result\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpin6v33ly_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ result int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit %\
    \ 2 != 0 {\n            result *= digit\n        }\n        n /= 10\n    }\n \
    \   return result\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpin6v33ly_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ result int\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 !=\
    \ 0 {\n            result *= digit\n        }\n        n /= 10\n    }\n    return\
    \ result\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54),\
    \ expected: 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual:\
    \ candidate(5014), expected: 5 },\n     { actual: candidate(98765), expected:\
    \ 315 },\n     { actual: candidate(5576543), expected: 2625 },\n     { actual:\
    \ candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmpurh25c12_test.go:42: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmpurh25c12_test.go:42: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmpurh25c12_test.go:42:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ result int\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 !=\
    \ 0 {\n            result *= digit\n        }\n        n /= 10\n    }\n    return\
    \ result\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54),\
    \ expected: 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual:\
    \ candidate(5014), expected: 5 },\n     { actual: candidate(98765), expected:\
    \ 315 },\n     { actual: candidate(5576543), expected: 2625 },\n     { actual:\
    \ candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmpurh25c12_test.go:42: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmpurh25c12_test.go:42: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmpurh25c12_test.go:42:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    if\
    \ n == 0 {\n        return 0\n    }\n    var product int = 1\n    for n > 0 {\n\
    \        digit := n % 10\n        if digit % 2 != 0 {\n            product *=\
    \ digit\n        }\n        n /= 10\n    }\n    return product\n}\n\nfunc TestDigits(t\
    \ *testing.T) {\n  candidate := digits\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(5),\
    \ expected: 5 },\n     { actual: candidate(54), expected: 5 },\n     { actual:\
    \ candidate(120), expected: 1 },\n     { actual: candidate(5014), expected: 5\
    \ },\n     { actual: candidate(98765), expected: 315 },\n     { actual: candidate(5576543),\
    \ expected: 2625 },\n     { actual: candidate(2468), expected: 0 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpl6bcjxa7_test.go:45: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 0
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    if\
    \ n < 10 {\n        if n % 2 == 1 {\n            return n\n        }\n       \
    \ return 0\n    }\n    digit := n % 10\n    if digit % 2 == 1 {\n        return\
    \ digit * digits(n / 10)\n    }\n    return digits(n / 10)\n}\n\nfunc TestDigits(t\
    \ *testing.T) {\n  candidate := digits\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(5),\
    \ expected: 5 },\n     { actual: candidate(54), expected: 5 },\n     { actual:\
    \ candidate(120), expected: 1 },\n     { actual: candidate(5014), expected: 5\
    \ },\n     { actual: candidate(98765), expected: 315 },\n     { actual: candidate(5576543),\
    \ expected: 2625 },\n     { actual: candidate(2468), expected: 0 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.004s\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ result int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit %\
    \ 2 != 0 {\n            result *= digit\n        }\n        n /= 10\n    }\n \
    \   return result\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpin6v33ly_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ result int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit %\
    \ 2 != 0 {\n            result *= digit\n        }\n        n /= 10\n    }\n \
    \   return result\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpin6v33ly_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    product\
    \ := 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpj6asidw2_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ prod int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2\
    \ != 0 {\n            prod *= digit\n        }\n        n /= 10\n    }\n    return\
    \ prod\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54),\
    \ expected: 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual:\
    \ candidate(5014), expected: 5 },\n     { actual: candidate(98765), expected:\
    \ 315 },\n     { actual: candidate(5576543), expected: 2625 },\n     { actual:\
    \ candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmphej5d3or_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ result int\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 !=\
    \ 0 {\n            result *= digit\n        }\n        n /= 10\n    }\n    return\
    \ result\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54),\
    \ expected: 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual:\
    \ candidate(5014), expected: 5 },\n     { actual: candidate(98765), expected:\
    \ 315 },\n     { actual: candidate(5576543), expected: 2625 },\n     { actual:\
    \ candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmpurh25c12_test.go:42: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmpurh25c12_test.go:42: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmpurh25c12_test.go:42:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ result int\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 !=\
    \ 0 {\n            result *= digit\n        }\n        n /= 10\n    }\n    return\
    \ result\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54),\
    \ expected: 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual:\
    \ candidate(5014), expected: 5 },\n     { actual: candidate(98765), expected:\
    \ 315 },\n     { actual: candidate(5576543), expected: 2625 },\n     { actual:\
    \ candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmpurh25c12_test.go:42: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmpurh25c12_test.go:42: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmpurh25c12_test.go:42:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ result int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit %\
    \ 2 != 0 {\n            result *= digit\n        }\n        n /= 10\n    }\n \
    \   return result\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpin6v33ly_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ result int\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 !=\
    \ 0 {\n            result *= digit\n        }\n        n /= 10\n    }\n    return\
    \ result\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54),\
    \ expected: 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual:\
    \ candidate(5014), expected: 5 },\n     { actual: candidate(98765), expected:\
    \ 315 },\n     { actual: candidate(5576543), expected: 2625 },\n     { actual:\
    \ candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmpurh25c12_test.go:42: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmpurh25c12_test.go:42: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmpurh25c12_test.go:42:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 0
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    if\
    \ n < 10 {\n        if n % 2 == 1 {\n            return n\n        }\n       \
    \ return 0\n    }\n    if n % 2 == 1 {\n        return n % 10 * digits(n / 10)\n\
    \    }\n    return digits(n / 10)\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate\
    \ := digits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     {\
    \ actual: candidate(54), expected: 5 },\n     { actual: candidate(120), expected:\
    \ 1 },\n     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    if\
    \ n == 0 {\n        return 0\n    }\n    if n % 2 == 0 {\n        return digits(n\
    \ / 10)\n    }\n    return (n % 10) * digits(n / 10)\n}\n\nfunc TestDigits(t *testing.T)\
    \ {\n  candidate := digits\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(5),\
    \ expected: 5 },\n     { actual: candidate(54), expected: 5 },\n     { actual:\
    \ candidate(120), expected: 1 },\n     { actual: candidate(5014), expected: 5\
    \ },\n     { actual: candidate(98765), expected: 315 },\n     { actual: candidate(5576543),\
    \ expected: 2625 },\n     { actual: candidate(2468), expected: 0 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmphw937egk_test.go:40: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmphw937egk_test.go:40: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmphw937egk_test.go:40: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmphw937egk_test.go:40: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmphw937egk_test.go:40: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmphw937egk_test.go:40:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ result int\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 !=\
    \ 0 {\n            result *= digit\n        }\n        n /= 10\n    }\n    return\
    \ result\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54),\
    \ expected: 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual:\
    \ candidate(5014), expected: 5 },\n     { actual: candidate(98765), expected:\
    \ 315 },\n     { actual: candidate(5576543), expected: 2625 },\n     { actual:\
    \ candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmpurh25c12_test.go:42: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmpurh25c12_test.go:42: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmpurh25c12_test.go:42:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ result int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit %\
    \ 2 != 0 {\n            result *= digit\n        }\n        n /= 10\n    }\n \
    \   return result\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpin6v33ly_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    if\
    \ n == 0 {\n        return 0\n    }\n    var result int\n    for n > 0 {\n   \
    \     digit := n % 10\n        if digit % 2 != 0 {\n            result *= digit\n\
    \        }\n        n /= 10\n    }\n    return result\n}\n\nfunc TestDigits(t\
    \ *testing.T) {\n  candidate := digits\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(5),\
    \ expected: 5 },\n     { actual: candidate(54), expected: 5 },\n     { actual:\
    \ candidate(120), expected: 1 },\n     { actual: candidate(5014), expected: 5\
    \ },\n     { actual: candidate(98765), expected: 315 },\n     { actual: candidate(5576543),\
    \ expected: 2625 },\n     { actual: candidate(2468), expected: 0 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmpx48uovzp_test.go:45: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmpx48uovzp_test.go:45: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmpx48uovzp_test.go:45: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmpx48uovzp_test.go:45: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmpx48uovzp_test.go:45: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmpx48uovzp_test.go:45:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ result int\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 !=\
    \ 0 {\n            result *= digit\n        }\n        n /= 10\n    }\n    return\
    \ result\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54),\
    \ expected: 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual:\
    \ candidate(5014), expected: 5 },\n     { actual: candidate(98765), expected:\
    \ 315 },\n     { actual: candidate(5576543), expected: 2625 },\n     { actual:\
    \ candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmpurh25c12_test.go:42: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmpurh25c12_test.go:42: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmpurh25c12_test.go:42:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ prod int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2\
    \ == 1 {\n            prod *= digit\n        }\n        n /= 10\n    }\n    return\
    \ prod\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54),\
    \ expected: 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual:\
    \ candidate(5014), expected: 5 },\n     { actual: candidate(98765), expected:\
    \ 315 },\n     { actual: candidate(5576543), expected: 2625 },\n     { actual:\
    \ candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpmzjvs6xl_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    if\
    \ n < 0 {\n        n = -n\n    }\n    if n == 0 {\n        return 0\n    }\n \
    \   var product int = 1\n    for n > 0 {\n        digit := n % 10\n        if\
    \ digit % 2 == 1 {\n            product *= digit\n        }\n        n /= 10\n\
    \    }\n    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate\
    \ := digits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     {\
    \ actual: candidate(54), expected: 5 },\n     { actual: candidate(120), expected:\
    \ 1 },\n     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmp_12a88y0_test.go:48: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    if\
    \ n == 0 {\n        return 0\n    }\n    return n % 10 * digits(n / 10)\n}\n\n\
    func TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmpyxei06rb_test.go:37: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmpyxei06rb_test.go:37: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmpyxei06rb_test.go:37: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmpyxei06rb_test.go:37: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmpyxei06rb_test.go:37: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmpyxei06rb_test.go:37:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 0
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    if\
    \ n < 10 {\n        if n % 2 == 1 {\n            return n\n        }\n       \
    \ return 0\n    }\n    d := n % 10\n    if d % 2 == 1 {\n        return d * digits(n\
    \ / 10)\n    }\n    return digits(n / 10)\n}\n\nfunc TestDigits(t *testing.T)\
    \ {\n  candidate := digits\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(5),\
    \ expected: 5 },\n     { actual: candidate(54), expected: 5 },\n     { actual:\
    \ candidate(120), expected: 1 },\n     { actual: candidate(5014), expected: 5\
    \ },\n     { actual: candidate(98765), expected: 315 },\n     { actual: candidate(5576543),\
    \ expected: 2625 },\n     { actual: candidate(2468), expected: 0 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    if\
    \ n == 0 {\n        return 0\n    }\n    return n % 10 * digits(n / 10)\n}\n\n\
    func TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmpyxei06rb_test.go:37: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmpyxei06rb_test.go:37: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmpyxei06rb_test.go:37: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmpyxei06rb_test.go:37: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmpyxei06rb_test.go:37: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmpyxei06rb_test.go:37:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ prod int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2\
    \ != 0 {\n            prod *= digit\n        }\n        n /= 10\n    }\n    return\
    \ prod\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54),\
    \ expected: 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual:\
    \ candidate(5014), expected: 5 },\n     { actual: candidate(98765), expected:\
    \ 315 },\n     { actual: candidate(5576543), expected: 2625 },\n     { actual:\
    \ candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmphej5d3or_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    if\
    \ n == 0 {\n        return 0\n    }\n    if n % 2 == 0 {\n        return digits(n\
    \ / 10)\n    }\n    return n % 10 * digits(n / 10)\n}\n\nfunc TestDigits(t *testing.T)\
    \ {\n  candidate := digits\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(5),\
    \ expected: 5 },\n     { actual: candidate(54), expected: 5 },\n     { actual:\
    \ candidate(120), expected: 1 },\n     { actual: candidate(5014), expected: 5\
    \ },\n     { actual: candidate(98765), expected: 315 },\n     { actual: candidate(5576543),\
    \ expected: 2625 },\n     { actual: candidate(2468), expected: 0 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmpcagx6k7p_test.go:40: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmpcagx6k7p_test.go:40: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmpcagx6k7p_test.go:40: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmpcagx6k7p_test.go:40: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmpcagx6k7p_test.go:40: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmpcagx6k7p_test.go:40:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 0
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    if\
    \ n < 10 {\n        if n % 2 == 1 {\n            return n\n        }\n       \
    \ return 0\n    }\n    m := digits(n / 10)\n    if m == 0 {\n        if n % 2\
    \ == 1 {\n            return n % 10\n        }\n        return 0\n    }\n    if\
    \ n % 2 == 1 {\n        return m * (n % 10)\n    }\n    return m\n}\n\nfunc TestDigits(t\
    \ *testing.T) {\n  candidate := digits\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(5),\
    \ expected: 5 },\n     { actual: candidate(54), expected: 5 },\n     { actual:\
    \ candidate(120), expected: 1 },\n     { actual: candidate(5014), expected: 5\
    \ },\n     { actual: candidate(98765), expected: 315 },\n     { actual: candidate(5576543),\
    \ expected: 2625 },\n     { actual: candidate(2468), expected: 0 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ result int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit %\
    \ 2 != 0 {\n            result *= digit\n        }\n        n /= 10\n    }\n \
    \   return result\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpin6v33ly_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    if\
    \ n == 0 {\n        return 0\n    }\n    return n % 10 * digits(n / 10)\n}\n\n\
    func TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct {\n\
    \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmpyxei06rb_test.go:37: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmpyxei06rb_test.go:37: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmpyxei06rb_test.go:37: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmpyxei06rb_test.go:37: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmpyxei06rb_test.go:37: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmpyxei06rb_test.go:37:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    if\
    \ n < 10 {\n        if n % 2 == 1 {\n            return n\n        }\n       \
    \ return 0\n    }\n    return digits(n / 10) * digits(n % 10)\n}\n\nfunc TestDigits(t\
    \ *testing.T) {\n  candidate := digits\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(5),\
    \ expected: 5 },\n     { actual: candidate(54), expected: 5 },\n     { actual:\
    \ candidate(120), expected: 1 },\n     { actual: candidate(5014), expected: 5\
    \ },\n     { actual: candidate(98765), expected: 315 },\n     { actual: candidate(5576543),\
    \ expected: 2625 },\n     { actual: candidate(2468), expected: 0 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__1 (0.00s)\n\
    \        tmpoyj5bihj_test.go:40: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__2 (0.00s)\n        tmpoyj5bihj_test.go:40: expected\
    \ '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__3 (0.00s)\n\
    \        tmpoyj5bihj_test.go:40: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__4 (0.00s)\n        tmpoyj5bihj_test.go:40: expected\
    \ '%!s(int=315)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__5 (0.00s)\n\
    \        tmpoyj5bihj_test.go:40: expected '%!s(int=2625)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    if\
    \ n == 0 {\n        return 0\n    }\n    digit := n % 10\n    if digit % 2 ==\
    \ 1 {\n        return digit * digits(n / 10)\n    }\n    return digits(n / 10)\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmp9ubzxh7h_test.go:41: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmp9ubzxh7h_test.go:41: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmp9ubzxh7h_test.go:41: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmp9ubzxh7h_test.go:41: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmp9ubzxh7h_test.go:41: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmp9ubzxh7h_test.go:41:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    if\
    \ n < 0 {\n        n = -n\n    }\n    if n == 0 {\n        return 0\n    }\n \
    \   var result int\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 == 1 {\n            result *= digit\n        }\n        n /= 10\n    }\n\
    \    return result\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmpx37_sxtu_test.go:48: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmpx37_sxtu_test.go:48: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmpx37_sxtu_test.go:48: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmpx37_sxtu_test.go:48: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmpx37_sxtu_test.go:48: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmpx37_sxtu_test.go:48:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 0
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    if\
    \ n < 10 {\n        if n % 2 == 1 {\n            return n\n        }\n       \
    \ return 0\n    }\n    if n % 2 == 1 {\n        return n % 10 * digits(n / 10)\n\
    \    }\n    return digits(n / 10)\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate\
    \ := digits\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     {\
    \ actual: candidate(54), expected: 5 },\n     { actual: candidate(120), expected:\
    \ 1 },\n     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 0
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    if\
    \ n < 10 {\n        if n % 2 == 1 {\n            return n\n        }\n       \
    \ return 0\n    }\n    digit := n % 10\n    if digit % 2 == 1 {\n        return\
    \ digit * digits(n / 10)\n    }\n    return digits(n / 10)\n}\n\nfunc TestDigits(t\
    \ *testing.T) {\n  candidate := digits\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(5),\
    \ expected: 5 },\n     { actual: candidate(54), expected: 5 },\n     { actual:\
    \ candidate(120), expected: 1 },\n     { actual: candidate(5014), expected: 5\
    \ },\n     { actual: candidate(98765), expected: 315 },\n     { actual: candidate(5576543),\
    \ expected: 2625 },\n     { actual: candidate(2468), expected: 0 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.004s\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    product\
    \ := 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpj6asidw2_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    product\
    \ := 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            product *= digit\n        }\n        n /= 10\n    }\n    return product\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpj6asidw2_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ result int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit %\
    \ 2 != 0 {\n            result *= digit\n        }\n        n /= 10\n    }\n \
    \   return result\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpin6v33ly_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ prod int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2\
    \ != 0 {\n            prod *= digit\n        }\n        n /= 10\n    }\n    return\
    \ prod\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54),\
    \ expected: 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual:\
    \ candidate(5014), expected: 5 },\n     { actual: candidate(98765), expected:\
    \ 315 },\n     { actual: candidate(5576543), expected: 2625 },\n     { actual:\
    \ candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmphej5d3or_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    if\
    \ n == 0 {\n        return 0\n    }\n    if n % 2 == 0 {\n        return digits(n\
    \ / 10)\n    }\n    return (n % 10) * digits(n / 10)\n}\n\nfunc TestDigits(t *testing.T)\
    \ {\n  candidate := digits\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(5),\
    \ expected: 5 },\n     { actual: candidate(54), expected: 5 },\n     { actual:\
    \ candidate(120), expected: 1 },\n     { actual: candidate(5014), expected: 5\
    \ },\n     { actual: candidate(98765), expected: 315 },\n     { actual: candidate(5576543),\
    \ expected: 2625 },\n     { actual: candidate(2468), expected: 0 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmphw937egk_test.go:40: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmphw937egk_test.go:40: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmphw937egk_test.go:40: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmphw937egk_test.go:40: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmphw937egk_test.go:40: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmphw937egk_test.go:40:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ result int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit %\
    \ 2 != 0 {\n            result *= digit\n        }\n        n /= 10\n    }\n \
    \   return result\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpin6v33ly_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ result int\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 !=\
    \ 0 {\n            result *= digit\n        }\n        n /= 10\n    }\n    return\
    \ result\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54),\
    \ expected: 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual:\
    \ candidate(5014), expected: 5 },\n     { actual: candidate(98765), expected:\
    \ 315 },\n     { actual: candidate(5576543), expected: 2625 },\n     { actual:\
    \ candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmpurh25c12_test.go:42: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmpurh25c12_test.go:42: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmpurh25c12_test.go:42:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ result int\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 !=\
    \ 0 {\n            result *= digit\n        }\n        n /= 10\n    }\n    return\
    \ result\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54),\
    \ expected: 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual:\
    \ candidate(5014), expected: 5 },\n     { actual: candidate(98765), expected:\
    \ 315 },\n     { actual: candidate(5576543), expected: 2625 },\n     { actual:\
    \ candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmpurh25c12_test.go:42: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmpurh25c12_test.go:42: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmpurh25c12_test.go:42:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ result int\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 !=\
    \ 0 {\n            result *= digit\n        }\n        n /= 10\n    }\n    return\
    \ result\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54),\
    \ expected: 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual:\
    \ candidate(5014), expected: 5 },\n     { actual: candidate(98765), expected:\
    \ 315 },\n     { actual: candidate(5576543), expected: 2625 },\n     { actual:\
    \ candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmpurh25c12_test.go:42: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmpurh25c12_test.go:42: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmpurh25c12_test.go:42:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ result int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit %\
    \ 2 != 0 {\n            result *= digit\n        }\n        n /= 10\n    }\n \
    \   return result\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpin6v33ly_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    if\
    \ n == 0 {\n        return 0\n    }\n    var product int = 1\n    for n > 0 {\n\
    \        digit := n % 10\n        if digit % 2 != 0 {\n            product *=\
    \ digit\n        }\n        n /= 10\n    }\n    return product\n}\n\nfunc TestDigits(t\
    \ *testing.T) {\n  candidate := digits\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(5),\
    \ expected: 5 },\n     { actual: candidate(54), expected: 5 },\n     { actual:\
    \ candidate(120), expected: 1 },\n     { actual: candidate(5014), expected: 5\
    \ },\n     { actual: candidate(98765), expected: 315 },\n     { actual: candidate(5576543),\
    \ expected: 2625 },\n     { actual: candidate(2468), expected: 0 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpl6bcjxa7_test.go:45: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ result int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit %\
    \ 2 != 0 {\n            result *= digit\n        }\n        n /= 10\n    }\n \
    \   return result\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpin6v33ly_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    if\
    \ n == 0 {\n        return 0\n    }\n\n    var product int = 1\n    for n > 0\
    \ {\n        digit := n % 10\n        if digit % 2 != 0 {\n            product\
    \ *= digit\n        }\n        n /= 10\n    }\n    return product\n}\n\nfunc TestDigits(t\
    \ *testing.T) {\n  candidate := digits\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(5),\
    \ expected: 5 },\n     { actual: candidate(54), expected: 5 },\n     { actual:\
    \ candidate(120), expected: 1 },\n     { actual: candidate(5014), expected: 5\
    \ },\n     { actual: candidate(98765), expected: 315 },\n     { actual: candidate(5576543),\
    \ expected: 2625 },\n     { actual: candidate(2468), expected: 0 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmppd8m9loa_test.go:46: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ result int\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 !=\
    \ 0 {\n            result *= digit\n        }\n        n /= 10\n    }\n    return\
    \ result\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54),\
    \ expected: 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual:\
    \ candidate(5014), expected: 5 },\n     { actual: candidate(98765), expected:\
    \ 315 },\n     { actual: candidate(5576543), expected: 2625 },\n     { actual:\
    \ candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmpurh25c12_test.go:42: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmpurh25c12_test.go:42: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmpurh25c12_test.go:42:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ result int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit %\
    \ 2 != 0 {\n            result *= digit\n        }\n        n /= 10\n    }\n \
    \   return result\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpin6v33ly_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ result int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit %\
    \ 2 != 0 {\n            result *= digit\n        }\n        n /= 10\n    }\n \
    \   return result\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpin6v33ly_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    if\
    \ n == 0 {\n        return 0\n    }\n    var product int = 1\n    for n > 0 {\n\
    \        digit := n % 10\n        if digit % 2 != 0 {\n            product *=\
    \ digit\n        }\n        n /= 10\n    }\n    return product\n}\n\nfunc TestDigits(t\
    \ *testing.T) {\n  candidate := digits\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(5),\
    \ expected: 5 },\n     { actual: candidate(54), expected: 5 },\n     { actual:\
    \ candidate(120), expected: 1 },\n     { actual: candidate(5014), expected: 5\
    \ },\n     { actual: candidate(98765), expected: 315 },\n     { actual: candidate(5576543),\
    \ expected: 2625 },\n     { actual: candidate(2468), expected: 0 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpl6bcjxa7_test.go:45: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    if\
    \ n == 0 {\n        return 0\n    }\n    var product int = 1\n    for n > 0 {\n\
    \        digit := n % 10\n        if digit % 2 != 0 {\n            product *=\
    \ digit\n        }\n        n /= 10\n    }\n    return product\n}\n\nfunc TestDigits(t\
    \ *testing.T) {\n  candidate := digits\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(5),\
    \ expected: 5 },\n     { actual: candidate(54), expected: 5 },\n     { actual:\
    \ candidate(120), expected: 1 },\n     { actual: candidate(5014), expected: 5\
    \ },\n     { actual: candidate(98765), expected: 315 },\n     { actual: candidate(5576543),\
    \ expected: 2625 },\n     { actual: candidate(2468), expected: 0 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpl6bcjxa7_test.go:45: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ result int\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 !=\
    \ 0 {\n            result *= digit\n        }\n        n /= 10\n    }\n    return\
    \ result\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54),\
    \ expected: 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual:\
    \ candidate(5014), expected: 5 },\n     { actual: candidate(98765), expected:\
    \ 315 },\n     { actual: candidate(5576543), expected: 2625 },\n     { actual:\
    \ candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmpurh25c12_test.go:42: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmpurh25c12_test.go:42: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmpurh25c12_test.go:42:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ result int\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 !=\
    \ 0 {\n            result *= digit\n        }\n        n /= 10\n    }\n    return\
    \ result\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54),\
    \ expected: 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual:\
    \ candidate(5014), expected: 5 },\n     { actual: candidate(98765), expected:\
    \ 315 },\n     { actual: candidate(5576543), expected: 2625 },\n     { actual:\
    \ candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmpurh25c12_test.go:42: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmpurh25c12_test.go:42: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmpurh25c12_test.go:42:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ prod int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2\
    \ != 0 {\n            prod *= digit\n        }\n        n /= 10\n    }\n    return\
    \ prod\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54),\
    \ expected: 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual:\
    \ candidate(5014), expected: 5 },\n     { actual: candidate(98765), expected:\
    \ 315 },\n     { actual: candidate(5576543), expected: 2625 },\n     { actual:\
    \ candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmphej5d3or_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ result int\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 !=\
    \ 0 {\n            result *= digit\n        }\n        n /= 10\n    }\n    return\
    \ result\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54),\
    \ expected: 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual:\
    \ candidate(5014), expected: 5 },\n     { actual: candidate(98765), expected:\
    \ 315 },\n     { actual: candidate(5576543), expected: 2625 },\n     { actual:\
    \ candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmpurh25c12_test.go:42: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmpurh25c12_test.go:42: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmpurh25c12_test.go:42:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ result int\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 !=\
    \ 0 {\n            result *= digit\n        }\n        n /= 10\n    }\n    return\
    \ result\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54),\
    \ expected: 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual:\
    \ candidate(5014), expected: 5 },\n     { actual: candidate(98765), expected:\
    \ 315 },\n     { actual: candidate(5576543), expected: 2625 },\n     { actual:\
    \ candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmpurh25c12_test.go:42: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmpurh25c12_test.go:42: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmpurh25c12_test.go:42:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    if\
    \ n == 0 {\n        return 0\n    }\n    var product int = 1\n    for n > 0 {\n\
    \        digit := n % 10\n        if digit % 2 != 0 {\n            product *=\
    \ digit\n        }\n        n /= 10\n    }\n    return product\n}\n\nfunc TestDigits(t\
    \ *testing.T) {\n  candidate := digits\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(5),\
    \ expected: 5 },\n     { actual: candidate(54), expected: 5 },\n     { actual:\
    \ candidate(120), expected: 1 },\n     { actual: candidate(5014), expected: 5\
    \ },\n     { actual: candidate(98765), expected: 315 },\n     { actual: candidate(5576543),\
    \ expected: 2625 },\n     { actual: candidate(2468), expected: 0 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpl6bcjxa7_test.go:45: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ result int\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 !=\
    \ 0 {\n            result *= digit\n        }\n        n /= 10\n    }\n    return\
    \ result\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54),\
    \ expected: 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual:\
    \ candidate(5014), expected: 5 },\n     { actual: candidate(98765), expected:\
    \ 315 },\n     { actual: candidate(5576543), expected: 2625 },\n     { actual:\
    \ candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmpurh25c12_test.go:42: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmpurh25c12_test.go:42: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmpurh25c12_test.go:42:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ result int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit %\
    \ 2 != 0 {\n            result *= digit\n        }\n        n /= 10\n    }\n \
    \   return result\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpin6v33ly_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ result int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit %\
    \ 2 != 0 {\n            result *= digit\n        }\n        n /= 10\n    }\n \
    \   return result\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpin6v33ly_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ result int\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 !=\
    \ 0 {\n            result *= digit\n        }\n        n /= 10\n    }\n    return\
    \ result\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54),\
    \ expected: 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual:\
    \ candidate(5014), expected: 5 },\n     { actual: candidate(98765), expected:\
    \ 315 },\n     { actual: candidate(5576543), expected: 2625 },\n     { actual:\
    \ candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__0 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__1 (0.00s)\n        tmpurh25c12_test.go:42: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__2 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=1)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__3 (0.00s)\n        tmpurh25c12_test.go:42: expected\
    \ '%!s(int=5)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__4 (0.00s)\n\
    \        tmpurh25c12_test.go:42: expected '%!s(int=315)', got '%!s(int=0)'\n \
    \   --- FAIL: TestDigits/test_num__5 (0.00s)\n        tmpurh25c12_test.go:42:\
    \ expected '%!s(int=2625)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ result int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit %\
    \ 2 != 0 {\n            result *= digit\n        }\n        n /= 10\n    }\n \
    \   return result\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpin6v33ly_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ result int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit %\
    \ 2 != 0 {\n            result *= digit\n        }\n        n /= 10\n    }\n \
    \   return result\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpin6v33ly_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ result int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit %\
    \ 2 != 0 {\n            result *= digit\n        }\n        n /= 10\n    }\n \
    \   return result\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpin6v33ly_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 0
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    if\
    \ n < 10 {\n        if n % 2 == 1 {\n            return n\n        }\n       \
    \ return 0\n    }\n    d := n % 10\n    if d % 2 == 1 {\n        return d * digits(n\
    \ / 10)\n    }\n    return digits(n / 10)\n}\n\nfunc TestDigits(t *testing.T)\
    \ {\n  candidate := digits\n\ttype test struct {\n\t\tactual   interface{}\n\t\
    \texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(5),\
    \ expected: 5 },\n     { actual: candidate(54), expected: 5 },\n     { actual:\
    \ candidate(120), expected: 1 },\n     { actual: candidate(5014), expected: 5\
    \ },\n     { actual: candidate(98765), expected: 315 },\n     { actual: candidate(5576543),\
    \ expected: 2625 },\n     { actual: candidate(2468), expected: 0 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ result int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit %\
    \ 2 != 0 {\n            result *= digit\n        }\n        n /= 10\n    }\n \
    \   return result\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpin6v33ly_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ product int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit\
    \ % 2 != 0 {\n            product *= digit\n        }\n        n /= 10\n    }\n\
    \    return product\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpxy3g_1y5_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    if\
    \ n < 10 {\n        if n % 2 == 1 {\n            return n\n        }\n       \
    \ return 0\n    }\n    return digits(n / 10) * (n % 10)\n}\n\nfunc TestDigits(t\
    \ *testing.T) {\n  candidate := digits\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(5),\
    \ expected: 5 },\n     { actual: candidate(54), expected: 5 },\n     { actual:\
    \ candidate(120), expected: 1 },\n     { actual: candidate(5014), expected: 5\
    \ },\n     { actual: candidate(98765), expected: 315 },\n     { actual: candidate(5576543),\
    \ expected: 2625 },\n     { actual: candidate(2468), expected: 0 },\n   }\n\n\t\
    for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__1 (0.00s)\n\
    \        tmpm0n2n3ix_test.go:40: expected '%!s(int=5)', got '%!s(int=20)'\n  \
    \  --- FAIL: TestDigits/test_num__2 (0.00s)\n        tmpm0n2n3ix_test.go:40: expected\
    \ '%!s(int=1)', got '%!s(int=0)'\n    --- FAIL: TestDigits/test_num__3 (0.00s)\n\
    \        tmpm0n2n3ix_test.go:40: expected '%!s(int=5)', got '%!s(int=0)'\n   \
    \ --- FAIL: TestDigits/test_num__4 (0.00s)\n        tmpm0n2n3ix_test.go:40: expected\
    \ '%!s(int=315)', got '%!s(int=15120)'\n    --- FAIL: TestDigits/test_num__5 (0.00s)\n\
    \        tmpm0n2n3ix_test.go:40: expected '%!s(int=2625)', got '%!s(int=63000)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ result int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit %\
    \ 2 != 0 {\n            result *= digit\n        }\n        n /= 10\n    }\n \
    \   return result\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpin6v33ly_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    var\
    \ result int = 1\n    for n > 0 {\n        digit := n % 10\n        if digit %\
    \ 2 != 0 {\n            result *= digit\n        }\n        n /= 10\n    }\n \
    \   return result\n}\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(5), expected: 5 },\n     { actual:\
    \ candidate(54), expected: 5 },\n     { actual: candidate(120), expected: 1 },\n\
    \     { actual: candidate(5014), expected: 5 },\n     { actual: candidate(98765),\
    \ expected: 315 },\n     { actual: candidate(5576543), expected: 2625 },\n   \
    \  { actual: candidate(2468), expected: 0 },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpin6v33ly_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660074543
- exit_code: 1
  program: "package digits_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
    \ Given a positive integer n, return the product of the odd digits.\n// Return\
    \ 0 if all digits are even.\n// For example:\nfunc digits(n int) int {\n    result\
    \ := 1\n    for n > 0 {\n        digit := n % 10\n        if digit % 2 != 0 {\n\
    \            result *= digit\n        }\n        n /= 10\n    }\n    return result\n\
    }\n\nfunc TestDigits(t *testing.T) {\n  candidate := digits\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(5), expected: 5 },\n     { actual: candidate(54), expected:\
    \ 5 },\n     { actual: candidate(120), expected: 1 },\n     { actual: candidate(5014),\
    \ expected: 5 },\n     { actual: candidate(98765), expected: 315 },\n     { actual:\
    \ candidate(5576543), expected: 2625 },\n     { actual: candidate(2468), expected:\
    \ 0 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestDigits (0.00s)\n    --- FAIL: TestDigits/test_num__6 (0.00s)\n\
    \        tmpp3dypllt_test.go:42: expected '%!s(int=0)', got '%!s(int=1)'\nFAIL\n\
    FAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074543

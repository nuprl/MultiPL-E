name: HumanEval_93_encode
language: go_test.go
prompt: "package encode_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Write\
  \ a function that takes a message, and encodes in such a \n// way that it swaps\
  \ case of all letters, replaces all vowels in \n// the message with the letter that\
  \ appears 2 places ahead of that \n// vowel in the english alphabet. \n// Assume\
  \ only letters. \n// Examples:\nfunc encode(message string) string {\n"
tests: "func TestEncode(t *testing.T) {\n  candidate := encode\n\ttype test struct\
  \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
  \     { actual: candidate(\"TEST\"), expected: \"tgst\" },\n     { actual: candidate(\"\
  Mudasir\"), expected: \"mWDCSKR\" },\n     { actual: candidate(\"YES\"), expected:\
  \ \"ygs\" },\n     { actual: candidate(\"This is a message\"), expected: \"tHKS\
  \ KS C MGSSCGG\" },\n     { actual: candidate(\"I DoNt KnOw WhAt tO WrItE\"), expected:\
  \ \"k dQnT kNqW wHcT Tq wRkTg\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
  test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
  \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
  , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
completions: ["    var encoded string\n    for _, c := range message {\n        if\
    \ c >= 'a' && c <= 'z' {\n            encoded += string(c - 32)\n        } else\
    \ if c >= 'A' && c <= 'Z' {\n            encoded += string(c + 32)\n        }\
    \ else {\n            encoded += string(c)\n        }\n    }\n    return encoded\n\
    }\n", "    var result string\n    for _, c := range message {\n        if c >=\
    \ 'a' && c <= 'z' {\n            result += string(c - 32)\n        } else if c\
    \ >= 'A' && c <= 'Z' {\n            result += string(c + 32)\n        } else {\n\
    \            result += string(c)\n        }\n    }\n    return result\n}\n", " \
    \   var result string\n    for _, c := range message {\n        if c >= 'a' &&\
    \ c <= 'z' {\n            result += string(c - 'a' + 'A')\n        } else if c\
    \ >= 'A' && c <= 'Z' {\n            result += string(c - 'A' + 'a')\n        }\
    \ else {\n            result += string(c)\n        }\n    }\n    return result\n\
    }\n", "    return \"\"\n}\n", "    var encoded string\n    for _, c := range message\
    \ {\n        if c >= 'a' && c <= 'z' {\n            encoded += string(c - 'a'\
    \ + 'A')\n        } else if c >= 'A' && c <= 'Z' {\n            encoded += string(c\
    \ - 'A' + 'a')\n        } else if c == 'a' || c == 'e' || c == 'i' || c == 'o'\
    \ || c == 'u' {\n            encoded += string(c + 2)\n        } else if c ==\
    \ 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U' {\n            encoded +=\
    \ string(c + 2)\n        } else {\n            encoded += string(c)\n        }\n\
    \    }\n    return encoded\n}\n", "    return \"\"\n}\n", "    var result string\n\
    \    for _, c := range message {\n        if c >= 'a' && c <= 'z' {\n        \
    \    result += string(c - 'a' + 'A')\n        } else if c >= 'A' && c <= 'Z' {\n\
    \            result += string(c - 'A' + 'a')\n        } else {\n            result\
    \ += string(c)\n        }\n    }\n    return result\n}\n", "    var encoded string\n\
    \    for _, letter := range message {\n        if letter >= 'a' && letter <= 'z'\
    \ {\n            encoded += string(letter - 'a' + 'A')\n        } else if letter\
    \ >= 'A' && letter <= 'Z' {\n            encoded += string(letter - 'A' + 'a')\n\
    \        } else {\n            encoded += string(letter)\n        }\n    }\n \
    \   return encoded\n}\n", "    var encoded string\n    for _, char := range message\
    \ {\n        if char >= 'a' && char <= 'z' {\n            encoded += string(char\
    \ - 32)\n        } else if char >= 'A' && char <= 'Z' {\n            encoded +=\
    \ string(char + 32)\n        } else if char == 'a' {\n            encoded += \"\
    c\"\n        } else if char == 'e' {\n            encoded += \"g\"\n        }\
    \ else if char == 'i' {\n            encoded += \"k\"\n        } else if char\
    \ == 'o' {\n            encoded += \"q\"\n        } else if char == 'u' {\n  \
    \          encoded += \"y\"\n        } else if char == 'A' {\n            encoded\
    \ += \"C\"\n        } else if char == 'E' {\n            encoded += \"G\"\n  \
    \      } else if char == 'I' {\n            encoded += \"K\"\n        } else if\
    \ char == 'O' {\n            encoded += \"Q\"\n        } else if char == 'U' {\n\
    \            encoded += \"Y\"\n        } else {\n            encoded += string(char)\n\
    \        }\n    }\n    return encoded\n}\n", "    var encoded string\n    for\
    \ _, char := range message {\n        if char >= 'a' && char <= 'z' {\n      \
    \      encoded += string(char - 32)\n        } else if char >= 'A' && char <=\
    \ 'Z' {\n            encoded += string(char + 32)\n        } else if char == 'a'\
    \ {\n            encoded += \"c\"\n        } else if char == 'e' {\n         \
    \   encoded += \"g\"\n        } else if char == 'i' {\n            encoded +=\
    \ \"k\"\n        } else if char == 'o' {\n            encoded += \"q\"\n     \
    \   } else if char == 'u' {\n            encoded += \"y\"\n        } else if char\
    \ == 'A' {\n            encoded += \"C\"\n        } else if char == 'E' {\n  \
    \          encoded += \"G\"\n        } else if char == 'I' {\n            encoded\
    \ += \"K\"\n        } else if char == 'O' {\n            encoded += \"Q\"\n  \
    \      } else if char == 'U' {\n            encoded += \"Y\"\n        } else {\n\
    \            encoded += string(char)\n        }\n    }\n    return encoded\n}\n",
  "    var result string\n    for _, c := range message {\n        if c >= 'a' &&\
    \ c <= 'z' {\n            result += string(c - 32)\n        } else if c >= 'A'\
    \ && c <= 'Z' {\n            result += string(c + 32)\n        } else {\n    \
    \        result += string(c)\n        }\n    }\n    return result\n}\n", "   \
    \ var result string\n    for _, c := range message {\n        if c >= 'a' && c\
    \ <= 'z' {\n            result += string(c - 32)\n        } else if c >= 'A' &&\
    \ c <= 'Z' {\n            result += string(c + 32)\n        } else {\n       \
    \     result += string(c)\n        }\n    }\n    return result\n}\n", "    var\
    \ encoded string\n    for _, c := range message {\n        if c >= 'a' && c <=\
    \ 'z' {\n            encoded += string(c - 'a' + 'A')\n        } else if c >=\
    \ 'A' && c <= 'Z' {\n            encoded += string(c - 'A' + 'a')\n        } else\
    \ if c == 'a' {\n            encoded += \"c\"\n        } else if c == 'e' {\n\
    \            encoded += \"g\"\n        } else if c == 'i' {\n            encoded\
    \ += \"k\"\n        } else if c == 'o' {\n            encoded += \"q\"\n     \
    \   } else if c == 'u' {\n            encoded += \"y\"\n        } else if c ==\
    \ 'A' {\n            encoded += \"C\"\n        } else if c == 'E' {\n        \
    \    encoded += \"G\"\n        } else if c == 'I' {\n            encoded += \"\
    K\"\n        } else if c == 'O' {\n            encoded += \"Q\"\n        } else\
    \ if c == 'U' {\n            encoded += \"Y\"\n        } else {\n            encoded\
    \ += string(c)\n        }\n    }\n    return encoded\n}\n", "    var result string\n\
    \    for _, c := range message {\n        if c >= 'a' && c <= 'z' {\n        \
    \    result += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n    \
    \        result += string(c + 32)\n        } else {\n            result += string(c)\n\
    \        }\n    }\n    return result\n}\n", "    var encoded string\n    for _,\
    \ char := range message {\n        if char >= 'a' && char <= 'z' {\n         \
    \   encoded += string(char - 32)\n        } else if char >= 'A' && char <= 'Z'\
    \ {\n            encoded += string(char + 32)\n        } else if char == 'a' {\n\
    \            encoded += \"c\"\n        } else if char == 'e' {\n            encoded\
    \ += \"g\"\n        } else if char == 'i' {\n            encoded += \"k\"\n  \
    \      } else if char == 'o' {\n            encoded += \"q\"\n        } else if\
    \ char == 'u' {\n            encoded += \"y\"\n        } else if char == 'A' {\n\
    \            encoded += \"C\"\n        } else if char == 'E' {\n            encoded\
    \ += \"G\"\n        } else if char == 'I' {\n            encoded += \"K\"\n  \
    \      } else if char == 'O' {\n            encoded += \"Q\"\n        } else if\
    \ char == 'U' {\n            encoded += \"Y\"\n        } else {\n            encoded\
    \ += string(char)\n        }\n    }\n    return encoded\n}\n", "    var result\
    \ string\n    for _, c := range message {\n        if c >= 'a' && c <= 'z' {\n\
    \            result += string(c - 'a' + 'A')\n        } else if c >= 'A' && c\
    \ <= 'Z' {\n            result += string(c - 'A' + 'a')\n        } else {\n  \
    \          result += string(c)\n        }\n    }\n    return result\n}\n", " \
    \   var encoded string\n    for _, c := range message {\n        if c >= 'a' &&\
    \ c <= 'z' {\n            encoded += string(c - 'a' + 'A')\n        } else if\
    \ c >= 'A' && c <= 'Z' {\n            encoded += string(c - 'A' + 'a')\n     \
    \   } else if c == 'a' {\n            encoded += \"c\"\n        } else if c ==\
    \ 'e' {\n            encoded += \"g\"\n        } else if c == 'i' {\n        \
    \    encoded += \"k\"\n        } else if c == 'o' {\n            encoded += \"\
    q\"\n        } else if c == 'u' {\n            encoded += \"y\"\n        } else\
    \ if c == 'A' {\n            encoded += \"C\"\n        } else if c == 'E' {\n\
    \            encoded += \"G\"\n        } else if c == 'I' {\n            encoded\
    \ += \"K\"\n        } else if c == 'O' {\n            encoded += \"Q\"\n     \
    \   } else if c == 'U' {\n            encoded += \"Y\"\n        } else {\n   \
    \         encoded += string(c)\n        }\n    }\n    return encoded\n}\n", " \
    \   var encoded string\n    for _, char := range message {\n        if char >=\
    \ 'a' && char <= 'z' {\n            encoded += string(char - 32)\n        } else\
    \ if char >= 'A' && char <= 'Z' {\n            encoded += string(char + 32)\n\
    \        } else if char == 'a' {\n            encoded += \"c\"\n        } else\
    \ if char == 'e' {\n            encoded += \"g\"\n        } else if char == 'i'\
    \ {\n            encoded += \"k\"\n        } else if char == 'o' {\n         \
    \   encoded += \"q\"\n        } else if char == 'u' {\n            encoded +=\
    \ \"y\"\n        } else if char == 'A' {\n            encoded += \"C\"\n     \
    \   } else if char == 'E' {\n            encoded += \"G\"\n        } else if char\
    \ == 'I' {\n            encoded += \"K\"\n        } else if char == 'O' {\n  \
    \          encoded += \"Q\"\n        } else if char == 'U' {\n            encoded\
    \ += \"Y\"\n        } else {\n            encoded += string(char)\n        }\n\
    \    }\n    return encoded\n}\n", "    // TODO: Implement\n    return \"\"\n}\n",
  "    return \"\"\n}\n", "    var result string\n    for _, c := range message {\n\
    \        if c >= 'a' && c <= 'z' {\n            result += string(c - ('a' - 'A'))\n\
    \        } else if c >= 'A' && c <= 'Z' {\n            result += string(c + ('a'\
    \ - 'A'))\n        } else {\n            result += string(c)\n        }\n    }\n\
    \    return result\n}\n", "    var result string\n    for _, c := range message\
    \ {\n        if c >= 'a' && c <= 'z' {\n            result += string(c - 32)\n\
    \        } else if c >= 'A' && c <= 'Z' {\n            result += string(c + 32)\n\
    \        } else {\n            result += string(c)\n        }\n    }\n    return\
    \ result\n}\n", "    // TODO: implement\n    return \"\"\n}\n", "    return \"\
    \"\n}\n", "    var result string\n    for _, char := range message {\n       \
    \ if char >= 'a' && char <= 'z' {\n            result += string(char + 2 - 'a'\
    \ + 'A')\n        } else if char >= 'A' && char <= 'Z' {\n            result +=\
    \ string(char + 2 - 'A' + 'a')\n        } else {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n", "    var result string\n    for _,\
    \ c := range message {\n        if c >= 'a' && c <= 'z' {\n            result\
    \ += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            result\
    \ += string(c + 32)\n        } else {\n            result += string(c)\n     \
    \   }\n    }\n    return result\n}\n", "    var result string\n    for _, c :=\
    \ range message {\n        if c >= 'a' && c <= 'z' {\n            result += string(c\
    \ - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            result += string(c\
    \ + 32)\n        } else {\n            result += string(c)\n        }\n    }\n\
    \    return result\n}\n", "    var result string\n    for _, char := range message\
    \ {\n        if char >= 'a' && char <= 'z' {\n            result += string(char\
    \ - 32)\n        } else if char >= 'A' && char <= 'Z' {\n            result +=\
    \ string(char + 32)\n        } else {\n            result += string(char)\n  \
    \      }\n    }\n    return result\n}\n", "    var encoded string\n    for _,\
    \ char := range message {\n        if char >= 'a' && char <= 'z' {\n         \
    \   encoded += string(char - 32)\n        } else if char >= 'A' && char <= 'Z'\
    \ {\n            encoded += string(char + 32)\n        } else if char == 'a' {\n\
    \            encoded += \"c\"\n        } else if char == 'e' {\n            encoded\
    \ += \"g\"\n        } else if char == 'i' {\n            encoded += \"k\"\n  \
    \      } else if char == 'o' {\n            encoded += \"q\"\n        } else if\
    \ char == 'u' {\n            encoded += \"y\"\n        } else if char == 'A' {\n\
    \            encoded += \"C\"\n        } else if char == 'E' {\n            encoded\
    \ += \"G\"\n        } else if char == 'I' {\n            encoded += \"K\"\n  \
    \      } else if char == 'O' {\n            encoded += \"Q\"\n        } else if\
    \ char == 'U' {\n            encoded += \"Y\"\n        } else {\n            encoded\
    \ += string(char)\n        }\n    }\n    return encoded\n}\n", "    var result\
    \ string\n    for _, c := range message {\n        if c >= 'a' && c <= 'z' {\n\
    \            result += string(c - 'a' + 'A')\n        } else if c >= 'A' && c\
    \ <= 'Z' {\n            result += string(c - 'A' + 'a')\n        } else {\n  \
    \          result += string(c)\n        }\n    }\n    return result\n}\n", " \
    \   return \"\"\n}\n", "    var result string\n    for _, c := range message {\n\
    \        if c >= 'a' && c <= 'z' {\n            result += string(c - 'a' + 'A')\n\
    \        } else if c >= 'A' && c <= 'Z' {\n            result += string(c - 'A'\
    \ + 'a')\n        } else {\n            result += string(c)\n        }\n    }\n\
    \    return result\n}\n", "    var encoded string\n    for _, c := range message\
    \ {\n        if c >= 'a' && c <= 'z' {\n            encoded += string(c - 'a'\
    \ + 'A')\n        } else if c >= 'A' && c <= 'Z' {\n            encoded += string(c\
    \ - 'A' + 'a')\n        } else if c == 'a' {\n            encoded += \"c\"\n \
    \       } else if c == 'e' {\n            encoded += \"g\"\n        } else if\
    \ c == 'i' {\n            encoded += \"k\"\n        } else if c == 'o' {\n   \
    \         encoded += \"q\"\n        } else if c == 'u' {\n            encoded\
    \ += \"y\"\n        } else if c == 'A' {\n            encoded += \"C\"\n     \
    \   } else if c == 'E' {\n            encoded += \"G\"\n        } else if c ==\
    \ 'I' {\n            encoded += \"K\"\n        } else if c == 'O' {\n        \
    \    encoded += \"Q\"\n        } else if c == 'U' {\n            encoded += \"\
    Y\"\n        } else {\n            encoded += string(c)\n        }\n    }\n  \
    \  return encoded\n}\n", "    var result string\n    for _, char := range message\
    \ {\n        if char >= 'a' && char <= 'z' {\n            result += string(char\
    \ - 32)\n        } else if char >= 'A' && char <= 'Z' {\n            result +=\
    \ string(char + 32)\n        } else {\n            result += string(char)\n  \
    \      }\n    }\n    return result\n}\n", "    var result string\n    for _, c\
    \ := range message {\n        if c >= 'a' && c <= 'z' {\n            result +=\
    \ string(c - 'a' + 'A')\n        } else if c >= 'A' && c <= 'Z' {\n          \
    \  result += string(c - 'A' + 'a')\n        } else {\n            result += string(c)\n\
    \        }\n    }\n    return result\n}\n", "    var encoded string\n    for _,\
    \ c := range message {\n        switch c {\n        case 'a':\n            encoded\
    \ += \"c\"\n        case 'e':\n            encoded += \"g\"\n        case 'i':\n\
    \            encoded += \"k\"\n        case 'o':\n            encoded += \"q\"\
    \n        case 'u':\n            encoded += \"y\"\n        case 'A':\n       \
    \     encoded += \"C\"\n        case 'E':\n            encoded += \"G\"\n    \
    \    case 'I':\n            encoded += \"K\"\n        case 'O':\n            encoded\
    \ += \"Q\"\n        case 'U':\n            encoded += \"Y\"\n        default:\n\
    \            encoded += string(c)\n        }\n    }\n    return encoded\n}\n",
  "    var encoded string\n    for _, c := range message {\n        if c >= 'a' &&\
    \ c <= 'z' {\n            encoded += string(c - 32)\n        } else if c >= 'A'\
    \ && c <= 'Z' {\n            encoded += string(c + 32)\n        } else {\n   \
    \         encoded += string(c)\n        }\n    }\n    return encoded\n}\n", " \
    \   // your code here\n    return \"\"\n}\n", "    var result string\n    for\
    \ _, c := range message {\n        if c >= 'a' && c <= 'z' {\n            result\
    \ += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            result\
    \ += string(c + 32)\n        } else {\n            result += string(c)\n     \
    \   }\n    }\n    return result\n}\n", "    var result string\n    for _, c :=\
    \ range message {\n        if c >= 'a' && c <= 'z' {\n            result += string(c\
    \ - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            result += string(c\
    \ + 32)\n        } else {\n            result += string(c)\n        }\n    }\n\
    \    return result\n}\n", "    var result string\n    for _, char := range message\
    \ {\n        if char >= 'a' && char <= 'z' {\n            result += string(char\
    \ - 32)\n        } else if char >= 'A' && char <= 'Z' {\n            result +=\
    \ string(char + 32)\n        } else {\n            result += string(char)\n  \
    \      }\n    }\n    return result\n}\n", "    return \"\"\n}\n", "    var result\
    \ string\n    for _, c := range message {\n        if c >= 'a' && c <= 'z' {\n\
    \            result += string(c - 'a' + 'A')\n        } else if c >= 'A' && c\
    \ <= 'Z' {\n            result += string(c - 'A' + 'a')\n        } else {\n  \
    \          result += string(c)\n        }\n    }\n    return result\n}\n", " \
    \   // TODO: Implement\n    return \"\"\n}\n", "    var encoded string\n    for\
    \ _, char := range message {\n        if char >= 'a' && char <= 'z' {\n      \
    \      encoded += string(char - 32)\n        } else if char >= 'A' && char <=\
    \ 'Z' {\n            encoded += string(char + 32)\n        } else if char == 'a'\
    \ {\n            encoded += \"c\"\n        } else if char == 'e' {\n         \
    \   encoded += \"g\"\n        } else if char == 'i' {\n            encoded +=\
    \ \"k\"\n        } else if char == 'o' {\n            encoded += \"q\"\n     \
    \   } else if char == 'u' {\n            encoded += \"y\"\n        } else if char\
    \ == 'A' {\n            encoded += \"C\"\n        } else if char == 'E' {\n  \
    \          encoded += \"G\"\n        } else if char == 'I' {\n            encoded\
    \ += \"K\"\n        } else if char == 'O' {\n            encoded += \"Q\"\n  \
    \      } else if char == 'U' {\n            encoded += \"Y\"\n        } else {\n\
    \            encoded += string(char)\n        }\n    }\n    return encoded\n}\n",
  "    var result string\n    for _, char := range message {\n        if char >= 'a'\
    \ && char <= 'z' {\n            result += string(char - 32)\n        } else if\
    \ char >= 'A' && char <= 'Z' {\n            result += string(char + 32)\n    \
    \    } else {\n            result += string(char)\n        }\n    }\n    return\
    \ result\n}\n", "    return \"\"\n}\n", "    // TODO: Implement\n    return \"\
    \"\n}\n", "    var result string\n    for _, c := range message {\n        if\
    \ c >= 'a' && c <= 'z' {\n            result += string(c - 32)\n        } else\
    \ if c >= 'A' && c <= 'Z' {\n            result += string(c + 32)\n        } else\
    \ {\n            result += string(c)\n        }\n    }\n    return result\n}\n",
  "    return \"\"\n}\n", "    var result string\n    for _, c := range message {\n\
    \        if c >= 'a' && c <= 'z' {\n            result += string(c - 32)\n   \
    \     } else if c >= 'A' && c <= 'Z' {\n            result += string(c + 32)\n\
    \        } else {\n            result += string(c)\n        }\n    }\n    return\
    \ result\n}\n", "    var result string\n    for _, c := range message {\n    \
    \    if c >= 'a' && c <= 'z' {\n            result += string(c - 32)\n       \
    \ } else if c >= 'A' && c <= 'Z' {\n            result += string(c + 32)\n   \
    \     } else {\n            result += string(c)\n        }\n    }\n    return\
    \ result\n}\n", "    var encoded string\n    for _, char := range message {\n\
    \        if char >= 'a' && char <= 'z' {\n            encoded += string(char -\
    \ 32)\n        } else if char >= 'A' && char <= 'Z' {\n            encoded +=\
    \ string(char + 32)\n        } else if char == 'a' {\n            encoded += \"\
    c\"\n        } else if char == 'e' {\n            encoded += \"g\"\n        }\
    \ else if char == 'i' {\n            encoded += \"k\"\n        } else if char\
    \ == 'o' {\n            encoded += \"q\"\n        } else if char == 'u' {\n  \
    \          encoded += \"y\"\n        } else if char == 'A' {\n            encoded\
    \ += \"C\"\n        } else if char == 'E' {\n            encoded += \"G\"\n  \
    \      } else if char == 'I' {\n            encoded += \"K\"\n        } else if\
    \ char == 'O' {\n            encoded += \"Q\"\n        } else if char == 'U' {\n\
    \            encoded += \"Y\"\n        } else {\n            encoded += string(char)\n\
    \        }\n    }\n    return encoded\n}\n", "    var result string\n    for _,\
    \ c := range message {\n        if c >= 'a' && c <= 'z' {\n            result\
    \ += string(c - 'a' + 'A')\n        } else if c >= 'A' && c <= 'Z' {\n       \
    \     result += string(c - 'A' + 'a')\n        } else {\n            result +=\
    \ string(c)\n        }\n    }\n    return result\n}\n", "    encoded := \"\"\n\
    \    for _, c := range message {\n        if c >= 'a' && c <= 'z' {\n        \
    \    encoded += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n   \
    \         encoded += string(c + 32)\n        } else {\n            encoded +=\
    \ string(c)\n        }\n    }\n    return encoded\n}\n", "    var result string\n\
    \    for _, c := range message {\n        if c >= 'a' && c <= 'z' {\n        \
    \    result += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n    \
    \        result += string(c + 32)\n        } else {\n            result += string(c)\n\
    \        }\n    }\n    return result\n}\n", "    var result string\n    for _,\
    \ c := range message {\n        if c >= 'a' && c <= 'z' {\n            result\
    \ += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            result\
    \ += string(c + 32)\n        } else {\n            result += string(c)\n     \
    \   }\n    }\n    return result\n}\n", "    var encoded string\n    for _, char\
    \ := range message {\n        if char >= 'a' && char <= 'z' {\n            encoded\
    \ += string(char - 32)\n        } else if char >= 'A' && char <= 'Z' {\n     \
    \       encoded += string(char + 32)\n        } else if char == 'a' {\n      \
    \      encoded += \"c\"\n        } else if char == 'e' {\n            encoded\
    \ += \"g\"\n        } else if char == 'i' {\n            encoded += \"k\"\n  \
    \      } else if char == 'o' {\n            encoded += \"q\"\n        } else if\
    \ char == 'u' {\n            encoded += \"y\"\n        } else if char == 'A' {\n\
    \            encoded += \"C\"\n        } else if char == 'E' {\n            encoded\
    \ += \"G\"\n        } else if char == 'I' {\n            encoded += \"K\"\n  \
    \      } else if char == 'O' {\n            encoded += \"Q\"\n        } else if\
    \ char == 'U' {\n            encoded += \"Y\"\n        } else {\n            encoded\
    \ += string(char)\n        }\n    }\n    return encoded\n}\n", "    return \"\"\
    \n}\n", "    var encoded string\n    for _, c := range message {\n        if c\
    \ >= 'a' && c <= 'z' {\n            encoded += string(c - 32)\n        } else\
    \ if c >= 'A' && c <= 'Z' {\n            encoded += string(c + 32)\n        }\
    \ else {\n            encoded += string(c)\n        }\n    }\n    return encoded\n\
    }\n", "    var encoded string\n    for _, letter := range message {\n        if\
    \ 'a' <= letter && letter <= 'z' {\n            encoded += string(letter - 'a'\
    \ + 'A')\n        } else if 'A' <= letter && letter <= 'Z' {\n            encoded\
    \ += string(letter - 'A' + 'a')\n        } else {\n            encoded += string(letter)\n\
    \        }\n    }\n    return encoded\n}\n", "    var result string\n    for _,\
    \ char := range message {\n        if char >= 'a' && char <= 'z' {\n         \
    \   char = char - 32\n        } else if char >= 'A' && char <= 'Z' {\n       \
    \     char = char + 32\n        }\n        switch char {\n        case 'A':\n\
    \            char = 'C'\n        case 'E':\n            char = 'G'\n        case\
    \ 'I':\n            char = 'K'\n        case 'O':\n            char = 'Q'\n  \
    \      case 'U':\n            char = 'W'\n        case 'a':\n            char\
    \ = 'c'\n        case 'e':\n            char = 'g'\n        case 'i':\n      \
    \      char = 'k'\n        case 'o':\n            char = 'q'\n        case 'u':\n\
    \            char = 'w'\n        }\n        result += string(char)\n    }\n  \
    \  return result\n}\n", "    var encoded string\n    for _, c := range message\
    \ {\n        if c >= 'a' && c <= 'z' {\n            encoded += string(c - 'a'\
    \ + 'A')\n        } else if c >= 'A' && c <= 'Z' {\n            encoded += string(c\
    \ - 'A' + 'a')\n        } else if c == 'a' || c == 'e' || c == 'i' || c == 'o'\
    \ || c == 'u' {\n            encoded += string(c + 2)\n        } else if c ==\
    \ 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U' {\n            encoded +=\
    \ string(c + 2)\n        } else {\n            encoded += string(c)\n        }\n\
    \    }\n    return encoded\n}\n", "    return \"\"\n}\n", "    return \"\"\n}\n",
  "    // var encoded string\n    // for _, char := range message {\n    //     if\
    \ char >= 'a' && char <= 'z' {\n    //         encoded += string(char - 32)\n\
    \    //     } else if char >= 'A' && char <= 'Z' {\n    //         encoded +=\
    \ string(char + 32)\n    //     } else {\n    //         encoded += string(char)\n\
    \    //     }\n    // }\n    // return encoded\n    return \"\"\n}\n", "    //\
    \ return \"\"\n    var result string\n    for _, c := range message {\n      \
    \  if c >= 'a' && c <= 'z' {\n            result += string(c - 32)\n        }\
    \ else if c >= 'A' && c <= 'Z' {\n            result += string(c + 32)\n     \
    \   } else {\n            result += string(c)\n        }\n    }\n    return result\n\
    }\n", "    var encoded string\n    for _, char := range message {\n        if\
    \ char >= 'a' && char <= 'z' {\n            encoded += string(char - 32)\n   \
    \     } else if char >= 'A' && char <= 'Z' {\n            encoded += string(char\
    \ + 32)\n        } else if char == 'a' {\n            encoded += \"c\"\n     \
    \   } else if char == 'e' {\n            encoded += \"g\"\n        } else if char\
    \ == 'i' {\n            encoded += \"k\"\n        } else if char == 'o' {\n  \
    \          encoded += \"q\"\n        } else if char == 'u' {\n            encoded\
    \ += \"y\"\n        } else if char == 'A' {\n            encoded += \"C\"\n  \
    \      } else if char == 'E' {\n            encoded += \"G\"\n        } else if\
    \ char == 'I' {\n            encoded += \"K\"\n        } else if char == 'O' {\n\
    \            encoded += \"Q\"\n        } else if char == 'U' {\n            encoded\
    \ += \"Y\"\n        } else {\n            encoded += string(char)\n        }\n\
    \    }\n    return encoded\n}\n", "    var encoded string\n    for _, c := range\
    \ message {\n        if c >= 'a' && c <= 'z' {\n            encoded += string(c\
    \ - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            encoded += string(c\
    \ + 32)\n        } else {\n            encoded += string(c)\n        }\n    }\n\
    \    return encoded\n}\n", "    var encoded string\n    for _, char := range message\
    \ {\n        if char >= 'a' && char <= 'z' {\n            encoded += string(char\
    \ - 32)\n        } else if char >= 'A' && char <= 'Z' {\n            encoded +=\
    \ string(char + 32)\n        } else if char == 'a' {\n            encoded += \"\
    c\"\n        } else if char == 'e' {\n            encoded += \"g\"\n        }\
    \ else if char == 'i' {\n            encoded += \"k\"\n        } else if char\
    \ == 'o' {\n            encoded += \"q\"\n        } else if char == 'u' {\n  \
    \          encoded += \"y\"\n        } else if char == 'A' {\n            encoded\
    \ += \"C\"\n        } else if char == 'E' {\n            encoded += \"G\"\n  \
    \      } else if char == 'I' {\n            encoded += \"K\"\n        } else if\
    \ char == 'O' {\n            encoded += \"Q\"\n        } else if char == 'U' {\n\
    \            encoded += \"Y\"\n        } else {\n            encoded += string(char)\n\
    \        }\n    }\n    return encoded\n}\n", "    // TODO: Implement\n    return\
    \ \"\"\n}\n", "    var encoded string\n    for _, c := range message {\n     \
    \   if c >= 'a' && c <= 'z' {\n            encoded += string(c - 32)\n       \
    \ } else if c >= 'A' && c <= 'Z' {\n            encoded += string(c + 32)\n  \
    \      } else {\n            encoded += string(c)\n        }\n    }\n    return\
    \ encoded\n}\n", "    var result string\n    for _, c := range message {\n   \
    \     if c >= 'a' && c <= 'z' {\n            result += string(c - 'a' + 'A')\n\
    \        } else if c >= 'A' && c <= 'Z' {\n            result += string(c - 'A'\
    \ + 'a')\n        } else {\n            result += string(c)\n        }\n    }\n\
    \    return result\n}\n", "    return \"\"\n}\n", "    return \"\"\n}\n", "  \
    \  var encoded string\n    for _, c := range message {\n        if c >= 'a' &&\
    \ c <= 'z' {\n            encoded += string(c - 'a' + 'A')\n        } else if\
    \ c >= 'A' && c <= 'Z' {\n            encoded += string(c - 'A' + 'a')\n     \
    \   } else if c == 'a' {\n            encoded += \"c\"\n        } else if c ==\
    \ 'e' {\n            encoded += \"g\"\n        } else if c == 'i' {\n        \
    \    encoded += \"k\"\n        } else if c == 'o' {\n            encoded += \"\
    q\"\n        } else if c == 'u' {\n            encoded += \"y\"\n        } else\
    \ if c == 'A' {\n            encoded += \"C\"\n        } else if c == 'E' {\n\
    \            encoded += \"G\"\n        } else if c == 'I' {\n            encoded\
    \ += \"K\"\n        } else if c == 'O' {\n            encoded += \"Q\"\n     \
    \   } else if c == 'U' {\n            encoded += \"Y\"\n        } else {\n   \
    \         encoded += string(c)\n        }\n    }\n    return encoded\n}\n", " \
    \   var result string\n    for _, c := range message {\n        if c >= 'a' &&\
    \ c <= 'z' {\n            result += string(c - 32)\n        } else if c >= 'A'\
    \ && c <= 'Z' {\n            result += string(c + 32)\n        } else {\n    \
    \        result += string(c)\n        }\n    }\n    return result\n}\n", "   \
    \ // TODO\n    return \"\"\n}\n", "    var result string\n    for _, char := range\
    \ message {\n        if char >= 'a' && char <= 'z' {\n            result += string(char\
    \ - 32)\n        } else if char >= 'A' && char <= 'Z' {\n            result +=\
    \ string(char + 32)\n        } else {\n            result += string(char)\n  \
    \      }\n    }\n    return result\n}\n", "    return \"\"\n}\n", "    var result\
    \ string\n    for _, char := range message {\n        if char >= 'a' && char <=\
    \ 'z' {\n            result += string(char - 32)\n        } else if char >= 'A'\
    \ && char <= 'Z' {\n            result += string(char + 32)\n        } else {\n\
    \            result += string(char)\n        }\n    }\n    return result\n}\n",
  "    var result string\n    for _, c := range message {\n        if c >= 'a' &&\
    \ c <= 'z' {\n            result += string(c - 32)\n        } else if c >= 'A'\
    \ && c <= 'Z' {\n            result += string(c + 32)\n        } else {\n    \
    \        result += string(c)\n        }\n    }\n    return result\n}\n", "   \
    \ var result string\n    for _, r := range message {\n        if r >= 'a' && r\
    \ <= 'z' {\n            result += string(r - 32)\n        } else if r >= 'A' &&\
    \ r <= 'Z' {\n            result += string(r + 32)\n        } else {\n       \
    \     result += string(r)\n        }\n    }\n    return result\n}\n", "    var\
    \ result string\n    for _, char := range message {\n        if char >= 'a' &&\
    \ char <= 'z' {\n            result += string(char - 32)\n        } else if char\
    \ >= 'A' && char <= 'Z' {\n            result += string(char + 32)\n        }\
    \ else {\n            result += string(char)\n        }\n    }\n    return result\n\
    }\n", "    var result string\n    for _, char := range message {\n        if char\
    \ >= 'a' && char <= 'z' {\n            result += string(char - 32)\n        }\
    \ else if char >= 'A' && char <= 'Z' {\n            result += string(char + 32)\n\
    \        } else {\n            result += string(char)\n        }\n    }\n    return\
    \ result\n}\n", "    var result string\n    for _, char := range message {\n \
    \       if char >= 'a' && char <= 'z' {\n            result += string(char - 32)\n\
    \        } else if char >= 'A' && char <= 'Z' {\n            result += string(char\
    \ + 32)\n        } else {\n            result += string(char)\n        }\n   \
    \ }\n    return result\n}\n", "    return \"\"\n}\n", "    var encoded string\n\
    \    for _, char := range message {\n        if char >= 'a' && char <= 'z' {\n\
    \            encoded += string(char - 32)\n        } else if char >= 'A' && char\
    \ <= 'Z' {\n            encoded += string(char + 32)\n        } else if char ==\
    \ 'a' {\n            encoded += \"c\"\n        } else if char == 'e' {\n     \
    \       encoded += \"g\"\n        } else if char == 'i' {\n            encoded\
    \ += \"k\"\n        } else if char == 'o' {\n            encoded += \"q\"\n  \
    \      } else if char == 'u' {\n            encoded += \"y\"\n        } else if\
    \ char == 'A' {\n            encoded += \"C\"\n        } else if char == 'E' {\n\
    \            encoded += \"G\"\n        } else if char == 'I' {\n            encoded\
    \ += \"K\"\n        } else if char == 'O' {\n            encoded += \"Q\"\n  \
    \      } else if char == 'U' {\n            encoded += \"Y\"\n        } else {\n\
    \            encoded += string(char)\n        }\n    }\n    return encoded\n}\n",
  "    var result string\n    for _, char := range message {\n        if char >= 'a'\
    \ && char <= 'z' {\n            result += string(char - 32)\n        } else if\
    \ char >= 'A' && char <= 'Z' {\n            result += string(char + 32)\n    \
    \    } else {\n            result += string(char)\n        }\n    }\n    return\
    \ result\n}\n", "    var result string\n    for _, char := range message {\n \
    \       if char >= 'a' && char <= 'z' {\n            result += string(char - 32)\n\
    \        } else if char >= 'A' && char <= 'Z' {\n            result += string(char\
    \ + 32)\n        } else {\n            result += string(char)\n        }\n   \
    \ }\n    return result\n}\n", "    var result string\n    for _, char := range\
    \ message {\n        if char >= 'a' && char <= 'z' {\n            result += string(char\
    \ - 32)\n        } else if char >= 'A' && char <= 'Z' {\n            result +=\
    \ string(char + 32)\n        } else {\n            result += string(char)\n  \
    \      }\n    }\n    return result\n}\n", "    return \"\"\n}\n", "    var encoded\
    \ string\n    for _, char := range message {\n        if char >= 'a' && char <=\
    \ 'z' {\n            encoded += string(char - 32)\n        } else if char >= 'A'\
    \ && char <= 'Z' {\n            encoded += string(char + 32)\n        } else if\
    \ char == 'a' {\n            encoded += \"c\"\n        } else if char == 'e' {\n\
    \            encoded += \"g\"\n        } else if char == 'i' {\n            encoded\
    \ += \"k\"\n        } else if char == 'o' {\n            encoded += \"q\"\n  \
    \      } else if char == 'u' {\n            encoded += \"y\"\n        } else if\
    \ char == 'A' {\n            encoded += \"C\"\n        } else if char == 'E' {\n\
    \            encoded += \"G\"\n        } else if char == 'I' {\n            encoded\
    \ += \"K\"\n        } else if char == 'O' {\n            encoded += \"Q\"\n  \
    \      } else if char == 'U' {\n            encoded += \"Y\"\n        } else {\n\
    \            encoded += string(char)\n        }\n    }\n    return encoded\n}\n",
  "    var result string\n    for _, c := range message {\n        if c >= 'a' &&\
    \ c <= 'z' {\n            result += string(c - 'a' + 'A')\n        } else if c\
    \ >= 'A' && c <= 'Z' {\n            result += string(c - 'A' + 'a')\n        }\
    \ else {\n            result += string(c)\n        }\n    }\n    return result\n\
    }\n", "    var encoded string\n    for _, c := range message {\n        if c >=\
    \ 'a' && c <= 'z' {\n            encoded += string(c - 32)\n        } else if\
    \ c >= 'A' && c <= 'Z' {\n            encoded += string(c + 32)\n        } else\
    \ {\n            encoded += string(c)\n        }\n    }\n    return encoded\n\
    }\n", "    // TODO: Implement\n    return \"\"\n}\n", "    return \"\"\n}\n",
  "    var result string\n    for _, char := range message {\n        if char >= 'a'\
    \ && char <= 'z' {\n            result += string(char - 32)\n        } else if\
    \ char >= 'A' && char <= 'Z' {\n            result += string(char + 32)\n    \
    \    } else {\n            result += string(char)\n        }\n    }\n    return\
    \ result\n}\n", "    // TODO: Implement\n    return \"\"\n}\n", "    var result\
    \ string\n    for _, c := range message {\n        if c >= 'a' && c <= 'z' {\n\
    \            result += string(c - 'a' + 'A')\n        } else if c >= 'A' && c\
    \ <= 'Z' {\n            result += string(c - 'A' + 'a')\n        } else {\n  \
    \          result += string(c)\n        }\n    }\n    return result\n}\n", " \
    \   var result string\n    for _, char := range message {\n        if char >=\
    \ 'a' && char <= 'z' {\n            result += string(char - 32)\n        } else\
    \ if char >= 'A' && char <= 'Z' {\n            result += string(char + 32)\n \
    \       } else {\n            result += string(char)\n        }\n    }\n    return\
    \ result\n}\n", "    return \"\"\n}\n", "    var encoded string\n    for _, char\
    \ := range message {\n        if char >= 'a' && char <= 'z' {\n            encoded\
    \ += string(char - 32)\n        } else if char >= 'A' && char <= 'Z' {\n     \
    \       encoded += string(char + 32)\n        } else if char == 'a' {\n      \
    \      encoded += \"c\"\n        } else if char == 'e' {\n            encoded\
    \ += \"g\"\n        } else if char == 'i' {\n            encoded += \"k\"\n  \
    \      } else if char == 'o' {\n            encoded += \"q\"\n        } else if\
    \ char == 'u' {\n            encoded += \"y\"\n        } else if char == 'A' {\n\
    \            encoded += \"C\"\n        } else if char == 'E' {\n            encoded\
    \ += \"G\"\n        } else if char == 'I' {\n            encoded += \"K\"\n  \
    \      } else if char == 'O' {\n            encoded += \"Q\"\n        } else if\
    \ char == 'U' {\n            encoded += \"Y\"\n        } else {\n            encoded\
    \ += string(char)\n        }\n    }\n    return encoded\n}\n", "    return \"\"\
    \n}\n", "    var encoded string\n    for _, char := range message {\n        if\
    \ char >= 'a' && char <= 'z' {\n            encoded += string(char - 32)\n   \
    \     } else if char >= 'A' && char <= 'Z' {\n            encoded += string(char\
    \ + 32)\n        } else if char == 'a' {\n            encoded += \"c\"\n     \
    \   } else if char == 'e' {\n            encoded += \"g\"\n        } else if char\
    \ == 'i' {\n            encoded += \"k\"\n        } else if char == 'o' {\n  \
    \          encoded += \"q\"\n        } else if char == 'u' {\n            encoded\
    \ += \"y\"\n        } else if char == 'A' {\n            encoded += \"C\"\n  \
    \      } else if char == 'E' {\n            encoded += \"G\"\n        } else if\
    \ char == 'I' {\n            encoded += \"K\"\n        } else if char == 'O' {\n\
    \            encoded += \"Q\"\n        } else if char == 'U' {\n            encoded\
    \ += \"Y\"\n        } else {\n            encoded += string(char)\n        }\n\
    \    }\n    return encoded\n}\n", "    // TODO: Implement\n    return \"\"\n}\n",
  "    var result string\n    for _, c := range message {\n        if c >= 'a' &&\
    \ c <= 'z' {\n            result += string(c - 32)\n        } else if c >= 'A'\
    \ && c <= 'Z' {\n            result += string(c + 32)\n        } else {\n    \
    \        result += string(c)\n        }\n    }\n    return result\n}\n", "   \
    \ return \"\"\n}\n", "    return \"\"\n}\n", "    var encoded string\n    for\
    \ _, r := range message {\n        if r >= 'a' && r <= 'z' {\n            encoded\
    \ += string(r - 'a' + 'A')\n        } else if r >= 'A' && r <= 'Z' {\n       \
    \     encoded += string(r - 'A' + 'a')\n        } else {\n            encoded\
    \ += string(r)\n        }\n    }\n    return encoded\n}\n", "    var result string\n\
    \    for _, c := range message {\n        if c >= 'a' && c <= 'z' {\n        \
    \    result += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n    \
    \        result += string(c + 32)\n        } else {\n            result += string(c)\n\
    \        }\n    }\n    return result\n}\n", "    var result string\n    for _,\
    \ c := range message {\n        if c >= 'a' && c <= 'z' {\n            result\
    \ += string(c - 'a' + 'A')\n        } else if c >= 'A' && c <= 'Z' {\n       \
    \     result += string(c - 'A' + 'a')\n        } else {\n            result +=\
    \ string(c)\n        }\n    }\n    return result\n}\n", "    var encoded string\n\
    \    for _, char := range message {\n        if char >= 'a' && char <= 'z' {\n\
    \            encoded += string(char - 32)\n        } else if char >= 'A' && char\
    \ <= 'Z' {\n            encoded += string(char + 32)\n        } else if char ==\
    \ 'a' {\n            encoded += \"c\"\n        } else if char == 'e' {\n     \
    \       encoded += \"g\"\n        } else if char == 'i' {\n            encoded\
    \ += \"k\"\n        } else if char == 'o' {\n            encoded += \"q\"\n  \
    \      } else if char == 'u' {\n            encoded += \"y\"\n        } else if\
    \ char == 'A' {\n            encoded += \"C\"\n        } else if char == 'E' {\n\
    \            encoded += \"G\"\n        } else if char == 'I' {\n            encoded\
    \ += \"K\"\n        } else if char == 'O' {\n            encoded += \"Q\"\n  \
    \      } else if char == 'U' {\n            encoded += \"Y\"\n        } else {\n\
    \            encoded += string(char)\n        }\n    }\n    return encoded\n}\n",
  "    // TODO: Implement\n    return \"\"\n}\n", "    return \"\"\n}\n", "    return\
    \ \"\"\n}\n", "    var encoded string\n    for _, c := range message {\n     \
    \   if c >= 'a' && c <= 'z' {\n            encoded += string(c - 32)\n       \
    \ } else if c >= 'A' && c <= 'Z' {\n            encoded += string(c + 32)\n  \
    \      } else {\n            encoded += string(c)\n        }\n    }\n    return\
    \ encoded\n}\n", "    return \"\"\n}\n", "    // your code here\n    return \"\
    \"\n}\n", "    // TODO: Implement\n    return \"\"\n}\n", "    var result string\n\
    \    for _, c := range message {\n        if c >= 'a' && c <= 'z' {\n        \
    \    result += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n    \
    \        result += string(c + 32)\n        } else {\n            result += string(c)\n\
    \        }\n    }\n    return result\n}\n", "    var result string\n    for _,\
    \ c := range message {\n        if c >= 'a' && c <= 'z' {\n            result\
    \ += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            result\
    \ += string(c + 32)\n        } else {\n            result += string(c)\n     \
    \   }\n    }\n    return result\n}\n", "    return \"\"\n}\n", "    var result\
    \ string\n    for _, c := range message {\n        if c >= 'a' && c <= 'z' {\n\
    \            result += string(c - 32)\n        } else if c >= 'A' && c <= 'Z'\
    \ {\n            result += string(c + 32)\n        } else {\n            result\
    \ += string(c)\n        }\n    }\n    return result\n}\n", "    var encoded string\n\
    \    for _, c := range message {\n        if c >= 'a' && c <= 'z' {\n        \
    \    encoded += string(c - 'a' + 'A')\n        } else if c >= 'A' && c <= 'Z'\
    \ {\n            encoded += string(c - 'A' + 'a')\n        } else if c == 'a'\
    \ {\n            encoded += \"c\"\n        } else if c == 'e' {\n            encoded\
    \ += \"g\"\n        } else if c == 'i' {\n            encoded += \"k\"\n     \
    \   } else if c == 'o' {\n            encoded += \"q\"\n        } else if c ==\
    \ 'u' {\n            encoded += \"y\"\n        } else if c == 'A' {\n        \
    \    encoded += \"C\"\n        } else if c == 'E' {\n            encoded += \"\
    G\"\n        } else if c == 'I' {\n            encoded += \"K\"\n        } else\
    \ if c == 'O' {\n            encoded += \"Q\"\n        } else if c == 'U' {\n\
    \            encoded += \"Y\"\n        } else {\n            encoded += string(c)\n\
    \        }\n    }\n    return encoded\n}\n", "    var result string\n    for _,\
    \ char := range message {\n        if char >= 'a' && char <= 'z' {\n         \
    \   result += string(char - 32)\n        } else if char >= 'A' && char <= 'Z'\
    \ {\n            result += string(char + 32)\n        } else {\n            result\
    \ += string(char)\n        }\n    }\n    return result\n}\n", "    var result\
    \ string\n    for _, c := range message {\n        if c >= 'a' && c <= 'z' {\n\
    \            result += string(c - 'a' + 'A')\n        } else if c >= 'A' && c\
    \ <= 'Z' {\n            result += string(c - 'A' + 'a')\n        } else {\n  \
    \          result += string(c)\n        }\n    }\n    return result\n}\n", " \
    \   var encoded string\n    for _, c := range message {\n        if c >= 'a' &&\
    \ c <= 'z' {\n            encoded += string(c - 'a' + 'A')\n        } else if\
    \ c >= 'A' && c <= 'Z' {\n            encoded += string(c - 'A' + 'a')\n     \
    \   } else if c == 'a' {\n            encoded += \"c\"\n        } else if c ==\
    \ 'e' {\n            encoded += \"g\"\n        } else if c == 'i' {\n        \
    \    encoded += \"k\"\n        } else if c == 'o' {\n            encoded += \"\
    q\"\n        } else if c == 'u' {\n            encoded += \"y\"\n        } else\
    \ if c == 'A' {\n            encoded += \"C\"\n        } else if c == 'E' {\n\
    \            encoded += \"G\"\n        } else if c == 'I' {\n            encoded\
    \ += \"K\"\n        } else if c == 'O' {\n            encoded += \"Q\"\n     \
    \   } else if c == 'U' {\n            encoded += \"Y\"\n        } else {\n   \
    \         encoded += string(c)\n        }\n    }\n    return encoded\n}\n", " \
    \   var encoded string\n    for _, c := range message {\n        if c >= 'a' &&\
    \ c <= 'z' {\n            encoded += string(c - 'a' + 'A')\n        } else if\
    \ c >= 'A' && c <= 'Z' {\n            encoded += string(c - 'A' + 'a')\n     \
    \   } else if c == 'a' {\n            encoded += \"c\"\n        } else if c ==\
    \ 'e' {\n            encoded += \"g\"\n        } else if c == 'i' {\n        \
    \    encoded += \"k\"\n        } else if c == 'o' {\n            encoded += \"\
    q\"\n        } else if c == 'u' {\n            encoded += \"y\"\n        } else\
    \ if c == 'A' {\n            encoded += \"C\"\n        } else if c == 'E' {\n\
    \            encoded += \"G\"\n        } else if c == 'I' {\n            encoded\
    \ += \"K\"\n        } else if c == 'O' {\n            encoded += \"Q\"\n     \
    \   } else if c == 'U' {\n            encoded += \"Y\"\n        } else {\n   \
    \         encoded += string(c)\n        }\n    }\n    return encoded\n}\n", " \
    \   var encoded string\n    for _, char := range message {\n        switch {\n\
    \        case char >= 'a' && char <= 'z':\n            encoded += string(char\
    \ - 32)\n        case char >= 'A' && char <= 'Z':\n            encoded += string(char\
    \ + 32)\n        case char == 'a':\n            encoded += \"c\"\n        case\
    \ char == 'e':\n            encoded += \"g\"\n        case char == 'i':\n    \
    \        encoded += \"k\"\n        case char == 'o':\n            encoded += \"\
    q\"\n        case char == 'u':\n            encoded += \"y\"\n        case char\
    \ == 'A':\n            encoded += \"C\"\n        case char == 'E':\n         \
    \   encoded += \"G\"\n        case char == 'I':\n            encoded += \"K\"\n\
    \        case char == 'O':\n            encoded += \"Q\"\n        case char ==\
    \ 'U':\n            encoded += \"Y\"\n        default:\n            encoded +=\
    \ string(char)\n        }\n    }\n    return encoded\n}\n", "    // TODO: Implement\n\
    \    return \"\"\n}\n", "    var encoded string\n    for _, char := range message\
    \ {\n        if char >= 'a' && char <= 'z' {\n            encoded += string(char\
    \ - 32)\n        } else if char >= 'A' && char <= 'Z' {\n            encoded +=\
    \ string(char + 32)\n        } else if char == 'a' {\n            encoded += \"\
    c\"\n        } else if char == 'e' {\n            encoded += \"g\"\n        }\
    \ else if char == 'i' {\n            encoded += \"k\"\n        } else if char\
    \ == 'o' {\n            encoded += \"q\"\n        } else if char == 'u' {\n  \
    \          encoded += \"y\"\n        } else if char == 'A' {\n            encoded\
    \ += \"C\"\n        } else if char == 'E' {\n            encoded += \"G\"\n  \
    \      } else if char == 'I' {\n            encoded += \"K\"\n        } else if\
    \ char == 'O' {\n            encoded += \"Q\"\n        } else if char == 'U' {\n\
    \            encoded += \"Y\"\n        } else {\n            encoded += string(char)\n\
    \        }\n    }\n    return encoded\n}\n", "    var result string\n    for _,\
    \ char := range message {\n        if char >= 'a' && char <= 'z' {\n         \
    \   result += string(char - 32)\n        } else if char >= 'A' && char <= 'Z'\
    \ {\n            result += string(char + 32)\n        } else {\n            result\
    \ += string(char)\n        }\n    }\n    return result\n}\n", "    var result\
    \ string\n    for _, c := range message {\n        if c >= 'a' && c <= 'z' {\n\
    \            result += string(c - 'a' + 'A')\n        } else if c >= 'A' && c\
    \ <= 'Z' {\n            result += string(c - 'A' + 'a')\n        } else {\n  \
    \          result += string(c)\n        }\n    }\n    return result\n}\n", " \
    \   return \"\"\n}\n", "    var result string\n    for _, c := range message {\n\
    \        if c >= 'a' && c <= 'z' {\n            result += string(c - 32)\n   \
    \     } else if c >= 'A' && c <= 'Z' {\n            result += string(c + 32)\n\
    \        } else {\n            result += string(c)\n        }\n    }\n    return\
    \ result\n}\n", "    var result string\n    for _, c := range message {\n    \
    \    if c >= 'a' && c <= 'z' {\n            result += string(c - 32)\n       \
    \ } else if c >= 'A' && c <= 'Z' {\n            result += string(c + 32)\n   \
    \     } else {\n            result += string(c)\n        }\n    }\n    return\
    \ result\n}\n", "    // TODO: Implement\n    return \"\"\n}\n", "    return \"\
    \"\n}\n", "    return \"\"\n}\n", "    var encoded string\n    for _, char :=\
    \ range message {\n        if char >= 'a' && char <= 'z' {\n            encoded\
    \ += string(char - 32)\n        } else if char >= 'A' && char <= 'Z' {\n     \
    \       encoded += string(char + 32)\n        } else if char == 'a' {\n      \
    \      encoded += \"c\"\n        } else if char == 'e' {\n            encoded\
    \ += \"g\"\n        } else if char == 'i' {\n            encoded += \"k\"\n  \
    \      } else if char == 'o' {\n            encoded += \"q\"\n        } else if\
    \ char == 'u' {\n            encoded += \"y\"\n        } else if char == 'A' {\n\
    \            encoded += \"C\"\n        } else if char == 'E' {\n            encoded\
    \ += \"G\"\n        } else if char == 'I' {\n            encoded += \"K\"\n  \
    \      } else if char == 'O' {\n            encoded += \"Q\"\n        } else if\
    \ char == 'U' {\n            encoded += \"Y\"\n        } else {\n            encoded\
    \ += string(char)\n        }\n    }\n    return encoded\n}\n", "    var encoded\
    \ string\n    for _, char := range message {\n        if char >= 'a' && char <=\
    \ 'z' {\n            encoded += string(char - 32)\n        } else if char >= 'A'\
    \ && char <= 'Z' {\n            encoded += string(char + 32)\n        } else if\
    \ char == 'A' || char == 'E' || char == 'I' || char == 'O' || char == 'U' {\n\
    \            encoded += string(char + 2)\n        } else if char == 'a' || char\
    \ == 'e' || char == 'i' || char == 'o' || char == 'u' {\n            encoded +=\
    \ string(char - 2)\n        } else {\n            encoded += string(char)\n  \
    \      }\n    }\n    return encoded\n}\n", "    // TODO: Implement\n    return\
    \ \"\"\n}\n", "    var encoded string\n    for _, char := range message {\n  \
    \      if char >= 'a' && char <= 'z' {\n            encoded += string(char - 32)\n\
    \        } else if char >= 'A' && char <= 'Z' {\n            encoded += string(char\
    \ + 32)\n        } else if char == 'a' {\n            encoded += \"c\"\n     \
    \   } else if char == 'e' {\n            encoded += \"g\"\n        } else if char\
    \ == 'i' {\n            encoded += \"k\"\n        } else if char == 'o' {\n  \
    \          encoded += \"q\"\n        } else if char == 'u' {\n            encoded\
    \ += \"y\"\n        } else if char == 'A' {\n            encoded += \"C\"\n  \
    \      } else if char == 'E' {\n            encoded += \"G\"\n        } else if\
    \ char == 'I' {\n            encoded += \"K\"\n        } else if char == 'O' {\n\
    \            encoded += \"Q\"\n        } else if char == 'U' {\n            encoded\
    \ += \"Y\"\n        } else {\n            encoded += string(char)\n        }\n\
    \    }\n    return encoded\n}\n", "    return \"\"\n}\n", "    return \"\"\n}\n",
  "    var result string\n    for _, c := range message {\n        if c >= 'a' &&\
    \ c <= 'z' {\n            result += string(c - 'a' + 'A')\n        } else if c\
    \ >= 'A' && c <= 'Z' {\n            result += string(c - 'A' + 'a')\n        }\
    \ else {\n            result += string(c)\n        }\n    }\n    return result\n\
    }\n", "    var result string\n    for _, c := range message {\n        if c >=\
    \ 'a' && c <= 'z' {\n            result += string(c - 32)\n        } else if c\
    \ >= 'A' && c <= 'Z' {\n            result += string(c + 32)\n        } else {\n\
    \            result += string(c)\n        }\n    }\n    return result\n}\n", " \
    \   var result string\n    for _, char := range message {\n        if char >=\
    \ 'a' && char <= 'z' {\n            result += string(char - 32)\n        } else\
    \ if char >= 'A' && char <= 'Z' {\n            result += string(char + 32)\n \
    \       } else {\n            result += string(char)\n        }\n    }\n    return\
    \ result\n}\n", "    var result string\n    for _, c := range message {\n    \
    \    if c >= 'a' && c <= 'z' {\n            result += string(c - 'a' + 'A')\n\
    \        } else if c >= 'A' && c <= 'Z' {\n            result += string(c - 'A'\
    \ + 'a')\n        } else {\n            result += string(c)\n        }\n    }\n\
    \    return result\n}\n", "    var encoded string\n    for _, char := range message\
    \ {\n        if char >= 'a' && char <= 'z' {\n            encoded += string(char\
    \ - 32)\n        } else if char >= 'A' && char <= 'Z' {\n            encoded +=\
    \ string(char + 32)\n        } else if char == 'a' {\n            encoded += \"\
    c\"\n        } else if char == 'e' {\n            encoded += \"g\"\n        }\
    \ else if char == 'i' {\n            encoded += \"k\"\n        } else if char\
    \ == 'o' {\n            encoded += \"q\"\n        } else if char == 'u' {\n  \
    \          encoded += \"y\"\n        } else if char == 'A' {\n            encoded\
    \ += \"C\"\n        } else if char == 'E' {\n            encoded += \"G\"\n  \
    \      } else if char == 'I' {\n            encoded += \"K\"\n        } else if\
    \ char == 'O' {\n            encoded += \"Q\"\n        } else if char == 'U' {\n\
    \            encoded += \"Y\"\n        } else {\n            encoded += string(char)\n\
    \        }\n    }\n    return encoded\n}\n", "    return \"\"\n}\n", "    // TODO:\
    \ Implement\n    return \"\"\n}\n", "    var encoded string\n    for _, char :=\
    \ range message {\n        if char >= 'a' && char <= 'z' {\n            encoded\
    \ += string(char - 32)\n        } else if char >= 'A' && char <= 'Z' {\n     \
    \       encoded += string(char + 32)\n        } else if char == 'a' {\n      \
    \      encoded += \"c\"\n        } else if char == 'e' {\n            encoded\
    \ += \"g\"\n        } else if char == 'i' {\n            encoded += \"k\"\n  \
    \      } else if char == 'o' {\n            encoded += \"q\"\n        } else if\
    \ char == 'u' {\n            encoded += \"y\"\n        } else if char == 'A' {\n\
    \            encoded += \"C\"\n        } else if char == 'E' {\n            encoded\
    \ += \"G\"\n        } else if char == 'I' {\n            encoded += \"K\"\n  \
    \      } else if char == 'O' {\n            encoded += \"Q\"\n        } else if\
    \ char == 'U' {\n            encoded += \"Y\"\n        } else {\n            encoded\
    \ += string(char)\n        }\n    }\n    return encoded\n}\n", "    var result\
    \ string\n    for _, c := range message {\n        if c >= 'a' && c <= 'z' {\n\
    \            result += string(c - 32)\n        } else if c >= 'A' && c <= 'Z'\
    \ {\n            result += string(c + 32)\n        } else {\n            result\
    \ += string(c)\n        }\n    }\n    return result\n}\n", "    var encoded string\n\
    \    for _, c := range message {\n        if c >= 'a' && c <= 'z' {\n        \
    \    encoded += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n   \
    \         encoded += string(c + 32)\n        } else {\n            encoded +=\
    \ string(c)\n        }\n    }\n    return encoded\n}\n", "    var encoded string\n\
    \    for _, char := range message {\n        if char >= 'a' && char <= 'z' {\n\
    \            encoded += string(char - 32)\n        } else if char >= 'A' && char\
    \ <= 'Z' {\n            encoded += string(char + 32)\n        } else if char ==\
    \ 'a' {\n            encoded += \"c\"\n        } else if char == 'e' {\n     \
    \       encoded += \"g\"\n        } else if char == 'i' {\n            encoded\
    \ += \"k\"\n        } else if char == 'o' {\n            encoded += \"q\"\n  \
    \      } else if char == 'u' {\n            encoded += \"y\"\n        } else if\
    \ char == 'A' {\n            encoded += \"C\"\n        } else if char == 'E' {\n\
    \            encoded += \"G\"\n        } else if char == 'I' {\n            encoded\
    \ += \"K\"\n        } else if char == 'O' {\n            encoded += \"Q\"\n  \
    \      } else if char == 'U' {\n            encoded += \"Y\"\n        } else {\n\
    \            encoded += string(char)\n        }\n    }\n    return encoded\n}\n",
  "    var result string\n    for _, c := range message {\n        if c >= 'a' &&\
    \ c <= 'z' {\n            result += string(c - 'a' + 'A')\n        } else if c\
    \ >= 'A' && c <= 'Z' {\n            result += string(c - 'A' + 'a')\n        }\
    \ else {\n            result += string(c)\n        }\n    }\n    return result\n\
    }\n", "    var encoded string\n    for _, char := range message {\n        if\
    \ char >= 'a' && char <= 'z' {\n            encoded += string(char - 32)\n   \
    \     } else if char >= 'A' && char <= 'Z' {\n            encoded += string(char\
    \ + 32)\n        } else if char == 'a' {\n            encoded += \"c\"\n     \
    \   } else if char == 'e' {\n            encoded += \"g\"\n        } else if char\
    \ == 'i' {\n            encoded += \"k\"\n        } else if char == 'o' {\n  \
    \          encoded += \"q\"\n        } else if char == 'u' {\n            encoded\
    \ += \"y\"\n        } else if char == 'A' {\n            encoded += \"C\"\n  \
    \      } else if char == 'E' {\n            encoded += \"G\"\n        } else if\
    \ char == 'I' {\n            encoded += \"K\"\n        } else if char == 'O' {\n\
    \            encoded += \"Q\"\n        } else if char == 'U' {\n            encoded\
    \ += \"Y\"\n        } else {\n            encoded += string(char)\n        }\n\
    \    }\n    return encoded\n}\n", "    return \"\"\n}\n", "    return \"\"\n}\n",
  "    var result string\n    for _, char := range message {\n        if char >= 'a'\
    \ && char <= 'z' {\n            result += string(char - 32)\n        } else if\
    \ char >= 'A' && char <= 'Z' {\n            result += string(char + 32)\n    \
    \    } else {\n            result += string(char)\n        }\n    }\n    return\
    \ result\n}\n", "    var encoded string\n    for _, char := range message {\n\
    \        if char >= 'a' && char <= 'z' {\n            encoded += string(char -\
    \ 32)\n        } else if char >= 'A' && char <= 'Z' {\n            encoded +=\
    \ string(char + 32)\n        } else if char == 'a' {\n            encoded += \"\
    c\"\n        } else if char == 'e' {\n            encoded += \"g\"\n        }\
    \ else if char == 'i' {\n            encoded += \"k\"\n        } else if char\
    \ == 'o' {\n            encoded += \"q\"\n        } else if char == 'u' {\n  \
    \          encoded += \"y\"\n        } else if char == 'A' {\n            encoded\
    \ += \"C\"\n        } else if char == 'E' {\n            encoded += \"G\"\n  \
    \      } else if char == 'I' {\n            encoded += \"K\"\n        } else if\
    \ char == 'O' {\n            encoded += \"Q\"\n        } else if char == 'U' {\n\
    \            encoded += \"Y\"\n        } else {\n            encoded += string(char)\n\
    \        }\n    }\n    return encoded\n}\n", "    // TODO: Implement\n    return\
    \ \"\"\n}\n", "    var encoded string\n    for _, c := range message {\n     \
    \   if c >= 'a' && c <= 'z' {\n            encoded += string(c - 32)\n       \
    \ } else if c >= 'A' && c <= 'Z' {\n            encoded += string(c + 32)\n  \
    \      } else {\n            encoded += string(c)\n        }\n    }\n    return\
    \ encoded\n}\n", "    var result string\n    for _, c := range message {\n   \
    \     if c >= 'a' && c <= 'z' {\n            result += string(c - 'a' + 'A')\n\
    \        } else if c >= 'A' && c <= 'Z' {\n            result += string(c - 'A'\
    \ + 'a')\n        } else {\n            result += string(c)\n        }\n    }\n\
    \    return result\n}\n", "    var encoded string\n    for _, c := range message\
    \ {\n        if c >= 'a' && c <= 'z' {\n            encoded += string(c - 'a'\
    \ + 'A')\n        } else if c >= 'A' && c <= 'Z' {\n            encoded += string(c\
    \ - 'A' + 'a')\n        } else if c == 'a' {\n            encoded += \"c\"\n \
    \       } else if c == 'e' {\n            encoded += \"g\"\n        } else if\
    \ c == 'i' {\n            encoded += \"k\"\n        } else if c == 'o' {\n   \
    \         encoded += \"q\"\n        } else if c == 'u' {\n            encoded\
    \ += \"y\"\n        } else if c == 'A' {\n            encoded += \"C\"\n     \
    \   } else if c == 'E' {\n            encoded += \"G\"\n        } else if c ==\
    \ 'I' {\n            encoded += \"K\"\n        } else if c == 'O' {\n        \
    \    encoded += \"Q\"\n        } else if c == 'U' {\n            encoded += \"\
    Y\"\n        } else {\n            encoded += string(c)\n        }\n    }\n  \
    \  return encoded\n}\n", "    var result string\n    for _, char := range message\
    \ {\n        if char >= 'a' && char <= 'z' {\n            result += string(char\
    \ - 32)\n        } else if char >= 'A' && char <= 'Z' {\n            result +=\
    \ string(char + 32)\n        } else {\n            result += string(char)\n  \
    \      }\n    }\n    return result\n}\n", "    var encoded string\n    for _,\
    \ c := range message {\n        if c >= 'a' && c <= 'z' {\n            encoded\
    \ += string(c - 'a' + 'A')\n        } else if c >= 'A' && c <= 'Z' {\n       \
    \     encoded += string(c - 'A' + 'a')\n        } else if c == 'a' {\n       \
    \     encoded += \"c\"\n        } else if c == 'e' {\n            encoded += \"\
    g\"\n        } else if c == 'i' {\n            encoded += \"k\"\n        } else\
    \ if c == 'o' {\n            encoded += \"q\"\n        } else if c == 'u' {\n\
    \            encoded += \"y\"\n        } else if c == 'A' {\n            encoded\
    \ += \"C\"\n        } else if c == 'E' {\n            encoded += \"G\"\n     \
    \   } else if c == 'I' {\n            encoded += \"K\"\n        } else if c ==\
    \ 'O' {\n            encoded += \"Q\"\n        } else if c == 'U' {\n        \
    \    encoded += \"Y\"\n        } else {\n            encoded += string(c)\n  \
    \      }\n    }\n    return encoded\n}\n", "    var result string\n    for _,\
    \ c := range message {\n        if c >= 'a' && c <= 'z' {\n            result\
    \ += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            result\
    \ += string(c + 32)\n        } else {\n            result += string(c)\n     \
    \   }\n    }\n    return result\n}\n", "    var encoded string\n    for _, char\
    \ := range message {\n        if char >= 'a' && char <= 'z' {\n            encoded\
    \ += string(char - 32)\n        } else if char >= 'A' && char <= 'Z' {\n     \
    \       encoded += string(char + 32)\n        } else if char == 'a' {\n      \
    \      encoded += \"c\"\n        } else if char == 'e' {\n            encoded\
    \ += \"g\"\n        } else if char == 'i' {\n            encoded += \"k\"\n  \
    \      } else if char == 'o' {\n            encoded += \"q\"\n        } else if\
    \ char == 'u' {\n            encoded += \"y\"\n        } else if char == 'A' {\n\
    \            encoded += \"C\"\n        } else if char == 'E' {\n            encoded\
    \ += \"G\"\n        } else if char == 'I' {\n            encoded += \"K\"\n  \
    \      } else if char == 'O' {\n            encoded += \"Q\"\n        } else if\
    \ char == 'U' {\n            encoded += \"Y\"\n        } else {\n            encoded\
    \ += string(char)\n        }\n    }\n    return encoded\n}\n", "    return \"\"\
    \n}\n", "    var result string\n    for _, c := range message {\n        if c\
    \ >= 'a' && c <= 'z' {\n            result += string(c - 32)\n        } else if\
    \ c >= 'A' && c <= 'Z' {\n            result += string(c + 32)\n        } else\
    \ {\n            result += string(c)\n        }\n    }\n    return result\n}\n",
  "    var result string\n    for _, c := range message {\n        if c >= 'a' &&\
    \ c <= 'z' {\n            result += string(c - 'a' + 'A')\n        } else if c\
    \ >= 'A' && c <= 'Z' {\n            result += string(c - 'A' + 'a')\n        }\
    \ else {\n            result += string(c)\n        }\n    }\n    return result\n\
    }\n", "    var encoded string\n    for _, char := range message {\n        if\
    \ char >= 'a' && char <= 'z' {\n            encoded += string(char - 32)\n   \
    \     } else if char >= 'A' && char <= 'Z' {\n            encoded += string(char\
    \ + 32)\n        } else if char == 'a' {\n            encoded += \"c\"\n     \
    \   } else if char == 'e' {\n            encoded += \"g\"\n        } else if char\
    \ == 'i' {\n            encoded += \"k\"\n        } else if char == 'o' {\n  \
    \          encoded += \"q\"\n        } else if char == 'u' {\n            encoded\
    \ += \"y\"\n        } else if char == 'A' {\n            encoded += \"C\"\n  \
    \      } else if char == 'E' {\n            encoded += \"G\"\n        } else if\
    \ char == 'I' {\n            encoded += \"K\"\n        } else if char == 'O' {\n\
    \            encoded += \"Q\"\n        } else if char == 'U' {\n            encoded\
    \ += \"Y\"\n        } else {\n            encoded += string(char)\n        }\n\
    \    }\n    return encoded\n}\n", "    return \"\"\n}\n", "    return \"\"\n}\n",
  "    var encoded string\n    for _, char := range message {\n        if char >=\
    \ 'a' && char <= 'z' {\n            encoded += string(char - 32)\n        } else\
    \ if char >= 'A' && char <= 'Z' {\n            encoded += string(char + 32)\n\
    \        } else if char == 'a' {\n            encoded += \"c\"\n        } else\
    \ if char == 'e' {\n            encoded += \"g\"\n        } else if char == 'i'\
    \ {\n            encoded += \"k\"\n        } else if char == 'o' {\n         \
    \   encoded += \"q\"\n        } else if char == 'u' {\n            encoded +=\
    \ \"y\"\n        } else if char == 'A' {\n            encoded += \"C\"\n     \
    \   } else if char == 'E' {\n            encoded += \"G\"\n        } else if char\
    \ == 'I' {\n            encoded += \"K\"\n        } else if char == 'O' {\n  \
    \          encoded += \"Q\"\n        } else if char == 'U' {\n            encoded\
    \ += \"Y\"\n        } else {\n            encoded += string(char)\n        }\n\
    \    }\n    return encoded\n}\n", "    var encoded string\n    for _, char :=\
    \ range message {\n        if char >= 'a' && char <= 'z' {\n            encoded\
    \ += string(char - 32)\n        } else if char >= 'A' && char <= 'Z' {\n     \
    \       encoded += string(char + 32)\n        } else if char == 'a' {\n      \
    \      encoded += \"c\"\n        } else if char == 'e' {\n            encoded\
    \ += \"g\"\n        } else if char == 'i' {\n            encoded += \"k\"\n  \
    \      } else if char == 'o' {\n            encoded += \"q\"\n        } else if\
    \ char == 'u' {\n            encoded += \"y\"\n        } else if char == 'A' {\n\
    \            encoded += \"C\"\n        } else if char == 'E' {\n            encoded\
    \ += \"G\"\n        } else if char == 'I' {\n            encoded += \"K\"\n  \
    \      } else if char == 'O' {\n            encoded += \"Q\"\n        } else if\
    \ char == 'U' {\n            encoded += \"Y\"\n        } else {\n            encoded\
    \ += string(char)\n        }\n    }\n    return encoded\n}\n", "    var result\
    \ string\n    for _, c := range message {\n        if c >= 'a' && c <= 'z' {\n\
    \            result += string(c - 32)\n        } else if c >= 'A' && c <= 'Z'\
    \ {\n            result += string(c + 32)\n        } else {\n            result\
    \ += string(c)\n        }\n    }\n    return result\n}\n", "    var encoded string\n\
    \    for _, char := range message {\n        if char >= 'a' && char <= 'z' {\n\
    \            encoded += string(char - 32)\n        } else if char >= 'A' && char\
    \ <= 'Z' {\n            encoded += string(char + 32)\n        } else if char ==\
    \ 'a' {\n            encoded += \"c\"\n        } else if char == 'e' {\n     \
    \       encoded += \"g\"\n        } else if char == 'i' {\n            encoded\
    \ += \"k\"\n        } else if char == 'o' {\n            encoded += \"q\"\n  \
    \      } else if char == 'u' {\n            encoded += \"y\"\n        } else if\
    \ char == 'A' {\n            encoded += \"C\"\n        } else if char == 'E' {\n\
    \            encoded += \"G\"\n        } else if char == 'I' {\n            encoded\
    \ += \"K\"\n        } else if char == 'O' {\n            encoded += \"Q\"\n  \
    \      } else if char == 'U' {\n            encoded += \"Y\"\n        } else {\n\
    \            encoded += string(char)\n        }\n    }\n    return encoded\n}\n",
  "    return \"\"\n}\n", "    var result string\n    for _, c := range message {\n\
    \        if c >= 'a' && c <= 'z' {\n            result += string(c - 'a' + 'A')\n\
    \        } else if c >= 'A' && c <= 'Z' {\n            result += string(c - 'A'\
    \ + 'a')\n        } else {\n            result += string(c)\n        }\n    }\n\
    \    return result\n}\n", "    var result string\n    for _, char := range message\
    \ {\n        if char >= 'a' && char <= 'z' {\n            result += string(char\
    \ - 32)\n        } else if char >= 'A' && char <= 'Z' {\n            result +=\
    \ string(char + 32)\n        } else {\n            result += string(char)\n  \
    \      }\n    }\n    return result\n}\n", "    var result string\n    for _, char\
    \ := range message {\n        if char >= 'a' && char <= 'z' {\n            result\
    \ += string(char - 32)\n        } else if char >= 'A' && char <= 'Z' {\n     \
    \       result += string(char + 32)\n        } else {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n", "    var result string\n    for _,\
    \ c := range message {\n        if c >= 'a' && c <= 'z' {\n            result\
    \ += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            result\
    \ += string(c + 32)\n        } else {\n            result += string(c)\n     \
    \   }\n    }\n    return result\n}\n", "    var result string\n    for _, c :=\
    \ range message {\n        if c >= 'a' && c <= 'z' {\n            result += string(c\
    \ - 'a' + 'A')\n        } else if c >= 'A' && c <= 'Z' {\n            result +=\
    \ string(c - 'A' + 'a')\n        } else {\n            result += string(c)\n \
    \       }\n    }\n    return result\n}\n", "    var result string\n    for _,\
    \ char := range message {\n        if char >= 'a' && char <= 'z' {\n         \
    \   result += string(char - 32)\n        } else if char >= 'A' && char <= 'Z'\
    \ {\n            result += string(char + 32)\n        } else {\n            result\
    \ += string(char)\n        }\n    }\n    return result\n}\n", "    var encoded\
    \ string\n    for _, c := range message {\n        if c >= 'a' && c <= 'z' {\n\
    \            encoded += string(c - 32)\n        } else if c >= 'A' && c <= 'Z'\
    \ {\n            encoded += string(c + 32)\n        } else {\n            encoded\
    \ += string(c)\n        }\n    }\n    return encoded\n}\n", "    var encoded string\n\
    \    for _, r := range message {\n        if r >= 'a' && r <= 'z' {\n        \
    \    encoded += string(r - 32)\n        } else if r >= 'A' && r <= 'Z' {\n   \
    \         encoded += string(r + 32)\n        } else if r == 'a' {\n          \
    \  encoded += \"c\"\n        } else if r == 'e' {\n            encoded += \"g\"\
    \n        } else if r == 'i' {\n            encoded += \"k\"\n        } else if\
    \ r == 'o' {\n            encoded += \"q\"\n        } else if r == 'u' {\n   \
    \         encoded += \"y\"\n        } else if r == 'A' {\n            encoded\
    \ += \"C\"\n        } else if r == 'E' {\n            encoded += \"G\"\n     \
    \   } else if r == 'I' {\n            encoded += \"K\"\n        } else if r ==\
    \ 'O' {\n            encoded += \"Q\"\n        } else if r == 'U' {\n        \
    \    encoded += \"Y\"\n        } else {\n            encoded += string(r)\n  \
    \      }\n    }\n    return encoded\n}\n", "    var encoded string\n    for _,\
    \ char := range message {\n        if char >= 'a' && char <= 'z' {\n         \
    \   encoded += string(char - 32)\n        } else if char >= 'A' && char <= 'Z'\
    \ {\n            encoded += string(char + 32)\n        } else if char == 'A' ||\
    \ char == 'E' || char == 'I' || char == 'O' || char == 'U' {\n            encoded\
    \ += string(char + 2)\n        } else if char == 'a' || char == 'e' || char ==\
    \ 'i' || char == 'o' || char == 'u' {\n            encoded += string(char - 2)\n\
    \        } else {\n            encoded += string(char)\n        }\n    }\n   \
    \ return encoded\n}\n", "    var result string\n    for _, c := range message\
    \ {\n        if c >= 'a' && c <= 'z' {\n            result += string(c - 'a' +\
    \ 'A')\n        } else if c >= 'A' && c <= 'Z' {\n            result += string(c\
    \ - 'A' + 'a')\n        } else {\n            result += string(c)\n        }\n\
    \    }\n    return result\n}\n", "    var result string\n    for _, c := range\
    \ message {\n        if c >= 'a' && c <= 'z' {\n            result += string(c\
    \ - 'a' + 'A')\n        } else if c >= 'A' && c <= 'Z' {\n            result +=\
    \ string(c - 'A' + 'a')\n        } else {\n            result += string(c)\n \
    \       }\n    }\n    return result\n}\n", "    var result string\n    for _,\
    \ c := range message {\n        if c >= 'a' && c <= 'z' {\n            result\
    \ += string(c - 'a' + 'A')\n        } else if c >= 'A' && c <= 'Z' {\n       \
    \     result += string(c - 'A' + 'a')\n        } else {\n            result +=\
    \ string(c)\n        }\n    }\n    return result\n}\n", "    // TODO: implement\n\
    \    return \"\"\n}\n", "    return \"\"\n}\n", "    var encoded string\n    for\
    \ _, c := range message {\n        if c >= 'a' && c <= 'z' {\n            encoded\
    \ += string(c - 'a' + 'A')\n        } else if c >= 'A' && c <= 'Z' {\n       \
    \     encoded += string(c - 'A' + 'a')\n        } else if c == 'a' || c == 'e'\
    \ || c == 'i' || c == 'o' || c == 'u' {\n            encoded += string(c + 2)\n\
    \        } else if c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U' {\n\
    \            encoded += string(c + 2)\n        } else {\n            encoded +=\
    \ string(c)\n        }\n    }\n    return encoded\n}\n", "    // TODO: Implement\n\
    \    return \"\"\n}\n", "    // TODO: Implement\n    return message\n}\n", " \
    \   var encoded string\n    for _, c := range message {\n        if c >= 'a' &&\
    \ c <= 'z' {\n            encoded += string(c - 'a' + 'A')\n        } else if\
    \ c >= 'A' && c <= 'Z' {\n            encoded += string(c - 'A' + 'a')\n     \
    \   } else if c == 'a' {\n            encoded += \"c\"\n        } else if c ==\
    \ 'e' {\n            encoded += \"g\"\n        } else if c == 'i' {\n        \
    \    encoded += \"k\"\n        } else if c == 'o' {\n            encoded += \"\
    q\"\n        } else if c == 'u' {\n            encoded += \"y\"\n        } else\
    \ if c == 'A' {\n            encoded += \"C\"\n        } else if c == 'E' {\n\
    \            encoded += \"G\"\n        } else if c == 'I' {\n            encoded\
    \ += \"K\"\n        } else if c == 'O' {\n            encoded += \"Q\"\n     \
    \   } else if c == 'U' {\n            encoded += \"Y\"\n        } else {\n   \
    \         encoded += string(c)\n        }\n    }\n    return encoded\n}\n"]
stop_tokens:
- "\nfunc"
- struct
- "\n// "

name: HumanEval_106_f
language: go_test.go
prompt: "package f_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Implement\
  \ the function f that takes n as a parameter,\n// and returns a list of size n,\
  \ such that the value of the element at index i is the factorial of i if i is even\n\
  // or the sum of numbers from 1 to i otherwise.\n// i starts from 1.\n// the factorial\
  \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n// Example:\n\
  func f(n int) []int {\n"
tests: "func TestF(t *testing.T) {\n  candidate := f\n\ttype test struct {\n\t\tactual\
  \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
  \ candidate(5), expected: []int{1, 2, 6, 24, 15} },\n     { actual: candidate(7),\
  \ expected: []int{1, 2, 6, 24, 15, 720, 28} },\n     { actual: candidate(1), expected:\
  \ []int{1} },\n     { actual: candidate(3), expected: []int{1, 2, 6} },\n   }\n\n\
  \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
  \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\",\
  \ tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
  \t\t\t}\n\t\t})\n\t}\n}\n"
completions: []
stop_tokens:
- "\nfunc"
- struct
- "\n// "

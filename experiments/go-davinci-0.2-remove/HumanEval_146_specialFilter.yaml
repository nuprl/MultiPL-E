name: HumanEval_146_specialFilter
language: go_test.go
prompt: "package specialFilter_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
  \n// Write a function that takes an array of numbers as input and returns \n// the\
  \ number of elements in the array that are greater than 10 and both \n// first and\
  \ last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\nfunc specialFilter(nums\
  \ []int) int {\n"
tests: "func TestSpecialfilter(t *testing.T) {\n  candidate := specialFilter\n\ttype\
  \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
  \ := []test{\n     { actual: candidate([]int{5, -2, 1, -5}), expected: 0 },\n  \
  \   { actual: candidate([]int{15, -73, 14, -15}), expected: 1 },\n     { actual:\
  \ candidate([]int{33, -2, -3, 45, 21, 109}), expected: 2 },\n     { actual: candidate([]int{43,\
  \ -12, 93, 125, 121, 109}), expected: 4 },\n     { actual: candidate([]int{71, -2,\
  \ -33, 75, 21, 19}), expected: 3 },\n     { actual: candidate([]int{1}), expected:\
  \ 0 },\n     { actual: candidate([]int{}), expected: 0 },\n   }\n\n\tfor i, tc :=\
  \ range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
  \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
  \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\
  \t}\n\t\t})\n\t}\n}\n"
completions: ["    // Write your code here\n    return 0\n}\n", "    // Write your\
    \ code here\n    return 0\n}\n", "    var count int\n    for _, num := range nums\
    \ {\n        if num > 10 && (num % 10) % 2 != 0 && num / 10 % 2 != 0 {\n     \
    \       count++\n        }\n    }\n    return count\n}\n", "    var count int\n\
    \    for _, num := range nums {\n        if num > 10 && isFirstAndLastDigitOdd(num)\
    \ {\n            count++\n        }\n    }\n    return count\n}\n", "    count\
    \ := 0\n    for _, num := range nums {\n        if num > 10 && isFirstAndLastDigitOdd(num)\
    \ {\n            count++\n        }\n    }\n    return count\n}\n", "    count\
    \ := 0\n    for _, num := range nums {\n        if num > 10 && isFirstAndLastDigitOdd(num)\
    \ {\n            count++\n        }\n    }\n    return count\n}\n", "    var count\
    \ int\n    for _, v := range nums {\n        if v > 10 && isOdd(v) {\n       \
    \     count++\n        }\n    }\n    return count\n}\n", "    // Write your code\
    \ here\n    return 0\n}\n", "    count := 0\n    for _, num := range nums {\n\
    \        if num > 10 && isFirstAndLastDigitOdd(num) {\n            count++\n \
    \       }\n    }\n    return count\n}\n", "    // Write your code here\n    return\
    \ 0\n}\n", "    // your code here\n    return 0\n}\n", "    // Write your code\
    \ here\n    return 0\n}\n", "    // Write your code here\n    return 0\n}\n",
  "    // Write your code here\n    return 0\n}\n", "    // Write your code here\n\
    \    return 0\n}\n", "    count := 0\n    for _, num := range nums {\n       \
    \ if num > 10 && isFirstAndLastDigitOdd(num) {\n            count++\n        }\n\
    \    }\n    return count\n}\n", "    count := 0\n    for _, num := range nums\
    \ {\n        if num > 10 && isFirstAndLastDigitOdd(num) {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    count := 0\n    for _, num :=\
    \ range nums {\n        if num > 10 && isFirstAndLastDigitOdd(num) {\n       \
    \     count++\n        }\n    }\n    return count\n}\n", "    var count int\n\
    \    for _, num := range nums {\n        if num > 10 && isFirstAndLastDigitOdd(num)\
    \ {\n            count++\n        }\n    }\n    return count\n}\n", "    count\
    \ := 0\n    for _, num := range nums {\n        if num > 10 && isFirstAndLastDigitOdd(num)\
    \ {\n            count++\n        }\n    }\n    return count\n}\n", "    count\
    \ := 0\n    for _, v := range nums {\n        if v > 10 && isOdd(v) {\n      \
    \      count++\n        }\n    }\n    return count\n}\n", "    // Write your code\
    \ here\n    return 0\n}\n", "    var count int\n    for _, num := range nums {\n\
    \        if num > 10 && isFirstAndLastDigitOdd(num) {\n            count++\n \
    \       }\n    }\n    return count\n}\n", "    var count int\n    for _, num :=\
    \ range nums {\n        if num > 10 && isFirstAndLastDigitOdd(num) {\n       \
    \     count++\n        }\n    }\n    return count\n}\n", "    var count int\n\
    \    for _, num := range nums {\n        if num > 10 && isFirstAndLastDigitOdd(num)\
    \ {\n            count++\n        }\n    }\n    return count\n}\n", "    count\
    \ := 0\n    for _, num := range nums {\n        if num > 10 && isFirstAndLastDigitOdd(num)\
    \ {\n            count++\n        }\n    }\n    return count\n}\n", "    count\
    \ := 0\n    for _, num := range nums {\n        if num > 10 && isFirstAndLastDigitOdd(num)\
    \ {\n            count++\n        }\n    }\n    return count\n}\n", "    count\
    \ := 0\n    for _, num := range nums {\n        if num > 10 && isFirstAndLastDigitOdd(num)\
    \ {\n            count++\n        }\n    }\n    return count\n}\n", "    count\
    \ := 0\n    for _, num := range nums {\n        if num > 10 && isFirstAndLastDigitOdd(num)\
    \ {\n            count++\n        }\n    }\n    return count\n}\n", "    var count\
    \ int\n    for _, num := range nums {\n        if num > 10 && isOdd(num) {\n \
    \           count++\n        }\n    }\n    return count\n}\n", "    count := 0\n\
    \    for _, n := range nums {\n        if n > 10 && isFirstAndLastDigitOdd(n)\
    \ {\n            count++\n        }\n    }\n    return count\n}\n", "    var count\
    \ int\n    for _, num := range nums {\n        if num > 10 && isFirstAndLastDigitOdd(num)\
    \ {\n            count++\n        }\n    }\n    return count\n}\n", "    count\
    \ := 0\n    for _, num := range nums {\n        if num > 10 && isFirstAndLastDigitOdd(num)\
    \ {\n            count++\n        }\n    }\n    return count\n}\n", "    count\
    \ := 0\n    for _, n := range nums {\n        if n > 10 && isFirstAndLastDigitOdd(n)\
    \ {\n            count++\n        }\n    }\n    return count\n}\n", "    // Write\
    \ your code here\n    return 0\n}\n", "    // your code here\n    return 0\n}\n",
  "    // Write your code here\n    return 0\n}\n", "    var count int\n    for _,\
    \ num := range nums {\n        if num > 10 && isFirstAndLastDigitOdd(num) {\n\
    \            count++\n        }\n    }\n    return count\n}\n", "    count :=\
    \ 0\n    for _, num := range nums {\n        if num > 10 && num % 2 == 1 && num\
    \ / 10 % 2 == 1 {\n            count++\n        }\n    }\n    return count\n}\n",
  "    // Write your code here\n    return 0\n}\n", "    var count int\n    for _,\
    \ num := range nums {\n        if num > 10 && isFirstAndLastDigitOdd(num) {\n\
    \            count++\n        }\n    }\n    return count\n}\n", "    count :=\
    \ 0\n    for _, num := range nums {\n        if num > 10 && isFirstAndLastDigitOdd(num)\
    \ {\n            count++\n        }\n    }\n    return count\n}\n", "    count\
    \ := 0\n    for _, num := range nums {\n        if num > 10 && isOdd(num) {\n\
    \            count++\n        }\n    }\n    return count\n}\n", "    // Write\
    \ your code here\n    return 0\n}\n", "    count := 0\n    for _, num := range\
    \ nums {\n        if num > 10 && isFirstAndLastDigitOdd(num) {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    var count int\n    for _, num\
    \ := range nums {\n        if num > 10 && isFirstAndLastDigitOdd(num) {\n    \
    \        count++\n        }\n    }\n    return count\n}\n", "    var count int\n\
    \    for _, num := range nums {\n        if num > 10 && isFirstAndLastDigitOdd(num)\
    \ {\n            count++\n        }\n    }\n    return count\n}\n", "    // your\
    \ code here\n    return 0\n}\n", "    // Write your code here\n    return 0\n\
    }\n", "    // Write your code here\n    return 0\n}\n", "    // Write your code\
    \ here\n    return 0\n}\n", "    count := 0\n    for _, num := range nums {\n\
    \        if num > 10 && isFirstAndLastDigitOdd(num) {\n            count++\n \
    \       }\n    }\n    return count\n}\n", "    // Write your code here\n    return\
    \ 0\n}\n", "    count := 0\n    for _, num := range nums {\n        if num > 10\
    \ && isFirstAndLastDigitOdd(num) {\n            count++\n        }\n    }\n  \
    \  return count\n}\n", "    count := 0\n    for _, num := range nums {\n     \
    \   if num > 10 && isFirstAndLastDigitOdd(num) {\n            count++\n      \
    \  }\n    }\n    return count\n}\n", "    count := 0\n    for _, num := range\
    \ nums {\n        if num > 10 && isFirstAndLastDigitOdd(num) {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    var count int\n    for _, num\
    \ := range nums {\n        if num > 10 && isFirstAndLastDigitOdd(num) {\n    \
    \        count++\n        }\n    }\n    return count\n}\n", "    count := 0\n\
    \    for _, num := range nums {\n        if num > 10 && isFirstAndLastDigitOdd(num)\
    \ {\n            count++\n        }\n    }\n    return count\n}\n", "    // your\
    \ code here\n    return 0\n}\n", "    var count int\n    for _, num := range nums\
    \ {\n        if num > 10 && isFirstAndLastDigitOdd(num) {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    count := 0\n    for _, num :=\
    \ range nums {\n        if num > 10 && isOdd(num) {\n            count++\n   \
    \     }\n    }\n    return count\n}\n", "    // your code here\n    return 0\n\
    }\n", "    var count int\n    for _, num := range nums {\n        if num > 10\
    \ && isOdd(num) {\n            count++\n        }\n    }\n    return count\n}\n",
  "    // Write your code here\n    return 0\n}\n", "    // Write your code here\n\
    \    return 0\n}\n", "    count := 0\n    for _, num := range nums {\n       \
    \ if num > 10 && isFirstAndLastDigitOdd(num) {\n            count++\n        }\n\
    \    }\n    return count\n}\n", "    var count int\n    for _, v := range nums\
    \ {\n        if v > 10 && isOdd(v) {\n            count++\n        }\n    }\n\
    \    return count\n}\n", "    // Write your code here\n    return 0\n}\n", " \
    \   // Write your code here\n    return 0\n}\n", "    var count int\n    for _,\
    \ num := range nums {\n        if num > 10 && isFirstAndLastDigitOdd(num) {\n\
    \            count++\n        }\n    }\n    return count\n}\n", "    count :=\
    \ 0\n    for _, num := range nums {\n        if num > 10 && isFirstAndLastDigitOdd(num)\
    \ {\n            count++\n        }\n    }\n    return count\n}\n", "    var count\
    \ int\n    for _, num := range nums {\n        if num > 10 && isFirstAndLastDigitOdd(num)\
    \ {\n            count++\n        }\n    }\n    return count\n}\n", "    // Write\
    \ your code here\n    return 0\n}\n", "    count := 0\n    for _, num := range\
    \ nums {\n        if num > 10 && isFirstAndLastDigitOdd(num) {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    count := 0\n    for _, num :=\
    \ range nums {\n        if num > 10 && isFirstAndLastDigitOdd(num) {\n       \
    \     count++\n        }\n    }\n    return count\n}\n", "    // Write your code\
    \ here\n    return 0\n}\n", "    var count int\n    for _, num := range nums {\n\
    \        if num > 10 && isFirstAndLastDigitOdd(num) {\n            count++\n \
    \       }\n    }\n    return count\n}\n", "    count := 0\n    for _, n := range\
    \ nums {\n        if n > 10 && isFirstAndLastDigitOdd(n) {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    var count int\n    for _, num\
    \ := range nums {\n        if num > 10 && isFirstAndLastDigitOdd(num) {\n    \
    \        count++\n        }\n    }\n    return count\n}\n", "    count := 0\n\
    \    for _, num := range nums {\n        if num > 10 && isFirstAndLastDigitOdd(num)\
    \ {\n            count++\n        }\n    }\n    return count\n}\n", "    count\
    \ := 0\n    for _, num := range nums {\n        if num > 10 && isOdd(num) {\n\
    \            count++\n        }\n    }\n    return count\n}\n", "    count :=\
    \ 0\n    for _, num := range nums {\n        if num > 10 && isFirstAndLastDigitOdd(num)\
    \ {\n            count++\n        }\n    }\n    return count\n}\n", "    count\
    \ := 0\n    for _, num := range nums {\n        if num > 10 && isFirstAndLastDigitOdd(num)\
    \ {\n            count++\n        }\n    }\n    return count\n}\n", "    var count\
    \ int\n    for _, num := range nums {\n        if num > 10 && isFirstAndLastDigitOdd(num)\
    \ {\n            count++\n        }\n    }\n    return count\n}\n", "    var count\
    \ int\n    for _, num := range nums {\n        if num > 10 && isOdd(num) {\n \
    \           count++\n        }\n    }\n    return count\n}\n", "    var count\
    \ int\n    for _, num := range nums {\n        if num > 10 && num % 2 != 0 &&\
    \ num / 10 % 2 != 0 && num % 10 != 0 {\n            count++\n        }\n    }\n\
    \    return count\n}\n", "    // Write your code here\n    return 0\n}\n", " \
    \   // your code here\n    return 0\n}\n", "    count := 0\n    for _, num :=\
    \ range nums {\n        if num > 10 && isFirstAndLastDigitOdd(num) {\n       \
    \     count++\n        }\n    }\n    return count\n}\n", "    // your code here\n\
    \    return 0\n}\n", "    // Write your code here\n    return 0\n}\n", "    //\
    \ Write your code here\n    return 0\n}\n", "    count := 0\n    for _, num :=\
    \ range nums {\n        if num > 10 && firstDigit(num)%2 != 0 && lastDigit(num)%2\
    \ != 0 {\n            count++\n        }\n    }\n    return count\n}\n", "   \
    \ count := 0\n    for _, num := range nums {\n        if num > 10 && isFirstAndLastDigitOdd(num)\
    \ {\n            count++\n        }\n    }\n    return count\n}\n", "    // your\
    \ code here\n    return 0\n}\n", "    count := 0\n    for _, num := range nums\
    \ {\n        if num > 10 && isFirstAndLastDigitOdd(num) {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    // Write your code here\n    return\
    \ 0\n}\n", "    // Write your code here\n    return 0\n}\n", "    count := 0\n\
    \    for _, num := range nums {\n        if num > 10 && isFirstAndLastDigitOdd(num)\
    \ {\n            count++\n        }\n    }\n    return count\n}\n", "    // Write\
    \ your code here\n    return 0\n}\n", "    var count int\n    for _, num := range\
    \ nums {\n        if num > 10 && isFirstAndLastDigitOdd(num) {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    count := 0\n    for _, n := range\
    \ nums {\n        if n > 10 && isFirstAndLastDigitOdd(n) {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    // Write your code here\n    return\
    \ 0\n}\n", "    // TODO: implement this function\n    return 0\n}\n", "    var\
    \ count int\n    for _, num := range nums {\n        if num > 10 && isFirstAndLastDigitOdd(num)\
    \ {\n            count++\n        }\n    }\n    return count\n}\n", "    var count\
    \ int\n    for _, n := range nums {\n        if n > 10 && isFirstAndLastDigitOdd(n)\
    \ {\n            count++\n        }\n    }\n    return count\n}\n", "    var count\
    \ int\n    for _, num := range nums {\n        if num > 10 && isFirstAndLastDigitOdd(num)\
    \ {\n            count++\n        }\n    }\n    return count\n}\n", "    // Write\
    \ your code here\n    return 0\n}\n", "    // TODO: implement this function\n\
    \    return 0\n}\n", "    // Write your code here\n    return 0\n}\n", "    count\
    \ := 0\n    for _, n := range nums {\n        if n > 10 && isOdd(n) && isOdd(n\
    \ % 10) {\n            count++\n        }\n    }\n    return count\n}\n", "  \
    \  var count int\n    for _, num := range nums {\n        if num > 10 && num%2\
    \ != 0 && num/10%2 != 0 && num%10%2 != 0 {\n            count++\n        }\n \
    \   }\n    return count\n}\n", "    count := 0\n    for _, num := range nums {\n\
    \        if num > 10 && isFirstAndLastDigitOdd(num) {\n            count++\n \
    \       }\n    }\n    return count\n}\n", "    var count int\n    for _, num :=\
    \ range nums {\n        if num > 10 && isFirstAndLastDigitOdd(num) {\n       \
    \     count++\n        }\n    }\n    return count\n}\n", "    count := 0\n   \
    \ for _, num := range nums {\n        if num > 10 && isOdd(num) {\n          \
    \  count++\n        }\n    }\n    return count\n}\n", "    var count int\n   \
    \ for _, n := range nums {\n        if n > 10 && isFirstAndLastDigitOdd(n) {\n\
    \            count++\n        }\n    }\n    return count\n}\n", "    count :=\
    \ 0\n    for _, n := range nums {\n        if n > 10 && isFirstAndLastOdd(n) {\n\
    \            count++\n        }\n    }\n    return count\n}\n", "    // Write\
    \ your code here\n    return 0\n}\n", "    count := 0\n    for _, num := range\
    \ nums {\n        if num > 10 && isFirstAndLastDigitOdd(num) {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    count := 0\n    for _, num :=\
    \ range nums {\n        if num > 10 && isFirstAndLastDigitOdd(num) {\n       \
    \     count++\n        }\n    }\n    return count\n}\n", "    // your code goes\
    \ here\n    return 0\n}\n", "    // TODO: implement\n    return 0\n}\n", "   \
    \ count := 0\n    for _, num := range nums {\n        if num > 10 && isFirstAndLastDigitOdd(num)\
    \ {\n            count++\n        }\n    }\n    return count\n}\n", "    count\
    \ := 0\n    for _, num := range nums {\n        if num > 10 && isFirstAndLastDigitOdd(num)\
    \ {\n            count++\n        }\n    }\n    return count\n}\n", "    var count\
    \ int\n    for _, value := range nums {\n        if value > 10 && value%2 != 0\
    \ && value/10%2 != 0 && value%10%2 != 0 {\n            count++\n        }\n  \
    \  }\n    return count\n}\n", "    var count int\n    for _, num := range nums\
    \ {\n        if num > 10 && (num/10)%2 != 0 && num%2 != 0 {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    var count int\n    for _, num\
    \ := range nums {\n        if num > 10 && isFirstAndLastDigitOdd(num) {\n    \
    \        count++\n        }\n    }\n    return count\n}\n", "    var count int\n\
    \    for _, num := range nums {\n        if num > 10 && (num/10)%2 != 0 && num%2\
    \ != 0 {\n            count++\n        }\n    }\n    return count\n}\n", "   \
    \ count := 0\n    for _, num := range nums {\n        if num > 10 && isFirstAndLastDigitOdd(num)\
    \ {\n            count++\n        }\n    }\n    return count\n}\n", "    return\
    \ 0\n}\n", "    var count int\n    for _, num := range nums {\n        if num\
    \ > 10 && isFirstAndLastDigitOdd(num) {\n            count++\n        }\n    }\n\
    \    return count\n}\n", "    var count int\n    for _, num := range nums {\n\
    \        if num > 10 && isFirstAndLastDigitOdd(num) {\n            count++\n \
    \       }\n    }\n    return count\n}\n", "    count := 0\n    for _, num := range\
    \ nums {\n        if num > 10 && isOdd(num) {\n            count++\n        }\n\
    \    }\n    return count\n}\n", "    var count int\n    for _, num := range nums\
    \ {\n        if num > 10 && isFirstAndLastDigitOdd(num) {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    // Write your code here\n    return\
    \ 0\n}\n", "    count := 0\n    for _, num := range nums {\n        if num > 10\
    \ && isFirstAndLastDigitOdd(num) {\n            count++\n        }\n    }\n  \
    \  return count\n}\n", "    count := 0\n    for _, num := range nums {\n     \
    \   if num > 10 && isOdd(num) {\n            count++\n        }\n    }\n    return\
    \ count\n}\n", "    var count int\n    for _, num := range nums {\n        if\
    \ num > 10 && isFirstAndLastDigitOdd(num) {\n            count++\n        }\n\
    \    }\n    return count\n}\n", "    count := 0\n    for _, n := range nums {\n\
    \        if n > 10 && isFirstAndLastDigitOdd(n) {\n            count++\n     \
    \   }\n    }\n    return count\n}\n", "    // Write your code here\n    return\
    \ 0\n}\n", "    // Write your code here\n    return 0\n}\n", "    // Write your\
    \ code here\n    return 0\n}\n", "    var count int\n    for _, num := range nums\
    \ {\n        if num > 10 && isFirstAndLastDigitOdd(num) {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    count := 0\n    for _, n := range\
    \ nums {\n        if n > 10 && isOdd(n) && isOdd(n / 10) {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    // Write your code here\n    return\
    \ 0\n}\n", "    var count int\n    for _, v := range nums {\n        if v > 10\
    \ && v%2 != 0 && v/10%2 != 0 && v%10%2 != 0 {\n            count++\n        }\n\
    \    }\n    return count\n}\n", "    var count int\n    for _, num := range nums\
    \ {\n        if num > 10 && isFirstAndLastDigitOdd(num) {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    return 0\n}\n", "    var count\
    \ int\n    for _, num := range nums {\n        if num > 10 && num%2 == 1 && (num/10)%2\
    \ == 1 && num%10 == 1 {\n            count++\n        }\n    }\n    return count\n\
    }\n", "    // Write your code here\n    return 0\n}\n", "    // Write your code\
    \ here\n    return 0\n}\n", "    count := 0\n    for _, num := range nums {\n\
    \        if num > 10 && isFirstAndLastDigitOdd(num) {\n            count++\n \
    \       }\n    }\n    return count\n}\n", "    count := 0\n    for _, num := range\
    \ nums {\n        if num > 10 && isFirstAndLastDigitOdd(num) {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    // Write your code here\n    return\
    \ 0\n}\n", "    // Write your code here\n    return 0\n}\n", "    // TODO: implement\
    \ this function\n    return 0\n}\n", "    // Write your code here\n    return\
    \ 0\n}\n", "    // Write your code here\n    return 0\n}\n", "    var count int\n\
    \    for _, n := range nums {\n        if n > 10 && isFirstAndLastDigitOdd(n)\
    \ {\n            count++\n        }\n    }\n    return count\n}\n", "    return\
    \ 0\n}\n", "    count := 0\n    for _, num := range nums {\n        if num > 10\
    \ && isFirstAndLastDigitOdd(num) {\n            count++\n        }\n    }\n  \
    \  return count\n}\n", "    count := 0\n    for _, num := range nums {\n     \
    \   if num > 10 && isFirstAndLastDigitOdd(num) {\n            count++\n      \
    \  }\n    }\n    return count\n}\n", "    // Write your code here\n    return\
    \ 0\n}\n", "    var count int\n    for _, num := range nums {\n        if num\
    \ > 10 && isFirstAndLastDigitOdd(num) {\n            count++\n        }\n    }\n\
    \    return count\n}\n", "    count := 0\n    for _, num := range nums {\n   \
    \     if num > 10 && isFirstAndLastDigitOdd(num) {\n            count++\n    \
    \    }\n    }\n    return count\n}\n", "    var count int\n    for _, num := range\
    \ nums {\n        if num > 10 && num%2 != 0 && num/10%2 != 0 && num%10%2 != 0\
    \ {\n            count++\n        }\n    }\n    return count\n}\n", "    var count\
    \ int\n    for _, num := range nums {\n        if num > 10 && isFirstAndLastDigitOdd(num)\
    \ {\n            count++\n        }\n    }\n    return count\n}\n", "    count\
    \ := 0\n    for _, num := range nums {\n        if num > 10 && isFirstAndLastDigitOdd(num)\
    \ {\n            count++\n        }\n    }\n    return count\n}\n", "    count\
    \ := 0\n    for _, num := range nums {\n        if num > 10 && isFirstAndLastDigitOdd(num)\
    \ {\n            count++\n        }\n    }\n    return count\n}\n", "    var count\
    \ int\n    for _, num := range nums {\n        if num > 10 && isFirstAndLastDigitOdd(num)\
    \ {\n            count++\n        }\n    }\n    return count\n}\n", "    // Write\
    \ your code here\n    return 0\n}\n", "    // Write your code here\n    return\
    \ 0\n}\n", "    // Write your code here\n    return 0\n}\n", "    count := 0\n\
    \    for _, num := range nums {\n        if num > 10 && num % 2 == 1 && num /\
    \ 10 % 2 == 1 {\n            count++\n        }\n    }\n    return count\n}\n",
  "    var count int\n    for _, num := range nums {\n        if num > 10 && (num\
    \ % 10) % 2 != 0 && num / 10 % 2 != 0 {\n            count++\n        }\n    }\n\
    \    return count\n}\n", "    var count int\n    for _, num := range nums {\n\
    \        if num > 10 && isFirstAndLastDigitOdd(num) {\n            count++\n \
    \       }\n    }\n    return count\n}\n", "    count := 0\n    for _, num := range\
    \ nums {\n        if num > 10 && isFirstAndLastDigitOdd(num) {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    count := 0\n    for _, num :=\
    \ range nums {\n        if num > 10 && isFirstAndLastDigitOdd(num) {\n       \
    \     count++\n        }\n    }\n    return count\n}\n", "    // your code goes\
    \ here\n    return 0\n}\n", "    return 0\n}\n", "    count := 0\n    for _, num\
    \ := range nums {\n        if num > 10 && isFirstAndLastDigitOdd(num) {\n    \
    \        count++\n        }\n    }\n    return count\n}\n", "    var count int\n\
    \    for _, num := range nums {\n        if num > 10 && num % 2 != 0 && num /\
    \ 10 % 2 != 0 && num % 10 != 0 {\n            count++\n        }\n    }\n    return\
    \ count\n}\n", "    // Your code here\n    return 0\n}\n", "    count := 0\n \
    \   for _, num := range nums {\n        if num > 10 && isFirstAndLastDigitOdd(num)\
    \ {\n            count++\n        }\n    }\n    return count\n}\n", "    var count\
    \ int\n    for _, num := range nums {\n        if num > 10 && isFirstAndLastDigitOdd(num)\
    \ {\n            count++\n        }\n    }\n    return count\n}\n", "    count\
    \ := 0\n    for _, n := range nums {\n        if n > 10 && isFirstAndLastDigitOdd(n)\
    \ {\n            count++\n        }\n    }\n    return count\n}\n", "    count\
    \ := 0\n    for _, num := range nums {\n        if num > 10 && isFirstAndLastDigitOdd(num)\
    \ {\n            count++\n        }\n    }\n    return count\n}\n", "    var count\
    \ int\n    for _, num := range nums {\n        if num > 10 && isFirstAndLastDigitOdd(num)\
    \ {\n            count++\n        }\n    }\n    return count\n}\n", "    // Write\
    \ your code here\n    var count int\n    for _, num := range nums {\n        if\
    \ num > 10 && num%2 != 0 && num/10%2 != 0 && num%10%2 != 0 {\n            count++\n\
    \        }\n    }\n    return count\n}\n", "    count := 0\n    for _, num :=\
    \ range nums {\n        if num > 10 && isFirstAndLastDigitOdd(num) {\n       \
    \     count++\n        }\n    }\n    return count\n}\n", "    count := 0\n   \
    \ for _, num := range nums {\n        if num > 10 && isFirstAndLastDigitOdd(num)\
    \ {\n            count++\n        }\n    }\n    return count\n}\n", "    // Write\
    \ your code here\n    return 0\n}\n", "    var count int\n    for _, num := range\
    \ nums {\n        if num > 10 && (num % 10) % 2 != 0 && num / 10 % 2 != 0 {\n\
    \            count++\n        }\n    }\n    return count\n}\n", "    var count\
    \ int\n    for _, num := range nums {\n        if num > 10 && isFirstAndLastDigitOdd(num)\
    \ {\n            count++\n        }\n    }\n    return count\n}\n", "    count\
    \ := 0\n    for _, num := range nums {\n        if num > 10 && isFirstAndLastDigitOdd(num)\
    \ {\n            count++\n        }\n    }\n    return count\n}\n", "    // your\
    \ code here\n    return 0\n}\n", "    var count int\n    for _, n := range nums\
    \ {\n        if n > 10 && isFirstAndLastDigitOdd(n) {\n            count++\n \
    \       }\n    }\n    return count\n}\n", "    var count int\n    for _, num :=\
    \ range nums {\n        if num > 10 && isFirstAndLastDigitOdd(num) {\n       \
    \     count++\n        }\n    }\n    return count\n}\n", "    // Write your code\
    \ here\n    return 0\n}\n", "    // Write your code here\n    return 0\n}\n"]
stop_tokens:
- "\nfunc"
- struct
- "\n// "

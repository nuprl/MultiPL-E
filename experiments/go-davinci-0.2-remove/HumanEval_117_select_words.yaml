name: HumanEval_117_select_words
language: go_test.go
prompt: "package select_words_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
  // Given a string s and a natural number n, you have been tasked to implement \n\
  // a function that returns a list of all words from string s that contain exactly\
  \ \n// n consonants, in order these words appear in the string s.\n// If the string\
  \ s is empty then the function should return an empty list.\n// Note: you may assume\
  \ the input string contains only letters and spaces.\n// Examples:\nfunc select_words(s\
  \ string, n int) []string {\n"
tests: "func TestSelect_Words(t *testing.T) {\n  candidate := select_words\n\ttype\
  \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
  \ := []test{\n     { actual: candidate(\"Mary had a little lamb\", 4), expected:\
  \ []string{\"little\"} },\n     { actual: candidate(\"Mary had a little lamb\",\
  \ 3), expected: []string{\"Mary\", \"lamb\"} },\n     { actual: candidate(\"simple\
  \ white space\", 2), expected: []string{} },\n     { actual: candidate(\"Hello world\"\
  , 4), expected: []string{\"world\"} },\n     { actual: candidate(\"Uncle sam\",\
  \ 3), expected: []string{\"Uncle\"} },\n     { actual: candidate(\"\", 4), expected:\
  \ []string{} },\n     { actual: candidate(\"a b c d e f\", 1), expected: []string{\"\
  b\", \"c\", \"d\", \"f\"} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
  test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
  \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
  , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
completions: ["    var words []string\n    var word string\n    var consonants int\n\
    \    var is_consonant bool\n    var is_word bool\n    for _, c := range s {\n\
    \        is_consonant = false\n        is_word = false\n        if c == ' ' {\n\
    \            if consonants == n {\n                words = append(words, word)\n\
    \            }\n            word = \"\"\n            consonants = 0\n        }\
    \ else {\n            is_word = true\n            switch c {\n            case\
    \ 'a', 'e', 'i', 'o', 'u':\n                break\n            default:\n    \
    \            is_consonant = true\n            }\n            if is_consonant {\n\
    \                consonants++\n            }\n            word += string(c)\n\
    \        }\n    }\n    if is_word && consonants == n {\n        words = append(words,\
    \ word)\n    }\n    return words\n}\n", "    // your code here\n    return nil\n\
    }\n", "    var words []string\n    var word string\n    var consonants int\n \
    \   for _, c := range s {\n        if c == ' ' {\n            if consonants ==\
    \ n {\n                words = append(words, word)\n            }\n          \
    \  word = \"\"\n            consonants = 0\n        } else {\n            word\
    \ += string(c)\n            if c != 'a' && c != 'e' && c != 'i' && c != 'o' &&\
    \ c != 'u' {\n                consonants++\n            }\n        }\n    }\n\
    \    if consonants == n {\n        words = append(words, word)\n    }\n    return\
    \ words\n}\n", "    var words []string\n    var word string\n    var consonants\
    \ int\n    var is_consonant bool\n    for _, c := range s {\n        if c == '\
    \ ' {\n            if consonants == n {\n                words = append(words,\
    \ word)\n            }\n            consonants = 0\n            word = \"\"\n\
    \        } else {\n            is_consonant = true\n            switch c {\n \
    \           case 'a', 'e', 'i', 'o', 'u':\n                is_consonant = false\n\
    \            }\n            if is_consonant {\n                consonants++\n\
    \            }\n            word += string(c)\n        }\n    }\n    if consonants\
    \ == n {\n        words = append(words, word)\n    }\n    return words\n}\n",
  "    words := []string{}\n    word := \"\"\n    for _, c := range s {\n        if\
    \ c == ' ' {\n            if len(word) > 0 {\n                words = append(words,\
    \ word)\n                word = \"\"\n            }\n        } else {\n      \
    \      word += string(c)\n        }\n    }\n    if len(word) > 0 {\n        words\
    \ = append(words, word)\n    }\n    result := []string{}\n    for _, w := range\
    \ words {\n        if count_consonants(w) == n {\n            result = append(result,\
    \ w)\n        }\n    }\n    return result\n}\n", "    var words []string\n   \
    \ var word string\n    var consonants int\n    var is_word bool\n    for _, c\
    \ := range s {\n        if c == ' ' {\n            if is_word {\n            \
    \    if consonants == n {\n                    words = append(words, word)\n \
    \               }\n                word = \"\"\n                consonants = 0\n\
    \                is_word = false\n            }\n        } else {\n          \
    \  word += string(c)\n            if !is_word {\n                is_word = true\n\
    \            }\n            if c != 'a' && c != 'e' && c != 'i' && c != 'o' &&\
    \ c != 'u' {\n                consonants++\n            }\n        }\n    }\n\
    \    if is_word {\n        if consonants == n {\n            words = append(words,\
    \ word)\n        }\n    }\n    return words\n}\n", "    // your code here\n  \
    \  return nil\n}\n", "    var words []string\n    var word string\n    for _,\
    \ c := range s {\n        if c == ' ' {\n            if len(word) > 0 {\n    \
    \            words = append(words, word)\n                word = \"\"\n      \
    \      }\n        } else {\n            word += string(c)\n        }\n    }\n\
    \    if len(word) > 0 {\n        words = append(words, word)\n    }\n    var result\
    \ []string\n    for _, word := range words {\n        if count_consonants(word)\
    \ == n {\n            result = append(result, word)\n        }\n    }\n    return\
    \ result\n}\n", "    var words []string\n    var word string\n    var consonants\
    \ int\n    var is_consonant bool\n    var is_space bool\n    var is_letter bool\n\
    \    var is_vowel bool\n    var letter byte\n    var vowels = []byte{'a', 'e',\
    \ 'i', 'o', 'u'}\n    var consonants_map = make(map[byte]bool)\n    for _, letter\
    \ = range vowels {\n        consonants_map[letter] = true\n    }\n    for _, letter\
    \ = range []byte(s) {\n        is_letter = letter >= 'a' && letter <= 'z' || letter\
    \ >= 'A' && letter <= 'Z'\n        is_space = letter == ' '\n        is_vowel\
    \ = consonants_map[letter]\n        is_consonant = is_letter && !is_vowel\n  \
    \      if is_consonant {\n            consonants++\n        }\n        if is_letter\
    \ {\n            word += string(letter)\n        }\n        if is_space || !is_letter\
    \ {\n            if consonants == n {\n                words = append(words, word)\n\
    \            }\n            consonants = 0\n            word = \"\"\n        }\n\
    \    }\n    if consonants == n {\n        words = append(words, word)\n    }\n\
    \    return words\n}\n", "    var words []string\n    var word string\n    for\
    \ _, c := range s {\n        if c == ' ' {\n            if len(word) == n {\n\
    \                words = append(words, word)\n            }\n            word\
    \ = \"\"\n        } else {\n            word += string(c)\n        }\n    }\n\
    \    if len(word) == n {\n        words = append(words, word)\n    }\n    return\
    \ words\n}\n", "    var words []string\n    var word string\n    var consonants\
    \ int\n    var is_word bool\n    for _, c := range s {\n        if c == ' ' {\n\
    \            if is_word {\n                if consonants == n {\n            \
    \        words = append(words, word)\n                }\n                word\
    \ = \"\"\n                consonants = 0\n                is_word = false\n  \
    \          }\n        } else {\n            is_word = true\n            word +=\
    \ string(c)\n            if c != 'a' && c != 'e' && c != 'i' && c != 'o' && c\
    \ != 'u' {\n                consonants++\n            }\n        }\n    }\n  \
    \  if is_word {\n        if consonants == n {\n            words = append(words,\
    \ word)\n        }\n    }\n    return words\n}\n", "    var words []string\n \
    \   var word string\n    var consonants int\n    for _, c := range s {\n     \
    \   if c == ' ' {\n            if consonants == n {\n                words = append(words,\
    \ word)\n            }\n            word = \"\"\n            consonants = 0\n\
    \        } else {\n            if c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n                consonants++\n            }\n            word\
    \ += string(c)\n        }\n    }\n    if consonants == n {\n        words = append(words,\
    \ word)\n    }\n    return words\n}\n", "    var words []string\n    var word\
    \ string\n    var consonants int\n    for _, c := range s {\n        if c == '\
    \ ' {\n            if consonants == n {\n                words = append(words,\
    \ word)\n            }\n            word = \"\"\n            consonants = 0\n\
    \        } else {\n            word += string(c)\n            if c != 'a' && c\
    \ != 'e' && c != 'i' && c != 'o' && c != 'u' {\n                consonants++\n\
    \            }\n        }\n    }\n    if consonants == n {\n        words = append(words,\
    \ word)\n    }\n    return words\n}\n", "    var result []string\n    var word\
    \ string\n    var consonants int\n    for _, c := range s {\n        if c == '\
    \ ' {\n            if consonants == n {\n                result = append(result,\
    \ word)\n            }\n            word = \"\"\n            consonants = 0\n\
    \        } else {\n            word += string(c)\n            if c != 'a' && c\
    \ != 'e' && c != 'i' && c != 'o' && c != 'u' {\n                consonants +=\
    \ 1\n            }\n        }\n    }\n    if consonants == n {\n        result\
    \ = append(result, word)\n    }\n    return result\n}\n", "    words := []string{}\n\
    \    for _, word := range(strings.Split(s, \" \")) {\n        if len(word) ==\
    \ n {\n            words = append(words, word)\n        }\n    }\n    return words\n\
    }\n", "    var result []string\n    var word string\n    var consonants int\n\
    \    for _, c := range s {\n        if c == ' ' {\n            if consonants ==\
    \ n {\n                result = append(result, word)\n            }\n        \
    \    word = \"\"\n            consonants = 0\n        } else {\n            word\
    \ += string(c)\n            if c != 'a' && c != 'e' && c != 'i' && c != 'o' &&\
    \ c != 'u' {\n                consonants++\n            }\n        }\n    }\n\
    \    if consonants == n {\n        result = append(result, word)\n    }\n    return\
    \ result\n}\n", "    var words []string\n    var word string\n    var consonants\
    \ int\n    var is_consonant bool\n    var is_word bool\n    for _, c := range\
    \ s {\n        if c == ' ' {\n            if is_word {\n                if consonants\
    \ == n {\n                    words = append(words, word)\n                }\n\
    \                word = \"\"\n                consonants = 0\n               \
    \ is_word = false\n            }\n        } else {\n            is_word = true\n\
    \            is_consonant = true\n            switch c {\n            case 'a',\
    \ 'e', 'i', 'o', 'u':\n                is_consonant = false\n            }\n \
    \           if is_consonant {\n                consonants++\n            }\n \
    \           word += string(c)\n        }\n    }\n    if is_word {\n        if\
    \ consonants == n {\n            words = append(words, word)\n        }\n    }\n\
    \    return words\n}\n", "    var words []string\n    var word string\n    var\
    \ consonants int\n    for _, c := range s {\n        if c == ' ' {\n         \
    \   if consonants == n {\n                words = append(words, word)\n      \
    \      }\n            word = \"\"\n            consonants = 0\n        } else\
    \ {\n            word += string(c)\n            if c != 'a' && c != 'e' && c !=\
    \ 'i' && c != 'o' && c != 'u' {\n                consonants++\n            }\n\
    \        }\n    }\n    if consonants == n {\n        words = append(words, word)\n\
    \    }\n    return words\n}\n", "    var words []string\n    var word string\n\
    \    for _, c := range s {\n        if c == ' ' {\n            if len(word) >\
    \ 0 {\n                words = append(words, word)\n                word = \"\"\
    \n            }\n        } else {\n            word += string(c)\n        }\n\
    \    }\n    if len(word) > 0 {\n        words = append(words, word)\n    }\n \
    \   var result []string\n    for _, word := range words {\n        if count_consonants(word)\
    \ == n {\n            result = append(result, word)\n        }\n    }\n    return\
    \ result\n}\n", "    var words []string\n    var word string\n    var consonants\
    \ int\n    for _, c := range s {\n        if c == ' ' {\n            if consonants\
    \ == n {\n                words = append(words, word)\n            }\n       \
    \     word = \"\"\n            consonants = 0\n        } else {\n            word\
    \ += string(c)\n            if is_consonant(c) {\n                consonants++\n\
    \            }\n        }\n    }\n    if consonants == n {\n        words = append(words,\
    \ word)\n    }\n    return words\n}\n", "    var words []string\n    var word\
    \ string\n    for _, c := range s {\n        if c == ' ' {\n            if count_consonants(word)\
    \ == n {\n                words = append(words, word)\n            }\n       \
    \     word = \"\"\n        } else {\n            word += string(c)\n        }\n\
    \    }\n    if count_consonants(word) == n {\n        words = append(words, word)\n\
    \    }\n    return words\n}\n", "    var result []string\n    var words []string\n\
    \    var word string\n    var consonants int\n    var i int\n    var j int\n \
    \   var c byte\n\n    words = strings.Split(s, \" \")\n    for i = 0; i < len(words);\
    \ i++ {\n        word = words[i]\n        consonants = 0\n        for j = 0; j\
    \ < len(word); j++ {\n            c = word[j]\n            if c != 'a' && c !=\
    \ 'e' && c != 'i' && c != 'o' && c != 'u' {\n                consonants++\n  \
    \          }\n        }\n        if consonants == n {\n            result = append(result,\
    \ word)\n        }\n    }\n    return result\n}\n", "    var words []string\n\
    \    var word string\n    var consonants int\n    for _, c := range s {\n    \
    \    if c == ' ' {\n            if consonants == n {\n                words =\
    \ append(words, word)\n            }\n            word = \"\"\n            consonants\
    \ = 0\n        } else {\n            word += string(c)\n            if c != 'a'\
    \ && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n                consonants++\n\
    \            }\n        }\n    }\n    if consonants == n {\n        words = append(words,\
    \ word)\n    }\n    return words\n}\n", "    var words []string\n    var word\
    \ string\n    var consonants int\n    for _, c := range s {\n        if c == '\
    \ ' {\n            if consonants == n {\n                words = append(words,\
    \ word)\n            }\n            word = \"\"\n            consonants = 0\n\
    \        } else {\n            word += string(c)\n            if c != 'a' && c\
    \ != 'e' && c != 'i' && c != 'o' && c != 'u' {\n                consonants++\n\
    \            }\n        }\n    }\n    if consonants == n {\n        words = append(words,\
    \ word)\n    }\n    return words\n}\n", "    var words []string\n    var word\
    \ string\n    for _, c := range s {\n        if c == ' ' {\n            if len(word)\
    \ == n {\n                words = append(words, word)\n            }\n       \
    \     word = \"\"\n        } else {\n            word += string(c)\n        }\n\
    \    }\n    if len(word) == n {\n        words = append(words, word)\n    }\n\
    \    return words\n}\n", "    var words []string\n    var word string\n    var\
    \ consonants int\n    for _, char := range s {\n        if char == ' ' {\n   \
    \         if consonants == n {\n                words = append(words, word)\n\
    \            }\n            word = \"\"\n            consonants = 0\n        }\
    \ else {\n            word += string(char)\n            if is_consonant(char)\
    \ {\n                consonants++\n            }\n        }\n    }\n    if consonants\
    \ == n {\n        words = append(words, word)\n    }\n    return words\n}\n",
  "    var words []string\n    var word string\n    for _, char := range s {\n   \
    \     if char == ' ' {\n            if len(word) == n {\n                words\
    \ = append(words, word)\n            }\n            word = \"\"\n        } else\
    \ {\n            word += string(char)\n        }\n    }\n    if len(word) == n\
    \ {\n        words = append(words, word)\n    }\n    return words\n}\n", "   \
    \ var words []string\n    var word string\n    var consonants int\n    for _,\
    \ c := range s {\n        if c == ' ' {\n            if consonants == n {\n  \
    \              words = append(words, word)\n            }\n            word =\
    \ \"\"\n            consonants = 0\n        } else {\n            word += string(c)\n\
    \            if c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n \
    \               consonants++\n            }\n        }\n    }\n    if consonants\
    \ == n {\n        words = append(words, word)\n    }\n    return words\n}\n",
  "    var words []string\n    var word string\n    for _, c := range s {\n      \
    \  if c == ' ' {\n            if len(word) > 0 {\n                words = append(words,\
    \ word)\n                word = \"\"\n            }\n        } else {\n      \
    \      word += string(c)\n        }\n    }\n    if len(word) > 0 {\n        words\
    \ = append(words, word)\n    }\n    var result []string\n    for _, word := range\
    \ words {\n        if len(word) == n {\n            result = append(result, word)\n\
    \        }\n    }\n    return result\n}\n", "    var words []string\n    var word\
    \ string\n    var consonants int\n    for _, c := range s {\n        if c == '\
    \ ' {\n            if consonants == n {\n                words = append(words,\
    \ word)\n            }\n            word = \"\"\n            consonants = 0\n\
    \        } else {\n            word += string(c)\n            if c != 'a' && c\
    \ != 'e' && c != 'i' && c != 'o' && c != 'u' {\n                consonants++\n\
    \            }\n        }\n    }\n    if consonants == n {\n        words = append(words,\
    \ word)\n    }\n    return words\n}\n", "    var words []string\n    var word\
    \ string\n    for _, c := range s {\n        if c == ' ' {\n            if len(word)\
    \ > 0 {\n                words = append(words, word)\n                word = \"\
    \"\n            }\n        } else {\n            word += string(c)\n        }\n\
    \    }\n    if len(word) > 0 {\n        words = append(words, word)\n    }\n \
    \   var result []string\n    for _, word := range words {\n        if len(word)\
    \ == n {\n            result = append(result, word)\n        }\n    }\n    return\
    \ result\n}\n", "    var words []string\n    var word string\n    var consonants\
    \ int\n    var in_word bool\n    for _, c := range s {\n        if c == ' ' {\n\
    \            if in_word {\n                if consonants == n {\n            \
    \        words = append(words, word)\n                }\n                word\
    \ = \"\"\n                consonants = 0\n                in_word = false\n  \
    \          }\n        } else {\n            in_word = true\n            if c ==\
    \ 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n                consonants\
    \ = 0\n            } else {\n                consonants++\n            }\n   \
    \         word += string(c)\n        }\n    }\n    if in_word {\n        if consonants\
    \ == n {\n            words = append(words, word)\n        }\n    }\n    return\
    \ words\n}\n", "    var words []string\n    var word string\n    var consonants\
    \ int\n    for _, c := range s {\n        if c == ' ' {\n            if consonants\
    \ == n {\n                words = append(words, word)\n            }\n       \
    \     word = \"\"\n            consonants = 0\n        } else {\n            word\
    \ += string(c)\n            if c != 'a' && c != 'e' && c != 'i' && c != 'o' &&\
    \ c != 'u' {\n                consonants++\n            }\n        }\n    }\n\
    \    if consonants == n {\n        words = append(words, word)\n    }\n    return\
    \ words\n}\n", "    var words []string\n    var word string\n    var consonants\
    \ int\n    for _, c := range s {\n        if c == ' ' {\n            if consonants\
    \ == n {\n                words = append(words, word)\n            }\n       \
    \     word = \"\"\n            consonants = 0\n        } else {\n            word\
    \ += string(c)\n            if c != 'a' && c != 'e' && c != 'i' && c != 'o' &&\
    \ c != 'u' {\n                consonants++\n            }\n        }\n    }\n\
    \    if consonants == n {\n        words = append(words, word)\n    }\n    return\
    \ words\n}\n", "    var words []string\n    var word string\n    for _, c := range\
    \ s {\n        if c == ' ' {\n            if len(word) > 0 {\n               \
    \ words = append(words, word)\n                word = \"\"\n            }\n  \
    \      } else {\n            word += string(c)\n        }\n    }\n    if len(word)\
    \ > 0 {\n        words = append(words, word)\n    }\n    var result []string\n\
    \    for _, word := range words {\n        if count_consonants(word) == n {\n\
    \            result = append(result, word)\n        }\n    }\n    return result\n\
    }\n", "    var result []string\n    var word string\n    for _, c := range s {\n\
    \        if c == ' ' {\n            if len(word) > 0 {\n                if count_consonants(word)\
    \ == n {\n                    result = append(result, word)\n                }\n\
    \                word = \"\"\n            }\n        } else {\n            word\
    \ += string(c)\n        }\n    }\n    if len(word) > 0 {\n        if count_consonants(word)\
    \ == n {\n            result = append(result, word)\n        }\n    }\n    return\
    \ result\n}\n", "    words := make([]string, 0)\n    word := \"\"\n    for _,\
    \ c := range s {\n        if c == ' ' {\n            if len(word) > 0 {\n    \
    \            words = append(words, word)\n                word = \"\"\n      \
    \      }\n        } else {\n            word += string(c)\n        }\n    }\n\
    \    if len(word) > 0 {\n        words = append(words, word)\n    }\n    result\
    \ := make([]string, 0)\n    for _, w := range words {\n        if count_consonants(w)\
    \ == n {\n            result = append(result, w)\n        }\n    }\n    return\
    \ result\n}\n", "    var words []string\n    var word string\n    var consonants\
    \ int\n    for _, c := range s {\n        if c == ' ' {\n            if consonants\
    \ == n {\n                words = append(words, word)\n            }\n       \
    \     word = \"\"\n            consonants = 0\n        } else {\n            if\
    \ c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n               \
    \ consonants++\n            }\n            word += string(c)\n        }\n    }\n\
    \    if consonants == n {\n        words = append(words, word)\n    }\n    return\
    \ words\n}\n", "    var words []string\n    var word string\n    var consonants\
    \ int\n    for _, c := range s {\n        if c == ' ' {\n            if consonants\
    \ == n {\n                words = append(words, word)\n            }\n       \
    \     word = \"\"\n            consonants = 0\n        } else {\n            word\
    \ += string(c)\n            if c != 'a' && c != 'e' && c != 'i' && c != 'o' &&\
    \ c != 'u' {\n                consonants++\n            }\n        }\n    }\n\
    \    if consonants == n {\n        words = append(words, word)\n    }\n    return\
    \ words\n}\n", "    // your code here\n    return nil\n}\n", "    var words []string\n\
    \    var word string\n    var consonants int\n    var is_consonant bool\n    for\
    \ _, char := range s {\n        if char == ' ' {\n            if consonants ==\
    \ n {\n                words = append(words, word)\n            }\n          \
    \  word = \"\"\n            consonants = 0\n        } else {\n            word\
    \ += string(char)\n            is_consonant = true\n            for _, vowel :=\
    \ range \"aeiou\" {\n                if char == vowel {\n                    is_consonant\
    \ = false\n                    break\n                }\n            }\n     \
    \       if is_consonant {\n                consonants++\n            }\n     \
    \   }\n    }\n    if consonants == n {\n        words = append(words, word)\n\
    \    }\n    return words\n}\n", "    var result []string\n    var word string\n\
    \    for _, c := range s {\n        if c == ' ' {\n            if len(word) >\
    \ 0 {\n                if count_consonants(word) == n {\n                    result\
    \ = append(result, word)\n                }\n                word = \"\"\n   \
    \         }\n        } else {\n            word += string(c)\n        }\n    }\n\
    \    if len(word) > 0 {\n        if count_consonants(word) == n {\n          \
    \  result = append(result, word)\n        }\n    }\n    return result\n}\n", " \
    \   var words []string\n    var word string\n    var consonants int\n    for _,\
    \ char := range s {\n        if char == ' ' {\n            if consonants == n\
    \ {\n                words = append(words, word)\n            }\n            word\
    \ = \"\"\n            consonants = 0\n        } else {\n            word += string(char)\n\
    \            if char != 'a' && char != 'e' && char != 'i' && char != 'o' && char\
    \ != 'u' {\n                consonants++\n            }\n        }\n    }\n  \
    \  if consonants == n {\n        words = append(words, word)\n    }\n    return\
    \ words\n}\n", "    var words []string\n    var word string\n    var consonants\
    \ int\n    for _, c := range s {\n        if c == ' ' {\n            if consonants\
    \ == n {\n                words = append(words, word)\n            }\n       \
    \     word = \"\"\n            consonants = 0\n        } else {\n            if\
    \ c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n               \
    \ consonants++\n            }\n            word += string(c)\n        }\n    }\n\
    \    if consonants == n {\n        words = append(words, word)\n    }\n    return\
    \ words\n}\n", "    var words []string\n    var word string\n    var consonants\
    \ int\n    for _, c := range s {\n        if c == ' ' {\n            if consonants\
    \ == n {\n                words = append(words, word)\n            }\n       \
    \     word = \"\"\n            consonants = 0\n        } else {\n            word\
    \ += string(c)\n            if c != 'a' && c != 'e' && c != 'i' && c != 'o' &&\
    \ c != 'u' {\n                consonants++\n            }\n        }\n    }\n\
    \    if consonants == n {\n        words = append(words, word)\n    }\n    return\
    \ words\n}\n", "    var words []string\n    var word string\n    for _, c := range\
    \ s {\n        if c == ' ' {\n            if len(word) > 0 {\n               \
    \ words = append(words, word)\n                word = \"\"\n            }\n  \
    \      } else {\n            word += string(c)\n        }\n    }\n    if len(word)\
    \ > 0 {\n        words = append(words, word)\n    }\n    var result []string\n\
    \    for _, word := range words {\n        if count_consonants(word) == n {\n\
    \            result = append(result, word)\n        }\n    }\n    return result\n\
    }\n", "    var words []string\n    var word string\n    for _, c := range s {\n\
    \        if c == ' ' {\n            if len(word) > 0 {\n                words\
    \ = append(words, word)\n                word = \"\"\n            }\n        }\
    \ else {\n            word += string(c)\n        }\n    }\n    if len(word) >\
    \ 0 {\n        words = append(words, word)\n    }\n    var result []string\n \
    \   for _, word := range words {\n        if count_consonants(word) == n {\n \
    \           result = append(result, word)\n        }\n    }\n    return result\n\
    }\n", "    var words []string\n    var word string\n    var consonants int\n \
    \   var is_consonant bool\n    var is_word bool\n    for _, c := range s {\n \
    \       if c == ' ' {\n            if is_word {\n                if consonants\
    \ == n {\n                    words = append(words, word)\n                }\n\
    \                word = \"\"\n                consonants = 0\n               \
    \ is_word = false\n            }\n        } else {\n            is_word = true\n\
    \            is_consonant = false\n            switch c {\n            case 'a',\
    \ 'e', 'i', 'o', 'u':\n                is_consonant = false\n            default:\n\
    \                is_consonant = true\n            }\n            if is_consonant\
    \ {\n                consonants++\n            }\n            word += string(c)\n\
    \        }\n    }\n    if is_word {\n        if consonants == n {\n          \
    \  words = append(words, word)\n        }\n    }\n    return words\n}\n", "  \
    \  var words []string\n    var word string\n    var consonants int\n    for _,\
    \ c := range s {\n        if c == ' ' {\n            if consonants == n {\n  \
    \              words = append(words, word)\n            }\n            word =\
    \ \"\"\n            consonants = 0\n        } else {\n            word += string(c)\n\
    \            if c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n \
    \               consonants++\n            }\n        }\n    }\n    if consonants\
    \ == n {\n        words = append(words, word)\n    }\n    return words\n}\n",
  "    var result []string\n    var word string\n    var consonants int\n    for _,\
    \ c := range s {\n        if c == ' ' {\n            if consonants == n {\n  \
    \              result = append(result, word)\n            }\n            word\
    \ = \"\"\n            consonants = 0\n        } else {\n            word += string(c)\n\
    \            if c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n \
    \               consonants++\n            }\n        }\n    }\n    if consonants\
    \ == n {\n        result = append(result, word)\n    }\n    return result\n}\n",
  "    var words []string\n    var word string\n    for _, c := range s {\n      \
    \  if c == ' ' {\n            if len(word) > 0 {\n                words = append(words,\
    \ word)\n                word = \"\"\n            }\n        } else {\n      \
    \      word += string(c)\n        }\n    }\n    if len(word) > 0 {\n        words\
    \ = append(words, word)\n    }\n    var result []string\n    for _, word := range\
    \ words {\n        if len(word) == n {\n            result = append(result, word)\n\
    \        }\n    }\n    return result\n}\n", "    var words []string\n    var word\
    \ string\n    var consonants int\n    for _, c := range s {\n        if c == '\
    \ ' {\n            if consonants == n {\n                words = append(words,\
    \ word)\n            }\n            word = \"\"\n            consonants = 0\n\
    \        } else {\n            word += string(c)\n            if c != 'a' && c\
    \ != 'e' && c != 'i' && c != 'o' && c != 'u' {\n                consonants++\n\
    \            }\n        }\n    }\n    if consonants == n {\n        words = append(words,\
    \ word)\n    }\n    return words\n}\n", "    var result []string\n    var word\
    \ string\n    for _, char := range s {\n        if char == ' ' {\n           \
    \ if len(word) > 0 {\n                if count_consonants(word) == n {\n     \
    \               result = append(result, word)\n                }\n           \
    \     word = \"\"\n            }\n        } else {\n            word += string(char)\n\
    \        }\n    }\n    if len(word) > 0 {\n        if count_consonants(word) ==\
    \ n {\n            result = append(result, word)\n        }\n    }\n    return\
    \ result\n}\n", "    var words []string\n    var word string\n    var consonants\
    \ int\n    for _, c := range s {\n        if c == ' ' {\n            if consonants\
    \ == n {\n                words = append(words, word)\n            }\n       \
    \     word = \"\"\n            consonants = 0\n        } else {\n            word\
    \ += string(c)\n            if c != 'a' && c != 'e' && c != 'i' && c != 'o' &&\
    \ c != 'u' {\n                consonants++\n            }\n        }\n    }\n\
    \    if consonants == n {\n        words = append(words, word)\n    }\n    return\
    \ words\n}\n", "    var words []string\n    var word string\n    var consonants\
    \ int\n    for _, c := range s {\n        if c == ' ' {\n            if consonants\
    \ == n {\n                words = append(words, word)\n            }\n       \
    \     word = \"\"\n            consonants = 0\n        } else {\n            word\
    \ += string(c)\n            if c != 'a' && c != 'e' && c != 'i' && c != 'o' &&\
    \ c != 'u' {\n                consonants++\n            }\n        }\n    }\n\
    \    if consonants == n {\n        words = append(words, word)\n    }\n    return\
    \ words\n}\n", "    // your code here\n    return nil\n}\n", "    var result []string\n\
    \    var word string\n    var consonants int\n    var is_consonant bool\n    var\
    \ is_word bool\n    for _, c := range s {\n        if c == ' ' {\n           \
    \ is_word = false\n            if consonants == n {\n                result =\
    \ append(result, word)\n            }\n            word = \"\"\n            consonants\
    \ = 0\n        } else {\n            is_word = true\n            is_consonant\
    \ = false\n            switch c {\n            case 'a', 'e', 'i', 'o', 'u':\n\
    \                is_consonant = false\n            default:\n                is_consonant\
    \ = true\n            }\n            if is_consonant {\n                consonants++\n\
    \            }\n            word += string(c)\n        }\n    }\n    if is_word\
    \ && consonants == n {\n        result = append(result, word)\n    }\n    return\
    \ result\n}\n", "    var words []string\n    var word string\n    var consonants\
    \ int\n    for _, c := range s {\n        if c == ' ' {\n            if consonants\
    \ == n {\n                words = append(words, word)\n            }\n       \
    \     word = \"\"\n            consonants = 0\n        } else {\n            word\
    \ += string(c)\n            if c != 'a' && c != 'e' && c != 'i' && c != 'o' &&\
    \ c != 'u' {\n                consonants++\n            }\n        }\n    }\n\
    \    if consonants == n {\n        words = append(words, word)\n    }\n    return\
    \ words\n}\n", "    var words []string\n    var word string\n    for _, char :=\
    \ range s {\n        if char == ' ' {\n            if count_consonants(word) ==\
    \ n {\n                words = append(words, word)\n            }\n          \
    \  word = \"\"\n        } else {\n            word += string(char)\n        }\n\
    \    }\n    if count_consonants(word) == n {\n        words = append(words, word)\n\
    \    }\n    return words\n}\n", "    var words []string\n    var word string\n\
    \    for _, c := range s {\n        if c == ' ' {\n            if len(word) >\
    \ 0 {\n                words = append(words, word)\n                word = \"\"\
    \n            }\n        } else {\n            word += string(c)\n        }\n\
    \    }\n    if len(word) > 0 {\n        words = append(words, word)\n    }\n \
    \   var result []string\n    for _, word := range words {\n        if count_consonants(word)\
    \ == n {\n            result = append(result, word)\n        }\n    }\n    return\
    \ result\n}\n", "    var words []string\n    var word string\n    var consonants\
    \ int\n    for _, c := range s {\n        if c == ' ' {\n            if consonants\
    \ == n {\n                words = append(words, word)\n            }\n       \
    \     word = \"\"\n            consonants = 0\n        } else {\n            word\
    \ += string(c)\n            if c != 'a' && c != 'e' && c != 'i' && c != 'o' &&\
    \ c != 'u' {\n                consonants++\n            }\n        }\n    }\n\
    \    if consonants == n {\n        words = append(words, word)\n    }\n    return\
    \ words\n}\n", "    var words []string\n    var word string\n    var consonants\
    \ int\n    var is_word bool\n    for _, c := range s {\n        if c == ' ' {\n\
    \            if is_word {\n                if consonants == n {\n            \
    \        words = append(words, word)\n                }\n                word\
    \ = \"\"\n                consonants = 0\n                is_word = false\n  \
    \          }\n        } else {\n            is_word = true\n            word +=\
    \ string(c)\n            if c != 'a' && c != 'e' && c != 'i' && c != 'o' && c\
    \ != 'u' {\n                consonants++\n            }\n        }\n    }\n  \
    \  if is_word {\n        if consonants == n {\n            words = append(words,\
    \ word)\n        }\n    }\n    return words\n}\n", "    return nil\n}\n", "  \
    \  var words []string\n    var word string\n    for _, c := range s {\n      \
    \  if c == ' ' {\n            if len(word) > 0 {\n                words = append(words,\
    \ word)\n                word = \"\"\n            }\n        } else {\n      \
    \      word += string(c)\n        }\n    }\n    if len(word) > 0 {\n        words\
    \ = append(words, word)\n    }\n    var result []string\n    for _, word := range\
    \ words {\n        if count_consonants(word) == n {\n            result = append(result,\
    \ word)\n        }\n    }\n    return result\n}\n", "    var words []string\n\
    \    var word string\n    for _, c := range s {\n        if c == ' ' {\n     \
    \       if len(word) == n {\n                words = append(words, word)\n   \
    \         }\n            word = \"\"\n        } else {\n            word += string(c)\n\
    \        }\n    }\n    if len(word) == n {\n        words = append(words, word)\n\
    \    }\n    return words\n}\n", "    words := make([]string, 0)\n    word := \"\
    \"\n    for _, c := range s {\n        if c == ' ' {\n            if len(word)\
    \ > 0 {\n                words = append(words, word)\n                word = \"\
    \"\n            }\n        } else {\n            word += string(c)\n        }\n\
    \    }\n    if len(word) > 0 {\n        words = append(words, word)\n    }\n \
    \   result := make([]string, 0)\n    for _, w := range words {\n        if count_consonants(w)\
    \ == n {\n            result = append(result, w)\n        }\n    }\n    return\
    \ result\n}\n", "    var words []string\n    var word string\n    for _, c :=\
    \ range s {\n        if c == ' ' {\n            if len(word) > 0 {\n         \
    \       words = append(words, word)\n                word = \"\"\n           \
    \ }\n        } else {\n            word += string(c)\n        }\n    }\n    if\
    \ len(word) > 0 {\n        words = append(words, word)\n    }\n    var result\
    \ []string\n    for _, word := range words {\n        if count_consonants(word)\
    \ == n {\n            result = append(result, word)\n        }\n    }\n    return\
    \ result\n}\n", "    var result []string\n    var word string\n    var consonants\
    \ int\n    for _, c := range s {\n        if c == ' ' {\n            if consonants\
    \ == n {\n                result = append(result, word)\n            }\n     \
    \       word = \"\"\n            consonants = 0\n        } else {\n          \
    \  word += string(c)\n            if c != 'a' && c != 'e' && c != 'i' && c !=\
    \ 'o' && c != 'u' {\n                consonants++\n            }\n        }\n\
    \    }\n    if consonants == n {\n        result = append(result, word)\n    }\n\
    \    return result\n}\n", "    words := []string{}\n    word := \"\"\n    for\
    \ _, char := range s {\n        if char == ' ' {\n            if len(word) > 0\
    \ {\n                words = append(words, word)\n                word = \"\"\n\
    \            }\n        } else {\n            word += string(char)\n        }\n\
    \    }\n    if len(word) > 0 {\n        words = append(words, word)\n    }\n \
    \   result := []string{}\n    for _, word := range words {\n        if count_consonants(word)\
    \ == n {\n            result = append(result, word)\n        }\n    }\n    return\
    \ result\n}\n", "    var result []string\n    var word string\n    var consonants\
    \ int\n    for _, c := range s {\n        if c == ' ' {\n            if consonants\
    \ == n {\n                result = append(result, word)\n            }\n     \
    \       word = \"\"\n            consonants = 0\n        } else {\n          \
    \  word += string(c)\n            if c != 'a' && c != 'e' && c != 'i' && c !=\
    \ 'o' && c != 'u' {\n                consonants++\n            }\n        }\n\
    \    }\n    if consonants == n {\n        result = append(result, word)\n    }\n\
    \    return result\n}\n", "    var words []string\n    var word string\n    var\
    \ n_consonants int\n    for _, c := range s {\n        if c == ' ' {\n       \
    \     if n_consonants == n {\n                words = append(words, word)\n  \
    \          }\n            word = \"\"\n            n_consonants = 0\n        }\
    \ else {\n            word += string(c)\n            if c != 'a' && c != 'e' &&\
    \ c != 'i' && c != 'o' && c != 'u' {\n                n_consonants++\n       \
    \     }\n        }\n    }\n    if n_consonants == n {\n        words = append(words,\
    \ word)\n    }\n    return words\n}\n", "    var words []string\n    var word\
    \ string\n    var consonants int\n    for _, c := range s {\n        if c == '\
    \ ' {\n            if consonants == n {\n                words = append(words,\
    \ word)\n            }\n            word = \"\"\n            consonants = 0\n\
    \        } else {\n            if c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n                consonants++\n            }\n            word\
    \ += string(c)\n        }\n    }\n    if consonants == n {\n        words = append(words,\
    \ word)\n    }\n    return words\n}\n", "    var words []string\n    var word\
    \ string\n    var consonants int\n    for _, c := range s {\n        if c == '\
    \ ' {\n            if consonants == n {\n                words = append(words,\
    \ word)\n            }\n            word = \"\"\n            consonants = 0\n\
    \        } else {\n            word += string(c)\n            if c != 'a' && c\
    \ != 'e' && c != 'i' && c != 'o' && c != 'u' {\n                consonants++\n\
    \            }\n        }\n    }\n    if consonants == n {\n        words = append(words,\
    \ word)\n    }\n    return words\n}\n", "    // your code here\n    return nil\n\
    }\n", "    var words []string\n    var word string\n    for _, c := range s {\n\
    \        if c != ' ' {\n            word += string(c)\n        } else {\n    \
    \        if len(word) != 0 {\n                words = append(words, word)\n  \
    \              word = \"\"\n            }\n        }\n    }\n    if len(word)\
    \ != 0 {\n        words = append(words, word)\n    }\n    var result []string\n\
    \    for _, word := range words {\n        if count_consonants(word) == n {\n\
    \            result = append(result, word)\n        }\n    }\n    return result\n\
    }\n", "    var result []string\n    var word string\n    var consonants int\n\
    \    for _, c := range s {\n        if c == ' ' {\n            if consonants ==\
    \ n {\n                result = append(result, word)\n            }\n        \
    \    word = \"\"\n            consonants = 0\n        } else {\n            word\
    \ += string(c)\n            if is_consonant(c) {\n                consonants++\n\
    \            }\n        }\n    }\n    if consonants == n {\n        result = append(result,\
    \ word)\n    }\n    return result\n}\n", "    var words []string\n    var word\
    \ string\n    for _, c := range s {\n        if c == ' ' {\n            if len(word)\
    \ > 0 {\n                words = append(words, word)\n                word = \"\
    \"\n            }\n        } else {\n            word += string(c)\n        }\n\
    \    }\n    if len(word) > 0 {\n        words = append(words, word)\n    }\n \
    \   var result []string\n    for _, word := range words {\n        if count_consonants(word)\
    \ == n {\n            result = append(result, word)\n        }\n    }\n    return\
    \ result\n}\n", "    var words []string\n    var word string\n    for _, c :=\
    \ range s {\n        if c == ' ' {\n            if len(word) == n {\n        \
    \        words = append(words, word)\n            }\n            word = \"\"\n\
    \        } else {\n            word += string(c)\n        }\n    }\n    if len(word)\
    \ == n {\n        words = append(words, word)\n    }\n    return words\n}\n",
  "    // your code here\n    return nil\n}\n", "    var words []string\n    var word\
    \ string\n    for _, c := range s {\n        if c == ' ' {\n            if len(word)\
    \ > 0 {\n                words = append(words, word)\n                word = \"\
    \"\n            }\n        } else {\n            word += string(c)\n        }\n\
    \    }\n    if len(word) > 0 {\n        words = append(words, word)\n    }\n \
    \   var result []string\n    for _, word := range words {\n        if count_consonants(word)\
    \ == n {\n            result = append(result, word)\n        }\n    }\n    return\
    \ result\n}\n", "    var words []string\n    var word string\n    for _, char\
    \ := range s {\n        if char == ' ' {\n            if len(word) > 0 {\n   \
    \             words = append(words, word)\n                word = \"\"\n     \
    \       }\n        } else {\n            word += string(char)\n        }\n   \
    \ }\n    if len(word) > 0 {\n        words = append(words, word)\n    }\n    var\
    \ result []string\n    for _, word := range words {\n        if count_consonants(word)\
    \ == n {\n            result = append(result, word)\n        }\n    }\n    return\
    \ result\n}\n", "    words := []string{}\n    for _, word := range strings.Split(s,\
    \ \" \") {\n        if len(word) == 0 {\n            continue\n        }\n   \
    \     if count_consonants(word) == n {\n            words = append(words, word)\n\
    \        }\n    }\n    return words\n}\n", "    var words []string\n    var word\
    \ string\n    for _, c := range s {\n        if c == ' ' {\n            if len(word)\
    \ > 0 {\n                words = append(words, word)\n                word = \"\
    \"\n            }\n        } else {\n            word += string(c)\n        }\n\
    \    }\n    if len(word) > 0 {\n        words = append(words, word)\n    }\n \
    \   var result []string\n    for _, word := range words {\n        if count_consonants(word)\
    \ == n {\n            result = append(result, word)\n        }\n    }\n    return\
    \ result\n}\n", "    var words []string\n    var word string\n    for _, c :=\
    \ range s {\n        if c == ' ' {\n            if count_consonants(word) == n\
    \ {\n                words = append(words, word)\n            }\n            word\
    \ = \"\"\n        } else {\n            word += string(c)\n        }\n    }\n\
    \    if count_consonants(word) == n {\n        words = append(words, word)\n \
    \   }\n    return words\n}\n", "    words := make([]string, 0)\n    word := \"\
    \"\n    for _, c := range s {\n        if c == ' ' {\n            if len(word)\
    \ > 0 {\n                words = append(words, word)\n                word = \"\
    \"\n            }\n        } else {\n            word += string(c)\n        }\n\
    \    }\n    if len(word) > 0 {\n        words = append(words, word)\n    }\n \
    \   result := make([]string, 0)\n    for _, w := range words {\n        if count_consonants(w)\
    \ == n {\n            result = append(result, w)\n        }\n    }\n    return\
    \ result\n}\n", "    var words []string\n    var word string\n    var consonants\
    \ int\n    var is_consonant bool\n    var is_word bool\n    for _, c := range\
    \ s {\n        if c == ' ' {\n            if is_word {\n                if consonants\
    \ == n {\n                    words = append(words, word)\n                }\n\
    \                word = \"\"\n                consonants = 0\n               \
    \ is_word = false\n            }\n        } else {\n            is_word = true\n\
    \            is_consonant = true\n            switch c {\n            case 'a',\
    \ 'e', 'i', 'o', 'u':\n                is_consonant = false\n            }\n \
    \           if is_consonant {\n                consonants++\n            }\n \
    \           word += string(c)\n        }\n    }\n    if is_word {\n        if\
    \ consonants == n {\n            words = append(words, word)\n        }\n    }\n\
    \    return words\n}\n", "    var words []string\n    var word string\n    var\
    \ consonants int\n    for _, c := range s {\n        if c == ' ' {\n         \
    \   if consonants == n {\n                words = append(words, word)\n      \
    \      }\n            word = \"\"\n            consonants = 0\n        } else\
    \ {\n            word += string(c)\n            if c != 'a' && c != 'e' && c !=\
    \ 'i' && c != 'o' && c != 'u' {\n                consonants++\n            }\n\
    \        }\n    }\n    if consonants == n {\n        words = append(words, word)\n\
    \    }\n    return words\n}\n", "    var words []string\n    var word string\n\
    \    for _, c := range s {\n        if c == ' ' {\n            if len(word) >\
    \ 0 {\n                words = append(words, word)\n                word = \"\"\
    \n            }\n        } else {\n            word += string(c)\n        }\n\
    \    }\n    if len(word) > 0 {\n        words = append(words, word)\n    }\n \
    \   var result []string\n    for _, word := range words {\n        if count_consonants(word)\
    \ == n {\n            result = append(result, word)\n        }\n    }\n    return\
    \ result\n}\n", "    var words []string\n    var word string\n    for _, c :=\
    \ range s {\n        if c != ' ' {\n            word += string(c)\n        } else\
    \ {\n            if len(word) > 0 {\n                words = append(words, word)\n\
    \                word = \"\"\n            }\n        }\n    }\n    if len(word)\
    \ > 0 {\n        words = append(words, word)\n    }\n    var result []string\n\
    \    for _, word := range words {\n        if count_consonants(word) == n {\n\
    \            result = append(result, word)\n        }\n    }\n    return result\n\
    }\n", "    var words []string\n    var word string\n    var consonants int\n \
    \   var consonant bool\n    var vowels = []string{\"a\", \"e\", \"i\", \"o\",\
    \ \"u\"}\n    for _, c := range s {\n        if c == ' ' {\n            if consonants\
    \ == n {\n                words = append(words, word)\n            }\n       \
    \     word = \"\"\n            consonants = 0\n        } else {\n            word\
    \ += string(c)\n            consonant = true\n            for _, v := range vowels\
    \ {\n                if string(c) == v {\n                    consonant = false\n\
    \                    break\n                }\n            }\n            if consonant\
    \ {\n                consonants++\n            }\n        }\n    }\n    if consonants\
    \ == n {\n        words = append(words, word)\n    }\n    return words\n}\n",
  "    var result []string\n    var word string\n    var consonants int\n    for _,\
    \ c := range s {\n        if c == ' ' {\n            if consonants == n {\n  \
    \              result = append(result, word)\n            }\n            word\
    \ = \"\"\n            consonants = 0\n        } else {\n            word += string(c)\n\
    \            if c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n \
    \               consonants++\n            }\n        }\n    }\n    if consonants\
    \ == n {\n        result = append(result, word)\n    }\n    return result\n}\n",
  "    var words []string\n    var word string\n    for _, c := range s {\n      \
    \  if c == ' ' {\n            if len(word) > 0 {\n                words = append(words,\
    \ word)\n                word = \"\"\n            }\n        } else {\n      \
    \      word += string(c)\n        }\n    }\n    if len(word) > 0 {\n        words\
    \ = append(words, word)\n    }\n    var result []string\n    for _, word := range\
    \ words {\n        count := 0\n        for _, c := range word {\n            if\
    \ c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n               \
    \ count++\n            }\n        }\n        if count == n {\n            result\
    \ = append(result, word)\n        }\n    }\n    return result\n}\n", "    var\
    \ words []string\n    var word string\n    var consonants int\n    for _, c :=\
    \ range s {\n        if c == ' ' {\n            if consonants == n {\n       \
    \         words = append(words, word)\n            }\n            word = \"\"\n\
    \            consonants = 0\n        } else {\n            word += string(c)\n\
    \            if c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n \
    \               consonants++\n            }\n        }\n    }\n    if consonants\
    \ == n {\n        words = append(words, word)\n    }\n    return words\n}\n",
  "    var words []string\n    var word string\n    var consonants int\n    for _,\
    \ c := range s {\n        if c == ' ' {\n            if consonants == n {\n  \
    \              words = append(words, word)\n            }\n            word =\
    \ \"\"\n            consonants = 0\n        } else {\n            word += string(c)\n\
    \            if c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n \
    \               consonants++\n            }\n        }\n    }\n    if consonants\
    \ == n {\n        words = append(words, word)\n    }\n    return words\n}\n",
  "    var words []string\n    var word string\n    for _, c := range s {\n      \
    \  if c == ' ' {\n            if len(word) > 0 {\n                words = append(words,\
    \ word)\n                word = \"\"\n            }\n        } else {\n      \
    \      word += string(c)\n        }\n    }\n    if len(word) > 0 {\n        words\
    \ = append(words, word)\n    }\n    var result []string\n    for _, word := range\
    \ words {\n        if len(word) == n {\n            result = append(result, word)\n\
    \        }\n    }\n    return result\n}\n", "    var result []string\n    var\
    \ current string\n    var consonants int\n    for _, c := range s {\n        if\
    \ c == ' ' {\n            if consonants == n {\n                result = append(result,\
    \ current)\n            }\n            current = \"\"\n            consonants\
    \ = 0\n        } else {\n            current += string(c)\n            if c !=\
    \ 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n                consonants++\n\
    \            }\n        }\n    }\n    if consonants == n {\n        result = append(result,\
    \ current)\n    }\n    return result\n}\n", "    var words []string\n    var word\
    \ string\n    for _, c := range s {\n        if c == ' ' {\n            if len(word)\
    \ > 0 {\n                words = append(words, word)\n                word = \"\
    \"\n            }\n        } else {\n            word += string(c)\n        }\n\
    \    }\n    if len(word) > 0 {\n        words = append(words, word)\n    }\n \
    \   var result []string\n    for _, word := range words {\n        if count_consonants(word)\
    \ == n {\n            result = append(result, word)\n        }\n    }\n    return\
    \ result\n}\n", "    var result []string\n    var word string\n    var consonants\
    \ int\n    var is_word bool\n\n    for _, char := range s {\n        if char ==\
    \ ' ' {\n            if is_word {\n                if consonants == n {\n    \
    \                result = append(result, word)\n                }\n          \
    \      word = \"\"\n                consonants = 0\n                is_word =\
    \ false\n            }\n        } else {\n            is_word = true\n       \
    \     if char == 'a' || char == 'e' || char == 'i' || char == 'o' || char == 'u'\
    \ {\n                consonants = 0\n            } else {\n                consonants++\n\
    \            }\n            word += string(char)\n        }\n    }\n    if is_word\
    \ {\n        if consonants == n {\n            result = append(result, word)\n\
    \        }\n    }\n    return result\n}\n", "    var words []string\n    var word\
    \ string\n    for _, c := range s {\n        if c == ' ' {\n            if len(word)\
    \ > 0 {\n                words = append(words, word)\n                word = \"\
    \"\n            }\n        } else {\n            word += string(c)\n        }\n\
    \    }\n    if len(word) > 0 {\n        words = append(words, word)\n    }\n \
    \   var result []string\n    for _, word := range words {\n        if count_consonants(word)\
    \ == n {\n            result = append(result, word)\n        }\n    }\n    return\
    \ result\n}\n", "    var words []string\n    var word string\n    var consonants\
    \ int\n    for _, c := range s {\n        if c == ' ' {\n            if consonants\
    \ == n {\n                words = append(words, word)\n            }\n       \
    \     word = \"\"\n            consonants = 0\n        } else {\n            word\
    \ += string(c)\n            if is_consonant(c) {\n                consonants++\n\
    \            }\n        }\n    }\n    if consonants == n {\n        words = append(words,\
    \ word)\n    }\n    return words\n}\n", "    var words []string\n    var word\
    \ string\n    var consonants int\n    for _, c := range s {\n        if c == '\
    \ ' {\n            if consonants == n {\n                words = append(words,\
    \ word)\n            }\n            word = \"\"\n            consonants = 0\n\
    \        } else {\n            word += string(c)\n            if c != 'a' && c\
    \ != 'e' && c != 'i' && c != 'o' && c != 'u' {\n                consonants++\n\
    \            }\n        }\n    }\n    if consonants == n {\n        words = append(words,\
    \ word)\n    }\n    return words\n}\n", "    var result []string\n    var word\
    \ string\n    var consonants int\n    for _, c := range s {\n        if c == '\
    \ ' {\n            if consonants == n {\n                result = append(result,\
    \ word)\n            }\n            word = \"\"\n            consonants = 0\n\
    \        } else {\n            word += string(c)\n            if c != 'a' && c\
    \ != 'e' && c != 'i' && c != 'o' && c != 'u' {\n                consonants++\n\
    \            }\n        }\n    }\n    if consonants == n {\n        result = append(result,\
    \ word)\n    }\n    return result\n}\n", "    var words []string\n    var word\
    \ string\n    var consonants int\n    for _, c := range s {\n        if c == '\
    \ ' {\n            if consonants == n {\n                words = append(words,\
    \ word)\n            }\n            word = \"\"\n            consonants = 0\n\
    \        } else {\n            word += string(c)\n            if is_consonant(c)\
    \ {\n                consonants++\n            }\n        }\n    }\n    if consonants\
    \ == n {\n        words = append(words, word)\n    }\n    return words\n}\n",
  "    var result []string\n    var word string\n    var consonants int\n    for _,\
    \ c := range s {\n        if c == ' ' {\n            if consonants == n {\n  \
    \              result = append(result, word)\n            }\n            word\
    \ = \"\"\n            consonants = 0\n        } else {\n            word += string(c)\n\
    \            if c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n \
    \               consonants++\n            }\n        }\n    }\n    if consonants\
    \ == n {\n        result = append(result, word)\n    }\n    return result\n}\n",
  "    var words []string\n    var word string\n    for _, c := range s {\n      \
    \  if c == ' ' {\n            if count_consonants(word) == n {\n             \
    \   words = append(words, word)\n            }\n            word = \"\"\n    \
    \    } else {\n            word += string(c)\n        }\n    }\n    if count_consonants(word)\
    \ == n {\n        words = append(words, word)\n    }\n    return words\n}\n",
  "    var words []string\n    var word string\n    for _, c := range s {\n      \
    \  if c == ' ' {\n            if len(word) > 0 {\n                words = append(words,\
    \ word)\n                word = \"\"\n            }\n        } else {\n      \
    \      word += string(c)\n        }\n    }\n    if len(word) > 0 {\n        words\
    \ = append(words, word)\n    }\n    var result []string\n    for _, word := range\
    \ words {\n        if count_consonants(word) == n {\n            result = append(result,\
    \ word)\n        }\n    }\n    return result\n}\n", "    var words []string\n\
    \    var word string\n    var consonants int\n    for _, c := range s {\n    \
    \    if c == ' ' {\n            if consonants == n {\n                words =\
    \ append(words, word)\n            }\n            word = \"\"\n            consonants\
    \ = 0\n        } else {\n            word += string(c)\n            if is_consonant(c)\
    \ {\n                consonants++\n            }\n        }\n    }\n    if consonants\
    \ == n {\n        words = append(words, word)\n    }\n    return words\n}\n",
  "    var words []string\n    var word string\n    var consonants int\n    for _,\
    \ c := range s {\n        if c == ' ' {\n            if consonants == n {\n  \
    \              words = append(words, word)\n            }\n            word =\
    \ \"\"\n            consonants = 0\n        } else {\n            word += string(c)\n\
    \            if c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n \
    \               consonants++\n            }\n        }\n    }\n    if consonants\
    \ == n {\n        words = append(words, word)\n    }\n    return words\n}\n",
  "    var words []string\n    var word string\n    var consonants int\n    for _,\
    \ c := range s {\n        if c == ' ' {\n            if consonants == n {\n  \
    \              words = append(words, word)\n            }\n            word =\
    \ \"\"\n            consonants = 0\n        } else {\n            word += string(c)\n\
    \            if c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n \
    \               consonants++\n            }\n        }\n    }\n    if consonants\
    \ == n {\n        words = append(words, word)\n    }\n    return words\n}\n",
  "    var words []string\n    var word string\n    var consonants int\n    for _,\
    \ char := range s {\n        if char == ' ' {\n            if consonants == n\
    \ {\n                words = append(words, word)\n            }\n            word\
    \ = \"\"\n            consonants = 0\n        } else {\n            word += string(char)\n\
    \            if char != 'a' && char != 'e' && char != 'i' && char != 'o' && char\
    \ != 'u' {\n                consonants++\n            }\n        }\n    }\n  \
    \  if consonants == n {\n        words = append(words, word)\n    }\n    return\
    \ words\n}\n", "    var words []string\n    var word string\n    var consonants\
    \ int\n    for _, c := range s {\n        if c == ' ' {\n            if consonants\
    \ == n {\n                words = append(words, word)\n            }\n       \
    \     word = \"\"\n            consonants = 0\n        } else {\n            word\
    \ += string(c)\n            if c != 'a' && c != 'e' && c != 'i' && c != 'o' &&\
    \ c != 'u' {\n                consonants++\n            }\n        }\n    }\n\
    \    if consonants == n {\n        words = append(words, word)\n    }\n    return\
    \ words\n}\n", "    var result []string\n    var word string\n    for _, c :=\
    \ range s {\n        if c == ' ' {\n            if count_consonants(word) == n\
    \ {\n                result = append(result, word)\n            }\n          \
    \  word = \"\"\n        } else {\n            word += string(c)\n        }\n \
    \   }\n    if count_consonants(word) == n {\n        result = append(result, word)\n\
    \    }\n    return result\n}\n", "    var result []string\n    var word string\n\
    \    var consonants int\n    for _, c := range s {\n        if c == ' ' {\n  \
    \          if consonants == n {\n                result = append(result, word)\n\
    \            }\n            word = \"\"\n            consonants = 0\n        }\
    \ else {\n            word += string(c)\n            if c != 'a' && c != 'e' &&\
    \ c != 'i' && c != 'o' && c != 'u' {\n                consonants++\n         \
    \   }\n        }\n    }\n    if consonants == n {\n        result = append(result,\
    \ word)\n    }\n    return result\n}\n", "    var words []string\n    var word\
    \ string\n    var consonants int\n    var is_consonant bool\n    var is_word bool\n\
    \    var is_space bool\n    var is_letter bool\n    var is_consonant_counted bool\n\
    \    var is_consonant_counted_reset bool\n    var is_word_reset bool\n    var\
    \ is_consonant_reset bool\n    var is_letter_reset bool\n    var is_space_reset\
    \ bool\n    var is_consonant_counted_reset_reset bool\n    var is_word_reset_reset\
    \ bool\n    var is_consonant_reset_reset bool\n    var is_letter_reset_reset bool\n\
    \    var is_space_reset_reset bool\n    var is_consonant_counted_reset_reset_reset\
    \ bool\n    var is_word_reset_reset_reset bool\n    var is_consonant_reset_reset_reset\
    \ bool\n    var is_letter_reset_reset_reset bool\n    var is_space_reset_reset_reset\
    \ bool\n    var is_consonant_counted_reset_reset_reset_reset bool\n    var is_word_reset_reset_reset_reset\
    \ bool\n    var is_consonant_reset_reset_reset_reset bool\n    var is_letter_reset_reset_reset_reset\
    \ bool\n    var is_space_reset_reset_reset_reset bool\n    var is_consonant_counted_reset_reset_reset_reset_reset\
    \ bool\n    var is_word_reset_reset_reset_reset_reset bool\n    var is_consonant_reset_reset_reset_reset_reset\
    \ bool\n    var is_letter_reset_reset_reset_reset_reset bool\n    var is_space_reset_reset_reset_reset_reset\
    \ bool\n    var is_consonant_counted_reset_reset_reset_reset_reset_reset bool\n\
    \    var is_word_reset_reset_reset_reset_reset_reset bool\n    var is_consonant_reset_reset_reset_reset_reset_reset\
    \ bool\n    var is_letter_reset_reset_reset_reset_reset_reset bool\n    var is_space_reset_reset",
  "    var words []string\n    var word string\n    for _, c := range s {\n      \
    \  if c == ' ' {\n            if len(word) > 0 {\n                words = append(words,\
    \ word)\n                word = \"\"\n            }\n        } else {\n      \
    \      word += string(c)\n        }\n    }\n    if len(word) > 0 {\n        words\
    \ = append(words, word)\n    }\n    var result []string\n    for _, word := range\
    \ words {\n        if count_consonants(word) == n {\n            result = append(result,\
    \ word)\n        }\n    }\n    return result\n}\n", "    var words []string\n\
    \    var word string\n    for _, c := range s {\n        if c == ' ' {\n     \
    \       if len(word) > 0 {\n                words = append(words, word)\n    \
    \            word = \"\"\n            }\n        } else {\n            word +=\
    \ string(c)\n        }\n    }\n    if len(word) > 0 {\n        words = append(words,\
    \ word)\n    }\n    var result []string\n    for _, word := range words {\n  \
    \      if count_consonants(word) == n {\n            result = append(result, word)\n\
    \        }\n    }\n    return result\n}\n", "    var words []string\n    var word\
    \ string\n    for _, c := range s {\n        if c == ' ' {\n            if len(word)\
    \ == n {\n                words = append(words, word)\n            }\n       \
    \     word = \"\"\n        } else {\n            word += string(c)\n        }\n\
    \    }\n    if len(word) == n {\n        words = append(words, word)\n    }\n\
    \    return words\n}\n", "    words := make([]string, 0)\n    var word string\n\
    \    for _, c := range s {\n        if c == ' ' {\n            if count_consonants(word)\
    \ == n {\n                words = append(words, word)\n            }\n       \
    \     word = \"\"\n        } else {\n            word += string(c)\n        }\n\
    \    }\n    if count_consonants(word) == n {\n        words = append(words, word)\n\
    \    }\n    return words\n}\n", "    words := []string{}\n    word := \"\"\n \
    \   for _, c := range s {\n        if c == ' ' {\n            if len(word) > 0\
    \ {\n                words = append(words, word)\n                word = \"\"\n\
    \            }\n        } else {\n            word += string(c)\n        }\n \
    \   }\n    if len(word) > 0 {\n        words = append(words, word)\n    }\n  \
    \  result := []string{}\n    for _, w := range words {\n        if count_consonants(w)\
    \ == n {\n            result = append(result, w)\n        }\n    }\n    return\
    \ result\n}\n", "    words := make([]string, 0)\n    word := \"\"\n    for _,\
    \ c := range s {\n        if c == ' ' {\n            if len(word) > 0 {\n    \
    \            words = append(words, word)\n                word = \"\"\n      \
    \      }\n        } else {\n            word += string(c)\n        }\n    }\n\
    \    if len(word) > 0 {\n        words = append(words, word)\n    }\n    result\
    \ := make([]string, 0)\n    for _, w := range words {\n        if count_consonants(w)\
    \ == n {\n            result = append(result, w)\n        }\n    }\n    return\
    \ result\n}\n", "    var words []string\n    var word string\n    var consonants\
    \ int\n    for _, c := range s {\n        if c == ' ' {\n            if consonants\
    \ == n {\n                words = append(words, word)\n            }\n       \
    \     word = \"\"\n            consonants = 0\n        } else {\n            word\
    \ += string(c)\n            if c != 'a' && c != 'e' && c != 'i' && c != 'o' &&\
    \ c != 'u' {\n                consonants++\n            }\n        }\n    }\n\
    \    if consonants == n {\n        words = append(words, word)\n    }\n    return\
    \ words\n}\n", "    var words []string\n    var word string\n    for _, c := range\
    \ s {\n        if c == ' ' {\n            if len(word) > 0 {\n               \
    \ words = append(words, word)\n                word = \"\"\n            }\n  \
    \      } else {\n            word += string(c)\n        }\n    }\n    if len(word)\
    \ > 0 {\n        words = append(words, word)\n    }\n    var result []string\n\
    \    for _, word := range words {\n        if count_consonants(word) == n {\n\
    \            result = append(result, word)\n        }\n    }\n    return result\n\
    }\n", "    var words []string\n    var word string\n    var consonants int\n \
    \   var is_consonant bool\n    for _, c := range s {\n        if c == ' ' {\n\
    \            if consonants == n {\n                words = append(words, word)\n\
    \            }\n            word = \"\"\n            consonants = 0\n        }\
    \ else {\n            is_consonant = true\n            switch c {\n          \
    \  case 'a', 'e', 'i', 'o', 'u':\n                is_consonant = false\n     \
    \       }\n            if is_consonant {\n                consonants++\n     \
    \       }\n            word += string(c)\n        }\n    }\n    if consonants\
    \ == n {\n        words = append(words, word)\n    }\n    return words\n}\n",
  "    var words []string\n    var word string\n    var consonants int\n    for _,\
    \ c := range s {\n        if c == ' ' {\n            if consonants == n {\n  \
    \              words = append(words, word)\n            }\n            word =\
    \ \"\"\n            consonants = 0\n        } else {\n            word += string(c)\n\
    \            if !is_vowel(c) {\n                consonants++\n            }\n\
    \        }\n    }\n    if consonants == n {\n        words = append(words, word)\n\
    \    }\n    return words\n}\n", "    var words []string\n    var word string\n\
    \    var consonants int\n    var is_consonant bool\n    var is_word bool\n   \
    \ for _, c := range s {\n        if c == ' ' {\n            if is_word {\n   \
    \             if consonants == n {\n                    words = append(words,\
    \ word)\n                }\n                word = \"\"\n                consonants\
    \ = 0\n                is_word = false\n            }\n        } else {\n    \
    \        is_word = true\n            is_consonant = true\n            switch c\
    \ {\n            case 'a', 'e', 'i', 'o', 'u':\n                is_consonant =\
    \ false\n            }\n            if is_consonant {\n                consonants++\n\
    \            }\n            word += string(c)\n        }\n    }\n    if is_word\
    \ {\n        if consonants == n {\n            words = append(words, word)\n \
    \       }\n    }\n    return words\n}\n", "    var words []string\n    var word\
    \ string\n    for _, c := range s {\n        if c == ' ' {\n            if len(word)\
    \ > 0 {\n                words = append(words, word)\n                word = \"\
    \"\n            }\n        } else {\n            word += string(c)\n        }\n\
    \    }\n    if len(word) > 0 {\n        words = append(words, word)\n    }\n \
    \   var result []string\n    for _, word := range words {\n        if count_consonants(word)\
    \ == n {\n            result = append(result, word)\n        }\n    }\n    return\
    \ result\n}\n", "    var words []string\n    var word string\n    for _, c :=\
    \ range s {\n        if c == ' ' {\n            if len(word) > 0 {\n         \
    \       words = append(words, word)\n                word = \"\"\n           \
    \ }\n        } else {\n            word += string(c)\n        }\n    }\n    if\
    \ len(word) > 0 {\n        words = append(words, word)\n    }\n    var result\
    \ []string\n    for _, word := range words {\n        if len(word) - count_vowels(word)\
    \ == n {\n            result = append(result, word)\n        }\n    }\n    return\
    \ result\n}\n", "    words := []string{}\n    for _, word := range strings.Split(s,\
    \ \" \") {\n        if len(word) == n {\n            words = append(words, word)\n\
    \        }\n    }\n    return words\n}\n", "    var words []string\n    var word\
    \ string\n    var consonants int\n    for _, c := range s {\n        if c == '\
    \ ' {\n            if consonants == n {\n                words = append(words,\
    \ word)\n            }\n            word = \"\"\n            consonants = 0\n\
    \        } else {\n            word += string(c)\n            if c != 'a' && c\
    \ != 'e' && c != 'i' && c != 'o' && c != 'u' {\n                consonants++\n\
    \            }\n        }\n    }\n    if consonants == n {\n        words = append(words,\
    \ word)\n    }\n    return words\n}\n", "    var result []string\n    var word\
    \ string\n    var consonants int\n    for _, c := range s {\n        if c == '\
    \ ' {\n            if consonants == n {\n                result = append(result,\
    \ word)\n            }\n            word = \"\"\n            consonants = 0\n\
    \        } else {\n            word += string(c)\n            if c != 'a' && c\
    \ != 'e' && c != 'i' && c != 'o' && c != 'u' {\n                consonants++\n\
    \            }\n        }\n    }\n    if consonants == n {\n        result = append(result,\
    \ word)\n    }\n    return result\n}\n", "    var words []string\n    var word\
    \ string\n    var consonants int\n    for _, c := range s {\n        if c == '\
    \ ' {\n            if consonants == n {\n                words = append(words,\
    \ word)\n            }\n            word = \"\"\n            consonants = 0\n\
    \        } else {\n            word += string(c)\n            if c != 'a' && c\
    \ != 'e' && c != 'i' && c != 'o' && c != 'u' {\n                consonants++\n\
    \            }\n        }\n    }\n    if consonants == n {\n        words = append(words,\
    \ word)\n    }\n    return words\n}\n", "    var words []string\n    var word\
    \ string\n    var consonants int\n    var is_consonant bool\n    var is_word bool\n\
    \    for _, c := range s {\n        if c == ' ' {\n            if is_word {\n\
    \                if consonants == n {\n                    words = append(words,\
    \ word)\n                }\n                word = \"\"\n                consonants\
    \ = 0\n                is_word = false\n            }\n        } else {\n    \
    \        is_word = true\n            is_consonant = true\n            switch c\
    \ {\n            case 'a', 'e', 'i', 'o', 'u':\n                is_consonant =\
    \ false\n            }\n            if is_consonant {\n                consonants++\n\
    \            }\n            word += string(c)\n        }\n    }\n    if is_word\
    \ {\n        if consonants == n {\n            words = append(words, word)\n \
    \       }\n    }\n    return words\n}\n", "    var words []string\n    var word\
    \ string\n    var consonants int\n    for _, c := range s {\n        if c == '\
    \ ' {\n            if consonants == n {\n                words = append(words,\
    \ word)\n            }\n            word = \"\"\n            consonants = 0\n\
    \        } else {\n            word += string(c)\n            if c != 'a' && c\
    \ != 'e' && c != 'i' && c != 'o' && c != 'u' {\n                consonants++\n\
    \            }\n        }\n    }\n    if consonants == n {\n        words = append(words,\
    \ word)\n    }\n    return words\n}\n", "    var result []string\n    var word\
    \ string\n    var consonants int\n    for _, c := range s {\n        if c == '\
    \ ' {\n            if consonants == n {\n                result = append(result,\
    \ word)\n            }\n            word = \"\"\n            consonants = 0\n\
    \        } else {\n            word += string(c)\n            if c != 'a' && c\
    \ != 'e' && c != 'i' && c != 'o' && c != 'u' {\n                consonants++\n\
    \            }\n        }\n    }\n    if consonants == n {\n        result = append(result,\
    \ word)\n    }\n    return result\n}\n", "    var words []string\n    var word\
    \ string\n    var consonants int\n    var consonant bool\n    for _, c := range\
    \ s {\n        if c == ' ' {\n            if consonants == n {\n             \
    \   words = append(words, word)\n            }\n            word = \"\"\n    \
    \        consonants = 0\n            consonant = false\n        } else {\n   \
    \         word += string(c)\n            if !consonant {\n                consonant\
    \ = true\n            } else {\n                consonants++\n               \
    \ consonant = false\n            }\n        }\n    }\n    if consonants == n {\n\
    \        words = append(words, word)\n    }\n    return words\n}\n", "    var\
    \ words []string\n    var word string\n    var consonants int\n    var is_consonant\
    \ bool\n    var is_word bool\n    for _, c := range s {\n        if c == ' ' {\n\
    \            if is_word {\n                if consonants == n {\n            \
    \        words = append(words, word)\n                }\n                word\
    \ = \"\"\n                consonants = 0\n                is_word = false\n  \
    \          }\n        } else {\n            is_word = true\n            is_consonant\
    \ = true\n            switch c {\n            case 'a', 'e', 'i', 'o', 'u':\n\
    \                is_consonant = false\n            }\n            if is_consonant\
    \ {\n                consonants++\n            }\n            word += string(c)\n\
    \        }\n    }\n    if is_word {\n        if consonants == n {\n          \
    \  words = append(words, word)\n        }\n    }\n    return words\n}\n", "  \
    \  var words []string\n    var word string\n    for _, c := range s {\n      \
    \  if c == ' ' {\n            if len(word) > 0 {\n                words = append(words,\
    \ word)\n                word = \"\"\n            }\n        } else {\n      \
    \      word += string(c)\n        }\n    }\n    if len(word) > 0 {\n        words\
    \ = append(words, word)\n    }\n    var result []string\n    for _, word := range\
    \ words {\n        if count_consonants(word) == n {\n            result = append(result,\
    \ word)\n        }\n    }\n    return result\n}\n", "    var words []string\n\
    \    var word string\n    for _, c := range s {\n        if c == ' ' {\n     \
    \       if len(word) > 0 {\n                words = append(words, word)\n    \
    \            word = \"\"\n            }\n        } else {\n            word +=\
    \ string(c)\n        }\n    }\n    if len(word) > 0 {\n        words = append(words,\
    \ word)\n    }\n    var result []string\n    for _, word := range words {\n  \
    \      if count_consonants(word) == n {\n            result = append(result, word)\n\
    \        }\n    }\n    return result\n}\n", "    var words []string\n    var word\
    \ string\n    var consonants int\n    var consonant bool\n    for _, c := range\
    \ s {\n        if c == ' ' {\n            if consonants == n {\n             \
    \   words = append(words, word)\n            }\n            word = \"\"\n    \
    \        consonants = 0\n            consonant = false\n        } else {\n   \
    \         word += string(c)\n            if !consonant {\n                consonant\
    \ = true\n            } else {\n                consonants++\n               \
    \ consonant = false\n            }\n        }\n    }\n    if consonants == n {\n\
    \        words = append(words, word)\n    }\n    return words\n}\n", "    var\
    \ words []string\n    var word string\n    var consonants int\n    for _, c :=\
    \ range s {\n        if c == ' ' {\n            if consonants == n {\n       \
    \         words = append(words, word)\n            }\n            word = \"\"\n\
    \            consonants = 0\n        } else {\n            word += string(c)\n\
    \            if c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n \
    \               consonants++\n            }\n        }\n    }\n    if consonants\
    \ == n {\n        words = append(words, word)\n    }\n    return words\n}\n",
  "    var words []string\n    var word string\n    var consonants int\n    for _,\
    \ c := range s {\n        if c == ' ' {\n            if consonants == n {\n  \
    \              words = append(words, word)\n            }\n            word =\
    \ \"\"\n            consonants = 0\n        } else {\n            word += string(c)\n\
    \            if c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n \
    \               consonants++\n            }\n        }\n    }\n    if consonants\
    \ == n {\n        words = append(words, word)\n    }\n    return words\n}\n",
  "    var words []string\n    var word string\n    var consonants int\n    for _,\
    \ c := range s {\n        if c == ' ' {\n            if consonants == n {\n  \
    \              words = append(words, word)\n            }\n            word =\
    \ \"\"\n            consonants = 0\n        } else {\n            word += string(c)\n\
    \            if c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n \
    \               consonants++\n            }\n        }\n    }\n    if consonants\
    \ == n {\n        words = append(words, word)\n    }\n    return words\n}\n",
  "    var words []string\n    var word string\n    var consonants int\n    for _,\
    \ c := range s {\n        if c == ' ' {\n            if consonants == n {\n  \
    \              words = append(words, word)\n            }\n            word =\
    \ \"\"\n            consonants = 0\n        } else {\n            word += string(c)\n\
    \            if c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n \
    \               consonants += 1\n            }\n        }\n    }\n    if consonants\
    \ == n {\n        words = append(words, word)\n    }\n    return words\n}\n",
  "    var words []string\n    var word string\n    var consonants int\n    for _,\
    \ c := range s {\n        if c == ' ' {\n            if consonants == n {\n  \
    \              words = append(words, word)\n            }\n            word =\
    \ \"\"\n            consonants = 0\n        } else {\n            word += string(c)\n\
    \            if c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n \
    \               consonants++\n            }\n        }\n    }\n    if consonants\
    \ == n {\n        words = append(words, word)\n    }\n    return words\n}\n",
  "    var words []string\n    var word string\n    for _, c := range s {\n      \
    \  if c == ' ' {\n            if len(word) > 0 {\n                words = append(words,\
    \ word)\n                word = \"\"\n            }\n        } else {\n      \
    \      word += string(c)\n        }\n    }\n    if len(word) > 0 {\n        words\
    \ = append(words, word)\n    }\n    var result []string\n    for _, word := range\
    \ words {\n        if count_consonants(word) == n {\n            result = append(result,\
    \ word)\n        }\n    }\n    return result\n}\n", "    var words []string\n\
    \    var word string\n    var consonants int\n    for _, c := range s {\n    \
    \    if c == ' ' {\n            if consonants == n {\n                words =\
    \ append(words, word)\n            }\n            word = \"\"\n            consonants\
    \ = 0\n        } else {\n            word += string(c)\n            if c != 'a'\
    \ && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n                consonants++\n\
    \            }\n        }\n    }\n    if consonants == n {\n        words = append(words,\
    \ word)\n    }\n    return words\n}\n", "    var words []string\n    var word\
    \ string\n    var consonants int\n    for _, c := range s {\n        if c == '\
    \ ' {\n            if consonants == n {\n                words = append(words,\
    \ word)\n            }\n            word = \"\"\n            consonants = 0\n\
    \        } else {\n            word += string(c)\n            if c != 'a' && c\
    \ != 'e' && c != 'i' && c != 'o' && c != 'u' {\n                consonants++\n\
    \            }\n        }\n    }\n    if consonants == n {\n        words = append(words,\
    \ word)\n    }\n    return words\n}\n", "    var result []string\n    var word\
    \ string\n    var consonants int\n    for _, c := range s {\n        if c == '\
    \ ' {\n            if consonants == n {\n                result = append(result,\
    \ word)\n            }\n            word = \"\"\n            consonants = 0\n\
    \        } else {\n            word += string(c)\n            if c != 'a' && c\
    \ != 'e' && c != 'i' && c != 'o' && c != 'u' {\n                consonants++\n\
    \            }\n        }\n    }\n    if consonants == n {\n        result = append(result,\
    \ word)\n    }\n    return result\n}\n", "    var words []string\n    var word\
    \ string\n    for _, c := range s {\n        if c == ' ' {\n            if len(word)\
    \ > 0 {\n                words = append(words, word)\n                word = \"\
    \"\n            }\n        } else {\n            word += string(c)\n        }\n\
    \    }\n    if len(word) > 0 {\n        words = append(words, word)\n    }\n \
    \   var result []string\n    for _, word := range words {\n        if count_consonants(word)\
    \ == n {\n            result = append(result, word)\n        }\n    }\n    return\
    \ result\n}\n", "    var words []string\n    var word string\n    var consonants\
    \ int\n    for _, c := range s {\n        if c == ' ' {\n            if consonants\
    \ == n {\n                words = append(words, word)\n            }\n       \
    \     word = \"\"\n            consonants = 0\n        } else {\n            word\
    \ += string(c)\n            if c != 'a' && c != 'e' && c != 'i' && c != 'o' &&\
    \ c != 'u' {\n                consonants++\n            }\n        }\n    }\n\
    \    if consonants == n {\n        words = append(words, word)\n    }\n    return\
    \ words\n}\n", "    var words []string\n    var word string\n    for _, char :=\
    \ range s {\n        if char == ' ' {\n            if count_consonants(word) ==\
    \ n {\n                words = append(words, word)\n            }\n          \
    \  word = \"\"\n        } else {\n            word += string(char)\n        }\n\
    \    }\n    if count_consonants(word) == n {\n        words = append(words, word)\n\
    \    }\n    return words\n}\n", "    var words []string\n    var word string\n\
    \    var consonants int\n    for _, c := range s {\n        if c == ' ' {\n  \
    \          if consonants == n {\n                words = append(words, word)\n\
    \            }\n            word = \"\"\n            consonants = 0\n        }\
    \ else {\n            word += string(c)\n            if c != 'a' && c != 'e' &&\
    \ c != 'i' && c != 'o' && c != 'u' {\n                consonants++\n         \
    \   }\n        }\n    }\n    if consonants == n {\n        words = append(words,\
    \ word)\n    }\n    return words\n}\n", "    var words []string\n    var word\
    \ string\n    for _, c := range s {\n        if c == ' ' {\n            if len(word)\
    \ > 0 {\n                words = append(words, word)\n                word = \"\
    \"\n            }\n        } else {\n            word += string(c)\n        }\n\
    \    }\n    if len(word) > 0 {\n        words = append(words, word)\n    }\n \
    \   var result []string\n    for _, word := range words {\n        if count_consonants(word)\
    \ == n {\n            result = append(result, word)\n        }\n    }\n    return\
    \ result\n}\n", "    var words []string\n    var word string\n    var consonants\
    \ int\n    var in_word bool\n\n    for _, c := range s {\n        if c == ' '\
    \ {\n            if in_word {\n                if consonants == n {\n        \
    \            words = append(words, word)\n                }\n                word\
    \ = \"\"\n                consonants = 0\n                in_word = false\n  \
    \          }\n        } else {\n            in_word = true\n            if c ==\
    \ 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n                consonants\
    \ = 0\n            } else {\n                consonants++\n            }\n   \
    \         word += string(c)\n        }\n    }\n    if in_word {\n        if consonants\
    \ == n {\n            words = append(words, word)\n        }\n    }\n    return\
    \ words\n}\n", "    var words []string\n    var word string\n    var consonants\
    \ int\n    var in_word bool\n    for _, c := range s {\n        if c == ' ' {\n\
    \            if in_word {\n                if consonants == n {\n            \
    \        words = append(words, word)\n                }\n                word\
    \ = \"\"\n                consonants = 0\n                in_word = false\n  \
    \          }\n        } else {\n            in_word = true\n            word +=\
    \ string(c)\n            if c != 'a' && c != 'e' && c != 'i' && c != 'o' && c\
    \ != 'u' {\n                consonants++\n            }\n        }\n    }\n  \
    \  if in_word {\n        if consonants == n {\n            words = append(words,\
    \ word)\n        }\n    }\n    return words\n}\n", "    var result []string\n\
    \    var word string\n    var consonants int\n    for i := 0; i < len(s); i++\
    \ {\n        if s[i] == ' ' {\n            if consonants == n {\n            \
    \    result = append(result, word)\n            }\n            word = \"\"\n \
    \           consonants = 0\n        } else {\n            word += string(s[i])\n\
    \            if s[i] != 'a' && s[i] != 'e' && s[i] != 'i' && s[i] != 'o' && s[i]\
    \ != 'u' {\n                consonants++\n            }\n        }\n    }\n  \
    \  if consonants == n {\n        result = append(result, word)\n    }\n    return\
    \ result\n}\n", "    return nil\n}\n", "    var result []string\n    var word\
    \ string\n    var consonants int\n    var is_consonant bool\n    for _, c := range\
    \ s {\n        if c == ' ' {\n            if consonants == n {\n             \
    \   result = append(result, word)\n            }\n            word = \"\"\n  \
    \          consonants = 0\n        } else {\n            is_consonant = true\n\
    \            switch c {\n            case 'a', 'e', 'i', 'o', 'u':\n         \
    \       is_consonant = false\n            }\n            if is_consonant {\n \
    \               consonants++\n            }\n            word += string(c)\n \
    \       }\n    }\n    if consonants == n {\n        result = append(result, word)\n\
    \    }\n    return result\n}\n", "    var words []string\n    var word string\n\
    \    var consonants int\n    for _, c := range s {\n        if c == ' ' {\n  \
    \          if consonants == n {\n                words = append(words, word)\n\
    \            }\n            word = \"\"\n            consonants = 0\n        }\
    \ else {\n            word += string(c)\n            if c != 'a' && c != 'e' &&\
    \ c != 'i' && c != 'o' && c != 'u' {\n                consonants++\n         \
    \   }\n        }\n    }\n    if consonants == n {\n        words = append(words,\
    \ word)\n    }\n    return words\n}\n", "    return nil\n}\n", "    var words\
    \ []string\n    var word string\n    var consonants int\n    for _, c := range\
    \ s {\n        if c == ' ' {\n            if consonants == n {\n             \
    \   words = append(words, word)\n            }\n            word = \"\"\n    \
    \        consonants = 0\n        } else {\n            if c != 'a' && c != 'e'\
    \ && c != 'i' && c != 'o' && c != 'u' {\n                consonants++\n      \
    \      }\n            word += string(c)\n        }\n    }\n    if consonants ==\
    \ n {\n        words = append(words, word)\n    }\n    return words\n}\n", " \
    \   var words []string\n    var word string\n    var consonants int\n    for _,\
    \ c := range s {\n        if c == ' ' {\n            if consonants == n {\n  \
    \              words = append(words, word)\n            }\n            word =\
    \ \"\"\n            consonants = 0\n        } else {\n            word += string(c)\n\
    \            if c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n \
    \               consonants++\n            }\n        }\n    }\n    if consonants\
    \ == n {\n        words = append(words, word)\n    }\n    return words\n}\n",
  "    var result []string\n    var word string\n    var count int\n    for _, c :=\
    \ range s {\n        if c == ' ' {\n            if count == n {\n            \
    \    result = append(result, word)\n            }\n            word = \"\"\n \
    \           count = 0\n        } else {\n            word += string(c)\n     \
    \       if c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n      \
    \          count++\n            }\n        }\n    }\n    if count == n {\n   \
    \     result = append(result, word)\n    }\n    return result\n}\n", "    var\
    \ words []string\n    var word string\n    var consonants int\n    for _, c :=\
    \ range s {\n        if c == ' ' {\n            if consonants == n {\n       \
    \         words = append(words, word)\n            }\n            word = \"\"\n\
    \            consonants = 0\n        } else {\n            word += string(c)\n\
    \            if is_consonant(c) {\n                consonants++\n            }\n\
    \        }\n    }\n    if consonants == n {\n        words = append(words, word)\n\
    \    }\n    return words\n}\n", "    var words []string\n    var word string\n\
    \    var consonants int\n    for _, char := range s {\n        if char == ' '\
    \ {\n            if consonants == n {\n                words = append(words, word)\n\
    \            }\n            word = \"\"\n            consonants = 0\n        }\
    \ else {\n            if char != 'a' && char != 'e' && char != 'i' && char !=\
    \ 'o' && char != 'u' {\n                consonants++\n            }\n        \
    \    word += string(char)\n        }\n    }\n    if consonants == n {\n      \
    \  words = append(words, word)\n    }\n    return words\n}\n", "    var result\
    \ []string\n    var word string\n    var consonants int\n    var is_consonant\
    \ bool\n    var is_word bool\n    var is_consonant_word bool\n    var is_vowel\
    \ bool\n    var is_space bool\n    var is_letter bool\n    var is_consonant_letter\
    \ bool\n    var is_vowel_letter bool\n    var is_space_letter bool\n    var is_letter_word\
    \ bool\n    var is_consonant_letter_word bool\n    var is_vowel_letter_word bool\n\
    \    var is_space_letter_word bool\n    var is_letter_consonant_word bool\n  \
    \  var is_letter_vowel_word bool\n    var is_letter_space_word bool\n    var is_letter_consonant_letter_word\
    \ bool\n    var is_letter_vowel_letter_word bool\n    var is_letter_space_letter_word\
    \ bool\n    var is_letter_consonant_letter_consonant_word bool\n    var is_letter_consonant_letter_vowel_word\
    \ bool\n    var is_letter_consonant_letter_space_word bool\n    var is_letter_vowel_letter_consonant_word\
    \ bool\n    var is_letter_vowel_letter_vowel_word bool\n    var is_letter_vowel_letter_space_word\
    \ bool\n    var is_letter_space_letter_consonant_word bool\n    var is_letter_space_letter_vowel_word\
    \ bool\n    var is_letter_space_letter_space_word bool\n    var is_letter_consonant_letter_consonant_letter_word\
    \ bool\n    var is_letter_consonant_letter_consonant_vowel_word bool\n    var\
    \ is_letter_consonant_letter_consonant_space_word bool\n    var is_letter_consonant_letter_vowel_letter_word\
    \ bool\n    var is_letter_consonant_letter_vowel_vowel_word bool\n    var is_letter_consonant_letter_vowel_space_word",
  "    var words []string\n    var word string\n    for _, c := range s {\n      \
    \  if c == ' ' {\n            if len(word) > 0 {\n                words = append(words,\
    \ word)\n                word = \"\"\n            }\n        } else {\n      \
    \      word += string(c)\n        }\n    }\n    if len(word) > 0 {\n        words\
    \ = append(words, word)\n    }\n    var result []string\n    for _, word := range\
    \ words {\n        if count_consonants(word) == n {\n            result = append(result,\
    \ word)\n        }\n    }\n    return result\n}\n", "    var result []string\n\
    \    var word string\n    var consonants int\n    var is_word bool\n\n    for\
    \ _, c := range s {\n        if c == ' ' {\n            if is_word {\n       \
    \         if consonants == n {\n                    result = append(result, word)\n\
    \                }\n                word = \"\"\n                consonants =\
    \ 0\n                is_word = false\n            }\n        } else {\n      \
    \      is_word = true\n            word += string(c)\n            if c != 'a'\
    \ && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n                consonants++\n\
    \            }\n        }\n    }\n    if is_word {\n        if consonants == n\
    \ {\n            result = append(result, word)\n        }\n    }\n    return result\n\
    }\n", "    words := make([]string, 0)\n    word := \"\"\n    for _, c := range\
    \ s {\n        if c == ' ' {\n            if len(word) > 0 {\n               \
    \ words = append(words, word)\n                word = \"\"\n            }\n  \
    \      } else {\n            word += string(c)\n        }\n    }\n    if len(word)\
    \ > 0 {\n        words = append(words, word)\n    }\n    result := make([]string,\
    \ 0)\n    for _, w := range words {\n        if count_consonants(w) == n {\n \
    \           result = append(result, w)\n        }\n    }\n    return result\n\
    }\n", "    return nil\n}\n", "    var words []string\n    var word string\n  \
    \  for _, c := range s {\n        if c == ' ' {\n            if len(word) == n\
    \ {\n                words = append(words, word)\n            }\n            word\
    \ = \"\"\n        } else {\n            word += string(c)\n        }\n    }\n\
    \    if len(word) == n {\n        words = append(words, word)\n    }\n    return\
    \ words\n}\n", "    var words []string\n    var word string\n    var consonants\
    \ int\n    for _, c := range s {\n        if c == ' ' {\n            if consonants\
    \ == n {\n                words = append(words, word)\n            }\n       \
    \     word = \"\"\n            consonants = 0\n        } else {\n            word\
    \ += string(c)\n            if c != 'a' && c != 'e' && c != 'i' && c != 'o' &&\
    \ c != 'u' {\n                consonants++\n            }\n        }\n    }\n\
    \    if consonants == n {\n        words = append(words, word)\n    }\n    return\
    \ words\n}\n", "    var words []string\n    var word string\n    for _, c := range\
    \ s {\n        if c == ' ' {\n            if len(word) > 0 {\n               \
    \ words = append(words, word)\n                word = \"\"\n            }\n  \
    \      } else {\n            word += string(c)\n        }\n    }\n    if len(word)\
    \ > 0 {\n        words = append(words, word)\n    }\n    var result []string\n\
    \    for _, word := range words {\n        if count_consonants(word) == n {\n\
    \            result = append(result, word)\n        }\n    }\n    return result\n\
    }\n", "    var words []string\n    var word string\n    var consonants int\n \
    \   for _, c := range s {\n        if c == ' ' {\n            if consonants ==\
    \ n {\n                words = append(words, word)\n            }\n          \
    \  word = \"\"\n            consonants = 0\n        } else {\n            word\
    \ += string(c)\n            if is_consonant(c) {\n                consonants++\n\
    \            }\n        }\n    }\n    if consonants == n {\n        words = append(words,\
    \ word)\n    }\n    return words\n}\n", "    var words []string\n    var word\
    \ string\n    var consonants int\n    for _, c := range s {\n        if c == '\
    \ ' {\n            if consonants == n {\n                words = append(words,\
    \ word)\n            }\n            word = \"\"\n            consonants = 0\n\
    \        } else {\n            if c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n                consonants++\n            }\n            word\
    \ += string(c)\n        }\n    }\n    if consonants == n {\n        words = append(words,\
    \ word)\n    }\n    return words\n}\n", "    var words []string\n    var word\
    \ string\n    for _, c := range s {\n        if c == ' ' {\n            if count_consonants(word)\
    \ == n {\n                words = append(words, word)\n            }\n       \
    \     word = \"\"\n        } else {\n            word += string(c)\n        }\n\
    \    }\n    if count_consonants(word) == n {\n        words = append(words, word)\n\
    \    }\n    return words\n}\n", "    var result []string\n    var word string\n\
    \    var consonants int\n    for _, c := range s {\n        if c == ' ' {\n  \
    \          if consonants == n {\n                result = append(result, word)\n\
    \            }\n            word = \"\"\n            consonants = 0\n        }\
    \ else {\n            word += string(c)\n            if c != 'a' && c != 'e' &&\
    \ c != 'i' && c != 'o' && c != 'u' {\n                consonants++\n         \
    \   }\n        }\n    }\n    if consonants == n {\n        result = append(result,\
    \ word)\n    }\n    return result\n}\n", "    var result []string\n    var word\
    \ string\n    var consonants int\n    for _, c := range s {\n        if c == '\
    \ ' {\n            if consonants == n {\n                result = append(result,\
    \ word)\n            }\n            word = \"\"\n            consonants = 0\n\
    \        } else {\n            if c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n                consonants++\n            }\n            word\
    \ += string(c)\n        }\n    }\n    if consonants == n {\n        result = append(result,\
    \ word)\n    }\n    return result\n}\n", "    var words []string\n    var currentWord\
    \ string\n    for _, c := range s {\n        if c == ' ' {\n            if len(currentWord)\
    \ > 0 {\n                words = append(words, currentWord)\n                currentWord\
    \ = \"\"\n            }\n        } else {\n            currentWord += string(c)\n\
    \        }\n    }\n    if len(currentWord) > 0 {\n        words = append(words,\
    \ currentWord)\n    }\n    var result []string\n    for _, word := range words\
    \ {\n        if count_consonants(word) == n {\n            result = append(result,\
    \ word)\n        }\n    }\n    return result\n}\n", "    var words []string\n\
    \    var word string\n    var consonants int\n    for _, c := range s {\n    \
    \    if c == ' ' {\n            if consonants == n {\n                words =\
    \ append(words, word)\n            }\n            word = \"\"\n            consonants\
    \ = 0\n        } else {\n            word += string(c)\n            if c != 'a'\
    \ && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n                consonants++\n\
    \            }\n        }\n    }\n    if consonants == n {\n        words = append(words,\
    \ word)\n    }\n    return words\n}\n", "    var words []string\n    var word\
    \ string\n    for _, c := range s {\n        if c == ' ' {\n            if len(word)\
    \ > 0 {\n                words = append(words, word)\n                word = \"\
    \"\n            }\n        } else {\n            word += string(c)\n        }\n\
    \    }\n    if len(word) > 0 {\n        words = append(words, word)\n    }\n \
    \   var result []string\n    for _, word := range words {\n        if count_consonants(word)\
    \ == n {\n            result = append(result, word)\n        }\n    }\n    return\
    \ result\n}\n", "    var words []string\n    for _, word := range(strings.Split(s,\
    \ \" \")) {\n        if len(word) == n {\n            words = append(words, word)\n\
    \        }\n    }\n    return words\n}\n", "    var words []string\n    var word\
    \ string\n    var consonants int\n    for _, c := range s {\n        if c == '\
    \ ' {\n            if consonants == n {\n                words = append(words,\
    \ word)\n            }\n            word = \"\"\n            consonants = 0\n\
    \        } else {\n            word += string(c)\n            if c != 'a' && c\
    \ != 'e' && c != 'i' && c != 'o' && c != 'u' {\n                consonants +=\
    \ 1\n            }\n        }\n    }\n    if consonants == n {\n        words\
    \ = append(words, word)\n    }\n    return words\n}\n", "    var words []string\n\
    \    var word string\n    var consonants int\n    for _, c := range s {\n    \
    \    if c == ' ' {\n            if consonants == n {\n                words =\
    \ append(words, word)\n            }\n            word = \"\"\n            consonants\
    \ = 0\n        } else {\n            word += string(c)\n            if c != 'a'\
    \ && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n                consonants++\n\
    \            }\n        }\n    }\n    if consonants == n {\n        words = append(words,\
    \ word)\n    }\n    return words\n}\n", "    var words []string\n    var word\
    \ string\n    var consonants int\n    for _, c := range s {\n        if c == '\
    \ ' {\n            if consonants == n {\n                words = append(words,\
    \ word)\n            }\n            word = \"\"\n            consonants = 0\n\
    \        } else {\n            word += string(c)\n            if c != 'a' && c\
    \ != 'e' && c != 'i' && c != 'o' && c != 'u' {\n                consonants++\n\
    \            }\n        }\n    }\n    if consonants == n {\n        words = append(words,\
    \ word)\n    }\n    return words\n}\n", "    var words []string\n    var word\
    \ string\n    var consonants int\n    var in_word bool\n    for _, c := range\
    \ s {\n        if c == ' ' {\n            if in_word {\n                if consonants\
    \ == n {\n                    words = append(words, word)\n                }\n\
    \                word = \"\"\n                consonants = 0\n               \
    \ in_word = false\n            }\n        } else {\n            in_word = true\n\
    \            if c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n \
    \               consonants = 0\n            } else {\n                consonants++\n\
    \            }\n            word += string(c)\n        }\n    }\n    if in_word\
    \ {\n        if consonants == n {\n            words = append(words, word)\n \
    \       }\n    }\n    return words\n}\n", "    var words []string\n    var word\
    \ string\n    var consonants int\n    for _, c := range s {\n        if c == '\
    \ ' {\n            if consonants == n {\n                words = append(words,\
    \ word)\n            }\n            word = \"\"\n            consonants = 0\n\
    \        } else {\n            if c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u' {\n                consonants++\n            }\n            word\
    \ += string(c)\n        }\n    }\n    if consonants == n {\n        words = append(words,\
    \ word)\n    }\n    return words\n}\n", "    var words []string\n    var word\
    \ string\n    for _, c := range s {\n        if c == ' ' {\n            if len(word)\
    \ == n {\n                words = append(words, word)\n            }\n       \
    \     word = \"\"\n        } else {\n            word += string(c)\n        }\n\
    \    }\n    if len(word) == n {\n        words = append(words, word)\n    }\n\
    \    return words\n}\n", "    var words []string\n    var word string\n    var\
    \ consonants int\n    for _, c := range s {\n        if c == ' ' {\n         \
    \   if consonants == n {\n                words = append(words, word)\n      \
    \      }\n            word = \"\"\n            consonants = 0\n        } else\
    \ {\n            word += string(c)\n            if is_consonant(c) {\n       \
    \         consonants++\n            }\n        }\n    }\n    if consonants ==\
    \ n {\n        words = append(words, word)\n    }\n    return words\n}\n", " \
    \   var words []string\n    var word string\n    var consonants int\n    for _,\
    \ c := range s {\n        if c == ' ' {\n            if consonants == n {\n  \
    \              words = append(words, word)\n            }\n            word =\
    \ \"\"\n            consonants = 0\n        } else {\n            if c != 'a'\
    \ && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n                consonants++\n\
    \            }\n            word += string(c)\n        }\n    }\n    if consonants\
    \ == n {\n        words = append(words, word)\n    }\n    return words\n}\n",
  "    var words []string\n    var word string\n    var consonants int\n    for _,\
    \ c := range s {\n        if c == ' ' {\n            if consonants == n {\n  \
    \              words = append(words, word)\n            }\n            word =\
    \ \"\"\n            consonants = 0\n        } else {\n            word += string(c)\n\
    \            if c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n \
    \               consonants += 1\n            }\n        }\n    }\n    if consonants\
    \ == n {\n        words = append(words, word)\n    }\n    return words\n}\n",
  "    var words []string\n    var word string\n    for _, c := range s {\n      \
    \  if c == ' ' {\n            if len(word) == n {\n                words = append(words,\
    \ word)\n            }\n            word = \"\"\n        } else {\n          \
    \  word += string(c)\n        }\n    }\n    if len(word) == n {\n        words\
    \ = append(words, word)\n    }\n    return words\n}\n", "    var words []string\n\
    \    var word string\n    var consonants int\n    var prev_is_consonant bool\n\
    \    var is_consonant bool\n    for _, c := range s {\n        if c == ' ' {\n\
    \            if consonants == n {\n                words = append(words, word)\n\
    \            }\n            word = \"\"\n            consonants = 0\n        \
    \    prev_is_consonant = false\n        } else {\n            is_consonant = c\
    \ != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u'\n            if is_consonant\
    \ && !prev_is_consonant {\n                consonants++\n            }\n     \
    \       prev_is_consonant = is_consonant\n            word += string(c)\n    \
    \    }\n    }\n    if consonants == n {\n        words = append(words, word)\n\
    \    }\n    return words\n}\n", "    var words []string\n    var word string\n\
    \    var consonants int\n    var is_consonant bool\n    for _, c := range s {\n\
    \        if c == ' ' {\n            if consonants == n {\n                words\
    \ = append(words, word)\n            }\n            word = \"\"\n            consonants\
    \ = 0\n        } else {\n            is_consonant = true\n            switch c\
    \ {\n            case 'a', 'e', 'i', 'o', 'u':\n                is_consonant =\
    \ false\n            }\n            if is_consonant {\n                consonants++\n\
    \            }\n            word += string(c)\n        }\n    }\n    if consonants\
    \ == n {\n        words = append(words, word)\n    }\n    return words\n}\n",
  "    var words []string\n    var word string\n    var consonants int\n    var is_word\
    \ bool\n    for _, c := range s {\n        if c == ' ' {\n            if is_word\
    \ {\n                if consonants == n {\n                    words = append(words,\
    \ word)\n                }\n                word = \"\"\n                consonants\
    \ = 0\n                is_word = false\n            }\n        } else {\n    \
    \        is_word = true\n            if c == 'a' || c == 'e' || c == 'i' || c\
    \ == 'o' || c == 'u' {\n                consonants = 0\n            } else {\n\
    \                consonants++\n            }\n            word += string(c)\n\
    \        }\n    }\n    if is_word {\n        if consonants == n {\n          \
    \  words = append(words, word)\n        }\n    }\n    return words\n}\n", "  \
    \  var words []string\n    var word string\n    for _, c := range s {\n      \
    \  if c == ' ' {\n            if len(word) > 0 {\n                words = append(words,\
    \ word)\n                word = \"\"\n            }\n        } else {\n      \
    \      word += string(c)\n        }\n    }\n    if len(word) > 0 {\n        words\
    \ = append(words, word)\n    }\n    var result []string\n    for _, word := range\
    \ words {\n        if count_consonants(word) == n {\n            result = append(result,\
    \ word)\n        }\n    }\n    return result\n}\n", "    var words []string\n\
    \    var word string\n    var consonants int\n    for _, c := range s {\n    \
    \    if c == ' ' {\n            if consonants == n {\n                words =\
    \ append(words, word)\n            }\n            word = \"\"\n            consonants\
    \ = 0\n        } else {\n            word += string(c)\n            if c != 'a'\
    \ && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n                consonants++\n\
    \            }\n        }\n    }\n    if consonants == n {\n        words = append(words,\
    \ word)\n    }\n    return words\n}\n", "    var result []string\n    var word\
    \ string\n    var consonants int\n    var is_consonant bool\n    var is_word bool\n\
    \    for _, char := range s {\n        is_consonant = false\n        is_word =\
    \ false\n        switch char {\n        case 'a', 'e', 'i', 'o', 'u', 'y':\n \
    \           consonants = 0\n            is_word = true\n        case 'b', 'c',\
    \ 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w',\
    \ 'x', 'z':\n            is_consonant = true\n            is_word = true\n   \
    \     }\n        if is_consonant {\n            consonants += 1\n        }\n \
    \       if is_word {\n            word += string(char)\n        }\n        if\
    \ char == ' ' {\n            if consonants == n {\n                result = append(result,\
    \ word)\n            }\n            word = \"\"\n        }\n    }\n    if consonants\
    \ == n {\n        result = append(result, word)\n    }\n    return result\n}\n",
  "    // your code here\n    return nil\n}\n", "    var words []string\n    var word\
    \ string\n    var consonants int\n    var is_consonant bool\n    var is_word bool\n\
    \    var is_space bool\n    var is_letter bool\n    var is_consonant_counted bool\n\
    \    var is_word_counted bool\n    var is_word_started bool\n    var is_word_finished\
    \ bool\n    var is_word_added bool\n    var is_word_added_to_list bool\n    var\
    \ is_word_added_to_list_finished bool\n    var is_word_added_to_list_started bool\n\
    \    var is_word_added_to_list_finished bool\n    var is_word_added_to_list_started\
    \ bool\n    var is_word_added_to_list_finished bool\n    var is_word_added_to_list_started\
    \ bool\n    var is_word_added_to_list_finished bool\n    var is_word_added_to_list_started\
    \ bool\n    var is_word_added_to_list_finished bool\n    var is_word_added_to_list_started\
    \ bool\n    var is_word_added_to_list_finished bool\n    var is_word_added_to_list_started\
    \ bool\n    var is_word_added_to_list_finished bool\n    var is_word_added_to_list_started\
    \ bool\n    var is_word_added_to_list_finished bool\n    var is_word_added_to_list_started\
    \ bool\n    var is_word_added_to_list_finished bool\n    var is_word_added_to_list_started\
    \ bool\n    var is_word_added_to_list_finished bool\n    var is_word_added_to_list_started\
    \ bool\n    var is_word_added_to_list_finished bool\n    var is_word_added_to_list_started\
    \ bool\n    var is_word_added_to_list_finished bool\n    var is_word_added_to_list_started\
    \ bool\n    var is_word_added_to_list_finished bool\n    var is_word_added_to_list_started\
    \ bool\n    var is_word_added_to_list_"]
stop_tokens:
- "\nfunc"
- struct
- "\n// "

language: go_test.go
name: HumanEval_145_order_by_points
results:
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    return\
    \ []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n  candidate := order_by_points\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{1, 11, -1, -11, -12}), expected:\
    \ []int{-1, -11, 1, -12, 11} },\n     { actual: candidate([]int{1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3,\
    \ 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}),\
    \ expected: []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98,\
    \ 2, -3}), expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual:\
    \ candidate([]int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10,\
    \ 2, 11, 3, 4, 5, 6, 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76,\
    \ -21, 23, 4}), expected: []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i,\
    \ tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmp124b3lpy_test.go:35:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmp124b3lpy_test.go:35: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmpqyj5m73j_test.go:36:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqyj5m73j_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    return\
    \ []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n  candidate := order_by_points\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{1, 11, -1, -11, -12}), expected:\
    \ []int{-1, -11, 1, -12, 11} },\n     { actual: candidate([]int{1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3,\
    \ 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}),\
    \ expected: []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98,\
    \ 2, -3}), expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual:\
    \ candidate([]int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10,\
    \ 2, 11, 3, 4, 5, 6, 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76,\
    \ -21, 23, 4}), expected: []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i,\
    \ tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmp124b3lpy_test.go:35:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmp124b3lpy_test.go:35: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmpqyj5m73j_test.go:36:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqyj5m73j_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmpqyj5m73j_test.go:36:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqyj5m73j_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    return\
    \ []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n  candidate := order_by_points\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{1, 11, -1, -11, -12}), expected:\
    \ []int{-1, -11, 1, -12, 11} },\n     { actual: candidate([]int{1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3,\
    \ 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}),\
    \ expected: []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98,\
    \ 2, -3}), expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual:\
    \ candidate([]int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10,\
    \ 2, 11, 3, 4, 5, 6, 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76,\
    \ -21, 23, 4}), expected: []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i,\
    \ tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmp124b3lpy_test.go:35:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmp124b3lpy_test.go:35: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmpqyj5m73j_test.go:36:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqyj5m73j_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    return\
    \ []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n  candidate := order_by_points\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{1, 11, -1, -11, -12}), expected:\
    \ []int{-1, -11, 1, -12, 11} },\n     { actual: candidate([]int{1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3,\
    \ 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}),\
    \ expected: []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98,\
    \ 2, -3}), expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual:\
    \ candidate([]int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10,\
    \ 2, 11, 3, 4, 5, 6, 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76,\
    \ -21, 23, 4}), expected: []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i,\
    \ tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmp124b3lpy_test.go:35:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmp124b3lpy_test.go:35: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    return\
    \ []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n  candidate := order_by_points\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{1, 11, -1, -11, -12}), expected:\
    \ []int{-1, -11, 1, -12, 11} },\n     { actual: candidate([]int{1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3,\
    \ 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}),\
    \ expected: []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98,\
    \ 2, -3}), expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual:\
    \ candidate([]int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10,\
    \ 2, 11, 3, 4, 5, 6, 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76,\
    \ -21, 23, 4}), expected: []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i,\
    \ tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmp124b3lpy_test.go:35:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmp124b3lpy_test.go:35: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    return\
    \ []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n  candidate := order_by_points\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{1, 11, -1, -11, -12}), expected:\
    \ []int{-1, -11, 1, -12, 11} },\n     { actual: candidate([]int{1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3,\
    \ 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}),\
    \ expected: []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98,\
    \ 2, -3}), expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual:\
    \ candidate([]int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10,\
    \ 2, 11, 3, 4, 5, 6, 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76,\
    \ -21, 23, 4}), expected: []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i,\
    \ tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmp124b3lpy_test.go:35:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmp124b3lpy_test.go:35: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmpqyj5m73j_test.go:36:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqyj5m73j_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    return\
    \ []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n  candidate := order_by_points\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{1, 11, -1, -11, -12}), expected:\
    \ []int{-1, -11, 1, -12, 11} },\n     { actual: candidate([]int{1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3,\
    \ 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}),\
    \ expected: []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98,\
    \ 2, -3}), expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual:\
    \ candidate([]int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10,\
    \ 2, 11, 3, 4, 5, 6, 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76,\
    \ -21, 23, 4}), expected: []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i,\
    \ tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmp124b3lpy_test.go:35:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmp124b3lpy_test.go:35: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmpqyj5m73j_test.go:36:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqyj5m73j_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmpqyj5m73j_test.go:36:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqyj5m73j_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    return\
    \ []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n  candidate := order_by_points\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{1, 11, -1, -11, -12}), expected:\
    \ []int{-1, -11, 1, -12, 11} },\n     { actual: candidate([]int{1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3,\
    \ 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}),\
    \ expected: []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98,\
    \ 2, -3}), expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual:\
    \ candidate([]int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10,\
    \ 2, 11, 3, 4, 5, 6, 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76,\
    \ -21, 23, 4}), expected: []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i,\
    \ tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmp124b3lpy_test.go:35:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmp124b3lpy_test.go:35: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    return\
    \ []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n  candidate := order_by_points\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{1, 11, -1, -11, -12}), expected:\
    \ []int{-1, -11, 1, -12, 11} },\n     { actual: candidate([]int{1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3,\
    \ 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}),\
    \ expected: []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98,\
    \ 2, -3}), expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual:\
    \ candidate([]int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10,\
    \ 2, 11, 3, 4, 5, 6, 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76,\
    \ -21, 23, 4}), expected: []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i,\
    \ tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmp124b3lpy_test.go:35:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmp124b3lpy_test.go:35: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmpqyj5m73j_test.go:36:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqyj5m73j_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    return\
    \ []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n  candidate := order_by_points\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{1, 11, -1, -11, -12}), expected:\
    \ []int{-1, -11, 1, -12, 11} },\n     { actual: candidate([]int{1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3,\
    \ 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}),\
    \ expected: []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98,\
    \ 2, -3}), expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual:\
    \ candidate([]int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10,\
    \ 2, 11, 3, 4, 5, 6, 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76,\
    \ -21, 23, 4}), expected: []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i,\
    \ tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmp124b3lpy_test.go:35:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmp124b3lpy_test.go:35: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    return\
    \ []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n  candidate := order_by_points\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{1, 11, -1, -11, -12}), expected:\
    \ []int{-1, -11, 1, -12, 11} },\n     { actual: candidate([]int{1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3,\
    \ 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}),\
    \ expected: []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98,\
    \ 2, -3}), expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual:\
    \ candidate([]int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10,\
    \ 2, 11, 3, 4, 5, 6, 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76,\
    \ -21, 23, 4}), expected: []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i,\
    \ tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmp124b3lpy_test.go:35:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmp124b3lpy_test.go:35: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmpqyj5m73j_test.go:36:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqyj5m73j_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    return\
    \ []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n  candidate := order_by_points\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{1, 11, -1, -11, -12}), expected:\
    \ []int{-1, -11, 1, -12, 11} },\n     { actual: candidate([]int{1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3,\
    \ 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}),\
    \ expected: []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98,\
    \ 2, -3}), expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual:\
    \ candidate([]int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10,\
    \ 2, 11, 3, 4, 5, 6, 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76,\
    \ -21, 23, 4}), expected: []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i,\
    \ tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmp124b3lpy_test.go:35:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmp124b3lpy_test.go:35: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    return\
    \ []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n  candidate := order_by_points\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{1, 11, -1, -11, -12}), expected:\
    \ []int{-1, -11, 1, -12, 11} },\n     { actual: candidate([]int{1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3,\
    \ 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}),\
    \ expected: []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98,\
    \ 2, -3}), expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual:\
    \ candidate([]int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10,\
    \ 2, 11, 3, 4, 5, 6, 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76,\
    \ -21, 23, 4}), expected: []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i,\
    \ tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmp124b3lpy_test.go:35:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmp124b3lpy_test.go:35: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    return\
    \ []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n  candidate := order_by_points\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{1, 11, -1, -11, -12}), expected:\
    \ []int{-1, -11, 1, -12, 11} },\n     { actual: candidate([]int{1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3,\
    \ 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}),\
    \ expected: []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98,\
    \ 2, -3}), expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual:\
    \ candidate([]int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10,\
    \ 2, 11, 3, 4, 5, 6, 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76,\
    \ -21, 23, 4}), expected: []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i,\
    \ tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmp124b3lpy_test.go:35:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmp124b3lpy_test.go:35: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmpqyj5m73j_test.go:36:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqyj5m73j_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    return\
    \ []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n  candidate := order_by_points\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{1, 11, -1, -11, -12}), expected:\
    \ []int{-1, -11, 1, -12, 11} },\n     { actual: candidate([]int{1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3,\
    \ 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}),\
    \ expected: []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98,\
    \ 2, -3}), expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual:\
    \ candidate([]int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10,\
    \ 2, 11, 3, 4, 5, 6, 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76,\
    \ -21, 23, 4}), expected: []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i,\
    \ tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmp124b3lpy_test.go:35:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmp124b3lpy_test.go:35: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmpqyj5m73j_test.go:36:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqyj5m73j_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    return\
    \ []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n  candidate := order_by_points\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{1, 11, -1, -11, -12}), expected:\
    \ []int{-1, -11, 1, -12, 11} },\n     { actual: candidate([]int{1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3,\
    \ 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}),\
    \ expected: []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98,\
    \ 2, -3}), expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual:\
    \ candidate([]int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10,\
    \ 2, 11, 3, 4, 5, 6, 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76,\
    \ -21, 23, 4}), expected: []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i,\
    \ tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmp124b3lpy_test.go:35:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmp124b3lpy_test.go:35: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    return\
    \ nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n  candidate := order_by_points\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{1, 11, -1, -11, -12}), expected:\
    \ []int{-1, -11, 1, -12, 11} },\n     { actual: candidate([]int{1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3,\
    \ 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}),\
    \ expected: []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98,\
    \ 2, -3}), expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual:\
    \ candidate([]int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10,\
    \ 2, 11, 3, 4, 5, 6, 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76,\
    \ -21, 23, 4}), expected: []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i,\
    \ tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpxq1889uj_test.go:35: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpxq1889uj_test.go:35: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpxq1889uj_test.go:35: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpxq1889uj_test.go:35:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpxq1889uj_test.go:35: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    return\
    \ []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n  candidate := order_by_points\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{1, 11, -1, -11, -12}), expected:\
    \ []int{-1, -11, 1, -12, 11} },\n     { actual: candidate([]int{1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3,\
    \ 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}),\
    \ expected: []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98,\
    \ 2, -3}), expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual:\
    \ candidate([]int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10,\
    \ 2, 11, 3, 4, 5, 6, 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76,\
    \ -21, 23, 4}), expected: []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i,\
    \ tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmp124b3lpy_test.go:35:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmp124b3lpy_test.go:35: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmpqyj5m73j_test.go:36:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqyj5m73j_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmpqyj5m73j_test.go:36:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqyj5m73j_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    return\
    \ []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n  candidate := order_by_points\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{1, 11, -1, -11, -12}), expected:\
    \ []int{-1, -11, 1, -12, 11} },\n     { actual: candidate([]int{1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3,\
    \ 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}),\
    \ expected: []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98,\
    \ 2, -3}), expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual:\
    \ candidate([]int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10,\
    \ 2, 11, 3, 4, 5, 6, 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76,\
    \ -21, 23, 4}), expected: []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i,\
    \ tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmp124b3lpy_test.go:35:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmp124b3lpy_test.go:35: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    return\
    \ nil\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n  candidate := order_by_points\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{1, 11, -1, -11, -12}), expected:\
    \ []int{-1, -11, 1, -12, 11} },\n     { actual: candidate([]int{1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3,\
    \ 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}),\
    \ expected: []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98,\
    \ 2, -3}), expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual:\
    \ candidate([]int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10,\
    \ 2, 11, 3, 4, 5, 6, 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76,\
    \ -21, 23, 4}), expected: []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i,\
    \ tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpb_xh088k_test.go:35: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmpb_xh088k_test.go:35: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmpb_xh088k_test.go:35:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmpb_xh088k_test.go:35: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpb_xh088k_test.go:35: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    return\
    \ nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n  candidate := order_by_points\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{1, 11, -1, -11, -12}), expected:\
    \ []int{-1, -11, 1, -12, 11} },\n     { actual: candidate([]int{1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3,\
    \ 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}),\
    \ expected: []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98,\
    \ 2, -3}), expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual:\
    \ candidate([]int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10,\
    \ 2, 11, 3, 4, 5, 6, 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76,\
    \ -21, 23, 4}), expected: []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i,\
    \ tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpxq1889uj_test.go:35: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpxq1889uj_test.go:35: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpxq1889uj_test.go:35: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpxq1889uj_test.go:35:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpxq1889uj_test.go:35: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmpqyj5m73j_test.go:36:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqyj5m73j_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmpqyj5m73j_test.go:36:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqyj5m73j_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmpqyj5m73j_test.go:36:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqyj5m73j_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    return\
    \ []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n  candidate := order_by_points\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{1, 11, -1, -11, -12}), expected:\
    \ []int{-1, -11, 1, -12, 11} },\n     { actual: candidate([]int{1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3,\
    \ 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}),\
    \ expected: []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98,\
    \ 2, -3}), expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual:\
    \ candidate([]int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10,\
    \ 2, 11, 3, 4, 5, 6, 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76,\
    \ -21, 23, 4}), expected: []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i,\
    \ tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmp124b3lpy_test.go:35:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmp124b3lpy_test.go:35: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    return\
    \ []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n  candidate := order_by_points\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{1, 11, -1, -11, -12}), expected:\
    \ []int{-1, -11, 1, -12, 11} },\n     { actual: candidate([]int{1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3,\
    \ 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}),\
    \ expected: []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98,\
    \ 2, -3}), expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual:\
    \ candidate([]int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10,\
    \ 2, 11, 3, 4, 5, 6, 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76,\
    \ -21, 23, 4}), expected: []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i,\
    \ tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmp124b3lpy_test.go:35:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmp124b3lpy_test.go:35: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmpqyj5m73j_test.go:36:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqyj5m73j_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmpqyj5m73j_test.go:36:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqyj5m73j_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    return\
    \ []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n  candidate := order_by_points\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{1, 11, -1, -11, -12}), expected:\
    \ []int{-1, -11, 1, -12, 11} },\n     { actual: candidate([]int{1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3,\
    \ 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}),\
    \ expected: []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98,\
    \ 2, -3}), expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual:\
    \ candidate([]int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10,\
    \ 2, 11, 3, 4, 5, 6, 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76,\
    \ -21, 23, 4}), expected: []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i,\
    \ tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmp124b3lpy_test.go:35:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmp124b3lpy_test.go:35: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    return\
    \ []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n  candidate := order_by_points\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{1, 11, -1, -11, -12}), expected:\
    \ []int{-1, -11, 1, -12, 11} },\n     { actual: candidate([]int{1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3,\
    \ 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}),\
    \ expected: []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98,\
    \ 2, -3}), expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual:\
    \ candidate([]int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10,\
    \ 2, 11, 3, 4, 5, 6, 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76,\
    \ -21, 23, 4}), expected: []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i,\
    \ tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmp124b3lpy_test.go:35:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmp124b3lpy_test.go:35: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    return\
    \ []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n  candidate := order_by_points\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{1, 11, -1, -11, -12}), expected:\
    \ []int{-1, -11, 1, -12, 11} },\n     { actual: candidate([]int{1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3,\
    \ 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}),\
    \ expected: []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98,\
    \ 2, -3}), expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual:\
    \ candidate([]int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10,\
    \ 2, 11, 3, 4, 5, 6, 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76,\
    \ -21, 23, 4}), expected: []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i,\
    \ tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmp124b3lpy_test.go:35:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmp124b3lpy_test.go:35: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmpqyj5m73j_test.go:36:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqyj5m73j_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    return\
    \ []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n  candidate := order_by_points\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{1, 11, -1, -11, -12}), expected:\
    \ []int{-1, -11, 1, -12, 11} },\n     { actual: candidate([]int{1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3,\
    \ 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}),\
    \ expected: []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98,\
    \ 2, -3}), expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual:\
    \ candidate([]int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10,\
    \ 2, 11, 3, 4, 5, 6, 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76,\
    \ -21, 23, 4}), expected: []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i,\
    \ tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmp124b3lpy_test.go:35:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmp124b3lpy_test.go:35: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 2
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n  candidate := order_by_points\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{1, 11, -1, -11, -12}), expected:\
    \ []int{-1, -11, 1, -12, 11} },\n     { actual: candidate([]int{1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3,\
    \ 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}),\
    \ expected: []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98,\
    \ 2, -3}), expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual:\
    \ candidate([]int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10,\
    \ 2, 11, 3, 4, 5, 6, 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76,\
    \ -21, 23, 4}), expected: []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i,\
    \ tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpo95y35ds_test.go:15:1: missing return

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    return\
    \ []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n  candidate := order_by_points\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{1, 11, -1, -11, -12}), expected:\
    \ []int{-1, -11, 1, -12, 11} },\n     { actual: candidate([]int{1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3,\
    \ 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}),\
    \ expected: []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98,\
    \ 2, -3}), expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual:\
    \ candidate([]int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10,\
    \ 2, 11, 3, 4, 5, 6, 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76,\
    \ -21, 23, 4}), expected: []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i,\
    \ tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmp124b3lpy_test.go:35:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmp124b3lpy_test.go:35: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmpqyj5m73j_test.go:36:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqyj5m73j_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    return\
    \ []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n  candidate := order_by_points\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{1, 11, -1, -11, -12}), expected:\
    \ []int{-1, -11, 1, -12, 11} },\n     { actual: candidate([]int{1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), expected: []int{0, 2, 3,\
    \ 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457} },\n     { actual: candidate([]int{}),\
    \ expected: []int{} },\n     { actual: candidate([]int{1, -11, -32, 43, 54, -98,\
    \ 2, -3}), expected: []int{-3, -32, -98, -11, 1, 2, 43, 54} },\n     { actual:\
    \ candidate([]int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10,\
    \ 2, 11, 3, 4, 5, 6, 7, 8, 9} },\n     { actual: candidate([]int{0, 6, 6, -76,\
    \ -21, 23, 4}), expected: []int{-76, -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i,\
    \ tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmp124b3lpy_test.go:35:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmp124b3lpy_test.go:35: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmp124b3lpy_test.go:35: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmpqyj5m73j_test.go:36:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqyj5m73j_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmpqyj5m73j_test.go:36:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqyj5m73j_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmpqyj5m73j_test.go:36:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqyj5m73j_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmpqyj5m73j_test.go:36:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqyj5m73j_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return []int{}\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__1\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3)\
    \ %!s(int=6) %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234)\
    \ %!s(int=145) %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]',\
    \ got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n        tmpqyj5m73j_test.go:36:\
    \ expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11) %!s(int=1) %!s(int=2)\
    \ %!s(int=43) %!s(int=54)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__4\
    \ (0.00s)\n        tmpqyj5m73j_test.go:36: expected '[%!s(int=1) %!s(int=10) %!s(int=2)\
    \ %!s(int=11) %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8)\
    \ %!s(int=9)]', got '[]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpqyj5m73j_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[]'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263
- exit_code: 1
  program: "package order_by_points_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// Write a function which sorts the given list of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ list.\n// For example:\nfunc order_by_points(nums []int) []int {\n    // your\
    \ code here\n    return nums\n}\n\nfunc TestOrder_By_Points(t *testing.T) {\n\
    \  candidate := order_by_points\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1,\
    \ 11, -1, -11, -12}), expected: []int{-1, -11, 1, -12, 11} },\n     { actual:\
    \ candidate([]int{1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0,\
    \ 46}), expected: []int{0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56,\
    \ 463, 3457} },\n     { actual: candidate([]int{}), expected: []int{} },\n   \
    \  { actual: candidate([]int{1, -11, -32, 43, 54, -98, 2, -3}), expected: []int{-3,\
    \ -32, -98, -11, 1, 2, 43, 54} },\n     { actual: candidate([]int{1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11}), expected: []int{1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9}\
    \ },\n     { actual: candidate([]int{0, 6, 6, -76, -21, 23, 4}), expected: []int{-76,\
    \ -21, 0, 4, 23, 6, 6} },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestOrder_By_Points (0.00s)\n    --- FAIL: TestOrder_By_Points/test_num__0\
    \ (0.00s)\n        tmpnq6smd01_test.go:36: expected '[%!s(int=-1) %!s(int=-11)\
    \ %!s(int=1) %!s(int=-12) %!s(int=11)]', got '[%!s(int=1) %!s(int=11) %!s(int=-1)\
    \ %!s(int=-11) %!s(int=-12)]'\n    --- FAIL: TestOrder_By_Points/test_num__1 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=0) %!s(int=2) %!s(int=3) %!s(int=6)\
    \ %!s(int=53) %!s(int=423) %!s(int=423) %!s(int=423) %!s(int=1234) %!s(int=145)\
    \ %!s(int=37) %!s(int=46) %!s(int=56) %!s(int=463) %!s(int=3457)]', got '[%!s(int=1234)\
    \ %!s(int=423) %!s(int=463) %!s(int=145) %!s(int=2) %!s(int=423) %!s(int=423)\
    \ %!s(int=53) %!s(int=6) %!s(int=37) %!s(int=3457) %!s(int=3) %!s(int=56) %!s(int=0)\
    \ %!s(int=46)]'\n    --- FAIL: TestOrder_By_Points/test_num__3 (0.00s)\n     \
    \   tmpnq6smd01_test.go:36: expected '[%!s(int=-3) %!s(int=-32) %!s(int=-98) %!s(int=-11)\
    \ %!s(int=1) %!s(int=2) %!s(int=43) %!s(int=54)]', got '[%!s(int=1) %!s(int=-11)\
    \ %!s(int=-32) %!s(int=43) %!s(int=54) %!s(int=-98) %!s(int=2) %!s(int=-3)]'\n\
    \    --- FAIL: TestOrder_By_Points/test_num__4 (0.00s)\n        tmpnq6smd01_test.go:36:\
    \ expected '[%!s(int=1) %!s(int=10) %!s(int=2) %!s(int=11) %!s(int=3) %!s(int=4)\
    \ %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)]', got '[%!s(int=1) %!s(int=2)\
    \ %!s(int=3) %!s(int=4) %!s(int=5) %!s(int=6) %!s(int=7) %!s(int=8) %!s(int=9)\
    \ %!s(int=10) %!s(int=11)]'\n    --- FAIL: TestOrder_By_Points/test_num__5 (0.00s)\n\
    \        tmpnq6smd01_test.go:36: expected '[%!s(int=-76) %!s(int=-21) %!s(int=0)\
    \ %!s(int=4) %!s(int=23) %!s(int=6) %!s(int=6)]', got '[%!s(int=0) %!s(int=6)\
    \ %!s(int=6) %!s(int=-76) %!s(int=-21) %!s(int=23) %!s(int=4)]'\nFAIL\nFAIL\t\
    command-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074263

name: HumanEval_71_triangle_area
language: go_test.go
prompt: "package triangle_area_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
  \n// Given the lengths of the three sides of a triangle. Return the area of\n//\
  \ the triangle rounded to 2 decimal points if the three sides form a valid triangle.\
  \ \n// Otherwise return -1\n// Three sides make a valid triangle when the sum of\
  \ any two sides is greater \n// than the third side.\n// Example:\nfunc triangle_area(a\
  \ int, b int, c int) float64 {\n"
tests: "func TestTriangle_Area(t *testing.T) {\n  candidate := triangle_area\n\ttype\
  \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
  \ := []test{\n     { actual: candidate(3, 4, 5), expected: 6.0 },\n     { actual:\
  \ candidate(1, 2, 10), expected: -1 },\n     { actual: candidate(4, 8, 5), expected:\
  \ 8.18 },\n     { actual: candidate(2, 2, 2), expected: 1.73 },\n     { actual:\
  \ candidate(1, 2, 3), expected: -1 },\n     { actual: candidate(10, 5, 7), expected:\
  \ 16.25 },\n     { actual: candidate(2, 6, 3), expected: -1 },\n     { actual: candidate(1,\
  \ 1, 1), expected: 0.43 },\n     { actual: candidate(2, 2, 10), expected: -1 },\n\
  \   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i),\
  \ func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
  %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
  \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
completions: ["    if a + b > c && a + c > b && b + c > a {\n        s := float64(a\
    \ + b + c) / 2\n        return float64(s * (s - float64(a)) * (s - float64(b))\
    \ * (s - float64(c)))\n    }\n    return -1\n}\n", "    if a + b > c && a + c\
    \ > b && b + c > a {\n        p := float64(a + b + c) / 2\n        return (p *\
    \ (p - float64(a)) * (p - float64(b)) * (p - float64(c)))\n    }\n    return -1\n\
    }\n", "    if a + b > c && a + c > b && b + c > a {\n        p := float64(a +\
    \ b + c) / 2\n        return (p * (p - float64(a)) * (p - float64(b)) * (p - float64(c)))\n\
    \    }\n    return -1\n}\n", "    if a + b > c && a + c > b && b + c > a {\n \
    \       p := float64(a + b + c) / 2\n        return float64(p * (p - float64(a))\
    \ * (p - float64(b)) * (p - float64(c)))\n    }\n    return -1\n}\n", "    if\
    \ a + b <= c || a + c <= b || b + c <= a {\n        return -1\n    }\n    s :=\
    \ float64(a + b + c) / 2\n    return float64(s * (s - float64(a)) * (s - float64(b))\
    \ * (s - float64(c)))\n}\n", "    if a + b > c && a + c > b && b + c > a {\n \
    \       p := float64(a + b + c) / 2\n        return float64(p * (p - float64(a))\
    \ * (p - float64(b)) * (p - float64(c)))\n    }\n    return -1\n}\n", "    //\
    \ your code here\n    return 0.0\n}\n", "    if a + b > c && a + c > b && b +\
    \ c > a {\n        p := float64(a + b + c) / 2\n        return float64(p * (p\
    \ - float64(a)) * (p - float64(b)) * (p - float64(c)))\n    }\n    return -1\n\
    }\n", "    if a + b > c && a + c > b && b + c > a {\n        s := float64(a +\
    \ b + c) / 2\n        return float64(s * (s - float64(a)) * (s - float64(b)) *\
    \ (s - float64(c)))\n    }\n    return -1\n}\n", "    var area float64\n    if\
    \ a + b > c && a + c > b && b + c > a {\n        s := float64(a + b + c) / 2\n\
    \        area = s * (s - float64(a)) * (s - float64(b)) * (s - float64(c))\n \
    \       area = area / 2\n    } else {\n        area = -1\n    }\n    return area\n\
    }\n", "    if a + b > c && a + c > b && b + c > a {\n        p := float64(a +\
    \ b + c) / 2\n        return float64(p * (p - float64(a)) * (p - float64(b)) *\
    \ (p - float64(c)))\n    }\n    return -1\n}\n", "    if a + b > c && a + c >\
    \ b && b + c > a {\n        p := float64(a + b + c) / 2\n        return float64(p\
    \ * (p - float64(a)) * (p - float64(b)) * (p - float64(c)))\n    }\n    return\
    \ -1\n}\n", "    if a + b > c && a + c > b && b + c > a {\n        p := float64(a\
    \ + b + c) / 2\n        return float64(p * (p - float64(a)) * (p - float64(b))\
    \ * (p - float64(c)))\n    }\n    return -1\n}\n", "    // your code here\n  \
    \  return 0.0\n}\n", "    if a + b <= c || a + c <= b || b + c <= a {\n      \
    \  return -1\n    }\n    s := float64(a + b + c) / 2\n    return float64(s * (s\
    \ - float64(a)) * (s - float64(b)) * (s - float64(c)))\n}\n", "    if a + b >\
    \ c && a + c > b && b + c > a {\n        p := float64(a + b + c) / 2\n       \
    \ return float64(p * (p - float64(a)) * (p - float64(b)) * (p - float64(c)))\n\
    \    }\n    return -1\n}\n", "    if a + b > c && a + c > b && b + c > a {\n \
    \       p := float64(a + b + c) / 2\n        return (p * (p - float64(a)) * (p\
    \ - float64(b)) * (p - float64(c)))\n    }\n    return -1\n}\n", "    // TODO:\
    \ implement\n    return 0.0\n}\n", "    if a + b > c && a + c > b && b + c > a\
    \ {\n        s := float64(a + b + c) / 2\n        return float64(s * (s - float64(a))\
    \ * (s - float64(b)) * (s - float64(c)))\n    }\n    return -1\n}\n", "    if\
    \ a + b > c && a + c > b && b + c > a {\n        p := float64(a + b + c) / 2\n\
    \        return (p * (p - float64(a)) * (p - float64(b)) * (p - float64(c)))\n\
    \    }\n    return -1\n}\n", "    var s float64 = float64(a + b + c) / 2.0\n \
    \   var area float64 = s * (s - float64(a)) * (s - float64(b)) * (s - float64(c))\n\
    \    if area <= 0 {\n        return -1\n    }\n    return area\n}\n", "    if\
    \ a + b > c && a + c > b && b + c > a {\n        p := float64(a + b + c) / 2\n\
    \        return float64(p * (p - float64(a)) * (p - float64(b)) * (p - float64(c)))\n\
    \    }\n    return -1\n}\n", "    if a + b > c && a + c > b && b + c > a {\n \
    \       p := float64(a + b + c) / 2\n        return float64(p * (p - float64(a))\
    \ * (p - float64(b)) * (p - float64(c)))\n    }\n    return -1\n}\n", "    if\
    \ a + b > c && a + c > b && b + c > a {\n        p := float64(a + b + c) / 2\n\
    \        return (p * (p - float64(a)) * (p - float64(b)) * (p - float64(c)))\n\
    \    }\n    return -1\n}\n", "    if a + b > c && a + c > b && b + c > a {\n \
    \       p := float64(a + b + c) / 2\n        return float64(p * (p - float64(a))\
    \ * (p - float64(b)) * (p - float64(c)))\n    }\n    return -1\n}\n", "    //\
    \ TODO: implement\n    return 0.0\n}\n", "    if a + b > c && a + c > b && b +\
    \ c > a {\n        s := float64(a + b + c) / 2\n        return float64(s * (s\
    \ - float64(a)) * (s - float64(b)) * (s - float64(c)))\n    }\n    return -1\n\
    }\n", "    // your code here\n    return 0.0\n}\n", "    if a + b > c && a + c\
    \ > b && b + c > a {\n        p := float64(a + b + c) / 2\n        return float64(p\
    \ * (p - float64(a)) * (p - float64(b)) * (p - float64(c)))\n    }\n    return\
    \ -1\n}\n", "    // your code here\n    return 0.0\n}\n", "    if a + b > c &&\
    \ a + c > b && b + c > a {\n        p := float64(a + b + c) / 2\n        return\
    \ (p * (p - float64(a)) * (p - float64(b)) * (p - float64(c)))\n    }\n    return\
    \ -1\n}\n", "    if a + b > c && a + c > b && b + c > a {\n        p := float64(a\
    \ + b + c) / 2\n        return p * (p - float64(a)) * (p - float64(b)) * (p -\
    \ float64(c))\n    }\n    return -1\n}\n", "    if a + b <= c || a + c <= b ||\
    \ b + c <= a {\n        return -1\n    }\n    s := float64(a + b + c) / 2\n  \
    \  return float64(s * (s - float64(a)) * (s - float64(b)) * (s - float64(c)))\n\
    }\n", "    // your code here\n    return 0.0\n}\n", "    // TODO: implement me\n\
    \    return 0.0\n}\n", "    // your code here\n    return 0.0\n}\n", "    if a\
    \ <= 0 || b <= 0 || c <= 0 {\n        return -1\n    }\n    if a + b <= c || a\
    \ + c <= b || b + c <= a {\n        return -1\n    }\n    p := float64(a + b +\
    \ c) / 2\n    return float64(p * (p - float64(a)) * (p - float64(b)) * (p - float64(c)))\n\
    }\n", "    if a + b > c && a + c > b && b + c > a {\n        p := float64(a +\
    \ b + c) / 2\n        return (p * (p - float64(a)) * (p - float64(b)) * (p - float64(c)))\n\
    \    }\n    return -1\n}\n", "    if a + b > c && a + c > b && b + c > a {\n \
    \       p := float64(a + b + c) / 2\n        return p * (p - float64(a)) * (p\
    \ - float64(b)) * (p - float64(c))\n    }\n    return -1\n}\n", "    if a + b\
    \ > c && a + c > b && b + c > a {\n        p := float64(a + b + c) / 2\n     \
    \   return float64(p * (p - float64(a)) * (p - float64(b)) * (p - float64(c)))\n\
    \    } else {\n        return -1\n    }\n}\n", "    var area float64\n    if a\
    \ + b > c && a + c > b && b + c > a {\n        s := float64(a + b + c) / 2\n \
    \       area = s * (s - float64(a)) * (s - float64(b)) * (s - float64(c))\n  \
    \      area = area * 0.5\n    } else {\n        area = -1\n    }\n    return area\n\
    }\n", "    if a + b > c && a + c > b && b + c > a {\n        p := float64(a +\
    \ b + c) / 2\n        return (p * (p - float64(a)) * (p - float64(b)) * (p - float64(c)))\n\
    \    }\n    return -1\n}\n", "    if a + b > c && a + c > b && b + c > a {\n \
    \       p := float64(a + b + c) / 2\n        return float64(p * (p - float64(a))\
    \ * (p - float64(b)) * (p - float64(c)))\n    }\n    return -1\n}\n", "    //\
    \ your code here\n    return 0.0\n}\n", "    // your code here\n    return 0.0\n\
    }\n", "    // your code here\n    return 0.0\n}\n", "    if a + b > c && a + c\
    \ > b && b + c > a {\n        s := float64(a + b + c) / 2\n        return float64(s\
    \ * (s - float64(a)) * (s - float64(b)) * (s - float64(c)))\n    }\n    return\
    \ -1\n}\n", "    if a + b > c && a + c > b && b + c > a {\n        p := float64(a\
    \ + b + c) / 2\n        return (p * (p - float64(a)) * (p - float64(b)) * (p -\
    \ float64(c)))\n    }\n    return -1\n}\n", "    // your code here\n    return\
    \ 0.0\n}\n", "    if a + b > c && a + c > b && b + c > a {\n        p := float64(a\
    \ + b + c) / 2\n        return float64(p * (p - float64(a)) * (p - float64(b))\
    \ * (p - float64(c)))\n    }\n    return -1\n}\n", "    // your code here\n  \
    \  return 0.0\n}\n", "    if a + b > c && a + c > b && b + c > a {\n        p\
    \ := float64(a + b + c) / 2\n        return p * (p - float64(a)) * (p - float64(b))\
    \ * (p - float64(c))\n    }\n    return -1\n}\n", "    var area float64\n    if\
    \ a + b > c && a + c > b && b + c > a {\n        s := float64(a + b + c) / 2\n\
    \        area = s * (s - float64(a)) * (s - float64(b)) * (s - float64(c))\n \
    \       area = area * 0.5\n    } else {\n        area = -1\n    }\n    return\
    \ area\n}\n", "    if a + b <= c || a + c <= b || b + c <= a {\n        return\
    \ -1\n    }\n    p := float64(a + b + c) / 2\n    return (p * (p - float64(a))\
    \ * (p - float64(b)) * (p - float64(c)))\n}\n", "    // your code here\n    return\
    \ 0.0\n}\n", "    if a + b > c && a + c > b && b + c > a {\n        p := float64(a\
    \ + b + c) / 2\n        return float64(p * (p - float64(a)) * (p - float64(b))\
    \ * (p - float64(c)))\n    }\n    return -1\n}\n", "    if a + b <= c || a + c\
    \ <= b || b + c <= a {\n        return -1\n    }\n    p := float64(a + b + c)\
    \ / 2\n    return (p * (p - float64(a)) * (p - float64(b)) * (p - float64(c)))\n\
    }\n", "    // your code here\n    return 0.0\n}\n", "    if a + b > c && a + c\
    \ > b && b + c > a {\n        p := float64(a + b + c) / 2\n        return float64(p\
    \ * (p - float64(a)) * (p - float64(b)) * (p - float64(c)))\n    }\n    return\
    \ -1\n}\n", "    // Write your code here\n    return 0.0\n}\n", "    if a + b\
    \ > c && a + c > b && b + c > a {\n        p := float64(a + b + c) / 2\n     \
    \   return float64(p * (p - float64(a)) * (p - float64(b)) * (p - float64(c)))\n\
    \    }\n    return -1\n}\n", "    // your code here\n    return 0.0\n}\n", " \
    \   if a + b > c && a + c > b && b + c > a {\n        p := float64(a + b + c)\
    \ / 2\n        return float64(p * (p - float64(a)) * (p - float64(b)) * (p - float64(c)))\n\
    \    }\n    return -1\n}\n", "    if a + b > c && a + c > b && b + c > a {\n \
    \       p := float64(a + b + c) / 2\n        return (p * (p - float64(a)) * (p\
    \ - float64(b)) * (p - float64(c)))\n    }\n    return -1\n}\n", "    if a + b\
    \ > c && a + c > b && b + c > a {\n        p := float64(a + b + c) / 2\n     \
    \   return float64(p * (p - float64(a)) * (p - float64(b)) * (p - float64(c)))\n\
    \    }\n    return -1\n}\n", "    if a + b > c && a + c > b && b + c > a {\n \
    \       p := float64(a + b + c) / 2\n        return (p * (p - float64(a)) * (p\
    \ - float64(b)) * (p - float64(c)))\n    }\n    return -1\n}\n", "    // your\
    \ code here\n    return 0.0\n}\n", "    if a + b > c && a + c > b && b + c > a\
    \ {\n        p := float64(a + b + c) / 2\n        return (p * (p - float64(a))\
    \ * (p - float64(b)) * (p - float64(c)))\n    }\n    return -1\n}\n", "    if\
    \ a + b > c && a + c > b && b + c > a {\n        p := float64(a + b + c) / 2\n\
    \        return float64(p * (p - float64(a)) * (p - float64(b)) * (p - float64(c)))\n\
    \    }\n    return -1\n}\n", "    if a + b > c && a + c > b && b + c > a {\n \
    \       p := float64(a + b + c) / 2\n        return float64(p * (p - float64(a))\
    \ * (p - float64(b)) * (p - float64(c)))\n    }\n    return -1\n}\n", "    if\
    \ a + b > c && a + c > b && b + c > a {\n        p := float64(a + b + c) / 2\n\
    \        return float64(p * (p - float64(a)) * (p - float64(b)) * (p - float64(c)))\n\
    \    } else {\n        return -1\n    }\n}\n", "    if a + b > c && a + c > b\
    \ && b + c > a {\n        p := float64(a + b + c) / 2\n        return float64(p\
    \ * (p - float64(a)) * (p - float64(b)) * (p - float64(c)))\n    }\n    return\
    \ -1\n}\n", "    // your code here\n    return 0.0\n}\n", "    if a + b > c &&\
    \ a + c > b && b + c > a {\n        p := float64(a + b + c) / 2\n        return\
    \ float64(p * (p - float64(a)) * (p - float64(b)) * (p - float64(c)))\n    }\n\
    \    return -1\n}\n", "    if a + b > c && a + c > b && b + c > a {\n        p\
    \ := float64(a + b + c) / 2\n        return p * (p - float64(a)) * (p - float64(b))\
    \ * (p - float64(c))\n    }\n    return -1\n}\n", "    if a + b > c && a + c >\
    \ b && b + c > a {\n        p := float64(a + b + c) / 2\n        return float64(p\
    \ * (p - float64(a)) * (p - float64(b)) * (p - float64(c)))\n    }\n    return\
    \ -1\n}\n", "    if a + b > c && a + c > b && b + c > a {\n        p := float64(a\
    \ + b + c) / 2\n        return float64(p * (p - float64(a)) * (p - float64(b))\
    \ * (p - float64(c)))\n    }\n    return -1\n}\n", "    if a + b > c && a + c\
    \ > b && b + c > a {\n        p := float64(a + b + c) / 2\n        return float64(p\
    \ * (p - float64(a)) * (p - float64(b)) * (p - float64(c)))\n    }\n    return\
    \ -1\n}\n", "    // your code here\n    return 0.0\n}\n", "    // your code here\n\
    \    return 0.0\n}\n", "    // your code here\n    return 0.0\n}\n", "    // your\
    \ code here\n    return 0.0\n}\n", "    if a + b > c && a + c > b && b + c > a\
    \ {\n        p := float64(a + b + c) / 2\n        return (p * (p - float64(a))\
    \ * (p - float64(b)) * (p - float64(c)))\n    }\n    return -1\n}\n", "    //\
    \ your code here\n    return 0.0\n}\n", "    // your code here\n    return 0.0\n\
    }\n", "    // your code here\n    return 0.0\n}\n", "    if a + b <= c || a +\
    \ c <= b || b + c <= a {\n        return -1\n    }\n    p := float64(a + b + c)\
    \ / 2\n    return float64(p * (p - float64(a)) * (p - float64(b)) * (p - float64(c)))\n\
    }\n", "    if a + b > c && a + c > b && b + c > a {\n        p := float64(a +\
    \ b + c) / 2\n        return p * (p - float64(a)) * (p - float64(b)) * (p - float64(c))\n\
    \    }\n    return -1\n}\n", "    // your code here\n    return 0.0\n}\n", " \
    \   if a + b > c && a + c > b && b + c > a {\n        p := float64(a + b + c)\
    \ / 2\n        return float64(p * (p - float64(a)) * (p - float64(b)) * (p - float64(c)))\n\
    \    }\n    return -1\n}\n", "    // your code here\n    return 0.0\n}\n", " \
    \   if a + b > c && a + c > b && b + c > a {\n        p := float64(a + b + c)\
    \ / 2\n        return float64(p * (p - float64(a)) * (p - float64(b)) * (p - float64(c)))\n\
    \    }\n    return -1\n}\n", "    // your code here\n    return 0.0\n}\n", " \
    \   if a + b > c && a + c > b && b + c > a {\n        s := float64(a + b + c)\
    \ / 2\n        return float64(s * (s - float64(a)) * (s - float64(b)) * (s - float64(c)))\n\
    \    }\n    return -1\n}\n", "    if a + b > c && a + c > b && b + c > a {\n \
    \       p := float64(a + b + c) / 2\n        return (p * (p - float64(a)) * (p\
    \ - float64(b)) * (p - float64(c)))\n    }\n    return -1\n}\n", "    if a + b\
    \ > c && a + c > b && b + c > a {\n        p := float64(a + b + c) / 2\n     \
    \   return float64(p * (p - float64(a)) * (p - float64(b)) * (p - float64(c)))\n\
    \    }\n    return -1\n}\n", "    // your code here\n    return 0.0\n}\n", " \
    \   if a + b > c && a + c > b && b + c > a {\n        p := float64(a + b + c)\
    \ / 2\n        return float64(p * (p - float64(a)) * (p - float64(b)) * (p - float64(c)))\n\
    \    }\n    return -1\n}\n", "    if a + b > c && a + c > b && b + c > a {\n \
    \       p := float64(a + b + c) / 2\n        return (p * (p - float64(a)) * (p\
    \ - float64(b)) * (p - float64(c)))\n    }\n    return -1\n}\n", "    if a + b\
    \ > c && a + c > b && b + c > a {\n        p := float64(a + b + c) / 2\n     \
    \   return float64(p * (p - float64(a)) * (p - float64(b)) * (p - float64(c)))\n\
    \    }\n    return -1\n}\n", "    if a + b > c && a + c > b && b + c > a {\n \
    \       s := float64(a + b + c) / 2\n        return float64(s * (s - float64(a))\
    \ * (s - float64(b)) * (s - float64(c)))\n    }\n    return -1\n}\n", "    //\
    \ your code here\n    return 0.0\n}\n", "    // your code here\n    return 0.0\n\
    }\n", "    if a + b > c && a + c > b && b + c > a {\n        p := float64(a +\
    \ b + c) / 2\n        return float64(p * (p - float64(a)) * (p - float64(b)) *\
    \ (p - float64(c)))\n    }\n    return -1\n}\n", "    // your code here\n    return\
    \ 0.0\n}\n", "    if a+b > c && a+c > b && b+c > a {\n        p := float64(a+b+c)\
    \ / 2\n        return (p * (p-float64(a)) * (p-float64(b)) * (p-float64(c)))\n\
    \    }\n    return -1\n}\n", "    if a + b > c && a + c > b && b + c > a {\n \
    \       p := float64(a + b + c) / 2\n        return float64(p * (p - float64(a))\
    \ * (p - float64(b)) * (p - float64(c)))\n    }\n    return -1\n}\n", "    //\
    \ your code here\n    return 0.0\n}\n", "    // your code here\n    return 0.0\n\
    }\n", "    if a + b > c && a + c > b && b + c > a {\n        p := float64(a +\
    \ b + c) / 2\n        return float64(p * (p - float64(a)) * (p - float64(b)) *\
    \ (p - float64(c)))\n    }\n    return -1\n}\n", "    if a + b > c && a + c >\
    \ b && b + c > a {\n        p := float64(a + b + c) / 2\n        return float64(p\
    \ * (p - float64(a)) * (p - float64(b)) * (p - float64(c)))\n    }\n    return\
    \ -1\n}\n", "    // your code here\n    return 0.0\n}\n", "    if a + b > c &&\
    \ a + c > b && b + c > a {\n        p := float64(a + b + c) / 2\n        return\
    \ (p * (p - float64(a)) * (p - float64(b)) * (p - float64(c)))\n    }\n    return\
    \ -1\n}\n", "    if a + b > c && a + c > b && b + c > a {\n        s := float64(a\
    \ + b + c) / 2\n        area := s * (s - float64(a)) * (s - float64(b)) * (s -\
    \ float64(c))\n        return float64(area)\n    }\n    return -1\n}\n", "   \
    \ if a + b > c && a + c > b && b + c > a {\n        p := float64(a + b + c) /\
    \ 2\n        return float64(p * (p - float64(a)) * (p - float64(b)) * (p - float64(c)))\n\
    \    }\n    return -1\n}\n", "    if a + b > c && a + c > b && b + c > a {\n \
    \       s := float64(a + b + c) / 2\n        return float64(s * (s - float64(a))\
    \ * (s - float64(b)) * (s - float64(c)))\n    }\n    return -1\n}\n", "    if\
    \ a + b > c && a + c > b && b + c > a {\n        p := float64(a + b + c) / 2\n\
    \        return float64(p * (p - float64(a)) * (p - float64(b)) * (p - float64(c)))\n\
    \    }\n    return -1\n}\n", "    if a + b > c && a + c > b && b + c > a {\n \
    \       s := float64(a + b + c) / 2\n        return float64(s * (s - float64(a))\
    \ * (s - float64(b)) * (s - float64(c)))\n    }\n    return -1\n}\n", "    if\
    \ a + b > c && a + c > b && b + c > a {\n        p := float64(a + b + c) / 2\n\
    \        return (p * (p - float64(a)) * (p - float64(b)) * (p - float64(c)))\n\
    \    }\n    return -1\n}\n", "    if a + b > c && a + c > b && b + c > a {\n \
    \       p := float64(a + b + c) / 2\n        return float64(p * (p - float64(a))\
    \ * (p - float64(b)) * (p - float64(c)))\n    }\n    return -1\n}\n", "    //\
    \ your code here\n    return 0.0\n}\n", "    if a + b > c && a + c > b && b +\
    \ c > a {\n        p := float64(a + b + c) / 2\n        return (p * (p - float64(a))\
    \ * (p - float64(b)) * (p - float64(c)))\n    }\n    return -1\n}\n", "    //\
    \ your code here\n    return 0.0\n}\n", "    var area float64\n    if a + b >\
    \ c && a + c > b && b + c > a {\n        s := float64(a + b + c) / 2\n       \
    \ area = s * (s - float64(a)) * (s - float64(b)) * (s - float64(c))\n        area\
    \ = area * 0.5\n    } else {\n        area = -1\n    }\n    return area\n}\n",
  "    // your code here\n    return 0.0\n}\n", "    if a + b > c && a + c > b &&\
    \ b + c > a {\n        p := float64(a + b + c) / 2\n        return (p * (p - float64(a))\
    \ * (p - float64(b)) * (p - float64(c)))\n    }\n    return -1\n}\n", "    if\
    \ a + b > c && a + c > b && b + c > a {\n        p := float64(a + b + c) / 2\n\
    \        return float64(p * (p - float64(a)) * (p - float64(b)) * (p - float64(c)))\n\
    \    }\n    return -1\n}\n", "    if a + b > c && a + c > b && b + c > a {\n \
    \       p := float64(a + b + c) / 2\n        return (p * (p - float64(a)) * (p\
    \ - float64(b)) * (p - float64(c)))\n    }\n    return -1\n}\n", "    // return\
    \ -1\n    if a + b > c && a + c > b && b + c > a {\n        p := float64(a + b\
    \ + c) / 2\n        return float64(p * (p - float64(a)) * (p - float64(b)) * (p\
    \ - float64(c)))\n    }\n    return -1\n}\n", "    if a + b > c && a + c > b &&\
    \ b + c > a {\n        s := float64(a + b + c) / 2\n        return float64(s *\
    \ (s - float64(a)) * (s - float64(b)) * (s - float64(c)))\n    }\n    return -1\n\
    }\n", "    if a + b > c && a + c > b && b + c > a {\n        p := float64(a +\
    \ b + c) / 2\n        return p * (p - float64(a)) * (p - float64(b)) * (p - float64(c))\n\
    \    }\n    return -1\n}\n", "    // your code here\n    return 0.0\n}\n", " \
    \   var area float64\n    if a + b > c && a + c > b && b + c > a {\n        p\
    \ := float64(a + b + c) / 2\n        area = p * (p - float64(a)) * (p - float64(b))\
    \ * (p - float64(c))\n        area = area / 2\n    } else {\n        area = -1\n\
    \    }\n    return area\n}\n", "    if a + b > c && a + c > b && b + c > a {\n\
    \        p := float64(a + b + c) / 2\n        return float64(p * (p - float64(a))\
    \ * (p - float64(b)) * (p - float64(c)))\n    }\n    return -1\n}\n", "    //\
    \ TODO: implement\n    return 0.0\n}\n", "    if a + b <= c || a + c <= b || b\
    \ + c <= a {\n        return -1\n    }\n    p := float64(a + b + c) / 2\n    return\
    \ p * (p - float64(a)) * (p - float64(b)) * (p - float64(c))\n}\n", "    if a\
    \ + b > c && a + c > b && b + c > a {\n        // Heron's formula\n        s :=\
    \ float64(a + b + c) / 2.0\n        return float64(s * (s - float64(a)) * (s -\
    \ float64(b)) * (s - float64(c)))\n    }\n    return -1\n}\n", "    // your code\
    \ here\n    return 0.0\n}\n", "    if a + b > c && a + c > b && b + c > a {\n\
    \        p := float64(a + b + c) / 2\n        return float64(p * (p - float64(a))\
    \ * (p - float64(b)) * (p - float64(c)))\n    }\n    return -1\n}\n", "    //\
    \ your code here\n    return 0.0\n}\n", "    if a + b > c && a + c > b && b +\
    \ c > a {\n        p := float64(a + b + c) / 2\n        return (p * (p - float64(a))\
    \ * (p - float64(b)) * (p - float64(c)))\n    }\n    return -1\n}\n", "    if\
    \ a + b > c && a + c > b && b + c > a {\n        s := float64(a + b + c) / 2\n\
    \        return float64(s * (s - float64(a)) * (s - float64(b)) * (s - float64(c)))\n\
    \    }\n    return -1\n}\n", "    // your code here\n    return 0.0\n}\n", " \
    \   if a + b > c && a + c > b && b + c > a {\n        p := float64(a + b + c)\
    \ / 2\n        return float64(p * (p - float64(a)) * (p - float64(b)) * (p - float64(c)))\n\
    \    }\n    return -1\n}\n", "    if a + b > c && a + c > b && b + c > a {\n \
    \       p := float64(a + b + c) / 2\n        return p * (p - float64(a)) * (p\
    \ - float64(b)) * (p - float64(c))\n    }\n    return -1\n}\n", "    if a + b\
    \ > c && a + c > b && b + c > a {\n        s := float64(a + b + c) / 2\n     \
    \   return float64(s * (s - float64(a)) * (s - float64(b)) * (s - float64(c)))\n\
    \    }\n    return -1\n}\n", "    // Write your code here\n    // To print results\
    \ to the standard output you can use fmt.Println\n    // Example:\n    // fmt.Println(\"\
    Hello world!\")\n    if a + b > c && a + c > b && b + c > a {\n        p := float64(a\
    \ + b + c) / 2\n        return float64(p * (p - float64(a)) * (p - float64(b))\
    \ * (p - float64(c)))\n    }\n    return -1\n}\n", "    if a + b > c && a + c\
    \ > b && b + c > a {\n        s := float64(a + b + c) / 2\n        return float64(s\
    \ * (s - float64(a)) * (s - float64(b)) * (s - float64(c)))\n    }\n    return\
    \ -1\n}\n", "    // your code here\n    return 0.0\n}\n", "    if a + b > c &&\
    \ a + c > b && b + c > a {\n        s := float64(a + b + c) / 2\n        return\
    \ float64(s * (s - float64(a)) * (s - float64(b)) * (s - float64(c)))\n    }\n\
    \    return -1\n}\n", "    if a + b > c && a + c > b && b + c > a {\n        p\
    \ := float64(a + b + c) / 2\n        return float64(p * (p - float64(a)) * (p\
    \ - float64(b)) * (p - float64(c)))\n    }\n    return -1\n}\n", "    var s float64\
    \ = float64(a + b + c) / 2\n    var area float64 = s * (s - float64(a)) * (s -\
    \ float64(b)) * (s - float64(c))\n    if area < 0 {\n        return -1\n    }\n\
    \    return area\n}\n", "    // your code here\n    return 0.0\n}\n", "    if\
    \ a + b > c && a + c > b && b + c > a {\n        p := float64(a + b + c) / 2\n\
    \        return float64(p * (p - float64(a)) * (p - float64(b)) * (p - float64(c)))\n\
    \    }\n    return -1\n}\n", "    if a + b <= c || a + c <= b || b + c <= a {\n\
    \        return -1\n    }\n    p := float64(a + b + c) / 2\n    return p * (p\
    \ - float64(a)) * (p - float64(b)) * (p - float64(c))\n}\n", "    // your code\
    \ here\n    return 0.0\n}\n", "    // TODO: implement this function\n    return\
    \ -1\n}\n", "    if a + b > c && a + c > b && b + c > a {\n        p := float64(a\
    \ + b + c) / 2\n        return (p * (p - float64(a)) * (p - float64(b)) * (p -\
    \ float64(c)))\n    }\n    return -1\n}\n", "    if a + b > c && a + c > b &&\
    \ b + c > a {\n        p := float64(a + b + c) / 2\n        return (p * (p - float64(a))\
    \ * (p - float64(b)) * (p - float64(c)))\n    }\n    return -1\n}\n", "    if\
    \ a + b > c && a + c > b && b + c > a {\n        s := float64(a + b + c) / 2\n\
    \        return float64(s * (s - float64(a)) * (s - float64(b)) * (s - float64(c)))\n\
    \    }\n    return -1\n}\n", "    // your code here\n    return 0.0\n}\n", " \
    \   if a + b > c && a + c > b && b + c > a {\n        p := float64(a + b + c)\
    \ / 2\n        return float64(p * (p - float64(a)) * (p - float64(b)) * (p - float64(c)))\n\
    \    }\n    return -1\n}\n", "    // your code here\n    return 0.0\n}\n", " \
    \   if a + b > c && a + c > b && b + c > a {\n        p := float64(a + b + c)\
    \ / 2\n        return (p * (p - float64(a)) * (p - float64(b)) * (p - float64(c)))\n\
    \    }\n    return -1\n}\n", "    if a + b > c && a + c > b && b + c > a {\n \
    \       p := float64(a + b + c) / 2\n        return (p * (p - float64(a)) * (p\
    \ - float64(b)) * (p - float64(c)))\n    }\n    return -1\n}\n", "    // your\
    \ code here\n    return 0.0\n}\n", "    if a + b <= c || a + c <= b || b + c <=\
    \ a {\n        return -1\n    }\n    s := float64(a + b + c) / 2\n    return float64(s\
    \ * (s - float64(a)) * (s - float64(b)) * (s - float64(c)))\n}\n", "    if a +\
    \ b > c && a + c > b && b + c > a {\n        p := float64(a + b + c) / 2\n   \
    \     return (p * (p - float64(a)) * (p - float64(b)) * (p - float64(c)))\n  \
    \  }\n    return -1\n}\n", "    // your code here\n    return 0.0\n}\n", "   \
    \ var s float64 = float64(a + b + c) / 2\n    var area float64 = s * (s - float64(a))\
    \ * (s - float64(b)) * (s - float64(c))\n    if area > 0 {\n        return float64(area)\n\
    \    } else {\n        return -1\n    }\n}\n", "    var area float64\n    if a\
    \ + b > c && a + c > b && b + c > a {\n        p := float64(a + b + c) / 2\n \
    \       area = p * (p - float64(a)) * (p - float64(b)) * (p - float64(c))\n  \
    \      area = area * 0.5\n    } else {\n        area = -1\n    }\n    return area\n\
    }\n", "    if a + b > c && a + c > b && b + c > a {\n        p := float64(a +\
    \ b + c) / 2\n        return p * (p - float64(a)) * (p - float64(b)) * (p - float64(c))\n\
    \    }\n    return -1\n}\n", "    // your code here\n    return 0.0\n}\n", " \
    \   if a+b > c && a+c > b && b+c > a {\n        p := float64(a+b+c) / 2\n    \
    \    return (p * (p-float64(a)) * (p-float64(b)) * (p-float64(c)))\n    }\n  \
    \  return -1\n}\n", "    if a + b > c && a + c > b && b + c > a {\n        p :=\
    \ float64(a + b + c) / 2\n        return (p * (p - float64(a)) * (p - float64(b))\
    \ * (p - float64(c)))\n    }\n    return -1\n}\n", "    // your code here\n  \
    \  return 0.0\n}\n", "    if a + b > c && a + c > b && b + c > a {\n        p\
    \ := float64(a + b + c) / 2\n        return float64(p * (p - float64(a)) * (p\
    \ - float64(b)) * (p - float64(c)))\n    }\n    return -1\n}\n", "    // your\
    \ code here\n    return 0.0\n}\n", "    if a + b <= c || a + c <= b || b + c <=\
    \ a {\n        return -1\n    }\n    p := float64(a + b + c) / 2\n    return p\
    \ * (p - float64(a)) * (p - float64(b)) * (p - float64(c))\n}\n", "    if a +\
    \ b > c && a + c > b && b + c > a {\n        p := float64(a + b + c) / 2\n   \
    \     return (p * (p - float64(a)) * (p - float64(b)) * (p - float64(c)))\n  \
    \  }\n    return -1\n}\n", "    // your code here\n    return 0.0\n}\n", "   \
    \ if a + b <= c || a + c <= b || b + c <= a {\n        return -1\n    }\n    p\
    \ := float64(a + b + c) / 2\n    return float64(p * (p - float64(a)) * (p - float64(b))\
    \ * (p - float64(c)))\n}\n", "    // your code here\n    return 0.0\n}\n", " \
    \   if a + b > c && a + c > b && b + c > a {\n        p := float64(a + b + c)\
    \ / 2\n        return (p * (p - float64(a)) * (p - float64(b)) * (p - float64(c)))\n\
    \    }\n    return -1\n}\n", "    if a + b > c && a + c > b && b + c > a {\n \
    \       p := float64(a + b + c) / 2\n        return (p * (p - float64(a)) * (p\
    \ - float64(b)) * (p - float64(c)))\n    } else {\n        return -1\n    }\n\
    }\n", "    // your code here\n    return 0.0\n}\n", "    if a + b > c && a + c\
    \ > b && b + c > a {\n        p := float64(a + b + c) / 2\n        return p *\
    \ (p - float64(a)) * (p - float64(b)) * (p - float64(c))\n    }\n    return -1\n\
    }\n", "    if a + b > c && a + c > b && b + c > a {\n        p := float64(a +\
    \ b + c) / 2\n        return float64(p * (p - float64(a)) * (p - float64(b)) *\
    \ (p - float64(c)))\n    }\n    return -1\n}\n", "    // your code here\n    return\
    \ 0.0\n}\n", "    // your code here\n    return 0.0\n}\n", "    // your code here\n\
    \    return 0.0\n}\n", "    if a + b > c && a + c > b && b + c > a {\n       \
    \ s := float64(a + b + c) / 2\n        return float64(s * (s - float64(a)) * (s\
    \ - float64(b)) * (s - float64(c)))\n    }\n    return -1\n}\n", "    if a + b\
    \ > c && a + c > b && b + c > a {\n        p := float64(a + b + c) / 2\n     \
    \   return (p * (p - float64(a)) * (p - float64(b)) * (p - float64(c)))\n    }\
    \ else {\n        return -1\n    }\n}\n", "    if a + b > c && a + c > b && b\
    \ + c > a {\n        s := float64(a + b + c) / 2\n        return float64(s * (s\
    \ - float64(a)) * (s - float64(b)) * (s - float64(c)))\n    }\n    return -1\n\
    }\n", "    if a + b > c && a + c > b && b + c > a {\n        p := float64(a +\
    \ b + c) / 2\n        return float64(p * (p - float64(a)) * (p - float64(b)) *\
    \ (p - float64(c)))\n    }\n    return -1\n}\n", "    if a + b <= c || a + c <=\
    \ b || b + c <= a {\n        return -1\n    }\n    p := float64(a + b + c) / 2\n\
    \    return float64(p * (p - float64(a)) * (p - float64(b)) * (p - float64(c)))\n\
    }\n", "    if a + b > c && a + c > b && b + c > a {\n        p := float64(a +\
    \ b + c) / 2\n        return float64(p * (p - float64(a)) * (p - float64(b)) *\
    \ (p - float64(c)))\n    }\n    return -1\n}\n", "    // your code here\n    return\
    \ 0.0\n}\n", "    if a + b > c && a + c > b && b + c > a {\n        p := float64(a\
    \ + b + c) / 2\n        return p * (p - float64(a)) * (p - float64(b)) * (p -\
    \ float64(c))\n    }\n    return -1\n}\n", "    // your code here\n    return\
    \ 0.0\n}\n"]
stop_tokens:
- "\nfunc"
- struct
- "\n// "

language: go_test.go
name: HumanEval_18_how_many_times
results:
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int\n    for i := 0; i < len(myString); i++ {\n       \
    \ if myString[i] == substring[0] {\n            if myString[i:i+len(substring)]\
    \ == substring {\n                count++\n            }\n        }\n    }\n \
    \   return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate :=\
    \ how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\", \"x\"\
    ), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n\
    \     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual:\
    \ candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpmg4rqceo_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpmg4rqceo_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc0001a0340, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 0
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if len(myString) - i < len(substring)\
    \ {\n                break\n            }\n            if myString[i:i+len(substring)]\
    \ == substring {\n                count++\n            }\n        }\n    }\n \
    \   return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate :=\
    \ how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\", \"x\"\
    ), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n\
    \     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual:\
    \ candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    var i int = 0\n    for i < len(myString) {\n\
    \        if myString[i] == substring[0] {\n            var j int = 0\n       \
    \     for j < len(substring) {\n                if i + j >= len(myString) || myString[i\
    \ + j] != substring[j] {\n                    break\n                }\n     \
    \           j++\n            }\n            if j == len(substring) {\n       \
    \         count++\n                i += j - 1\n            }\n        }\n    \
    \    i++\n    }\n    return count\n}\n\nfunc TestHow_Many_Times(t *testing.T)\
    \ {\n  candidate := how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \", \"x\"), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected:\
    \ 4 },\n     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n   \
    \  { actual: candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\n    --- FAIL: TestHow_Many_Times/test_num__2\
    \ (0.00s)\n        tmpzibvl9li_test.go:47: expected '%!s(int=4)', got '%!s(int=2)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    for i := 0; i < len(myString); i++ {\n   \
    \     if myString[i] == substring[0] {\n            var found bool = true\n  \
    \          for j := 0; j < len(substring); j++ {\n                if myString[i+j]\
    \ != substring[j] {\n                    found = false\n                    break\n\
    \                }\n            }\n            if found {\n                count++\n\
    \            }\n        }\n    }\n    return count\n}\n\nfunc TestHow_Many_Times(t\
    \ *testing.T) {\n  candidate := how_many_times\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\", \"x\"), expected: 0 },\n     { actual: candidate(\"xyxyxyx\"\
    , \"x\"), expected: 4 },\n     { actual: candidate(\"cacacacac\", \"cac\"), expected:\
    \ 4 },\n     { actual: candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: index out of\
    \ range [9] with length 9 [recovered]\n\tpanic: runtime error: index out of range\
    \ [9] with length 9\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpwiypogtl_test.go:15\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpwiypogtl_test.go:37\
    \ +0x372\ntesting.tRunner(0xc0001a01a0, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    for i := 0; i < len(myString); i++ {\n   \
    \     if myString[i] == substring[0] {\n            var j int = 0\n          \
    \  for j = 0; j < len(substring); j++ {\n                if myString[i+j] != substring[j]\
    \ {\n                    break\n                }\n            }\n           \
    \ if j == len(substring) {\n                count++\n            }\n        }\n\
    \    }\n    return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate\
    \ := how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\", \"x\"\
    ), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n\
    \     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual:\
    \ candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: index out of\
    \ range [9] with length 9 [recovered]\n\tpanic: runtime error: index out of range\
    \ [9] with length 9\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmp5p9nf0jm_test.go:15\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmp5p9nf0jm_test.go:36\
    \ +0x37a\ntesting.tRunner(0xc0001a01a0, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    for i := 0; i < len(myString); i++ {\n   \
    \     if myString[i] == substring[0] {\n            var j int = 0\n          \
    \  for j = 0; j < len(substring); j++ {\n                if myString[i+j] != substring[j]\
    \ {\n                    break\n                }\n            }\n           \
    \ if j == len(substring) {\n                count++\n            }\n        }\n\
    \    }\n    return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate\
    \ := how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\", \"x\"\
    ), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n\
    \     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual:\
    \ candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: index out of\
    \ range [9] with length 9 [recovered]\n\tpanic: runtime error: index out of range\
    \ [9] with length 9\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmp5p9nf0jm_test.go:15\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmp5p9nf0jm_test.go:36\
    \ +0x37a\ntesting.tRunner(0xc0001a01a0, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 0
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    for i := 0; i < len(myString); i++ {\n   \
    \     if myString[i] == substring[0] {\n            var j int = 0\n          \
    \  for j = 0; j < len(substring); j++ {\n                if i + j >= len(myString)\
    \ || myString[i + j] != substring[j] {\n                    break\n          \
    \      }\n            }\n            if j == len(substring) {\n              \
    \  count++\n            }\n        }\n    }\n    return count\n}\n\nfunc TestHow_Many_Times(t\
    \ *testing.T) {\n  candidate := how_many_times\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\", \"x\"), expected: 0 },\n     { actual: candidate(\"xyxyxyx\"\
    , \"x\"), expected: 4 },\n     { actual: candidate(\"cacacacac\", \"cac\"), expected:\
    \ 4 },\n     { actual: candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.005s\n"
  timestamp: 1660074091
- exit_code: 0
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if len(myString) - i < len(substring)\
    \ {\n                break\n            }\n            if myString[i:i+len(substring)]\
    \ == substring {\n                count++\n            }\n        }\n    }\n \
    \   return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate :=\
    \ how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\", \"x\"\
    ), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n\
    \     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual:\
    \ candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    for i := 0; i < len(myString); i++ {\n   \
    \     if myString[i] == substring[0] {\n            if myString[i:i+len(substring)]\
    \ == substring {\n                count++\n            }\n        }\n    }\n \
    \   return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate :=\
    \ how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\", \"x\"\
    ), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n\
    \     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual:\
    \ candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpjcbc2gai_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpjcbc2gai_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc00019a680, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.009s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    for i := 0; i < len(myString); i++ {\n   \
    \     if myString[i] == substring[0] {\n            var j int = 0\n          \
    \  for j = 0; j < len(substring); j++ {\n                if myString[i+j] != substring[j]\
    \ {\n                    break\n                }\n            }\n           \
    \ if j == len(substring) {\n                count++\n            }\n        }\n\
    \    }\n    return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate\
    \ := how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\", \"x\"\
    ), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n\
    \     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual:\
    \ candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: index out of\
    \ range [9] with length 9 [recovered]\n\tpanic: runtime error: index out of range\
    \ [9] with length 9\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmp5p9nf0jm_test.go:15\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmp5p9nf0jm_test.go:36\
    \ +0x37a\ntesting.tRunner(0xc0001a01a0, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    for i := 0; i < len(myString); i++ {\n   \
    \     if myString[i] == substring[0] {\n            if myString[i:i+len(substring)]\
    \ == substring {\n                count++\n            }\n        }\n    }\n \
    \   return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate :=\
    \ how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\", \"x\"\
    ), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n\
    \     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual:\
    \ candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpjcbc2gai_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpjcbc2gai_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc00019a680, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.009s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 0
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if len(myString) - i < len(substring)\
    \ {\n                break\n            }\n            if myString[i:i+len(substring)]\
    \ == substring {\n                count++\n            }\n        }\n    }\n \
    \   return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate :=\
    \ how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\", \"x\"\
    ), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n\
    \     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual:\
    \ candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int\n    for i := 0; i < len(myString); i++ {\n       \
    \ if myString[i] == substring[0] {\n            if myString[i:i+len(substring)]\
    \ == substring {\n                count++\n            }\n        }\n    }\n \
    \   return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate :=\
    \ how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\", \"x\"\
    ), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n\
    \     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual:\
    \ candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpmg4rqceo_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpmg4rqceo_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc0001a0340, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    for i := 0; i < len(myString); i++ {\n   \
    \     if myString[i] == substring[0] {\n            if myString[i:i+len(substring)]\
    \ == substring {\n                count++\n            }\n        }\n    }\n \
    \   return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate :=\
    \ how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\", \"x\"\
    ), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n\
    \     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual:\
    \ candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpjcbc2gai_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpjcbc2gai_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc00019a680, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.009s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    var i int = 0\n    for i < len(myString) {\n\
    \        if myString[i] == substring[0] {\n            var j int = 0\n       \
    \     for j < len(substring) {\n                if myString[i+j] != substring[j]\
    \ {\n                    break\n                }\n                j++\n     \
    \       }\n            if j == len(substring) {\n                count++\n   \
    \         }\n        }\n        i++\n    }\n    return count\n}\n\nfunc TestHow_Many_Times(t\
    \ *testing.T) {\n  candidate := how_many_times\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\", \"x\"), expected: 0 },\n     { actual: candidate(\"xyxyxyx\"\
    , \"x\"), expected: 4 },\n     { actual: candidate(\"cacacacac\", \"cac\"), expected:\
    \ 4 },\n     { actual: candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: index out of\
    \ range [9] with length 9 [recovered]\n\tpanic: runtime error: index out of range\
    \ [9] with length 9\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpk4hm1c5x_test.go:16\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpk4hm1c5x_test.go:39\
    \ +0x37a\ntesting.tRunner(0xc0001a0340, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 0
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if len(myString) - i < len(substring)\
    \ {\n                return count\n            }\n            for j := 0; j <\
    \ len(substring); j++ {\n                if myString[i + j] != substring[j] {\n\
    \                    break\n                }\n                if j == len(substring)\
    \ - 1 {\n                    count++\n                }\n            }\n     \
    \   }\n    }\n    return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n\
    \  candidate := how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \", \"x\"), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected:\
    \ 4 },\n     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n   \
    \  { actual: candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int\n    for i := 0; i < len(myString); i++ {\n       \
    \ if myString[i] == substring[0] {\n            var found bool = true\n      \
    \      for j := 0; j < len(substring); j++ {\n                if myString[i+j]\
    \ != substring[j] {\n                    found = false\n                    break\n\
    \                }\n            }\n            if found {\n                count++\n\
    \            }\n        }\n    }\n    return count\n}\n\nfunc TestHow_Many_Times(t\
    \ *testing.T) {\n  candidate := how_many_times\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\", \"x\"), expected: 0 },\n     { actual: candidate(\"xyxyxyx\"\
    , \"x\"), expected: 4 },\n     { actual: candidate(\"cacacacac\", \"cac\"), expected:\
    \ 4 },\n     { actual: candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: index out of\
    \ range [9] with length 9 [recovered]\n\tpanic: runtime error: index out of range\
    \ [9] with length 9\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpn3xo66po_test.go:15\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpn3xo66po_test.go:37\
    \ +0x372\ntesting.tRunner(0xc0001924e0, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    for i := 0; i < len(myString); i++ {\n   \
    \     if myString[i] == substring[0] {\n            if myString[i:i+len(substring)]\
    \ == substring {\n                count++\n            }\n        }\n    }\n \
    \   return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate :=\
    \ how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\", \"x\"\
    ), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n\
    \     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual:\
    \ candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpjcbc2gai_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpjcbc2gai_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc00019a680, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.009s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    for i := 0; i < len(myString); i++ {\n   \
    \     if myString[i] == substring[0] {\n            if myString[i:i+len(substring)]\
    \ == substring {\n                count++\n            }\n        }\n    }\n \
    \   return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate :=\
    \ how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\", \"x\"\
    ), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n\
    \     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual:\
    \ candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpjcbc2gai_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpjcbc2gai_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc00019a680, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.009s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int\n    for i := 0; i < len(myString); i++ {\n       \
    \ if myString[i] == substring[0] {\n            if myString[i:i+len(substring)]\
    \ == substring {\n                count++\n            }\n        }\n    }\n \
    \   return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate :=\
    \ how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\", \"x\"\
    ), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n\
    \     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual:\
    \ candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpmg4rqceo_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpmg4rqceo_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc0001a0340, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int\n    for i := 0; i < len(myString); i++ {\n       \
    \ if myString[i] == substring[0] {\n            if myString[i:i+len(substring)]\
    \ == substring {\n                count++\n            }\n        }\n    }\n \
    \   return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate :=\
    \ how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\", \"x\"\
    ), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n\
    \     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual:\
    \ candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpmg4rqceo_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpmg4rqceo_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc0001a0340, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    var i int = 0\n    for i < len(myString) {\n\
    \        if myString[i] == substring[0] {\n            var j int = 0\n       \
    \     for j < len(substring) {\n                if myString[i + j] != substring[j]\
    \ {\n                    break\n                }\n                j++\n     \
    \       }\n            if j == len(substring) {\n                count++\n   \
    \         }\n        }\n        i++\n    }\n    return count\n}\n\nfunc TestHow_Many_Times(t\
    \ *testing.T) {\n  candidate := how_many_times\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\", \"x\"), expected: 0 },\n     { actual: candidate(\"xyxyxyx\"\
    , \"x\"), expected: 4 },\n     { actual: candidate(\"cacacacac\", \"cac\"), expected:\
    \ 4 },\n     { actual: candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: index out of\
    \ range [9] with length 9 [recovered]\n\tpanic: runtime error: index out of range\
    \ [9] with length 9\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpdmk94cx3_test.go:16\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpdmk94cx3_test.go:39\
    \ +0x37a\ntesting.tRunner(0xc0001a01a0, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int\n    for i := 0; i < len(myString); i++ {\n       \
    \ if myString[i] == substring[0] {\n            if myString[i:i+len(substring)]\
    \ == substring {\n                count++\n            }\n        }\n    }\n \
    \   return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate :=\
    \ how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\", \"x\"\
    ), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n\
    \     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual:\
    \ candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpmg4rqceo_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpmg4rqceo_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc0001a0340, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    for i := 0; i < len(myString); i++ {\n   \
    \     if myString[i] == substring[0] {\n            var j int = 0\n          \
    \  for j = 0; j < len(substring); j++ {\n                if myString[i+j] != substring[j]\
    \ {\n                    break\n                }\n            }\n           \
    \ if j == len(substring) {\n                count++\n            }\n        }\n\
    \    }\n    return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate\
    \ := how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\", \"x\"\
    ), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n\
    \     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual:\
    \ candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: index out of\
    \ range [9] with length 9 [recovered]\n\tpanic: runtime error: index out of range\
    \ [9] with length 9\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmp5p9nf0jm_test.go:15\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmp5p9nf0jm_test.go:36\
    \ +0x37a\ntesting.tRunner(0xc0001a01a0, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    for i := 0; i < len(myString); i++ {\n   \
    \     if myString[i] == substring[0] {\n            var j int = 0\n          \
    \  for j = 0; j < len(substring); j++ {\n                if myString[i+j] != substring[j]\
    \ {\n                    break\n                }\n            }\n           \
    \ if j == len(substring) {\n                count++\n            }\n        }\n\
    \    }\n    return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate\
    \ := how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\", \"x\"\
    ), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n\
    \     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual:\
    \ candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: index out of\
    \ range [9] with length 9 [recovered]\n\tpanic: runtime error: index out of range\
    \ [9] with length 9\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmp5p9nf0jm_test.go:15\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmp5p9nf0jm_test.go:36\
    \ +0x37a\ntesting.tRunner(0xc0001a01a0, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    for i := 0; i < len(myString); i++ {\n   \
    \     if myString[i] == substring[0] {\n            if myString[i:i+len(substring)]\
    \ == substring {\n                count++\n            }\n        }\n    }\n \
    \   return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate :=\
    \ how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\", \"x\"\
    ), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n\
    \     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual:\
    \ candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpjcbc2gai_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpjcbc2gai_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc00019a680, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.009s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 0
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    for i := 0; i < len(myString); i++ {\n   \
    \     if myString[i] == substring[0] {\n            var j int = 1\n          \
    \  for j < len(substring) && i + j < len(myString) && myString[i + j] == substring[j]\
    \ {\n                j++\n            }\n            if j == len(substring) {\n\
    \                count++\n            }\n        }\n    }\n    return count\n\
    }\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    for i := 0; i < len(myString); i++ {\n   \
    \     if myString[i] == substring[0] {\n            if myString[i:i+len(substring)]\
    \ == substring {\n                count++\n            }\n        }\n    }\n \
    \   return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate :=\
    \ how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\", \"x\"\
    ), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n\
    \     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual:\
    \ candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpjcbc2gai_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpjcbc2gai_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc00019a680, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.009s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    for i := 0; i < len(myString); i++ {\n   \
    \     if myString[i] == substring[0] {\n            var j int = 0\n          \
    \  for j = 0; j < len(substring); j++ {\n                if myString[i+j] != substring[j]\
    \ {\n                    break\n                }\n            }\n           \
    \ if j == len(substring) {\n                count++\n            }\n        }\n\
    \    }\n    return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate\
    \ := how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\", \"x\"\
    ), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n\
    \     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual:\
    \ candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: index out of\
    \ range [9] with length 9 [recovered]\n\tpanic: runtime error: index out of range\
    \ [9] with length 9\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmp5p9nf0jm_test.go:15\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmp5p9nf0jm_test.go:36\
    \ +0x37a\ntesting.tRunner(0xc0001a01a0, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 0
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    for i := 0; i < len(myString); i++ {\n   \
    \     if myString[i] == substring[0] {\n            var j int = 0\n          \
    \  for j = 0; j < len(substring); j++ {\n                if i + j >= len(myString)\
    \ || myString[i + j] != substring[j] {\n                    break\n          \
    \      }\n            }\n            if j == len(substring) {\n              \
    \  count++\n            }\n        }\n    }\n    return count\n}\n\nfunc TestHow_Many_Times(t\
    \ *testing.T) {\n  candidate := how_many_times\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\", \"x\"), expected: 0 },\n     { actual: candidate(\"xyxyxyx\"\
    , \"x\"), expected: 4 },\n     { actual: candidate(\"cacacacac\", \"cac\"), expected:\
    \ 4 },\n     { actual: candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.005s\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 0
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    for i := 0; i < len(myString) - len(substring)\
    \ + 1; i++ {\n        if myString[i:i+len(substring)] == substring {\n       \
    \     count++\n        }\n    }\n    return count\n}\n\nfunc TestHow_Many_Times(t\
    \ *testing.T) {\n  candidate := how_many_times\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\", \"x\"), expected: 0 },\n     { actual: candidate(\"xyxyxyx\"\
    , \"x\"), expected: 4 },\n     { actual: candidate(\"cacacacac\", \"cac\"), expected:\
    \ 4 },\n     { actual: candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    for i := 0; i < len(myString); i++ {\n   \
    \     if myString[i] == substring[0] {\n            var found bool = true\n  \
    \          for j := 0; j < len(substring); j++ {\n                if myString[i+j]\
    \ != substring[j] {\n                    found = false\n                    break\n\
    \                }\n            }\n            if found {\n                count++\n\
    \            }\n        }\n    }\n    return count\n}\n\nfunc TestHow_Many_Times(t\
    \ *testing.T) {\n  candidate := how_many_times\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\", \"x\"), expected: 0 },\n     { actual: candidate(\"xyxyxyx\"\
    , \"x\"), expected: 4 },\n     { actual: candidate(\"cacacacac\", \"cac\"), expected:\
    \ 4 },\n     { actual: candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: index out of\
    \ range [9] with length 9 [recovered]\n\tpanic: runtime error: index out of range\
    \ [9] with length 9\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpwiypogtl_test.go:15\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpwiypogtl_test.go:37\
    \ +0x372\ntesting.tRunner(0xc0001a01a0, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    for i := 0; i < len(myString); i++ {\n   \
    \     if myString[i] == substring[0] {\n            if myString[i:i+len(substring)]\
    \ == substring {\n                count++\n            }\n        }\n    }\n \
    \   return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate :=\
    \ how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\", \"x\"\
    ), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n\
    \     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual:\
    \ candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpjcbc2gai_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpjcbc2gai_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc00019a680, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.009s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 0
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if len(myString) - i < len(substring)\
    \ {\n                return count\n            }\n            for j := 0; j <\
    \ len(substring); j++ {\n                if myString[i + j] != substring[j] {\n\
    \                    break\n                }\n                if j == len(substring)\
    \ - 1 {\n                    count++\n                }\n            }\n     \
    \   }\n    }\n    return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n\
    \  candidate := how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \", \"x\"), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected:\
    \ 4 },\n     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n   \
    \  { actual: candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            for j := 0; j < len(substring); j++\
    \ {\n                if myString[i+j] != substring[j] {\n                    break\n\
    \                }\n                if j == len(substring)-1 {\n             \
    \       count++\n                }\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: index out of\
    \ range [9] with length 9 [recovered]\n\tpanic: runtime error: index out of range\
    \ [9] with length 9\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpxdrz_vgt_test.go:14\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpxdrz_vgt_test.go:35\
    \ +0x387\ntesting.tRunner(0xc0001a0340, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    for i := 0; i < len(myString); i++ {\n   \
    \     if myString[i] == substring[0] {\n            var j int = 0\n          \
    \  for j = 0; j < len(substring); j++ {\n                if myString[i+j] != substring[j]\
    \ {\n                    break\n                }\n            }\n           \
    \ if j == len(substring) {\n                count++\n            }\n        }\n\
    \    }\n    return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate\
    \ := how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\", \"x\"\
    ), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n\
    \     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual:\
    \ candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: index out of\
    \ range [9] with length 9 [recovered]\n\tpanic: runtime error: index out of range\
    \ [9] with length 9\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmp5p9nf0jm_test.go:15\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmp5p9nf0jm_test.go:36\
    \ +0x37a\ntesting.tRunner(0xc0001a01a0, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    for i := 0; i < len(myString); i++ {\n   \
    \     if myString[i] == substring[0] {\n            var j int = 0\n          \
    \  for j = 0; j < len(substring); j++ {\n                if myString[i+j] != substring[j]\
    \ {\n                    break\n                }\n            }\n           \
    \ if j == len(substring) {\n                count++\n            }\n        }\n\
    \    }\n    return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate\
    \ := how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\", \"x\"\
    ), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n\
    \     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual:\
    \ candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: index out of\
    \ range [9] with length 9 [recovered]\n\tpanic: runtime error: index out of range\
    \ [9] with length 9\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmp5p9nf0jm_test.go:15\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmp5p9nf0jm_test.go:36\
    \ +0x37a\ntesting.tRunner(0xc0001a01a0, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    for i := 0; i < len(myString); i++ {\n   \
    \     if myString[i:i+len(substring)] == substring {\n            count++\n  \
    \      }\n    }\n    return count\n}\n\nfunc TestHow_Many_Times(t *testing.T)\
    \ {\n  candidate := how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \", \"x\"), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected:\
    \ 4 },\n     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n   \
    \  { actual: candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:10] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:10] with length 9\n\ngoroutine 34 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc0001d6000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc0001d6000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpaf6gp9e4_test.go:12\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpaf6gp9e4_test.go:28\
    \ +0x37d\ntesting.tRunner(0xc000199040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.007s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 0
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    for i := 0; i < len(myString); i++ {\n   \
    \     if myString[i] == substring[0] {\n            var j int = 0\n          \
    \  for j = 0; j < len(substring); j++ {\n                if i + j >= len(myString)\
    \ || myString[i + j] != substring[j] {\n                    break\n          \
    \      }\n            }\n            if j == len(substring) {\n              \
    \  count++\n            }\n        }\n    }\n    return count\n}\n\nfunc TestHow_Many_Times(t\
    \ *testing.T) {\n  candidate := how_many_times\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\", \"x\"), expected: 0 },\n     { actual: candidate(\"xyxyxyx\"\
    , \"x\"), expected: 4 },\n     { actual: candidate(\"cacacacac\", \"cac\"), expected:\
    \ 4 },\n     { actual: candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.005s\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    for i := 0; i < len(myString); i++ {\n   \
    \     if myString[i] == substring[0] {\n            for j := 0; j < len(substring);\
    \ j++ {\n                if myString[i+j] != substring[j] {\n                \
    \    break\n                }\n                if j == len(substring)-1 {\n  \
    \                  count++\n                }\n            }\n        }\n    }\n\
    \    return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate :=\
    \ how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\", \"x\"\
    ), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n\
    \     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual:\
    \ candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: index out of\
    \ range [9] with length 9 [recovered]\n\tpanic: runtime error: index out of range\
    \ [9] with length 9\n\ngoroutine 20 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000162000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000162000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpxj5j46yy_test.go:14\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpxj5j46yy_test.go:35\
    \ +0x387\ntesting.tRunner(0xc0001036c0, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    for i := 0; i < len(myString); i++ {\n   \
    \     if myString[i] == substring[0] {\n            var found bool = true\n  \
    \          for j := 0; j < len(substring); j++ {\n                if myString[i+j]\
    \ != substring[j] {\n                    found = false\n                    break\n\
    \                }\n            }\n            if found {\n                count++\n\
    \            }\n        }\n    }\n    return count\n}\n\nfunc TestHow_Many_Times(t\
    \ *testing.T) {\n  candidate := how_many_times\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\", \"x\"), expected: 0 },\n     { actual: candidate(\"xyxyxyx\"\
    , \"x\"), expected: 4 },\n     { actual: candidate(\"cacacacac\", \"cac\"), expected:\
    \ 4 },\n     { actual: candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: index out of\
    \ range [9] with length 9 [recovered]\n\tpanic: runtime error: index out of range\
    \ [9] with length 9\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpwiypogtl_test.go:15\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpwiypogtl_test.go:37\
    \ +0x372\ntesting.tRunner(0xc0001a01a0, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 0
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            found := true\n            for j\
    \ := 0; j < len(substring); j++ {\n                if i + j >= len(myString) ||\
    \ myString[i + j] != substring[j] {\n                    found = false\n     \
    \               break\n                }\n            }\n            if found\
    \ {\n                count++\n            }\n        }\n    }\n    return count\n\
    }\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.005s\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i:i+len(substring)] == substring {\n            count++\n        }\n\
    \    }\n    return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate\
    \ := how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\", \"x\"\
    ), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n\
    \     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual:\
    \ candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:10] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:10] with length 9\n\ngoroutine 20 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000162000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000162000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpby1wxzxt_test.go:12\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpby1wxzxt_test.go:28\
    \ +0x37d\ntesting.tRunner(0xc0001036c0, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    var i int = 0\n    var j int = 0\n    for\
    \ i < len(myString) {\n        if myString[i] == substring[j] {\n            j++\n\
    \            if j == len(substring) {\n                count++\n             \
    \   j = 0\n            }\n        } else {\n            j = 0\n        }\n   \
    \     i++\n    }\n    return count\n}\n\nfunc TestHow_Many_Times(t *testing.T)\
    \ {\n  candidate := how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \", \"x\"), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected:\
    \ 4 },\n     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n   \
    \  { actual: candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\n    --- FAIL: TestHow_Many_Times/test_num__2\
    \ (0.00s)\n        tmpagta6_px_test.go:44: expected '%!s(int=4)', got '%!s(int=2)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    for i := 0; i < len(myString); i++ {\n   \
    \     if myString[i] == substring[0] {\n            var j int = 0\n          \
    \  for j = 0; j < len(substring); j++ {\n                if myString[i+j] != substring[j]\
    \ {\n                    break\n                }\n            }\n           \
    \ if j == len(substring) {\n                count++\n            }\n        }\n\
    \    }\n    return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate\
    \ := how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\", \"x\"\
    ), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n\
    \     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual:\
    \ candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: index out of\
    \ range [9] with length 9 [recovered]\n\tpanic: runtime error: index out of range\
    \ [9] with length 9\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmp5p9nf0jm_test.go:15\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmp5p9nf0jm_test.go:36\
    \ +0x37a\ntesting.tRunner(0xc0001a01a0, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    var i int = 0\n    for i < len(myString) {\n\
    \        if myString[i] == substring[0] {\n            var j int = 0\n       \
    \     for j < len(substring) {\n                if i + j >= len(myString) || myString[i\
    \ + j] != substring[j] {\n                    break\n                }\n     \
    \           j++\n            }\n            if j == len(substring) {\n       \
    \         count++\n                i += j - 1\n            }\n        }\n    \
    \    i++\n    }\n    return count\n}\n\nfunc TestHow_Many_Times(t *testing.T)\
    \ {\n  candidate := how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \", \"x\"), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected:\
    \ 4 },\n     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n   \
    \  { actual: candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\n    --- FAIL: TestHow_Many_Times/test_num__2\
    \ (0.00s)\n        tmpzibvl9li_test.go:47: expected '%!s(int=4)', got '%!s(int=2)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int\n    for i := 0; i < len(myString); i++ {\n       \
    \ if myString[i] == substring[0] {\n            if myString[i:i+len(substring)]\
    \ == substring {\n                count++\n            }\n        }\n    }\n \
    \   return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate :=\
    \ how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\", \"x\"\
    ), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n\
    \     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual:\
    \ candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpmg4rqceo_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpmg4rqceo_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc0001a0340, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 0
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int\n    for i := 0; i < len(myString); i++ {\n       \
    \ if myString[i] == substring[0] {\n            if len(myString) - i >= len(substring)\
    \ {\n                if myString[i:i+len(substring)] == substring {\n        \
    \            count++\n                }\n            }\n        }\n    }\n   \
    \ return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    var i int = 0\n    for i < len(myString) {\n\
    \        if myString[i] == substring[0] {\n            var j int = 0\n       \
    \     for j < len(substring) {\n                if myString[i+j] != substring[j]\
    \ {\n                    break\n                }\n                j++\n     \
    \       }\n            if j == len(substring) {\n                count++\n   \
    \         }\n        }\n        i++\n    }\n    return count\n}\n\nfunc TestHow_Many_Times(t\
    \ *testing.T) {\n  candidate := how_many_times\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\", \"x\"), expected: 0 },\n     { actual: candidate(\"xyxyxyx\"\
    , \"x\"), expected: 4 },\n     { actual: candidate(\"cacacacac\", \"cac\"), expected:\
    \ 4 },\n     { actual: candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: index out of\
    \ range [9] with length 9 [recovered]\n\tpanic: runtime error: index out of range\
    \ [9] with length 9\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpk4hm1c5x_test.go:16\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpk4hm1c5x_test.go:39\
    \ +0x37a\ntesting.tRunner(0xc0001a0340, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    for i := 0; i < len(myString); i++ {\n   \
    \     if myString[i] == substring[0] {\n            if myString[i:i+len(substring)]\
    \ == substring {\n                count++\n            }\n        }\n    }\n \
    \   return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate :=\
    \ how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\", \"x\"\
    ), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n\
    \     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual:\
    \ candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpjcbc2gai_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpjcbc2gai_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc00019a680, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.009s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    for i := 0; i < len(myString); i++ {\n   \
    \     if myString[i] == substring[0] {\n            var j int = 0\n          \
    \  for j = 0; j < len(substring); j++ {\n                if myString[i+j] != substring[j]\
    \ {\n                    break\n                }\n            }\n           \
    \ if j == len(substring) {\n                count++\n            }\n        }\n\
    \    }\n    return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate\
    \ := how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\", \"x\"\
    ), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n\
    \     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual:\
    \ candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: index out of\
    \ range [9] with length 9 [recovered]\n\tpanic: runtime error: index out of range\
    \ [9] with length 9\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmp5p9nf0jm_test.go:15\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmp5p9nf0jm_test.go:36\
    \ +0x37a\ntesting.tRunner(0xc0001a01a0, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 0
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    for i := 0; i < len(myString); i++ {\n   \
    \     if myString[i] == substring[0] {\n            var j int = 0\n          \
    \  for j = 0; j < len(substring); j++ {\n                if i + j >= len(myString)\
    \ || myString[i + j] != substring[j] {\n                    break\n          \
    \      }\n            }\n            if j == len(substring) {\n              \
    \  count++\n            }\n        }\n    }\n    return count\n}\n\nfunc TestHow_Many_Times(t\
    \ *testing.T) {\n  candidate := how_many_times\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\", \"x\"), expected: 0 },\n     { actual: candidate(\"xyxyxyx\"\
    , \"x\"), expected: 4 },\n     { actual: candidate(\"cacacacac\", \"cac\"), expected:\
    \ 4 },\n     { actual: candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.005s\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int\n    for i := 0; i < len(myString); i++ {\n       \
    \ if myString[i] == substring[0] {\n            var j int\n            for j =\
    \ 0; j < len(substring); j++ {\n                if myString[i+j] != substring[j]\
    \ {\n                    break\n                }\n            }\n           \
    \ if j == len(substring) {\n                count++\n            }\n        }\n\
    \    }\n    return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate\
    \ := how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\", \"x\"\
    ), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n\
    \     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual:\
    \ candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: index out of\
    \ range [9] with length 9 [recovered]\n\tpanic: runtime error: index out of range\
    \ [9] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000160000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000160000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpkfm1bamg_test.go:15\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpkfm1bamg_test.go:36\
    \ +0x37a\ntesting.tRunner(0xc000103380, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    for i := 0; i < len(myString); i++ {\n   \
    \     if myString[i] == substring[0] {\n            if myString[i:i+len(substring)]\
    \ == substring {\n                count++\n            }\n        }\n    }\n \
    \   return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate :=\
    \ how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\", \"x\"\
    ), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n\
    \     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual:\
    \ candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpjcbc2gai_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpjcbc2gai_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc00019a680, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.009s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    var i int = 0\n    for i < len(myString) {\n\
    \        if myString[i] == substring[0] {\n            var j int = 0\n       \
    \     for j < len(substring) {\n                if myString[i+j] != substring[j]\
    \ {\n                    break\n                }\n                j++\n     \
    \       }\n            if j == len(substring) {\n                count++\n   \
    \         }\n        }\n        i++\n    }\n    return count\n}\n\nfunc TestHow_Many_Times(t\
    \ *testing.T) {\n  candidate := how_many_times\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\", \"x\"), expected: 0 },\n     { actual: candidate(\"xyxyxyx\"\
    , \"x\"), expected: 4 },\n     { actual: candidate(\"cacacacac\", \"cac\"), expected:\
    \ 4 },\n     { actual: candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: index out of\
    \ range [9] with length 9 [recovered]\n\tpanic: runtime error: index out of range\
    \ [9] with length 9\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpk4hm1c5x_test.go:16\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpk4hm1c5x_test.go:39\
    \ +0x37a\ntesting.tRunner(0xc0001a0340, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    for i := 0; i < len(myString); i++ {\n   \
    \     if myString[i] == substring[0] {\n            if myString[i:i+len(substring)]\
    \ == substring {\n                count++\n            }\n        }\n    }\n \
    \   return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate :=\
    \ how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\", \"x\"\
    ), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n\
    \     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual:\
    \ candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpjcbc2gai_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpjcbc2gai_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc00019a680, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.009s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    for i := 0; i < len(myString); i++ {\n   \
    \     if myString[i] == substring[0] {\n            if myString[i:i+len(substring)]\
    \ == substring {\n                count++\n            }\n        }\n    }\n \
    \   return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate :=\
    \ how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\", \"x\"\
    ), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n\
    \     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual:\
    \ candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpjcbc2gai_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpjcbc2gai_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc00019a680, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.009s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    for i := 0; i < len(myString); i++ {\n   \
    \     if myString[i] == substring[0] {\n            if myString[i:i+len(substring)]\
    \ == substring {\n                count++\n            }\n        }\n    }\n \
    \   return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate :=\
    \ how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\", \"x\"\
    ), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n\
    \     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual:\
    \ candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpjcbc2gai_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpjcbc2gai_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc00019a680, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.009s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    for i := 0; i < len(myString); i++ {\n   \
    \     if myString[i] == substring[0] {\n            var found bool = true\n  \
    \          for j := 0; j < len(substring); j++ {\n                if myString[i+j]\
    \ != substring[j] {\n                    found = false\n                    break\n\
    \                }\n            }\n            if found {\n                count++\n\
    \            }\n        }\n    }\n    return count\n}\n\nfunc TestHow_Many_Times(t\
    \ *testing.T) {\n  candidate := how_many_times\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\", \"x\"), expected: 0 },\n     { actual: candidate(\"xyxyxyx\"\
    , \"x\"), expected: 4 },\n     { actual: candidate(\"cacacacac\", \"cac\"), expected:\
    \ 4 },\n     { actual: candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: index out of\
    \ range [9] with length 9 [recovered]\n\tpanic: runtime error: index out of range\
    \ [9] with length 9\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpwiypogtl_test.go:15\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpwiypogtl_test.go:37\
    \ +0x372\ntesting.tRunner(0xc0001a01a0, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 0
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if len(myString) - i >= len(substring)\
    \ {\n                if myString[i:i+len(substring)] == substring {\n        \
    \            count++\n                }\n            }\n        }\n    }\n   \
    \ return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660074091
- exit_code: 0
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    for i := 0; i < len(myString); i++ {\n   \
    \     if myString[i] == substring[0] {\n            var found bool = true\n  \
    \          for j := 0; j < len(substring); j++ {\n                if i + j >=\
    \ len(myString) || myString[i + j] != substring[j] {\n                    found\
    \ = false\n                    break\n                }\n            }\n     \
    \       if found {\n                count++\n            }\n        }\n    }\n\
    \    return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate :=\
    \ how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\", \"x\"\
    ), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n\
    \     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual:\
    \ candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.005s\n"
  timestamp: 1660074092
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    var i int = 0\n    for i < len(myString) {\n\
    \        if myString[i] == substring[0] {\n            var j int = 0\n       \
    \     for j < len(substring) {\n                if myString[i+j] != substring[j]\
    \ {\n                    break\n                }\n                j++\n     \
    \       }\n            if j == len(substring) {\n                count++\n   \
    \         }\n        }\n        i++\n    }\n    return count\n}\n\nfunc TestHow_Many_Times(t\
    \ *testing.T) {\n  candidate := how_many_times\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\", \"x\"), expected: 0 },\n     { actual: candidate(\"xyxyxyx\"\
    , \"x\"), expected: 4 },\n     { actual: candidate(\"cacacacac\", \"cac\"), expected:\
    \ 4 },\n     { actual: candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: index out of\
    \ range [9] with length 9 [recovered]\n\tpanic: runtime error: index out of range\
    \ [9] with length 9\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpk4hm1c5x_test.go:16\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpk4hm1c5x_test.go:39\
    \ +0x37a\ntesting.tRunner(0xc0001a0340, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 0
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if len(myString) - i < len(substring)\
    \ {\n                return count\n            }\n            for j := 0; j <\
    \ len(substring); j++ {\n                if myString[i + j] != substring[j] {\n\
    \                    break\n                }\n                if j == len(substring)\
    \ - 1 {\n                    count++\n                }\n            }\n     \
    \   }\n    }\n    return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n\
    \  candidate := how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \", \"x\"), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected:\
    \ 4 },\n     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n   \
    \  { actual: candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int\n    for i := 0; i < len(myString); i++ {\n       \
    \ if myString[i] == substring[0] {\n            if myString[i:i+len(substring)]\
    \ == substring {\n                count++\n            }\n        }\n    }\n \
    \   return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate :=\
    \ how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\", \"x\"\
    ), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n\
    \     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual:\
    \ candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpmg4rqceo_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpmg4rqceo_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc0001a0340, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 0
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if len(myString) - i >= len(substring)\
    \ {\n                if myString[i:i+len(substring)] == substring {\n        \
    \            count++\n                }\n            }\n        }\n    }\n   \
    \ return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    for i := 0; i < len(myString); i++ {\n   \
    \     if myString[i] == substring[0] {\n            if myString[i:i+len(substring)]\
    \ == substring {\n                count++\n            }\n        }\n    }\n \
    \   return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate :=\
    \ how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\", \"x\"\
    ), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n\
    \     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual:\
    \ candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpjcbc2gai_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpjcbc2gai_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc00019a680, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.009s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    for i := 0; i < len(myString); i++ {\n   \
    \     if myString[i] == substring[0] {\n            if myString[i:i+len(substring)]\
    \ == substring {\n                count++\n            }\n        }\n    }\n \
    \   return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate :=\
    \ how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\", \"x\"\
    ), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n\
    \     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual:\
    \ candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpjcbc2gai_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpjcbc2gai_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc00019a680, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.009s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int\n    for i := 0; i < len(myString); i++ {\n       \
    \ if myString[i] == substring[0] {\n            if myString[i:i+len(substring)]\
    \ == substring {\n                count++\n            }\n        }\n    }\n \
    \   return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate :=\
    \ how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\", \"x\"\
    ), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n\
    \     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual:\
    \ candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpmg4rqceo_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpmg4rqceo_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc0001a0340, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int\n    for i := 0; i < len(myString); i++ {\n       \
    \ if myString[i] == substring[0] {\n            if myString[i:i+len(substring)]\
    \ == substring {\n                count++\n            }\n        }\n    }\n \
    \   return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate :=\
    \ how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\", \"x\"\
    ), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n\
    \     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual:\
    \ candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpmg4rqceo_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpmg4rqceo_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc0001a0340, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 0
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if len(myString) - i >= len(substring)\
    \ {\n                if myString[i:i+len(substring)] == substring {\n        \
    \            count++\n                }\n            }\n        }\n    }\n   \
    \ return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    var i int = 0\n    var j int = 0\n    var\
    \ k int = 0\n    var l int = 0\n    var m int = 0\n    var n int = 0\n    var\
    \ o int = 0\n    var p int = 0\n    var q int = 0\n    var r int = 0\n    var\
    \ s int = 0\n    var t int = 0\n    var u int = 0\n    var v int = 0\n    var\
    \ w int = 0\n    var x int = 0\n    var y int = 0\n    var z int = 0\n    for\
    \ i = 0; i < len(myString); i++ {\n        for j = 0; j < len(substring); j++\
    \ {\n            if myString[i] == substring[j] {\n                for k = 0;\
    \ k < len(substring); k++ {\n                    if myString[i+k] == substring[k]\
    \ {\n                        for l = 0; l < len(substring); l++ {\n          \
    \                  if myString[i+l] == substring[l] {\n                      \
    \          for m = 0; m < len(substring); m++ {\n                            \
    \        if myString[i+m] == substring[m] {\n                                \
    \        for n = 0; n < len(substring); n++ {\n                              \
    \              if myString[i+n] == substring[n] {\n                          \
    \                      for o = 0; o < len(substring); o++ {\n                \
    \                                    if myString[i+o] == substring[o] {\n    \
    \                                                    for p = 0; p < len(substring);\
    \ p++ {\n                                                            if myString[i+p]\
    \ == substring[p] {\n                                                        \
    \        for q = 0; q < len(substring); q++ {\n                              \
    \                                      if myString[i+q] == substring[q] {\n  \
    \                                                                      for r =\
    \ 0; r < len(substring); r++ {\n                                             \
    \                               if myString[i+r] == substring[r] {\n         \
    \                                                                       for s\
    \ = 0; s < len(substring); s++ {\n                                           \
    \                                         if myString\nfunc TestHow_Many_Times(t\
    \ *testing.T) {\n  candidate := how_many_times\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\", \"x\"), expected: 0 },\n     { actual: candidate(\"xyxyxyx\"\
    , \"x\"), expected: 4 },\n     { actual: candidate(\"cacacacac\", \"cac\"), expected:\
    \ 4 },\n     { actual: candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpu1bjon66_test.go:50:6: expected ''('', found TestHow_Many_Times

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074092
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int\n    for i := 0; i < len(myString); i++ {\n       \
    \ if myString[i] == substring[0] {\n            if myString[i:i+len(substring)]\
    \ == substring {\n                count++\n            }\n        }\n    }\n \
    \   return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate :=\
    \ how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\", \"x\"\
    ), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n\
    \     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual:\
    \ candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpmg4rqceo_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpmg4rqceo_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc0001a0340, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    for i := 0; i < len(myString); i++ {\n   \
    \     if myString[i] == substring[0] {\n            var j int = 0\n          \
    \  for j = 0; j < len(substring); j++ {\n                if myString[i+j] != substring[j]\
    \ {\n                    break\n                }\n            }\n           \
    \ if j == len(substring) {\n                count++\n            }\n        }\n\
    \    }\n    return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate\
    \ := how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\", \"x\"\
    ), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n\
    \     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual:\
    \ candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: index out of\
    \ range [9] with length 9 [recovered]\n\tpanic: runtime error: index out of range\
    \ [9] with length 9\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmp5p9nf0jm_test.go:15\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmp5p9nf0jm_test.go:36\
    \ +0x37a\ntesting.tRunner(0xc0001a01a0, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int\n    for i := 0; i < len(myString); i++ {\n       \
    \ if myString[i] == substring[0] {\n            if myString[i:i+len(substring)]\
    \ == substring {\n                count++\n            }\n        }\n    }\n \
    \   return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate :=\
    \ how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\", \"x\"\
    ), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n\
    \     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual:\
    \ candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpmg4rqceo_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpmg4rqceo_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc0001a0340, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    for i := 0; i < len(myString); i++ {\n   \
    \     if myString[i] == substring[0] {\n            if myString[i:i+len(substring)]\
    \ == substring {\n                count++\n            }\n        }\n    }\n \
    \   return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate :=\
    \ how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\", \"x\"\
    ), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n\
    \     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual:\
    \ candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpjcbc2gai_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpjcbc2gai_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc00019a680, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.009s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    for i := 0; i < len(myString); i++ {\n   \
    \     if myString[i] == substring[0] {\n            if myString[i:i+len(substring)]\
    \ == substring {\n                count++\n            }\n        }\n    }\n \
    \   return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate :=\
    \ how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\", \"x\"\
    ), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n\
    \     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual:\
    \ candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpjcbc2gai_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpjcbc2gai_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc00019a680, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.009s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int\n    for i := 0; i < len(myString); i++ {\n       \
    \ if myString[i] == substring[0] {\n            var j int\n            for j =\
    \ 0; j < len(substring); j++ {\n                if myString[i+j] != substring[j]\
    \ {\n                    break\n                }\n            }\n           \
    \ if j == len(substring) {\n                count++\n            }\n        }\n\
    \    }\n    return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate\
    \ := how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\", \"x\"\
    ), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n\
    \     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual:\
    \ candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: index out of\
    \ range [9] with length 9 [recovered]\n\tpanic: runtime error: index out of range\
    \ [9] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000160000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000160000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpkfm1bamg_test.go:15\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpkfm1bamg_test.go:36\
    \ +0x37a\ntesting.tRunner(0xc000103380, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    for i := 0; i < len(myString); i++ {\n   \
    \     if myString[i] == substring[0] {\n            if myString[i:i+len(substring)]\
    \ == substring {\n                count++\n            }\n        }\n    }\n \
    \   return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate :=\
    \ how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\", \"x\"\
    ), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n\
    \     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual:\
    \ candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpjcbc2gai_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpjcbc2gai_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc00019a680, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.009s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    var i int = 0\n    for i < len(myString) {\n\
    \        var j int = 0\n        for j < len(substring) {\n            if myString[i+j]\
    \ != substring[j] {\n                break\n            }\n            j++\n \
    \       }\n        if j == len(substring) {\n            count++\n        }\n\
    \        i++\n    }\n    return count\n}\n\nfunc TestHow_Many_Times(t *testing.T)\
    \ {\n  candidate := how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \", \"x\"), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected:\
    \ 4 },\n     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n   \
    \  { actual: candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: index out of\
    \ range [9] with length 9 [recovered]\n\tpanic: runtime error: index out of range\
    \ [9] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000160000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000160000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmp54hqoz0b_test.go:15\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmp54hqoz0b_test.go:37\
    \ +0x372\ntesting.tRunner(0xc000103380, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074092
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int\n    for i := 0; i < len(myString); i++ {\n       \
    \ if myString[i] == substring[0] {\n            if myString[i:i+len(substring)]\
    \ == substring {\n                count++\n            }\n        }\n    }\n \
    \   return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate :=\
    \ how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\", \"x\"\
    ), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n\
    \     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual:\
    \ candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpmg4rqceo_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpmg4rqceo_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc0001a0340, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    var i int = 0\n    for i < len(myString) {\n\
    \        if myString[i] == substring[0] {\n            var j int = 0\n       \
    \     for j < len(substring) {\n                if myString[i+j] != substring[j]\
    \ {\n                    break\n                }\n                j++\n     \
    \       }\n            if j == len(substring) {\n                count++\n   \
    \         }\n        }\n        i++\n    }\n    return count\n}\n\nfunc TestHow_Many_Times(t\
    \ *testing.T) {\n  candidate := how_many_times\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\", \"x\"), expected: 0 },\n     { actual: candidate(\"xyxyxyx\"\
    , \"x\"), expected: 4 },\n     { actual: candidate(\"cacacacac\", \"cac\"), expected:\
    \ 4 },\n     { actual: candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: index out of\
    \ range [9] with length 9 [recovered]\n\tpanic: runtime error: index out of range\
    \ [9] with length 9\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpk4hm1c5x_test.go:16\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpk4hm1c5x_test.go:39\
    \ +0x37a\ntesting.tRunner(0xc0001a0340, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    for i := 0; i < len(myString); i++ {\n   \
    \     if myString[i] == substring[0] {\n            if myString[i:i+len(substring)]\
    \ == substring {\n                count++\n            }\n        }\n    }\n \
    \   return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate :=\
    \ how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\", \"x\"\
    ), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n\
    \     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual:\
    \ candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpjcbc2gai_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpjcbc2gai_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc00019a680, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.009s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    var i int = 0\n    for i < len(myString) {\n\
    \        if myString[i] == substring[0] {\n            var j int = 0\n       \
    \     for j < len(substring) {\n                if myString[i+j] != substring[j]\
    \ {\n                    break\n                }\n                j++\n     \
    \       }\n            if j == len(substring) {\n                count++\n   \
    \         }\n        }\n        i++\n    }\n    return count\n}\n\nfunc TestHow_Many_Times(t\
    \ *testing.T) {\n  candidate := how_many_times\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\", \"x\"), expected: 0 },\n     { actual: candidate(\"xyxyxyx\"\
    , \"x\"), expected: 4 },\n     { actual: candidate(\"cacacacac\", \"cac\"), expected:\
    \ 4 },\n     { actual: candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: index out of\
    \ range [9] with length 9 [recovered]\n\tpanic: runtime error: index out of range\
    \ [9] with length 9\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpk4hm1c5x_test.go:16\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpk4hm1c5x_test.go:39\
    \ +0x37a\ntesting.tRunner(0xc0001a0340, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    for i := 0; i < len(myString); i++ {\n   \
    \     if myString[i] == substring[0] {\n            if myString[i:i+len(substring)]\
    \ == substring {\n                count++\n            }\n        }\n    }\n \
    \   return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate :=\
    \ how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\", \"x\"\
    ), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n\
    \     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual:\
    \ candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpjcbc2gai_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpjcbc2gai_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc00019a680, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.009s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    for i := 0; i < len(myString); i++ {\n   \
    \     if myString[i] == substring[0] {\n            if myString[i:i+len(substring)]\
    \ == substring {\n                count++\n            }\n        }\n    }\n \
    \   return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate :=\
    \ how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\", \"x\"\
    ), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n\
    \     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual:\
    \ candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpjcbc2gai_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpjcbc2gai_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc00019a680, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.009s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 0
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            found := true\n            for j\
    \ := 0; j < len(substring); j++ {\n                if i + j >= len(myString) ||\
    \ myString[i + j] != substring[j] {\n                    found = false\n     \
    \               break\n                }\n            }\n            if found\
    \ {\n                count++\n            }\n        }\n    }\n    return count\n\
    }\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.005s\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    var i int = 0\n    for i < len(myString) {\n\
    \        if myString[i] == substring[0] {\n            var j int = 0\n       \
    \     for j < len(substring) {\n                if i + j >= len(myString) || myString[i\
    \ + j] != substring[j] {\n                    break\n                }\n     \
    \           j++\n            }\n            if j == len(substring) {\n       \
    \         count++\n                i += j - 1\n            }\n        }\n    \
    \    i++\n    }\n    return count\n}\n\nfunc TestHow_Many_Times(t *testing.T)\
    \ {\n  candidate := how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \", \"x\"), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected:\
    \ 4 },\n     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n   \
    \  { actual: candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\n    --- FAIL: TestHow_Many_Times/test_num__2\
    \ (0.00s)\n        tmpzibvl9li_test.go:47: expected '%!s(int=4)', got '%!s(int=2)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 0
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    for i := 0; i < len(myString); i++ {\n   \
    \     if myString[i] == substring[0] {\n            var j int = 0\n          \
    \  for j = 0; j < len(substring); j++ {\n                if i + j >= len(myString)\
    \ || myString[i + j] != substring[j] {\n                    break\n          \
    \      }\n            }\n            if j == len(substring) {\n              \
    \  count++\n            }\n        }\n    }\n    return count\n}\n\nfunc TestHow_Many_Times(t\
    \ *testing.T) {\n  candidate := how_many_times\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\", \"x\"), expected: 0 },\n     { actual: candidate(\"xyxyxyx\"\
    , \"x\"), expected: 4 },\n     { actual: candidate(\"cacacacac\", \"cac\"), expected:\
    \ 4 },\n     { actual: candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.005s\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    // TODO: implement\n    return 0\n}\n\nfunc TestHow_Many_Times(t\
    \ *testing.T) {\n  candidate := how_many_times\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\", \"x\"), expected: 0 },\n     { actual: candidate(\"xyxyxyx\"\
    , \"x\"), expected: 4 },\n     { actual: candidate(\"cacacacac\", \"cac\"), expected:\
    \ 4 },\n     { actual: candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\n    --- FAIL: TestHow_Many_Times/test_num__1\
    \ (0.00s)\n        tmphiifod0v_test.go:30: expected '%!s(int=4)', got '%!s(int=0)'\n\
    \    --- FAIL: TestHow_Many_Times/test_num__2 (0.00s)\n        tmphiifod0v_test.go:30:\
    \ expected '%!s(int=4)', got '%!s(int=0)'\n    --- FAIL: TestHow_Many_Times/test_num__3\
    \ (0.00s)\n        tmphiifod0v_test.go:30: expected '%!s(int=1)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074092
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    for i := 0; i < len(myString); i++ {\n   \
    \     if myString[i] == substring[0] {\n            if myString[i:i+len(substring)]\
    \ == substring {\n                count++\n            }\n        }\n    }\n \
    \   return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate :=\
    \ how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\", \"x\"\
    ), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n\
    \     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual:\
    \ candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpjcbc2gai_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpjcbc2gai_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc00019a680, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.009s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    for i := 0; i < len(myString); i++ {\n   \
    \     if myString[i] == substring[0] {\n            if myString[i:i+len(substring)]\
    \ == substring {\n                count++\n            }\n        }\n    }\n \
    \   return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate :=\
    \ how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\", \"x\"\
    ), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n\
    \     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual:\
    \ candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpjcbc2gai_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpjcbc2gai_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc00019a680, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.009s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int\n    for i := 0; i < len(myString); i++ {\n       \
    \ if myString[i] == substring[0] {\n            if myString[i:i+len(substring)]\
    \ == substring {\n                count++\n            }\n        }\n    }\n \
    \   return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate :=\
    \ how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\", \"x\"\
    ), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n\
    \     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual:\
    \ candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpmg4rqceo_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpmg4rqceo_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc0001a0340, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    for i := 0; i < len(myString); i++ {\n   \
    \     if myString[i] == substring[0] {\n            if myString[i:i+len(substring)]\
    \ == substring {\n                count++\n            }\n        }\n    }\n \
    \   return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate :=\
    \ how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\", \"x\"\
    ), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n\
    \     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual:\
    \ candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpjcbc2gai_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpjcbc2gai_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc00019a680, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.009s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 0
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    for i := 0; i < len(myString); i++ {\n   \
    \     if myString[i] == substring[0] {\n            var found bool = true\n  \
    \          for j := 0; j < len(substring); j++ {\n                if i + j >=\
    \ len(myString) || myString[i + j] != substring[j] {\n                    found\
    \ = false\n                    break\n                }\n            }\n     \
    \       if found {\n                count++\n            }\n        }\n    }\n\
    \    return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate :=\
    \ how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\", \"x\"\
    ), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n\
    \     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual:\
    \ candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.005s\n"
  timestamp: 1660074092
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    for i := 0; i < len(myString); i++ {\n   \
    \     if myString[i] == substring[0] {\n            if myString[i:i+len(substring)]\
    \ == substring {\n                count++\n            }\n        }\n    }\n \
    \   return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate :=\
    \ how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\", \"x\"\
    ), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n\
    \     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual:\
    \ candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpjcbc2gai_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpjcbc2gai_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc00019a680, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.009s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    for i := 0; i < len(myString); i++ {\n   \
    \     if myString[i] == substring[0] {\n            var found bool = true\n  \
    \          for j := 0; j < len(substring); j++ {\n                if myString[i+j]\
    \ != substring[j] {\n                    found = false\n                    break\n\
    \                }\n            }\n            if found {\n                count++\n\
    \            }\n        }\n    }\n    return count\n}\n\nfunc TestHow_Many_Times(t\
    \ *testing.T) {\n  candidate := how_many_times\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\", \"x\"), expected: 0 },\n     { actual: candidate(\"xyxyxyx\"\
    , \"x\"), expected: 4 },\n     { actual: candidate(\"cacacacac\", \"cac\"), expected:\
    \ 4 },\n     { actual: candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: index out of\
    \ range [9] with length 9 [recovered]\n\tpanic: runtime error: index out of range\
    \ [9] with length 9\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpwiypogtl_test.go:15\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpwiypogtl_test.go:37\
    \ +0x372\ntesting.tRunner(0xc0001a01a0, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    for i := 0; i < len(myString); i++ {\n   \
    \     if myString[i] == substring[0] {\n            var j int = 0\n          \
    \  for j = 0; j < len(substring); j++ {\n                if myString[i+j] != substring[j]\
    \ {\n                    break\n                }\n            }\n           \
    \ if j == len(substring) {\n                count++\n            }\n        }\n\
    \    }\n    return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate\
    \ := how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\", \"x\"\
    ), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n\
    \     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual:\
    \ candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: index out of\
    \ range [9] with length 9 [recovered]\n\tpanic: runtime error: index out of range\
    \ [9] with length 9\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmp5p9nf0jm_test.go:15\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmp5p9nf0jm_test.go:36\
    \ +0x37a\ntesting.tRunner(0xc0001a01a0, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    for i := 0; i < len(myString); i++ {\n   \
    \     if myString[i] == substring[0] {\n            if myString[i:i+len(substring)]\
    \ == substring {\n                count++\n            }\n        }\n    }\n \
    \   return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate :=\
    \ how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\", \"x\"\
    ), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n\
    \     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual:\
    \ candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpjcbc2gai_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpjcbc2gai_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc00019a680, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.009s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    var i int = 0\n    var j int = 0\n    for\
    \ i < len(myString) {\n        if myString[i] == substring[j] {\n            j++\n\
    \            if j == len(substring) {\n                count++\n             \
    \   j = 0\n            }\n        } else {\n            j = 0\n        }\n   \
    \     i++\n    }\n    return count\n}\n\nfunc TestHow_Many_Times(t *testing.T)\
    \ {\n  candidate := how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \", \"x\"), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected:\
    \ 4 },\n     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n   \
    \  { actual: candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\n    --- FAIL: TestHow_Many_Times/test_num__2\
    \ (0.00s)\n        tmpagta6_px_test.go:44: expected '%!s(int=4)', got '%!s(int=2)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int\n    for i := 0; i < len(myString); i++ {\n       \
    \ if myString[i] == substring[0] {\n            if myString[i:i+len(substring)]\
    \ == substring {\n                count++\n            }\n        }\n    }\n \
    \   return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate :=\
    \ how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\", \"x\"\
    ), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n\
    \     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual:\
    \ candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpmg4rqceo_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpmg4rqceo_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc0001a0340, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 0
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    for i := 0; i < len(myString); i++ {\n   \
    \     if myString[i] == substring[0] {\n            if len(myString) - i >= len(substring)\
    \ {\n                if myString[i:i+len(substring)] == substring {\n        \
    \            count++\n                }\n            }\n        }\n    }\n   \
    \ return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: OK
  stderr: ''
  stdout: "ok  \tcommand-line-arguments\t0.003s\n"
  timestamp: 1660074092
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    for i := 0; i < len(myString); i++ {\n   \
    \     if myString[i] == substring[0] {\n            var j int = 0\n          \
    \  for j = 0; j < len(substring); j++ {\n                if myString[i+j] != substring[j]\
    \ {\n                    break\n                }\n            }\n           \
    \ if j == len(substring) {\n                count++\n            }\n        }\n\
    \    }\n    return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate\
    \ := how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\", \"x\"\
    ), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n\
    \     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual:\
    \ candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: index out of\
    \ range [9] with length 9 [recovered]\n\tpanic: runtime error: index out of range\
    \ [9] with length 9\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmp5p9nf0jm_test.go:15\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmp5p9nf0jm_test.go:36\
    \ +0x37a\ntesting.tRunner(0xc0001a01a0, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int\n    for i := 0; i < len(myString); i++ {\n       \
    \ if myString[i] == substring[0] {\n            if myString[i:i+len(substring)]\
    \ == substring {\n                count++\n            }\n        }\n    }\n \
    \   return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate :=\
    \ how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\", \"x\"\
    ), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n\
    \     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual:\
    \ candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpmg4rqceo_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpmg4rqceo_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc0001a0340, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    var i int = 0\n    for i < len(myString) {\n\
    \        if myString[i] == substring[0] {\n            var j int = 0\n       \
    \     for j < len(substring) {\n                if myString[i+j] != substring[j]\
    \ {\n                    break\n                }\n                j++\n     \
    \       }\n            if j == len(substring) {\n                count++\n   \
    \         }\n        }\n        i++\n    }\n    return count\n}\n\nfunc TestHow_Many_Times(t\
    \ *testing.T) {\n  candidate := how_many_times\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\", \"x\"), expected: 0 },\n     { actual: candidate(\"xyxyxyx\"\
    , \"x\"), expected: 4 },\n     { actual: candidate(\"cacacacac\", \"cac\"), expected:\
    \ 4 },\n     { actual: candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: index out of\
    \ range [9] with length 9 [recovered]\n\tpanic: runtime error: index out of range\
    \ [9] with length 9\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpk4hm1c5x_test.go:16\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpk4hm1c5x_test.go:39\
    \ +0x37a\ntesting.tRunner(0xc0001a0340, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    var i int = 0\n    for i < len(myString) {\n\
    \        if myString[i] == substring[0] {\n            var j int = 0\n       \
    \     for j < len(substring) {\n                if myString[i+j] != substring[j]\
    \ {\n                    break\n                }\n                j++\n     \
    \       }\n            if j == len(substring) {\n                count++\n   \
    \         }\n        }\n        i++\n    }\n    return count\n}\n\nfunc TestHow_Many_Times(t\
    \ *testing.T) {\n  candidate := how_many_times\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\", \"x\"), expected: 0 },\n     { actual: candidate(\"xyxyxyx\"\
    , \"x\"), expected: 4 },\n     { actual: candidate(\"cacacacac\", \"cac\"), expected:\
    \ 4 },\n     { actual: candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: index out of\
    \ range [9] with length 9 [recovered]\n\tpanic: runtime error: index out of range\
    \ [9] with length 9\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpk4hm1c5x_test.go:16\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpk4hm1c5x_test.go:39\
    \ +0x37a\ntesting.tRunner(0xc0001a0340, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    for i := 0; i < len(myString); i++ {\n   \
    \     if myString[i] == substring[0] {\n            if myString[i:i+len(substring)]\
    \ == substring {\n                count++\n            }\n        }\n    }\n \
    \   return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate :=\
    \ how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\", \"x\"\
    ), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n\
    \     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual:\
    \ candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpjcbc2gai_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpjcbc2gai_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc00019a680, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.009s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int\n    for i := 0; i < len(myString); i++ {\n       \
    \ if myString[i] == substring[0] {\n            if myString[i:i+len(substring)]\
    \ == substring {\n                count++\n            }\n        }\n    }\n \
    \   return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate :=\
    \ how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\", \"x\"\
    ), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n\
    \     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual:\
    \ candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpmg4rqceo_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpmg4rqceo_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc0001a0340, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    for i := 0; i < len(myString); i++ {\n   \
    \     if myString[i] == substring[0] {\n            var j int = 0\n          \
    \  for j = 0; j < len(substring); j++ {\n                if myString[i+j] != substring[j]\
    \ {\n                    break\n                }\n            }\n           \
    \ if j == len(substring) {\n                count++\n            }\n        }\n\
    \    }\n    return count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate\
    \ := how_many_times\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\", \"x\"\
    ), expected: 0 },\n     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n\
    \     { actual: candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual:\
    \ candidate(\"john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range\
    \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\
    \t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\
    \t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\
    \t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: index out of\
    \ range [9] with length 9 [recovered]\n\tpanic: runtime error: index out of range\
    \ [9] with length 9\n\ngoroutine 6 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc000014360})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmp5p9nf0jm_test.go:15\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmp5p9nf0jm_test.go:36\
    \ +0x37a\ntesting.tRunner(0xc0001a01a0, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    var count int = 0\n    var i int = 0\n    var j int = 0\n    var\
    \ k int = 0\n    var l int = 0\n    var m int = 0\n    var n int = 0\n    var\
    \ o int = 0\n    var p int = 0\n    var q int = 0\n    var r int = 0\n    var\
    \ s int = 0\n    var t int = 0\n    var u int = 0\n    var v int = 0\n    var\
    \ w int = 0\n    var x int = 0\n    var y int = 0\n    var z int = 0\n    var\
    \ aa int = 0\n    var ab int = 0\n    var ac int = 0\n    var ad int = 0\n   \
    \ var ae int = 0\n    var af int = 0\n    var ag int = 0\n    var ah int = 0\n\
    \    var ai int = 0\n    var aj int = 0\n    var ak int = 0\n    var al int =\
    \ 0\n    var am int = 0\n    var an int = 0\n    var ao int = 0\n    var ap int\
    \ = 0\n    var aq int = 0\n    var ar int = 0\n    var as int = 0\n    var at\
    \ int = 0\n    var au int = 0\n    var av int = 0\n    var aw int = 0\n    var\
    \ ax int = 0\n    var ay int = 0\n    var az int = 0\n    var ba int = 0\n   \
    \ var bb int = 0\n    var bc int = 0\n    var bd int = 0\n    var be int = 0\n\
    \    var bf int = 0\n    var bg int = 0\n    var bh int = 0\n    var bi int =\
    \ 0\n    var bj int = 0\n    var bk int = 0\n    var bl int = 0\n    var bm int\
    \ = 0\n    var bn int = 0\n    var bo int = 0\n    var bp int = 0\n    var bq\
    \ int = 0\n    var br int = 0\n    var bs int = 0\n    var bt int = 0\n    var\
    \ bu int = 0\n    var bv int = 0\n    var bw int = 0\n    var bx int = 0\n   \
    \ var by int = 0\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpa0fsajz4_test.go:80:6: expected ''('', found TestHow_Many_Times

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660074092
- exit_code: 1
  program: "package how_many_times_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Find how many times a given substring can be found in the original string.\
    \ Count overlaping cases.\nfunc how_many_times(myString string, substring string)\
    \ int {\n    count := 0\n    for i := 0; i < len(myString); i++ {\n        if\
    \ myString[i] == substring[0] {\n            if myString[i:i+len(substring)] ==\
    \ substring {\n                count++\n            }\n        }\n    }\n    return\
    \ count\n}\n\nfunc TestHow_Many_Times(t *testing.T) {\n  candidate := how_many_times\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\", \"x\"), expected: 0 },\n\
    \     { actual: candidate(\"xyxyxyx\", \"x\"), expected: 4 },\n     { actual:\
    \ candidate(\"cacacacac\", \"cac\"), expected: 4 },\n     { actual: candidate(\"\
    john doe\", \"john\"), expected: 1 },\n   }\n\n\tfor i, tc := range tests {\n\t\
    \tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestHow_Many_Times (0.00s)\npanic: runtime error: slice bounds\
    \ out of range [:11] with length 9 [recovered]\n\tpanic: runtime error: slice\
    \ bounds out of range [:11] with length 9\n\ngoroutine 18 [running]:\ntesting.tRunner.func1.2({0x512620,\
    \ 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1389\
    \ +0x24e\ntesting.tRunner.func1()\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1392\
    \ +0x39f\npanic({0x512620, 0xc00014e000})\n\t/home/a.guha/.conda/envs/polyglot/go/src/runtime/panic.go:838\
    \ +0x207\ncommand-line-arguments_test.how_many_times(...)\n\t/tmp/tmpgc0rhozb_test.go:13\n\
    command-line-arguments_test.TestHow_Many_Times(0x0?)\n\t/tmp/tmpgc0rhozb_test.go:30\
    \ +0x3b2\ntesting.tRunner(0xc000119040, 0x527f60)\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1439\
    \ +0x102\ncreated by testing.(*T).Run\n\t/home/a.guha/.conda/envs/polyglot/go/src/testing/testing.go:1486\
    \ +0x35f\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660074091

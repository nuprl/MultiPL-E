language: go_test.go
name: HumanEval_19_sort_numbers
results:
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpgwkciw2g_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpgwkciw2g_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpgwkciw2g_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpgwkciw2g_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // TODO: Implement\
    \ me\n    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate\
    \ := sort_numbers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"three\"), expected: \"three\" },\n     {\
    \ actual: candidate(\"three five nine\"), expected: \"three five nine\" },\n \
    \    { actual: candidate(\"five zero four seven nine eight\"), expected: \"zero\
    \ four five seven eight nine\" },\n     { actual: candidate(\"six five four three\
    \ two one zero\"), expected: \"zero one two three four five six\" },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpwh1gl_j7_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpwh1gl_j7_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpwh1gl_j7_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpwh1gl_j7_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpgwkciw2g_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpgwkciw2g_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpgwkciw2g_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpgwkciw2g_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpgwkciw2g_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpgwkciw2g_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpgwkciw2g_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpgwkciw2g_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpgwkciw2g_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpgwkciw2g_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpgwkciw2g_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpgwkciw2g_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    nums := map[string]int{\n\
    \        \"zero\": 0,\n        \"one\": 1,\n        \"two\": 2,\n        \"three\"\
    : 3,\n        \"four\": 4,\n        \"five\": 5,\n        \"six\": 6,\n      \
    \  \"seven\": 7,\n        \"eight\": 8,\n        \"nine\": 9,\n    }\n    num_list\
    \ := []int{}\n    for _, num := range numbers {\n        num_list = append(num_list,\
    \ nums[string(num)])\n    }\n    fmt.Println(num_list)\n    return \"\"\n}\n\n\
    func TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"three\
    \ five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "[]\n[0 0 0 0 0]\n[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n[0 0 0 0 0 0 0 0 0 0\
    \ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\
    \ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n--- FAIL: TestSort_Numbers (0.00s)\n    ---\
    \ FAIL: TestSort_Numbers/test_num__1 (0.00s)\n        tmpw8km775q_test.go:49:\
    \ expected 'three', got ''\n    --- FAIL: TestSort_Numbers/test_num__2 (0.00s)\n\
    \        tmpw8km775q_test.go:49: expected 'three five nine', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__3 (0.00s)\n        tmpw8km775q_test.go:49: expected\
    \ 'zero four five seven eight nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__4\
    \ (0.00s)\n        tmpw8km775q_test.go:49: expected 'zero one two three four five\
    \ six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // Your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpj96ceon6_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpj96ceon6_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpj96ceon6_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpj96ceon6_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // Your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpj96ceon6_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpj96ceon6_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpj96ceon6_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpj96ceon6_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    return \"\"\n}\n\
    \nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"three\
    \ five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpz8osohel_test.go:32: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpz8osohel_test.go:32: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpz8osohel_test.go:32: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpz8osohel_test.go:32:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    return \"\"\n}\n\
    \nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"three\
    \ five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpz8osohel_test.go:32: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpz8osohel_test.go:32: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpz8osohel_test.go:32: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpz8osohel_test.go:32:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpgwkciw2g_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpgwkciw2g_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpgwkciw2g_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpgwkciw2g_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    var nums = make([]int,\
    \ 0)\n    var numMap = map[string]int{\n        \"zero\": 0,\n        \"one\"\
    : 1,\n        \"two\": 2,\n        \"three\": 3,\n        \"four\": 4,\n     \
    \   \"five\": 5,\n        \"six\": 6,\n        \"seven\": 7,\n        \"eight\"\
    : 8,\n        \"nine\": 9,\n    }\n    var numsStr = make([]string, 0)\n    for\
    \ _, num := range numbers {\n        numsStr = append(numsStr, string(num))\n\
    \    }\n    for _, num := range numsStr {\n        nums = append(nums, numMap[num])\n\
    \    }\n    for i := 0; i < len(nums); i++ {\n        for j := i + 1; j < len(nums);\
    \ j++ {\n            if nums[i] > nums[j] {\n                nums[i], nums[j]\
    \ = nums[j], nums[i]\n            }\n        }\n    }\n    var result = \"\"\n\
    \    for _, num := range nums {\n        for k, v := range numMap {\n        \
    \    if v == num {\n                result += k\n            }\n        }\n  \
    \  }\n    return result\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate\
    \ := sort_numbers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"three\"), expected: \"three\" },\n     {\
    \ actual: candidate(\"three five nine\"), expected: \"three five nine\" },\n \
    \    { actual: candidate(\"five zero four seven nine eight\"), expected: \"zero\
    \ four five seven eight nine\" },\n     { actual: candidate(\"six five four three\
    \ two one zero\"), expected: \"zero one two three four five six\" },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp4561z136_test.go:67: expected 'three', got 'zerozerozerozerozero'\n\
    \    --- FAIL: TestSort_Numbers/test_num__2 (0.00s)\n        tmp4561z136_test.go:67:\
    \ expected 'three five nine', got 'zerozerozerozerozerozerozerozerozerozerozerozerozerozerozero'\n\
    \    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n        tmp4561z136_test.go:67:\
    \ expected 'zero four five seven eight nine', got 'zerozerozerozerozerozerozerozerozerozerozerozerozerozerozerozerozerozerozerozerozerozerozerozerozerozerozerozerozerozerozero'\n\
    \    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp4561z136_test.go:67:\
    \ expected 'zero one two three four five six', got 'zerozerozerozerozerozerozerozerozerozerozerozerozerozerozerozerozerozerozerozerozerozerozerozerozerozerozerozerozerozerozerozero'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    return \"\"\n}\n\
    \nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"three\
    \ five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpz8osohel_test.go:32: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpz8osohel_test.go:32: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpz8osohel_test.go:32: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpz8osohel_test.go:32:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpgwkciw2g_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpgwkciw2g_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpgwkciw2g_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpgwkciw2g_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpgwkciw2g_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpgwkciw2g_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpgwkciw2g_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpgwkciw2g_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    return \"\"\n}\n\
    \nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"three\
    \ five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpz8osohel_test.go:32: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpz8osohel_test.go:32: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpz8osohel_test.go:32: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpz8osohel_test.go:32:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    return \"\"\n}\n\
    \nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"three\
    \ five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpz8osohel_test.go:32: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpz8osohel_test.go:32: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpz8osohel_test.go:32: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpz8osohel_test.go:32:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpgwkciw2g_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpgwkciw2g_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpgwkciw2g_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpgwkciw2g_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // Your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpj96ceon6_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpj96ceon6_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpj96ceon6_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpj96ceon6_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    nums := map[string]int{\n\
    \        \"zero\": 0,\n        \"one\": 1,\n        \"two\": 2,\n        \"three\"\
    : 3,\n        \"four\": 4,\n        \"five\": 5,\n        \"six\": 6,\n      \
    \  \"seven\": 7,\n        \"eight\": 8,\n        \"nine\": 9,\n    }\n    num_list\
    \ := []int{}\n    for _, num := range numbers {\n        num_list = append(num_list,\
    \ nums[string(num)])\n    }\n    fmt.Println(num_list)\n    return \"\"\n}\n\n\
    func TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"three\
    \ five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "[]\n[0 0 0 0 0]\n[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n[0 0 0 0 0 0 0 0 0 0\
    \ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\
    \ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n--- FAIL: TestSort_Numbers (0.00s)\n    ---\
    \ FAIL: TestSort_Numbers/test_num__1 (0.00s)\n        tmpw8km775q_test.go:49:\
    \ expected 'three', got ''\n    --- FAIL: TestSort_Numbers/test_num__2 (0.00s)\n\
    \        tmpw8km775q_test.go:49: expected 'three five nine', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__3 (0.00s)\n        tmpw8km775q_test.go:49: expected\
    \ 'zero four five seven eight nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__4\
    \ (0.00s)\n        tmpw8km775q_test.go:49: expected 'zero one two three four five\
    \ six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    var nums []int\n\
    \    for _, num := range numbers {\n        nums = append(nums, int(num))\n  \
    \  }\n    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate\
    \ := sort_numbers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"three\"), expected: \"three\" },\n     {\
    \ actual: candidate(\"three five nine\"), expected: \"three five nine\" },\n \
    \    { actual: candidate(\"five zero four seven nine eight\"), expected: \"zero\
    \ four five seven eight nine\" },\n     { actual: candidate(\"six five four three\
    \ two one zero\"), expected: \"zero one two three four five six\" },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpvb_yt0nc_test.go:36: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpvb_yt0nc_test.go:36: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpvb_yt0nc_test.go:36: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpvb_yt0nc_test.go:36:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpgwkciw2g_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpgwkciw2g_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpgwkciw2g_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpgwkciw2g_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpgwkciw2g_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpgwkciw2g_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpgwkciw2g_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpgwkciw2g_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // Your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpj96ceon6_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpj96ceon6_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpj96ceon6_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpj96ceon6_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpgwkciw2g_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpgwkciw2g_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpgwkciw2g_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpgwkciw2g_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpgwkciw2g_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpgwkciw2g_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpgwkciw2g_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpgwkciw2g_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    return \"\"\n}\n\
    \nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"three\
    \ five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpz8osohel_test.go:32: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpz8osohel_test.go:32: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpz8osohel_test.go:32: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpz8osohel_test.go:32:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpgwkciw2g_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpgwkciw2g_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpgwkciw2g_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpgwkciw2g_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpgwkciw2g_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpgwkciw2g_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpgwkciw2g_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpgwkciw2g_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpgwkciw2g_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpgwkciw2g_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpgwkciw2g_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpgwkciw2g_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // Your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpj96ceon6_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpj96ceon6_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpj96ceon6_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpj96ceon6_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // Your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpj96ceon6_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpj96ceon6_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpj96ceon6_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpj96ceon6_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpgwkciw2g_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpgwkciw2g_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpgwkciw2g_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpgwkciw2g_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    return \"\"\n}\n\
    \nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"three\
    \ five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpz8osohel_test.go:32: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpz8osohel_test.go:32: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpz8osohel_test.go:32: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpz8osohel_test.go:32:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 2
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    nums := []int{}\n\
    \    for _, n := range strings.Split(numbers, \" \") {\n        nums = append(nums,\
    \ number_to_int(n))\n    }\n    sort.Ints(nums)\n    return ints_to_numbers(nums)\n\
    }\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"three\
    \ five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpcnlbr3qw_test.go:13:23: undefined: strings

    /tmp/tmpcnlbr3qw_test.go:14:29: undefined: number_to_int

    /tmp/tmpcnlbr3qw_test.go:16:5: undefined: sort

    /tmp/tmpcnlbr3qw_test.go:17:12: undefined: ints_to_numbers

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    return \"\"\n}\n\
    \nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"three\
    \ five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpz8osohel_test.go:32: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpz8osohel_test.go:32: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpz8osohel_test.go:32: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpz8osohel_test.go:32:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpgwkciw2g_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpgwkciw2g_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpgwkciw2g_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpgwkciw2g_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    return \"\"\n}\n\
    \nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"three\
    \ five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpz8osohel_test.go:32: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpz8osohel_test.go:32: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpz8osohel_test.go:32: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpz8osohel_test.go:32:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    return \"\"\n}\n\
    \nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"three\
    \ five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpz8osohel_test.go:32: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpz8osohel_test.go:32: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpz8osohel_test.go:32: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpz8osohel_test.go:32:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // Your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpj96ceon6_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpj96ceon6_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpj96ceon6_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpj96ceon6_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // Your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpj96ceon6_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpj96ceon6_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpj96ceon6_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpj96ceon6_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // Your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpj96ceon6_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpj96ceon6_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpj96ceon6_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpj96ceon6_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    return \"\"\n}\n\
    \nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"three\
    \ five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpz8osohel_test.go:32: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpz8osohel_test.go:32: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpz8osohel_test.go:32: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpz8osohel_test.go:32:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpgwkciw2g_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpgwkciw2g_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpgwkciw2g_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpgwkciw2g_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // Your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpj96ceon6_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpj96ceon6_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpj96ceon6_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpj96ceon6_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // Your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpj96ceon6_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpj96ceon6_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpj96ceon6_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpj96ceon6_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // Your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpj96ceon6_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpj96ceon6_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpj96ceon6_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpj96ceon6_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    return \"\"\n}\n\
    \nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"three\
    \ five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpz8osohel_test.go:32: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpz8osohel_test.go:32: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpz8osohel_test.go:32: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpz8osohel_test.go:32:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // Your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpj96ceon6_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpj96ceon6_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpj96ceon6_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpj96ceon6_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // Your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpj96ceon6_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpj96ceon6_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpj96ceon6_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpj96ceon6_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // Your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpj96ceon6_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpj96ceon6_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpj96ceon6_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpj96ceon6_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    nums := map[string]int{\n\
    \        \"zero\": 0,\n        \"one\": 1,\n        \"two\": 2,\n        \"three\"\
    : 3,\n        \"four\": 4,\n        \"five\": 5,\n        \"six\": 6,\n      \
    \  \"seven\": 7,\n        \"eight\": 8,\n        \"nine\": 9,\n    }\n    num_list\
    \ := []int{}\n    for _, num := range numbers {\n        num_list = append(num_list,\
    \ nums[string(num)])\n    }\n    fmt.Println(num_list)\n    return \"\"\n}\n\n\
    func TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"three\
    \ five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "[]\n[0 0 0 0 0]\n[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n[0 0 0 0 0 0 0 0 0 0\
    \ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\
    \ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n--- FAIL: TestSort_Numbers (0.00s)\n    ---\
    \ FAIL: TestSort_Numbers/test_num__1 (0.00s)\n        tmpw8km775q_test.go:49:\
    \ expected 'three', got ''\n    --- FAIL: TestSort_Numbers/test_num__2 (0.00s)\n\
    \        tmpw8km775q_test.go:49: expected 'three five nine', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__3 (0.00s)\n        tmpw8km775q_test.go:49: expected\
    \ 'zero four five seven eight nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__4\
    \ (0.00s)\n        tmpw8km775q_test.go:49: expected 'zero one two three four five\
    \ six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // Your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpj96ceon6_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpj96ceon6_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpj96ceon6_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpj96ceon6_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // Your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpj96ceon6_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpj96ceon6_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpj96ceon6_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpj96ceon6_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    return \"\"\n}\n\
    \nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"three\
    \ five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpz8osohel_test.go:32: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpz8osohel_test.go:32: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpz8osohel_test.go:32: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpz8osohel_test.go:32:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // Your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpj96ceon6_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpj96ceon6_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpj96ceon6_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpj96ceon6_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // Your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpj96ceon6_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpj96ceon6_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpj96ceon6_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpj96ceon6_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // Your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpj96ceon6_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpj96ceon6_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpj96ceon6_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpj96ceon6_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    return \"\"\n}\n\
    \nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"three\
    \ five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpz8osohel_test.go:32: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpz8osohel_test.go:32: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpz8osohel_test.go:32: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpz8osohel_test.go:32:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    return \"\"\n}\n\
    \nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"three\
    \ five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpz8osohel_test.go:32: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpz8osohel_test.go:32: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpz8osohel_test.go:32: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpz8osohel_test.go:32:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    return \"\"\n}\n\
    \nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"three\
    \ five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpz8osohel_test.go:32: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpz8osohel_test.go:32: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpz8osohel_test.go:32: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpz8osohel_test.go:32:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpgwkciw2g_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpgwkciw2g_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpgwkciw2g_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpgwkciw2g_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    return \"\"\n}\n\
    \nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"three\
    \ five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpz8osohel_test.go:32: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpz8osohel_test.go:32: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpz8osohel_test.go:32: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpz8osohel_test.go:32:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // Your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpj96ceon6_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpj96ceon6_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpj96ceon6_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpj96ceon6_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // Your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpj96ceon6_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpj96ceon6_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpj96ceon6_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpj96ceon6_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpgwkciw2g_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpgwkciw2g_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpgwkciw2g_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpgwkciw2g_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpgwkciw2g_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpgwkciw2g_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpgwkciw2g_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpgwkciw2g_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpgwkciw2g_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpgwkciw2g_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpgwkciw2g_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpgwkciw2g_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpgwkciw2g_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpgwkciw2g_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpgwkciw2g_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpgwkciw2g_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    return \"\"\n}\n\
    \nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"three\
    \ five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpz8osohel_test.go:32: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpz8osohel_test.go:32: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpz8osohel_test.go:32: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpz8osohel_test.go:32:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    return \"\"\n}\n\
    \nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"three\
    \ five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpz8osohel_test.go:32: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpz8osohel_test.go:32: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpz8osohel_test.go:32: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpz8osohel_test.go:32:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // Your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpj96ceon6_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpj96ceon6_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpj96ceon6_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpj96ceon6_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpgwkciw2g_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpgwkciw2g_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpgwkciw2g_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpgwkciw2g_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // Your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpj96ceon6_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpj96ceon6_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpj96ceon6_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpj96ceon6_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // Your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpj96ceon6_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpj96ceon6_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpj96ceon6_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpj96ceon6_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // Your code here\n\
    \    return numbers\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate :=\
    \ sort_numbers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n\
    \     { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__3\
    \ (0.00s)\n        tmp8v5jmzeo_test.go:33: expected 'zero four five seven eight\
    \ nine', got 'five zero four seven nine eight'\n    --- FAIL: TestSort_Numbers/test_num__4\
    \ (0.00s)\n        tmp8v5jmzeo_test.go:33: expected 'zero one two three four five\
    \ six', got 'six five four three two one zero'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // Your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpj96ceon6_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpj96ceon6_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpj96ceon6_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpj96ceon6_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    return \"\"\n}\n\
    \nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"three\
    \ five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpz8osohel_test.go:32: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpz8osohel_test.go:32: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpz8osohel_test.go:32: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpz8osohel_test.go:32:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 2
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    var nums []int\n\
    \    for _, num := range numbers {\n        nums = append(nums, int(num))\n  \
    \  }\n    for i := 0; i < len(nums); i++ {\n        for j := i + 1; j < len(nums);\
    \ j++ {\n            if nums[i] > nums[j] {\n                nums[i], nums[j]\
    \ = nums[j], nums[i]\n            }\n        }\n    }\n    var result string\n\
    \    for _, num := range nums {\n        result += string(num)\n    }\n    return\
    \ result\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test

    /tmp/tmppx9ya0rc_test.go:25:19: conversion from int to string yields a string
    of one rune, not a string of digits (did you mean fmt.Sprint(x)?)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // Your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpj96ceon6_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpj96ceon6_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpj96ceon6_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpj96ceon6_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    return \"\"\n}\n\
    \nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"three\
    \ five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpz8osohel_test.go:32: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpz8osohel_test.go:32: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpz8osohel_test.go:32: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpz8osohel_test.go:32:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    return \"\"\n}\n\
    \nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"three\
    \ five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpz8osohel_test.go:32: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpz8osohel_test.go:32: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpz8osohel_test.go:32: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpz8osohel_test.go:32:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 2
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    var nums []int\n\
    \    for _, num := range numbers {\n        nums = append(nums, int(num - '0'))\n\
    \    }\n    for i := 0; i < len(nums); i++ {\n        for j := i + 1; j < len(nums);\
    \ j++ {\n            if nums[i] > nums[j] {\n                nums[i], nums[j]\
    \ = nums[j], nums[i]\n            }\n        }\n    }\n    var result string\n\
    \    for _, num := range nums {\n        result += string(num + '0')\n    }\n\
    \    return result\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate :=\
    \ sort_numbers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n\
    \     { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test

    /tmp/tmpb7y8ib5l_test.go:25:19: conversion from int to string yields a string
    of one rune, not a string of digits (did you mean fmt.Sprint(x)?)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // Your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpj96ceon6_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpj96ceon6_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpj96ceon6_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpj96ceon6_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // Your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpj96ceon6_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpj96ceon6_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpj96ceon6_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpj96ceon6_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    return \"\"\n}\n\
    \nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"three\
    \ five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpz8osohel_test.go:32: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpz8osohel_test.go:32: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpz8osohel_test.go:32: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpz8osohel_test.go:32:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    return \"\"\n}\n\
    \nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"three\
    \ five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpz8osohel_test.go:32: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpz8osohel_test.go:32: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpz8osohel_test.go:32: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpz8osohel_test.go:32:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // Your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpj96ceon6_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpj96ceon6_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpj96ceon6_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpj96ceon6_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 2
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    var nums []int\n\
    \    for _, num := range strings.Split(numbers, \" \") {\n        switch num {\n\
    \        case \"zero\":\n            nums = append(nums, 0)\n        case \"one\"\
    :\n            nums = append(nums, 1)\n        case \"two\":\n            nums\
    \ = append(nums, 2)\n        case \"three\":\n            nums = append(nums,\
    \ 3)\n        case \"four\":\n            nums = append(nums, 4)\n        case\
    \ \"five\":\n            nums = append(nums, 5)\n        case \"six\":\n     \
    \       nums = append(nums, 6)\n        case \"seven\":\n            nums = append(nums,\
    \ 7)\n        case \"eight\":\n            nums = append(nums, 8)\n        case\
    \ \"nine\":\n            nums = append(nums, 9)\n        }\n    }\n    sort.Ints(nums)\n\
    \    var result []string\n    for _, num := range nums {\n        switch num {\n\
    \        case 0:\n            result = append(result, \"zero\")\n        case\
    \ 1:\n            result = append(result, \"one\")\n        case 2:\n        \
    \    result = append(result, \"two\")\n        case 3:\n            result = append(result,\
    \ \"three\")\n        case 4:\n            result = append(result, \"four\")\n\
    \        case 5:\n            result = append(result, \"five\")\n        case\
    \ 6:\n            result = append(result, \"six\")\n        case 7:\n        \
    \    result = append(result, \"seven\")\n        case 8:\n            result =\
    \ append(result, \"eight\")\n        case 9:\n            result = append(result,\
    \ \"nine\")\n        }\n    }\n    return strings.Join(result, \" \")\n}\n\nfunc\
    \ TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"\
    three\"), expected: \"three\" },\n     { actual: candidate(\"three five nine\"\
    ), expected: \"three five nine\" },\n     { actual: candidate(\"five zero four\
    \ seven nine eight\"), expected: \"zero four five seven eight nine\" },\n    \
    \ { actual: candidate(\"six five four three two one zero\"), expected: \"zero\
    \ one two three four five six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpuq87wwk5_test.go:13:25: undefined: strings

    /tmp/tmpuq87wwk5_test.go:37:5: undefined: sort

    /tmp/tmpuq87wwk5_test.go:63:12: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    return \"\"\n}\n\
    \nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"three\
    \ five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpz8osohel_test.go:32: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpz8osohel_test.go:32: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpz8osohel_test.go:32: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpz8osohel_test.go:32:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // Your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpj96ceon6_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpj96ceon6_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpj96ceon6_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpj96ceon6_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    return \"\"\n}\n\
    \nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"three\
    \ five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpz8osohel_test.go:32: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpz8osohel_test.go:32: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpz8osohel_test.go:32: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpz8osohel_test.go:32:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // Your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpj96ceon6_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpj96ceon6_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpj96ceon6_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpj96ceon6_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    return \"\"\n}\n\
    \nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"three\
    \ five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpz8osohel_test.go:32: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpz8osohel_test.go:32: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpz8osohel_test.go:32: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpz8osohel_test.go:32:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpgwkciw2g_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpgwkciw2g_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpgwkciw2g_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpgwkciw2g_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpgwkciw2g_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpgwkciw2g_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpgwkciw2g_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpgwkciw2g_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    nums := map[string]int{\n\
    \        \"zero\": 0,\n        \"one\": 1,\n        \"two\": 2,\n        \"three\"\
    : 3,\n        \"four\": 4,\n        \"five\": 5,\n        \"six\": 6,\n      \
    \  \"seven\": 7,\n        \"eight\": 8,\n        \"nine\": 9,\n    }\n    num_list\
    \ := []int{}\n    for _, num := range numbers {\n        num_list = append(num_list,\
    \ nums[string(num)])\n    }\n    return fmt.Sprintf(\"%v\", num_list)\n}\n\nfunc\
    \ TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"\
    three\"), expected: \"three\" },\n     { actual: candidate(\"three five nine\"\
    ), expected: \"three five nine\" },\n     { actual: candidate(\"five zero four\
    \ seven nine eight\"), expected: \"zero four five seven eight nine\" },\n    \
    \ { actual: candidate(\"six five four three two one zero\"), expected: \"zero\
    \ one two three four five six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\t\
    t.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__0\
    \ (0.00s)\n        tmp8ibataza_test.go:48: expected '', got '[]'\n    --- FAIL:\
    \ TestSort_Numbers/test_num__1 (0.00s)\n        tmp8ibataza_test.go:48: expected\
    \ 'three', got '[0 0 0 0 0]'\n    --- FAIL: TestSort_Numbers/test_num__2 (0.00s)\n\
    \        tmp8ibataza_test.go:48: expected 'three five nine', got '[0 0 0 0 0 0\
    \ 0 0 0 0 0 0 0 0 0]'\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n  \
    \      tmp8ibataza_test.go:48: expected 'zero four five seven eight nine', got\
    \ '[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]'\n    --- FAIL:\
    \ TestSort_Numbers/test_num__4 (0.00s)\n        tmp8ibataza_test.go:48: expected\
    \ 'zero one two three four five six', got '[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\
    \ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\n\
    FAIL\n"
  timestamp: 1660074227
- exit_code: 2
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    nums := map[string]int{\n\
    \        \"zero\": 0,\n        \"one\": 1,\n        \"two\": 2,\n        \"three\"\
    : 3,\n        \"four\": 4,\n        \"five\": 5,\n        \"six\": 6,\n      \
    \  \"seven\": 7,\n        \"eight\": 8,\n        \"nine\": 9,\n    }\n    nums_sorted\
    \ := []string{}\n    for _, num := range strings.Split(numbers, \" \") {\n   \
    \     nums_sorted = append(nums_sorted, num)\n    }\n    sort.Slice(nums_sorted,\
    \ func(i, j int) bool {\n        return nums[nums_sorted[i]] < nums[nums_sorted[j]]\n\
    \    })\n    return strings.Join(nums_sorted, \" \")\n}\n\nfunc TestSort_Numbers(t\
    \ *testing.T) {\n  candidate := sort_numbers\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"three\"), expected:\
    \ \"three\" },\n     { actual: candidate(\"three five nine\"), expected: \"three\
    \ five nine\" },\n     { actual: candidate(\"five zero four seven nine eight\"\
    ), expected: \"zero four five seven eight nine\" },\n     { actual: candidate(\"\
    six five four three two one zero\"), expected: \"zero one two three four five\
    \ six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp0a2gneg0_test.go:25:25: undefined: strings

    /tmp/tmp0a2gneg0_test.go:28:5: undefined: sort

    /tmp/tmp0a2gneg0_test.go:31:12: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpgwkciw2g_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpgwkciw2g_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpgwkciw2g_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpgwkciw2g_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpgwkciw2g_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpgwkciw2g_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpgwkciw2g_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpgwkciw2g_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpgwkciw2g_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpgwkciw2g_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpgwkciw2g_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpgwkciw2g_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    return \"\"\n}\n\
    \nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"three\
    \ five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpz8osohel_test.go:32: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpz8osohel_test.go:32: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpz8osohel_test.go:32: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpz8osohel_test.go:32:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpgwkciw2g_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpgwkciw2g_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpgwkciw2g_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpgwkciw2g_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    return \"\"\n}\n\
    \nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"three\
    \ five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpz8osohel_test.go:32: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpz8osohel_test.go:32: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpz8osohel_test.go:32: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpz8osohel_test.go:32:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    return \"\"\n}\n\
    \nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"three\
    \ five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpz8osohel_test.go:32: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpz8osohel_test.go:32: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpz8osohel_test.go:32: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpz8osohel_test.go:32:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    var nums []int\n\
    \    var nums_map = map[string]int{\n        \"zero\": 0,\n        \"one\": 1,\n\
    \        \"two\": 2,\n        \"three\": 3,\n        \"four\": 4,\n        \"\
    five\": 5,\n        \"six\": 6,\n        \"seven\": 7,\n        \"eight\": 8,\n\
    \        \"nine\": 9,\n    }\n    for _, num := range numbers {\n        nums\
    \ = append(nums, nums_map[string(num)])\n    }\n    for i := 0; i < len(nums);\
    \ i++ {\n        for j := i + 1; j < len(nums); j++ {\n            if nums[i]\
    \ > nums[j] {\n                nums[i], nums[j] = nums[j], nums[i]\n         \
    \   }\n        }\n    }\n    var nums_str string\n    for _, num := range nums\
    \ {\n        for k, v := range nums_map {\n            if num == v {\n       \
    \         nums_str += k\n            }\n        }\n    }\n    return nums_str\n\
    }\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"three\
    \ five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp1r1vyfc4_test.go:63: expected 'three', got 'zerozerozerozerozero'\n\
    \    --- FAIL: TestSort_Numbers/test_num__2 (0.00s)\n        tmp1r1vyfc4_test.go:63:\
    \ expected 'three five nine', got 'zerozerozerozerozerozerozerozerozerozerozerozerozerozerozero'\n\
    \    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n        tmp1r1vyfc4_test.go:63:\
    \ expected 'zero four five seven eight nine', got 'zerozerozerozerozerozerozerozerozerozerozerozerozerozerozerozerozerozerozerozerozerozerozerozerozerozerozerozerozerozerozero'\n\
    \    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp1r1vyfc4_test.go:63:\
    \ expected 'zero one two three four five six', got 'zerozerozerozerozerozerozerozerozerozerozerozerozerozerozerozerozerozerozerozerozerozerozerozerozerozerozerozerozerozerozerozero'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    return \"\"\n}\n\
    \nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"three\
    \ five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpz8osohel_test.go:32: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpz8osohel_test.go:32: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpz8osohel_test.go:32: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpz8osohel_test.go:32:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // Your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpj96ceon6_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpj96ceon6_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpj96ceon6_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpj96ceon6_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // Your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpj96ceon6_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpj96ceon6_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpj96ceon6_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpj96ceon6_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // Your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpj96ceon6_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpj96ceon6_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpj96ceon6_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpj96ceon6_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpgwkciw2g_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpgwkciw2g_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpgwkciw2g_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpgwkciw2g_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    return \"\"\n}\n\
    \nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"three\
    \ five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpz8osohel_test.go:32: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpz8osohel_test.go:32: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpz8osohel_test.go:32: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpz8osohel_test.go:32:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    return \"\"\n}\n\
    \nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"three\
    \ five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpz8osohel_test.go:32: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpz8osohel_test.go:32: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpz8osohel_test.go:32: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpz8osohel_test.go:32:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpgwkciw2g_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpgwkciw2g_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpgwkciw2g_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpgwkciw2g_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    return \"\"\n}\n\
    \nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"three\
    \ five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpz8osohel_test.go:32: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpz8osohel_test.go:32: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpz8osohel_test.go:32: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpz8osohel_test.go:32:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpgwkciw2g_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpgwkciw2g_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpgwkciw2g_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpgwkciw2g_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // Your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpj96ceon6_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpj96ceon6_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpj96ceon6_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpj96ceon6_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    return \"\"\n}\n\
    \nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"three\
    \ five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpz8osohel_test.go:32: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpz8osohel_test.go:32: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpz8osohel_test.go:32: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpz8osohel_test.go:32:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // Your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpj96ceon6_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpj96ceon6_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpj96ceon6_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpj96ceon6_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    return \"\"\n}\n\
    \nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"three\
    \ five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpz8osohel_test.go:32: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpz8osohel_test.go:32: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpz8osohel_test.go:32: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpz8osohel_test.go:32:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // Your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpj96ceon6_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpj96ceon6_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpj96ceon6_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpj96ceon6_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // Your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpj96ceon6_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpj96ceon6_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpj96ceon6_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpj96ceon6_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    return \"\"\n}\n\
    \nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"three\
    \ five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpz8osohel_test.go:32: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpz8osohel_test.go:32: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpz8osohel_test.go:32: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpz8osohel_test.go:32:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // Your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpj96ceon6_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpj96ceon6_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpj96ceon6_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpj96ceon6_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 2
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    var nums []int\n\
    \    for _, num := range numbers {\n        nums = append(nums, int(num))\n  \
    \  }\n    for i := 0; i < len(nums); i++ {\n        for j := i + 1; j < len(nums);\
    \ j++ {\n            if nums[i] > nums[j] {\n                nums[i], nums[j]\
    \ = nums[j], nums[i]\n            }\n        }\n    }\n    var sorted string\n\
    \    for _, num := range nums {\n        sorted += string(num)\n    }\n    return\
    \ sorted\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test

    /tmp/tmpohtlszp7_test.go:25:19: conversion from int to string yields a string
    of one rune, not a string of digits (did you mean fmt.Sprint(x)?)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpgwkciw2g_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpgwkciw2g_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpgwkciw2g_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpgwkciw2g_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    return \"\"\n}\n\
    \nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"three\
    \ five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpz8osohel_test.go:32: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpz8osohel_test.go:32: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpz8osohel_test.go:32: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpz8osohel_test.go:32:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpgwkciw2g_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpgwkciw2g_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpgwkciw2g_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpgwkciw2g_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // Your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpj96ceon6_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpj96ceon6_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpj96ceon6_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpj96ceon6_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // Your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpj96ceon6_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpj96ceon6_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpj96ceon6_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpj96ceon6_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpgwkciw2g_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpgwkciw2g_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpgwkciw2g_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpgwkciw2g_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    return \"\"\n}\n\
    \nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"three\
    \ five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpz8osohel_test.go:32: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpz8osohel_test.go:32: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpz8osohel_test.go:32: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpz8osohel_test.go:32:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // Your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpj96ceon6_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpj96ceon6_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpj96ceon6_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpj96ceon6_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpgwkciw2g_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpgwkciw2g_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpgwkciw2g_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpgwkciw2g_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpgwkciw2g_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpgwkciw2g_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpgwkciw2g_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpgwkciw2g_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    return \"\"\n}\n\
    \nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"three\
    \ five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpz8osohel_test.go:32: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpz8osohel_test.go:32: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpz8osohel_test.go:32: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpz8osohel_test.go:32:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // Your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpj96ceon6_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpj96ceon6_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpj96ceon6_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpj96ceon6_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    return \"\"\n}\n\
    \nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"three\
    \ five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpz8osohel_test.go:32: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpz8osohel_test.go:32: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpz8osohel_test.go:32: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpz8osohel_test.go:32:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpgwkciw2g_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpgwkciw2g_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpgwkciw2g_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpgwkciw2g_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpgwkciw2g_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpgwkciw2g_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpgwkciw2g_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpgwkciw2g_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // Your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpj96ceon6_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpj96ceon6_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpj96ceon6_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpj96ceon6_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // Your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpj96ceon6_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpj96ceon6_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpj96ceon6_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpj96ceon6_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpgwkciw2g_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpgwkciw2g_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpgwkciw2g_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpgwkciw2g_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpgwkciw2g_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpgwkciw2g_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpgwkciw2g_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpgwkciw2g_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    return \"\"\n}\n\
    \nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"three\
    \ five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpz8osohel_test.go:32: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpz8osohel_test.go:32: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpz8osohel_test.go:32: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpz8osohel_test.go:32:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    return \"\"\n}\n\
    \nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"three\
    \ five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpz8osohel_test.go:32: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpz8osohel_test.go:32: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpz8osohel_test.go:32: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpz8osohel_test.go:32:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // Your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpj96ceon6_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpj96ceon6_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpj96ceon6_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpj96ceon6_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // Your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpj96ceon6_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpj96ceon6_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpj96ceon6_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpj96ceon6_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // Your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpj96ceon6_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpj96ceon6_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpj96ceon6_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpj96ceon6_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpgwkciw2g_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpgwkciw2g_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpgwkciw2g_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpgwkciw2g_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // Your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpj96ceon6_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpj96ceon6_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpj96ceon6_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpj96ceon6_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // Your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpj96ceon6_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpj96ceon6_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpj96ceon6_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpj96ceon6_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    return \"\"\n}\n\
    \nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"three\
    \ five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpz8osohel_test.go:32: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpz8osohel_test.go:32: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpz8osohel_test.go:32: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpz8osohel_test.go:32:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpgwkciw2g_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpgwkciw2g_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpgwkciw2g_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpgwkciw2g_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpgwkciw2g_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpgwkciw2g_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpgwkciw2g_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpgwkciw2g_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // Your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpj96ceon6_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpj96ceon6_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpj96ceon6_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpj96ceon6_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // TODO: Implement\
    \ me\n    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate\
    \ := sort_numbers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"three\"), expected: \"three\" },\n     {\
    \ actual: candidate(\"three five nine\"), expected: \"three five nine\" },\n \
    \    { actual: candidate(\"five zero four seven nine eight\"), expected: \"zero\
    \ four five seven eight nine\" },\n     { actual: candidate(\"six five four three\
    \ two one zero\"), expected: \"zero one two three four five six\" },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpwh1gl_j7_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpwh1gl_j7_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpwh1gl_j7_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpwh1gl_j7_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpgwkciw2g_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpgwkciw2g_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpgwkciw2g_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpgwkciw2g_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpgwkciw2g_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpgwkciw2g_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpgwkciw2g_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpgwkciw2g_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // TODO: Implement\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmp_ar0f6rr_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmp_ar0f6rr_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmp_ar0f6rr_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmp_ar0f6rr_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // Your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpj96ceon6_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpj96ceon6_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpj96ceon6_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpj96ceon6_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // Your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpj96ceon6_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpj96ceon6_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpj96ceon6_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpj96ceon6_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpgwkciw2g_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpgwkciw2g_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpgwkciw2g_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpgwkciw2g_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    return \"\"\n}\n\
    \nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"three\
    \ five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpz8osohel_test.go:32: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpz8osohel_test.go:32: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpz8osohel_test.go:32: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpz8osohel_test.go:32:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // Your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpj96ceon6_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpj96ceon6_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpj96ceon6_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpj96ceon6_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // Your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpj96ceon6_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpj96ceon6_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpj96ceon6_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpj96ceon6_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    return \"\"\n}\n\
    \nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"three\
    \ five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpz8osohel_test.go:32: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpz8osohel_test.go:32: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpz8osohel_test.go:32: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpz8osohel_test.go:32:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // Your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpj96ceon6_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpj96ceon6_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpj96ceon6_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpj96ceon6_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    return \"\"\n}\n\
    \nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"three\
    \ five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpz8osohel_test.go:32: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpz8osohel_test.go:32: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpz8osohel_test.go:32: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpz8osohel_test.go:32:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpgwkciw2g_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpgwkciw2g_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpgwkciw2g_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpgwkciw2g_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // Your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpj96ceon6_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpj96ceon6_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpj96ceon6_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpj96ceon6_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpgwkciw2g_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpgwkciw2g_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpgwkciw2g_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpgwkciw2g_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // Your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpj96ceon6_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpj96ceon6_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpj96ceon6_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpj96ceon6_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    return \"\"\n}\n\
    \nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"three\
    \ five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpz8osohel_test.go:32: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpz8osohel_test.go:32: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpz8osohel_test.go:32: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpz8osohel_test.go:32:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // Your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpj96ceon6_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpj96ceon6_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpj96ceon6_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpj96ceon6_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpgwkciw2g_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpgwkciw2g_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpgwkciw2g_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpgwkciw2g_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // Your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpj96ceon6_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpj96ceon6_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpj96ceon6_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpj96ceon6_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    return \"\"\n}\n\
    \nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"three\
    \ five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpz8osohel_test.go:32: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpz8osohel_test.go:32: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpz8osohel_test.go:32: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpz8osohel_test.go:32:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    return \"\"\n}\n\
    \nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"three\
    \ five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpz8osohel_test.go:32: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpz8osohel_test.go:32: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpz8osohel_test.go:32: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpz8osohel_test.go:32:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 2
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    var nums []int\n\
    \    for _, num := range numbers {\n        switch string(num) {\n        case\
    \ \"z\":\n            nums = append(nums, 0)\n        case \"o\":\n          \
    \  nums = append(nums, 1)\n        case \"t\":\n            nums = append(nums,\
    \ 2)\n        case \"h\":\n            nums = append(nums, 3)\n        case \"\
    f\":\n            nums = append(nums, 4)\n        case \"i\":\n            nums\
    \ = append(nums, 5)\n        case \"s\":\n            nums = append(nums, 6)\n\
    \        case \"e\":\n            nums = append(nums, 7)\n        case \"n\":\n\
    \            nums = append(nums, 8)\n        case \"i\":\n            nums = append(nums,\
    \ 9)\n        }\n    }\n    return fmt.Sprintf(\"%d\", nums)\n}\n\nfunc TestSort_Numbers(t\
    \ *testing.T) {\n  candidate := sort_numbers\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"three\"), expected:\
    \ \"three\" },\n     { actual: candidate(\"three five nine\"), expected: \"three\
    \ five nine\" },\n     { actual: candidate(\"five zero four seven nine eight\"\
    ), expected: \"zero four five seven eight nine\" },\n     { actual: candidate(\"\
    six five four three two one zero\"), expected: \"zero one two three four five\
    \ six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpr3kt8juu_test.go:33:14:\
    \ duplicate case \"i\" (constant of type string) in expression switch\n\t/tmp/tmpr3kt8juu_test.go:25:14:\
    \ previous case\n"
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // Your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpj96ceon6_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpj96ceon6_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpj96ceon6_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpj96ceon6_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpgwkciw2g_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpgwkciw2g_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpgwkciw2g_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpgwkciw2g_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpgwkciw2g_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpgwkciw2g_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpgwkciw2g_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpgwkciw2g_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // Your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpj96ceon6_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpj96ceon6_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpj96ceon6_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpj96ceon6_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    return \"\"\n}\n\
    \nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"three\
    \ five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpz8osohel_test.go:32: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpz8osohel_test.go:32: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpz8osohel_test.go:32: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpz8osohel_test.go:32:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpgwkciw2g_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpgwkciw2g_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpgwkciw2g_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpgwkciw2g_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    return \"\"\n}\n\
    \nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"three\
    \ five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpz8osohel_test.go:32: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpz8osohel_test.go:32: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpz8osohel_test.go:32: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpz8osohel_test.go:32:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 2
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    var nums []int\n\
    \    for _, num := range numbers {\n        nums = append(nums, int(num))\n  \
    \  }\n    for i := 0; i < len(nums); i++ {\n        for j := i + 1; j < len(nums);\
    \ j++ {\n            if nums[i] > nums[j] {\n                nums[i], nums[j]\
    \ = nums[j], nums[i]\n            }\n        }\n    }\n    var result string\n\
    \    for _, num := range nums {\n        result += string(num)\n    }\n    return\
    \ result\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test

    /tmp/tmppx9ya0rc_test.go:25:19: conversion from int to string yields a string
    of one rune, not a string of digits (did you mean fmt.Sprint(x)?)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // Your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpj96ceon6_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpj96ceon6_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpj96ceon6_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpj96ceon6_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // Your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpj96ceon6_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpj96ceon6_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpj96ceon6_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpj96ceon6_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // Your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpj96ceon6_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpj96ceon6_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpj96ceon6_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpj96ceon6_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // TODO: Implement\
    \ me\n    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate\
    \ := sort_numbers\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"three\"), expected: \"three\" },\n     {\
    \ actual: candidate(\"three five nine\"), expected: \"three five nine\" },\n \
    \    { actual: candidate(\"five zero four seven nine eight\"), expected: \"zero\
    \ four five seven eight nine\" },\n     { actual: candidate(\"six five four three\
    \ two one zero\"), expected: \"zero one two three four five six\" },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpwh1gl_j7_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpwh1gl_j7_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpwh1gl_j7_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpwh1gl_j7_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpgwkciw2g_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpgwkciw2g_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpgwkciw2g_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpgwkciw2g_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // Your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpj96ceon6_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpj96ceon6_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpj96ceon6_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpj96ceon6_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpgwkciw2g_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpgwkciw2g_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpgwkciw2g_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpgwkciw2g_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 2
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    nums := []int{}\n\
    \    for _, num := range numbers {\n        switch num {\n        case 'z':\n\
    \            nums = append(nums, 0)\n        case 'o':\n            nums = append(nums,\
    \ 1)\n        case 't':\n            nums = append(nums, 2)\n        case 'h':\n\
    \            nums = append(nums, 3)\n        case 'f':\n            nums = append(nums,\
    \ 4)\n        case 'i':\n            nums = append(nums, 5)\n        case 's':\n\
    \            nums = append(nums, 6)\n        case 'e':\n            nums = append(nums,\
    \ 7)\n        case 'n':\n            nums = append(nums, 8)\n        case 'e':\n\
    \            nums = append(nums, 9)\n        }\n    }\n    for i := 0; i < len(nums);\
    \ i++ {\n        for j := i + 1; j < len(nums); j++ {\n            if nums[i]\
    \ > nums[j] {\n                nums[i], nums[j] = nums[j], nums[i]\n         \
    \   }\n        }\n    }\n    result := \"\"\n    for _, num := range nums {\n\
    \        switch num {\n        case 0:\n            result += \"zero\"\n     \
    \   case 1:\n            result += \"one\"\n        case 2:\n            result\
    \ += \"two\"\n        case 3:\n            result += \"three\"\n        case 4:\n\
    \            result += \"four\"\n        case 5:\n            result += \"five\"\
    \n        case 6:\n            result += \"six\"\n        case 7:\n          \
    \  result += \"seven\"\n        case 8:\n            result += \"eight\"\n   \
    \     case 9:\n            result += \"nine\"\n        }\n        result += \"\
    \ \"\n    }\n    return result[:len(result) - 1]\n}\n\nfunc TestSort_Numbers(t\
    \ *testing.T) {\n  candidate := sort_numbers\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"three\"), expected:\
    \ \"three\" },\n     { actual: candidate(\"three five nine\"), expected: \"three\
    \ five nine\" },\n     { actual: candidate(\"five zero four seven nine eight\"\
    ), expected: \"zero four five seven eight nine\" },\n     { actual: candidate(\"\
    six five four three two one zero\"), expected: \"zero one two three four five\
    \ six\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: "# command-line-arguments_test [command-line-arguments.test]\n/tmp/tmpnf2jf2ro_test.go:33:14:\
    \ duplicate case 'e' (constant 101 of type rune) in expression switch\n\t/tmp/tmpnf2jf2ro_test.go:29:14:\
    \ previous case\n"
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    return \"\"\n}\n\
    \nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"three\
    \ five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpz8osohel_test.go:32: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpz8osohel_test.go:32: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpz8osohel_test.go:32: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpz8osohel_test.go:32:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpgwkciw2g_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpgwkciw2g_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpgwkciw2g_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpgwkciw2g_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    // your code here\n\
    \    return \"\"\n}\n\nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"\
    three five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpgwkciw2g_test.go:33: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpgwkciw2g_test.go:33: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpgwkciw2g_test.go:33: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpgwkciw2g_test.go:33:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227
- exit_code: 1
  program: "package sort_numbers_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\nfunc sort_numbers(numbers string) string {\n    return \"\"\n}\n\
    \nfunc TestSort_Numbers(t *testing.T) {\n  candidate := sort_numbers\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"three\"), expected: \"three\" },\n     { actual: candidate(\"three\
    \ five nine\"), expected: \"three five nine\" },\n     { actual: candidate(\"\
    five zero four seven nine eight\"), expected: \"zero four five seven eight nine\"\
    \ },\n     { actual: candidate(\"six five four three two one zero\"), expected:\
    \ \"zero one two three four five six\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSort_Numbers (0.00s)\n    --- FAIL: TestSort_Numbers/test_num__1\
    \ (0.00s)\n        tmpz8osohel_test.go:32: expected 'three', got ''\n    --- FAIL:\
    \ TestSort_Numbers/test_num__2 (0.00s)\n        tmpz8osohel_test.go:32: expected\
    \ 'three five nine', got ''\n    --- FAIL: TestSort_Numbers/test_num__3 (0.00s)\n\
    \        tmpz8osohel_test.go:32: expected 'zero four five seven eight nine', got\
    \ ''\n    --- FAIL: TestSort_Numbers/test_num__4 (0.00s)\n        tmpz8osohel_test.go:32:\
    \ expected 'zero one two three four five six', got ''\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660074227

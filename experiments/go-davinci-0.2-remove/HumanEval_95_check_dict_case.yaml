name: HumanEval_95_check_dict_case
language: go_test.go
prompt: "package check_dict_case_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
  )\n\n// Given a dictionary, return True if all keys are strings in lower \n// case\
  \ or all keys are strings in upper case, else return False.\n// The function should\
  \ return False is the given dictionary is empty.\n// Examples:\nfunc check_dict_case(dict\
  \ map[string]string) bool {\n"
tests: "func TestCheck_Dict_Case(t *testing.T) {\n  candidate := check_dict_case\n\
  \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
  \   tests := []test{\n     { actual: candidate(map[string]string{\"p\": \"pineapple\"\
  , \"b\": \"banana\"}), expected: true },\n     { actual: candidate(map[string]string{\"\
  p\": \"pineapple\", \"A\": \"banana\", \"B\": \"banana\"}), expected: false },\n\
  \     { actual: candidate(map[string]string{\"p\": \"pineapple\", \"5\": \"banana\"\
  , \"a\": \"apple\"}), expected: false },\n     { actual: candidate(map[string]string{\"\
  Name\": \"John\", \"Age\": \"36\", \"City\": \"Houston\"}), expected: false },\n\
  \     { actual: candidate(map[string]string{\"STATE\": \"NC\", \"ZIP\": \"12345\"\
  }), expected: true },\n     { actual: candidate(map[string]string{\"fruit\": \"\
  Orange\", \"taste\": \"Sweet\"}), expected: true },\n     { actual: candidate(map[string]string{}),\
  \ expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
  test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
  \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
  , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
completions: ["    if len(dict) == 0 {\n        return false\n    }\n    is_lower\
    \ := false\n    is_upper := false\n    for key, _ := range dict {\n        if\
    \ key == strings.ToLower(key) {\n            is_lower = true\n        }\n    \
    \    if key == strings.ToUpper(key) {\n            is_upper = true\n        }\n\
    \    }\n    return is_lower || is_upper\n}\n", "    if len(dict) == 0 {\n    \
    \    return false\n    }\n    is_upper := true\n    is_lower := true\n    for\
    \ key, _ := range dict {\n        if key != strings.ToUpper(key) {\n         \
    \   is_upper = false\n        }\n        if key != strings.ToLower(key) {\n  \
    \          is_lower = false\n        }\n    }\n    return is_upper || is_lower\n\
    }\n", "    if len(dict) == 0 {\n        return false\n    }\n    lower := true\n\
    \    upper := true\n    for key, _ := range dict {\n        if key != strings.ToLower(key)\
    \ {\n            lower = false\n        }\n        if key != strings.ToUpper(key)\
    \ {\n            upper = false\n        }\n    }\n    return lower || upper\n\
    }\n", "    if len(dict) == 0 {\n        return false\n    }\n    var upper_case\
    \ bool\n    var lower_case bool\n    for k, _ := range dict {\n        if k ==\
    \ strings.ToUpper(k) {\n            upper_case = true\n        } else if k ==\
    \ strings.ToLower(k) {\n            lower_case = true\n        } else {\n    \
    \        return false\n        }\n    }\n    return upper_case && lower_case\n\
    }\n", "    if len(dict) == 0 {\n        return false\n    }\n    is_lower := false\n\
    \    is_upper := false\n    for k, _ := range dict {\n        if k == strings.ToLower(k)\
    \ {\n            is_lower = true\n        }\n        if k == strings.ToUpper(k)\
    \ {\n            is_upper = true\n        }\n    }\n    return is_lower || is_upper\n\
    }\n", "    if len(dict) == 0 {\n        return false\n    }\n    lower_case :=\
    \ true\n    upper_case := true\n    for key, _ := range dict {\n        if key\
    \ != strings.ToLower(key) {\n            lower_case = false\n        }\n     \
    \   if key != strings.ToUpper(key) {\n            upper_case = false\n       \
    \ }\n    }\n    return lower_case || upper_case\n}\n", "    if len(dict) == 0\
    \ {\n        return false\n    }\n    lower := true\n    upper := true\n    for\
    \ k, _ := range dict {\n        if k != strings.ToLower(k) {\n            lower\
    \ = false\n        }\n        if k != strings.ToUpper(k) {\n            upper\
    \ = false\n        }\n    }\n    return lower || upper\n}\n", "    if len(dict)\
    \ == 0 {\n        return false\n    }\n    lower := true\n    upper := true\n\
    \    for key, _ := range dict {\n        if key != strings.ToLower(key) {\n  \
    \          lower = false\n        }\n        if key != strings.ToUpper(key) {\n\
    \            upper = false\n        }\n    }\n    return lower || upper\n}\n",
  "    if len(dict) == 0 {\n        return false\n    }\n    for k, _ := range dict\
    \ {\n        if k != strings.ToLower(k) && k != strings.ToUpper(k) {\n       \
    \     return false\n        }\n    }\n    return true\n}\n", "    if len(dict)\
    \ == 0 {\n        return false\n    }\n    var lower_case bool\n    for key, _\
    \ := range dict {\n        if key == strings.ToLower(key) {\n            lower_case\
    \ = true\n        } else if key == strings.ToUpper(key) {\n            lower_case\
    \ = false\n        } else {\n            return false\n        }\n    }\n    return\
    \ true\n}\n", "    if len(dict) == 0 {\n        return false\n    }\n    is_lower\
    \ := false\n    is_upper := false\n    for k, _ := range dict {\n        if k\
    \ == strings.ToLower(k) {\n            is_lower = true\n        }\n        if\
    \ k == strings.ToUpper(k) {\n            is_upper = true\n        }\n    }\n \
    \   return is_lower || is_upper\n}\n", "    if len(dict) == 0 {\n        return\
    \ false\n    }\n    for k, _ := range dict {\n        if k != strings.ToLower(k)\
    \ && k != strings.ToUpper(k) {\n            return false\n        }\n    }\n \
    \   return true\n}\n", "    if len(dict) == 0 {\n        return false\n    }\n\
    \    var lower_case_keys bool\n    for key, _ := range dict {\n        if key\
    \ == strings.ToLower(key) {\n            lower_case_keys = true\n            break\n\
    \        }\n    }\n    if lower_case_keys {\n        for key, _ := range dict\
    \ {\n            if key != strings.ToLower(key) {\n                return false\n\
    \            }\n        }\n    } else {\n        for key, _ := range dict {\n\
    \            if key != strings.ToUpper(key) {\n                return false\n\
    \            }\n        }\n    }\n    return true\n}\n", "    if len(dict) ==\
    \ 0 {\n        return false\n    }\n    lower := true\n    upper := true\n   \
    \ for k, _ := range dict {\n        if k != strings.ToLower(k) {\n           \
    \ lower = false\n        }\n        if k != strings.ToUpper(k) {\n           \
    \ upper = false\n        }\n    }\n    return lower || upper\n}\n", "    if len(dict)\
    \ == 0 {\n        return false\n    }\n    for k, _ := range dict {\n        if\
    \ k != strings.ToLower(k) && k != strings.ToUpper(k) {\n            return false\n\
    \        }\n    }\n    return true\n}\n", "    if len(dict) == 0 {\n        return\
    \ false\n    }\n    for key, _ := range dict {\n        if key != strings.ToLower(key)\
    \ && key != strings.ToUpper(key) {\n            return false\n        }\n    }\n\
    \    return true\n}\n", "    if len(dict) == 0 {\n        return false\n    }\n\
    \    for key, _ := range dict {\n        if key != strings.ToLower(key) && key\
    \ != strings.ToUpper(key) {\n            return false\n        }\n    }\n    return\
    \ true\n}\n", "    if len(dict) == 0 {\n        return false\n    }\n    for key,\
    \ _ := range dict {\n        if key != strings.ToLower(key) && key != strings.ToUpper(key)\
    \ {\n            return false\n        }\n    }\n    return true\n}\n", "    if\
    \ len(dict) == 0 {\n        return false\n    }\n    var lower bool\n    var upper\
    \ bool\n    for key, _ := range dict {\n        if key == strings.ToLower(key)\
    \ {\n            lower = true\n        }\n        if key == strings.ToUpper(key)\
    \ {\n            upper = true\n        }\n    }\n    return lower || upper\n}\n",
  "    if len(dict) == 0 {\n        return false\n    }\n    is_lower := true\n  \
    \  is_upper := true\n    for key, _ := range dict {\n        if is_lower && key\
    \ != strings.ToLower(key) {\n            is_lower = false\n        }\n       \
    \ if is_upper && key != strings.ToUpper(key) {\n            is_upper = false\n\
    \        }\n    }\n    return is_lower || is_upper\n}\n", "    if len(dict) ==\
    \ 0 {\n        return false\n    }\n    is_lower := false\n    is_upper := false\n\
    \    for k, _ := range dict {\n        if k == strings.ToLower(k) {\n        \
    \    is_lower = true\n        }\n        if k == strings.ToUpper(k) {\n      \
    \      is_upper = true\n        }\n    }\n    return is_lower || is_upper\n}\n",
  "    if len(dict) == 0 {\n        return false\n    }\n    lower := true\n    upper\
    \ := true\n    for key, _ := range dict {\n        if key != strings.ToLower(key)\
    \ {\n            lower = false\n        }\n        if key != strings.ToUpper(key)\
    \ {\n            upper = false\n        }\n    }\n    return lower || upper\n\
    }\n", "    if len(dict) == 0 {\n        return false\n    }\n    for k, _ := range\
    \ dict {\n        if k != strings.ToLower(k) && k != strings.ToUpper(k) {\n  \
    \          return false\n        }\n    }\n    return true\n}\n", "    if len(dict)\
    \ == 0 {\n        return false\n    }\n    is_upper := false\n    is_lower :=\
    \ false\n    for k, _ := range dict {\n        if k == strings.ToUpper(k) {\n\
    \            is_upper = true\n        } else if k == strings.ToLower(k) {\n  \
    \          is_lower = true\n        } else {\n            return false\n     \
    \   }\n    }\n    return is_upper || is_lower\n}\n", "    if len(dict) == 0 {\n\
    \        return false\n    }\n    for k, _ := range dict {\n        if k != strings.ToLower(k)\
    \ && k != strings.ToUpper(k) {\n            return false\n        }\n    }\n \
    \   return true\n}\n", "    if len(dict) == 0 {\n        return false\n    }\n\
    \    for key, _ := range dict {\n        if key != strings.ToLower(key) && key\
    \ != strings.ToUpper(key) {\n            return false\n        }\n    }\n    return\
    \ true\n}\n", "    if len(dict) == 0 {\n        return false\n    }\n    for k,\
    \ _ := range dict {\n        if k != strings.ToLower(k) && k != strings.ToUpper(k)\
    \ {\n            return false\n        }\n    }\n    return true\n}\n", "    if\
    \ len(dict) == 0 {\n        return false\n    }\n    is_lower := false\n    is_upper\
    \ := false\n    for key, _ := range dict {\n        if key == strings.ToLower(key)\
    \ {\n            is_lower = true\n        }\n        if key == strings.ToUpper(key)\
    \ {\n            is_upper = true\n        }\n    }\n    return is_lower || is_upper\n\
    }\n", "    if len(dict) == 0 {\n        return false\n    }\n    lower := true\n\
    \    upper := true\n    for key, _ := range dict {\n        if key != strings.ToLower(key)\
    \ {\n            lower = false\n        }\n        if key != strings.ToUpper(key)\
    \ {\n            upper = false\n        }\n    }\n    return lower || upper\n\
    }\n", "    if len(dict) == 0 {\n        return false\n    }\n    lower := true\n\
    \    upper := true\n    for k, _ := range dict {\n        if k != strings.ToLower(k)\
    \ {\n            lower = false\n        }\n        if k != strings.ToUpper(k)\
    \ {\n            upper = false\n        }\n    }\n    return lower || upper\n\
    }\n", "    if len(dict) == 0 {\n        return false\n    }\n    lower := true\n\
    \    upper := true\n    for k, _ := range dict {\n        if k != strings.ToLower(k)\
    \ {\n            lower = false\n        }\n        if k != strings.ToUpper(k)\
    \ {\n            upper = false\n        }\n    }\n    return lower || upper\n\
    }\n", "    if len(dict) == 0 {\n        return false\n    }\n    is_lower := false\n\
    \    is_upper := false\n    for key, _ := range dict {\n        if key == strings.ToLower(key)\
    \ {\n            is_lower = true\n        }\n        if key == strings.ToUpper(key)\
    \ {\n            is_upper = true\n        }\n    }\n    return is_lower || is_upper\n\
    }\n", "    if len(dict) == 0 {\n        return false\n    }\n    var upper bool\n\
    \    var lower bool\n    for k, _ := range dict {\n        if k == strings.ToUpper(k)\
    \ {\n            upper = true\n        } else if k == strings.ToLower(k) {\n \
    \           lower = true\n        } else {\n            return false\n       \
    \ }\n    }\n    return upper || lower\n}\n", "    if len(dict) == 0 {\n      \
    \  return false\n    }\n    lower := true\n    upper := true\n    for key, _ :=\
    \ range dict {\n        if key != strings.ToLower(key) {\n            lower =\
    \ false\n        }\n        if key != strings.ToUpper(key) {\n            upper\
    \ = false\n        }\n    }\n    return lower || upper\n}\n", "    if len(dict)\
    \ == 0 {\n        return false\n    }\n    var lower bool\n    var upper bool\n\
    \    for key, _ := range dict {\n        if key == strings.ToLower(key) {\n  \
    \          lower = true\n        }\n        if key == strings.ToUpper(key) {\n\
    \            upper = true\n        }\n    }\n    return lower && !upper || !lower\
    \ && upper\n}\n", "    if len(dict) == 0 {\n        return false\n    }\n    is_lower\
    \ := false\n    is_upper := false\n    for k, _ := range dict {\n        if k\
    \ == k[:1] {\n            is_lower = true\n        } else {\n            is_upper\
    \ = true\n        }\n    }\n    return is_lower && is_upper\n}\n", "    if len(dict)\
    \ == 0 {\n        return false\n    }\n    lower := true\n    upper := true\n\
    \    for k, _ := range dict {\n        if k != strings.ToLower(k) {\n        \
    \    lower = false\n        }\n        if k != strings.ToUpper(k) {\n        \
    \    upper = false\n        }\n    }\n    return lower || upper\n}\n", "    if\
    \ len(dict) == 0 {\n        return false\n    }\n    for key, _ := range dict\
    \ {\n        if key != strings.ToLower(key) && key != strings.ToUpper(key) {\n\
    \            return false\n        }\n    }\n    return true\n}\n", "    if len(dict)\
    \ == 0 {\n        return false\n    }\n    lower := true\n    upper := true\n\
    \    for k, _ := range dict {\n        if k != strings.ToLower(k) {\n        \
    \    lower = false\n        }\n        if k != strings.ToUpper(k) {\n        \
    \    upper = false\n        }\n    }\n    return lower || upper\n}\n", "    if\
    \ len(dict) == 0 {\n        return false\n    }\n    for k, _ := range dict {\n\
    \        if k != strings.ToLower(k) && k != strings.ToUpper(k) {\n           \
    \ return false\n        }\n    }\n    return true\n}\n", "    if len(dict) ==\
    \ 0 {\n        return false\n    }\n    var is_lower bool\n    for k, _ := range\
    \ dict {\n        if is_lower {\n            if k != k[:1] + k[1:].lower() {\n\
    \                return false\n            }\n        } else {\n            if\
    \ k != k[:1] + k[1:].upper() {\n                return false\n            }\n\
    \        }\n    }\n    return true\n}\n", "    if len(dict) == 0 {\n        return\
    \ false\n    }\n    for k, _ := range dict {\n        if k != strings.ToLower(k)\
    \ && k != strings.ToUpper(k) {\n            return false\n        }\n    }\n \
    \   return true\n}\n", "    if len(dict) == 0 {\n        return false\n    }\n\
    \    lower_case := true\n    upper_case := true\n    for key, _ := range dict\
    \ {\n        if key != strings.ToLower(key) {\n            lower_case = false\n\
    \        }\n        if key != strings.ToUpper(key) {\n            upper_case =\
    \ false\n        }\n    }\n    return lower_case || upper_case\n}\n", "    if\
    \ len(dict) == 0 {\n        return false\n    }\n    lower := true\n    upper\
    \ := true\n    for key, _ := range dict {\n        if key != strings.ToLower(key)\
    \ {\n            lower = false\n        }\n        if key != strings.ToUpper(key)\
    \ {\n            upper = false\n        }\n    }\n    return lower || upper\n\
    }\n", "    if len(dict) == 0 {\n        return false\n    }\n    is_lower := true\n\
    \    is_upper := true\n    for key, _ := range dict {\n        if key != strings.ToLower(key)\
    \ {\n            is_lower = false\n        }\n        if key != strings.ToUpper(key)\
    \ {\n            is_upper = false\n        }\n    }\n    return is_lower || is_upper\n\
    }\n", "    if len(dict) == 0 {\n        return false\n    }\n    for key, _ :=\
    \ range dict {\n        if key != strings.ToLower(key) && key != strings.ToUpper(key)\
    \ {\n            return false\n        }\n    }\n    return true\n}\n", "    if\
    \ len(dict) == 0 {\n        return false\n    }\n    lower_case := true\n    upper_case\
    \ := true\n    for key, _ := range dict {\n        if key != strings.ToLower(key)\
    \ {\n            lower_case = false\n        }\n        if key != strings.ToUpper(key)\
    \ {\n            upper_case = false\n        }\n    }\n    return lower_case ||\
    \ upper_case\n}\n", "    if len(dict) == 0 {\n        return false\n    }\n  \
    \  is_lower := true\n    is_upper := true\n    for key, _ := range dict {\n  \
    \      if key != strings.ToLower(key) {\n            is_lower = false\n      \
    \  }\n        if key != strings.ToUpper(key) {\n            is_upper = false\n\
    \        }\n    }\n    return is_lower || is_upper\n}\n", "    if len(dict) ==\
    \ 0 {\n        return false\n    }\n    lower_case := true\n    upper_case :=\
    \ true\n    for key, _ := range dict {\n        if key != strings.ToLower(key)\
    \ {\n            lower_case = false\n        }\n        if key != strings.ToUpper(key)\
    \ {\n            upper_case = false\n        }\n    }\n    return lower_case ||\
    \ upper_case\n}\n", "    if len(dict) == 0 {\n        return false\n    }\n  \
    \  for k, _ := range dict {\n        if k != strings.ToLower(k) && k != strings.ToUpper(k)\
    \ {\n            return false\n        }\n    }\n    return true\n}\n", "    if\
    \ len(dict) == 0 {\n        return false\n    }\n    var is_lower bool\n    for\
    \ key, _ := range dict {\n        if is_lower == false && key == strings.ToLower(key)\
    \ {\n            is_lower = true\n        } else if is_lower == true && key ==\
    \ strings.ToUpper(key) {\n            is_lower = false\n        } else {\n   \
    \         return false\n        }\n    }\n    return true\n}\n", "    if len(dict)\
    \ == 0 {\n        return false\n    }\n    for k, _ := range dict {\n        if\
    \ k != strings.ToLower(k) && k != strings.ToUpper(k) {\n            return false\n\
    \        }\n    }\n    return true\n}\n", "    if len(dict) == 0 {\n        return\
    \ false\n    }\n    lower := true\n    upper := true\n    for k, _ := range dict\
    \ {\n        if k != strings.ToLower(k) {\n            lower = false\n       \
    \ }\n        if k != strings.ToUpper(k) {\n            upper = false\n       \
    \ }\n    }\n    return lower || upper\n}\n", "    if len(dict) == 0 {\n      \
    \  return false\n    }\n    for key, _ := range dict {\n        if key != strings.ToLower(key)\
    \ && key != strings.ToUpper(key) {\n            return false\n        }\n    }\n\
    \    return true\n}\n", "    if len(dict) == 0 {\n        return false\n    }\n\
    \    is_lower := true\n    is_upper := true\n    for k, _ := range dict {\n  \
    \      if k != strings.ToLower(k) {\n            is_lower = false\n        }\n\
    \        if k != strings.ToUpper(k) {\n            is_upper = false\n        }\n\
    \    }\n    return is_lower || is_upper\n}\n", "    if len(dict) == 0 {\n    \
    \    return false\n    }\n    upper := true\n    lower := true\n    for key, _\
    \ := range dict {\n        if key != strings.ToUpper(key) {\n            upper\
    \ = false\n        }\n        if key != strings.ToLower(key) {\n            lower\
    \ = false\n        }\n    }\n    return upper || lower\n}\n", "    if len(dict)\
    \ == 0 {\n        return false\n    }\n    is_upper := false\n    is_lower :=\
    \ false\n    for key, _ := range dict {\n        if key == strings.ToUpper(key)\
    \ {\n            is_upper = true\n        } else if key == strings.ToLower(key)\
    \ {\n            is_lower = true\n        } else {\n            return false\n\
    \        }\n    }\n    return is_upper || is_lower\n}\n", "    if len(dict) ==\
    \ 0 {\n        return false\n    }\n    for k, _ := range dict {\n        if k\
    \ != strings.ToLower(k) && k != strings.ToUpper(k) {\n            return false\n\
    \        }\n    }\n    return true\n}\n", "    if len(dict) == 0 {\n        return\
    \ false\n    }\n    lower := true\n    upper := true\n    for key, _ := range\
    \ dict {\n        if key != strings.ToLower(key) {\n            lower = false\n\
    \        }\n        if key != strings.ToUpper(key) {\n            upper = false\n\
    \        }\n    }\n    return lower || upper\n}\n", "    if len(dict) == 0 {\n\
    \        return false\n    }\n    lower := true\n    upper := true\n    for k,\
    \ _ := range dict {\n        if k != strings.ToLower(k) {\n            lower =\
    \ false\n        }\n        if k != strings.ToUpper(k) {\n            upper =\
    \ false\n        }\n    }\n    return lower || upper\n}\n", "    if len(dict)\
    \ == 0 {\n        return false\n    }\n    lower := true\n    upper := true\n\
    \    for key, _ := range dict {\n        if key != strings.ToLower(key) {\n  \
    \          lower = false\n        }\n        if key != strings.ToUpper(key) {\n\
    \            upper = false\n        }\n    }\n    return lower || upper\n}\n",
  "    if len(dict) == 0 {\n        return false\n    }\n    lower := true\n    upper\
    \ := true\n    for k, _ := range dict {\n        if k != strings.ToLower(k) {\n\
    \            lower = false\n        }\n        if k != strings.ToUpper(k) {\n\
    \            upper = false\n        }\n    }\n    return lower || upper\n}\n",
  "    if len(dict) == 0 {\n        return false\n    }\n    var lower, upper bool\n\
    \    for key, _ := range dict {\n        if key == strings.ToLower(key) {\n  \
    \          lower = true\n        } else if key == strings.ToUpper(key) {\n   \
    \         upper = true\n        } else {\n            return false\n        }\n\
    \    }\n    return lower || upper\n}\n", "    if len(dict) == 0 {\n        return\
    \ false\n    }\n    lower := true\n    upper := true\n    for key, _ := range\
    \ dict {\n        if key == \"\" {\n            return false\n        }\n    \
    \    if key != strings.ToLower(key) {\n            lower = false\n        }\n\
    \        if key != strings.ToUpper(key) {\n            upper = false\n       \
    \ }\n    }\n    return lower || upper\n}\n", "    if len(dict) == 0 {\n      \
    \  return false\n    }\n    is_lower := false\n    is_upper := false\n    for\
    \ key, _ := range dict {\n        if key == strings.ToLower(key) {\n         \
    \   is_lower = true\n        }\n        if key == strings.ToUpper(key) {\n   \
    \         is_upper = true\n        }\n    }\n    return is_lower || is_upper\n\
    }\n", "    if len(dict) == 0 {\n        return false\n    }\n    for k, _ := range\
    \ dict {\n        if k != strings.ToLower(k) && k != strings.ToUpper(k) {\n  \
    \          return false\n        }\n    }\n    return true\n}\n", "    if len(dict)\
    \ == 0 {\n        return false\n    }\n    var lower_keys, upper_keys int\n  \
    \  for k, _ := range dict {\n        if k == strings.ToLower(k) {\n          \
    \  lower_keys++\n        } else if k == strings.ToUpper(k) {\n            upper_keys++\n\
    \        }\n    }\n    return lower_keys == len(dict) || upper_keys == len(dict)\n\
    }\n", "    if len(dict) == 0 {\n        return false\n    }\n    for k, _ := range\
    \ dict {\n        if k != strings.ToLower(k) && k != strings.ToUpper(k) {\n  \
    \          return false\n        }\n    }\n    return true\n}\n", "    if len(dict)\
    \ == 0 {\n        return false\n    }\n    var is_lower bool\n    var is_upper\
    \ bool\n    for key, _ := range dict {\n        if key == strings.ToLower(key)\
    \ {\n            is_lower = true\n        }\n        if key == strings.ToUpper(key)\
    \ {\n            is_upper = true\n        }\n    }\n    return is_lower || is_upper\n\
    }\n", "    if len(dict) == 0 {\n        return false\n    }\n    for k, _ := range\
    \ dict {\n        if k != strings.ToLower(k) && k != strings.ToUpper(k) {\n  \
    \          return false\n        }\n    }\n    return true\n}\n", "    if len(dict)\
    \ == 0 {\n        return false\n    }\n    lower_case := true\n    upper_case\
    \ := true\n    for key, _ := range dict {\n        if key != strings.ToLower(key)\
    \ {\n            lower_case = false\n        }\n        if key != strings.ToUpper(key)\
    \ {\n            upper_case = false\n        }\n    }\n    return lower_case ||\
    \ upper_case\n}\n", "    if len(dict) == 0 {\n        return false\n    }\n  \
    \  for k, _ := range dict {\n        if k != strings.ToLower(k) && k != strings.ToUpper(k)\
    \ {\n            return false\n        }\n    }\n    return true\n}\n", "    if\
    \ len(dict) == 0 {\n        return false\n    }\n    for k, _ := range dict {\n\
    \        if k != strings.ToLower(k) && k != strings.ToUpper(k) {\n           \
    \ return false\n        }\n    }\n    return true\n}\n", "    if len(dict) ==\
    \ 0 {\n        return false\n    }\n    var lower_case bool\n    var upper_case\
    \ bool\n    for key, _ := range dict {\n        if key == strings.ToLower(key)\
    \ {\n            lower_case = true\n        } else if key == strings.ToUpper(key)\
    \ {\n            upper_case = true\n        } else {\n            return false\n\
    \        }\n    }\n    return lower_case || upper_case\n}\n", "    if len(dict)\
    \ == 0 {\n        return false\n    }\n    var lower_case bool\n    var upper_case\
    \ bool\n    for key, _ := range dict {\n        if key == strings.ToLower(key)\
    \ {\n            lower_case = true\n        } else if key == strings.ToUpper(key)\
    \ {\n            upper_case = true\n        } else {\n            return false\n\
    \        }\n    }\n    return lower_case || upper_case\n}\n", "    if len(dict)\
    \ == 0 {\n        return false\n    }\n    is_lower := false\n    is_upper :=\
    \ false\n    for key, _ := range dict {\n        if key == strings.ToLower(key)\
    \ {\n            is_lower = true\n        }\n        if key == strings.ToUpper(key)\
    \ {\n            is_upper = true\n        }\n    }\n    return is_lower || is_upper\n\
    }\n", "    if len(dict) == 0 {\n        return false\n    }\n    var is_lower\
    \ bool\n    for k, _ := range dict {\n        if is_lower {\n            if k\
    \ != k[:1] + k[1:].lower() {\n                return false\n            }\n  \
    \      } else {\n            if k != k[:1] + k[1:].upper() {\n               \
    \ return false\n            }\n        }\n    }\n    return true\n}\n", "    if\
    \ len(dict) == 0 {\n        return false\n    }\n    for key, _ := range dict\
    \ {\n        if key != strings.ToLower(key) && key != strings.ToUpper(key) {\n\
    \            return false\n        }\n    }\n    return true\n}\n", "    // if\
    \ len(dict) == 0 {\n    //     return false\n    // }\n    // var is_lower bool\n\
    \    // var is_upper bool\n    // for key, _ := range dict {\n    //     if is_lower\
    \ && is_upper {\n    //         return false\n    //     }\n    //     if is_lower\
    \ == false && is_upper == false {\n    //         is_lower = key == strings.ToLower(key)\n\
    \    //         is_upper = key == strings.ToUpper(key)\n    //     } else {\n\
    \    //         if is_lower {\n    //             if key != strings.ToLower(key)\
    \ {\n    //                 return false\n    //             }\n    //       \
    \  } else {\n    //             if key != strings.ToUpper(key) {\n    //     \
    \            return false\n    //             }\n    //         }\n    //    \
    \ }\n    // }\n    // return true\n    if len(dict) == 0 {\n        return false\n\
    \    }\n    var is_lower bool\n    var is_upper bool\n    for key, _ := range\
    \ dict {\n        if is_lower && is_upper {\n            return false\n      \
    \  }\n        if is_lower == false && is_upper == false {\n            is_lower\
    \ = key == strings.ToLower(key)\n            is_upper = key == strings.ToUpper(key)\n\
    \        } else {\n            if is_lower {\n                if key != strings.ToLower(key)\
    \ {\n                    return false\n                }\n            } else {\n\
    \                if key != strings.ToUpper(key) {\n                    return\
    \ false\n                }\n            }\n        }\n    }\n    return true\n\
    }\n", "    if len(dict) == 0 {\n        return false\n    }\n    var upper bool\n\
    \    var lower bool\n    for key, _ := range dict {\n        if key == strings.ToUpper(key)\
    \ {\n            upper = true\n        } else if key == strings.ToLower(key) {\n\
    \            lower = true\n        } else {\n            return false\n      \
    \  }\n    }\n    return upper || lower\n}\n", "    if len(dict) == 0 {\n     \
    \   return false\n    }\n    is_lower := false\n    is_upper := false\n    for\
    \ k, _ := range dict {\n        if k == strings.ToLower(k) {\n            is_lower\
    \ = true\n        }\n        if k == strings.ToUpper(k) {\n            is_upper\
    \ = true\n        }\n    }\n    return is_lower || is_upper\n}\n", "    if len(dict)\
    \ == 0 {\n        return false\n    }\n    for key, _ := range dict {\n      \
    \  if key != strings.ToLower(key) && key != strings.ToUpper(key) {\n         \
    \   return false\n        }\n    }\n    return true\n}\n", "    if len(dict) ==\
    \ 0 {\n        return false\n    }\n    for k, _ := range dict {\n        if k\
    \ != strings.ToLower(k) && k != strings.ToUpper(k) {\n            return false\n\
    \        }\n    }\n    return true\n}\n", "    if len(dict) == 0 {\n        return\
    \ false\n    }\n    lower := true\n    upper := true\n    for k, _ := range dict\
    \ {\n        if k != strings.ToLower(k) {\n            lower = false\n       \
    \ }\n        if k != strings.ToUpper(k) {\n            upper = false\n       \
    \ }\n    }\n    return lower || upper\n}\n", "    if len(dict) == 0 {\n      \
    \  return false\n    }\n    var lower_case bool\n    var upper_case bool\n   \
    \ for key, _ := range dict {\n        if key == strings.ToLower(key) {\n     \
    \       lower_case = true\n        } else if key == strings.ToUpper(key) {\n \
    \           upper_case = true\n        } else {\n            return false\n  \
    \      }\n    }\n    return lower_case || upper_case\n}\n", "    if len(dict)\
    \ == 0 {\n        return false\n    }\n    var lower_case bool\n    for key, _\
    \ := range dict {\n        if key == strings.ToLower(key) {\n            lower_case\
    \ = true\n        } else if key == strings.ToUpper(key) {\n            lower_case\
    \ = false\n        } else {\n            return false\n        }\n    }\n    return\
    \ true\n}\n", "    if len(dict) == 0 {\n        return false\n    }\n    lower\
    \ := true\n    upper := true\n    for k, _ := range dict {\n        if k != strings.ToLower(k)\
    \ {\n            lower = false\n        }\n        if k != strings.ToUpper(k)\
    \ {\n            upper = false\n        }\n    }\n    return lower || upper\n\
    }\n", "    if len(dict) == 0 {\n        return false\n    }\n    is_lower := false\n\
    \    is_upper := false\n    for k, _ := range dict {\n        if k == strings.ToLower(k)\
    \ {\n            is_lower = true\n        }\n        if k == strings.ToUpper(k)\
    \ {\n            is_upper = true\n        }\n    }\n    return is_lower || is_upper\n\
    }\n", "    if len(dict) == 0 {\n        return false\n    }\n    lower_case :=\
    \ true\n    upper_case := true\n    for key, _ := range dict {\n        if key\
    \ != strings.ToLower(key) {\n            lower_case = false\n        }\n     \
    \   if key != strings.ToUpper(key) {\n            upper_case = false\n       \
    \ }\n    }\n    return lower_case || upper_case\n}\n", "    if len(dict) == 0\
    \ {\n        return false\n    }\n    var is_lower bool\n    for k, _ := range\
    \ dict {\n        if is_lower == false && k == k {\n            is_lower = true\n\
    \        } else if is_lower == true && k != k {\n            return false\n  \
    \      }\n    }\n    return true\n}\n", "    if len(dict) == 0 {\n        return\
    \ false\n    }\n    for key, _ := range dict {\n        if key != strings.ToLower(key)\
    \ && key != strings.ToUpper(key) {\n            return false\n        }\n    }\n\
    \    return true\n}\n", "    if len(dict) == 0 {\n        return false\n    }\n\
    \    is_lower := true\n    is_upper := true\n    for k, _ := range dict {\n  \
    \      if k != strings.ToLower(k) {\n            is_lower = false\n        }\n\
    \        if k != strings.ToUpper(k) {\n            is_upper = false\n        }\n\
    \    }\n    return is_lower || is_upper\n}\n", "    if len(dict) == 0 {\n    \
    \    return false\n    }\n    var lower_case bool\n    var upper_case bool\n \
    \   for k, _ := range dict {\n        if k == strings.ToLower(k) {\n         \
    \   lower_case = true\n        }\n        if k == strings.ToUpper(k) {\n     \
    \       upper_case = true\n        }\n    }\n    return lower_case || upper_case\n\
    }\n", "    if len(dict) == 0 {\n        return false\n    }\n    for k, _ := range\
    \ dict {\n        if k == strings.ToLower(k) {\n            return true\n    \
    \    }\n        if k == strings.ToUpper(k) {\n            return true\n      \
    \  }\n    }\n    return false\n}\n", "    if len(dict) == 0 {\n        return\
    \ false\n    }\n    lower := true\n    upper := true\n    for key, _ := range\
    \ dict {\n        if key != string([]rune(key)[0]) {\n            lower = false\n\
    \            upper = false\n            break\n        }\n        if key != string([]rune(key)[0])\
    \ && key != string([]rune(key)[0]) {\n            lower = false\n            upper\
    \ = false\n            break\n        }\n    }\n    return lower || upper\n}\n",
  "    if len(dict) == 0 {\n        return false\n    }\n    for k, _ := range dict\
    \ {\n        if k != strings.ToLower(k) && k != strings.ToUpper(k) {\n       \
    \     return false\n        }\n    }\n    return true\n}\n", "    if len(dict)\
    \ == 0 {\n        return false\n    }\n    var lower_case bool\n    for k, _ :=\
    \ range dict {\n        if k == strings.ToLower(k) {\n            lower_case =\
    \ true\n        } else if k == strings.ToUpper(k) {\n            lower_case =\
    \ false\n        } else {\n            return false\n        }\n    }\n    return\
    \ true\n}\n", "    if len(dict) == 0 {\n        return false\n    }\n    var lower\
    \ bool\n    var upper bool\n    for k, _ := range dict {\n        if k == strings.ToLower(k)\
    \ {\n            lower = true\n        }\n        if k == strings.ToUpper(k) {\n\
    \            upper = true\n        }\n    }\n    return lower || upper\n}\n",
  "    if len(dict) == 0 {\n        return false\n    }\n    var lower_case_keys bool\n\
    \    var upper_case_keys bool\n    for key, _ := range dict {\n        if key\
    \ == strings.ToLower(key) {\n            lower_case_keys = true\n        } else\
    \ if key == strings.ToUpper(key) {\n            upper_case_keys = true\n     \
    \   } else {\n            return false\n        }\n    }\n    return lower_case_keys\
    \ || upper_case_keys\n}\n", "    if len(dict) == 0 {\n        return false\n \
    \   }\n    upper := true\n    lower := true\n    for k, _ := range dict {\n  \
    \      if k != strings.ToUpper(k) {\n            upper = false\n        }\n  \
    \      if k != strings.ToLower(k) {\n            lower = false\n        }\n  \
    \  }\n    return upper || lower\n}\n", "    if len(dict) == 0 {\n        return\
    \ false\n    }\n    lower := true\n    upper := true\n    for key, _ := range\
    \ dict {\n        if key != strings.ToLower(key) {\n            lower = false\n\
    \        }\n        if key != strings.ToUpper(key) {\n            upper = false\n\
    \        }\n    }\n    return lower || upper\n}\n", "    if len(dict) == 0 {\n\
    \        return false\n    }\n    lower_case := true\n    upper_case := true\n\
    \    for key, _ := range dict {\n        if key != strings.ToLower(key) {\n  \
    \          lower_case = false\n        }\n        if key != strings.ToUpper(key)\
    \ {\n            upper_case = false\n        }\n    }\n    return lower_case ||\
    \ upper_case\n}\n", "    if len(dict) == 0 {\n        return false\n    }\n  \
    \  for key, _ := range dict {\n        if key != strings.ToLower(key) && key !=\
    \ strings.ToUpper(key) {\n            return false\n        }\n    }\n    return\
    \ true\n}\n", "    if len(dict) == 0 {\n        return false\n    }\n    var lower_case_keys\
    \ bool\n    var upper_case_keys bool\n    for k, _ := range dict {\n        if\
    \ k == strings.ToLower(k) {\n            lower_case_keys = true\n        } else\
    \ if k == strings.ToUpper(k) {\n            upper_case_keys = true\n        }\
    \ else {\n            return false\n        }\n    }\n    return lower_case_keys\
    \ || upper_case_keys\n}\n", "    if len(dict) == 0 {\n        return false\n \
    \   }\n    lower := true\n    upper := true\n    for key, _ := range dict {\n\
    \        if key != strings.ToLower(key) {\n            lower = false\n       \
    \ }\n        if key != strings.ToUpper(key) {\n            upper = false\n   \
    \     }\n    }\n    return lower || upper\n}\n", "    if len(dict) == 0 {\n  \
    \      return false\n    }\n    for key, _ := range dict {\n        if key !=\
    \ strings.ToLower(key) && key != strings.ToUpper(key) {\n            return false\n\
    \        }\n    }\n    return true\n}\n", "    if len(dict) == 0 {\n        return\
    \ false\n    }\n    is_lower := false\n    is_upper := false\n    for k, _ :=\
    \ range dict {\n        if k == strings.ToLower(k) {\n            is_lower = true\n\
    \        }\n        if k == strings.ToUpper(k) {\n            is_upper = true\n\
    \        }\n    }\n    return is_lower == is_upper\n}\n", "    if len(dict) ==\
    \ 0 {\n        return false\n    }\n    lower := true\n    upper := true\n   \
    \ for k, _ := range dict {\n        if k != strings.ToLower(k) {\n           \
    \ lower = false\n        }\n        if k != strings.ToUpper(k) {\n           \
    \ upper = false\n        }\n    }\n    return lower || upper\n}\n", "    if len(dict)\
    \ == 0 {\n        return false\n    }\n    lower := true\n    upper := true\n\
    \    for key, _ := range dict {\n        if key != strings.ToLower(key) {\n  \
    \          lower = false\n        }\n        if key != strings.ToUpper(key) {\n\
    \            upper = false\n        }\n    }\n    return lower || upper\n}\n",
  "    if len(dict) == 0 {\n        return false\n    }\n    var lower_case bool\n\
    \    var upper_case bool\n    for k, _ := range dict {\n        if k == strings.ToLower(k)\
    \ {\n            lower_case = true\n        }\n        if k == strings.ToUpper(k)\
    \ {\n            upper_case = true\n        }\n    }\n    return lower_case &&\
    \ !upper_case || !lower_case && upper_case\n}\n", "    if len(dict) == 0 {\n \
    \       return false\n    }\n    for k, _ := range dict {\n        if k != strings.ToLower(k)\
    \ && k != strings.ToUpper(k) {\n            return false\n        }\n    }\n \
    \   return true\n}\n", "    if len(dict) == 0 {\n        return false\n    }\n\
    \    is_lower := false\n    is_upper := false\n    for k, _ := range dict {\n\
    \        if k == strings.ToLower(k) {\n            is_lower = true\n        }\n\
    \        if k == strings.ToUpper(k) {\n            is_upper = true\n        }\n\
    \    }\n    return is_lower || is_upper\n}\n", "    if len(dict) == 0 {\n    \
    \    return false\n    }\n    var is_lower_case bool\n    for k, _ := range dict\
    \ {\n        if k == strings.ToLower(k) {\n            is_lower_case = true\n\
    \        } else if k == strings.ToUpper(k) {\n            is_lower_case = false\n\
    \        } else {\n            return false\n        }\n    }\n    return is_lower_case\n\
    }\n", "    if len(dict) == 0 {\n        return false\n    }\n    for k, _ := range\
    \ dict {\n        if k != strings.ToLower(k) && k != strings.ToUpper(k) {\n  \
    \          return false\n        }\n    }\n    return true\n}\n", "    if len(dict)\
    \ == 0 {\n        return false\n    }\n    is_lower := true\n    is_upper := true\n\
    \    for key, _ := range dict {\n        if key != strings.ToLower(key) {\n  \
    \          is_lower = false\n        }\n        if key != strings.ToUpper(key)\
    \ {\n            is_upper = false\n        }\n    }\n    return is_lower || is_upper\n\
    }\n", "    if len(dict) == 0 {\n        return false\n    }\n    for k, _ := range\
    \ dict {\n        if k != strings.ToLower(k) && k != strings.ToUpper(k) {\n  \
    \          return false\n        }\n    }\n    return true\n}\n", "    if len(dict)\
    \ == 0 {\n        return false\n    }\n    for key, _ := range dict {\n      \
    \  if key == \"\" {\n            return false\n        }\n        if key != strings.ToLower(key)\
    \ && key != strings.ToUpper(key) {\n            return false\n        }\n    }\n\
    \    return true\n}\n", "    if len(dict) == 0 {\n        return false\n    }\n\
    \    var lower_case bool\n    for key, _ := range dict {\n        if key == strings.ToLower(key)\
    \ {\n            lower_case = true\n        } else if key == strings.ToUpper(key)\
    \ {\n            lower_case = false\n        } else {\n            return false\n\
    \        }\n    }\n    return true\n}\n", "    if len(dict) == 0 {\n        return\
    \ false\n    }\n    lower := true\n    upper := true\n    for key, _ := range\
    \ dict {\n        if key != strings.ToLower(key) {\n            lower = false\n\
    \        }\n        if key != strings.ToUpper(key) {\n            upper = false\n\
    \        }\n    }\n    return lower || upper\n}\n", "    if len(dict) == 0 {\n\
    \        return false\n    }\n    for key, _ := range dict {\n        if key !=\
    \ strings.ToLower(key) && key != strings.ToUpper(key) {\n            return false\n\
    \        }\n    }\n    return true\n}\n", "    if len(dict) == 0 {\n        return\
    \ false\n    }\n    for k, _ := range dict {\n        if k != strings.ToLower(k)\
    \ && k != strings.ToUpper(k) {\n            return false\n        }\n    }\n \
    \   return true\n}\n", "    if len(dict) == 0 {\n        return false\n    }\n\
    \    is_lower := false\n    is_upper := false\n    for key, _ := range dict {\n\
    \        if key == strings.ToLower(key) {\n            is_lower = true\n     \
    \   }\n        if key == strings.ToUpper(key) {\n            is_upper = true\n\
    \        }\n    }\n    return is_lower || is_upper\n}\n", "    if len(dict) ==\
    \ 0 {\n        return false\n    }\n    is_lower := false\n    is_upper := false\n\
    \    for key, _ := range dict {\n        if key == strings.ToLower(key) {\n  \
    \          is_lower = true\n        }\n        if key == strings.ToUpper(key)\
    \ {\n            is_upper = true\n        }\n    }\n    return is_lower || is_upper\n\
    }\n", "    if len(dict) == 0 {\n        return false\n    }\n    var upper bool\n\
    \    var lower bool\n    for k, _ := range dict {\n        if k == strings.ToUpper(k)\
    \ {\n            upper = true\n        } else if k == strings.ToLower(k) {\n \
    \           lower = true\n        } else {\n            return false\n       \
    \ }\n    }\n    return upper || lower\n}\n", "    if len(dict) == 0 {\n      \
    \  return false\n    }\n    lower := true\n    upper := true\n    for k, _ :=\
    \ range dict {\n        if k != strings.ToLower(k) {\n            lower = false\n\
    \        }\n        if k != strings.ToUpper(k) {\n            upper = false\n\
    \        }\n    }\n    return lower || upper\n}\n", "    if len(dict) == 0 {\n\
    \        return false\n    }\n    for k, _ := range dict {\n        if k != strings.ToLower(k)\
    \ && k != strings.ToUpper(k) {\n            return false\n        }\n    }\n \
    \   return true\n}\n", "    if len(dict) == 0 {\n        return false\n    }\n\
    \    var is_lower bool\n    for k, _ := range dict {\n        if is_lower {\n\
    \            if k != k[:1] + k[1:].ToLower() {\n                return false\n\
    \            }\n        } else {\n            if k != k[:1] + k[1:].ToUpper()\
    \ {\n                return false\n            }\n        }\n        is_lower\
    \ = !is_lower\n    }\n    return true\n}\n", "    if len(dict) == 0 {\n      \
    \  return false\n    }\n    var lower_case bool\n    var upper_case bool\n   \
    \ for k, _ := range dict {\n        if k == strings.ToLower(k) {\n           \
    \ lower_case = true\n        }\n        if k == strings.ToUpper(k) {\n       \
    \     upper_case = true\n        }\n    }\n    return lower_case || upper_case\n\
    }\n", "    if len(dict) == 0 {\n        return false\n    }\n    var lower_case\
    \ bool\n    for key, _ := range dict {\n        if key == \"\" {\n           \
    \ return false\n        }\n        if key == strings.ToLower(key) {\n        \
    \    lower_case = true\n        } else if key == strings.ToUpper(key) {\n    \
    \        lower_case = false\n        } else {\n            return false\n    \
    \    }\n    }\n    return true\n}\n", "    if len(dict) == 0 {\n        return\
    \ false\n    }\n    var is_lower bool\n    for k, _ := range dict {\n        if\
    \ is_lower == false && k == k[:1] {\n            is_lower = true\n        } else\
    \ if is_lower == true && k != k[:1] {\n            return false\n        }\n \
    \   }\n    return true\n}\n", "    if len(dict) == 0 {\n        return false\n\
    \    }\n    is_lower := false\n    is_upper := false\n    for key, _ := range\
    \ dict {\n        if key == strings.ToLower(key) {\n            is_lower = true\n\
    \        }\n        if key == strings.ToUpper(key) {\n            is_upper = true\n\
    \        }\n    }\n    return is_lower || is_upper\n}\n", "    if len(dict) ==\
    \ 0 {\n        return false\n    }\n    for k, _ := range dict {\n        if k\
    \ != strings.ToLower(k) && k != strings.ToUpper(k) {\n            return false\n\
    \        }\n    }\n    return true\n}\n", "    if len(dict) == 0 {\n        return\
    \ false\n    }\n    is_upper := false\n    is_lower := false\n    for key, _ :=\
    \ range dict {\n        if key == strings.ToUpper(key) {\n            is_upper\
    \ = true\n        } else if key == strings.ToLower(key) {\n            is_lower\
    \ = true\n        } else {\n            return false\n        }\n    }\n    return\
    \ is_upper || is_lower\n}\n", "    if len(dict) == 0 {\n        return false\n\
    \    }\n    for key, _ := range dict {\n        if key != strings.ToLower(key)\
    \ && key != strings.ToUpper(key) {\n            return false\n        }\n    }\n\
    \    return true\n}\n", "    if len(dict) == 0 {\n        return false\n    }\n\
    \    upper := true\n    lower := true\n    for key, _ := range dict {\n      \
    \  if key != strings.ToUpper(key) {\n            upper = false\n        }\n  \
    \      if key != strings.ToLower(key) {\n            lower = false\n        }\n\
    \    }\n    return upper || lower\n}\n", "    if len(dict) == 0 {\n        return\
    \ false\n    }\n    for key, _ := range dict {\n        if key != strings.ToLower(key)\
    \ && key != strings.ToUpper(key) {\n            return false\n        }\n    }\n\
    \    return true\n}\n", "    if len(dict) == 0 {\n        return false\n    }\n\
    \    lower_case := true\n    upper_case := true\n    for key, _ := range dict\
    \ {\n        if key != strings.ToLower(key) {\n            lower_case = false\n\
    \        }\n        if key != strings.ToUpper(key) {\n            upper_case =\
    \ false\n        }\n    }\n    return lower_case || upper_case\n}\n", "    if\
    \ len(dict) == 0 {\n        return false\n    }\n    is_upper := false\n    is_lower\
    \ := false\n    for key, _ := range dict {\n        if key == strings.ToUpper(key)\
    \ {\n            is_upper = true\n        } else if key == strings.ToLower(key)\
    \ {\n            is_lower = true\n        } else {\n            return false\n\
    \        }\n    }\n    return is_upper || is_lower\n}\n", "    if len(dict) ==\
    \ 0 {\n        return false\n    }\n    var upper bool\n    var lower bool\n \
    \   for key, _ := range dict {\n        if key == toUpper(key) {\n           \
    \ upper = true\n        } else if key == toLower(key) {\n            lower = true\n\
    \        } else {\n            return false\n        }\n    }\n    return upper\
    \ || lower\n}\n", "    if len(dict) == 0 {\n        return false\n    }\n    for\
    \ k, _ := range dict {\n        if k != strings.ToLower(k) && k != strings.ToUpper(k)\
    \ {\n            return false\n        }\n    }\n    return true\n}\n", "    if\
    \ len(dict) == 0 {\n        return false\n    }\n    for key, _ := range dict\
    \ {\n        if key != strings.ToLower(key) && key != strings.ToUpper(key) {\n\
    \            return false\n        }\n    }\n    return true\n}\n", "    if len(dict)\
    \ == 0 {\n        return false\n    }\n    for k, _ := range dict {\n        if\
    \ k != strings.ToLower(k) && k != strings.ToUpper(k) {\n            return false\n\
    \        }\n    }\n    return true\n}\n", "    if len(dict) == 0 {\n        return\
    \ false\n    }\n    var is_lower bool\n    for k, _ := range dict {\n        if\
    \ is_lower {\n            if k != k.ToLower() {\n                return false\n\
    \            }\n        } else {\n            if k != k.ToUpper() {\n        \
    \        return false\n            }\n        }\n        is_lower = !is_lower\n\
    \    }\n    return true\n}\n", "    if len(dict) == 0 {\n        return false\n\
    \    }\n    upper := true\n    lower := true\n    for k, _ := range dict {\n \
    \       if k == strings.ToUpper(k) {\n            lower = false\n        }\n \
    \       if k == strings.ToLower(k) {\n            upper = false\n        }\n \
    \   }\n    return upper || lower\n}\n", "    if len(dict) == 0 {\n        return\
    \ false\n    }\n    var lower_case bool\n    var upper_case bool\n    for key,\
    \ _ := range dict {\n        if key == strings.ToLower(key) {\n            lower_case\
    \ = true\n        } else if key == strings.ToUpper(key) {\n            upper_case\
    \ = true\n        } else {\n            return false\n        }\n    }\n    return\
    \ lower_case || upper_case\n}\n", "    if len(dict) == 0 {\n        return false\n\
    \    }\n    is_upper := false\n    is_lower := false\n    for k, _ := range dict\
    \ {\n        if k == strings.ToUpper(k) {\n            is_upper = true\n     \
    \   } else if k == strings.ToLower(k) {\n            is_lower = true\n       \
    \ } else {\n            return false\n        }\n    }\n    return is_upper ||\
    \ is_lower\n}\n", "    if len(dict) == 0 {\n        return false\n    }\n    for\
    \ k, _ := range dict {\n        if k == strings.ToLower(k) {\n            return\
    \ true\n        }\n        if k == strings.ToUpper(k) {\n            return true\n\
    \        }\n    }\n    return false\n}\n", "    if len(dict) == 0 {\n        return\
    \ false\n    }\n    var lower_case, upper_case bool\n    for key, _ := range dict\
    \ {\n        if key == strings.ToLower(key) {\n            lower_case = true\n\
    \        } else if key == strings.ToUpper(key) {\n            upper_case = true\n\
    \        } else {\n            return false\n        }\n    }\n    return lower_case\
    \ || upper_case\n}\n", "    if len(dict) == 0 {\n        return false\n    }\n\
    \    lower := true\n    upper := true\n    for key, _ := range dict {\n      \
    \  if key != strings.ToLower(key) {\n            lower = false\n        }\n  \
    \      if key != strings.ToUpper(key) {\n            upper = false\n        }\n\
    \    }\n    return lower || upper\n}\n", "    if len(dict) == 0 {\n        return\
    \ false\n    }\n    lower := true\n    upper := true\n    for key, _ := range\
    \ dict {\n        if key != strings.ToLower(key) {\n            lower = false\n\
    \        }\n        if key != strings.ToUpper(key) {\n            upper = false\n\
    \        }\n    }\n    return lower || upper\n}\n", "    if len(dict) == 0 {\n\
    \        return false\n    }\n    lower := true\n    upper := true\n    for key,\
    \ _ := range dict {\n        if key != strings.ToLower(key) {\n            lower\
    \ = false\n        }\n        if key != strings.ToUpper(key) {\n            upper\
    \ = false\n        }\n    }\n    return lower || upper\n}\n", "    if len(dict)\
    \ == 0 {\n        return false\n    }\n    var lower bool\n    var upper bool\n\
    \    for key, _ := range dict {\n        if key == strings.ToLower(key) {\n  \
    \          lower = true\n        }\n        if key == strings.ToUpper(key) {\n\
    \            upper = true\n        }\n    }\n    return lower && !upper || !lower\
    \ && upper\n}\n", "    if len(dict) == 0 {\n        return false\n    }\n    is_lower\
    \ := false\n    is_upper := false\n    for key, _ := range dict {\n        if\
    \ key == strings.ToLower(key) {\n            is_lower = true\n        }\n    \
    \    if key == strings.ToUpper(key) {\n            is_upper = true\n        }\n\
    \    }\n    return is_lower || is_upper\n}\n", "    if len(dict) == 0 {\n    \
    \    return false\n    }\n    for key, _ := range dict {\n        if key == \"\
    \" {\n            return false\n        }\n        if key != strings.ToLower(key)\
    \ && key != strings.ToUpper(key) {\n            return false\n        }\n    }\n\
    \    return true\n}\n", "    if len(dict) == 0 {\n        return false\n    }\n\
    \    is_lower := false\n    is_upper := false\n    for key, _ := range dict {\n\
    \        if key == strings.ToLower(key) {\n            is_lower = true\n     \
    \   }\n        if key == strings.ToUpper(key) {\n            is_upper = true\n\
    \        }\n    }\n    return is_lower || is_upper\n}\n", "    if len(dict) ==\
    \ 0 {\n        return false\n    }\n    var lower_case bool\n    var upper_case\
    \ bool\n    for key, _ := range dict {\n        if key == strings.ToLower(key)\
    \ {\n            lower_case = true\n        } else if key == strings.ToUpper(key)\
    \ {\n            upper_case = true\n        } else {\n            return false\n\
    \        }\n    }\n    return lower_case || upper_case\n}\n", "    if len(dict)\
    \ == 0 {\n        return false\n    }\n    var upper bool\n    var lower bool\n\
    \    for key, _ := range dict {\n        if key == strings.ToUpper(key) {\n  \
    \          upper = true\n        } else if key == strings.ToLower(key) {\n   \
    \         lower = true\n        } else {\n            return false\n        }\n\
    \    }\n    return upper || lower\n}\n", "    if len(dict) == 0 {\n        return\
    \ false\n    }\n    var is_lower bool\n    for k, _ := range dict {\n        if\
    \ is_lower == false && k == k[:1] {\n            is_lower = true\n        } else\
    \ if is_lower == true && k != k[:1] {\n            return false\n        }\n \
    \   }\n    return true\n}\n", "    if len(dict) == 0 {\n        return false\n\
    \    }\n    var lower_case_keys bool\n    var upper_case_keys bool\n    for k,\
    \ _ := range dict {\n        if k == k[0:1] {\n            lower_case_keys = true\n\
    \        } else {\n            upper_case_keys = true\n        }\n    }\n    return\
    \ lower_case_keys != upper_case_keys\n}\n", "    if len(dict) == 0 {\n       \
    \ return false\n    }\n    is_lower := false\n    is_upper := false\n    for k,\
    \ _ := range dict {\n        if k == strings.ToLower(k) {\n            is_lower\
    \ = true\n        }\n        if k == strings.ToUpper(k) {\n            is_upper\
    \ = true\n        }\n    }\n    return is_lower || is_upper\n}\n", "    if len(dict)\
    \ == 0 {\n        return false\n    }\n    var first_key string\n    var first_key_is_lower\
    \ bool\n    for key, _ := range dict {\n        first_key = key\n        first_key_is_lower\
    \ = (key == first_key)\n        break\n    }\n    for key, _ := range dict {\n\
    \        if (key == key) != first_key_is_lower {\n            return false\n \
    \       }\n    }\n    return true\n}\n", "    if len(dict) == 0 {\n        return\
    \ false\n    }\n    for key, _ := range dict {\n        if key == strings.ToLower(key)\
    \ {\n            return true\n        }\n        if key == strings.ToUpper(key)\
    \ {\n            return true\n        }\n    }\n    return false\n}\n", "    if\
    \ len(dict) == 0 {\n        return false\n    }\n    for key, _ := range dict\
    \ {\n        if key != strings.ToLower(key) && key != strings.ToUpper(key) {\n\
    \            return false\n        }\n    }\n    return true\n}\n", "    if len(dict)\
    \ == 0 {\n        return false\n    }\n    for key, _ := range dict {\n      \
    \  if key != strings.ToLower(key) && key != strings.ToUpper(key) {\n         \
    \   return false\n        }\n    }\n    return true\n}\n", "    if len(dict) ==\
    \ 0 {\n        return false\n    }\n    lower_case := true\n    upper_case :=\
    \ true\n    for key, _ := range dict {\n        if key != strings.ToLower(key)\
    \ {\n            lower_case = false\n        }\n        if key != strings.ToUpper(key)\
    \ {\n            upper_case = false\n        }\n    }\n    return lower_case ||\
    \ upper_case\n}\n", "    if len(dict) == 0 {\n        return false\n    }\n  \
    \  var lower bool\n    for k, _ := range dict {\n        if k == k[:1] {\n   \
    \         lower = true\n        } else {\n            lower = false\n        }\n\
    \    }\n    return lower\n}\n", "    if len(dict) == 0 {\n        return false\n\
    \    }\n    var lower_case bool\n    for key, _ := range dict {\n        if key\
    \ == key[:1] {\n            lower_case = true\n        } else {\n            lower_case\
    \ = false\n        }\n    }\n    return lower_case\n}\n", "    if len(dict) ==\
    \ 0 {\n        return false\n    }\n    lower := true\n    upper := true\n   \
    \ for k, _ := range dict {\n        if k != strings.ToLower(k) {\n           \
    \ lower = false\n        }\n        if k != strings.ToUpper(k) {\n           \
    \ upper = false\n        }\n    }\n    return lower || upper\n}\n", "    if len(dict)\
    \ == 0 {\n        return false\n    }\n    is_lower := true\n    is_upper := true\n\
    \    for k, _ := range dict {\n        if k != strings.ToLower(k) {\n        \
    \    is_lower = false\n        }\n        if k != strings.ToUpper(k) {\n     \
    \       is_upper = false\n        }\n    }\n    return is_lower || is_upper\n\
    }\n", "    if len(dict) == 0 {\n        return false\n    }\n    var lower_case\
    \ bool\n    var upper_case bool\n    for key, _ := range dict {\n        if key\
    \ == strings.ToLower(key) {\n            lower_case = true\n        } else if\
    \ key == strings.ToUpper(key) {\n            upper_case = true\n        } else\
    \ {\n            return false\n        }\n    }\n    return lower_case || upper_case\n\
    }\n", "    if len(dict) == 0 {\n        return false\n    }\n    is_lower := true\n\
    \    is_upper := true\n    for key, _ := range dict {\n        if key != strings.ToLower(key)\
    \ {\n            is_lower = false\n        }\n        if key != strings.ToUpper(key)\
    \ {\n            is_upper = false\n        }\n    }\n    return is_lower || is_upper\n\
    }\n", "    if len(dict) == 0 {\n        return false\n    }\n    is_lower := false\n\
    \    is_upper := false\n    for key, _ := range dict {\n        if key == strings.ToLower(key)\
    \ {\n            is_lower = true\n        }\n        if key == strings.ToUpper(key)\
    \ {\n            is_upper = true\n        }\n    }\n    return is_lower || is_upper\n\
    }\n", "    if len(dict) == 0 {\n        return false\n    }\n    for k, _ := range\
    \ dict {\n        if k != strings.ToLower(k) && k != strings.ToUpper(k) {\n  \
    \          return false\n        }\n    }\n    return true\n}\n", "    if len(dict)\
    \ == 0 {\n        return false\n    }\n    upper := true\n    lower := true\n\
    \    for k, _ := range dict {\n        if k != strings.ToUpper(k) {\n        \
    \    upper = false\n        }\n        if k != strings.ToLower(k) {\n        \
    \    lower = false\n        }\n    }\n    return upper || lower\n}\n", "    if\
    \ len(dict) == 0 {\n        return false\n    }\n    var lower_case_keys bool\n\
    \    var upper_case_keys bool\n    for key, _ := range dict {\n        if key\
    \ == strings.ToLower(key) {\n            lower_case_keys = true\n        } else\
    \ if key == strings.ToUpper(key) {\n            upper_case_keys = true\n     \
    \   } else {\n            return false\n        }\n    }\n    return lower_case_keys\
    \ || upper_case_keys\n}\n", "    if len(dict) == 0 {\n        return false\n \
    \   }\n    for key, _ := range dict {\n        if key != strings.ToLower(key)\
    \ && key != strings.ToUpper(key) {\n            return false\n        }\n    }\n\
    \    return true\n}\n", "    if len(dict) == 0 {\n        return false\n    }\n\
    \    for key, _ := range dict {\n        if key != strings.ToLower(key) && key\
    \ != strings.ToUpper(key) {\n            return false\n        }\n    }\n    return\
    \ true\n}\n", "    if len(dict) == 0 {\n        return false\n    }\n    for k,\
    \ _ := range dict {\n        if k != strings.ToLower(k) && k != strings.ToUpper(k)\
    \ {\n            return false\n        }\n    }\n    return true\n}\n", "    if\
    \ len(dict) == 0 {\n        return false\n    }\n    lower := true\n    upper\
    \ := true\n    for key, _ := range dict {\n        if key != strings.ToLower(key)\
    \ {\n            lower = false\n        }\n        if key != strings.ToUpper(key)\
    \ {\n            upper = false\n        }\n    }\n    return lower || upper\n\
    }\n", "    if len(dict) == 0 {\n        return false\n    }\n    is_lower := false\n\
    \    is_upper := false\n    for k, _ := range dict {\n        if k == strings.ToLower(k)\
    \ {\n            is_lower = true\n        }\n        if k == strings.ToUpper(k)\
    \ {\n            is_upper = true\n        }\n    }\n    return is_lower || is_upper\n\
    }\n", "    if len(dict) == 0 {\n        return false\n    }\n    lower := true\n\
    \    upper := true\n    for k, _ := range dict {\n        if k != strings.ToLower(k)\
    \ {\n            lower = false\n        }\n        if k != strings.ToUpper(k)\
    \ {\n            upper = false\n        }\n    }\n    return lower || upper\n\
    }\n", "    if len(dict) == 0 {\n        return false\n    }\n    upper := true\n\
    \    lower := true\n    for key, _ := range dict {\n        if key != strings.ToUpper(key)\
    \ {\n            upper = false\n        }\n        if key != strings.ToLower(key)\
    \ {\n            lower = false\n        }\n    }\n    return upper || lower\n\
    }\n", "    if len(dict) == 0 {\n        return false\n    }\n    is_lower := false\n\
    \    is_upper := false\n    for key, _ := range dict {\n        if key == strings.ToLower(key)\
    \ {\n            is_lower = true\n        }\n        if key == strings.ToUpper(key)\
    \ {\n            is_upper = true\n        }\n    }\n    return is_lower || is_upper\n\
    }\n", "    if len(dict) == 0 {\n        return false\n    }\n    var lower bool\n\
    \    var upper bool\n    for k, _ := range dict {\n        if k == strings.ToLower(k)\
    \ {\n            lower = true\n        }\n        if k == strings.ToUpper(k) {\n\
    \            upper = true\n        }\n    }\n    return lower || upper\n}\n",
  "    if len(dict) == 0 {\n        return false\n    }\n    for k, _ := range dict\
    \ {\n        if k != strings.ToLower(k) && k != strings.ToUpper(k) {\n       \
    \     return false\n        }\n    }\n    return true\n}\n", "    if len(dict)\
    \ == 0 {\n        return false\n    }\n    var lower bool\n    var upper bool\n\
    \    for key, _ := range dict {\n        if key == strings.ToLower(key) {\n  \
    \          lower = true\n        }\n        if key == strings.ToUpper(key) {\n\
    \            upper = true\n        }\n    }\n    return lower && !upper || !lower\
    \ && upper\n}\n", "    if len(dict) == 0 {\n        return false\n    }\n    lower_case\
    \ := true\n    upper_case := true\n    for key, _ := range dict {\n        if\
    \ key != strings.ToLower(key) {\n            lower_case = false\n        }\n \
    \       if key != strings.ToUpper(key) {\n            upper_case = false\n   \
    \     }\n    }\n    return lower_case || upper_case\n}\n", "    if len(dict) ==\
    \ 0 {\n        return false\n    }\n    lower := true\n    upper := true\n   \
    \ for k, _ := range dict {\n        if k != strings.ToLower(k) {\n           \
    \ lower = false\n        }\n        if k != strings.ToUpper(k) {\n           \
    \ upper = false\n        }\n    }\n    return lower || upper\n}\n", "    if len(dict)\
    \ == 0 {\n        return false\n    }\n    is_lower := false\n    is_upper :=\
    \ false\n    for key, _ := range dict {\n        if key == strings.ToLower(key)\
    \ {\n            is_lower = true\n        }\n        if key == strings.ToUpper(key)\
    \ {\n            is_upper = true\n        }\n    }\n    return is_lower || is_upper\n\
    }\n", "    if len(dict) == 0 {\n        return false\n    }\n    lower := true\n\
    \    upper := true\n    for key, _ := range dict {\n        if key != strings.ToLower(key)\
    \ {\n            lower = false\n        }\n        if key != strings.ToUpper(key)\
    \ {\n            upper = false\n        }\n    }\n    return lower || upper\n\
    }\n", "    if len(dict) == 0 {\n        return false\n    }\n    var lower_case\
    \ bool\n    for key, _ := range dict {\n        if key == strings.ToLower(key)\
    \ {\n            lower_case = true\n        } else if key == strings.ToUpper(key)\
    \ {\n            lower_case = false\n        } else {\n            return false\n\
    \        }\n    }\n    return true\n}\n", "    if len(dict) == 0 {\n        return\
    \ false\n    }\n    lower_case := true\n    upper_case := true\n    for k, _ :=\
    \ range dict {\n        if k != strings.ToLower(k) {\n            lower_case =\
    \ false\n        }\n        if k != strings.ToUpper(k) {\n            upper_case\
    \ = false\n        }\n    }\n    return lower_case || upper_case\n}\n", "    if\
    \ len(dict) == 0 {\n        return false\n    }\n    var is_upper bool\n    for\
    \ k, _ := range dict {\n        if k == strings.ToUpper(k) {\n            is_upper\
    \ = true\n        } else if k == strings.ToLower(k) {\n            is_upper =\
    \ false\n        } else {\n            return false\n        }\n    }\n    return\
    \ true\n}\n", "    if len(dict) == 0 {\n        return false\n    }\n    for key,\
    \ _ := range dict {\n        if key != strings.ToLower(key) && key != strings.ToUpper(key)\
    \ {\n            return false\n        }\n    }\n    return true\n}\n", "    if\
    \ len(dict) == 0 {\n        return false\n    }\n    for key, _ := range dict\
    \ {\n        if key != strings.ToLower(key) && key != strings.ToUpper(key) {\n\
    \            return false\n        }\n    }\n    return true\n}\n", "    if len(dict)\
    \ == 0 {\n        return false\n    }\n    for key, _ := range dict {\n      \
    \  if key == \"\" {\n            return false\n        }\n        if key == strings.ToLower(key)\
    \ {\n            return true\n        }\n        if key == strings.ToUpper(key)\
    \ {\n            return true\n        }\n    }\n    return false\n}\n", "    if\
    \ len(dict) == 0 {\n        return false\n    }\n    lower := true\n    upper\
    \ := true\n    for key, _ := range dict {\n        if key != strings.ToLower(key)\
    \ {\n            lower = false\n        }\n        if key != strings.ToUpper(key)\
    \ {\n            upper = false\n        }\n    }\n    return lower || upper\n\
    }\n", "    if len(dict) == 0 {\n        return false\n    }\n    lower := true\n\
    \    upper := true\n    for key, _ := range dict {\n        if key != strings.ToLower(key)\
    \ {\n            lower = false\n        }\n        if key != strings.ToUpper(key)\
    \ {\n            upper = false\n        }\n    }\n    return lower || upper\n\
    }\n", "    if len(dict) == 0 {\n        return false\n    }\n    for key, _ :=\
    \ range dict {\n        if key != strings.ToLower(key) && key != strings.ToUpper(key)\
    \ {\n            return false\n        }\n    }\n    return true\n}\n", "    if\
    \ len(dict) == 0 {\n        return false\n    }\n    is_lower := true\n    is_upper\
    \ := true\n    for key, _ := range dict {\n        if key != strings.ToLower(key)\
    \ {\n            is_lower = false\n        }\n        if key != strings.ToUpper(key)\
    \ {\n            is_upper = false\n        }\n    }\n    return is_lower || is_upper\n\
    }\n"]
stop_tokens:
- "\nfunc"
- struct
- "\n// "

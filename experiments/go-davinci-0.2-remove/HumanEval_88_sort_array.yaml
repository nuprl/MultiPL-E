name: HumanEval_88_sort_array
language: go_test.go
prompt: "package sort_array_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
  // Given an array of non-negative integers, return a copy of the given array after\
  \ sorting,\n// you will sort the given array in ascending order if the sum( first\
  \ index value, last index value) is odd,\n// or sort it in descending order if the\
  \ sum( first index value, last index value) is even.\n// Note:\n// * don't change\
  \ the given array.\n// Examples:\nfunc sort_array(array []int) []int {\n"
tests: "func TestSort_Array(t *testing.T) {\n  candidate := sort_array\n\ttype test\
  \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests :=\
  \ []test{\n     { actual: candidate([]int{}), expected: []int{} },\n     { actual:\
  \ candidate([]int{5}), expected: []int{5} },\n     { actual: candidate([]int{2,\
  \ 4, 3, 0, 1, 5}), expected: []int{0, 1, 2, 3, 4, 5} },\n     { actual: candidate([]int{2,\
  \ 4, 3, 0, 1, 5, 6}), expected: []int{6, 5, 4, 3, 2, 1, 0} },\n     { actual: candidate([]int{2,\
  \ 1}), expected: []int{1, 2} },\n     { actual: candidate([]int{15, 42, 87, 32,\
  \ 11, 0}), expected: []int{0, 11, 15, 32, 42, 87} },\n     { actual: candidate([]int{21,\
  \ 14, 23, 11}), expected: []int{23, 21, 14, 11} },\n   }\n\n\tfor i, tc := range\
  \ tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\
  \tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
  \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\
  \t}\n}\n"
completions: ["    if len(array) <= 1 {\n        return array\n    }\n    if array[0]\
    \ + array[len(array) - 1] % 2 == 0 {\n        for i := 0; i < len(array) / 2;\
    \ i++ {\n            array[i], array[len(array) - 1 - i] = array[len(array) -\
    \ 1 - i], array[i]\n        }\n    }\n    return array\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if array[0] + array[len(array) - 1]\
    \ % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n            array[i],\
    \ array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n\
    \    }\n    return array\n}\n", "    if len(array) == 0 {\n        return array\n\
    \    }\n    if array[0] + array[len(array) - 1] % 2 == 0 {\n        for i := 0;\
    \ i < len(array) / 2; i++ {\n            array[i], array[len(array) - 1 - i] =\
    \ array[len(array) - 1 - i], array[i]\n        }\n    }\n    return array\n}\n",
  "    if len(array) <= 1 {\n        return array\n    }\n    if (array[0] + array[len(array)\
    \ - 1]) % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n          \
    \  array[i], array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n\
    \        }\n    }\n    return array\n}\n", "    if len(array) == 0 {\n       \
    \ return array\n    }\n    if array[0] + array[len(array) - 1] % 2 == 0 {\n  \
    \      for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return\
    \ array\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if\
    \ array[0] + array[len(array) - 1] % 2 == 0 {\n        for i := 0; i < len(array)\
    \ / 2; i++ {\n            array[i], array[len(array) - 1 - i] = array[len(array)\
    \ - 1 - i], array[i]\n        }\n    }\n    return array\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if array[0] + array[len(array) - 1]\
    \ % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n            array[i],\
    \ array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n\
    \    }\n    return array\n}\n", "    if len(array) == 0 {\n        return array\n\
    \    }\n    if array[0] + array[len(array) - 1] % 2 == 0 {\n        for i := 0;\
    \ i < len(array) / 2; i++ {\n            array[i], array[len(array) - 1 - i] =\
    \ array[len(array) - 1 - i], array[i]\n        }\n    }\n    return array\n}\n",
  "    if len(array) == 0 {\n        return array\n    }\n    if array[0] + array[len(array)\
    \ - 1] % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n           \
    \ array[i], array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n\
    \        }\n    }\n    return array\n}\n", "    if len(array) == 0 {\n       \
    \ return array\n    }\n    if array[0] + array[len(array) - 1] % 2 == 0 {\n  \
    \      for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return\
    \ array\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if\
    \ array[0] + array[len(array) - 1] % 2 == 0 {\n        for i := 0; i < len(array)\
    \ / 2; i++ {\n            array[i], array[len(array) - 1 - i] = array[len(array)\
    \ - 1 - i], array[i]\n        }\n    }\n    return array\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if array[0] + array[len(array) - 1]\
    \ % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n            array[i],\
    \ array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n\
    \    }\n    return array\n}\n", "    if len(array) == 0 {\n        return array\n\
    \    }\n    if array[0] + array[len(array) - 1] % 2 == 0 {\n        for i := 0;\
    \ i < len(array) / 2; i++ {\n            array[i], array[len(array) - 1 - i] =\
    \ array[len(array) - 1 - i], array[i]\n        }\n    }\n    return array\n}\n",
  "    if len(array) == 0 {\n        return array\n    }\n    if array[0] + array[len(array)\
    \ - 1] % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n           \
    \ array[i], array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n\
    \        }\n    }\n    return array\n}\n", "    if len(array) == 0 {\n       \
    \ return array\n    }\n    if array[0] + array[len(array) - 1] % 2 == 0 {\n  \
    \      for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return\
    \ array\n}\n", "    // write your code here\n    return array\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if array[0] + array[len(array) - 1]\
    \ % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n            array[i],\
    \ array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n\
    \    }\n    return array\n}\n", "    if len(array) == 0 {\n        return array\n\
    \    }\n    if array[0] + array[len(array) - 1] % 2 == 0 {\n        // even\n\
    \        for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    } else {\n  \
    \      // odd\n        for i := 0; i < len(array) / 2; i++ {\n            array[i],\
    \ array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n\
    \    }\n    return array\n}\n", "    if array == nil || len(array) == 0 {\n  \
    \      return array\n    }\n    if len(array) == 1 {\n        return array\n \
    \   }\n    if array[0] + array[len(array) - 1] % 2 == 0 {\n        for i := 0;\
    \ i < len(array) / 2; i++ {\n            array[i], array[len(array) - 1 - i] =\
    \ array[len(array) - 1 - i], array[i]\n        }\n    }\n    return array\n}\n",
  "    if len(array) == 0 {\n        return array\n    }\n    if len(array) == 1 {\n\
    \        return array\n    }\n    if array[0] + array[len(array) - 1] % 2 == 0\
    \ {\n        // sort in descending order\n        for i := 0; i < len(array) -\
    \ 1; i++ {\n            for j := i + 1; j < len(array); j++ {\n              \
    \  if array[i] < array[j] {\n                    array[i], array[j] = array[j],\
    \ array[i]\n                }\n            }\n        }\n    } else {\n      \
    \  // sort in ascending order\n        for i := 0; i < len(array) - 1; i++ {\n\
    \            for j := i + 1; j < len(array); j++ {\n                if array[i]\
    \ > array[j] {\n                    array[i], array[j] = array[j], array[i]\n\
    \                }\n            }\n        }\n    }\n    return array\n}\n", " \
    \   if len(array) == 0 {\n        return array\n    }\n    if (array[0] + array[len(array)\
    \ - 1]) % 2 == 0 {\n        // even\n        for i := 0; i < len(array) / 2; i++\
    \ {\n            array[i], array[len(array) - 1 - i] = array[len(array) - 1 -\
    \ i], array[i]\n        }\n    } else {\n        // odd\n        for i := 0; i\
    \ < len(array) / 2; i++ {\n            array[i], array[len(array) - 1 - i] = array[len(array)\
    \ - 1 - i], array[i]\n        }\n    }\n    return array\n}\n", "    // Write\
    \ your code here\n    if len(array) == 0 {\n        return array\n    }\n    if\
    \ array[0] + array[len(array) - 1] % 2 == 0 {\n        return sort_array_desc(array)\n\
    \    }\n    return sort_array_asc(array)\n}\n", "    if len(array) == 0 {\n  \
    \      return array\n    }\n    if array[0] + array[len(array) - 1] % 2 == 0 {\n\
    \        for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return\
    \ array\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if\
    \ array[0] + array[len(array) - 1] % 2 == 0 {\n        // even\n        for i\
    \ := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array) - 1\
    \ - i] = array[len(array) - 1 - i], array[i]\n        }\n    } else {\n      \
    \  // odd\n        for i := 0; i < len(array) / 2; i++ {\n            array[i],\
    \ array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n\
    \    }\n    return array\n}\n", "    if len(array) == 0 {\n        return array\n\
    \    }\n    if array[0] + array[len(array) - 1] % 2 == 0 {\n        for i := 0;\
    \ i < len(array) / 2; i++ {\n            array[i], array[len(array) - 1 - i] =\
    \ array[len(array) - 1 - i], array[i]\n        }\n    }\n    return array\n}\n",
  "    if len(array) == 0 {\n        return array\n    }\n    if array[0] + array[len(array)\
    \ - 1] % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n           \
    \ array[i], array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n\
    \        }\n    }\n    return array\n}\n", "    if len(array) < 2 {\n        return\
    \ array\n    }\n    if (array[0] + array[len(array) - 1]) % 2 == 0 {\n       \
    \ for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    for i\
    \ := 0; i < len(array) - 1; i++ {\n        for j := i + 1; j < len(array); j++\
    \ {\n            if array[i] > array[j] {\n                array[i], array[j]\
    \ = array[j], array[i]\n            }\n        }\n    }\n    return array\n}\n",
  "    if len(array) == 0 {\n        return array\n    }\n    if array[0] + array[len(array)\
    \ - 1] % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n           \
    \ array[i], array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n\
    \        }\n    }\n    return array\n}\n", "    if len(array) == 0 {\n       \
    \ return array\n    }\n    if array[0] + array[len(array) - 1] % 2 == 0 {\n  \
    \      for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return\
    \ array\n}\n", "    if len(array) <= 1 {\n        return array\n    }\n    if\
    \ array[0] + array[len(array) - 1] % 2 == 0 {\n        for i := 0; i < len(array)\
    \ / 2; i++ {\n            array[i], array[len(array) - 1 - i] = array[len(array)\
    \ - 1 - i], array[i]\n        }\n    }\n    return array\n}\n", "    if array\
    \ == nil || len(array) == 0 {\n        return array\n    }\n    if len(array)\
    \ == 1 {\n        return array\n    }\n    if array[0] + array[len(array) - 1]\
    \ % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n            array[i],\
    \ array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n\
    \    }\n    return array\n}\n", "    if len(array) == 0 {\n        return array\n\
    \    }\n    if array[0] + array[len(array) - 1] % 2 == 0 {\n        for i := 0;\
    \ i < len(array) / 2; i++ {\n            array[i], array[len(array) - 1 - i] =\
    \ array[len(array) - 1 - i], array[i]\n        }\n    }\n    return array\n}\n",
  "    if len(array) == 0 {\n        return array\n    }\n    if array[0] + array[len(array)\
    \ - 1] % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n           \
    \ array[i], array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n\
    \        }\n    }\n    return array\n}\n", "    if len(array) == 0 {\n       \
    \ return array\n    }\n    if array[0] + array[len(array) - 1] % 2 == 0 {\n  \
    \      for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return\
    \ array\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if\
    \ array[0] + array[len(array) - 1] % 2 == 0 {\n        for i := 0; i < len(array)\
    \ / 2; i++ {\n            array[i], array[len(array) - 1 - i] = array[len(array)\
    \ - 1 - i], array[i]\n        }\n    }\n    return array\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if array[0] + array[len(array) - 1]\
    \ % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n            array[i],\
    \ array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n\
    \    }\n    return array\n}\n", "    if len(array) == 0 {\n        return array\n\
    \    }\n    if array[0] + array[len(array) - 1] % 2 == 0 {\n        // even\n\
    \        for i := 0; i < len(array) / 2; i++ {\n            for j := i + 1; j\
    \ < len(array) - i; j++ {\n                if array[j] > array[j - 1] {\n    \
    \                array[j], array[j - 1] = array[j - 1], array[j]\n           \
    \     }\n            }\n        }\n    } else {\n        // odd\n        for i\
    \ := 0; i < len(array) / 2; i++ {\n            for j := i + 1; j < len(array)\
    \ - i; j++ {\n                if array[j] < array[j - 1] {\n                 \
    \   array[j], array[j - 1] = array[j - 1], array[j]\n                }\n     \
    \       }\n        }\n    }\n    return array\n}\n", "    if len(array) == 0 {\n\
    \        return array\n    }\n    if array[0] + array[len(array) - 1] % 2 == 0\
    \ {\n        for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return\
    \ array\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if\
    \ array[0] + array[len(array) - 1] % 2 == 0 {\n        for i := 0; i < len(array)\
    \ / 2; i++ {\n            array[i], array[len(array) - 1 - i] = array[len(array)\
    \ - 1 - i], array[i]\n        }\n    }\n    return array\n}\n", "    // Write\
    \ your code here\n    return array\n}\n", "    if len(array) <= 1 {\n        return\
    \ array\n    }\n    if (array[0] + array[len(array) - 1]) % 2 == 0 {\n       \
    \ for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return\
    \ array\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if\
    \ len(array) == 1 {\n        return array\n    }\n    if array[0] + array[len(array)\
    \ - 1] % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n           \
    \ array[i], array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n\
    \        }\n    } else {\n        for i := 0; i < len(array) / 2; i++ {\n    \
    \        array[i], array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n\
    \        }\n    }\n    return array\n}\n", "    if len(array) == 0 {\n       \
    \ return array\n    }\n    if array[0] + array[len(array) - 1] % 2 == 0 {\n  \
    \      for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return\
    \ array\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if\
    \ array[0] + array[len(array) - 1] % 2 == 0 {\n        for i := 0; i < len(array)\
    \ / 2; i++ {\n            array[i], array[len(array) - 1 - i] = array[len(array)\
    \ - 1 - i], array[i]\n        }\n    }\n    return array\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if array[0] + array[len(array) - 1]\
    \ % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n            array[i],\
    \ array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n\
    \    }\n    return array\n}\n", "    if len(array) == 0 {\n        return array\n\
    \    }\n    if array[0] + array[len(array) - 1] % 2 == 0 {\n        for i := 0;\
    \ i < len(array) / 2; i++ {\n            array[i], array[len(array) - 1 - i] =\
    \ array[len(array) - 1 - i], array[i]\n        }\n    }\n    return array\n}\n",
  "    if len(array) == 0 {\n        return array\n    }\n    if array[0] + array[len(array)\
    \ - 1] % 2 == 0 {\n        return sort_array_desc(array)\n    } else {\n     \
    \   return sort_array_asc(array)\n    }\n}\n", "    if len(array) == 0 {\n   \
    \     return array\n    }\n    if array[0] + array[len(array) - 1] % 2 == 0 {\n\
    \        for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return\
    \ array\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if\
    \ len(array) == 1 {\n        return array\n    }\n    if (array[0] + array[len(array)\
    \ - 1]) % 2 == 0 {\n        // even\n        for i := 0; i < len(array) / 2; i++\
    \ {\n            array[i], array[len(array) - 1 - i] = array[len(array) - 1 -\
    \ i], array[i]\n        }\n    } else {\n        // odd\n        for i := 0; i\
    \ < len(array) / 2; i++ {\n            array[i], array[len(array) - 1 - i] = array[len(array)\
    \ - 1 - i], array[i]\n        }\n    }\n    return array\n}\n", "    if array\
    \ == nil || len(array) < 2 {\n        return array\n    }\n    if (array[0] +\
    \ array[len(array) - 1]) % 2 == 0 {\n        return sort_array_desc(array)\n \
    \   }\n    return sort_array_asc(array)\n}\n", "    var result []int\n    if len(array)\
    \ == 0 {\n        return result\n    }\n    if len(array) == 1 {\n        return\
    \ array\n    }\n    if (array[0] + array[len(array) - 1]) % 2 == 0 {\n       \
    \ for i := len(array) - 1; i >= 0; i-- {\n            result = append(result,\
    \ array[i])\n        }\n    } else {\n        for i := 0; i < len(array); i++\
    \ {\n            result = append(result, array[i])\n        }\n    }\n    return\
    \ result\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if\
    \ len(array) == 1 {\n        return array\n    }\n    if len(array) == 2 {\n \
    \       if array[0] > array[1] {\n            array[0], array[1] = array[1], array[0]\n\
    \        }\n        return array\n    }\n    if (array[0] + array[len(array) -\
    \ 1]) % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n            array[i],\
    \ array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n\
    \    } else {\n        for i := 0; i < len(array) / 2; i++ {\n            if array[i]\
    \ > array[len(array) - 1 - i] {\n                array[i], array[len(array) -\
    \ 1 - i] = array[len(array) - 1 - i], array[i]\n            }\n        }\n   \
    \ }\n    return array\n}\n", "    if len(array) == 0 {\n        return array\n\
    \    }\n    if array[0] + array[len(array) - 1] % 2 == 0 {\n        for i := 0;\
    \ i < len(array) / 2; i++ {\n            array[i], array[len(array) - 1 - i] =\
    \ array[len(array) - 1 - i], array[i]\n        }\n    }\n    return array\n}\n",
  "    if len(array) == 0 {\n        return array\n    }\n    if len(array) == 1 {\n\
    \        return array\n    }\n    if array[0] + array[len(array) - 1] % 2 == 0\
    \ {\n        for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return\
    \ array\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if\
    \ array[0] + array[len(array) - 1] % 2 == 0 {\n        for i := 0; i < len(array)\
    \ / 2; i++ {\n            array[i], array[len(array) - 1 - i] = array[len(array)\
    \ - 1 - i], array[i]\n        }\n    }\n    return array\n}\n", "    if len(array)\
    \ <= 1 {\n        return array\n    }\n    if (array[0] + array[len(array) - 1])\
    \ % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n            array[i],\
    \ array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n\
    \    }\n    return array\n}\n", "    if len(array) == 0 {\n        return array\n\
    \    }\n    if array[0] + array[len(array) - 1] % 2 == 0 {\n        for i := 0;\
    \ i < len(array) / 2; i++ {\n            array[i], array[len(array) - 1 - i] =\
    \ array[len(array) - 1 - i], array[i]\n        }\n    }\n    return array\n}\n",
  "    if len(array) == 0 {\n        return array\n    }\n    if array[0] + array[len(array)\
    \ - 1] % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n           \
    \ array[i], array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n\
    \        }\n    }\n    return array\n}\n", "    if len(array) == 0 {\n       \
    \ return array\n    }\n    if array[0] + array[len(array) - 1] % 2 == 0 {\n  \
    \      for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return\
    \ array\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if\
    \ array[0] + array[len(array) - 1] % 2 == 0 {\n        for i := 0; i < len(array)\
    \ / 2; i++ {\n            array[i], array[len(array) - 1 - i] = array[len(array)\
    \ - 1 - i], array[i]\n        }\n    }\n    return array\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if array[0] + array[len(array) - 1]\
    \ % 2 == 0 {\n        // descending order\n        for i := 0; i < len(array)\
    \ - 1; i++ {\n            for j := i + 1; j < len(array); j++ {\n            \
    \    if array[i] < array[j] {\n                    array[i], array[j] = array[j],\
    \ array[i]\n                }\n            }\n        }\n    } else {\n      \
    \  // ascending order\n        for i := 0; i < len(array) - 1; i++ {\n       \
    \     for j := i + 1; j < len(array); j++ {\n                if array[i] > array[j]\
    \ {\n                    array[i], array[j] = array[j], array[i]\n           \
    \     }\n            }\n        }\n    }\n    return array\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if array[0] + array[len(array) - 1]\
    \ % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n            array[i],\
    \ array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n\
    \    }\n    return array\n}\n", "    if len(array) == 0 {\n        return array\n\
    \    }\n    if array[0] + array[len(array) - 1] % 2 == 0 {\n        for i := 0;\
    \ i < len(array) / 2; i++ {\n            array[i], array[len(array) - 1 - i] =\
    \ array[len(array) - 1 - i], array[i]\n        }\n    }\n    for i := 0; i < len(array)\
    \ - 1; i++ {\n        for j := i + 1; j < len(array); j++ {\n            if array[i]\
    \ > array[j] {\n                array[i], array[j] = array[j], array[i]\n    \
    \        }\n        }\n    }\n    return array\n}\n", "    // Write your code\
    \ here\n    return array\n}\n", "    if len(array) == 0 {\n        return array\n\
    \    }\n    if array[0] + array[len(array) - 1] % 2 == 0 {\n        for i := 0;\
    \ i < len(array) / 2; i++ {\n            array[i], array[len(array) - 1 - i] =\
    \ array[len(array) - 1 - i], array[i]\n        }\n    }\n    return array\n}\n",
  "    if len(array) == 0 {\n        return array\n    }\n    if array[0] + array[len(array)\
    \ - 1] % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n           \
    \ array[i], array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n\
    \        }\n    }\n    return array\n}\n", "    if len(array) == 0 {\n       \
    \ return array\n    }\n    if array[0] + array[len(array) - 1] % 2 == 0 {\n  \
    \      // even\n        for i := 0; i < len(array) / 2; i++ {\n            array[i],\
    \ array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n\
    \    } else {\n        // odd\n        for i := 0; i < len(array) / 2; i++ {\n\
    \            array[i], array[len(array) - 1 - i] = array[len(array) - 1 - i],\
    \ array[i]\n        }\n    }\n    return array\n}\n", "    // Write your code\
    \ here\n    return array\n}\n", "    if len(array) == 0 {\n        return array\n\
    \    }\n    if array[0] + array[len(array) - 1] % 2 == 0 {\n        for i := 0;\
    \ i < len(array) / 2; i++ {\n            array[i], array[len(array) - 1 - i] =\
    \ array[len(array) - 1 - i], array[i]\n        }\n    }\n    return array\n}\n",
  "    if len(array) == 0 {\n        return array\n    }\n    if array[0] + array[len(array)\
    \ - 1] % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n           \
    \ array[i], array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n\
    \        }\n    }\n    return array\n}\n", "    if len(array) == 0 {\n       \
    \ return array\n    }\n    if array[0] + array[len(array) - 1] % 2 == 0 {\n  \
    \      // even\n        for i := 0; i < len(array) / 2; i++ {\n            array[i],\
    \ array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n\
    \    } else {\n        // odd\n        for i := 0; i < len(array) / 2; i++ {\n\
    \            if array[i] > array[len(array) - 1 - i] {\n                array[i],\
    \ array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n          \
    \  }\n        }\n    }\n    return array\n}\n", "    if len(array) == 0 {\n  \
    \      return array\n    }\n    if len(array) == 1 {\n        return array\n \
    \   }\n    if array[0] + array[len(array) - 1] % 2 == 0 {\n        for i := 0;\
    \ i < len(array) / 2; i++ {\n            array[i], array[len(array) - 1 - i] =\
    \ array[len(array) - 1 - i], array[i]\n        }\n    }\n    return array\n}\n",
  "    if len(array) == 0 {\n        return array\n    }\n    if array[0] + array[len(array)\
    \ - 1] % 2 == 0 {\n        // descending\n        for i := 0; i < len(array) -\
    \ 1; i++ {\n            for j := 0; j < len(array) - 1 - i; j++ {\n          \
    \      if array[j] < array[j + 1] {\n                    array[j], array[j + 1]\
    \ = array[j + 1], array[j]\n                }\n            }\n        }\n    }\
    \ else {\n        // ascending\n        for i := 0; i < len(array) - 1; i++ {\n\
    \            for j := 0; j < len(array) - 1 - i; j++ {\n                if array[j]\
    \ > array[j + 1] {\n                    array[j], array[j + 1] = array[j + 1],\
    \ array[j]\n                }\n            }\n        }\n    }\n    return array\n\
    }\n", "    if len(array) == 0 {\n        return array\n    }\n    if array[0]\
    \ + array[len(array) - 1] % 2 == 0 {\n        for i := 0; i < len(array) / 2;\
    \ i++ {\n            array[i], array[len(array) - 1 - i] = array[len(array) -\
    \ 1 - i], array[i]\n        }\n    }\n    return array\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if len(array) == 1 {\n        return\
    \ array\n    }\n    if len(array) == 2 {\n        if (array[0] + array[1]) % 2\
    \ == 0 {\n            if array[0] < array[1] {\n                array[0], array[1]\
    \ = array[1], array[0]\n            }\n        } else {\n            if array[0]\
    \ > array[1] {\n                array[0], array[1] = array[1], array[0]\n    \
    \        }\n        }\n        return array\n    }\n    if (array[0] + array[len(array)\
    \ - 1]) % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n          \
    \  if array[i] < array[len(array) - 1 - i] {\n                array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n            }\n        }\n \
    \   } else {\n        for i := 0; i < len(array) / 2; i++ {\n            if array[i]\
    \ > array[len(array) - 1 - i] {\n                array[i], array[len(array) -\
    \ 1 - i] = array[len(array) - 1 - i], array[i]\n            }\n        }\n   \
    \ }\n    return array\n}\n", "    if len(array) == 0 {\n        return array\n\
    \    }\n    if array[0] + array[len(array) - 1] % 2 == 0 {\n        // even\n\
    \        for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    } else {\n  \
    \      // odd\n        for i := 0; i < len(array) / 2; i++ {\n            if array[i]\
    \ > array[len(array) - 1 - i] {\n                array[i], array[len(array) -\
    \ 1 - i] = array[len(array) - 1 - i], array[i]\n            }\n        }\n   \
    \ }\n    return array\n}\n", "    if len(array) == 0 {\n        return array\n\
    \    }\n    if array[0] + array[len(array) - 1] % 2 == 0 {\n        for i := 0;\
    \ i < len(array) / 2; i++ {\n            array[i], array[len(array) - 1 - i] =\
    \ array[len(array) - 1 - i], array[i]\n        }\n    }\n    return array\n}\n",
  "    if len(array) == 0 {\n        return array\n    }\n    if array[0] + array[len(array)\
    \ - 1] % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n           \
    \ array[i], array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n\
    \        }\n    }\n    return array\n}\n", "    if len(array) == 0 {\n       \
    \ return array\n    }\n    if len(array) == 1 {\n        return array\n    }\n\
    \    if array[0] + array[len(array) - 1] % 2 == 0 {\n        for i := 0; i < len(array)\
    \ / 2; i++ {\n            array[i], array[len(array) - 1 - i] = array[len(array)\
    \ - 1 - i], array[i]\n        }\n    } else {\n        for i := 0; i < len(array)\
    \ / 2; i++ {\n            if array[i] > array[len(array) - 1 - i] {\n        \
    \        array[i], array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n\
    \            }\n        }\n    }\n    return array\n}\n", "    if len(array) ==\
    \ 0 {\n        return array\n    }\n    if array[0] + array[len(array) - 1] %\
    \ 2 == 0 {\n        // sort in descending order\n        for i := 0; i < len(array)\
    \ - 1; i++ {\n            for j := i + 1; j < len(array); j++ {\n            \
    \    if array[i] < array[j] {\n                    array[i], array[j] = array[j],\
    \ array[i]\n                }\n            }\n        }\n    } else {\n      \
    \  // sort in ascending order\n        for i := 0; i < len(array) - 1; i++ {\n\
    \            for j := i + 1; j < len(array); j++ {\n                if array[i]\
    \ > array[j] {\n                    array[i], array[j] = array[j], array[i]\n\
    \                }\n            }\n        }\n    }\n    return array\n}\n", " \
    \   if len(array) == 0 {\n        return array\n    }\n    if array[0] + array[len(array)\
    \ - 1] % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n           \
    \ array[i], array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n\
    \        }\n    }\n    return array\n}\n", "    if len(array) == 0 {\n       \
    \ return array\n    }\n    if array[0] + array[len(array) - 1] % 2 == 0 {\n  \
    \      for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return\
    \ array\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if\
    \ array[0] + array[len(array) - 1] % 2 == 0 {\n        for i := 0; i < len(array)\
    \ / 2; i++ {\n            array[i], array[len(array) - 1 - i] = array[len(array)\
    \ - 1 - i], array[i]\n        }\n    }\n    return array\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if array[0] + array[len(array) - 1]\
    \ % 2 == 0 {\n        // sort in descending order\n        for i := 0; i < len(array)\
    \ - 1; i++ {\n            for j := i + 1; j < len(array); j++ {\n            \
    \    if array[i] < array[j] {\n                    array[i], array[j] = array[j],\
    \ array[i]\n                }\n            }\n        }\n    } else {\n      \
    \  // sort in ascending order\n        for i := 0; i < len(array) - 1; i++ {\n\
    \            for j := i + 1; j < len(array); j++ {\n                if array[i]\
    \ > array[j] {\n                    array[i], array[j] = array[j], array[i]\n\
    \                }\n            }\n        }\n    }\n    return array\n}\n", " \
    \   if len(array) < 2 {\n        return array\n    }\n    if array[0] + array[len(array)\
    \ - 1] % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n           \
    \ array[i], array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n\
    \        }\n    }\n    return array\n}\n", "    if len(array) == 0 {\n       \
    \ return array\n    }\n    if array[0] + array[len(array) - 1] % 2 == 0 {\n  \
    \      for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return\
    \ array\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if\
    \ len(array) == 1 {\n        return array\n    }\n    if (array[0] + array[len(array)\
    \ - 1]) % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n          \
    \  array[i], array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n\
    \        }\n    }\n    return array\n}\n", "    if len(array) == 0 {\n       \
    \ return array\n    }\n    if array[0] + array[len(array) - 1] % 2 == 0 {\n  \
    \      for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return\
    \ array\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if\
    \ len(array) == 1 {\n        return array\n    }\n    if array[0] + array[len(array)\
    \ - 1] % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n           \
    \ array[i], array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n\
    \        }\n    }\n    return array\n}\n", "    if len(array) == 0 {\n       \
    \ return array\n    }\n    if array[0] + array[len(array) - 1] % 2 == 0 {\n  \
    \      for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return\
    \ array\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if\
    \ array[0] + array[len(array) - 1] % 2 == 0 {\n        // descending\n       \
    \ for i := 0; i < len(array) - 1; i++ {\n            for j := i + 1; j < len(array);\
    \ j++ {\n                if array[i] < array[j] {\n                    array[i],\
    \ array[j] = array[j], array[i]\n                }\n            }\n        }\n\
    \    } else {\n        // ascending\n        for i := 0; i < len(array) - 1; i++\
    \ {\n            for j := i + 1; j < len(array); j++ {\n                if array[i]\
    \ > array[j] {\n                    array[i], array[j] = array[j], array[i]\n\
    \                }\n            }\n        }\n    }\n    return array\n}\n", " \
    \   if len(array) == 0 {\n        return array\n    }\n    if len(array) == 1\
    \ {\n        return array\n    }\n    if array[0] + array[len(array) - 1] % 2\
    \ == 0 {\n        // sort in descending order\n        for i := 0; i < len(array);\
    \ i++ {\n            for j := i + 1; j < len(array); j++ {\n                if\
    \ array[i] < array[j] {\n                    array[i], array[j] = array[j], array[i]\n\
    \                }\n            }\n        }\n    } else {\n        // sort in\
    \ ascending order\n        for i := 0; i < len(array); i++ {\n            for\
    \ j := i + 1; j < len(array); j++ {\n                if array[i] > array[j] {\n\
    \                    array[i], array[j] = array[j], array[i]\n               \
    \ }\n            }\n        }\n    }\n    return array\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if array[0] + array[len(array) - 1]\
    \ % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n            array[i],\
    \ array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n\
    \    }\n    return array\n}\n", "    if len(array) == 0 {\n        return array\n\
    \    }\n    if len(array) == 1 {\n        return array\n    }\n    if array[0]\
    \ + array[len(array) - 1] % 2 == 0 {\n        // descending\n        for i :=\
    \ 0; i < len(array) - 1; i++ {\n            for j := i + 1; j < len(array); j++\
    \ {\n                if array[i] < array[j] {\n                    array[i], array[j]\
    \ = array[j], array[i]\n                }\n            }\n        }\n    } else\
    \ {\n        // ascending\n        for i := 0; i < len(array) - 1; i++ {\n   \
    \         for j := i + 1; j < len(array); j++ {\n                if array[i] >\
    \ array[j] {\n                    array[i], array[j] = array[j], array[i]\n  \
    \              }\n            }\n        }\n    }\n    return array\n}\n", " \
    \   if len(array) == 0 {\n        return array\n    }\n    if array[0] + array[len(array)\
    \ - 1] % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n           \
    \ array[i], array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n\
    \        }\n    }\n    return array\n}\n", "    if len(array) == 0 {\n       \
    \ return array\n    }\n    if array[0] + array[len(array) - 1] % 2 == 0 {\n  \
    \      for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return\
    \ array\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if\
    \ array[0] + array[len(array) - 1] % 2 == 0 {\n        for i := 0; i < len(array)\
    \ / 2; i++ {\n            array[i], array[len(array) - 1 - i] = array[len(array)\
    \ - 1 - i], array[i]\n        }\n    }\n    return array\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if array[0] + array[len(array) - 1]\
    \ % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n            array[i],\
    \ array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n\
    \    }\n    return array\n}\n", "    if len(array) == 0 {\n        return array\n\
    \    }\n    if array[0] + array[len(array) - 1] % 2 == 0 {\n        for i := 0;\
    \ i < len(array) / 2; i++ {\n            array[i], array[len(array) - 1 - i] =\
    \ array[len(array) - 1 - i], array[i]\n        }\n    }\n    return array\n}\n",
  "    if len(array) == 0 {\n        return array\n    }\n    if array[0] + array[len(array)\
    \ - 1] % 2 == 0 {\n        return sort_array_desc(array)\n    } else {\n     \
    \   return sort_array_asc(array)\n    }\n}\n", "    if len(array) == 0 {\n   \
    \     return array\n    }\n    if array[0] + array[len(array) - 1] % 2 == 0 {\n\
    \        for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return\
    \ array\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if\
    \ len(array) == 1 {\n        return array\n    }\n    if array[0] + array[len(array)\
    \ - 1] % 2 == 0 {\n        return sort_array_descending(array)\n    } else {\n\
    \        return sort_array_ascending(array)\n    }\n}\n", "    if len(array) ==\
    \ 0 {\n        return array\n    }\n    if array[0] + array[len(array) - 1] %\
    \ 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n            array[i],\
    \ array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n\
    \    }\n    return array\n}\n", "    if len(array) < 2 {\n        return array\n\
    \    }\n    if (array[0] + array[len(array) - 1]) % 2 == 0 {\n        return sort_array_desc(array)\n\
    \    } else {\n        return sort_array_asc(array)\n    }\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if len(array) == 1 {\n        return\
    \ array\n    }\n    if len(array) == 2 {\n        if (array[0] + array[1]) % 2\
    \ == 0 {\n            if array[0] < array[1] {\n                array[0], array[1]\
    \ = array[1], array[0]\n            }\n        } else {\n            if array[0]\
    \ > array[1] {\n                array[0], array[1] = array[1], array[0]\n    \
    \        }\n        }\n        return array\n    }\n    for i := 0; i < len(array);\
    \ i++ {\n        for j := i + 1; j < len(array); j++ {\n            if (array[i]\
    \ + array[j]) % 2 == 0 {\n                if array[i] < array[j] {\n         \
    \           array[i], array[j] = array[j], array[i]\n                }\n     \
    \       } else {\n                if array[i] > array[j] {\n                 \
    \   array[i], array[j] = array[j], array[i]\n                }\n            }\n\
    \        }\n    }\n    return array\n}\n", "    if len(array) == 0 {\n       \
    \ return array\n    }\n    if array[0] + array[len(array) - 1] % 2 == 0 {\n  \
    \      for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return\
    \ array\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if\
    \ array[0] + array[len(array) - 1] % 2 == 0 {\n        // even\n        for i\
    \ := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array) - 1\
    \ - i] = array[len(array) - 1 - i], array[i]\n        }\n    } else {\n      \
    \  // odd\n        for i := 0; i < len(array) / 2; i++ {\n            array[i],\
    \ array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n\
    \    }\n    return array\n}\n", "    if len(array) == 0 {\n        return array\n\
    \    }\n    if array[0] + array[len(array) - 1] % 2 == 0 {\n        for i := 0;\
    \ i < len(array) / 2; i++ {\n            array[i], array[len(array) - 1 - i] =\
    \ array[len(array) - 1 - i], array[i]\n        }\n    }\n    return array\n}\n",
  "    if len(array) == 0 {\n        return array\n    }\n    if array[0] + array[len(array)\
    \ - 1] % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n           \
    \ array[i], array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n\
    \        }\n    }\n    return array\n}\n", "    if len(array) == 0 {\n       \
    \ return array\n    }\n    if array[0] + array[len(array) - 1] % 2 == 0 {\n  \
    \      // even\n        for i := 0; i < len(array) / 2; i++ {\n            array[i],\
    \ array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n\
    \    } else {\n        // odd\n        for i := 0; i < len(array) / 2; i++ {\n\
    \            array[i], array[len(array) - 1 - i] = array[len(array) - 1 - i],\
    \ array[i]\n        }\n    }\n    return array\n}\n", "    if len(array) == 0\
    \ {\n        return array\n    }\n    if len(array) == 1 {\n        return array\n\
    \    }\n    if array[0] + array[len(array) - 1] % 2 == 0 {\n        for i := 0;\
    \ i < len(array) / 2; i++ {\n            array[i], array[len(array) - 1 - i] =\
    \ array[len(array) - 1 - i], array[i]\n        }\n    } else {\n        for i\
    \ := 0; i < len(array) / 2; i++ {\n            if array[i] > array[len(array)\
    \ - 1 - i] {\n                array[i], array[len(array) - 1 - i] = array[len(array)\
    \ - 1 - i], array[i]\n            }\n        }\n    }\n    return array\n}\n",
  "    if len(array) == 0 {\n        return array\n    }\n    if array[0] + array[len(array)\
    \ - 1] % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n           \
    \ array[i], array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n\
    \        }\n    }\n    return array\n}\n", "    if len(array) == 0 {\n       \
    \ return array\n    }\n    if len(array) == 1 {\n        return array\n    }\n\
    \    if array[0] + array[len(array) - 1] % 2 == 0 {\n        for i := 0; i < len(array)\
    \ / 2; i++ {\n            array[i], array[len(array) - 1 - i] = array[len(array)\
    \ - 1 - i], array[i]\n        }\n    }\n    return array\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if array[0] + array[len(array) - 1]\
    \ % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n            array[i],\
    \ array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n\
    \    }\n    return array\n}\n", "    if len(array) == 0 {\n        return array\n\
    \    }\n    if array[0] + array[len(array) - 1] % 2 == 0 {\n        for i := 0;\
    \ i < len(array) / 2; i++ {\n            array[i], array[len(array) - 1 - i] =\
    \ array[len(array) - 1 - i], array[i]\n        }\n    }\n    return array\n}\n",
  "    if len(array) == 0 {\n        return array\n    }\n    if array[0] + array[len(array)\
    \ - 1] % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n           \
    \ array[i], array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n\
    \        }\n    }\n    return array\n}\n", "    if len(array) == 0 {\n       \
    \ return array\n    }\n    if array[0] + array[len(array) - 1] % 2 == 0 {\n  \
    \      for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return\
    \ array\n}\n", "    if len(array) <= 1 {\n        return array\n    }\n    if\
    \ (array[0] + array[len(array) - 1]) % 2 == 0 {\n        for i := 0; i < len(array)\
    \ / 2; i++ {\n            array[i], array[len(array) - 1 - i] = array[len(array)\
    \ - 1 - i], array[i]\n        }\n    }\n    return array\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if array[0] + array[len(array) - 1]\
    \ % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n            array[i],\
    \ array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n\
    \    }\n    return array\n}\n", "    if len(array) == 0 {\n        return array\n\
    \    }\n    if array[0] + array[len(array) - 1] % 2 == 0 {\n        for i := 0;\
    \ i < len(array) / 2; i++ {\n            array[i], array[len(array) - 1 - i] =\
    \ array[len(array) - 1 - i], array[i]\n        }\n    }\n    return array\n}\n",
  "    if len(array) == 0 {\n        return array\n    }\n    if array[0] + array[len(array)\
    \ - 1] % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n           \
    \ array[i], array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n\
    \        }\n    }\n    return array\n}\n", "    if len(array) == 0 {\n       \
    \ return array\n    }\n    if array[0] + array[len(array) - 1] % 2 == 0 {\n  \
    \      for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return\
    \ array\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if\
    \ len(array) == 1 {\n        return array\n    }\n    if array[0] + array[len(array)\
    \ - 1] % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n           \
    \ array[i], array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n\
    \        }\n    } else {\n        for i := 0; i < len(array) / 2; i++ {\n    \
    \        if array[i] > array[len(array) - 1 - i] {\n                array[i],\
    \ array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n          \
    \  }\n        }\n    }\n    return array\n}\n", "    if len(array) == 0 {\n  \
    \      return array\n    }\n    if array[0] + array[len(array) - 1] % 2 == 0 {\n\
    \        for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return\
    \ array\n}\n", "    // TODO\n    return array\n}\n", "    if len(array) == 0 {\n\
    \        return array\n    }\n    if array[0] + array[len(array) - 1] % 2 == 0\
    \ {\n        for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return\
    \ array\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if\
    \ array[0] + array[len(array) - 1] % 2 == 0 {\n        for i := 0; i < len(array)\
    \ / 2; i++ {\n            array[i], array[len(array) - 1 - i] = array[len(array)\
    \ - 1 - i], array[i]\n        }\n    }\n    return array\n}\n", "    if len(array)\
    \ <= 1 {\n        return array\n    }\n    if (array[0] + array[len(array) - 1])\
    \ % 2 == 0 {\n        // sort in descending order\n        for i := 0; i < len(array)\
    \ - 1; i++ {\n            for j := i + 1; j < len(array); j++ {\n            \
    \    if array[i] < array[j] {\n                    array[i], array[j] = array[j],\
    \ array[i]\n                }\n            }\n        }\n    } else {\n      \
    \  // sort in ascending order\n        for i := 0; i < len(array) - 1; i++ {\n\
    \            for j := i + 1; j < len(array); j++ {\n                if array[i]\
    \ > array[j] {\n                    array[i], array[j] = array[j], array[i]\n\
    \                }\n            }\n        }\n    }\n    return array\n}\n", " \
    \   if len(array) == 0 {\n        return array\n    }\n    if array[0] + array[len(array)\
    \ - 1] % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n           \
    \ array[i], array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n\
    \        }\n    }\n    return array\n}\n", "    if len(array) == 0 {\n       \
    \ return array\n    }\n    if array[0] + array[len(array) - 1] % 2 == 0 {\n  \
    \      for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return\
    \ array\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if\
    \ array[0] + array[len(array) - 1] % 2 == 0 {\n        return sort_desc(array)\n\
    \    } else {\n        return sort_asc(array)\n    }\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if array[0] + array[len(array) - 1]\
    \ % 2 == 0 {\n        // descending order\n        for i := 0; i < len(array)\
    \ - 1; i++ {\n            for j := i + 1; j < len(array); j++ {\n            \
    \    if array[i] < array[j] {\n                    array[i], array[j] = array[j],\
    \ array[i]\n                }\n            }\n        }\n    } else {\n      \
    \  // ascending order\n        for i := 0; i < len(array) - 1; i++ {\n       \
    \     for j := i + 1; j < len(array); j++ {\n                if array[i] > array[j]\
    \ {\n                    array[i], array[j] = array[j], array[i]\n           \
    \     }\n            }\n        }\n    }\n    return array\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if array[0] + array[len(array) - 1]\
    \ % 2 == 0 {\n        // even\n        for i := 0; i < len(array) / 2; i++ {\n\
    \            array[i], array[len(array) - 1 - i] = array[len(array) - 1 - i],\
    \ array[i]\n        }\n    } else {\n        // odd\n        for i := 0; i < len(array)\
    \ / 2; i++ {\n            array[i], array[len(array) - 1 - i] = array[len(array)\
    \ - 1 - i], array[i]\n        }\n    }\n    return array\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if len(array) == 1 {\n        return\
    \ array\n    }\n    if len(array) == 2 {\n        if (array[0] + array[1]) % 2\
    \ == 0 {\n            if array[0] < array[1] {\n                array[0], array[1]\
    \ = array[1], array[0]\n            }\n        } else {\n            if array[0]\
    \ > array[1] {\n                array[0], array[1] = array[1], array[0]\n    \
    \        }\n        }\n        return array\n    }\n    if (array[0] + array[len(array)\
    \ - 1]) % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n          \
    \  array[i], array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n\
    \        }\n    }\n    return array\n}\n", "    if len(array) <= 1 {\n       \
    \ return array\n    }\n    if (array[0] + array[len(array) - 1]) % 2 == 0 {\n\
    \        for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return\
    \ array\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if\
    \ array[0] + array[len(array) - 1] % 2 == 0 {\n        for i := 0; i < len(array)\
    \ / 2; i++ {\n            array[i], array[len(array) - 1 - i] = array[len(array)\
    \ - 1 - i], array[i]\n        }\n    }\n    return array\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if array[0] + array[len(array) - 1]\
    \ % 2 == 0 {\n        // even\n        for i := 0; i < len(array) / 2; i++ {\n\
    \            array[i], array[len(array) - 1 - i] = array[len(array) - 1 - i],\
    \ array[i]\n        }\n    } else {\n        // odd\n        for i := 0; i < len(array)\
    \ / 2; i++ {\n            array[i], array[len(array) - 1 - i] = array[len(array)\
    \ - 1 - i], array[i]\n        }\n    }\n    return array\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if (array[0] + array[len(array) - 1])\
    \ % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n            array[i],\
    \ array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n\
    \    }\n    return array\n}\n", "    if len(array) == 0 {\n        return array\n\
    \    }\n    if array[0] + array[len(array) - 1] % 2 == 0 {\n        for i := 0;\
    \ i < len(array) / 2; i++ {\n            array[i], array[len(array) - 1 - i] =\
    \ array[len(array) - 1 - i], array[i]\n        }\n    }\n    return array\n}\n",
  "    if len(array) == 0 {\n        return array\n    }\n    if array[0] + array[len(array)\
    \ - 1] % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n           \
    \ array[i], array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n\
    \        }\n    }\n    return array\n}\n", "    if len(array) == 0 {\n       \
    \ return array\n    }\n    if array[0] + array[len(array) - 1] % 2 == 0 {\n  \
    \      for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return\
    \ array\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if\
    \ (array[0] + array[len(array) - 1]) % 2 == 0 {\n        for i := 0; i < len(array)\
    \ / 2; i++ {\n            array[i], array[len(array) - 1 - i] = array[len(array)\
    \ - 1 - i], array[i]\n        }\n    }\n    return array\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if (array[0] + array[len(array) - 1])\
    \ % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n            array[i],\
    \ array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n\
    \    }\n    return array\n}\n", "    if len(array) == 0 {\n        return array\n\
    \    }\n    if array[0] + array[len(array) - 1] % 2 == 0 {\n        for i := 0;\
    \ i < len(array) / 2; i++ {\n            array[i], array[len(array) - 1 - i] =\
    \ array[len(array) - 1 - i], array[i]\n        }\n    }\n    return array\n}\n",
  "    if len(array) == 0 {\n        return array\n    }\n    if array[0] + array[len(array)\
    \ - 1] % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n           \
    \ array[i], array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n\
    \        }\n    }\n    return array\n}\n", "    if len(array) == 0 {\n       \
    \ return array\n    }\n    if len(array) == 1 {\n        return array\n    }\n\
    \    if array[0] + array[len(array) - 1] % 2 == 0 {\n        for i := 0; i < len(array)\
    \ / 2; i++ {\n            array[i], array[len(array) - 1 - i] = array[len(array)\
    \ - 1 - i], array[i]\n        }\n    }\n    return array\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if array[0] + array[len(array) - 1]\
    \ % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n            array[i],\
    \ array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n\
    \    }\n    return array\n}\n", "    if len(array) == 0 {\n        return array\n\
    \    }\n    if array[0] + array[len(array) - 1] % 2 == 0 {\n        // even\n\
    \        for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    } else {\n  \
    \      // odd\n        for i := 0; i < len(array) / 2; i++ {\n            array[i],\
    \ array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n\
    \    }\n    return array\n}\n", "    if len(array) == 0 {\n        return array\n\
    \    }\n    if array[0] + array[len(array) - 1] % 2 == 0 {\n        for i := 0;\
    \ i < len(array) / 2; i++ {\n            array[i], array[len(array) - 1 - i] =\
    \ array[len(array) - 1 - i], array[i]\n        }\n    }\n    return array\n}\n",
  "    if len(array) <= 1 {\n        return array\n    }\n    if (array[0] + array[len(array)\
    \ - 1]) % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n          \
    \  array[i], array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n\
    \        }\n    }\n    for i := 0; i < len(array) - 1; i++ {\n        for j :=\
    \ i + 1; j < len(array); j++ {\n            if array[i] > array[j] {\n       \
    \         array[i], array[j] = array[j], array[i]\n            }\n        }\n\
    \    }\n    return array\n}\n", "    if len(array) == 0 {\n        return array\n\
    \    }\n    if len(array) == 1 {\n        return array\n    }\n    if len(array)\
    \ == 2 {\n        if (array[0] + array[1]) % 2 == 0 {\n            if array[0]\
    \ < array[1] {\n                array[0], array[1] = array[1], array[0]\n    \
    \        }\n        } else {\n            if array[0] > array[1] {\n         \
    \       array[0], array[1] = array[1], array[0]\n            }\n        }\n  \
    \      return array\n    }\n    if (array[0] + array[len(array) - 1]) % 2 == 0\
    \ {\n        for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return\
    \ array\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if\
    \ array[0] + array[len(array) - 1] % 2 == 0 {\n        for i := 0; i < len(array)\
    \ / 2; i++ {\n            array[i], array[len(array) - 1 - i] = array[len(array)\
    \ - 1 - i], array[i]\n        }\n    }\n    return array\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if array[0] + array[len(array) - 1]\
    \ % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n            array[i],\
    \ array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n\
    \    }\n    return array\n}\n", "    if len(array) == 0 {\n        return array\n\
    \    }\n    if array[0] + array[len(array) - 1] % 2 == 0 {\n        for i := 0;\
    \ i < len(array) / 2; i++ {\n            array[i], array[len(array) - 1 - i] =\
    \ array[len(array) - 1 - i], array[i]\n        }\n    }\n    return array\n}\n",
  "    if len(array) == 0 {\n        return array\n    }\n    if array[0] + array[len(array)\
    \ - 1] % 2 == 0 {\n        // even\n        for i := 0; i < len(array) / 2; i++\
    \ {\n            array[i], array[len(array) - 1 - i] = array[len(array) - 1 -\
    \ i], array[i]\n        }\n    } else {\n        // odd\n        for i := 0; i\
    \ < len(array) / 2; i++ {\n            array[i], array[len(array) - 1 - i] = array[len(array)\
    \ - 1 - i], array[i]\n        }\n    }\n    return array\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if array[0] + array[len(array) - 1]\
    \ % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n            array[i],\
    \ array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n\
    \    }\n    return array\n}\n", "    if len(array) == 0 {\n        return array\n\
    \    }\n    if len(array) == 1 {\n        return array\n    }\n    if len(array)\
    \ == 2 {\n        if array[0] > array[1] {\n            array[0], array[1] = array[1],\
    \ array[0]\n        }\n        return array\n    }\n    if (array[0] + array[len(array)\
    \ - 1]) % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n          \
    \  array[i], array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n\
    \        }\n    } else {\n        for i := 0; i < len(array) / 2; i++ {\n    \
    \        if array[i] > array[len(array) - 1 - i] {\n                array[i],\
    \ array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n          \
    \  }\n        }\n    }\n    return array\n}\n", "    if len(array) == 0 {\n  \
    \      return array\n    }\n    if len(array) == 1 {\n        return array\n \
    \   }\n    if array[0] + array[len(array) - 1] % 2 == 0 {\n        return sort_array_desc(array)\n\
    \    } else {\n        return sort_array_asc(array)\n    }\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if array[0] + array[len(array) - 1]\
    \ % 2 == 0 {\n        // even\n        for i := 0; i < len(array) / 2; i++ {\n\
    \            array[i], array[len(array) - 1 - i] = array[len(array) - 1 - i],\
    \ array[i]\n        }\n    } else {\n        // odd\n        for i := 0; i < len(array)\
    \ / 2; i++ {\n            array[i], array[len(array) - 1 - i] = array[len(array)\
    \ - 1 - i], array[i]\n        }\n    }\n    return array\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if array[0] + array[len(array) - 1]\
    \ % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n            array[i],\
    \ array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n\
    \    }\n    return array\n}\n", "    if len(array) == 0 {\n        return array\n\
    \    }\n    if len(array) == 1 {\n        return array\n    }\n    if (array[0]\
    \ + array[len(array) - 1]) % 2 == 0 {\n        // descending\n        for i :=\
    \ 0; i < len(array) - 1; i++ {\n            for j := i + 1; j < len(array); j++\
    \ {\n                if array[i] < array[j] {\n                    array[i], array[j]\
    \ = array[j], array[i]\n                }\n            }\n        }\n    } else\
    \ {\n        // ascending\n        for i := 0; i < len(array) - 1; i++ {\n   \
    \         for j := i + 1; j < len(array); j++ {\n                if array[i] >\
    \ array[j] {\n                    array[i], array[j] = array[j], array[i]\n  \
    \              }\n            }\n        }\n    }\n    return array\n}\n", " \
    \   if len(array) == 0 {\n        return array\n    }\n    if array[0] + array[len(array)\
    \ - 1] % 2 == 0 {\n        // sort in descending order\n        for i := 0; i\
    \ < len(array) - 1; i++ {\n            for j := i + 1; j < len(array); j++ {\n\
    \                if array[i] < array[j] {\n                    array[i], array[j]\
    \ = array[j], array[i]\n                }\n            }\n        }\n    } else\
    \ {\n        // sort in ascending order\n        for i := 0; i < len(array) -\
    \ 1; i++ {\n            for j := i + 1; j < len(array); j++ {\n              \
    \  if array[i] > array[j] {\n                    array[i], array[j] = array[j],\
    \ array[i]\n                }\n            }\n        }\n    }\n    return array\n\
    }\n", "    if len(array) == 0 {\n        return array\n    }\n    if array[0]\
    \ + array[len(array) - 1] % 2 == 0 {\n        return sort_array_desc(array)\n\
    \    } else {\n        return sort_array_asc(array)\n    }\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if array[0] + array[len(array) - 1]\
    \ % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n            array[i],\
    \ array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n\
    \    }\n    return array\n}\n", "    // Write your code here\n    return array\n\
    }\n", "    if len(array) == 0 {\n        return array\n    }\n    if array[0]\
    \ + array[len(array) - 1] % 2 == 0 {\n        for i := 0; i < len(array) / 2;\
    \ i++ {\n            array[i], array[len(array) - 1 - i] = array[len(array) -\
    \ 1 - i], array[i]\n        }\n    }\n    return array\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if len(array) == 1 {\n        return\
    \ array\n    }\n    if array[0] + array[len(array) - 1] % 2 == 0 {\n        for\
    \ i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array) -\
    \ 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return array\n\
    }\n", "    if len(array) == 0 {\n        return array\n    }\n    if array[0]\
    \ + array[len(array) - 1] % 2 == 0 {\n        return sort_descending(array)\n\
    \    } else {\n        return sort_ascending(array)\n    }\n}\n", "    if len(array)\
    \ < 2 {\n        return array\n    }\n    if (array[0] + array[len(array) - 1])\
    \ % 2 == 0 {\n        return sort_desc(array)\n    } else {\n        return sort_asc(array)\n\
    \    }\n}\n", "    if len(array) <= 1 {\n        return array\n    }\n    if array[0]\
    \ + array[len(array) - 1] % 2 == 0 {\n        for i := 0; i < len(array) / 2;\
    \ i++ {\n            array[i], array[len(array) - 1 - i] = array[len(array) -\
    \ 1 - i], array[i]\n        }\n    }\n    return array\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if array[0] + array[len(array) - 1]\
    \ % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n            array[i],\
    \ array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n\
    \    }\n    return array\n}\n", "    if len(array) <= 1 {\n        return array\n\
    \    }\n    if (array[0] + array[len(array) - 1]) % 2 == 0 {\n        for i :=\
    \ 0; i < len(array) / 2; i++ {\n            array[i], array[len(array) - 1 - i]\
    \ = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return array\n\
    }\n", "    if len(array) == 0 {\n        return array\n    }\n    if array[0]\
    \ + array[len(array) - 1] % 2 == 0 {\n        for i := 0; i < len(array) / 2;\
    \ i++ {\n            array[i], array[len(array) - 1 - i] = array[len(array) -\
    \ 1 - i], array[i]\n        }\n    }\n    return array\n}\n", "    // Write your\
    \ code here\n    return array\n}\n", "    if len(array) == 0 {\n        return\
    \ array\n    }\n    if array[0] + array[len(array) - 1] % 2 == 0 {\n        for\
    \ i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array) -\
    \ 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return array\n\
    }\n", "    if len(array) == 0 {\n        return array\n    }\n    if array[0]\
    \ + array[len(array) - 1] % 2 == 0 {\n        for i := 0; i < len(array) / 2;\
    \ i++ {\n            array[i], array[len(array) - 1 - i] = array[len(array) -\
    \ 1 - i], array[i]\n        }\n    }\n    return array\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if array[0] + array[len(array) - 1]\
    \ % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n            array[i],\
    \ array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n\
    \    }\n    return array\n}\n", "    if len(array) == 0 {\n        return array\n\
    \    }\n    if array[0] + array[len(array) - 1] % 2 == 0 {\n        // descending\
    \ order\n        for i := 0; i < len(array) - 1; i++ {\n            for j := i\
    \ + 1; j < len(array); j++ {\n                if array[i] < array[j] {\n     \
    \               array[i], array[j] = array[j], array[i]\n                }\n \
    \           }\n        }\n    } else {\n        // ascending order\n        for\
    \ i := 0; i < len(array) - 1; i++ {\n            for j := i + 1; j < len(array);\
    \ j++ {\n                if array[i] > array[j] {\n                    array[i],\
    \ array[j] = array[j], array[i]\n                }\n            }\n        }\n\
    \    }\n    return array\n}\n", "    if len(array) == 0 {\n        return array\n\
    \    }\n    if array[0] + array[len(array) - 1] % 2 == 0 {\n        for i := 0;\
    \ i < len(array) / 2; i++ {\n            array[i], array[len(array) - 1 - i] =\
    \ array[len(array) - 1 - i], array[i]\n        }\n    }\n    return array\n}\n",
  "    if len(array) == 0 {\n        return array\n    }\n    if array[0] + array[len(array)\
    \ - 1] % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n           \
    \ array[i], array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n\
    \        }\n    }\n    return array\n}\n", "    if len(array) == 0 {\n       \
    \ return array\n    }\n    if array[0] + array[len(array) - 1] % 2 == 0 {\n  \
    \      // sort in descending order\n        for i := 0; i < len(array) - 1; i++\
    \ {\n            for j := i + 1; j < len(array); j++ {\n                if array[i]\
    \ < array[j] {\n                    array[i], array[j] = array[j], array[i]\n\
    \                }\n            }\n        }\n    } else {\n        // sort in\
    \ ascending order\n        for i := 0; i < len(array) - 1; i++ {\n           \
    \ for j := i + 1; j < len(array); j++ {\n                if array[i] > array[j]\
    \ {\n                    array[i], array[j] = array[j], array[i]\n           \
    \     }\n            }\n        }\n    }\n    return array\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if array[0] + array[len(array) - 1]\
    \ % 2 == 0 {\n        return sort_array_desc(array)\n    } else {\n        return\
    \ sort_array_asc(array)\n    }\n}\n", "    if len(array) == 0 {\n        return\
    \ array\n    }\n    if array[0] + array[len(array) - 1] % 2 == 0 {\n        for\
    \ i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array) -\
    \ 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return array\n\
    }\n", "    if len(array) == 0 {\n        return array\n    }\n    if array[0]\
    \ + array[len(array) - 1] % 2 == 0 {\n        // descending order\n        for\
    \ i := 0; i < len(array) - 1; i++ {\n            for j := i + 1; j < len(array);\
    \ j++ {\n                if array[i] < array[j] {\n                    array[i],\
    \ array[j] = array[j], array[i]\n                }\n            }\n        }\n\
    \    } else {\n        // ascending order\n        for i := 0; i < len(array)\
    \ - 1; i++ {\n            for j := i + 1; j < len(array); j++ {\n            \
    \    if array[i] > array[j] {\n                    array[i], array[j] = array[j],\
    \ array[i]\n                }\n            }\n        }\n    }\n    return array\n\
    }\n", "    if len(array) == 0 {\n        return array\n    }\n    if array[0]\
    \ + array[len(array) - 1] % 2 == 0 {\n        // descending order\n        for\
    \ i := 0; i < len(array) - 1; i++ {\n            for j := i + 1; j < len(array);\
    \ j++ {\n                if array[i] < array[j] {\n                    array[i],\
    \ array[j] = array[j], array[i]\n                }\n            }\n        }\n\
    \    } else {\n        // ascending order\n        for i := 0; i < len(array)\
    \ - 1; i++ {\n            for j := i + 1; j < len(array); j++ {\n            \
    \    if array[i] > array[j] {\n                    array[i], array[j] = array[j],\
    \ array[i]\n                }\n            }\n        }\n    }\n    return array\n\
    }\n", "    if len(array) == 0 {\n        return array\n    }\n    if array[0]\
    \ + array[len(array) - 1] % 2 == 0 {\n        for i := 0; i < len(array) / 2;\
    \ i++ {\n            array[i], array[len(array) - 1 - i] = array[len(array) -\
    \ 1 - i], array[i]\n        }\n    }\n    return array\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if array[0] + array[len(array) - 1]\
    \ % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n            array[i],\
    \ array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n\
    \    }\n    return array\n}\n", "    if len(array) == 0 {\n        return array\n\
    \    }\n    if array[0] + array[len(array) - 1] % 2 == 0 {\n        for i := 0;\
    \ i < len(array) / 2; i++ {\n            array[i], array[len(array) - 1 - i] =\
    \ array[len(array) - 1 - i], array[i]\n        }\n    }\n    return array\n}\n",
  "    if len(array) == 0 {\n        return array\n    }\n    if array[0] + array[len(array)\
    \ - 1] % 2 == 0 {\n        // even\n        for i := 0; i < len(array) / 2; i++\
    \ {\n            array[i], array[len(array) - 1 - i] = array[len(array) - 1 -\
    \ i], array[i]\n        }\n    } else {\n        // odd\n        for i := 0; i\
    \ < len(array) / 2; i++ {\n            array[i], array[len(array) - 1 - i] = array[len(array)\
    \ - 1 - i], array[i]\n        }\n    }\n    return array\n}\n", "    if len(array)\
    \ == 0 {\n        return array\n    }\n    if array[0] + array[len(array) - 1]\
    \ % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n            array[i],\
    \ array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n\
    \    }\n    return array\n}\n", "    if len(array) == 0 {\n        return array\n\
    \    }\n    if array[0] + array[len(array) - 1] % 2 == 0 {\n        for i := 0;\
    \ i < len(array) / 2; i++ {\n            array[i], array[len(array) - 1 - i] =\
    \ array[len(array) - 1 - i], array[i]\n        }\n    }\n    return array\n}\n",
  "    if len(array) == 0 {\n        return array\n    }\n    if len(array) == 1 {\n\
    \        return array\n    }\n    if len(array) == 2 {\n        if (array[0] +\
    \ array[1]) % 2 == 0 {\n            if array[0] < array[1] {\n               \
    \ return []int{array[1], array[0]}\n            }\n            return array\n\
    \        }\n        if array[0] > array[1] {\n            return []int{array[1],\
    \ array[0]}\n        }\n        return array\n    }\n    if (array[0] + array[len(array)\
    \ - 1]) % 2 == 0 {\n        for i := 0; i < len(array) / 2; i++ {\n          \
    \  if array[i] < array[len(array) - 1 - i] {\n                array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n            }\n        }\n \
    \   } else {\n        for i := 0; i < len(array) / 2; i++ {\n            if array[i]\
    \ > array[len(array) - 1 - i] {\n                array[i], array[len(array) -\
    \ 1 - i] = array[len(array) - 1 - i], array[i]\n            }\n        }\n   \
    \ }\n    return array\n}\n", "    if len(array) == 0 {\n        return array\n\
    \    }\n    if array[0] + array[len(array) - 1] % 2 == 0 {\n        for i := 0;\
    \ i < len(array) / 2; i++ {\n            array[i], array[len(array) - 1 - i] =\
    \ array[len(array) - 1 - i], array[i]\n        }\n    }\n    return array\n}\n",
  "    if len(array) == 0 {\n        return array\n    }\n    if array[0] + array[len(array)\
    \ - 1] % 2 == 0 {\n        return sort_descending(array)\n    } else {\n     \
    \   return sort_ascending(array)\n    }\n}\n", "    if len(array) == 0 {\n   \
    \     return array\n    }\n    if array[0] + array[len(array) - 1] % 2 == 0 {\n\
    \        return sort_array_desc(array)\n    } else {\n        return sort_array_asc(array)\n\
    \    }\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if array[0]\
    \ + array[len(array) - 1] % 2 == 0 {\n        // sort in descending order\n  \
    \      for i := 0; i < len(array) - 1; i++ {\n            for j := i + 1; j <\
    \ len(array); j++ {\n                if array[i] < array[j] {\n              \
    \      array[i], array[j] = array[j], array[i]\n                }\n          \
    \  }\n        }\n    } else {\n        // sort in ascending order\n        for\
    \ i := 0; i < len(array) - 1; i++ {\n            for j := i + 1; j < len(array);\
    \ j++ {\n                if array[i] > array[j] {\n                    array[i],\
    \ array[j] = array[j], array[i]\n                }\n            }\n        }\n\
    \    }\n    return array\n}\n", "    if len(array) == 0 {\n        return array\n\
    \    }\n    if array[0] + array[len(array) - 1] % 2 == 0 {\n        // even\n\
    \        for i := 0; i < len(array); i++ {\n            for j := i + 1; j < len(array);\
    \ j++ {\n                if array[i] < array[j] {\n                    array[i],\
    \ array[j] = array[j], array[i]\n                }\n            }\n        }\n\
    \    } else {\n        // odd\n        for i := 0; i < len(array); i++ {\n   \
    \         for j := i + 1; j < len(array); j++ {\n                if array[i] >\
    \ array[j] {\n                    array[i], array[j] = array[j], array[i]\n  \
    \              }\n            }\n        }\n    }\n    return array\n}\n", " \
    \   if len(array) == 0 {\n        return array\n    }\n    if len(array) == 1\
    \ {\n        return array\n    }\n    if array[0] + array[len(array) - 1] % 2\
    \ == 0 {\n        return sort_array_descending(array)\n    } else {\n        return\
    \ sort_array_ascending(array)\n    }\n}\n", "    if len(array) <= 1 {\n      \
    \  return array\n    }\n    if (array[0] + array[len(array) - 1]) % 2 == 0 {\n\
    \        for i := 0; i < len(array) / 2; i++ {\n            array[i], array[len(array)\
    \ - 1 - i] = array[len(array) - 1 - i], array[i]\n        }\n    }\n    return\
    \ array\n}\n", "    if len(array) == 0 {\n        return array\n    }\n    if\
    \ array[0] + array[len(array) - 1] % 2 == 0 {\n        for i := 0; i < len(array)\
    \ / 2; i++ {\n            array[i], array[len(array) - 1 - i] = array[len(array)\
    \ - 1 - i], array[i]\n        }\n    }\n    return array\n}\n"]
stop_tokens:
- "\nfunc"
- struct
- "\n// "

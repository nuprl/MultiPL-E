name: HumanEval_94_skjkasdkd
language: go_test.go
prompt: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
  \ You are given a list of integers.\n// You need to find the largest prime value\
  \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
  \ {\n"
tests: "func TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test\
  \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests :=\
  \ []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181,\
  \ 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
  \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n   \
  \  { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32,\
  \ 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71,\
  \ 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
  \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2,\
  \ 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n\
  \     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     {\
  \ actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc\
  \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
  \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
  \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\
  \t}\n\t\t})\n\t}\n}\n"
completions: ["    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n", "   \
    \ // your code here\n    return 0\n}\n", "    var largestPrime int\n    for _,\
    \ v := range lst {\n        if isPrime(v) {\n            if v > largestPrime {\n\
    \                largestPrime = v\n            }\n        }\n    }\n    return\
    \ sumDigits(largestPrime)\n}\n", "    var max int\n    for _, v := range lst {\n\
    \        if v > max {\n            max = v\n        }\n    }\n    var sum int\n\
    \    for max > 0 {\n        sum += max % 10\n        max /= 10\n    }\n    return\
    \ sum\n}\n", "    // find the largest prime value\n    var largestPrime int\n\
    \    for _, v := range lst {\n        if isPrime(v) {\n            if v > largestPrime\
    \ {\n                largestPrime = v\n            }\n        }\n    }\n    //\
    \ return the sum of its digits\n    var sum int\n    for _, v := range fmt.Sprintf(\"\
    %d\", largestPrime) {\n        sum += int(v - '0')\n    }\n    return sum\n}\n",
  "    // your code here\n    return 0\n}\n", "    // find largest prime\n    var\
    \ largestPrime int\n    for _, v := range lst {\n        if isPrime(v) {\n   \
    \         if v > largestPrime {\n                largestPrime = v\n          \
    \  }\n        }\n    }\n    // sum digits\n    var sum int\n    for _, v := range\
    \ fmt.Sprintf(\"%d\", largestPrime) {\n        sum += int(v - '0')\n    }\n  \
    \  return sum\n}\n", "    var largestPrime int\n    for _, v := range lst {\n\
    \        if isPrime(v) {\n            if v > largestPrime {\n                largestPrime\
    \ = v\n            }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n",
  "    // your code here\n    return 0\n}\n", "    var largest int\n    for _, v :=\
    \ range lst {\n        if v > largest {\n            largest = v\n        }\n\
    \    }\n    var sum int\n    for largest > 0 {\n        sum += largest % 10\n\
    \        largest /= 10\n    }\n    return sum\n}\n", "    var max int\n    for\
    \ _, v := range lst {\n        if v > max {\n            max = v\n        }\n\
    \    }\n    return max\n}\n", "    var largestPrime int\n    for _, i := range\
    \ lst {\n        if isPrime(i) {\n            if i > largestPrime {\n        \
    \        largestPrime = i\n            }\n        }\n    }\n    return sumDigits(largestPrime)\n\
    }\n", "    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ && v > largestPrime {\n            largestPrime = v\n        }\n    }\n    return\
    \ sumDigits(largestPrime)\n}\n", "    var prime int\n    for _, n := range lst\
    \ {\n        if isPrime(n) && n > prime {\n            prime = n\n        }\n\
    \    }\n    return sumDigits(prime)\n}\n", "    var largestPrime int\n    for\
    \ _, v := range lst {\n        if isPrime(v) && v > largestPrime {\n         \
    \   largestPrime = v\n        }\n    }\n    return sumDigits(largestPrime)\n}\n",
  "    // largest prime value\n    var largestPrime int\n    // sum of its digits\n\
    \    var sum int\n\n    // find largest prime value\n    for _, val := range lst\
    \ {\n        if isPrime(val) {\n            if val > largestPrime {\n        \
    \        largestPrime = val\n            }\n        }\n    }\n\n    // find sum\
    \ of its digits\n    for largestPrime > 0 {\n        sum += largestPrime % 10\n\
    \        largestPrime /= 10\n    }\n\n    return sum\n}\n", "    // your code\
    \ here\n    return 0\n}\n", "    // your code here\n    return 0\n}\n", "    var\
    \ max int\n    for _, v := range lst {\n        if v > max {\n            max\
    \ = v\n        }\n    }\n    return max\n}\n", "    // your code here\n    return\
    \ 0\n}\n", "    var largestPrime int\n    for _, v := range lst {\n        if\
    \ isPrime(v) {\n            if v > largestPrime {\n                largestPrime\
    \ = v\n            }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n",
  "    // your code here\n    return 0\n}\n", "    var largestPrime int\n    for _,\
    \ num := range lst {\n        if isPrime(num) {\n            if num > largestPrime\
    \ {\n                largestPrime = num\n            }\n        }\n    }\n   \
    \ return sumOfDigits(largestPrime)\n}\n", "    // your code here\n    return 0\n\
    }\n", "    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ && v > largestPrime {\n            largestPrime = v\n        }\n    }\n    return\
    \ sumDigits(largestPrime)\n}\n", "    var largest int\n    for _, v := range lst\
    \ {\n        if v > largest {\n            largest = v\n        }\n    }\n   \
    \ var sum int\n    for largest > 0 {\n        sum += largest % 10\n        largest\
    \ /= 10\n    }\n    return sum\n}\n", "    var largestPrime int\n    for _, v\
    \ := range lst {\n        if isPrime(v) {\n            if v > largestPrime {\n\
    \                largestPrime = v\n            }\n        }\n    }\n    return\
    \ sumOfDigits(largestPrime)\n}\n", "    var largestPrime int\n    for _, v :=\
    \ range lst {\n        if isPrime(v) && v > largestPrime {\n            largestPrime\
    \ = v\n        }\n    }\n    return sumOfDigits(largestPrime)\n}\n", "    var\
    \ largestPrime int\n    for _, num := range lst {\n        if isPrime(num) {\n\
    \            if num > largestPrime {\n                largestPrime = num\n   \
    \         }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n", "   \
    \ var max int\n    for _, v := range lst {\n        if v > max {\n           \
    \ max = v\n        }\n    }\n    return max\n}\n", "    // find largest prime\n\
    \    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    // sum digits\n    var sum int\n    for _,\
    \ v := range fmt.Sprintf(\"%d\", largestPrime) {\n        sum += int(v - '0')\n\
    \    }\n    return sum\n}\n", "    // find largest prime\n    var largestPrime\
    \ int\n    for _, num := range lst {\n        if isPrime(num) {\n            if\
    \ num > largestPrime {\n                largestPrime = num\n            }\n  \
    \      }\n    }\n    // sum digits\n    var sum int\n    for largestPrime > 0\
    \ {\n        sum += largestPrime % 10\n        largestPrime /= 10\n    }\n   \
    \ return sum\n}\n", "    var max int\n    for _, v := range lst {\n        if\
    \ v > max {\n            max = v\n        }\n    }\n    var sum int\n    for max\
    \ > 0 {\n        sum += max % 10\n        max /= 10\n    }\n    return sum\n}\n",
  "    var max int\n    for _, v := range lst {\n        if isPrime(v) && v > max\
    \ {\n            max = v\n        }\n    }\n    return sumDigits(max)\n}\n", " \
    \   // your code here\n    return 0\n}\n", "    var largestPrime int\n    for\
    \ _, v := range lst {\n        if isPrime(v) {\n            if v > largestPrime\
    \ {\n                largestPrime = v\n            }\n        }\n    }\n    return\
    \ sumOfDigits(largestPrime)\n}\n", "    // your code here\n    return 0\n}\n",
  "    var largestPrime int\n    for _, n := range lst {\n        if isPrime(n) &&\
    \ n > largestPrime {\n            largestPrime = n\n        }\n    }\n    return\
    \ sumDigits(largestPrime)\n}\n", "    return 0\n}\n", "    var largestPrime int\n\
    \    for _, v := range lst {\n        if isPrime(v) {\n            if v > largestPrime\
    \ {\n                largestPrime = v\n            }\n        }\n    }\n    return\
    \ sumOfDigits(largestPrime)\n}\n", "    var max int\n    for _, v := range lst\
    \ {\n        if v > max {\n            max = v\n        }\n    }\n    var sum\
    \ int\n    for max > 0 {\n        sum += max % 10\n        max /= 10\n    }\n\
    \    return sum\n}\n", "    var sum int\n    for _, v := range lst {\n       \
    \ if v > sum {\n            sum = v\n        }\n    }\n    return sum\n}\n", " \
    \   // Write your code here\n    return 0\n}\n", "    // your code here\n    return\
    \ 0\n}\n", "    var max int\n    for _, v := range lst {\n        if v > max {\n\
    \            max = v\n        }\n    }\n    return max\n}\n", "    var largestPrime\
    \ int\n    for _, v := range lst {\n        if isPrime(v) {\n            if v\
    \ > largestPrime {\n                largestPrime = v\n            }\n        }\n\
    \    }\n    return sumDigits(largestPrime)\n}\n", "    // your code here\n   \
    \ return 0\n}\n", "    return 0\n}\n", "    var largestPrime int\n    for _, v\
    \ := range lst {\n        if isPrime(v) && v > largestPrime {\n            largestPrime\
    \ = v\n        }\n    }\n    return sumDigits(largestPrime)\n}\n", "    var sum\
    \ int\n    for _, v := range lst {\n        sum += v\n    }\n    return sum\n\
    }\n", "    // find largest prime\n    var largestPrime int\n    for _, v := range\
    \ lst {\n        if isPrime(v) {\n            if v > largestPrime {\n        \
    \        largestPrime = v\n            }\n        }\n    }\n    // sum digits\n\
    \    var sum int\n    for _, v := range fmt.Sprintf(\"%d\", largestPrime) {\n\
    \        sum += int(v - '0')\n    }\n    return sum\n}\n", "    var max int\n\
    \    for _, v := range lst {\n        if v > max {\n            max = v\n    \
    \    }\n    }\n    var sum int\n    for max > 0 {\n        sum += max % 10\n \
    \       max /= 10\n    }\n    return sum\n}\n", "    // find largest prime\n \
    \   largestPrime := 0\n    for _, v := range lst {\n        if isPrime(v) && v\
    \ > largestPrime {\n            largestPrime = v\n        }\n    }\n    // sum\
    \ digits\n    sum := 0\n    for largestPrime > 0 {\n        sum += largestPrime\
    \ % 10\n        largestPrime /= 10\n    }\n    return sum\n}\n", "    var largest\
    \ int\n    for _, v := range lst {\n        if v > largest {\n            largest\
    \ = v\n        }\n    }\n    var sum int\n    for largest > 0 {\n        sum +=\
    \ largest % 10\n        largest /= 10\n    }\n    return sum\n}\n", "    var largestPrime\
    \ int\n    for _, v := range lst {\n        if isPrime(v) && v > largestPrime\
    \ {\n            largestPrime = v\n        }\n    }\n    return sumDigits(largestPrime)\n\
    }\n", "    // your code here\n    return 0\n}\n", "    var maxPrime int\n    for\
    \ _, n := range lst {\n        if isPrime(n) && n > maxPrime {\n            maxPrime\
    \ = n\n        }\n    }\n    return sumDigits(maxPrime)\n}\n", "    // your code\
    \ here\n    return 0\n}\n", "    // your code here\n    return 0\n}\n", "    var\
    \ largestPrime int\n    for _, v := range lst {\n        if isPrime(v) && v >\
    \ largestPrime {\n            largestPrime = v\n        }\n    }\n    return sumDigits(largestPrime)\n\
    }\n", "    var largestPrime int\n    for _, num := range lst {\n        if isPrime(num)\
    \ {\n            if num > largestPrime {\n                largestPrime = num\n\
    \            }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n", " \
    \   var largest int\n    for _, v := range lst {\n        if v > largest {\n \
    \           largest = v\n        }\n    }\n    var sum int\n    for largest >\
    \ 0 {\n        sum += largest % 10\n        largest /= 10\n    }\n    return sum\n\
    }\n", "    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumOfDigits(largestPrime)\n}\n", " \
    \   var largestPrime int\n    for _, num := range lst {\n        if isPrime(num)\
    \ {\n            if num > largestPrime {\n                largestPrime = num\n\
    \            }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n", " \
    \   var largestPrime int\n    for _, v := range lst {\n        if isPrime(v) {\n\
    \            if v > largestPrime {\n                largestPrime = v\n       \
    \     }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n", "    var\
    \ max int\n    for _, v := range lst {\n        if v > max {\n            max\
    \ = v\n        }\n    }\n    var prime bool\n    for i := max; i > 0; i-- {\n\
    \        prime = true\n        for j := 2; j < i; j++ {\n            if i%j ==\
    \ 0 {\n                prime = false\n                break\n            }\n \
    \       }\n        if prime {\n            var sum int\n            for _, v :=\
    \ range fmt.Sprintf(\"%d\", i) {\n                sum += int(v - '0')\n      \
    \      }\n            return sum\n        }\n    }\n    return 0\n}\n", "    //\
    \ find largest prime\n    var largestPrime int\n    for _, v := range lst {\n\
    \        if isPrime(v) {\n            if v > largestPrime {\n                largestPrime\
    \ = v\n            }\n        }\n    }\n    // sum of digits\n    var sum int\n\
    \    for _, v := range fmt.Sprintf(\"%d\", largestPrime) {\n        sum += int(v\
    \ - '0')\n    }\n    return sum\n}\n", "    var largestPrime int\n    for _, v\
    \ := range lst {\n        if isPrime(v) {\n            if v > largestPrime {\n\
    \                largestPrime = v\n            }\n        }\n    }\n    return\
    \ sumDigits(largestPrime)\n}\n", "    var largest int\n    for _, v := range lst\
    \ {\n        if v > largest {\n            largest = v\n        }\n    }\n   \
    \ return largest\n}\n", "    // find largest prime\n    var largestPrime int\n\
    \    for _, v := range lst {\n        if isPrime(v) {\n            if v > largestPrime\
    \ {\n                largestPrime = v\n            }\n        }\n    }\n    //\
    \ sum digits\n    var sum int\n    for _, v := range fmt.Sprintf(\"%d\", largestPrime)\
    \ {\n        sum += int(v - '0')\n    }\n    return sum\n}\n", "    // Write your\
    \ code here\n    return 0\n}\n", "    // your code here\n    return 0\n}\n", " \
    \   var max int\n    for _, v := range lst {\n        if v > max {\n         \
    \   max = v\n        }\n    }\n    for i := max; i > 1; i-- {\n        if isPrime(i)\
    \ {\n            return sumDigits(i)\n        }\n    }\n    return 0\n}\n", " \
    \   var max int\n    for _, v := range lst {\n        if v > max {\n         \
    \   max = v\n        }\n    }\n    var sum int\n    for max > 0 {\n        sum\
    \ += max % 10\n        max /= 10\n    }\n    return sum\n}\n", "    var largestPrime\
    \ int\n    for _, v := range lst {\n        if isPrime(v) {\n            if v\
    \ > largestPrime {\n                largestPrime = v\n            }\n        }\n\
    \    }\n    return sumDigits(largestPrime)\n}\n", "    var largestPrime int\n\
    \    for _, val := range lst {\n        if isPrime(val) {\n            if val\
    \ > largestPrime {\n                largestPrime = val\n            }\n      \
    \  }\n    }\n    return sumDigits(largestPrime)\n}\n", "    var largestPrime int\n\
    \    for _, v := range lst {\n        if isPrime(v) {\n            if v > largestPrime\
    \ {\n                largestPrime = v\n            }\n        }\n    }\n    return\
    \ sumDigits(largestPrime)\n}\n", "    var largestPrime int\n    for _, v := range\
    \ lst {\n        if isPrime(v) && v > largestPrime {\n            largestPrime\
    \ = v\n        }\n    }\n    return sumDigits(largestPrime)\n}\n", "    // your\
    \ code here\n    return 0\n}\n", "    // your code here\n    return 0\n}\n", " \
    \   var max int\n    for _, v := range lst {\n        if v > max {\n         \
    \   max = v\n        }\n    }\n    var sum int\n    for max > 0 {\n        sum\
    \ += max % 10\n        max /= 10\n    }\n    return sum\n}\n", "    var largestPrime\
    \ int\n    for _, v := range lst {\n        if isPrime(v) {\n            if v\
    \ > largestPrime {\n                largestPrime = v\n            }\n        }\n\
    \    }\n    return sumDigits(largestPrime)\n}\n", "    // your code here\n   \
    \ return 0\n}\n", "    var prime int\n    for _, val := range lst {\n        if\
    \ isPrime(val) {\n            prime = val\n        }\n    }\n    return sumDigits(prime)\n\
    }\n", "    // your code here\n    return 0\n}\n", "    var largestPrime int\n\
    \    for _, v := range lst {\n        if isPrime(v) {\n            if v > largestPrime\
    \ {\n                largestPrime = v\n            }\n        }\n    }\n    return\
    \ sumDigits(largestPrime)\n}\n", "    var largestPrime int\n    for _, v := range\
    \ lst {\n        if isPrime(v) {\n            if v > largestPrime {\n        \
    \        largestPrime = v\n            }\n        }\n    }\n    return sumDigits(largestPrime)\n\
    }\n", "    // find largest prime\n    var largestPrime int\n    for _, v := range\
    \ lst {\n        if isPrime(v) {\n            if v > largestPrime {\n        \
    \        largestPrime = v\n            }\n        }\n    }\n    // sum digits\n\
    \    var sum int\n    for _, v := range fmt.Sprintf(\"%d\", largestPrime) {\n\
    \        sum += int(v - '0')\n    }\n    return sum\n}\n", "    var max int\n\
    \    for _, v := range lst {\n        if v > max {\n            max = v\n    \
    \    }\n    }\n    return max\n}\n", "    // your code here\n    return 0\n}\n",
  "    var max int\n    for _, v := range lst {\n        if v > max {\n          \
    \  max = v\n        }\n    }\n    return max\n}\n", "    var largestPrime int\n\
    \    for _, v := range lst {\n        if isPrime(v) {\n            if v > largestPrime\
    \ {\n                largestPrime = v\n            }\n        }\n    }\n    return\
    \ sumOfDigits(largestPrime)\n}\n", "    // find largest prime\n    var largestPrime\
    \ int\n    for _, v := range lst {\n        if isPrime(v) {\n            if v\
    \ > largestPrime {\n                largestPrime = v\n            }\n        }\n\
    \    }\n    // sum of digits\n    var sum int\n    for _, v := range fmt.Sprintf(\"\
    %d\", largestPrime) {\n        sum += int(v - '0')\n    }\n    return sum\n}\n",
  "    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v) {\n\
    \            largestPrime = v\n        }\n    }\n    return sumDigits(largestPrime)\n\
    }\n", "    // find the largest prime value\n    var largestPrime int\n    for\
    \ _, v := range lst {\n        if isPrime(v) {\n            if v > largestPrime\
    \ {\n                largestPrime = v\n            }\n        }\n    }\n    //\
    \ return the sum of its digits\n    var sum int\n    for _, v := range fmt.Sprintf(\"\
    %d\", largestPrime) {\n        sum += int(v - '0')\n    }\n    return sum\n}\n",
  "    // largest prime\n    var largestPrime int\n    for _, v := range lst {\n \
    \       if isPrime(v) {\n            if v > largestPrime {\n                largestPrime\
    \ = v\n            }\n        }\n    }\n    // sum of digits\n    var sum int\n\
    \    for _, v := range fmt.Sprintf(\"%d\", largestPrime) {\n        sum += int(v\
    \ - '0')\n    }\n    return sum\n}\n", "    var largest int\n    for _, v := range\
    \ lst {\n        if v > largest {\n            largest = v\n        }\n    }\n\
    \    return largest\n}\n", "    var max int\n    for _, v := range lst {\n   \
    \     if v > max {\n            max = v\n        }\n    }\n    for i := max; i\
    \ > 0; i-- {\n        if isPrime(i) {\n            return sumDigits(i)\n     \
    \   }\n    }\n    return 0\n}\n", "    // your code here\n    return 0\n}\n",
  "    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v) {\n\
    \            if v > largestPrime {\n                largestPrime = v\n       \
    \     }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n", "    var\
    \ largestPrime int\n    for _, i := range lst {\n        if isPrime(i) {\n   \
    \         if i > largestPrime {\n                largestPrime = i\n          \
    \  }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n", "    var largestPrime\
    \ int\n    for _, v := range lst {\n        if isPrime(v) {\n            if v\
    \ > largestPrime {\n                largestPrime = v\n            }\n        }\n\
    \    }\n    return sumOfDigits(largestPrime)\n}\n", "    // your code here\n \
    \   return 0\n}\n", "    // your code here\n    return 0\n}\n", "    // your code\
    \ here\n    return 0\n}\n", "    var max int\n    for _, v := range lst {\n  \
    \      if v > max {\n            max = v\n        }\n    }\n    return max\n}\n",
  "    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v) {\n\
    \            if v > largestPrime {\n                largestPrime = v\n       \
    \     }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n", "    var\
    \ max int\n    for _, v := range lst {\n        if v > max {\n            max\
    \ = v\n        }\n    }\n    return max\n}\n", "    var max int\n    for _, v\
    \ := range lst {\n        if v > max {\n            max = v\n        }\n    }\n\
    \    var primes []int\n    for i := 2; i <= max; i++ {\n        isPrime := true\n\
    \        for j := 2; j < i; j++ {\n            if i%j == 0 {\n               \
    \ isPrime = false\n                break\n            }\n        }\n        if\
    \ isPrime {\n            primes = append(primes, i)\n        }\n    }\n    var\
    \ maxPrime int\n    for _, v := range primes {\n        if v > maxPrime {\n  \
    \          maxPrime = v\n        }\n    }\n    var sum int\n    for maxPrime >\
    \ 0 {\n        sum += maxPrime % 10\n        maxPrime /= 10\n    }\n    return\
    \ sum\n}\n", "    var largestPrime int\n    for _, num := range lst {\n      \
    \  if isPrime(num) {\n            if num > largestPrime {\n                largestPrime\
    \ = num\n            }\n        }\n    }\n    return sumDigits(largestPrime)\n\
    }\n", "    return 0\n}\n", "    var max int\n    for _, v := range lst {\n   \
    \     if v > max {\n            max = v\n        }\n    }\n    var sum int\n \
    \   for max > 0 {\n        sum += max % 10\n        max /= 10\n    }\n    return\
    \ sum\n}\n", "    var largestPrime int\n    for _, n := range lst {\n        if\
    \ isPrime(n) && n > largestPrime {\n            largestPrime = n\n        }\n\
    \    }\n    return sumDigits(largestPrime)\n}\n", "    return 0\n}\n", "    var\
    \ largestPrime int\n    for _, v := range lst {\n        if isPrime(v) {\n   \
    \         if v > largestPrime {\n                largestPrime = v\n          \
    \  }\n        }\n    }\n    return sumOfDigits(largestPrime)\n}\n", "    var largestPrime\
    \ int\n    for _, num := range lst {\n        if isPrime(num) {\n            if\
    \ num > largestPrime {\n                largestPrime = num\n            }\n  \
    \      }\n    }\n    return sumDigits(largestPrime)\n}\n", "    // find the largest\
    \ prime value\n    var largestPrime int\n    for _, v := range lst {\n       \
    \ if isPrime(v) {\n            if v > largestPrime {\n                largestPrime\
    \ = v\n            }\n        }\n    }\n    // sum of its digits\n    var sum\
    \ int\n    for _, v := range fmt.Sprintf(\"%d\", largestPrime) {\n        sum\
    \ += int(v - '0')\n    }\n    return sum\n}\n", "    // your code here\n    return\
    \ 0\n}\n", "    var max int\n    for _, v := range lst {\n        if v > max {\n\
    \            max = v\n        }\n    }\n    return max\n}\n", "    var largestPrime\
    \ int\n    for _, i := range lst {\n        if isPrime(i) {\n            if i\
    \ > largestPrime {\n                largestPrime = i\n            }\n        }\n\
    \    }\n    return sumDigits(largestPrime)\n}\n", "    var max int\n    for _,\
    \ v := range lst {\n        if v > max {\n            max = v\n        }\n   \
    \ }\n    for i := max; i > 1; i-- {\n        if isPrime(i) {\n            return\
    \ sum(i)\n        }\n    }\n    return 0\n}\n", "    // your code here\n    return\
    \ 0\n}\n", "    var largestPrime int\n    for _, n := range lst {\n        if\
    \ isPrime(n) && n > largestPrime {\n            largestPrime = n\n        }\n\
    \    }\n    return sumDigits(largestPrime)\n}\n", "    var largestPrime int\n\
    \    for _, v := range lst {\n        if isPrime(v) {\n            if v > largestPrime\
    \ {\n                largestPrime = v\n            }\n        }\n    }\n    return\
    \ sumOfDigits(largestPrime)\n}\n", "    return 0\n}\n", "    // your code here\n\
    \    return 0\n}\n", "    // find largest prime\n    var largestPrime int\n  \
    \  for _, v := range lst {\n        if isPrime(v) {\n            if v > largestPrime\
    \ {\n                largestPrime = v\n            }\n        }\n    }\n    //\
    \ sum digits\n    var sum int\n    for _, v := range fmt.Sprintf(\"%d\", largestPrime)\
    \ {\n        sum += int(v - '0')\n    }\n    return sum\n}\n", "    var sum int\n\
    \    var max int\n    for _, v := range lst {\n        if isPrime(v) {\n     \
    \       if v > max {\n                max = v\n            }\n        }\n    }\n\
    \    for max > 0 {\n        sum += max % 10\n        max /= 10\n    }\n    return\
    \ sum\n}\n", "    var max int\n    for _, v := range lst {\n        if isPrime(v)\
    \ && v > max {\n            max = v\n        }\n    }\n    return sumDigits(max)\n\
    }\n", "    var max int\n    for _, v := range lst {\n        if v > max {\n  \
    \          max = v\n        }\n    }\n    for i := max; i > 0; i-- {\n       \
    \ if isPrime(i) {\n            return sumDigits(i)\n        }\n    }\n    return\
    \ 0\n}\n", "    // find largest prime\n    // sum its digits\n    return 0\n}\n",
  "    // your code here\n    return 0\n}\n", "    var largestPrime int\n    for _,\
    \ v := range lst {\n        if isPrime(v) {\n            if v > largestPrime {\n\
    \                largestPrime = v\n            }\n        }\n    }\n    return\
    \ sumOfDigits(largestPrime)\n}\n", "    var largestPrime int\n    for _, v :=\
    \ range lst {\n        if isPrime(v) {\n            if v > largestPrime {\n  \
    \              largestPrime = v\n            }\n        }\n    }\n    return sumOfDigits(largestPrime)\n\
    }\n", "    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumOfDigits(largestPrime)\n}\n", " \
    \   // your code here\n    return 0\n}\n", "    var largestPrime int\n    for\
    \ _, v := range lst {\n        if isPrime(v) && v > largestPrime {\n         \
    \   largestPrime = v\n        }\n    }\n    return sumOfDigits(largestPrime)\n\
    }\n", "    var max int\n    for _, v := range lst {\n        if v > max {\n  \
    \          max = v\n        }\n    }\n    return max\n}\n", "    // largest prime\
    \ value\n    var largestPrime int\n    // sum of its digits\n    var sum int\n\
    \n    // find the largest prime value\n    for _, v := range lst {\n        if\
    \ isPrime(v) {\n            if v > largestPrime {\n                largestPrime\
    \ = v\n            }\n        }\n    }\n\n    // sum of its digits\n    for largestPrime\
    \ > 0 {\n        sum += largestPrime % 10\n        largestPrime /= 10\n    }\n\
    \n    return sum\n}\n", "    var largestPrime int\n    for _, n := range lst {\n\
    \        if isPrime(n) && n > largestPrime {\n            largestPrime = n\n \
    \       }\n    }\n    return sumDigits(largestPrime)\n}\n", "    // your code\
    \ here\n    return 0\n}\n", "    var max int\n    for _, v := range lst {\n  \
    \      if v > max {\n            max = v\n        }\n    }\n    return max\n}\n",
  "    // your code here\n    return 0\n}\n", "    // your code here\n    return 0\n\
    }\n", "    var max int\n    for _, v := range lst {\n        if v > max {\n  \
    \          max = v\n        }\n    }\n    var sum int\n    for max > 0 {\n   \
    \     sum += max % 10\n        max /= 10\n    }\n    return sum\n}\n", "    //\
    \ find largest prime\n    var largestPrime int\n    for _, v := range lst {\n\
    \        if isPrime(v) {\n            if v > largestPrime {\n                largestPrime\
    \ = v\n            }\n        }\n    }\n    // sum of digits\n    var sum int\n\
    \    for _, v := range fmt.Sprintf(\"%d\", largestPrime) {\n        sum += int(v\
    \ - '0')\n    }\n    return sum\n}\n", "    // your code here\n    return 0\n\
    }\n", "    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumOfDigits(largestPrime)\n}\n", " \
    \   // your code here\n    return 0\n}\n", "    // your code here\n    return\
    \ 0\n}\n", "    var largestPrime int\n    for _, v := range lst {\n        if\
    \ isPrime(v) {\n            if v > largestPrime {\n                largestPrime\
    \ = v\n            }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n",
  "    // your code here\n    return 0\n}\n", "    // find largest prime\n    var\
    \ largestPrime int\n    for _, v := range lst {\n        if v > largestPrime {\n\
    \            largestPrime = v\n        }\n    }\n    // sum digits\n    var sum\
    \ int\n    for largestPrime > 0 {\n        sum += largestPrime % 10\n        largestPrime\
    \ /= 10\n    }\n    return sum\n}\n", "    // your code here\n    return 0\n}\n",
  "    var max int\n    for _, v := range lst {\n        if v > max {\n          \
    \  max = v\n        }\n    }\n    return max\n}\n", "    var max int\n    for\
    \ _, v := range lst {\n        if v > max {\n            max = v\n        }\n\
    \    }\n    var prime bool\n    for i := max; i > 0; i-- {\n        prime = true\n\
    \        for j := 2; j < i; j++ {\n            if i%j == 0 {\n               \
    \ prime = false\n                break\n            }\n        }\n        if prime\
    \ {\n            break\n        }\n    }\n    var sum int\n    for prime > 0 {\n\
    \        sum += prime % 10\n        prime /= 10\n    }\n    return sum\n}\n",
  "    var largestPrime int\n    for _, i := range lst {\n        if isPrime(i) {\n\
    \            if i > largestPrime {\n                largestPrime = i\n       \
    \     }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n", "    var\
    \ largest int\n    for _, v := range lst {\n        if isPrime(v) && v > largest\
    \ {\n            largest = v\n        }\n    }\n    return sumDigits(largest)\n\
    }\n", "    var max int\n    for _, v := range lst {\n        if v > max {\n  \
    \          max = v\n        }\n    }\n    var sum int\n    for max > 0 {\n   \
    \     sum += max % 10\n        max /= 10\n    }\n    return sum\n}\n", "    var\
    \ max int\n    for _, v := range lst {\n        if v > max {\n            max\
    \ = v\n        }\n    }\n    return max\n}\n", "    var maxPrime int\n    for\
    \ _, v := range lst {\n        if isPrime(v) {\n            if v > maxPrime {\n\
    \                maxPrime = v\n            }\n        }\n    }\n    return sumDigits(maxPrime)\n\
    }\n", "    var max int\n    for _, v := range lst {\n        if v > max {\n  \
    \          max = v\n        }\n    }\n    return max\n}\n", "    // your code\
    \ here\n    return 0\n}\n", "    return 0\n}\n", "    var max int\n    for _,\
    \ v := range lst {\n        if v > max {\n            max = v\n        }\n   \
    \ }\n    var sum int\n    for max > 0 {\n        sum += max % 10\n        max\
    \ /= 10\n    }\n    return sum\n}\n", "    // your code here\n    return 0\n}\n",
  "    var max int\n    for _, v := range lst {\n        if v > max {\n          \
    \  max = v\n        }\n    }\n    return max\n}\n", "    // find the largest prime\
    \ value\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    // return the sum of its digits\n    return\
    \ sumDigits(largestPrime)\n}\n", "    var largest int\n    for _, v := range lst\
    \ {\n        if v > largest {\n            largest = v\n        }\n    }\n   \
    \ return largest\n}\n", "    var max, sum int\n    for _, v := range lst {\n \
    \       if v > max {\n            max = v\n        }\n    }\n    for max > 0 {\n\
    \        sum += max % 10\n        max /= 10\n    }\n    return sum\n}\n", "  \
    \  var largest int\n    for _, v := range lst {\n        if v > largest {\n  \
    \          largest = v\n        }\n    }\n    return largest\n}\n", "    var largestPrime\
    \ int\n    for _, v := range lst {\n        if isPrime(v) && v > largestPrime\
    \ {\n            largestPrime = v\n        }\n    }\n    return sumOfDigits(largestPrime)\n\
    }\n", "    // your code here\n    return 0\n}\n", "    var max int\n    for _,\
    \ v := range lst {\n        if v > max {\n            max = v\n        }\n   \
    \ }\n    return max\n}\n", "    var largestPrime int\n    for _, num := range\
    \ lst {\n        if isPrime(num) {\n            if num > largestPrime {\n    \
    \            largestPrime = num\n            }\n        }\n    }\n    return sumDigits(largestPrime)\n\
    }\n", "    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n", "   \
    \ var max int\n    for _, v := range lst {\n        if v > max {\n           \
    \ max = v\n        }\n    }\n    var primes []int\n    for i := 2; i <= max; i++\
    \ {\n        isPrime := true\n        for j := 2; j < i; j++ {\n            if\
    \ i%j == 0 {\n                isPrime = false\n                break\n       \
    \     }\n        }\n        if isPrime {\n            primes = append(primes,\
    \ i)\n        }\n    }\n    var maxPrime int\n    for _, v := range primes {\n\
    \        if v > maxPrime {\n            maxPrime = v\n        }\n    }\n    var\
    \ sum int\n    for maxPrime > 0 {\n        sum += maxPrime % 10\n        maxPrime\
    \ /= 10\n    }\n    return sum\n}\n", "    // find largest prime\n    var largestPrime\
    \ int\n    for _, v := range lst {\n        if isPrime(v) {\n            if v\
    \ > largestPrime {\n                largestPrime = v\n            }\n        }\n\
    \    }\n    // sum digits\n    var sum int\n    for _, v := range fmt.Sprintf(\"\
    %d\", largestPrime) {\n        sum += int(v - '0')\n    }\n    return sum\n}\n",
  "    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v) {\n\
    \            if v > largestPrime {\n                largestPrime = v\n       \
    \     }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n", "    var\
    \ result int\n    for _, v := range lst {\n        if isPrime(v) {\n         \
    \   result += v\n        }\n    }\n    return result\n}\n", "    var max int\n\
    \    for _, v := range lst {\n        if v > max {\n            max = v\n    \
    \    }\n    }\n    var sum int\n    for max > 0 {\n        sum += max % 10\n \
    \       max /= 10\n    }\n    return sum\n}\n", "    var largest int\n    for\
    \ _, v := range lst {\n        if v > largest {\n            largest = v\n   \
    \     }\n    }\n    return largest\n}\n", "    var max int\n    for _, v := range\
    \ lst {\n        if v > max {\n            max = v\n        }\n    }\n    return\
    \ max\n}\n", "    var largestPrime int\n    for _, v := range lst {\n        if\
    \ isPrime(v) {\n            if v > largestPrime {\n                largestPrime\
    \ = v\n            }\n        }\n    }\n    return sumOfDigits(largestPrime)\n\
    }\n", "    // your code here\n    return 0\n}\n", "    var max int\n    for _,\
    \ v := range lst {\n        if v > max {\n            max = v\n        }\n   \
    \ }\n    return max\n}\n", "    var max int\n    for _, v := range lst {\n   \
    \     if v > max {\n            max = v\n        }\n    }\n    return max\n}\n",
  "    var largest int\n    for _, n := range lst {\n        if n > largest {\n  \
    \          largest = n\n        }\n    }\n    return largest\n}\n", "    // TODO:\
    \ Implement the solution\n    return 0\n}\n", "    var max int\n    for _, v :=\
    \ range lst {\n        if v > max {\n            max = v\n        }\n    }\n \
    \   for i := max; i > 1; i-- {\n        if isPrime(i) {\n            return sumOfDigits(i)\n\
    \        }\n    }\n    return 0\n}\n", "    var largest int\n    for _, v := range\
    \ lst {\n        if v > largest {\n            largest = v\n        }\n    }\n\
    \    var sum int\n    for largest > 0 {\n        sum += largest % 10\n       \
    \ largest /= 10\n    }\n    return sum\n}\n", "    // your code here\n    return\
    \ 0\n}\n", "    var max int\n    for _, v := range lst {\n        if v > max {\n\
    \            max = v\n        }\n    }\n    for i := 2; i < max; i++ {\n     \
    \   if max%i == 0 {\n            max = max / i\n            i = 2\n        }\n\
    \    }\n    var sum int\n    for max > 0 {\n        sum += max % 10\n        max\
    \ /= 10\n    }\n    return sum\n}\n", "    var max int\n    for _, v := range\
    \ lst {\n        if v > max {\n            max = v\n        }\n    }\n    if max\
    \ == 1 {\n        return 1\n    }\n    for i := 2; i < max; i++ {\n        if\
    \ max%i == 0 {\n            max = skjkasdkd([]int{max / i})\n            break\n\
    \        }\n    }\n    var sum int\n    for _, v := range fmt.Sprintf(\"%d\",\
    \ max) {\n        sum += int(v - '0')\n    }\n    return sum\n}\n", "    // your\
    \ code here\n    return 0\n}\n", "    // your code here\n    return 0\n}\n", " \
    \   var largestPrime int\n    for _, v := range lst {\n        if isPrime(v) {\n\
    \            if v > largestPrime {\n                largestPrime = v\n       \
    \     }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n", "    var\
    \ largestPrime int\n    for _, v := range lst {\n        if isPrime(v) && v >\
    \ largestPrime {\n            largestPrime = v\n        }\n    }\n    return sumDigits(largestPrime)\n\
    }\n", "    var max int\n    for _, v := range lst {\n        if v > max {\n  \
    \          max = v\n        }\n    }\n    var sum int\n    for max > 0 {\n   \
    \     sum += max % 10\n        max /= 10\n    }\n    return sum\n}\n", "    var\
    \ largestPrime int\n    for _, val := range lst {\n        if isPrime(val) {\n\
    \            if val > largestPrime {\n                largestPrime = val\n   \
    \         }\n        }\n    }\n    return sumOfDigits(largestPrime)\n}\n"]
stop_tokens:
- "\nfunc"
- struct
- "\n// "

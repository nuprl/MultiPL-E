language: go_test.go
name: HumanEval_51_remove_vowels
results:
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := \"aeiouAEIOU\"\
    \n    result := \"\"\n    for _, char := range text {\n        if !strings.Contains(vowels,\
    \ string(char)) {\n            result += string(char)\n        }\n    }\n    return\
    \ result\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n\
    \     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"\
    eeeee\"), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"\
    cB\" },\n     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual:\
    \ candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp1mu13hik_test.go:13:13: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        switch char {\n        case 'a', 'e',\
    \ 'i', 'o', 'u':\n            continue\n        default:\n            result +=\
    \ string(char)\n        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmpco2scy3c_test.go:41: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmpco2scy3c_test.go:41:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        switch char {\n        case 'a', 'e',\
    \ 'i', 'o', 'u':\n            continue\n        default:\n            result +=\
    \ string(char)\n        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmpco2scy3c_test.go:41: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmpco2scy3c_test.go:41:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := map[string]bool{\n\
    \        \"a\": true,\n        \"e\": true,\n        \"i\": true,\n        \"\
    o\": true,\n        \"u\": true,\n    }\n    var result string\n    for _, char\
    \ := range text {\n        if _, ok := vowels[string(char)]; !ok {\n         \
    \   result += string(char)\n        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmpi0n2x62u_test.go:45: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmpi0n2x62u_test.go:45:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, letter := range text {\n        if letter != 'a' && letter != 'e' &&\
    \ letter != 'i' && letter != 'o' && letter != 'u' {\n            result += string(letter)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmpdkfskvzs_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmpdkfskvzs_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var vowels = []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\"}\n    var result string\n\n    for _, char :=\
    \ range text {\n        if !contains(vowels, string(char)) {\n            result\
    \ += string(char)\n        }\n    }\n\n    return result\n}\n\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp2m003xg2_test.go:14:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ vowel := range vowels {\n        text = strings.Replace(text, vowel, \"\", -1)\n\
    \    }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpgpbnys9x_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, letter := range text {\n        if letter != 'a' && letter != 'e' &&\
    \ letter != 'i' && letter != 'o' && letter != 'u' {\n            result += string(letter)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmpdkfskvzs_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmpdkfskvzs_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, c := range text {\n        if c != 'a' && c != 'e' && c != 'i' && c\
    \ != 'o' && c != 'u' {\n            result += string(c)\n        }\n    }\n  \
    \  return result\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate :=\
    \ remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmpx1farnfu_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmpx1farnfu_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,vowel\
    \ := range vowels {\n        text = strings.Replace(text, vowel, \"\", -1)\n \
    \   }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp9z8bvoqb_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        switch char {\n        case 'a', 'e',\
    \ 'i', 'o', 'u':\n            continue\n        default:\n            result +=\
    \ string(char)\n        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmpco2scy3c_test.go:41: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmpco2scy3c_test.go:41:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []rune{'a',\
    \ 'e', 'i', 'o', 'u'}\n    var result []rune\n    for _, r := range text {\n \
    \       if !contains(vowels, r) {\n            result = append(result, r)\n  \
    \      }\n    }\n    return string(result)\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpwdryna0t_test.go:13:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073251
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   vowels := []string{\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\"}\n    for _, char := range text {\n        if !contains(vowels,\
    \ string(char)) {\n            result += string(char)\n        }\n    }\n    return\
    \ result\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n\
    \     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"\
    eeeee\"), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"\
    cB\" },\n     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual:\
    \ candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp20saovfz_test.go:13:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073251
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    return \"\"\n}\n\nfunc\
    \ TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__1\
    \ (0.00s)\n        tmpub4jtkil_test.go:32: expected 'bcdf\n            ghjklm',\
    \ got ''\n    --- FAIL: TestRemove_Vowels/test_num__2 (0.00s)\n        tmpub4jtkil_test.go:32:\
    \ expected 'fdcb', got ''\n    --- FAIL: TestRemove_Vowels/test_num__4 (0.00s)\n\
    \        tmpub4jtkil_test.go:32: expected 'cB', got ''\n    --- FAIL: TestRemove_Vowels/test_num__5\
    \ (0.00s)\n        tmpub4jtkil_test.go:32: expected 'cB', got ''\n    --- FAIL:\
    \ TestRemove_Vowels/test_num__6 (0.00s)\n        tmpub4jtkil_test.go:32: expected\
    \ 'ybcd', got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var new_text string\n\
    \    for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            new_text += string(char)\n\
    \        }\n    }\n    return new_text\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmp5viedfkd_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmp5viedfkd_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        switch char {\n        case 'a', 'e',\
    \ 'i', 'o', 'u':\n            continue\n        default:\n            result +=\
    \ string(char)\n        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmpco2scy3c_test.go:41: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmpco2scy3c_test.go:41:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []rune{'a',\
    \ 'e', 'i', 'o', 'u'}\n    var result []rune\n    for _, char := range text {\n\
    \        if !contains(vowels, char) {\n            result = append(result, char)\n\
    \        }\n    }\n    return string(result)\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmprs7ac14w_test.go:13:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073251
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var new_text string\n\
    \    for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            new_text += string(char)\n\
    \        }\n    }\n    return new_text\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmp5viedfkd_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmp5viedfkd_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        switch char {\n        case 'a', 'e',\
    \ 'i', 'o', 'u':\n            continue\n        default:\n            result +=\
    \ string(char)\n        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmpco2scy3c_test.go:41: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmpco2scy3c_test.go:41:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := \"aeiouAEIOU\"\
    \n    result := \"\"\n    for _, char := range text {\n        if !strings.Contains(vowels,\
    \ string(char)) {\n            result += string(char)\n        }\n    }\n    return\
    \ result\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n\
    \     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"\
    eeeee\"), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"\
    cB\" },\n     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual:\
    \ candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp1mu13hik_test.go:13:13: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, c := range text {\n        if c != 'a' && c != 'e' && c != 'i' && c\
    \ != 'o' && c != 'u' {\n            result += string(c)\n        }\n    }\n  \
    \  return result\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate :=\
    \ remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmpx1farnfu_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmpx1farnfu_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    return \"\"\n}\n\nfunc\
    \ TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n     { actual:\
    \ candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n     { actual:\
    \ candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"eeeee\"\
    ), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"cB\" },\n\
    \     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"\
    ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__1\
    \ (0.00s)\n        tmpub4jtkil_test.go:32: expected 'bcdf\n            ghjklm',\
    \ got ''\n    --- FAIL: TestRemove_Vowels/test_num__2 (0.00s)\n        tmpub4jtkil_test.go:32:\
    \ expected 'fdcb', got ''\n    --- FAIL: TestRemove_Vowels/test_num__4 (0.00s)\n\
    \        tmpub4jtkil_test.go:32: expected 'cB', got ''\n    --- FAIL: TestRemove_Vowels/test_num__5\
    \ (0.00s)\n        tmpub4jtkil_test.go:32: expected 'cB', got ''\n    --- FAIL:\
    \ TestRemove_Vowels/test_num__6 (0.00s)\n        tmpub4jtkil_test.go:32: expected\
    \ 'ybcd', got ''\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := map[string]bool{\n\
    \        \"a\": true,\n        \"e\": true,\n        \"i\": true,\n        \"\
    o\": true,\n        \"u\": true,\n    }\n    var result string\n    for _, char\
    \ := range text {\n        if !vowels[string(char)] {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmpvvtcnb3a_test.go:45: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmpvvtcnb3a_test.go:45:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, letter := range text {\n        if letter != 'a' && letter != 'e' &&\
    \ letter != 'i' && letter != 'o' && letter != 'u' {\n            result += string(letter)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmpdkfskvzs_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmpdkfskvzs_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ vowel := range vowels {\n        text = strings.Replace(text, vowel, \"\", -1)\n\
    \    }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpgpbnys9x_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := \"aeiouAEIOU\"\
    \n    result := \"\"\n    for _, char := range text {\n        if !strings.Contains(vowels,\
    \ string(char)) {\n            result += string(char)\n        }\n    }\n    return\
    \ result\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate := remove_vowels\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"\"), expected: \"\" },\n    \
    \ { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\nghjklm\" },\n\
    \     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n     { actual: candidate(\"\
    eeeee\"), expected: \"\" },\n     { actual: candidate(\"acBAA\"), expected: \"\
    cB\" },\n     { actual: candidate(\"EcBOO\"), expected: \"cB\" },\n     { actual:\
    \ candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\n\tfor i, tc := range tests\
    \ {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\t\
    if fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\
    \tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t\
    })\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp1mu13hik_test.go:13:13: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []rune{'a',\
    \ 'e', 'i', 'o', 'u'}\n    var result string\n    for _, char := range text {\n\
    \        if !contains(vowels, char) {\n            result += string(char)\n  \
    \      }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpqufhmxdu_test.go:13:13: undefined: contains

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        switch char {\n        case 'a', 'e',\
    \ 'i', 'o', 'u':\n            continue\n        default:\n            result +=\
    \ string(char)\n        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t\
    \ *testing.T) {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual\
    \   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate(\"\"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"\
    ), expected: \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected:\
    \ \"fdcb\" },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     {\
    \ actual: candidate(\"acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"\
    EcBOO\"), expected: \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"\
    ybcd\" },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test\
    \ num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmpco2scy3c_test.go:41: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmpco2scy3c_test.go:41:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ vowel := range vowels {\n        text = strings.Replace(text, vowel, \"\", -1)\n\
    \    }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpgpbnys9x_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, char := range text {\n        if char != 'a' && char != 'e' && char\
    \ != 'i' && char != 'o' && char != 'u' {\n            result += string(char)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmptbupu_6c_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmptbupu_6c_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 1
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    var result string\n \
    \   for _, letter := range text {\n        if letter != 'a' && letter != 'e' &&\
    \ letter != 'i' && letter != 'o' && letter != 'u' {\n            result += string(letter)\n\
    \        }\n    }\n    return result\n}\n\nfunc TestRemove_Vowels(t *testing.T)\
    \ {\n  candidate := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    \"), expected: \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected:\
    \ \"bcdf\\nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\"\
    \ },\n     { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestRemove_Vowels (0.00s)\n    --- FAIL: TestRemove_Vowels/test_num__4\
    \ (0.00s)\n        tmpdkfskvzs_test.go:38: expected 'cB', got 'cBAA'\n    ---\
    \ FAIL: TestRemove_Vowels/test_num__5 (0.00s)\n        tmpdkfskvzs_test.go:38:\
    \ expected 'cB', got 'EcBOO'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252
- exit_code: 2
  program: "package remove_vowels_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n\
    )\n\n// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfunc remove_vowels(text string) string {\n    vowels := []string{\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    for _,\
    \ v := range vowels {\n        text = strings.Replace(text, v, \"\", -1)\n   \
    \ }\n    return text\n}\n\nfunc TestRemove_Vowels(t *testing.T) {\n  candidate\
    \ := remove_vowels\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected:\
    \ \"\" },\n     { actual: candidate(\"abcdef\\nghijklm\"), expected: \"bcdf\\\
    nghjklm\" },\n     { actual: candidate(\"fedcba\"), expected: \"fdcb\" },\n  \
    \   { actual: candidate(\"eeeee\"), expected: \"\" },\n     { actual: candidate(\"\
    acBAA\"), expected: \"cB\" },\n     { actual: candidate(\"EcBOO\"), expected:\
    \ \"cB\" },\n     { actual: candidate(\"ybcd\"), expected: \"ybcd\" },\n   }\n\
    \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaau1x3oy_test.go:12:16: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073252

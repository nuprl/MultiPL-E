language: go_test.go
name: HumanEval_94_skjkasdkd
results:
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp5gdk1mz5_test.go:14:12: undefined: isPrime

    /tmp/tmp5gdk1mz5_test.go:20:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp5gdk1mz5_test.go:14:12: undefined: isPrime

    /tmp/tmp5gdk1mz5_test.go:20:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var max int\n    for _, v := range lst {\n        if v > max {\n    \
    \        max = v\n        }\n    }\n    var sum int\n    for max > 0 {\n     \
    \   sum += max % 10\n        max /= 10\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpvunsg7cu_test.go:47: expected '%!s(int=10)', got '%!s(int=9)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__2 (0.00s)\n        tmpvunsg7cu_test.go:47:\
    \ expected '%!s(int=13)', got '%!s(int=28)'\n    --- FAIL: TestSkjkasdkd/test_num__3\
    \ (0.00s)\n        tmpvunsg7cu_test.go:47: expected '%!s(int=11)', got '%!s(int=13)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__4 (0.00s)\n        tmpvunsg7cu_test.go:47:\
    \ expected '%!s(int=3)', got '%!s(int=9)'\n    --- FAIL: TestSkjkasdkd/test_num__5\
    \ (0.00s)\n        tmpvunsg7cu_test.go:47: expected '%!s(int=7)', got '%!s(int=8)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpvunsg7cu_test.go:47:\
    \ expected '%!s(int=19)', got '%!s(int=21)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpvunsg7cu_test.go:47: expected '%!s(int=10)', got '%!s(int=20)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    // find the largest prime value\n    var largestPrime int\n    for _,\
    \ v := range lst {\n        if isPrime(v) {\n            if v > largestPrime {\n\
    \                largestPrime = v\n            }\n        }\n    }\n    // return\
    \ the sum of its digits\n    var sum int\n    for _, v := range fmt.Sprintf(\"\
    %d\", largestPrime) {\n        sum += int(v - '0')\n    }\n    return sum\n}\n\
    \nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp1iwl6kv4_test.go:15:12: undefined: isPrime

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    // find largest prime\n    var largestPrime int\n    for _, v := range\
    \ lst {\n        if isPrime(v) {\n            if v > largestPrime {\n        \
    \        largestPrime = v\n            }\n        }\n    }\n    // sum digits\n\
    \    var sum int\n    for _, v := range fmt.Sprintf(\"%d\", largestPrime) {\n\
    \        sum += int(v - '0')\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpag83bbi7_test.go:15:12: undefined: isPrime

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp5gdk1mz5_test.go:14:12: undefined: isPrime

    /tmp/tmp5gdk1mz5_test.go:20:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var largest int\n    for _, v := range lst {\n        if v > largest\
    \ {\n            largest = v\n        }\n    }\n    var sum int\n    for largest\
    \ > 0 {\n        sum += largest % 10\n        largest /= 10\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpxymhhxy9_test.go:47: expected '%!s(int=10)', got '%!s(int=9)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__2 (0.00s)\n        tmpxymhhxy9_test.go:47:\
    \ expected '%!s(int=13)', got '%!s(int=28)'\n    --- FAIL: TestSkjkasdkd/test_num__3\
    \ (0.00s)\n        tmpxymhhxy9_test.go:47: expected '%!s(int=11)', got '%!s(int=13)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__4 (0.00s)\n        tmpxymhhxy9_test.go:47:\
    \ expected '%!s(int=3)', got '%!s(int=9)'\n    --- FAIL: TestSkjkasdkd/test_num__5\
    \ (0.00s)\n        tmpxymhhxy9_test.go:47: expected '%!s(int=7)', got '%!s(int=8)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpxymhhxy9_test.go:47:\
    \ expected '%!s(int=19)', got '%!s(int=21)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpxymhhxy9_test.go:47: expected '%!s(int=10)', got '%!s(int=20)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var max int\n    for _, v := range lst {\n        if v > max {\n    \
    \        max = v\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var largestPrime int\n    for _, i := range lst {\n        if isPrime(i)\
    \ {\n            if i > largestPrime {\n                largestPrime = i\n   \
    \         }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmppw9g0ct7_test.go:14:12: undefined: isPrime

    /tmp/tmppw9g0ct7_test.go:20:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ && v > largestPrime {\n            largestPrime = v\n        }\n    }\n    return\
    \ sumDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate\
    \ := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpgh4vojs3_test.go:14:12: undefined: isPrime

    /tmp/tmpgh4vojs3_test.go:18:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var prime int\n    for _, n := range lst {\n        if isPrime(n) &&\
    \ n > prime {\n            prime = n\n        }\n    }\n    return sumDigits(prime)\n\
    }\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpy05920fh_test.go:14:12: undefined: isPrime

    /tmp/tmpy05920fh_test.go:18:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ && v > largestPrime {\n            largestPrime = v\n        }\n    }\n    return\
    \ sumDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate\
    \ := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpgh4vojs3_test.go:14:12: undefined: isPrime

    /tmp/tmpgh4vojs3_test.go:18:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    // largest prime value\n    var largestPrime int\n    // sum of its digits\n\
    \    var sum int\n\n    // find largest prime value\n    for _, val := range lst\
    \ {\n        if isPrime(val) {\n            if val > largestPrime {\n        \
    \        largestPrime = val\n            }\n        }\n    }\n\n    // find sum\
    \ of its digits\n    for largestPrime > 0 {\n        sum += largestPrime % 10\n\
    \        largestPrime /= 10\n    }\n\n    return sum\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpj85m69cz_test.go:19:12: undefined: isPrime

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var max int\n    for _, v := range lst {\n        if v > max {\n    \
    \        max = v\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp5gdk1mz5_test.go:14:12: undefined: isPrime

    /tmp/tmp5gdk1mz5_test.go:20:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var largestPrime int\n    for _, num := range lst {\n        if isPrime(num)\
    \ {\n            if num > largestPrime {\n                largestPrime = num\n\
    \            }\n        }\n    }\n    return sumOfDigits(largestPrime)\n}\n\n\
    func TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp3fn86za__test.go:14:12: undefined: isPrime

    /tmp/tmp3fn86za__test.go:20:12: undefined: sumOfDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ && v > largestPrime {\n            largestPrime = v\n        }\n    }\n    return\
    \ sumDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate\
    \ := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpgh4vojs3_test.go:14:12: undefined: isPrime

    /tmp/tmpgh4vojs3_test.go:18:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var largest int\n    for _, v := range lst {\n        if v > largest\
    \ {\n            largest = v\n        }\n    }\n    var sum int\n    for largest\
    \ > 0 {\n        sum += largest % 10\n        largest /= 10\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpxymhhxy9_test.go:47: expected '%!s(int=10)', got '%!s(int=9)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__2 (0.00s)\n        tmpxymhhxy9_test.go:47:\
    \ expected '%!s(int=13)', got '%!s(int=28)'\n    --- FAIL: TestSkjkasdkd/test_num__3\
    \ (0.00s)\n        tmpxymhhxy9_test.go:47: expected '%!s(int=11)', got '%!s(int=13)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__4 (0.00s)\n        tmpxymhhxy9_test.go:47:\
    \ expected '%!s(int=3)', got '%!s(int=9)'\n    --- FAIL: TestSkjkasdkd/test_num__5\
    \ (0.00s)\n        tmpxymhhxy9_test.go:47: expected '%!s(int=7)', got '%!s(int=8)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpxymhhxy9_test.go:47:\
    \ expected '%!s(int=19)', got '%!s(int=21)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpxymhhxy9_test.go:47: expected '%!s(int=10)', got '%!s(int=20)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumOfDigits(largestPrime)\n}\n\nfunc\
    \ TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmph8lr06oe_test.go:14:12: undefined: isPrime

    /tmp/tmph8lr06oe_test.go:20:12: undefined: sumOfDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ && v > largestPrime {\n            largestPrime = v\n        }\n    }\n    return\
    \ sumOfDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate\
    \ := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpj5r6eriw_test.go:14:12: undefined: isPrime

    /tmp/tmpj5r6eriw_test.go:18:12: undefined: sumOfDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var largestPrime int\n    for _, num := range lst {\n        if isPrime(num)\
    \ {\n            if num > largestPrime {\n                largestPrime = num\n\
    \            }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n\nfunc\
    \ TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpwg9esemm_test.go:14:12: undefined: isPrime

    /tmp/tmpwg9esemm_test.go:20:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var max int\n    for _, v := range lst {\n        if v > max {\n    \
    \        max = v\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    // find largest prime\n    var largestPrime int\n    for _, v := range\
    \ lst {\n        if isPrime(v) {\n            if v > largestPrime {\n        \
    \        largestPrime = v\n            }\n        }\n    }\n    // sum digits\n\
    \    var sum int\n    for _, v := range fmt.Sprintf(\"%d\", largestPrime) {\n\
    \        sum += int(v - '0')\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpag83bbi7_test.go:15:12: undefined: isPrime

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    // find largest prime\n    var largestPrime int\n    for _, num := range\
    \ lst {\n        if isPrime(num) {\n            if num > largestPrime {\n    \
    \            largestPrime = num\n            }\n        }\n    }\n    // sum digits\n\
    \    var sum int\n    for largestPrime > 0 {\n        sum += largestPrime % 10\n\
    \        largestPrime /= 10\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpxgftz9x2_test.go:15:12: undefined: isPrime

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var max int\n    for _, v := range lst {\n        if v > max {\n    \
    \        max = v\n        }\n    }\n    var sum int\n    for max > 0 {\n     \
    \   sum += max % 10\n        max /= 10\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpvunsg7cu_test.go:47: expected '%!s(int=10)', got '%!s(int=9)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__2 (0.00s)\n        tmpvunsg7cu_test.go:47:\
    \ expected '%!s(int=13)', got '%!s(int=28)'\n    --- FAIL: TestSkjkasdkd/test_num__3\
    \ (0.00s)\n        tmpvunsg7cu_test.go:47: expected '%!s(int=11)', got '%!s(int=13)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__4 (0.00s)\n        tmpvunsg7cu_test.go:47:\
    \ expected '%!s(int=3)', got '%!s(int=9)'\n    --- FAIL: TestSkjkasdkd/test_num__5\
    \ (0.00s)\n        tmpvunsg7cu_test.go:47: expected '%!s(int=7)', got '%!s(int=8)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpvunsg7cu_test.go:47:\
    \ expected '%!s(int=19)', got '%!s(int=21)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpvunsg7cu_test.go:47: expected '%!s(int=10)', got '%!s(int=20)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var max int\n    for _, v := range lst {\n        if isPrime(v) && v\
    \ > max {\n            max = v\n        }\n    }\n    return sumDigits(max)\n\
    }\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpv412lf11_test.go:14:12: undefined: isPrime

    /tmp/tmpv412lf11_test.go:18:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumOfDigits(largestPrime)\n}\n\nfunc\
    \ TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmph8lr06oe_test.go:14:12: undefined: isPrime

    /tmp/tmph8lr06oe_test.go:20:12: undefined: sumOfDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var largestPrime int\n    for _, n := range lst {\n        if isPrime(n)\
    \ && n > largestPrime {\n            largestPrime = n\n        }\n    }\n    return\
    \ sumDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate\
    \ := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmphaapfax4_test.go:14:12: undefined: isPrime

    /tmp/tmphaapfax4_test.go:18:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpgcerz_wc_test.go:36: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpgcerz_wc_test.go:36:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpgcerz_wc_test.go:36: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpgcerz_wc_test.go:36:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpgcerz_wc_test.go:36: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpgcerz_wc_test.go:36:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpgcerz_wc_test.go:36: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpgcerz_wc_test.go:36:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpgcerz_wc_test.go:36: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumOfDigits(largestPrime)\n}\n\nfunc\
    \ TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmph8lr06oe_test.go:14:12: undefined: isPrime

    /tmp/tmph8lr06oe_test.go:20:12: undefined: sumOfDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var max int\n    for _, v := range lst {\n        if v > max {\n    \
    \        max = v\n        }\n    }\n    var sum int\n    for max > 0 {\n     \
    \   sum += max % 10\n        max /= 10\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpvunsg7cu_test.go:47: expected '%!s(int=10)', got '%!s(int=9)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__2 (0.00s)\n        tmpvunsg7cu_test.go:47:\
    \ expected '%!s(int=13)', got '%!s(int=28)'\n    --- FAIL: TestSkjkasdkd/test_num__3\
    \ (0.00s)\n        tmpvunsg7cu_test.go:47: expected '%!s(int=11)', got '%!s(int=13)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__4 (0.00s)\n        tmpvunsg7cu_test.go:47:\
    \ expected '%!s(int=3)', got '%!s(int=9)'\n    --- FAIL: TestSkjkasdkd/test_num__5\
    \ (0.00s)\n        tmpvunsg7cu_test.go:47: expected '%!s(int=7)', got '%!s(int=8)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpvunsg7cu_test.go:47:\
    \ expected '%!s(int=19)', got '%!s(int=21)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpvunsg7cu_test.go:47: expected '%!s(int=10)', got '%!s(int=20)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var sum int\n    for _, v := range lst {\n        if v > sum {\n    \
    \        sum = v\n        }\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmph9oendl4_test.go:42: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmph9oendl4_test.go:42:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmph9oendl4_test.go:42: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmph9oendl4_test.go:42:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmph9oendl4_test.go:42: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmph9oendl4_test.go:42:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmph9oendl4_test.go:42: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmph9oendl4_test.go:42:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmph9oendl4_test.go:42: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    // Write your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpnd2_5tqj_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpnd2_5tqj_test.go:37:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpnd2_5tqj_test.go:37: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpnd2_5tqj_test.go:37:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpnd2_5tqj_test.go:37: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpnd2_5tqj_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpnd2_5tqj_test.go:37: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpnd2_5tqj_test.go:37:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpnd2_5tqj_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var max int\n    for _, v := range lst {\n        if v > max {\n    \
    \        max = v\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp5gdk1mz5_test.go:14:12: undefined: isPrime

    /tmp/tmp5gdk1mz5_test.go:20:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpgcerz_wc_test.go:36: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpgcerz_wc_test.go:36:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpgcerz_wc_test.go:36: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpgcerz_wc_test.go:36:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpgcerz_wc_test.go:36: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpgcerz_wc_test.go:36:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpgcerz_wc_test.go:36: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpgcerz_wc_test.go:36:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpgcerz_wc_test.go:36: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ && v > largestPrime {\n            largestPrime = v\n        }\n    }\n    return\
    \ sumDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate\
    \ := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpgh4vojs3_test.go:14:12: undefined: isPrime

    /tmp/tmpgh4vojs3_test.go:18:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var sum int\n    for _, v := range lst {\n        sum += v\n    }\n \
    \   return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpam_d0ame_test.go:40: expected '%!s(int=10)', got '%!s(int=659)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpam_d0ame_test.go:40:\
    \ expected '%!s(int=25)', got '%!s(int=4673)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpam_d0ame_test.go:40: expected '%!s(int=13)', got '%!s(int=91149)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpam_d0ame_test.go:40:\
    \ expected '%!s(int=11)', got '%!s(int=1154)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpam_d0ame_test.go:40: expected '%!s(int=3)', got '%!s(int=118)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpam_d0ame_test.go:40:\
    \ expected '%!s(int=7)', got '%!s(int=19)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpam_d0ame_test.go:40: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpam_d0ame_test.go:40:\
    \ expected '%!s(int=19)', got '%!s(int=131781)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpam_d0ame_test.go:40: expected '%!s(int=10)', got '%!s(int=8416)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    // find largest prime\n    var largestPrime int\n    for _, v := range\
    \ lst {\n        if isPrime(v) {\n            if v > largestPrime {\n        \
    \        largestPrime = v\n            }\n        }\n    }\n    // sum digits\n\
    \    var sum int\n    for _, v := range fmt.Sprintf(\"%d\", largestPrime) {\n\
    \        sum += int(v - '0')\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpag83bbi7_test.go:15:12: undefined: isPrime

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var max int\n    for _, v := range lst {\n        if v > max {\n    \
    \        max = v\n        }\n    }\n    var sum int\n    for max > 0 {\n     \
    \   sum += max % 10\n        max /= 10\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpvunsg7cu_test.go:47: expected '%!s(int=10)', got '%!s(int=9)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__2 (0.00s)\n        tmpvunsg7cu_test.go:47:\
    \ expected '%!s(int=13)', got '%!s(int=28)'\n    --- FAIL: TestSkjkasdkd/test_num__3\
    \ (0.00s)\n        tmpvunsg7cu_test.go:47: expected '%!s(int=11)', got '%!s(int=13)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__4 (0.00s)\n        tmpvunsg7cu_test.go:47:\
    \ expected '%!s(int=3)', got '%!s(int=9)'\n    --- FAIL: TestSkjkasdkd/test_num__5\
    \ (0.00s)\n        tmpvunsg7cu_test.go:47: expected '%!s(int=7)', got '%!s(int=8)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpvunsg7cu_test.go:47:\
    \ expected '%!s(int=19)', got '%!s(int=21)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpvunsg7cu_test.go:47: expected '%!s(int=10)', got '%!s(int=20)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    // find largest prime\n    largestPrime := 0\n    for _, v := range lst\
    \ {\n        if isPrime(v) && v > largestPrime {\n            largestPrime = v\n\
    \        }\n    }\n    // sum digits\n    sum := 0\n    for largestPrime > 0 {\n\
    \        sum += largestPrime % 10\n        largestPrime /= 10\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpla6vfvj0_test.go:15:12: undefined: isPrime

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var largest int\n    for _, v := range lst {\n        if v > largest\
    \ {\n            largest = v\n        }\n    }\n    var sum int\n    for largest\
    \ > 0 {\n        sum += largest % 10\n        largest /= 10\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpxymhhxy9_test.go:47: expected '%!s(int=10)', got '%!s(int=9)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__2 (0.00s)\n        tmpxymhhxy9_test.go:47:\
    \ expected '%!s(int=13)', got '%!s(int=28)'\n    --- FAIL: TestSkjkasdkd/test_num__3\
    \ (0.00s)\n        tmpxymhhxy9_test.go:47: expected '%!s(int=11)', got '%!s(int=13)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__4 (0.00s)\n        tmpxymhhxy9_test.go:47:\
    \ expected '%!s(int=3)', got '%!s(int=9)'\n    --- FAIL: TestSkjkasdkd/test_num__5\
    \ (0.00s)\n        tmpxymhhxy9_test.go:47: expected '%!s(int=7)', got '%!s(int=8)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpxymhhxy9_test.go:47:\
    \ expected '%!s(int=19)', got '%!s(int=21)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpxymhhxy9_test.go:47: expected '%!s(int=10)', got '%!s(int=20)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ && v > largestPrime {\n            largestPrime = v\n        }\n    }\n    return\
    \ sumDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate\
    \ := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpgh4vojs3_test.go:14:12: undefined: isPrime

    /tmp/tmpgh4vojs3_test.go:18:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var maxPrime int\n    for _, n := range lst {\n        if isPrime(n)\
    \ && n > maxPrime {\n            maxPrime = n\n        }\n    }\n    return sumDigits(maxPrime)\n\
    }\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpmmc403gj_test.go:14:12: undefined: isPrime

    /tmp/tmpmmc403gj_test.go:18:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075248
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ && v > largestPrime {\n            largestPrime = v\n        }\n    }\n    return\
    \ sumDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate\
    \ := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpgh4vojs3_test.go:14:12: undefined: isPrime

    /tmp/tmpgh4vojs3_test.go:18:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var largestPrime int\n    for _, num := range lst {\n        if isPrime(num)\
    \ {\n            if num > largestPrime {\n                largestPrime = num\n\
    \            }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n\nfunc\
    \ TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpwg9esemm_test.go:14:12: undefined: isPrime

    /tmp/tmpwg9esemm_test.go:20:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var largest int\n    for _, v := range lst {\n        if v > largest\
    \ {\n            largest = v\n        }\n    }\n    var sum int\n    for largest\
    \ > 0 {\n        sum += largest % 10\n        largest /= 10\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpxymhhxy9_test.go:47: expected '%!s(int=10)', got '%!s(int=9)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__2 (0.00s)\n        tmpxymhhxy9_test.go:47:\
    \ expected '%!s(int=13)', got '%!s(int=28)'\n    --- FAIL: TestSkjkasdkd/test_num__3\
    \ (0.00s)\n        tmpxymhhxy9_test.go:47: expected '%!s(int=11)', got '%!s(int=13)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__4 (0.00s)\n        tmpxymhhxy9_test.go:47:\
    \ expected '%!s(int=3)', got '%!s(int=9)'\n    --- FAIL: TestSkjkasdkd/test_num__5\
    \ (0.00s)\n        tmpxymhhxy9_test.go:47: expected '%!s(int=7)', got '%!s(int=8)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpxymhhxy9_test.go:47:\
    \ expected '%!s(int=19)', got '%!s(int=21)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpxymhhxy9_test.go:47: expected '%!s(int=10)', got '%!s(int=20)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumOfDigits(largestPrime)\n}\n\nfunc\
    \ TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmph8lr06oe_test.go:14:12: undefined: isPrime

    /tmp/tmph8lr06oe_test.go:20:12: undefined: sumOfDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var largestPrime int\n    for _, num := range lst {\n        if isPrime(num)\
    \ {\n            if num > largestPrime {\n                largestPrime = num\n\
    \            }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n\nfunc\
    \ TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpwg9esemm_test.go:14:12: undefined: isPrime

    /tmp/tmpwg9esemm_test.go:20:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp5gdk1mz5_test.go:14:12: undefined: isPrime

    /tmp/tmp5gdk1mz5_test.go:20:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var max int\n    for _, v := range lst {\n        if v > max {\n    \
    \        max = v\n        }\n    }\n    var prime bool\n    for i := max; i >\
    \ 0; i-- {\n        prime = true\n        for j := 2; j < i; j++ {\n         \
    \   if i%j == 0 {\n                prime = false\n                break\n    \
    \        }\n        }\n        if prime {\n            var sum int\n         \
    \   for _, v := range fmt.Sprintf(\"%d\", i) {\n                sum += int(v -\
    \ '0')\n            }\n            return sum\n        }\n    }\n    return 0\n\
    }\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpyr0g2qtx_test.go:59: expected '%!s(int=10)', got '%!s(int=11)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__2 (0.00s)\n        tmpyr0g2qtx_test.go:59:\
    \ expected '%!s(int=13)', got '%!s(int=23)'\n    --- FAIL: TestSkjkasdkd/test_num__3\
    \ (0.00s)\n        tmpyr0g2qtx_test.go:59: expected '%!s(int=11)', got '%!s(int=17)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__4 (0.00s)\n        tmpyr0g2qtx_test.go:59:\
    \ expected '%!s(int=3)', got '%!s(int=16)'\n    --- FAIL: TestSkjkasdkd/test_num__7\
    \ (0.00s)\n        tmpyr0g2qtx_test.go:59: expected '%!s(int=19)', got '%!s(int=23)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__8 (0.00s)\n        tmpyr0g2qtx_test.go:59:\
    \ expected '%!s(int=10)', got '%!s(int=19)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.006s\nFAIL\n"
  timestamp: 1660075248
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    // find largest prime\n    var largestPrime int\n    for _, v := range\
    \ lst {\n        if isPrime(v) {\n            if v > largestPrime {\n        \
    \        largestPrime = v\n            }\n        }\n    }\n    // sum of digits\n\
    \    var sum int\n    for _, v := range fmt.Sprintf(\"%d\", largestPrime) {\n\
    \        sum += int(v - '0')\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp7tx_plig_test.go:15:12: undefined: isPrime

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075248
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp5gdk1mz5_test.go:14:12: undefined: isPrime

    /tmp/tmp5gdk1mz5_test.go:20:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var largest int\n    for _, v := range lst {\n        if v > largest\
    \ {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc\
    \ TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpdej_c7bs_test.go:42: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpdej_c7bs_test.go:42:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpdej_c7bs_test.go:42: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpdej_c7bs_test.go:42:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpdej_c7bs_test.go:42: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpdej_c7bs_test.go:42:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpdej_c7bs_test.go:42: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpdej_c7bs_test.go:42:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpdej_c7bs_test.go:42: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075248
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    // find largest prime\n    var largestPrime int\n    for _, v := range\
    \ lst {\n        if isPrime(v) {\n            if v > largestPrime {\n        \
    \        largestPrime = v\n            }\n        }\n    }\n    // sum digits\n\
    \    var sum int\n    for _, v := range fmt.Sprintf(\"%d\", largestPrime) {\n\
    \        sum += int(v - '0')\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpag83bbi7_test.go:15:12: undefined: isPrime

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    // Write your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpnd2_5tqj_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpnd2_5tqj_test.go:37:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpnd2_5tqj_test.go:37: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpnd2_5tqj_test.go:37:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpnd2_5tqj_test.go:37: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpnd2_5tqj_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpnd2_5tqj_test.go:37: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpnd2_5tqj_test.go:37:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpnd2_5tqj_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var max int\n    for _, v := range lst {\n        if v > max {\n    \
    \        max = v\n        }\n    }\n    for i := max; i > 1; i-- {\n        if\
    \ isPrime(i) {\n            return sumDigits(i)\n        }\n    }\n    return\
    \ 0\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpw2h_u11k_test.go:19:12: undefined: isPrime

    /tmp/tmpw2h_u11k_test.go:20:20: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075248
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var max int\n    for _, v := range lst {\n        if v > max {\n    \
    \        max = v\n        }\n    }\n    var sum int\n    for max > 0 {\n     \
    \   sum += max % 10\n        max /= 10\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpvunsg7cu_test.go:47: expected '%!s(int=10)', got '%!s(int=9)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__2 (0.00s)\n        tmpvunsg7cu_test.go:47:\
    \ expected '%!s(int=13)', got '%!s(int=28)'\n    --- FAIL: TestSkjkasdkd/test_num__3\
    \ (0.00s)\n        tmpvunsg7cu_test.go:47: expected '%!s(int=11)', got '%!s(int=13)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__4 (0.00s)\n        tmpvunsg7cu_test.go:47:\
    \ expected '%!s(int=3)', got '%!s(int=9)'\n    --- FAIL: TestSkjkasdkd/test_num__5\
    \ (0.00s)\n        tmpvunsg7cu_test.go:47: expected '%!s(int=7)', got '%!s(int=8)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpvunsg7cu_test.go:47:\
    \ expected '%!s(int=19)', got '%!s(int=21)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpvunsg7cu_test.go:47: expected '%!s(int=10)', got '%!s(int=20)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp5gdk1mz5_test.go:14:12: undefined: isPrime

    /tmp/tmp5gdk1mz5_test.go:20:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var largestPrime int\n    for _, val := range lst {\n        if isPrime(val)\
    \ {\n            if val > largestPrime {\n                largestPrime = val\n\
    \            }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n\nfunc\
    \ TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpv_o8m4_6_test.go:14:12: undefined: isPrime

    /tmp/tmpv_o8m4_6_test.go:20:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075248
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp5gdk1mz5_test.go:14:12: undefined: isPrime

    /tmp/tmp5gdk1mz5_test.go:20:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ && v > largestPrime {\n            largestPrime = v\n        }\n    }\n    return\
    \ sumDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate\
    \ := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpgh4vojs3_test.go:14:12: undefined: isPrime

    /tmp/tmpgh4vojs3_test.go:18:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var max int\n    for _, v := range lst {\n        if v > max {\n    \
    \        max = v\n        }\n    }\n    var sum int\n    for max > 0 {\n     \
    \   sum += max % 10\n        max /= 10\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpvunsg7cu_test.go:47: expected '%!s(int=10)', got '%!s(int=9)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__2 (0.00s)\n        tmpvunsg7cu_test.go:47:\
    \ expected '%!s(int=13)', got '%!s(int=28)'\n    --- FAIL: TestSkjkasdkd/test_num__3\
    \ (0.00s)\n        tmpvunsg7cu_test.go:47: expected '%!s(int=11)', got '%!s(int=13)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__4 (0.00s)\n        tmpvunsg7cu_test.go:47:\
    \ expected '%!s(int=3)', got '%!s(int=9)'\n    --- FAIL: TestSkjkasdkd/test_num__5\
    \ (0.00s)\n        tmpvunsg7cu_test.go:47: expected '%!s(int=7)', got '%!s(int=8)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpvunsg7cu_test.go:47:\
    \ expected '%!s(int=19)', got '%!s(int=21)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpvunsg7cu_test.go:47: expected '%!s(int=10)', got '%!s(int=20)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp5gdk1mz5_test.go:14:12: undefined: isPrime

    /tmp/tmp5gdk1mz5_test.go:20:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var prime int\n    for _, val := range lst {\n        if isPrime(val)\
    \ {\n            prime = val\n        }\n    }\n    return sumDigits(prime)\n\
    }\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpih0ilf1v_test.go:14:12: undefined: isPrime

    /tmp/tmpih0ilf1v_test.go:18:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075248
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp5gdk1mz5_test.go:14:12: undefined: isPrime

    /tmp/tmp5gdk1mz5_test.go:20:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp5gdk1mz5_test.go:14:12: undefined: isPrime

    /tmp/tmp5gdk1mz5_test.go:20:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    // find largest prime\n    var largestPrime int\n    for _, v := range\
    \ lst {\n        if isPrime(v) {\n            if v > largestPrime {\n        \
    \        largestPrime = v\n            }\n        }\n    }\n    // sum digits\n\
    \    var sum int\n    for _, v := range fmt.Sprintf(\"%d\", largestPrime) {\n\
    \        sum += int(v - '0')\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpag83bbi7_test.go:15:12: undefined: isPrime

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var max int\n    for _, v := range lst {\n        if v > max {\n    \
    \        max = v\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var max int\n    for _, v := range lst {\n        if v > max {\n    \
    \        max = v\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumOfDigits(largestPrime)\n}\n\nfunc\
    \ TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmph8lr06oe_test.go:14:12: undefined: isPrime

    /tmp/tmph8lr06oe_test.go:20:12: undefined: sumOfDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    // find largest prime\n    var largestPrime int\n    for _, v := range\
    \ lst {\n        if isPrime(v) {\n            if v > largestPrime {\n        \
    \        largestPrime = v\n            }\n        }\n    }\n    // sum of digits\n\
    \    var sum int\n    for _, v := range fmt.Sprintf(\"%d\", largestPrime) {\n\
    \        sum += int(v - '0')\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp7tx_plig_test.go:15:12: undefined: isPrime

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075248
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            largestPrime = v\n        }\n    }\n    return sumDigits(largestPrime)\n\
    }\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpnhn_t3r__test.go:14:12: undefined: isPrime

    /tmp/tmpnhn_t3r__test.go:18:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075248
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    // find the largest prime value\n    var largestPrime int\n    for _,\
    \ v := range lst {\n        if isPrime(v) {\n            if v > largestPrime {\n\
    \                largestPrime = v\n            }\n        }\n    }\n    // return\
    \ the sum of its digits\n    var sum int\n    for _, v := range fmt.Sprintf(\"\
    %d\", largestPrime) {\n        sum += int(v - '0')\n    }\n    return sum\n}\n\
    \nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp1iwl6kv4_test.go:15:12: undefined: isPrime

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    // largest prime\n    var largestPrime int\n    for _, v := range lst\
    \ {\n        if isPrime(v) {\n            if v > largestPrime {\n            \
    \    largestPrime = v\n            }\n        }\n    }\n    // sum of digits\n\
    \    var sum int\n    for _, v := range fmt.Sprintf(\"%d\", largestPrime) {\n\
    \        sum += int(v - '0')\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpgows13io_test.go:15:12: undefined: isPrime

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075248
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var largest int\n    for _, v := range lst {\n        if v > largest\
    \ {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc\
    \ TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpdej_c7bs_test.go:42: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpdej_c7bs_test.go:42:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpdej_c7bs_test.go:42: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpdej_c7bs_test.go:42:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpdej_c7bs_test.go:42: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpdej_c7bs_test.go:42:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpdej_c7bs_test.go:42: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpdej_c7bs_test.go:42:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpdej_c7bs_test.go:42: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075248
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var max int\n    for _, v := range lst {\n        if v > max {\n    \
    \        max = v\n        }\n    }\n    for i := max; i > 0; i-- {\n        if\
    \ isPrime(i) {\n            return sumDigits(i)\n        }\n    }\n    return\
    \ 0\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp992jqy2v_test.go:19:12: undefined: isPrime

    /tmp/tmp992jqy2v_test.go:20:20: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075248
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp5gdk1mz5_test.go:14:12: undefined: isPrime

    /tmp/tmp5gdk1mz5_test.go:20:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var largestPrime int\n    for _, i := range lst {\n        if isPrime(i)\
    \ {\n            if i > largestPrime {\n                largestPrime = i\n   \
    \         }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmppw9g0ct7_test.go:14:12: undefined: isPrime

    /tmp/tmppw9g0ct7_test.go:20:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumOfDigits(largestPrime)\n}\n\nfunc\
    \ TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmph8lr06oe_test.go:14:12: undefined: isPrime

    /tmp/tmph8lr06oe_test.go:20:12: undefined: sumOfDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var max int\n    for _, v := range lst {\n        if v > max {\n    \
    \        max = v\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp5gdk1mz5_test.go:14:12: undefined: isPrime

    /tmp/tmp5gdk1mz5_test.go:20:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var max int\n    for _, v := range lst {\n        if v > max {\n    \
    \        max = v\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var max int\n    for _, v := range lst {\n        if v > max {\n    \
    \        max = v\n        }\n    }\n    var primes []int\n    for i := 2; i <=\
    \ max; i++ {\n        isPrime := true\n        for j := 2; j < i; j++ {\n    \
    \        if i%j == 0 {\n                isPrime = false\n                break\n\
    \            }\n        }\n        if isPrime {\n            primes = append(primes,\
    \ i)\n        }\n    }\n    var maxPrime int\n    for _, v := range primes {\n\
    \        if v > maxPrime {\n            maxPrime = v\n        }\n    }\n    var\
    \ sum int\n    for maxPrime > 0 {\n        sum += maxPrime % 10\n        maxPrime\
    \ /= 10\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate\
    \ := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (8.80s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmp8qitqrqo_test.go:66: expected '%!s(int=10)', got '%!s(int=11)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__2 (0.00s)\n        tmp8qitqrqo_test.go:66:\
    \ expected '%!s(int=13)', got '%!s(int=23)'\n    --- FAIL: TestSkjkasdkd/test_num__3\
    \ (0.00s)\n        tmp8qitqrqo_test.go:66: expected '%!s(int=11)', got '%!s(int=17)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__4 (0.00s)\n        tmp8qitqrqo_test.go:66:\
    \ expected '%!s(int=3)', got '%!s(int=16)'\n    --- FAIL: TestSkjkasdkd/test_num__7\
    \ (0.00s)\n        tmp8qitqrqo_test.go:66: expected '%!s(int=19)', got '%!s(int=23)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__8 (0.00s)\n        tmp8qitqrqo_test.go:66:\
    \ expected '%!s(int=10)', got '%!s(int=19)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    8.806s\nFAIL\n"
  timestamp: 1660075257
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var largestPrime int\n    for _, num := range lst {\n        if isPrime(num)\
    \ {\n            if num > largestPrime {\n                largestPrime = num\n\
    \            }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n\nfunc\
    \ TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpwg9esemm_test.go:14:12: undefined: isPrime

    /tmp/tmpwg9esemm_test.go:20:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpgcerz_wc_test.go:36: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpgcerz_wc_test.go:36:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpgcerz_wc_test.go:36: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpgcerz_wc_test.go:36:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpgcerz_wc_test.go:36: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpgcerz_wc_test.go:36:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpgcerz_wc_test.go:36: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpgcerz_wc_test.go:36:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpgcerz_wc_test.go:36: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var max int\n    for _, v := range lst {\n        if v > max {\n    \
    \        max = v\n        }\n    }\n    var sum int\n    for max > 0 {\n     \
    \   sum += max % 10\n        max /= 10\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpvunsg7cu_test.go:47: expected '%!s(int=10)', got '%!s(int=9)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__2 (0.00s)\n        tmpvunsg7cu_test.go:47:\
    \ expected '%!s(int=13)', got '%!s(int=28)'\n    --- FAIL: TestSkjkasdkd/test_num__3\
    \ (0.00s)\n        tmpvunsg7cu_test.go:47: expected '%!s(int=11)', got '%!s(int=13)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__4 (0.00s)\n        tmpvunsg7cu_test.go:47:\
    \ expected '%!s(int=3)', got '%!s(int=9)'\n    --- FAIL: TestSkjkasdkd/test_num__5\
    \ (0.00s)\n        tmpvunsg7cu_test.go:47: expected '%!s(int=7)', got '%!s(int=8)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpvunsg7cu_test.go:47:\
    \ expected '%!s(int=19)', got '%!s(int=21)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpvunsg7cu_test.go:47: expected '%!s(int=10)', got '%!s(int=20)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var largestPrime int\n    for _, n := range lst {\n        if isPrime(n)\
    \ && n > largestPrime {\n            largestPrime = n\n        }\n    }\n    return\
    \ sumDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate\
    \ := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmphaapfax4_test.go:14:12: undefined: isPrime

    /tmp/tmphaapfax4_test.go:18:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpgcerz_wc_test.go:36: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpgcerz_wc_test.go:36:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpgcerz_wc_test.go:36: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpgcerz_wc_test.go:36:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpgcerz_wc_test.go:36: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpgcerz_wc_test.go:36:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpgcerz_wc_test.go:36: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpgcerz_wc_test.go:36:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpgcerz_wc_test.go:36: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumOfDigits(largestPrime)\n}\n\nfunc\
    \ TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmph8lr06oe_test.go:14:12: undefined: isPrime

    /tmp/tmph8lr06oe_test.go:20:12: undefined: sumOfDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var largestPrime int\n    for _, num := range lst {\n        if isPrime(num)\
    \ {\n            if num > largestPrime {\n                largestPrime = num\n\
    \            }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n\nfunc\
    \ TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpwg9esemm_test.go:14:12: undefined: isPrime

    /tmp/tmpwg9esemm_test.go:20:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    // find the largest prime value\n    var largestPrime int\n    for _,\
    \ v := range lst {\n        if isPrime(v) {\n            if v > largestPrime {\n\
    \                largestPrime = v\n            }\n        }\n    }\n    // sum\
    \ of its digits\n    var sum int\n    for _, v := range fmt.Sprintf(\"%d\", largestPrime)\
    \ {\n        sum += int(v - '0')\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpoih3mymh_test.go:15:12: undefined: isPrime

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075248
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var max int\n    for _, v := range lst {\n        if v > max {\n    \
    \        max = v\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var largestPrime int\n    for _, i := range lst {\n        if isPrime(i)\
    \ {\n            if i > largestPrime {\n                largestPrime = i\n   \
    \         }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmppw9g0ct7_test.go:14:12: undefined: isPrime

    /tmp/tmppw9g0ct7_test.go:20:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var max int\n    for _, v := range lst {\n        if v > max {\n    \
    \        max = v\n        }\n    }\n    for i := max; i > 1; i-- {\n        if\
    \ isPrime(i) {\n            return sum(i)\n        }\n    }\n    return 0\n}\n\
    \nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpvdurizqg_test.go:19:12: undefined: isPrime

    /tmp/tmpvdurizqg_test.go:20:20: undefined: sum

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075248
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var largestPrime int\n    for _, n := range lst {\n        if isPrime(n)\
    \ && n > largestPrime {\n            largestPrime = n\n        }\n    }\n    return\
    \ sumDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate\
    \ := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmphaapfax4_test.go:14:12: undefined: isPrime

    /tmp/tmphaapfax4_test.go:18:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumOfDigits(largestPrime)\n}\n\nfunc\
    \ TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmph8lr06oe_test.go:14:12: undefined: isPrime

    /tmp/tmph8lr06oe_test.go:20:12: undefined: sumOfDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpgcerz_wc_test.go:36: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpgcerz_wc_test.go:36:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpgcerz_wc_test.go:36: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpgcerz_wc_test.go:36:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpgcerz_wc_test.go:36: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpgcerz_wc_test.go:36:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpgcerz_wc_test.go:36: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpgcerz_wc_test.go:36:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpgcerz_wc_test.go:36: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    // find largest prime\n    var largestPrime int\n    for _, v := range\
    \ lst {\n        if isPrime(v) {\n            if v > largestPrime {\n        \
    \        largestPrime = v\n            }\n        }\n    }\n    // sum digits\n\
    \    var sum int\n    for _, v := range fmt.Sprintf(\"%d\", largestPrime) {\n\
    \        sum += int(v - '0')\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpag83bbi7_test.go:15:12: undefined: isPrime

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var sum int\n    var max int\n    for _, v := range lst {\n        if\
    \ isPrime(v) {\n            if v > max {\n                max = v\n          \
    \  }\n        }\n    }\n    for max > 0 {\n        sum += max % 10\n        max\
    \ /= 10\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate\
    \ := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpwpve7ef__test.go:15:12: undefined: isPrime

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075248
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var max int\n    for _, v := range lst {\n        if isPrime(v) && v\
    \ > max {\n            max = v\n        }\n    }\n    return sumDigits(max)\n\
    }\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpv412lf11_test.go:14:12: undefined: isPrime

    /tmp/tmpv412lf11_test.go:18:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var max int\n    for _, v := range lst {\n        if v > max {\n    \
    \        max = v\n        }\n    }\n    for i := max; i > 0; i-- {\n        if\
    \ isPrime(i) {\n            return sumDigits(i)\n        }\n    }\n    return\
    \ 0\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp992jqy2v_test.go:19:12: undefined: isPrime

    /tmp/tmp992jqy2v_test.go:20:20: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075248
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    // find largest prime\n    // sum its digits\n    return 0\n}\n\nfunc\
    \ TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpas6ngcrl_test.go:38: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpas6ngcrl_test.go:38:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpas6ngcrl_test.go:38: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpas6ngcrl_test.go:38:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpas6ngcrl_test.go:38: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpas6ngcrl_test.go:38:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpas6ngcrl_test.go:38: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpas6ngcrl_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpas6ngcrl_test.go:38: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075248
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumOfDigits(largestPrime)\n}\n\nfunc\
    \ TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmph8lr06oe_test.go:14:12: undefined: isPrime

    /tmp/tmph8lr06oe_test.go:20:12: undefined: sumOfDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumOfDigits(largestPrime)\n}\n\nfunc\
    \ TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmph8lr06oe_test.go:14:12: undefined: isPrime

    /tmp/tmph8lr06oe_test.go:20:12: undefined: sumOfDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumOfDigits(largestPrime)\n}\n\nfunc\
    \ TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmph8lr06oe_test.go:14:12: undefined: isPrime

    /tmp/tmph8lr06oe_test.go:20:12: undefined: sumOfDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ && v > largestPrime {\n            largestPrime = v\n        }\n    }\n    return\
    \ sumOfDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate\
    \ := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpj5r6eriw_test.go:14:12: undefined: isPrime

    /tmp/tmpj5r6eriw_test.go:18:12: undefined: sumOfDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var max int\n    for _, v := range lst {\n        if v > max {\n    \
    \        max = v\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    // largest prime value\n    var largestPrime int\n    // sum of its digits\n\
    \    var sum int\n\n    // find the largest prime value\n    for _, v := range\
    \ lst {\n        if isPrime(v) {\n            if v > largestPrime {\n        \
    \        largestPrime = v\n            }\n        }\n    }\n\n    // sum of its\
    \ digits\n    for largestPrime > 0 {\n        sum += largestPrime % 10\n     \
    \   largestPrime /= 10\n    }\n\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpfe0p_roa_test.go:19:12: undefined: isPrime

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075248
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var largestPrime int\n    for _, n := range lst {\n        if isPrime(n)\
    \ && n > largestPrime {\n            largestPrime = n\n        }\n    }\n    return\
    \ sumDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate\
    \ := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmphaapfax4_test.go:14:12: undefined: isPrime

    /tmp/tmphaapfax4_test.go:18:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var max int\n    for _, v := range lst {\n        if v > max {\n    \
    \        max = v\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var max int\n    for _, v := range lst {\n        if v > max {\n    \
    \        max = v\n        }\n    }\n    var sum int\n    for max > 0 {\n     \
    \   sum += max % 10\n        max /= 10\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpvunsg7cu_test.go:47: expected '%!s(int=10)', got '%!s(int=9)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__2 (0.00s)\n        tmpvunsg7cu_test.go:47:\
    \ expected '%!s(int=13)', got '%!s(int=28)'\n    --- FAIL: TestSkjkasdkd/test_num__3\
    \ (0.00s)\n        tmpvunsg7cu_test.go:47: expected '%!s(int=11)', got '%!s(int=13)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__4 (0.00s)\n        tmpvunsg7cu_test.go:47:\
    \ expected '%!s(int=3)', got '%!s(int=9)'\n    --- FAIL: TestSkjkasdkd/test_num__5\
    \ (0.00s)\n        tmpvunsg7cu_test.go:47: expected '%!s(int=7)', got '%!s(int=8)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpvunsg7cu_test.go:47:\
    \ expected '%!s(int=19)', got '%!s(int=21)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpvunsg7cu_test.go:47: expected '%!s(int=10)', got '%!s(int=20)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    // find largest prime\n    var largestPrime int\n    for _, v := range\
    \ lst {\n        if isPrime(v) {\n            if v > largestPrime {\n        \
    \        largestPrime = v\n            }\n        }\n    }\n    // sum of digits\n\
    \    var sum int\n    for _, v := range fmt.Sprintf(\"%d\", largestPrime) {\n\
    \        sum += int(v - '0')\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp7tx_plig_test.go:15:12: undefined: isPrime

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075248
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumOfDigits(largestPrime)\n}\n\nfunc\
    \ TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmph8lr06oe_test.go:14:12: undefined: isPrime

    /tmp/tmph8lr06oe_test.go:20:12: undefined: sumOfDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp5gdk1mz5_test.go:14:12: undefined: isPrime

    /tmp/tmp5gdk1mz5_test.go:20:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    // find largest prime\n    var largestPrime int\n    for _, v := range\
    \ lst {\n        if v > largestPrime {\n            largestPrime = v\n       \
    \ }\n    }\n    // sum digits\n    var sum int\n    for largestPrime > 0 {\n \
    \       sum += largestPrime % 10\n        largestPrime /= 10\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpshuan_to_test.go:49: expected '%!s(int=10)', got '%!s(int=9)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__2 (0.00s)\n        tmpshuan_to_test.go:49:\
    \ expected '%!s(int=13)', got '%!s(int=28)'\n    --- FAIL: TestSkjkasdkd/test_num__3\
    \ (0.00s)\n        tmpshuan_to_test.go:49: expected '%!s(int=11)', got '%!s(int=13)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__4 (0.00s)\n        tmpshuan_to_test.go:49:\
    \ expected '%!s(int=3)', got '%!s(int=9)'\n    --- FAIL: TestSkjkasdkd/test_num__5\
    \ (0.00s)\n        tmpshuan_to_test.go:49: expected '%!s(int=7)', got '%!s(int=8)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpshuan_to_test.go:49:\
    \ expected '%!s(int=19)', got '%!s(int=21)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpshuan_to_test.go:49: expected '%!s(int=10)', got '%!s(int=20)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075248
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var max int\n    for _, v := range lst {\n        if v > max {\n    \
    \        max = v\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var max int\n    for _, v := range lst {\n        if v > max {\n    \
    \        max = v\n        }\n    }\n    var prime bool\n    for i := max; i >\
    \ 0; i-- {\n        prime = true\n        for j := 2; j < i; j++ {\n         \
    \   if i%j == 0 {\n                prime = false\n                break\n    \
    \        }\n        }\n        if prime {\n            break\n        }\n    }\n\
    \    var sum int\n    for prime > 0 {\n        sum += prime % 10\n        prime\
    \ /= 10\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate\
    \ := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpbyb881dy_test.go:32:17: invalid operation: prime > 0 (mismatched types
    bool and untyped int)

    /tmp/tmpbyb881dy_test.go:33:16: invalid operation: prime % 10 (mismatched types
    bool and untyped int)

    /tmp/tmpbyb881dy_test.go:34:9: invalid operation: prime /= 10 (mismatched types
    bool and untyped int)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075248
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var largestPrime int\n    for _, i := range lst {\n        if isPrime(i)\
    \ {\n            if i > largestPrime {\n                largestPrime = i\n   \
    \         }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmppw9g0ct7_test.go:14:12: undefined: isPrime

    /tmp/tmppw9g0ct7_test.go:20:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var largest int\n    for _, v := range lst {\n        if isPrime(v) &&\
    \ v > largest {\n            largest = v\n        }\n    }\n    return sumDigits(largest)\n\
    }\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test\
    \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpgs1bd5pn_test.go:14:12: undefined: isPrime

    /tmp/tmpgs1bd5pn_test.go:18:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075248
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var max int\n    for _, v := range lst {\n        if v > max {\n    \
    \        max = v\n        }\n    }\n    var sum int\n    for max > 0 {\n     \
    \   sum += max % 10\n        max /= 10\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpvunsg7cu_test.go:47: expected '%!s(int=10)', got '%!s(int=9)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__2 (0.00s)\n        tmpvunsg7cu_test.go:47:\
    \ expected '%!s(int=13)', got '%!s(int=28)'\n    --- FAIL: TestSkjkasdkd/test_num__3\
    \ (0.00s)\n        tmpvunsg7cu_test.go:47: expected '%!s(int=11)', got '%!s(int=13)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__4 (0.00s)\n        tmpvunsg7cu_test.go:47:\
    \ expected '%!s(int=3)', got '%!s(int=9)'\n    --- FAIL: TestSkjkasdkd/test_num__5\
    \ (0.00s)\n        tmpvunsg7cu_test.go:47: expected '%!s(int=7)', got '%!s(int=8)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpvunsg7cu_test.go:47:\
    \ expected '%!s(int=19)', got '%!s(int=21)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpvunsg7cu_test.go:47: expected '%!s(int=10)', got '%!s(int=20)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var max int\n    for _, v := range lst {\n        if v > max {\n    \
    \        max = v\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var maxPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > maxPrime {\n                maxPrime = v\n           \
    \ }\n        }\n    }\n    return sumDigits(maxPrime)\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp0b95xsek_test.go:14:12: undefined: isPrime

    /tmp/tmp0b95xsek_test.go:20:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075248
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var max int\n    for _, v := range lst {\n        if v > max {\n    \
    \        max = v\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5,\
    \ 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual:\
    \ candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}),\
    \ expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual:\
    \ candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0,\
    \ 8, 1, 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpgcerz_wc_test.go:36: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpgcerz_wc_test.go:36:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpgcerz_wc_test.go:36: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpgcerz_wc_test.go:36:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpgcerz_wc_test.go:36: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpgcerz_wc_test.go:36:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpgcerz_wc_test.go:36: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpgcerz_wc_test.go:36:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpgcerz_wc_test.go:36: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var max int\n    for _, v := range lst {\n        if v > max {\n    \
    \        max = v\n        }\n    }\n    var sum int\n    for max > 0 {\n     \
    \   sum += max % 10\n        max /= 10\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpvunsg7cu_test.go:47: expected '%!s(int=10)', got '%!s(int=9)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__2 (0.00s)\n        tmpvunsg7cu_test.go:47:\
    \ expected '%!s(int=13)', got '%!s(int=28)'\n    --- FAIL: TestSkjkasdkd/test_num__3\
    \ (0.00s)\n        tmpvunsg7cu_test.go:47: expected '%!s(int=11)', got '%!s(int=13)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__4 (0.00s)\n        tmpvunsg7cu_test.go:47:\
    \ expected '%!s(int=3)', got '%!s(int=9)'\n    --- FAIL: TestSkjkasdkd/test_num__5\
    \ (0.00s)\n        tmpvunsg7cu_test.go:47: expected '%!s(int=7)', got '%!s(int=8)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpvunsg7cu_test.go:47:\
    \ expected '%!s(int=19)', got '%!s(int=21)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpvunsg7cu_test.go:47: expected '%!s(int=10)', got '%!s(int=20)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var max int\n    for _, v := range lst {\n        if v > max {\n    \
    \        max = v\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    // find the largest prime value\n    var largestPrime int\n    for _,\
    \ v := range lst {\n        if isPrime(v) {\n            if v > largestPrime {\n\
    \                largestPrime = v\n            }\n        }\n    }\n    // return\
    \ the sum of its digits\n    return sumDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpzjlxw13t_test.go:15:12: undefined: isPrime

    /tmp/tmpzjlxw13t_test.go:22:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075248
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var largest int\n    for _, v := range lst {\n        if v > largest\
    \ {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc\
    \ TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpdej_c7bs_test.go:42: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpdej_c7bs_test.go:42:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpdej_c7bs_test.go:42: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpdej_c7bs_test.go:42:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpdej_c7bs_test.go:42: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpdej_c7bs_test.go:42:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpdej_c7bs_test.go:42: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpdej_c7bs_test.go:42:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpdej_c7bs_test.go:42: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075248
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var max, sum int\n    for _, v := range lst {\n        if v > max {\n\
    \            max = v\n        }\n    }\n    for max > 0 {\n        sum += max\
    \ % 10\n        max /= 10\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpcnjjf82k_test.go:46: expected '%!s(int=10)', got '%!s(int=9)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__2 (0.00s)\n        tmpcnjjf82k_test.go:46:\
    \ expected '%!s(int=13)', got '%!s(int=28)'\n    --- FAIL: TestSkjkasdkd/test_num__3\
    \ (0.00s)\n        tmpcnjjf82k_test.go:46: expected '%!s(int=11)', got '%!s(int=13)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__4 (0.00s)\n        tmpcnjjf82k_test.go:46:\
    \ expected '%!s(int=3)', got '%!s(int=9)'\n    --- FAIL: TestSkjkasdkd/test_num__5\
    \ (0.00s)\n        tmpcnjjf82k_test.go:46: expected '%!s(int=7)', got '%!s(int=8)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpcnjjf82k_test.go:46:\
    \ expected '%!s(int=19)', got '%!s(int=21)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpcnjjf82k_test.go:46: expected '%!s(int=10)', got '%!s(int=20)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075248
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var largest int\n    for _, v := range lst {\n        if v > largest\
    \ {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc\
    \ TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpdej_c7bs_test.go:42: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpdej_c7bs_test.go:42:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpdej_c7bs_test.go:42: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpdej_c7bs_test.go:42:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpdej_c7bs_test.go:42: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpdej_c7bs_test.go:42:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpdej_c7bs_test.go:42: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpdej_c7bs_test.go:42:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpdej_c7bs_test.go:42: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075248
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ && v > largestPrime {\n            largestPrime = v\n        }\n    }\n    return\
    \ sumOfDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate\
    \ := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpj5r6eriw_test.go:14:12: undefined: isPrime

    /tmp/tmpj5r6eriw_test.go:18:12: undefined: sumOfDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var max int\n    for _, v := range lst {\n        if v > max {\n    \
    \        max = v\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var largestPrime int\n    for _, num := range lst {\n        if isPrime(num)\
    \ {\n            if num > largestPrime {\n                largestPrime = num\n\
    \            }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n\nfunc\
    \ TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpwg9esemm_test.go:14:12: undefined: isPrime

    /tmp/tmpwg9esemm_test.go:20:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp5gdk1mz5_test.go:14:12: undefined: isPrime

    /tmp/tmp5gdk1mz5_test.go:20:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var max int\n    for _, v := range lst {\n        if v > max {\n    \
    \        max = v\n        }\n    }\n    var primes []int\n    for i := 2; i <=\
    \ max; i++ {\n        isPrime := true\n        for j := 2; j < i; j++ {\n    \
    \        if i%j == 0 {\n                isPrime = false\n                break\n\
    \            }\n        }\n        if isPrime {\n            primes = append(primes,\
    \ i)\n        }\n    }\n    var maxPrime int\n    for _, v := range primes {\n\
    \        if v > maxPrime {\n            maxPrime = v\n        }\n    }\n    var\
    \ sum int\n    for maxPrime > 0 {\n        sum += maxPrime % 10\n        maxPrime\
    \ /= 10\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate\
    \ := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (8.80s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmp8qitqrqo_test.go:66: expected '%!s(int=10)', got '%!s(int=11)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__2 (0.00s)\n        tmp8qitqrqo_test.go:66:\
    \ expected '%!s(int=13)', got '%!s(int=23)'\n    --- FAIL: TestSkjkasdkd/test_num__3\
    \ (0.00s)\n        tmp8qitqrqo_test.go:66: expected '%!s(int=11)', got '%!s(int=17)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__4 (0.00s)\n        tmp8qitqrqo_test.go:66:\
    \ expected '%!s(int=3)', got '%!s(int=16)'\n    --- FAIL: TestSkjkasdkd/test_num__7\
    \ (0.00s)\n        tmp8qitqrqo_test.go:66: expected '%!s(int=19)', got '%!s(int=23)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__8 (0.00s)\n        tmp8qitqrqo_test.go:66:\
    \ expected '%!s(int=10)', got '%!s(int=19)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    8.806s\nFAIL\n"
  timestamp: 1660075257
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    // find largest prime\n    var largestPrime int\n    for _, v := range\
    \ lst {\n        if isPrime(v) {\n            if v > largestPrime {\n        \
    \        largestPrime = v\n            }\n        }\n    }\n    // sum digits\n\
    \    var sum int\n    for _, v := range fmt.Sprintf(\"%d\", largestPrime) {\n\
    \        sum += int(v - '0')\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpag83bbi7_test.go:15:12: undefined: isPrime

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp5gdk1mz5_test.go:14:12: undefined: isPrime

    /tmp/tmp5gdk1mz5_test.go:20:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var result int\n    for _, v := range lst {\n        if isPrime(v) {\n\
    \            result += v\n        }\n    }\n    return result\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp7uqwe759_test.go:14:12: undefined: isPrime

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075248
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var max int\n    for _, v := range lst {\n        if v > max {\n    \
    \        max = v\n        }\n    }\n    var sum int\n    for max > 0 {\n     \
    \   sum += max % 10\n        max /= 10\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpvunsg7cu_test.go:47: expected '%!s(int=10)', got '%!s(int=9)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__2 (0.00s)\n        tmpvunsg7cu_test.go:47:\
    \ expected '%!s(int=13)', got '%!s(int=28)'\n    --- FAIL: TestSkjkasdkd/test_num__3\
    \ (0.00s)\n        tmpvunsg7cu_test.go:47: expected '%!s(int=11)', got '%!s(int=13)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__4 (0.00s)\n        tmpvunsg7cu_test.go:47:\
    \ expected '%!s(int=3)', got '%!s(int=9)'\n    --- FAIL: TestSkjkasdkd/test_num__5\
    \ (0.00s)\n        tmpvunsg7cu_test.go:47: expected '%!s(int=7)', got '%!s(int=8)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpvunsg7cu_test.go:47:\
    \ expected '%!s(int=19)', got '%!s(int=21)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpvunsg7cu_test.go:47: expected '%!s(int=10)', got '%!s(int=20)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var largest int\n    for _, v := range lst {\n        if v > largest\
    \ {\n            largest = v\n        }\n    }\n    return largest\n}\n\nfunc\
    \ TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpdej_c7bs_test.go:42: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpdej_c7bs_test.go:42:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpdej_c7bs_test.go:42: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpdej_c7bs_test.go:42:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpdej_c7bs_test.go:42: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpdej_c7bs_test.go:42:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpdej_c7bs_test.go:42: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpdej_c7bs_test.go:42:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpdej_c7bs_test.go:42: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075248
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var max int\n    for _, v := range lst {\n        if v > max {\n    \
    \        max = v\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumOfDigits(largestPrime)\n}\n\nfunc\
    \ TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmph8lr06oe_test.go:14:12: undefined: isPrime

    /tmp/tmph8lr06oe_test.go:20:12: undefined: sumOfDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var max int\n    for _, v := range lst {\n        if v > max {\n    \
    \        max = v\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var max int\n    for _, v := range lst {\n        if v > max {\n    \
    \        max = v\n        }\n    }\n    return max\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpdza8pjm6_test.go:42:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpdza8pjm6_test.go:42: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var largest int\n    for _, n := range lst {\n        if n > largest\
    \ {\n            largest = n\n        }\n    }\n    return largest\n}\n\nfunc\
    \ TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmp0qpmw7a7_test.go:42: expected '%!s(int=10)', got '%!s(int=324)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmp0qpmw7a7_test.go:42:\
    \ expected '%!s(int=25)', got '%!s(int=4597)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmp0qpmw7a7_test.go:42: expected '%!s(int=13)', got '%!s(int=83278)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmp0qpmw7a7_test.go:42:\
    \ expected '%!s(int=11)', got '%!s(int=724)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmp0qpmw7a7_test.go:42: expected '%!s(int=3)', got '%!s(int=81)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmp0qpmw7a7_test.go:42:\
    \ expected '%!s(int=7)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmp0qpmw7a7_test.go:42: expected '%!s(int=19)', got '%!s(int=8191)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmp0qpmw7a7_test.go:42:\
    \ expected '%!s(int=19)', got '%!s(int=123456)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmp0qpmw7a7_test.go:42: expected '%!s(int=10)', got '%!s(int=8192)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075249
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    // TODO: Implement the solution\n    return 0\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpec5qyheb_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpec5qyheb_test.go:37:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpec5qyheb_test.go:37: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpec5qyheb_test.go:37:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpec5qyheb_test.go:37: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpec5qyheb_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpec5qyheb_test.go:37: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpec5qyheb_test.go:37:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpec5qyheb_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075249
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var max int\n    for _, v := range lst {\n        if v > max {\n    \
    \        max = v\n        }\n    }\n    for i := max; i > 1; i-- {\n        if\
    \ isPrime(i) {\n            return sumOfDigits(i)\n        }\n    }\n    return\
    \ 0\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpl6pzzd71_test.go:19:12: undefined: isPrime

    /tmp/tmpl6pzzd71_test.go:20:20: undefined: sumOfDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075249
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var largest int\n    for _, v := range lst {\n        if v > largest\
    \ {\n            largest = v\n        }\n    }\n    var sum int\n    for largest\
    \ > 0 {\n        sum += largest % 10\n        largest /= 10\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpxymhhxy9_test.go:47: expected '%!s(int=10)', got '%!s(int=9)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__2 (0.00s)\n        tmpxymhhxy9_test.go:47:\
    \ expected '%!s(int=13)', got '%!s(int=28)'\n    --- FAIL: TestSkjkasdkd/test_num__3\
    \ (0.00s)\n        tmpxymhhxy9_test.go:47: expected '%!s(int=11)', got '%!s(int=13)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__4 (0.00s)\n        tmpxymhhxy9_test.go:47:\
    \ expected '%!s(int=3)', got '%!s(int=9)'\n    --- FAIL: TestSkjkasdkd/test_num__5\
    \ (0.00s)\n        tmpxymhhxy9_test.go:47: expected '%!s(int=7)', got '%!s(int=8)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpxymhhxy9_test.go:47:\
    \ expected '%!s(int=19)', got '%!s(int=21)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpxymhhxy9_test.go:47: expected '%!s(int=10)', got '%!s(int=20)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var max int\n    for _, v := range lst {\n        if v > max {\n    \
    \        max = v\n        }\n    }\n    for i := 2; i < max; i++ {\n        if\
    \ max%i == 0 {\n            max = max / i\n            i = 2\n        }\n    }\n\
    \    var sum int\n    for max > 0 {\n        sum += max % 10\n        max /= 10\n\
    \    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate :=\
    \ skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpj5zevkat_test.go:53: expected '%!s(int=10)', got '%!s(int=2)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__2 (0.00s)\n        tmpj5zevkat_test.go:53:\
    \ expected '%!s(int=13)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__3\
    \ (0.00s)\n        tmpj5zevkat_test.go:53: expected '%!s(int=11)', got '%!s(int=2)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpj5zevkat_test.go:53:\
    \ expected '%!s(int=7)', got '%!s(int=4)'\n    --- FAIL: TestSkjkasdkd/test_num__7\
    \ (0.00s)\n        tmpj5zevkat_test.go:53: expected '%!s(int=19)', got '%!s(int=2)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__8 (0.00s)\n        tmpj5zevkat_test.go:53:\
    \ expected '%!s(int=10)', got '%!s(int=4)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.005s\nFAIL\n"
  timestamp: 1660075249
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var max int\n    for _, v := range lst {\n        if v > max {\n    \
    \        max = v\n        }\n    }\n    if max == 1 {\n        return 1\n    }\n\
    \    for i := 2; i < max; i++ {\n        if max%i == 0 {\n            max = skjkasdkd([]int{max\
    \ / i})\n            break\n        }\n    }\n    var sum int\n    for _, v :=\
    \ range fmt.Sprintf(\"%d\", max) {\n        sum += int(v - '0')\n    }\n    return\
    \ sum\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype\
    \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
    \ := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmp00uunwuq_test.go:55: expected '%!s(int=10)', got '%!s(int=3)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__2 (0.00s)\n        tmp00uunwuq_test.go:55:\
    \ expected '%!s(int=13)', got '%!s(int=8)'\n    --- FAIL: TestSkjkasdkd/test_num__3\
    \ (0.00s)\n        tmp00uunwuq_test.go:55: expected '%!s(int=11)', got '%!s(int=1)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmp00uunwuq_test.go:55:\
    \ expected '%!s(int=7)', got '%!s(int=2)'\n    --- FAIL: TestSkjkasdkd/test_num__7\
    \ (0.00s)\n        tmp00uunwuq_test.go:55: expected '%!s(int=19)', got '%!s(int=4)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__8 (0.00s)\n        tmp00uunwuq_test.go:55:\
    \ expected '%!s(int=10)', got '%!s(int=2)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660075249
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    // your code here\n    return 0\n}\n\nfunc TestSkjkasdkd(t *testing.T)\
    \ {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected:\
    \ 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2,\
    \ 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1,\
    \ 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n\
    \     { actual: candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5,\
    \ 6}), expected: 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}),\
    \ expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected:\
    \ 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n     { actual:\
    \ candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127,\
    \ 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__1 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=25)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__2\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=13)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__3 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=11)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__4\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=3)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__5 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=7)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__6\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=19)', got '%!s(int=0)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpf19wwfh5_test.go:37:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpf19wwfh5_test.go:37: expected '%!s(int=10)', got '%!s(int=0)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ {\n            if v > largestPrime {\n                largestPrime = v\n   \
    \         }\n        }\n    }\n    return sumDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp5gdk1mz5_test.go:14:12: undefined: isPrime

    /tmp/tmp5gdk1mz5_test.go:20:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var largestPrime int\n    for _, v := range lst {\n        if isPrime(v)\
    \ && v > largestPrime {\n            largestPrime = v\n        }\n    }\n    return\
    \ sumDigits(largestPrime)\n}\n\nfunc TestSkjkasdkd(t *testing.T) {\n  candidate\
    \ := skjkasdkd\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\
    \t}\n   tests := []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n    \
    \ { actual: candidate([]int{1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1}), expected: 25 },\n     { actual: candidate([]int{1, 3, 1, 32, 5107, 34,\
    \ 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), expected: 13 },\n     { actual:\
    \ candidate([]int{0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected:\
    \ 11 },\n     { actual: candidate([]int{0, 81, 12, 3, 1, 21}), expected: 3 },\n\
    \     { actual: candidate([]int{0, 8, 1, 2, 1, 7}), expected: 7 },\n     { actual:\
    \ candidate([]int{8191}), expected: 19 },\n     { actual: candidate([]int{8191,\
    \ 123456, 127, 7}), expected: 19 },\n     { actual: candidate([]int{127, 97, 8192}),\
    \ expected: 10 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpgh4vojs3_test.go:14:12: undefined: isPrime

    /tmp/tmpgh4vojs3_test.go:18:12: undefined: sumDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075246
- exit_code: 1
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var max int\n    for _, v := range lst {\n        if v > max {\n    \
    \        max = v\n        }\n    }\n    var sum int\n    for max > 0 {\n     \
    \   sum += max % 10\n        max /= 10\n    }\n    return sum\n}\n\nfunc TestSkjkasdkd(t\
    \ *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n     { actual:\
    \ candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestSkjkasdkd (0.00s)\n    --- FAIL: TestSkjkasdkd/test_num__0\
    \ (0.00s)\n        tmpvunsg7cu_test.go:47: expected '%!s(int=10)', got '%!s(int=9)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__2 (0.00s)\n        tmpvunsg7cu_test.go:47:\
    \ expected '%!s(int=13)', got '%!s(int=28)'\n    --- FAIL: TestSkjkasdkd/test_num__3\
    \ (0.00s)\n        tmpvunsg7cu_test.go:47: expected '%!s(int=11)', got '%!s(int=13)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__4 (0.00s)\n        tmpvunsg7cu_test.go:47:\
    \ expected '%!s(int=3)', got '%!s(int=9)'\n    --- FAIL: TestSkjkasdkd/test_num__5\
    \ (0.00s)\n        tmpvunsg7cu_test.go:47: expected '%!s(int=7)', got '%!s(int=8)'\n\
    \    --- FAIL: TestSkjkasdkd/test_num__7 (0.00s)\n        tmpvunsg7cu_test.go:47:\
    \ expected '%!s(int=19)', got '%!s(int=21)'\n    --- FAIL: TestSkjkasdkd/test_num__8\
    \ (0.00s)\n        tmpvunsg7cu_test.go:47: expected '%!s(int=10)', got '%!s(int=20)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n"
  timestamp: 1660075246
- exit_code: 2
  program: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
    // You are given a list of integers.\n// You need to find the largest prime value\
    \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
    \ {\n    var largestPrime int\n    for _, val := range lst {\n        if isPrime(val)\
    \ {\n            if val > largestPrime {\n                largestPrime = val\n\
    \            }\n        }\n    }\n    return sumOfDigits(largestPrime)\n}\n\n\
    func TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test struct\
    \ {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n\
    \     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n \
    \    { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32,\
    \ 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
    \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1,\
    \ 2, 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected:\
    \ 19 },\n     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n\
    \     { actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor\
    \ i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
    \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
    \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\
    \t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmptyf675nm_test.go:14:12: undefined: isPrime

    /tmp/tmptyf675nm_test.go:20:12: undefined: sumOfDigits

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660075249

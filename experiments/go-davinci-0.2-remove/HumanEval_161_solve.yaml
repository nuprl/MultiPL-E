name: HumanEval_161_solve
language: go_test.go
prompt: "package solve_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// You\
  \ are given a string s.\n// if s[i] is a letter, reverse its case from lower to\
  \ upper or vise versa, \n// otherwise keep it as it is.\n// If the string contains\
  \ no letters, reverse the string.\n// The function should return the resulted string.\n\
  // Examples\nfunc solve(s string) string {\n"
tests: "func TestSolve(t *testing.T) {\n  candidate := solve\n\ttype test struct {\n\
  \t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
  \    { actual: candidate(\"AsDf\"), expected: \"aSdF\" },\n     { actual: candidate(\"\
  1234\"), expected: \"4321\" },\n     { actual: candidate(\"ab\"), expected: \"AB\"\
  \ },\n     { actual: candidate(\"#a@C\"), expected: \"#A@c\" },\n     { actual:\
  \ candidate(\"#AsdfW^45\"), expected: \"#aSDFw^45\" },\n     { actual: candidate(\"\
  #6@2\"), expected: \"2@6#\" },\n     { actual: candidate(\"#$a^D\"), expected: \"\
  #$A^d\" },\n     { actual: candidate(\"#ccc\"), expected: \"#CCC\" },\n   }\n\n\t\
  for i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
  \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
  \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\
  \t}\n\t\t})\n\t}\n}\n"
completions: ["    var res string\n    for _, c := range s {\n        if c >= 'a'\
    \ && c <= 'z' {\n            res += string(c - 32)\n        } else if c >= 'A'\
    \ && c <= 'Z' {\n            res += string(c + 32)\n        } else {\n       \
    \     res += string(c)\n        }\n    }\n    if len(res) == len(s) {\n      \
    \  return reverse(res)\n    }\n    return res\n}\n", "    var result string\n\
    \    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n            result\
    \ += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            result\
    \ += string(c + 32)\n        } else {\n            result += string(c)\n     \
    \   }\n    }\n    return result\n}\n", "    if len(s) == 0 {\n        return s\n\
    \    }\n    var result string\n    for _, c := range s {\n        if c >= 'a'\
    \ && c <= 'z' {\n            result += string(c - 32)\n        } else if c >=\
    \ 'A' && c <= 'Z' {\n            result += string(c + 32)\n        } else {\n\
    \            result += string(c)\n        }\n    }\n    return result\n}\n", " \
    \   if len(s) == 0 {\n        return s\n    }\n    var result string\n    for\
    \ _, c := range s {\n        if c >= 'a' && c <= 'z' {\n            result +=\
    \ string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            result\
    \ += string(c + 32)\n        } else {\n            result += string(c)\n     \
    \   }\n    }\n    return result\n}\n", "    // Write your code here\n    return\
    \ \"\"\n}\n", "    // your code here\n    return \"\"\n}\n", "    // your code\
    \ here\n    return \"\"\n}\n", "    if len(s) == 0 {\n        return s\n    }\n\
    \    var result string\n    for _, c := range s {\n        if c >= 'a' && c <=\
    \ 'z' {\n            result += string(c - 32)\n        } else if c >= 'A' && c\
    \ <= 'Z' {\n            result += string(c + 32)\n        } else {\n         \
    \   result += string(c)\n        }\n    }\n    return result\n}\n", "    // your\
    \ code here\n    return \"\"\n}\n", "    // your code here\n    return \"\"\n\
    }\n", "    var result string\n    for _, c := range s {\n        if c >= 'a' &&\
    \ c <= 'z' {\n            result += string(c - 32)\n        } else if c >= 'A'\
    \ && c <= 'Z' {\n            result += string(c + 32)\n        } else {\n    \
    \        result += string(c)\n        }\n    }\n    return result\n}\n", "   \
    \ var res string\n    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n\
    \            res += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n\
    \            res += string(c + 32)\n        } else {\n            res += string(c)\n\
    \        }\n    }\n    if res == s {\n        return reverse(s)\n    }\n    return\
    \ res\n}\n", "    var result string\n    for _, c := range s {\n        if c >=\
    \ 'a' && c <= 'z' {\n            result += string(c - 32)\n        } else if c\
    \ >= 'A' && c <= 'Z' {\n            result += string(c + 32)\n        } else {\n\
    \            result += string(c)\n        }\n    }\n    if result == s {\n   \
    \     return reverse(s)\n    }\n    return result\n}\n", "    var result string\n\
    \    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n            result\
    \ += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            result\
    \ += string(c + 32)\n        } else {\n            result += string(c)\n     \
    \   }\n    }\n    if len(result) == len(s) {\n        return reverse(result)\n\
    \    }\n    return result\n}\n", "    if len(s) == 0 {\n        return s\n   \
    \ }\n    runes := []rune(s)\n    for i := 0; i < len(runes); i++ {\n        if\
    \ runes[i] >= 'a' && runes[i] <= 'z' {\n            runes[i] = runes[i] - 'a'\
    \ + 'A'\n        } else if runes[i] >= 'A' && runes[i] <= 'Z' {\n            runes[i]\
    \ = runes[i] - 'A' + 'a'\n        }\n    }\n    return string(runes)\n}\n", " \
    \   if len(s) == 0 {\n        return s\n    }\n    var result []byte\n    for\
    \ i := 0; i < len(s); i++ {\n        if s[i] >= 'a' && s[i] <= 'z' {\n       \
    \     result = append(result, s[i] - 32)\n        } else if s[i] >= 'A' && s[i]\
    \ <= 'Z' {\n            result = append(result, s[i] + 32)\n        } else {\n\
    \            result = append(result, s[i])\n        }\n    }\n    return string(result)\n\
    }\n", "    var res string\n    for _, c := range s {\n        if c >= 'a' && c\
    \ <= 'z' {\n            res += string(c - 32)\n        } else if c >= 'A' && c\
    \ <= 'Z' {\n            res += string(c + 32)\n        } else {\n            res\
    \ += string(c)\n        }\n    }\n    if len(res) == len(s) {\n        return\
    \ reverse(res)\n    }\n    return res\n}\n", "    if len(s) == 0 {\n        return\
    \ s\n    }\n    var result string\n    for _, c := range s {\n        if c >=\
    \ 'a' && c <= 'z' {\n            result += string(c - 32)\n        } else if c\
    \ >= 'A' && c <= 'Z' {\n            result += string(c + 32)\n        } else {\n\
    \            result += string(c)\n        }\n    }\n    return result\n}\n", " \
    \   var result string\n    for _, c := range s {\n        if c >= 'a' && c <=\
    \ 'z' {\n            result += string(c - 32)\n        } else if c >= 'A' && c\
    \ <= 'Z' {\n            result += string(c + 32)\n        } else {\n         \
    \   result += string(c)\n        }\n    }\n    if len(result) == len(s) {\n  \
    \      return reverse(result)\n    }\n    return result\n}\n", "    // your code\
    \ here\n    return s\n}\n", "    // your code here\n    return \"\"\n}\n", " \
    \   var res string\n    for _, c := range s {\n        if c >= 'a' && c <= 'z'\
    \ {\n            res += string(c - 32)\n        } else if c >= 'A' && c <= 'Z'\
    \ {\n            res += string(c + 32)\n        } else {\n            res += string(c)\n\
    \        }\n    }\n    return res\n}\n", "    if len(s) == 0 {\n        return\
    \ s\n    }\n    var result string\n    for _, c := range s {\n        if c >=\
    \ 'a' && c <= 'z' {\n            result += string(c - 32)\n        } else if c\
    \ >= 'A' && c <= 'Z' {\n            result += string(c + 32)\n        } else {\n\
    \            result += string(c)\n        }\n    }\n    return result\n}\n", " \
    \   if len(s) == 0 {\n        return s\n    }\n    runes := []rune(s)\n    for\
    \ i, r := range runes {\n        if r >= 'a' && r <= 'z' {\n            runes[i]\
    \ = r - 32\n        } else if r >= 'A' && r <= 'Z' {\n            runes[i] = r\
    \ + 32\n        }\n    }\n    return string(runes)\n}\n", "    var result string\n\
    \    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n            result\
    \ += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            result\
    \ += string(c + 32)\n        } else {\n            result += string(c)\n     \
    \   }\n    }\n    if result == s {\n        return reverse(s)\n    }\n    return\
    \ result\n}\n", "    var res string\n    for _, c := range s {\n        if c >=\
    \ 'a' && c <= 'z' {\n            res += string(c - 32)\n        } else if c >=\
    \ 'A' && c <= 'Z' {\n            res += string(c + 32)\n        } else {\n   \
    \         res += string(c)\n        }\n    }\n    return res\n}\n", "    var result\
    \ string\n    for _, ch := range s {\n        if ch >= 'a' && ch <= 'z' {\n  \
    \          result += string(ch - 32)\n        } else if ch >= 'A' && ch <= 'Z'\
    \ {\n            result += string(ch + 32)\n        } else {\n            result\
    \ += string(ch)\n        }\n    }\n    return result\n}\n", "    var result string\n\
    \    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n            result\
    \ += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            result\
    \ += string(c + 32)\n        } else {\n            result += string(c)\n     \
    \   }\n    }\n    return result\n}\n", "    // your code here\n    return \"\"\
    \n}\n", "    if len(s) == 0 {\n        return s\n    }\n    runes := []rune(s)\n\
    \    for i := 0; i < len(runes); i++ {\n        if runes[i] >= 'a' && runes[i]\
    \ <= 'z' {\n            runes[i] -= 32\n        } else if runes[i] >= 'A' && runes[i]\
    \ <= 'Z' {\n            runes[i] += 32\n        }\n    }\n    return string(runes)\n\
    }\n", "    if len(s) == 0 {\n        return s\n    }\n    runes := []rune(s)\n\
    \    for i := 0; i < len(runes); i++ {\n        if runes[i] >= 'a' && runes[i]\
    \ <= 'z' {\n            runes[i] = runes[i] - 32\n        } else if runes[i] >=\
    \ 'A' && runes[i] <= 'Z' {\n            runes[i] = runes[i] + 32\n        }\n\
    \    }\n    return string(runes)\n}\n", "    var result string\n    for _, c :=\
    \ range s {\n        if c >= 'a' && c <= 'z' {\n            result += string(c\
    \ - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            result += string(c\
    \ + 32)\n        } else {\n            result += string(c)\n        }\n    }\n\
    \    return result\n}\n", "    var res string\n    for _, c := range s {\n   \
    \     if c >= 'a' && c <= 'z' {\n            res += string(c - 'a' + 'A')\n  \
    \      } else if c >= 'A' && c <= 'Z' {\n            res += string(c - 'A' + 'a')\n\
    \        } else {\n            res += string(c)\n        }\n    }\n    return\
    \ res\n}\n", "    var res string\n    for _, c := range s {\n        if c >= 'a'\
    \ && c <= 'z' {\n            res += string(c - 32)\n        } else if c >= 'A'\
    \ && c <= 'Z' {\n            res += string(c + 32)\n        } else {\n       \
    \     res += string(c)\n        }\n    }\n    return res\n}\n", "    if len(s)\
    \ == 0 {\n        return s\n    }\n    var res []rune\n    for _, r := range s\
    \ {\n        if r >= 'a' && r <= 'z' {\n            res = append(res, r - 32)\n\
    \        } else if r >= 'A' && r <= 'Z' {\n            res = append(res, r + 32)\n\
    \        } else {\n            res = append(res, r)\n        }\n    }\n    return\
    \ string(res)\n}\n", "    var result string\n    for _, c := range s {\n     \
    \   if c >= 'a' && c <= 'z' {\n            result += string(c - 32)\n        }\
    \ else if c >= 'A' && c <= 'Z' {\n            result += string(c + 32)\n     \
    \   } else {\n            result += string(c)\n        }\n    }\n    if len(result)\
    \ == len(s) {\n        return reverse(result)\n    }\n    return result\n}\n",
  "    // your code here\n    return \"\"\n}\n", "    var result string\n    for _,\
    \ c := range s {\n        if c >= 'a' && c <= 'z' {\n            result += string(c\
    \ - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            result += string(c\
    \ + 32)\n        } else {\n            result += string(c)\n        }\n    }\n\
    \    if len(result) == len(s) {\n        return reverse(result)\n    }\n    return\
    \ result\n}\n", "    var r []rune\n    for _, c := range s {\n        if c >=\
    \ 'a' && c <= 'z' {\n            r = append(r, c - 32)\n        } else if c >=\
    \ 'A' && c <= 'Z' {\n            r = append(r, c + 32)\n        } else {\n   \
    \         r = append(r, c)\n        }\n    }\n    return string(r)\n}\n", "  \
    \  // your code here\n    return \"\"\n}\n", "    var result string\n    for _,\
    \ c := range s {\n        if c >= 'a' && c <= 'z' {\n            result += string(c\
    \ - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            result += string(c\
    \ + 32)\n        } else {\n            result += string(c)\n        }\n    }\n\
    \    if len(result) == len(s) {\n        return reverse(result)\n    }\n    return\
    \ result\n}\n", "    // your code here\n    return \"\"\n}\n", "    // your code\
    \ here\n    return \"\"\n}\n", "    // your code here\n    return s\n}\n", " \
    \   var result string\n    for _, c := range s {\n        if c >= 'a' && c <=\
    \ 'z' {\n            result += string(c - 32)\n        } else if c >= 'A' && c\
    \ <= 'Z' {\n            result += string(c + 32)\n        } else {\n         \
    \   result += string(c)\n        }\n    }\n    return result\n}\n", "    if len(s)\
    \ == 0 {\n        return s\n    }\n    runes := []rune(s)\n    for i, r := range\
    \ runes {\n        if r >= 'a' && r <= 'z' {\n            runes[i] = r - 32\n\
    \        } else if r >= 'A' && r <= 'Z' {\n            runes[i] = r + 32\n   \
    \     }\n    }\n    return string(runes)\n}\n", "    var res string\n    for _,\
    \ c := range s {\n        if c >= 'a' && c <= 'z' {\n            res += string(c\
    \ - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            res += string(c\
    \ + 32)\n        } else {\n            res += string(c)\n        }\n    }\n  \
    \  if len(res) == len(s) {\n        return res\n    }\n    return reverse(res)\n\
    }\n", "    // your code here\n    return \"\"\n}\n", "    var res string\n   \
    \ for _, v := range s {\n        if v >= 'a' && v <= 'z' {\n            res +=\
    \ string(v - 32)\n        } else if v >= 'A' && v <= 'Z' {\n            res +=\
    \ string(v + 32)\n        } else {\n            res += string(v)\n        }\n\
    \    }\n    return res\n}\n", "    var res string\n    for _, c := range s {\n\
    \        if c >= 'a' && c <= 'z' {\n            res += string(c - 32)\n      \
    \  } else if c >= 'A' && c <= 'Z' {\n            res += string(c + 32)\n     \
    \   } else {\n            res += string(c)\n        }\n    }\n    if len(res)\
    \ == len(s) {\n        return reverse(res)\n    }\n    return res\n}\n", "   \
    \ var res string\n    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n\
    \            res += string(c - 'a' + 'A')\n        } else if c >= 'A' && c <=\
    \ 'Z' {\n            res += string(c - 'A' + 'a')\n        } else {\n        \
    \    res += string(c)\n        }\n    }\n    return res\n}\n", "    var result\
    \ string\n    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n     \
    \       result += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n \
    \           result += string(c + 32)\n        } else {\n            result +=\
    \ string(c)\n        }\n    }\n    return result\n}\n", "    var res string\n\
    \    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n            res\
    \ += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            res\
    \ += string(c + 32)\n        } else {\n            res += string(c)\n        }\n\
    \    }\n    if len(res) == len(s) {\n        return res\n    }\n    return reverse(res)\n\
    }\n", "    var res string\n    for _, c := range s {\n        if c >= 'a' && c\
    \ <= 'z' {\n            res += string(c - 'a' + 'A')\n        } else if c >= 'A'\
    \ && c <= 'Z' {\n            res += string(c - 'A' + 'a')\n        } else {\n\
    \            res += string(c)\n        }\n    }\n    return res\n}\n", "    var\
    \ res string\n    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n \
    \           res += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n\
    \            res += string(c + 32)\n        } else {\n            res += string(c)\n\
    \        }\n    }\n    if len(res) == len(s) {\n        return reverse(res)\n\
    \    }\n    return res\n}\n", "    // your code here\n    return \"\"\n}\n", " \
    \   if len(s) == 0 {\n        return s\n    }\n    var res string\n    for _,\
    \ c := range s {\n        if c >= 'a' && c <= 'z' {\n            res += string(c\
    \ - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            res += string(c\
    \ + 32)\n        } else {\n            res += string(c)\n        }\n    }\n  \
    \  return res\n}\n", "    var res string\n    for _, c := range s {\n        if\
    \ c >= 'a' && c <= 'z' {\n            res += string(c - 32)\n        } else if\
    \ c >= 'A' && c <= 'Z' {\n            res += string(c + 32)\n        } else {\n\
    \            res += string(c)\n        }\n    }\n    if len(res) == len(s) {\n\
    \        return res\n    }\n    return reverse(res)\n}\n", "    var res string\n\
    \    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n            res\
    \ += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            res\
    \ += string(c + 32)\n        } else {\n            res += string(c)\n        }\n\
    \    }\n    if len(res) == len(s) {\n        return res\n    }\n    return reverse(res)\n\
    }\n", "    var result string\n    for _, c := range s {\n        if c >= 'a' &&\
    \ c <= 'z' {\n            result += string(c - 32)\n        } else if c >= 'A'\
    \ && c <= 'Z' {\n            result += string(c + 32)\n        } else {\n    \
    \        result += string(c)\n        }\n    }\n    return result\n}\n", "   \
    \ var result string\n    for _, c := range s {\n        if c >= 'a' && c <= 'z'\
    \ {\n            result += string(c - 32)\n        } else if c >= 'A' && c <=\
    \ 'Z' {\n            result += string(c + 32)\n        } else {\n            result\
    \ += string(c)\n        }\n    }\n    if len(result) == len(s) {\n        return\
    \ reverse(result)\n    }\n    return result\n}\n", "    if len(s) == 0 {\n   \
    \     return s\n    }\n    runes := []rune(s)\n    for i, r := range runes {\n\
    \        if r >= 'a' && r <= 'z' {\n            runes[i] = r - 'a' + 'A'\n   \
    \     } else if r >= 'A' && r <= 'Z' {\n            runes[i] = r - 'A' + 'a'\n\
    \        }\n    }\n    return string(runes)\n}\n", "    // your code here\n  \
    \  return \"\"\n}\n", "    if len(s) == 0 {\n        return s\n    }\n    runes\
    \ := []rune(s)\n    for i, r := range runes {\n        if r >= 'a' && r <= 'z'\
    \ {\n            runes[i] = r - 32\n        } else if r >= 'A' && r <= 'Z' {\n\
    \            runes[i] = r + 32\n        }\n    }\n    return string(runes)\n}\n",
  "    var res string\n    for _, c := range s {\n        if c >= 'a' && c <= 'z'\
    \ {\n            res += string(c - 32)\n        } else if c >= 'A' && c <= 'Z'\
    \ {\n            res += string(c + 32)\n        } else {\n            res += string(c)\n\
    \        }\n    }\n    return res\n}\n", "    var res string\n    for _, v :=\
    \ range s {\n        if v >= 'a' && v <= 'z' {\n            res += string(v -\
    \ 32)\n        } else if v >= 'A' && v <= 'Z' {\n            res += string(v +\
    \ 32)\n        } else {\n            res += string(v)\n        }\n    }\n    if\
    \ len(res) == len(s) {\n        return res\n    }\n    return reverse(res)\n}\n",
  "    var res string\n    if len(s) == 0 {\n        return s\n    }\n    for _, c\
    \ := range s {\n        if c >= 'a' && c <= 'z' {\n            res += string(c\
    \ - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            res += string(c\
    \ + 32)\n        } else {\n            res += string(c)\n        }\n    }\n  \
    \  return res\n}\n", "    // your code here\n    return \"\"\n}\n", "    if len(s)\
    \ == 0 {\n        return s\n    }\n    var result string\n    for _, c := range\
    \ s {\n        if c >= 'a' && c <= 'z' {\n            result += string(c - 32)\n\
    \        } else if c >= 'A' && c <= 'Z' {\n            result += string(c + 32)\n\
    \        } else {\n            result += string(c)\n        }\n    }\n    return\
    \ result\n}\n", "    // your code here\n    return \"\"\n}\n", "    if len(s)\
    \ == 0 {\n        return s\n    }\n    var res string\n    for _, c := range s\
    \ {\n        if c >= 'a' && c <= 'z' {\n            res += string(c - 32)\n  \
    \      } else if c >= 'A' && c <= 'Z' {\n            res += string(c + 32)\n \
    \       } else {\n            res += string(c)\n        }\n    }\n    return res\n\
    }\n", "    // your code here\n    return \"\"\n}\n", "    var result string\n\
    \    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n            result\
    \ += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            result\
    \ += string(c + 32)\n        } else {\n            result += string(c)\n     \
    \   }\n    }\n    return result\n}\n", "    if len(s) == 0 {\n        return s\n\
    \    }\n    var res string\n    for _, c := range s {\n        if c >= 'a' &&\
    \ c <= 'z' {\n            res += string(c - 'a' + 'A')\n        } else if c >=\
    \ 'A' && c <= 'Z' {\n            res += string(c - 'A' + 'a')\n        } else\
    \ {\n            res += string(c)\n        }\n    }\n    return res\n}\n", " \
    \   var res string\n    for _, c := range s {\n        if c >= 'a' && c <= 'z'\
    \ {\n            res += string(c - 32)\n        } else if c >= 'A' && c <= 'Z'\
    \ {\n            res += string(c + 32)\n        } else {\n            res += string(c)\n\
    \        }\n    }\n    if len(res) == len(s) {\n        return reverse(res)\n\
    \    }\n    return res\n}\n", "    var result string\n    for _, c := range s\
    \ {\n        if c >= 'a' && c <= 'z' {\n            result += string(c - 32)\n\
    \        } else if c >= 'A' && c <= 'Z' {\n            result += string(c + 32)\n\
    \        } else {\n            result += string(c)\n        }\n    }\n    if len(result)\
    \ == len(s) {\n        return reverse(result)\n    }\n    return result\n}\n",
  "    if len(s) == 0 {\n        return s\n    }\n    runes := []rune(s)\n    for\
    \ i, r := range runes {\n        if r >= 'a' && r <= 'z' {\n            runes[i]\
    \ = r - 32\n        } else if r >= 'A' && r <= 'Z' {\n            runes[i] = r\
    \ + 32\n        }\n    }\n    return string(runes)\n}\n", "    // your code here\n\
    \    return \"\"\n}\n", "    // your code here\n    return \"\"\n}\n", "    var\
    \ result string\n    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n\
    \            result += string(c - 32)\n        } else if c >= 'A' && c <= 'Z'\
    \ {\n            result += string(c + 32)\n        } else {\n            result\
    \ += string(c)\n        }\n    }\n    return result\n}\n", "    var result string\n\
    \    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n            result\
    \ += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            result\
    \ += string(c + 32)\n        } else {\n            result += string(c)\n     \
    \   }\n    }\n    if len(result) == len(s) {\n        return reverse(result)\n\
    \    }\n    return result\n}\n", "    var result string\n    for _, c := range\
    \ s {\n        if c >= 'a' && c <= 'z' {\n            result += string(c - 'a'\
    \ + 'A')\n        } else if c >= 'A' && c <= 'Z' {\n            result += string(c\
    \ - 'A' + 'a')\n        } else {\n            result += string(c)\n        }\n\
    \    }\n    return result\n}\n", "    var result string\n    for _, c := range\
    \ s {\n        if c >= 'a' && c <= 'z' {\n            result += string(c - 32)\n\
    \        } else if c >= 'A' && c <= 'Z' {\n            result += string(c + 32)\n\
    \        } else {\n            result += string(c)\n        }\n    }\n    return\
    \ result\n}\n", "    // your code here\n    return \"\"\n}\n", "    var result\
    \ string\n    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n     \
    \       result += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n \
    \           result += string(c + 32)\n        } else {\n            result +=\
    \ string(c)\n        }\n    }\n    return result\n}\n", "    var result string\n\
    \    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n            result\
    \ += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            result\
    \ += string(c + 32)\n        } else {\n            result += string(c)\n     \
    \   }\n    }\n    return result\n}\n", "    if len(s) == 0 {\n        return s\n\
    \    }\n    var res string\n    for _, c := range s {\n        if c >= 'a' &&\
    \ c <= 'z' {\n            res += string(c - 32)\n        } else if c >= 'A' &&\
    \ c <= 'Z' {\n            res += string(c + 32)\n        } else {\n          \
    \  res += string(c)\n        }\n    }\n    return res\n}\n", "    if len(s) ==\
    \ 0 {\n        return s\n    }\n    runes := []rune(s)\n    for i, r := range\
    \ runes {\n        if r >= 'a' && r <= 'z' {\n            runes[i] = r - 32\n\
    \        } else if r >= 'A' && r <= 'Z' {\n            runes[i] = r + 32\n   \
    \     }\n    }\n    return string(runes)\n}\n", "    if len(s) == 0 {\n      \
    \  return s\n    }\n    var r []rune\n    for _, c := range s {\n        if c\
    \ >= 'a' && c <= 'z' {\n            r = append(r, c - 32)\n        } else if c\
    \ >= 'A' && c <= 'Z' {\n            r = append(r, c + 32)\n        } else {\n\
    \            r = append(r, c)\n        }\n    }\n    return string(r)\n}\n", " \
    \   var result string\n    for _, c := range s {\n        if c >= 'a' && c <=\
    \ 'z' {\n            result += string(c - 'a' + 'A')\n        } else if c >= 'A'\
    \ && c <= 'Z' {\n            result += string(c - 'A' + 'a')\n        } else {\n\
    \            result += string(c)\n        }\n    }\n    return result\n}\n", " \
    \   // your code here\n    return \"\"\n}\n", "    var result string\n    for\
    \ _, c := range s {\n        if c >= 'a' && c <= 'z' {\n            result +=\
    \ string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            result\
    \ += string(c + 32)\n        } else {\n            result += string(c)\n     \
    \   }\n    }\n    if len(result) == len(s) {\n        return reverse(result)\n\
    \    }\n    return result\n}\n", "    var res string\n    for _, c := range s\
    \ {\n        if c >= 'a' && c <= 'z' {\n            res += string(c - 32)\n  \
    \      } else if c >= 'A' && c <= 'Z' {\n            res += string(c + 32)\n \
    \       } else {\n            res += string(c)\n        }\n    }\n    if len(res)\
    \ == len(s) {\n        return reverse(res)\n    }\n    return res\n}\n", "   \
    \ var result string\n    for _, c := range s {\n        if c >= 'a' && c <= 'z'\
    \ {\n            result += string(c - 32)\n        } else if c >= 'A' && c <=\
    \ 'Z' {\n            result += string(c + 32)\n        } else {\n            result\
    \ += string(c)\n        }\n    }\n    return result\n}\n", "    var result string\n\
    \    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n            result\
    \ += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            result\
    \ += string(c + 32)\n        } else {\n            result += string(c)\n     \
    \   }\n    }\n    return result\n}\n", "    var res string\n    for _, c := range\
    \ s {\n        if c >= 'a' && c <= 'z' {\n            res += string(c - 32)\n\
    \        } else if c >= 'A' && c <= 'Z' {\n            res += string(c + 32)\n\
    \        } else {\n            res += string(c)\n        }\n    }\n    if len(res)\
    \ == len(s) {\n        return reverse(res)\n    }\n    return res\n}\n", "   \
    \ // your code here\n    return \"\"\n}\n", "    if len(s) == 0 {\n        return\
    \ s\n    }\n    var res string\n    for _, c := range s {\n        if c >= 'a'\
    \ && c <= 'z' {\n            res += string(c - 32)\n        } else if c >= 'A'\
    \ && c <= 'Z' {\n            res += string(c + 32)\n        } else {\n       \
    \     res += string(c)\n        }\n    }\n    return res\n}\n", "    // your code\
    \ here\n    return \"\"\n}\n", "    if len(s) == 0 {\n        return s\n    }\n\
    \    runes := []rune(s)\n    for i, r := range runes {\n        if r >= 'a' &&\
    \ r <= 'z' {\n            runes[i] = r - 32\n        } else if r >= 'A' && r <=\
    \ 'Z' {\n            runes[i] = r + 32\n        }\n    }\n    return string(runes)\n\
    }\n", "    if len(s) == 0 {\n        return s\n    }\n    var result string\n\
    \    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n            result\
    \ += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            result\
    \ += string(c + 32)\n        } else {\n            result += string(c)\n     \
    \   }\n    }\n    return result\n}\n", "    if len(s) == 0 {\n        return s\n\
    \    }\n    runes := []rune(s)\n    for i := 0; i < len(runes); i++ {\n      \
    \  if runes[i] >= 'a' && runes[i] <= 'z' {\n            runes[i] = runes[i] -\
    \ 'a' + 'A'\n        } else if runes[i] >= 'A' && runes[i] <= 'Z' {\n        \
    \    runes[i] = runes[i] - 'A' + 'a'\n        }\n    }\n    return string(runes)\n\
    }\n", "    // your code here\n    return \"\"\n}\n", "    if len(s) == 0 {\n \
    \       return s\n    }\n    runes := []rune(s)\n    for i, r := range runes {\n\
    \        if r >= 'a' && r <= 'z' {\n            runes[i] = r - 32\n        } else\
    \ if r >= 'A' && r <= 'Z' {\n            runes[i] = r + 32\n        }\n    }\n\
    \    return string(runes)\n}\n", "    // your code here\n    return \"\"\n}\n",
  "    if len(s) == 0 {\n        return s\n    }\n    var res string\n    for _, c\
    \ := range s {\n        if c >= 'a' && c <= 'z' {\n            res += string(c\
    \ - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            res += string(c\
    \ + 32)\n        } else {\n            res += string(c)\n        }\n    }\n  \
    \  return res\n}\n", "    if len(s) == 0 {\n        return s\n    }\n    runes\
    \ := []rune(s)\n    for i, r := range runes {\n        if r >= 'a' && r <= 'z'\
    \ {\n            runes[i] = r - 32\n        } else if r >= 'A' && r <= 'Z' {\n\
    \            runes[i] = r + 32\n        }\n    }\n    return string(runes)\n}\n",
  "    // your code here\n    return \"\"\n}\n", "    var result string\n    for _,\
    \ c := range s {\n        if c >= 'a' && c <= 'z' {\n            result += string(c\
    \ - 'a' + 'A')\n        } else if c >= 'A' && c <= 'Z' {\n            result +=\
    \ string(c - 'A' + 'a')\n        } else {\n            result += string(c)\n \
    \       }\n    }\n    return result\n}\n", "    var res string\n    for _, c :=\
    \ range s {\n        if c >= 'a' && c <= 'z' {\n            res += string(c -\
    \ 32)\n        } else if c >= 'A' && c <= 'Z' {\n            res += string(c +\
    \ 32)\n        } else {\n            res += string(c)\n        }\n    }\n    if\
    \ len(res) == len(s) {\n        return reverse(res)\n    }\n    return res\n}\n",
  "    if len(s) == 0 {\n        return s\n    }\n    var res string\n    for _, c\
    \ := range s {\n        if c >= 'a' && c <= 'z' {\n            res += string(c\
    \ - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            res += string(c\
    \ + 32)\n        } else {\n            res += string(c)\n        }\n    }\n  \
    \  return res\n}\n", "    var res string\n    for _, c := range s {\n        if\
    \ c >= 'a' && c <= 'z' {\n            res += string(c - 32)\n        } else if\
    \ c >= 'A' && c <= 'Z' {\n            res += string(c + 32)\n        } else {\n\
    \            res += string(c)\n        }\n    }\n    if len(res) == len(s) {\n\
    \        return reverse(res)\n    }\n    return res\n}\n", "    var res string\n\
    \    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n            res\
    \ += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            res\
    \ += string(c + 32)\n        } else {\n            res += string(c)\n        }\n\
    \    }\n    if len(res) == len(s) {\n        return res\n    }\n    return reverse(res)\n\
    }\n", "    var result string\n    for _, c := range s {\n        if c >= 'a' &&\
    \ c <= 'z' {\n            result += string(c - 32)\n        } else if c >= 'A'\
    \ && c <= 'Z' {\n            result += string(c + 32)\n        } else {\n    \
    \        result += string(c)\n        }\n    }\n    return result\n}\n", "   \
    \ // your code here\n    return \"\"\n}\n", "    // your code here\n    return\
    \ \"\"\n}\n", "    if len(s) == 0 {\n        return s\n    }\n    var result string\n\
    \    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n            result\
    \ += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            result\
    \ += string(c + 32)\n        } else {\n            result += string(c)\n     \
    \   }\n    }\n    return result\n}\n", "    if len(s) == 0 {\n        return s\n\
    \    }\n    var res string\n    for _, c := range s {\n        if c >= 'a' &&\
    \ c <= 'z' {\n            res += string(c - 32)\n        } else if c >= 'A' &&\
    \ c <= 'Z' {\n            res += string(c + 32)\n        } else {\n          \
    \  res += string(c)\n        }\n    }\n    return res\n}\n", "    if len(s) ==\
    \ 0 {\n        return s\n    }\n    var res string\n    for _, c := range s {\n\
    \        if c >= 'a' && c <= 'z' {\n            res += string(c - 32)\n      \
    \  } else if c >= 'A' && c <= 'Z' {\n            res += string(c + 32)\n     \
    \   } else {\n            res += string(c)\n        }\n    }\n    return res\n\
    }\n", "    var res string\n    for _, c := range s {\n        if c >= 'a' && c\
    \ <= 'z' {\n            res += string(c - 32)\n        } else if c >= 'A' && c\
    \ <= 'Z' {\n            res += string(c + 32)\n        } else {\n            res\
    \ += string(c)\n        }\n    }\n    return res\n}\n", "    if len(s) == 0 {\n\
    \        return s\n    }\n    runes := []rune(s)\n    for i, r := range runes\
    \ {\n        if r >= 'a' && r <= 'z' {\n            runes[i] = r - 32\n      \
    \  } else if r >= 'A' && r <= 'Z' {\n            runes[i] = r + 32\n        }\n\
    \    }\n    return string(runes)\n}\n", "    // your code here\n    return \"\"\
    \n}\n", "    var res string\n    for _, c := range s {\n        if c >= 'a' &&\
    \ c <= 'z' {\n            res += string(c - 32)\n        } else if c >= 'A' &&\
    \ c <= 'Z' {\n            res += string(c + 32)\n        } else {\n          \
    \  res += string(c)\n        }\n    }\n    if len(res) == len(s) {\n        return\
    \ reverse(res)\n    }\n    return res\n}\n", "    var result string\n    for _,\
    \ c := range s {\n        if c >= 'a' && c <= 'z' {\n            result += string(c\
    \ - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            result += string(c\
    \ + 32)\n        } else {\n            result += string(c)\n        }\n    }\n\
    \    if len(result) == len(s) {\n        return reverse(result)\n    }\n    return\
    \ result\n}\n", "    var res string\n    for _, c := range s {\n        if c >=\
    \ 'a' && c <= 'z' {\n            res += string(c - 'a' + 'A')\n        } else\
    \ if c >= 'A' && c <= 'Z' {\n            res += string(c - 'A' + 'a')\n      \
    \  } else {\n            res += string(c)\n        }\n    }\n    return res\n\
    }\n", "    if len(s) == 0 {\n        return s\n    }\n    runes := []rune(s)\n\
    \    for i := 0; i < len(runes); i++ {\n        if runes[i] >= 'a' && runes[i]\
    \ <= 'z' {\n            runes[i] = runes[i] - 32\n        } else if runes[i] >=\
    \ 'A' && runes[i] <= 'Z' {\n            runes[i] = runes[i] + 32\n        }\n\
    \    }\n    return string(runes)\n}\n", "    // your code here\n    return \"\"\
    \n}\n", "    if len(s) == 0 {\n        return s\n    }\n    var result string\n\
    \    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n            result\
    \ += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            result\
    \ += string(c + 32)\n        } else {\n            result += string(c)\n     \
    \   }\n    }\n    return result\n}\n", "    var result string\n    for _, c :=\
    \ range s {\n        if c >= 'a' && c <= 'z' {\n            result += string(c\
    \ - 'a' + 'A')\n        } else if c >= 'A' && c <= 'Z' {\n            result +=\
    \ string(c - 'A' + 'a')\n        } else {\n            result += string(c)\n \
    \       }\n    }\n    return result\n}\n", "    // your code here\n    return\
    \ \"\"\n}\n", "    if len(s) == 0 {\n        return s\n    }\n    var res string\n\
    \    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n            res\
    \ += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            res\
    \ += string(c + 32)\n        } else {\n            res += string(c)\n        }\n\
    \    }\n    return res\n}\n", "    var result string\n    for _, c := range s\
    \ {\n        if c >= 'a' && c <= 'z' {\n            result += string(c - 32)\n\
    \        } else if c >= 'A' && c <= 'Z' {\n            result += string(c + 32)\n\
    \        } else {\n            result += string(c)\n        }\n    }\n    return\
    \ result\n}\n", "    if len(s) == 0 {\n        return s\n    }\n    var result\
    \ string\n    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n     \
    \       result += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n \
    \           result += string(c + 32)\n        } else {\n            result +=\
    \ string(c)\n        }\n    }\n    return result\n}\n", "    // your code here\n\
    \    return \"\"\n}\n", "    // your code here\n    return \"\"\n}\n", "    var\
    \ result string\n    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n\
    \            result += string(c - 32)\n        } else if c >= 'A' && c <= 'Z'\
    \ {\n            result += string(c + 32)\n        } else {\n            result\
    \ += string(c)\n        }\n    }\n    return result\n}\n", "    // your code here\n\
    \    return \"\"\n}\n", "    // your code here\n    return \"\"\n}\n", "    if\
    \ len(s) == 0 {\n        return s\n    }\n    var res string\n    for _, c :=\
    \ range s {\n        if c >= 'a' && c <= 'z' {\n            res += string(c -\
    \ 32)\n        } else if c >= 'A' && c <= 'Z' {\n            res += string(c +\
    \ 32)\n        } else {\n            res += string(c)\n        }\n    }\n    return\
    \ res\n}\n", "    var res string\n    for _, c := range s {\n        if c >= 'a'\
    \ && c <= 'z' {\n            res += string(c - 32)\n        } else if c >= 'A'\
    \ && c <= 'Z' {\n            res += string(c + 32)\n        } else {\n       \
    \     res += string(c)\n        }\n    }\n    if len(res) == len(s) {\n      \
    \  return res\n    }\n    return reverse(res)\n}\n", "    if len(s) == 0 {\n \
    \       return s\n    }\n    var result string\n    for _, c := range s {\n  \
    \      if c >= 'a' && c <= 'z' {\n            result += string(c - 32)\n     \
    \   } else if c >= 'A' && c <= 'Z' {\n            result += string(c + 32)\n \
    \       } else {\n            result += string(c)\n        }\n    }\n    return\
    \ result\n}\n", "    // your code here\n    return \"\"\n}\n", "    if len(s)\
    \ == 0 {\n        return s\n    }\n    var res string\n    for _, c := range s\
    \ {\n        if c >= 'a' && c <= 'z' {\n            res += string(c - 32)\n  \
    \      } else if c >= 'A' && c <= 'Z' {\n            res += string(c + 32)\n \
    \       } else {\n            res += string(c)\n        }\n    }\n    return res\n\
    }\n", "    if len(s) == 0 {\n        return s\n    }\n    runes := []rune(s)\n\
    \    for i, r := range runes {\n        if r >= 'a' && r <= 'z' {\n          \
    \  runes[i] = r - 32\n        } else if r >= 'A' && r <= 'Z' {\n            runes[i]\
    \ = r + 32\n        }\n    }\n    return string(runes)\n}\n", "    // your code\
    \ here\n    return \"\"\n}\n", "    // your code here\n    return \"\"\n}\n",
  "    // your code here\n    return \"\"\n}\n", "    var result string\n    for _,\
    \ c := range s {\n        if c >= 'a' && c <= 'z' {\n            result += string(c\
    \ - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            result += string(c\
    \ + 32)\n        } else {\n            result += string(c)\n        }\n    }\n\
    \    return result\n}\n", "    // your code here\n    return \"\"\n}\n", "   \
    \ var res string\n    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n\
    \            res += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n\
    \            res += string(c + 32)\n        } else {\n            res += string(c)\n\
    \        }\n    }\n    if len(res) == len(s) {\n        return reverse(res)\n\
    \    }\n    return res\n}\n", "    var res string\n    if len(s) == 0 {\n    \
    \    return s\n    }\n    for _, c := range s {\n        if c >= 'a' && c <= 'z'\
    \ {\n            res += string(c - 32)\n        } else if c >= 'A' && c <= 'Z'\
    \ {\n            res += string(c + 32)\n        } else {\n            res += string(c)\n\
    \        }\n    }\n    return res\n}\n", "    var res string\n    for _, c :=\
    \ range s {\n        if c >= 'a' && c <= 'z' {\n            res += string(c -\
    \ 32)\n        } else if c >= 'A' && c <= 'Z' {\n            res += string(c +\
    \ 32)\n        } else {\n            res += string(c)\n        }\n    }\n    return\
    \ res\n}\n", "    // your code here\n    return \"\"\n}\n", "    var res string\n\
    \    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n            res\
    \ += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            res\
    \ += string(c + 32)\n        } else {\n            res += string(c)\n        }\n\
    \    }\n    if len(res) == len(s) {\n        return reverse(res)\n    }\n    return\
    \ res\n}\n", "    var res string\n    for _, c := range s {\n        if c >= 'a'\
    \ && c <= 'z' {\n            res += string(c - 32)\n        } else if c >= 'A'\
    \ && c <= 'Z' {\n            res += string(c + 32)\n        } else {\n       \
    \     res += string(c)\n        }\n    }\n    return res\n}\n", "    if len(s)\
    \ == 0 {\n        return s\n    }\n    runes := []rune(s)\n    for i, r := range\
    \ runes {\n        if r >= 'a' && r <= 'z' {\n            runes[i] = r - 32\n\
    \        } else if r >= 'A' && r <= 'Z' {\n            runes[i] = r + 32\n   \
    \     }\n    }\n    return string(runes)\n}\n", "    if len(s) == 0 {\n      \
    \  return s\n    }\n    runes := []rune(s)\n    for i, r := range runes {\n  \
    \      if r >= 'a' && r <= 'z' {\n            runes[i] = r - 32\n        } else\
    \ if r >= 'A' && r <= 'Z' {\n            runes[i] = r + 32\n        }\n    }\n\
    \    return string(runes)\n}\n", "    var result string\n    for _, char := range\
    \ s {\n        if char >= 'a' && char <= 'z' {\n            result += string(char\
    \ - 32)\n        } else if char >= 'A' && char <= 'Z' {\n            result +=\
    \ string(char + 32)\n        } else {\n            result += string(char)\n  \
    \      }\n    }\n    return result\n}\n", "    var res string\n    for _, c :=\
    \ range s {\n        if c >= 'a' && c <= 'z' {\n            res += string(c -\
    \ 32)\n        } else if c >= 'A' && c <= 'Z' {\n            res += string(c +\
    \ 32)\n        } else {\n            res += string(c)\n        }\n    }\n    if\
    \ len(res) == len(s) {\n        return reverse(res)\n    }\n    return res\n}\n",
  "    var res string\n    for _, c := range s {\n        if c >= 'a' && c <= 'z'\
    \ {\n            res += string(c - 32)\n        } else if c >= 'A' && c <= 'Z'\
    \ {\n            res += string(c + 32)\n        } else {\n            res += string(c)\n\
    \        }\n    }\n    return res\n}\n", "    var res string\n    for _, c :=\
    \ range s {\n        if c >= 'a' && c <= 'z' {\n            res += string(c -\
    \ 32)\n        } else if c >= 'A' && c <= 'Z' {\n            res += string(c +\
    \ 32)\n        } else {\n            res += string(c)\n        }\n    }\n    if\
    \ len(res) == len(s) {\n        return reverse(res)\n    }\n    return res\n}\n",
  "    if len(s) == 0 {\n        return s\n    }\n    runes := []rune(s)\n    for\
    \ i := 0; i < len(runes); i++ {\n        if runes[i] >= 'a' && runes[i] <= 'z'\
    \ {\n            runes[i] = runes[i] - 32\n        } else if runes[i] >= 'A' &&\
    \ runes[i] <= 'Z' {\n            runes[i] = runes[i] + 32\n        }\n    }\n\
    \    return string(runes)\n}\n", "    var result string\n    for _, c := range\
    \ s {\n        if c >= 'a' && c <= 'z' {\n            result += string(c - 32)\n\
    \        } else if c >= 'A' && c <= 'Z' {\n            result += string(c + 32)\n\
    \        } else {\n            result += string(c)\n        }\n    }\n    return\
    \ result\n}\n", "    // your code here\n    return \"\"\n}\n", "    // your code\
    \ here\n    return \"\"\n}\n", "    var res string\n    for _, c := range s {\n\
    \        if c >= 'a' && c <= 'z' {\n            res += string(c - 32)\n      \
    \  } else if c >= 'A' && c <= 'Z' {\n            res += string(c + 32)\n     \
    \   } else {\n            res += string(c)\n        }\n    }\n    if len(res)\
    \ == len(s) {\n        return res\n    }\n    return reverse(res)\n}\n", "   \
    \ if len(s) == 0 {\n        return s\n    }\n    var result string\n    for _,\
    \ c := range s {\n        if c >= 'a' && c <= 'z' {\n            result += string(c\
    \ - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            result += string(c\
    \ + 32)\n        } else {\n            result += string(c)\n        }\n    }\n\
    \    return result\n}\n", "    // Write your code here\n    return s\n}\n", " \
    \   var res string\n    for _, c := range s {\n        if c >= 'a' && c <= 'z'\
    \ {\n            res += string(c - 32)\n        } else if c >= 'A' && c <= 'Z'\
    \ {\n            res += string(c + 32)\n        } else {\n            res += string(c)\n\
    \        }\n    }\n    if len(res) == len(s) {\n        return reverse(res)\n\
    \    }\n    return res\n}\n", "    var res string\n    for _, c := range s {\n\
    \        if c >= 'a' && c <= 'z' {\n            res += string(c - 32)\n      \
    \  } else if c >= 'A' && c <= 'Z' {\n            res += string(c + 32)\n     \
    \   } else {\n            res += string(c)\n        }\n    }\n    if len(res)\
    \ == len(s) {\n        return reverse(res)\n    }\n    return res\n}\n", "   \
    \ if len(s) == 0 {\n        return s\n    }\n    var result []rune\n    for _,\
    \ c := range s {\n        if c >= 'a' && c <= 'z' {\n            result = append(result,\
    \ c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            result = append(result,\
    \ c + 32)\n        } else {\n            result = append(result, c)\n        }\n\
    \    }\n    return string(result)\n}\n", "    // your code here\n    return \"\
    \"\n}\n", "    // your code here\n    return \"\"\n}\n", "    // your code here\n\
    \    return \"\"\n}\n", "    // your code here\n    return \"\"\n}\n", "    var\
    \ res string\n    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n \
    \           res += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n\
    \            res += string(c + 32)\n        } else {\n            res += string(c)\n\
    \        }\n    }\n    if len(res) == len(s) {\n        return reverse(res)\n\
    \    }\n    return res\n}\n", "    r := []rune(s)\n    for i := 0; i < len(r);\
    \ i++ {\n        if r[i] >= 'a' && r[i] <= 'z' {\n            r[i] -= 32\n   \
    \     } else if r[i] >= 'A' && r[i] <= 'Z' {\n            r[i] += 32\n       \
    \ }\n    }\n    return string(r)\n}\n", "    // your code here\n    return \"\"\
    \n}\n", "    var result string\n    var isLetter bool\n    for _, c := range s\
    \ {\n        if c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z' {\n            isLetter\
    \ = true\n            if c >= 'a' && c <= 'z' {\n                result += string(c\
    \ - 32)\n            } else {\n                result += string(c + 32)\n    \
    \        }\n        } else {\n            result += string(c)\n        }\n   \
    \ }\n    if !isLetter {\n        for i, j := 0, len(result) - 1; i < j; i, j =\
    \ i + 1, j - 1 {\n            result[i], result[j] = result[j], result[i]\n  \
    \      }\n    }\n    return result\n}\n", "    var res string\n    for _, c :=\
    \ range s {\n        if c >= 'a' && c <= 'z' {\n            res += string(c -\
    \ 32)\n        } else if c >= 'A' && c <= 'Z' {\n            res += string(c +\
    \ 32)\n        } else {\n            res += string(c)\n        }\n    }\n    return\
    \ res\n}\n", "    var res string\n    for _, c := range s {\n        if (c >=\
    \ 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') {\n            res += string(c ^\
    \ 32)\n        } else {\n            res += string(c)\n        }\n    }\n    return\
    \ res\n}\n", "    // your code here\n    return \"\"\n}\n", "    var r []rune\n\
    \    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n            r =\
    \ append(r, c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            r =\
    \ append(r, c + 32)\n        } else {\n            r = append(r, c)\n        }\n\
    \    }\n    return string(r)\n}\n", "    // your code here\n    return \"\"\n\
    }\n", "    var result string\n    for _, c := range s {\n        if c >= 'a' &&\
    \ c <= 'z' {\n            result += string(c - 32)\n        } else if c >= 'A'\
    \ && c <= 'Z' {\n            result += string(c + 32)\n        } else {\n    \
    \        result += string(c)\n        }\n    }\n    if len(result) == len(s) {\n\
    \        return reverse(result)\n    }\n    return result\n}\n", "    var res\
    \ string\n    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n     \
    \       res += string(c - 32)\n        } else if c >= 'A' && c <= 'Z' {\n    \
    \        res += string(c + 32)\n        } else {\n            res += string(c)\n\
    \        }\n    }\n    return res\n}\n", "    var result string\n    for _, c\
    \ := range s {\n        if c >= 'a' && c <= 'z' {\n            result += string(c\
    \ - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            result += string(c\
    \ + 32)\n        } else {\n            result += string(c)\n        }\n    }\n\
    \    if result == s {\n        return reverse(s)\n    }\n    return result\n}\n",
  "    if len(s) == 0 {\n        return s\n    }\n    runes := []rune(s)\n    for\
    \ i := 0; i < len(runes); i++ {\n        if runes[i] >= 'a' && runes[i] <= 'z'\
    \ {\n            runes[i] = runes[i] - 32\n        } else if runes[i] >= 'A' &&\
    \ runes[i] <= 'Z' {\n            runes[i] = runes[i] + 32\n        }\n    }\n\
    \    return string(runes)\n}\n", "    var result string\n    for _, c := range\
    \ s {\n        if c >= 'a' && c <= 'z' {\n            result += string(c - 32)\n\
    \        } else if c >= 'A' && c <= 'Z' {\n            result += string(c + 32)\n\
    \        } else {\n            result += string(c)\n        }\n    }\n    if len(result)\
    \ == len(s) {\n        return reverse(result)\n    }\n    return result\n}\n",
  "    // your code here\n    return \"\"\n}\n", "    if len(s) == 0 {\n        return\
    \ s\n    }\n    var result string\n    for _, c := range s {\n        if c >=\
    \ 'a' && c <= 'z' {\n            result += string(c - 32)\n        } else if c\
    \ >= 'A' && c <= 'Z' {\n            result += string(c + 32)\n        } else {\n\
    \            result += string(c)\n        }\n    }\n    return result\n}\n", " \
    \   var result string\n    for _, c := range s {\n        if c >= 'a' && c <=\
    \ 'z' {\n            result += string(c - 32)\n        } else if c >= 'A' && c\
    \ <= 'Z' {\n            result += string(c + 32)\n        } else {\n         \
    \   result += string(c)\n        }\n    }\n    if len(result) == len(s) {\n  \
    \      return reverse(result)\n    }\n    return result\n}\n", "    if len(s)\
    \ == 0 {\n        return s\n    }\n    runes := []rune(s)\n    for i, r := range\
    \ runes {\n        if r >= 'a' && r <= 'z' {\n            runes[i] = r - 32\n\
    \        } else if r >= 'A' && r <= 'Z' {\n            runes[i] = r + 32\n   \
    \     }\n    }\n    return string(runes)\n}\n", "    // your code here\n    return\
    \ \"\"\n}\n", "    var res string\n    for _, c := range s {\n        if c >=\
    \ 'a' && c <= 'z' {\n            res += string(c - 'a' + 'A')\n        } else\
    \ if c >= 'A' && c <= 'Z' {\n            res += string(c - 'A' + 'a')\n      \
    \  } else {\n            res += string(c)\n        }\n    }\n    if len(res) ==\
    \ len(s) {\n        return res\n    }\n    return reverse(res)\n}\n", "    var\
    \ result string\n    for _, c := range s {\n        if c >= 'a' && c <= 'z' {\n\
    \            result += string(c - 32)\n        } else if c >= 'A' && c <= 'Z'\
    \ {\n            result += string(c + 32)\n        } else {\n            result\
    \ += string(c)\n        }\n    }\n    return result\n}\n", "    if len(s) == 0\
    \ {\n        return s\n    }\n    var result []byte\n    for i := 0; i < len(s);\
    \ i++ {\n        if s[i] >= 'a' && s[i] <= 'z' {\n            result = append(result,\
    \ s[i] - 32)\n        } else if s[i] >= 'A' && s[i] <= 'Z' {\n            result\
    \ = append(result, s[i] + 32)\n        } else {\n            result = append(result,\
    \ s[i])\n        }\n    }\n    return string(result)\n}\n", "    if s == \"\"\
    \ {\n        return s\n    }\n    runes := []rune(s)\n    for i, r := range runes\
    \ {\n        if r >= 'a' && r <= 'z' {\n            runes[i] = r - 32\n      \
    \  } else if r >= 'A' && r <= 'Z' {\n            runes[i] = r + 32\n        }\n\
    \    }\n    return string(runes)\n}\n", "    var res string\n    for _, c := range\
    \ s {\n        if c >= 'a' && c <= 'z' {\n            res += string(c - 32)\n\
    \        } else if c >= 'A' && c <= 'Z' {\n            res += string(c + 32)\n\
    \        } else {\n            res += string(c)\n        }\n    }\n    if len(res)\
    \ == len(s) {\n        return reverse(res)\n    }\n    return res\n}\n", "   \
    \ if len(s) == 0 {\n        return s\n    }\n    var result string\n    for _,\
    \ c := range s {\n        if c >= 'a' && c <= 'z' {\n            result += string(c\
    \ - 32)\n        } else if c >= 'A' && c <= 'Z' {\n            result += string(c\
    \ + 32)\n        } else {\n            result += string(c)\n        }\n    }\n\
    \    return result\n}\n"]
stop_tokens:
- "\nfunc"
- struct
- "\n// "

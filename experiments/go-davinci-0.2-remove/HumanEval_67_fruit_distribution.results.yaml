language: go_test.go
name: HumanEval_67_fruit_distribution
results:
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    var mango int\n    var apple, orange int\n    for _, v := range\
    \ s {\n        if v == 'a' {\n            apple++\n        } else if v == 'o'\
    \ {\n            orange++\n        }\n    }\n    mango = n - (apple + orange)\n\
    \    return mango\n}\n\nfunc TestFruit_Distribution(t *testing.T) {\n  candidate\
    \ := fruit_distribution\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"5 apples\
    \ and 6 oranges\", 19), expected: 8 },\n     { actual: candidate(\"5 apples and\
    \ 6 oranges\", 21), expected: 10 },\n     { actual: candidate(\"0 apples and 1\
    \ oranges\", 3), expected: 2 },\n     { actual: candidate(\"1 apples and 0 oranges\"\
    , 3), expected: 2 },\n     { actual: candidate(\"2 apples and 3 oranges\", 100),\
    \ expected: 95 },\n     { actual: candidate(\"2 apples and 3 oranges\", 5), expected:\
    \ 0 },\n     { actual: candidate(\"1 apples and 100 oranges\", 120), expected:\
    \ 19 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp5wl2oi7__test.go:47: expected '%!s(int=8)', got '%!s(int=15)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp5wl2oi7__test.go:47:\
    \ expected '%!s(int=10)', got '%!s(int=17)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp5wl2oi7__test.go:47: expected '%!s(int=2)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp5wl2oi7__test.go:47:\
    \ expected '%!s(int=2)', got '%!s(int=-1)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp5wl2oi7__test.go:47: expected '%!s(int=95)', got '%!s(int=96)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__5 (0.00s)\n        tmp5wl2oi7__test.go:47:\
    \ expected '%!s(int=0)', got '%!s(int=1)'\n    --- FAIL: TestFruit_Distribution/test_num__6\
    \ (0.00s)\n        tmp5wl2oi7__test.go:47: expected '%!s(int=19)', got '%!s(int=116)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    var apples, oranges int\n    for _, c := range s {\n       \
    \ if c == 'a' {\n            apples++\n        } else if c == 'o' {\n        \
    \    oranges++\n        }\n    }\n    return n - apples - oranges\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp3dp03z5o_test.go:45: expected '%!s(int=8)', got '%!s(int=15)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp3dp03z5o_test.go:45:\
    \ expected '%!s(int=10)', got '%!s(int=17)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp3dp03z5o_test.go:45: expected '%!s(int=2)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp3dp03z5o_test.go:45:\
    \ expected '%!s(int=2)', got '%!s(int=-1)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp3dp03z5o_test.go:45: expected '%!s(int=95)', got '%!s(int=96)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__5 (0.00s)\n        tmp3dp03z5o_test.go:45:\
    \ expected '%!s(int=0)', got '%!s(int=1)'\n    --- FAIL: TestFruit_Distribution/test_num__6\
    \ (0.00s)\n        tmp3dp03z5o_test.go:45: expected '%!s(int=19)', got '%!s(int=116)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    var mango_count int\n    var apple_count int\n    var orange_count\
    \ int\n    for _, c := range s {\n        if c == 'A' {\n            apple_count++\n\
    \        } else if c == 'O' {\n            orange_count++\n        }\n    }\n\
    \    mango_count = n - apple_count - orange_count\n    return mango_count\n}\n\
    \nfunc TestFruit_Distribution(t *testing.T) {\n  candidate := fruit_distribution\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"5 apples and 6 oranges\", 19),\
    \ expected: 8 },\n     { actual: candidate(\"5 apples and 6 oranges\", 21), expected:\
    \ 10 },\n     { actual: candidate(\"0 apples and 1 oranges\", 3), expected: 2\
    \ },\n     { actual: candidate(\"1 apples and 0 oranges\", 3), expected: 2 },\n\
    \     { actual: candidate(\"2 apples and 3 oranges\", 100), expected: 95 },\n\
    \     { actual: candidate(\"2 apples and 3 oranges\", 5), expected: 0 },\n   \
    \  { actual: candidate(\"1 apples and 100 oranges\", 120), expected: 19 },\n \
    \  }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\",\
    \ i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmpj91jrojr_test.go:48: expected '%!s(int=8)', got '%!s(int=19)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmpj91jrojr_test.go:48:\
    \ expected '%!s(int=10)', got '%!s(int=21)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmpj91jrojr_test.go:48: expected '%!s(int=2)', got '%!s(int=3)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmpj91jrojr_test.go:48:\
    \ expected '%!s(int=2)', got '%!s(int=3)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmpj91jrojr_test.go:48: expected '%!s(int=95)', got '%!s(int=100)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__5 (0.00s)\n        tmpj91jrojr_test.go:48:\
    \ expected '%!s(int=0)', got '%!s(int=5)'\n    --- FAIL: TestFruit_Distribution/test_num__6\
    \ (0.00s)\n        tmpj91jrojr_test.go:48: expected '%!s(int=19)', got '%!s(int=120)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    var apples, oranges, mango int\n    for _, c := range s {\n\
    \        switch c {\n            case 'a':\n                apples++\n       \
    \     case 'o':\n                oranges++\n            case 'm':\n          \
    \      mango++\n        }\n    }\n    return n - apples - oranges\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp8jespd9q_test.go:48: expected '%!s(int=8)', got '%!s(int=15)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp8jespd9q_test.go:48:\
    \ expected '%!s(int=10)', got '%!s(int=17)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp8jespd9q_test.go:48: expected '%!s(int=2)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp8jespd9q_test.go:48:\
    \ expected '%!s(int=2)', got '%!s(int=-1)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp8jespd9q_test.go:48: expected '%!s(int=95)', got '%!s(int=96)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__5 (0.00s)\n        tmp8jespd9q_test.go:48:\
    \ expected '%!s(int=0)', got '%!s(int=1)'\n    --- FAIL: TestFruit_Distribution/test_num__6\
    \ (0.00s)\n        tmp8jespd9q_test.go:48: expected '%!s(int=19)', got '%!s(int=116)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // write your code in Go 1.4\n    var oranges, apples, mangoes\
    \ int\n    for _, c := range s {\n        switch c {\n        case 'o':\n    \
    \        oranges++\n        case 'a':\n            apples++\n        case 'm':\n\
    \            mangoes++\n        }\n    }\n    return n - oranges - apples\n}\n\
    \nfunc TestFruit_Distribution(t *testing.T) {\n  candidate := fruit_distribution\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"5 apples and 6 oranges\", 19),\
    \ expected: 8 },\n     { actual: candidate(\"5 apples and 6 oranges\", 21), expected:\
    \ 10 },\n     { actual: candidate(\"0 apples and 1 oranges\", 3), expected: 2\
    \ },\n     { actual: candidate(\"1 apples and 0 oranges\", 3), expected: 2 },\n\
    \     { actual: candidate(\"2 apples and 3 oranges\", 100), expected: 95 },\n\
    \     { actual: candidate(\"2 apples and 3 oranges\", 5), expected: 0 },\n   \
    \  { actual: candidate(\"1 apples and 100 oranges\", 120), expected: 19 },\n \
    \  }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\",\
    \ i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmpjxoo0b96_test.go:49: expected '%!s(int=8)', got '%!s(int=15)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmpjxoo0b96_test.go:49:\
    \ expected '%!s(int=10)', got '%!s(int=17)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmpjxoo0b96_test.go:49: expected '%!s(int=2)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmpjxoo0b96_test.go:49:\
    \ expected '%!s(int=2)', got '%!s(int=-1)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmpjxoo0b96_test.go:49: expected '%!s(int=95)', got '%!s(int=96)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__5 (0.00s)\n        tmpjxoo0b96_test.go:49:\
    \ expected '%!s(int=0)', got '%!s(int=1)'\n    --- FAIL: TestFruit_Distribution/test_num__6\
    \ (0.00s)\n        tmpjxoo0b96_test.go:49: expected '%!s(int=19)', got '%!s(int=116)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    return n - (int(s[0] - '0') + int(s[2] - '0'))\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmpny0rnua3_test.go:37: expected '%!s(int=8)', got '%!s(int=-35)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmpny0rnua3_test.go:37:\
    \ expected '%!s(int=10)', got '%!s(int=-33)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmpny0rnua3_test.go:37: expected '%!s(int=2)', got '%!s(int=-46)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmpny0rnua3_test.go:37:\
    \ expected '%!s(int=2)', got '%!s(int=-47)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmpny0rnua3_test.go:37: expected '%!s(int=95)', got '%!s(int=49)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__5 (0.00s)\n        tmpny0rnua3_test.go:37:\
    \ expected '%!s(int=0)', got '%!s(int=-46)'\n    --- FAIL: TestFruit_Distribution/test_num__6\
    \ (0.00s)\n        tmpny0rnua3_test.go:37: expected '%!s(int=19)', got '%!s(int=70)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    var oranges, apples, mango int\n    for _, c := range s {\n\
    \        switch c {\n        case 'o':\n            oranges++\n        case 'a':\n\
    \            apples++\n        }\n    }\n    mango = n - oranges - apples\n  \
    \  return mango\n}\n\nfunc TestFruit_Distribution(t *testing.T) {\n  candidate\
    \ := fruit_distribution\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"5 apples\
    \ and 6 oranges\", 19), expected: 8 },\n     { actual: candidate(\"5 apples and\
    \ 6 oranges\", 21), expected: 10 },\n     { actual: candidate(\"0 apples and 1\
    \ oranges\", 3), expected: 2 },\n     { actual: candidate(\"1 apples and 0 oranges\"\
    , 3), expected: 2 },\n     { actual: candidate(\"2 apples and 3 oranges\", 100),\
    \ expected: 95 },\n     { actual: candidate(\"2 apples and 3 oranges\", 5), expected:\
    \ 0 },\n     { actual: candidate(\"1 apples and 100 oranges\", 120), expected:\
    \ 19 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmpj4ik51vs_test.go:47: expected '%!s(int=8)', got '%!s(int=15)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmpj4ik51vs_test.go:47:\
    \ expected '%!s(int=10)', got '%!s(int=17)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmpj4ik51vs_test.go:47: expected '%!s(int=2)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmpj4ik51vs_test.go:47:\
    \ expected '%!s(int=2)', got '%!s(int=-1)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmpj4ik51vs_test.go:47: expected '%!s(int=95)', got '%!s(int=96)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__5 (0.00s)\n        tmpj4ik51vs_test.go:47:\
    \ expected '%!s(int=0)', got '%!s(int=1)'\n    --- FAIL: TestFruit_Distribution/test_num__6\
    \ (0.00s)\n        tmpj4ik51vs_test.go:47: expected '%!s(int=19)', got '%!s(int=116)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    var apples, oranges int\n    for _, c := range s {\n       \
    \ if c == 'a' {\n            apples++\n        } else if c == 'o' {\n        \
    \    oranges++\n        }\n    }\n    return n - apples - oranges\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp3dp03z5o_test.go:45: expected '%!s(int=8)', got '%!s(int=15)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp3dp03z5o_test.go:45:\
    \ expected '%!s(int=10)', got '%!s(int=17)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp3dp03z5o_test.go:45: expected '%!s(int=2)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp3dp03z5o_test.go:45:\
    \ expected '%!s(int=2)', got '%!s(int=-1)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp3dp03z5o_test.go:45: expected '%!s(int=95)', got '%!s(int=96)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__5 (0.00s)\n        tmp3dp03z5o_test.go:45:\
    \ expected '%!s(int=0)', got '%!s(int=1)'\n    --- FAIL: TestFruit_Distribution/test_num__6\
    \ (0.00s)\n        tmp3dp03z5o_test.go:45: expected '%!s(int=19)', got '%!s(int=116)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    var apples, oranges int\n    for _, c := range s {\n       \
    \ if c == 'a' {\n            apples++\n        } else if c == 'o' {\n        \
    \    oranges++\n        }\n    }\n    return n - apples - oranges\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp3dp03z5o_test.go:45: expected '%!s(int=8)', got '%!s(int=15)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp3dp03z5o_test.go:45:\
    \ expected '%!s(int=10)', got '%!s(int=17)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp3dp03z5o_test.go:45: expected '%!s(int=2)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp3dp03z5o_test.go:45:\
    \ expected '%!s(int=2)', got '%!s(int=-1)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp3dp03z5o_test.go:45: expected '%!s(int=95)', got '%!s(int=96)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__5 (0.00s)\n        tmp3dp03z5o_test.go:45:\
    \ expected '%!s(int=0)', got '%!s(int=1)'\n    --- FAIL: TestFruit_Distribution/test_num__6\
    \ (0.00s)\n        tmp3dp03z5o_test.go:45: expected '%!s(int=19)', got '%!s(int=116)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    return 0\n}\n\nfunc TestFruit_Distribution(t *testing.T) {\n\
    \  candidate := fruit_distribution\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    5 apples and 6 oranges\", 19), expected: 8 },\n     { actual: candidate(\"5 apples\
    \ and 6 oranges\", 21), expected: 10 },\n     { actual: candidate(\"0 apples and\
    \ 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"1 apples and 0 oranges\"\
    , 3), expected: 2 },\n     { actual: candidate(\"2 apples and 3 oranges\", 100),\
    \ expected: 95 },\n     { actual: candidate(\"2 apples and 3 oranges\", 5), expected:\
    \ 0 },\n     { actual: candidate(\"1 apples and 100 oranges\", 120), expected:\
    \ 19 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmpqgsngn1f_test.go:37: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmpqgsngn1f_test.go:37:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmpqgsngn1f_test.go:37: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmpqgsngn1f_test.go:37:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmpqgsngn1f_test.go:37: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmpqgsngn1f_test.go:37:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    var mango int\n    for i := 0; i < len(s); i++ {\n        if\
    \ s[i] == 'a' || s[i] == 'o' {\n            mango++\n        }\n    }\n    return\
    \ n - mango\n}\n\nfunc TestFruit_Distribution(t *testing.T) {\n  candidate :=\
    \ fruit_distribution\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"5 apples and\
    \ 6 oranges\", 19), expected: 8 },\n     { actual: candidate(\"5 apples and 6\
    \ oranges\", 21), expected: 10 },\n     { actual: candidate(\"0 apples and 1 oranges\"\
    , 3), expected: 2 },\n     { actual: candidate(\"1 apples and 0 oranges\", 3),\
    \ expected: 2 },\n     { actual: candidate(\"2 apples and 3 oranges\", 100), expected:\
    \ 95 },\n     { actual: candidate(\"2 apples and 3 oranges\", 5), expected: 0\
    \ },\n     { actual: candidate(\"1 apples and 100 oranges\", 120), expected: 19\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmpy4d33078_test.go:43: expected '%!s(int=8)', got '%!s(int=15)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmpy4d33078_test.go:43:\
    \ expected '%!s(int=10)', got '%!s(int=17)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmpy4d33078_test.go:43: expected '%!s(int=2)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmpy4d33078_test.go:43:\
    \ expected '%!s(int=2)', got '%!s(int=-1)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmpy4d33078_test.go:43: expected '%!s(int=95)', got '%!s(int=96)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__5 (0.00s)\n        tmpy4d33078_test.go:43:\
    \ expected '%!s(int=0)', got '%!s(int=1)'\n    --- FAIL: TestFruit_Distribution/test_num__6\
    \ (0.00s)\n        tmpy4d33078_test.go:43: expected '%!s(int=19)', got '%!s(int=116)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    var mango, apple, orange int\n    for _, c := range s {\n  \
    \      switch c {\n            case 'a':\n                apple++\n          \
    \  case 'o':\n                orange++\n        }\n    }\n    mango = n - apple\
    \ - orange\n    return mango\n}\n\nfunc TestFruit_Distribution(t *testing.T) {\n\
    \  candidate := fruit_distribution\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    5 apples and 6 oranges\", 19), expected: 8 },\n     { actual: candidate(\"5 apples\
    \ and 6 oranges\", 21), expected: 10 },\n     { actual: candidate(\"0 apples and\
    \ 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"1 apples and 0 oranges\"\
    , 3), expected: 2 },\n     { actual: candidate(\"2 apples and 3 oranges\", 100),\
    \ expected: 95 },\n     { actual: candidate(\"2 apples and 3 oranges\", 5), expected:\
    \ 0 },\n     { actual: candidate(\"1 apples and 100 oranges\", 120), expected:\
    \ 19 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmpj48l72vk_test.go:47: expected '%!s(int=8)', got '%!s(int=15)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmpj48l72vk_test.go:47:\
    \ expected '%!s(int=10)', got '%!s(int=17)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmpj48l72vk_test.go:47: expected '%!s(int=2)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmpj48l72vk_test.go:47:\
    \ expected '%!s(int=2)', got '%!s(int=-1)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmpj48l72vk_test.go:47: expected '%!s(int=95)', got '%!s(int=96)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__5 (0.00s)\n        tmpj48l72vk_test.go:47:\
    \ expected '%!s(int=0)', got '%!s(int=1)'\n    --- FAIL: TestFruit_Distribution/test_num__6\
    \ (0.00s)\n        tmpj48l72vk_test.go:47: expected '%!s(int=19)', got '%!s(int=116)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    var mangoes int\n    var apples, oranges int\n    for _, c :=\
    \ range s {\n        if c == 'a' {\n            apples++\n        } else if c\
    \ == 'o' {\n            oranges++\n        }\n    }\n    mangoes = n - apples\
    \ - oranges\n    return mangoes\n}\n\nfunc TestFruit_Distribution(t *testing.T)\
    \ {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    5 apples and 6 oranges\", 19), expected: 8 },\n     { actual: candidate(\"5 apples\
    \ and 6 oranges\", 21), expected: 10 },\n     { actual: candidate(\"0 apples and\
    \ 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"1 apples and 0 oranges\"\
    , 3), expected: 2 },\n     { actual: candidate(\"2 apples and 3 oranges\", 100),\
    \ expected: 95 },\n     { actual: candidate(\"2 apples and 3 oranges\", 5), expected:\
    \ 0 },\n     { actual: candidate(\"1 apples and 100 oranges\", 120), expected:\
    \ 19 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmpuya8v34u_test.go:47: expected '%!s(int=8)', got '%!s(int=15)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmpuya8v34u_test.go:47:\
    \ expected '%!s(int=10)', got '%!s(int=17)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmpuya8v34u_test.go:47: expected '%!s(int=2)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmpuya8v34u_test.go:47:\
    \ expected '%!s(int=2)', got '%!s(int=-1)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmpuya8v34u_test.go:47: expected '%!s(int=95)', got '%!s(int=96)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__5 (0.00s)\n        tmpuya8v34u_test.go:47:\
    \ expected '%!s(int=0)', got '%!s(int=1)'\n    --- FAIL: TestFruit_Distribution/test_num__6\
    \ (0.00s)\n        tmpuya8v34u_test.go:47: expected '%!s(int=19)', got '%!s(int=116)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    var apples, oranges, mango int\n    for _, r := range s {\n\
    \        switch r {\n        case 'a':\n            apples++\n        case 'o':\n\
    \            oranges++\n        }\n    }\n    mango = n - apples - oranges\n \
    \   return mango\n}\n\nfunc TestFruit_Distribution(t *testing.T) {\n  candidate\
    \ := fruit_distribution\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"5 apples\
    \ and 6 oranges\", 19), expected: 8 },\n     { actual: candidate(\"5 apples and\
    \ 6 oranges\", 21), expected: 10 },\n     { actual: candidate(\"0 apples and 1\
    \ oranges\", 3), expected: 2 },\n     { actual: candidate(\"1 apples and 0 oranges\"\
    , 3), expected: 2 },\n     { actual: candidate(\"2 apples and 3 oranges\", 100),\
    \ expected: 95 },\n     { actual: candidate(\"2 apples and 3 oranges\", 5), expected:\
    \ 0 },\n     { actual: candidate(\"1 apples and 100 oranges\", 120), expected:\
    \ 19 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmpnfg4e2ll_test.go:47: expected '%!s(int=8)', got '%!s(int=15)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmpnfg4e2ll_test.go:47:\
    \ expected '%!s(int=10)', got '%!s(int=17)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmpnfg4e2ll_test.go:47: expected '%!s(int=2)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmpnfg4e2ll_test.go:47:\
    \ expected '%!s(int=2)', got '%!s(int=-1)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmpnfg4e2ll_test.go:47: expected '%!s(int=95)', got '%!s(int=96)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__5 (0.00s)\n        tmpnfg4e2ll_test.go:47:\
    \ expected '%!s(int=0)', got '%!s(int=1)'\n    --- FAIL: TestFruit_Distribution/test_num__6\
    \ (0.00s)\n        tmpnfg4e2ll_test.go:47: expected '%!s(int=19)', got '%!s(int=116)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    var a, o, m int\n    for _, c := range s {\n        switch c\
    \ {\n        case 'a':\n            a++\n        case 'o':\n            o++\n\
    \        case 'm':\n            m++\n        }\n    }\n    return n - a - o -\
    \ m\n}\n\nfunc TestFruit_Distribution(t *testing.T) {\n  candidate := fruit_distribution\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"5 apples and 6 oranges\", 19),\
    \ expected: 8 },\n     { actual: candidate(\"5 apples and 6 oranges\", 21), expected:\
    \ 10 },\n     { actual: candidate(\"0 apples and 1 oranges\", 3), expected: 2\
    \ },\n     { actual: candidate(\"1 apples and 0 oranges\", 3), expected: 2 },\n\
    \     { actual: candidate(\"2 apples and 3 oranges\", 100), expected: 95 },\n\
    \     { actual: candidate(\"2 apples and 3 oranges\", 5), expected: 0 },\n   \
    \  { actual: candidate(\"1 apples and 100 oranges\", 120), expected: 19 },\n \
    \  }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\",\
    \ i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmpso5n50i8_test.go:48: expected '%!s(int=8)', got '%!s(int=15)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmpso5n50i8_test.go:48:\
    \ expected '%!s(int=10)', got '%!s(int=17)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmpso5n50i8_test.go:48: expected '%!s(int=2)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmpso5n50i8_test.go:48:\
    \ expected '%!s(int=2)', got '%!s(int=-1)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmpso5n50i8_test.go:48: expected '%!s(int=95)', got '%!s(int=96)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__5 (0.00s)\n        tmpso5n50i8_test.go:48:\
    \ expected '%!s(int=0)', got '%!s(int=1)'\n    --- FAIL: TestFruit_Distribution/test_num__6\
    \ (0.00s)\n        tmpso5n50i8_test.go:48: expected '%!s(int=19)', got '%!s(int=116)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    var oranges, apples, mango int\n    for _, c := range s {\n\
    \        if c == 'o' {\n            oranges++\n        } else if c == 'a' {\n\
    \            apples++\n        } else if c == 'm' {\n            mango++\n   \
    \     }\n    }\n    return n - oranges - apples\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmpiqtjcay0_test.go:47: expected '%!s(int=8)', got '%!s(int=15)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmpiqtjcay0_test.go:47:\
    \ expected '%!s(int=10)', got '%!s(int=17)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmpiqtjcay0_test.go:47: expected '%!s(int=2)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmpiqtjcay0_test.go:47:\
    \ expected '%!s(int=2)', got '%!s(int=-1)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmpiqtjcay0_test.go:47: expected '%!s(int=95)', got '%!s(int=96)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__5 (0.00s)\n        tmpiqtjcay0_test.go:47:\
    \ expected '%!s(int=0)', got '%!s(int=1)'\n    --- FAIL: TestFruit_Distribution/test_num__6\
    \ (0.00s)\n        tmpiqtjcay0_test.go:47: expected '%!s(int=19)', got '%!s(int=116)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    var a, o, m int\n    for _, v := range s {\n        switch v\
    \ {\n        case 'a':\n            a++\n        case 'o':\n            o++\n\
    \        case 'm':\n            m++\n        }\n    }\n    return n - (a + o +\
    \ m)\n}\n\nfunc TestFruit_Distribution(t *testing.T) {\n  candidate := fruit_distribution\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"5 apples and 6 oranges\", 19),\
    \ expected: 8 },\n     { actual: candidate(\"5 apples and 6 oranges\", 21), expected:\
    \ 10 },\n     { actual: candidate(\"0 apples and 1 oranges\", 3), expected: 2\
    \ },\n     { actual: candidate(\"1 apples and 0 oranges\", 3), expected: 2 },\n\
    \     { actual: candidate(\"2 apples and 3 oranges\", 100), expected: 95 },\n\
    \     { actual: candidate(\"2 apples and 3 oranges\", 5), expected: 0 },\n   \
    \  { actual: candidate(\"1 apples and 100 oranges\", 120), expected: 19 },\n \
    \  }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\",\
    \ i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmpht8q869i_test.go:48: expected '%!s(int=8)', got '%!s(int=15)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmpht8q869i_test.go:48:\
    \ expected '%!s(int=10)', got '%!s(int=17)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmpht8q869i_test.go:48: expected '%!s(int=2)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmpht8q869i_test.go:48:\
    \ expected '%!s(int=2)', got '%!s(int=-1)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmpht8q869i_test.go:48: expected '%!s(int=95)', got '%!s(int=96)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__5 (0.00s)\n        tmpht8q869i_test.go:48:\
    \ expected '%!s(int=0)', got '%!s(int=1)'\n    --- FAIL: TestFruit_Distribution/test_num__6\
    \ (0.00s)\n        tmpht8q869i_test.go:48: expected '%!s(int=19)', got '%!s(int=116)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    var apples, oranges, mango int\n    for _, c := range s {\n\
    \        if c == 'a' {\n            apples++\n        } else if c == 'o' {\n \
    \           oranges++\n        }\n    }\n    mango = n - apples - oranges\n  \
    \  return mango\n}\n\nfunc TestFruit_Distribution(t *testing.T) {\n  candidate\
    \ := fruit_distribution\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"5 apples\
    \ and 6 oranges\", 19), expected: 8 },\n     { actual: candidate(\"5 apples and\
    \ 6 oranges\", 21), expected: 10 },\n     { actual: candidate(\"0 apples and 1\
    \ oranges\", 3), expected: 2 },\n     { actual: candidate(\"1 apples and 0 oranges\"\
    , 3), expected: 2 },\n     { actual: candidate(\"2 apples and 3 oranges\", 100),\
    \ expected: 95 },\n     { actual: candidate(\"2 apples and 3 oranges\", 5), expected:\
    \ 0 },\n     { actual: candidate(\"1 apples and 100 oranges\", 120), expected:\
    \ 19 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmpjc88pz25_test.go:46: expected '%!s(int=8)', got '%!s(int=15)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmpjc88pz25_test.go:46:\
    \ expected '%!s(int=10)', got '%!s(int=17)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmpjc88pz25_test.go:46: expected '%!s(int=2)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmpjc88pz25_test.go:46:\
    \ expected '%!s(int=2)', got '%!s(int=-1)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmpjc88pz25_test.go:46: expected '%!s(int=95)', got '%!s(int=96)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__5 (0.00s)\n        tmpjc88pz25_test.go:46:\
    \ expected '%!s(int=0)', got '%!s(int=1)'\n    --- FAIL: TestFruit_Distribution/test_num__6\
    \ (0.00s)\n        tmpjc88pz25_test.go:46: expected '%!s(int=19)', got '%!s(int=116)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    var count int\n    for i := 0; i < len(s); i++ {\n        if\
    \ s[i] == 'a' || s[i] == 'o' {\n            count++\n        }\n    }\n    return\
    \ n - count\n}\n\nfunc TestFruit_Distribution(t *testing.T) {\n  candidate :=\
    \ fruit_distribution\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"5 apples and\
    \ 6 oranges\", 19), expected: 8 },\n     { actual: candidate(\"5 apples and 6\
    \ oranges\", 21), expected: 10 },\n     { actual: candidate(\"0 apples and 1 oranges\"\
    , 3), expected: 2 },\n     { actual: candidate(\"1 apples and 0 oranges\", 3),\
    \ expected: 2 },\n     { actual: candidate(\"2 apples and 3 oranges\", 100), expected:\
    \ 95 },\n     { actual: candidate(\"2 apples and 3 oranges\", 5), expected: 0\
    \ },\n     { actual: candidate(\"1 apples and 100 oranges\", 120), expected: 19\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp_m6qe87__test.go:43: expected '%!s(int=8)', got '%!s(int=15)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp_m6qe87__test.go:43:\
    \ expected '%!s(int=10)', got '%!s(int=17)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp_m6qe87__test.go:43: expected '%!s(int=2)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp_m6qe87__test.go:43:\
    \ expected '%!s(int=2)', got '%!s(int=-1)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp_m6qe87__test.go:43: expected '%!s(int=95)', got '%!s(int=96)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__5 (0.00s)\n        tmp_m6qe87__test.go:43:\
    \ expected '%!s(int=0)', got '%!s(int=1)'\n    --- FAIL: TestFruit_Distribution/test_num__6\
    \ (0.00s)\n        tmp_m6qe87__test.go:43: expected '%!s(int=19)', got '%!s(int=116)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    var oranges, apples, mangoes int\n    for _, c := range s {\n\
    \        switch c {\n            case 'o':\n                oranges++\n      \
    \      case 'a':\n                apples++\n            case 'm':\n          \
    \      mangoes++\n        }\n    }\n    return n - oranges - apples\n}\n\nfunc\
    \ TestFruit_Distribution(t *testing.T) {\n  candidate := fruit_distribution\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"5 apples and 6 oranges\", 19),\
    \ expected: 8 },\n     { actual: candidate(\"5 apples and 6 oranges\", 21), expected:\
    \ 10 },\n     { actual: candidate(\"0 apples and 1 oranges\", 3), expected: 2\
    \ },\n     { actual: candidate(\"1 apples and 0 oranges\", 3), expected: 2 },\n\
    \     { actual: candidate(\"2 apples and 3 oranges\", 100), expected: 95 },\n\
    \     { actual: candidate(\"2 apples and 3 oranges\", 5), expected: 0 },\n   \
    \  { actual: candidate(\"1 apples and 100 oranges\", 120), expected: 19 },\n \
    \  }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\",\
    \ i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmpx_zzp1a7_test.go:48: expected '%!s(int=8)', got '%!s(int=15)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmpx_zzp1a7_test.go:48:\
    \ expected '%!s(int=10)', got '%!s(int=17)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmpx_zzp1a7_test.go:48: expected '%!s(int=2)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmpx_zzp1a7_test.go:48:\
    \ expected '%!s(int=2)', got '%!s(int=-1)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmpx_zzp1a7_test.go:48: expected '%!s(int=95)', got '%!s(int=96)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__5 (0.00s)\n        tmpx_zzp1a7_test.go:48:\
    \ expected '%!s(int=0)', got '%!s(int=1)'\n    --- FAIL: TestFruit_Distribution/test_num__6\
    \ (0.00s)\n        tmpx_zzp1a7_test.go:48: expected '%!s(int=19)', got '%!s(int=116)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    return 0\n}\n\nfunc TestFruit_Distribution(t *testing.T) {\n\
    \  candidate := fruit_distribution\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    5 apples and 6 oranges\", 19), expected: 8 },\n     { actual: candidate(\"5 apples\
    \ and 6 oranges\", 21), expected: 10 },\n     { actual: candidate(\"0 apples and\
    \ 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"1 apples and 0 oranges\"\
    , 3), expected: 2 },\n     { actual: candidate(\"2 apples and 3 oranges\", 100),\
    \ expected: 95 },\n     { actual: candidate(\"2 apples and 3 oranges\", 5), expected:\
    \ 0 },\n     { actual: candidate(\"1 apples and 100 oranges\", 120), expected:\
    \ 19 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmpqgsngn1f_test.go:37: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmpqgsngn1f_test.go:37:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmpqgsngn1f_test.go:37: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmpqgsngn1f_test.go:37:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmpqgsngn1f_test.go:37: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmpqgsngn1f_test.go:37:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    var oranges, apples, mango int\n    for _, r := range s {\n\
    \        switch r {\n        case 'o':\n            oranges++\n        case 'a':\n\
    \            apples++\n        case 'm':\n            mango++\n        }\n   \
    \ }\n    return n - oranges - apples\n}\n\nfunc TestFruit_Distribution(t *testing.T)\
    \ {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    5 apples and 6 oranges\", 19), expected: 8 },\n     { actual: candidate(\"5 apples\
    \ and 6 oranges\", 21), expected: 10 },\n     { actual: candidate(\"0 apples and\
    \ 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"1 apples and 0 oranges\"\
    , 3), expected: 2 },\n     { actual: candidate(\"2 apples and 3 oranges\", 100),\
    \ expected: 95 },\n     { actual: candidate(\"2 apples and 3 oranges\", 5), expected:\
    \ 0 },\n     { actual: candidate(\"1 apples and 100 oranges\", 120), expected:\
    \ 19 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp2ovkil22_test.go:48: expected '%!s(int=8)', got '%!s(int=15)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp2ovkil22_test.go:48:\
    \ expected '%!s(int=10)', got '%!s(int=17)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp2ovkil22_test.go:48: expected '%!s(int=2)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp2ovkil22_test.go:48:\
    \ expected '%!s(int=2)', got '%!s(int=-1)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp2ovkil22_test.go:48: expected '%!s(int=95)', got '%!s(int=96)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__5 (0.00s)\n        tmp2ovkil22_test.go:48:\
    \ expected '%!s(int=0)', got '%!s(int=1)'\n    --- FAIL: TestFruit_Distribution/test_num__6\
    \ (0.00s)\n        tmp2ovkil22_test.go:48: expected '%!s(int=19)', got '%!s(int=116)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    var (\n        apples, oranges, mango int\n    )\n    for _,\
    \ v := range s {\n        if v == 'a' {\n            apples++\n        } else\
    \ if v == 'o' {\n            oranges++\n        }\n    }\n    mango = n - apples\
    \ - oranges\n    return mango\n}\n\nfunc TestFruit_Distribution(t *testing.T)\
    \ {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    5 apples and 6 oranges\", 19), expected: 8 },\n     { actual: candidate(\"5 apples\
    \ and 6 oranges\", 21), expected: 10 },\n     { actual: candidate(\"0 apples and\
    \ 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"1 apples and 0 oranges\"\
    , 3), expected: 2 },\n     { actual: candidate(\"2 apples and 3 oranges\", 100),\
    \ expected: 95 },\n     { actual: candidate(\"2 apples and 3 oranges\", 5), expected:\
    \ 0 },\n     { actual: candidate(\"1 apples and 100 oranges\", 120), expected:\
    \ 19 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmpn5cs58a7_test.go:48: expected '%!s(int=8)', got '%!s(int=15)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmpn5cs58a7_test.go:48:\
    \ expected '%!s(int=10)', got '%!s(int=17)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmpn5cs58a7_test.go:48: expected '%!s(int=2)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmpn5cs58a7_test.go:48:\
    \ expected '%!s(int=2)', got '%!s(int=-1)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmpn5cs58a7_test.go:48: expected '%!s(int=95)', got '%!s(int=96)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__5 (0.00s)\n        tmpn5cs58a7_test.go:48:\
    \ expected '%!s(int=0)', got '%!s(int=1)'\n    --- FAIL: TestFruit_Distribution/test_num__6\
    \ (0.00s)\n        tmpn5cs58a7_test.go:48: expected '%!s(int=19)', got '%!s(int=116)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    var mango_count int\n    var apple_count int\n    var orange_count\
    \ int\n    for _, c := range s {\n        if c == 'a' {\n            apple_count++\n\
    \        } else if c == 'o' {\n            orange_count++\n        }\n    }\n\
    \    mango_count = n - (apple_count + orange_count)\n    return mango_count\n\
    }\n\nfunc TestFruit_Distribution(t *testing.T) {\n  candidate := fruit_distribution\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"5 apples and 6 oranges\", 19),\
    \ expected: 8 },\n     { actual: candidate(\"5 apples and 6 oranges\", 21), expected:\
    \ 10 },\n     { actual: candidate(\"0 apples and 1 oranges\", 3), expected: 2\
    \ },\n     { actual: candidate(\"1 apples and 0 oranges\", 3), expected: 2 },\n\
    \     { actual: candidate(\"2 apples and 3 oranges\", 100), expected: 95 },\n\
    \     { actual: candidate(\"2 apples and 3 oranges\", 5), expected: 0 },\n   \
    \  { actual: candidate(\"1 apples and 100 oranges\", 120), expected: 19 },\n \
    \  }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\",\
    \ i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp3mnif4hf_test.go:48: expected '%!s(int=8)', got '%!s(int=15)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp3mnif4hf_test.go:48:\
    \ expected '%!s(int=10)', got '%!s(int=17)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp3mnif4hf_test.go:48: expected '%!s(int=2)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp3mnif4hf_test.go:48:\
    \ expected '%!s(int=2)', got '%!s(int=-1)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp3mnif4hf_test.go:48: expected '%!s(int=95)', got '%!s(int=96)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__5 (0.00s)\n        tmp3mnif4hf_test.go:48:\
    \ expected '%!s(int=0)', got '%!s(int=1)'\n    --- FAIL: TestFruit_Distribution/test_num__6\
    \ (0.00s)\n        tmp3mnif4hf_test.go:48: expected '%!s(int=19)', got '%!s(int=116)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    var a, o, m int\n    for _, c := range s {\n        switch c\
    \ {\n        case 'a':\n            a++\n        case 'o':\n            o++\n\
    \        case 'm':\n            m++\n        }\n    }\n    return n - a - o -\
    \ m\n}\n\nfunc TestFruit_Distribution(t *testing.T) {\n  candidate := fruit_distribution\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"5 apples and 6 oranges\", 19),\
    \ expected: 8 },\n     { actual: candidate(\"5 apples and 6 oranges\", 21), expected:\
    \ 10 },\n     { actual: candidate(\"0 apples and 1 oranges\", 3), expected: 2\
    \ },\n     { actual: candidate(\"1 apples and 0 oranges\", 3), expected: 2 },\n\
    \     { actual: candidate(\"2 apples and 3 oranges\", 100), expected: 95 },\n\
    \     { actual: candidate(\"2 apples and 3 oranges\", 5), expected: 0 },\n   \
    \  { actual: candidate(\"1 apples and 100 oranges\", 120), expected: 19 },\n \
    \  }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\",\
    \ i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmpso5n50i8_test.go:48: expected '%!s(int=8)', got '%!s(int=15)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmpso5n50i8_test.go:48:\
    \ expected '%!s(int=10)', got '%!s(int=17)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmpso5n50i8_test.go:48: expected '%!s(int=2)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmpso5n50i8_test.go:48:\
    \ expected '%!s(int=2)', got '%!s(int=-1)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmpso5n50i8_test.go:48: expected '%!s(int=95)', got '%!s(int=96)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__5 (0.00s)\n        tmpso5n50i8_test.go:48:\
    \ expected '%!s(int=0)', got '%!s(int=1)'\n    --- FAIL: TestFruit_Distribution/test_num__6\
    \ (0.00s)\n        tmpso5n50i8_test.go:48: expected '%!s(int=19)', got '%!s(int=116)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    var mango_count int\n    var apple_count int\n    var orange_count\
    \ int\n    for _, char := range s {\n        if char == 'A' {\n            apple_count++\n\
    \        } else if char == 'O' {\n            orange_count++\n        }\n    }\n\
    \    mango_count = n - apple_count - orange_count\n    return mango_count\n}\n\
    \nfunc TestFruit_Distribution(t *testing.T) {\n  candidate := fruit_distribution\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"5 apples and 6 oranges\", 19),\
    \ expected: 8 },\n     { actual: candidate(\"5 apples and 6 oranges\", 21), expected:\
    \ 10 },\n     { actual: candidate(\"0 apples and 1 oranges\", 3), expected: 2\
    \ },\n     { actual: candidate(\"1 apples and 0 oranges\", 3), expected: 2 },\n\
    \     { actual: candidate(\"2 apples and 3 oranges\", 100), expected: 95 },\n\
    \     { actual: candidate(\"2 apples and 3 oranges\", 5), expected: 0 },\n   \
    \  { actual: candidate(\"1 apples and 100 oranges\", 120), expected: 19 },\n \
    \  }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\",\
    \ i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmpoeoft17z_test.go:48: expected '%!s(int=8)', got '%!s(int=19)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmpoeoft17z_test.go:48:\
    \ expected '%!s(int=10)', got '%!s(int=21)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmpoeoft17z_test.go:48: expected '%!s(int=2)', got '%!s(int=3)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmpoeoft17z_test.go:48:\
    \ expected '%!s(int=2)', got '%!s(int=3)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmpoeoft17z_test.go:48: expected '%!s(int=95)', got '%!s(int=100)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__5 (0.00s)\n        tmpoeoft17z_test.go:48:\
    \ expected '%!s(int=0)', got '%!s(int=5)'\n    --- FAIL: TestFruit_Distribution/test_num__6\
    \ (0.00s)\n        tmpoeoft17z_test.go:48: expected '%!s(int=19)', got '%!s(int=120)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073796
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    var a, o, m int\n    for _, c :=\
    \ range s {\n        switch c {\n        case 'a':\n            a++\n        case\
    \ 'o':\n            o++\n        }\n    }\n    m = n - a - o\n    return m\n}\n\
    \nfunc TestFruit_Distribution(t *testing.T) {\n  candidate := fruit_distribution\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"5 apples and 6 oranges\", 19),\
    \ expected: 8 },\n     { actual: candidate(\"5 apples and 6 oranges\", 21), expected:\
    \ 10 },\n     { actual: candidate(\"0 apples and 1 oranges\", 3), expected: 2\
    \ },\n     { actual: candidate(\"1 apples and 0 oranges\", 3), expected: 2 },\n\
    \     { actual: candidate(\"2 apples and 3 oranges\", 100), expected: 95 },\n\
    \     { actual: candidate(\"2 apples and 3 oranges\", 5), expected: 0 },\n   \
    \  { actual: candidate(\"1 apples and 100 oranges\", 120), expected: 19 },\n \
    \  }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\",\
    \ i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp67c3g164_test.go:48: expected '%!s(int=8)', got '%!s(int=15)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp67c3g164_test.go:48:\
    \ expected '%!s(int=10)', got '%!s(int=17)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp67c3g164_test.go:48: expected '%!s(int=2)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp67c3g164_test.go:48:\
    \ expected '%!s(int=2)', got '%!s(int=-1)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp67c3g164_test.go:48: expected '%!s(int=95)', got '%!s(int=96)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__5 (0.00s)\n        tmp67c3g164_test.go:48:\
    \ expected '%!s(int=0)', got '%!s(int=1)'\n    --- FAIL: TestFruit_Distribution/test_num__6\
    \ (0.00s)\n        tmp67c3g164_test.go:48: expected '%!s(int=19)', got '%!s(int=116)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073796
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    var num_apples, num_oranges int\n    for _, c := range s {\n\
    \        if c == 'a' {\n            num_apples++\n        } else if c == 'o' {\n\
    \            num_oranges++\n        }\n    }\n    return n - num_apples - num_oranges\n\
    }\n\nfunc TestFruit_Distribution(t *testing.T) {\n  candidate := fruit_distribution\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"5 apples and 6 oranges\", 19),\
    \ expected: 8 },\n     { actual: candidate(\"5 apples and 6 oranges\", 21), expected:\
    \ 10 },\n     { actual: candidate(\"0 apples and 1 oranges\", 3), expected: 2\
    \ },\n     { actual: candidate(\"1 apples and 0 oranges\", 3), expected: 2 },\n\
    \     { actual: candidate(\"2 apples and 3 oranges\", 100), expected: 95 },\n\
    \     { actual: candidate(\"2 apples and 3 oranges\", 5), expected: 0 },\n   \
    \  { actual: candidate(\"1 apples and 100 oranges\", 120), expected: 19 },\n \
    \  }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\",\
    \ i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp34qjke4j_test.go:45: expected '%!s(int=8)', got '%!s(int=15)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp34qjke4j_test.go:45:\
    \ expected '%!s(int=10)', got '%!s(int=17)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp34qjke4j_test.go:45: expected '%!s(int=2)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp34qjke4j_test.go:45:\
    \ expected '%!s(int=2)', got '%!s(int=-1)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp34qjke4j_test.go:45: expected '%!s(int=95)', got '%!s(int=96)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__5 (0.00s)\n        tmp34qjke4j_test.go:45:\
    \ expected '%!s(int=0)', got '%!s(int=1)'\n    --- FAIL: TestFruit_Distribution/test_num__6\
    \ (0.00s)\n        tmp34qjke4j_test.go:45: expected '%!s(int=19)', got '%!s(int=116)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.007s\nFAIL\n"
  timestamp: 1660073796
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    var apples, oranges, mango int\n    for _, c := range s {\n\
    \        if c == 'a' {\n            apples++\n        } else if c == 'o' {\n \
    \           oranges++\n        }\n    }\n    mango = n - apples - oranges\n  \
    \  return mango\n}\n\nfunc TestFruit_Distribution(t *testing.T) {\n  candidate\
    \ := fruit_distribution\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"5 apples\
    \ and 6 oranges\", 19), expected: 8 },\n     { actual: candidate(\"5 apples and\
    \ 6 oranges\", 21), expected: 10 },\n     { actual: candidate(\"0 apples and 1\
    \ oranges\", 3), expected: 2 },\n     { actual: candidate(\"1 apples and 0 oranges\"\
    , 3), expected: 2 },\n     { actual: candidate(\"2 apples and 3 oranges\", 100),\
    \ expected: 95 },\n     { actual: candidate(\"2 apples and 3 oranges\", 5), expected:\
    \ 0 },\n     { actual: candidate(\"1 apples and 100 oranges\", 120), expected:\
    \ 19 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmpjc88pz25_test.go:46: expected '%!s(int=8)', got '%!s(int=15)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmpjc88pz25_test.go:46:\
    \ expected '%!s(int=10)', got '%!s(int=17)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmpjc88pz25_test.go:46: expected '%!s(int=2)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmpjc88pz25_test.go:46:\
    \ expected '%!s(int=2)', got '%!s(int=-1)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmpjc88pz25_test.go:46: expected '%!s(int=95)', got '%!s(int=96)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__5 (0.00s)\n        tmpjc88pz25_test.go:46:\
    \ expected '%!s(int=0)', got '%!s(int=1)'\n    --- FAIL: TestFruit_Distribution/test_num__6\
    \ (0.00s)\n        tmpjc88pz25_test.go:46: expected '%!s(int=19)', got '%!s(int=116)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    var a, o, m int\n    for _, c := range s {\n        switch c\
    \ {\n        case 'a':\n            a++\n        case 'o':\n            o++\n\
    \        case 'm':\n            m++\n        }\n    }\n    return n - a - o -\
    \ m\n}\n\nfunc TestFruit_Distribution(t *testing.T) {\n  candidate := fruit_distribution\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"5 apples and 6 oranges\", 19),\
    \ expected: 8 },\n     { actual: candidate(\"5 apples and 6 oranges\", 21), expected:\
    \ 10 },\n     { actual: candidate(\"0 apples and 1 oranges\", 3), expected: 2\
    \ },\n     { actual: candidate(\"1 apples and 0 oranges\", 3), expected: 2 },\n\
    \     { actual: candidate(\"2 apples and 3 oranges\", 100), expected: 95 },\n\
    \     { actual: candidate(\"2 apples and 3 oranges\", 5), expected: 0 },\n   \
    \  { actual: candidate(\"1 apples and 100 oranges\", 120), expected: 19 },\n \
    \  }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\",\
    \ i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmpso5n50i8_test.go:48: expected '%!s(int=8)', got '%!s(int=15)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmpso5n50i8_test.go:48:\
    \ expected '%!s(int=10)', got '%!s(int=17)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmpso5n50i8_test.go:48: expected '%!s(int=2)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmpso5n50i8_test.go:48:\
    \ expected '%!s(int=2)', got '%!s(int=-1)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmpso5n50i8_test.go:48: expected '%!s(int=95)', got '%!s(int=96)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__5 (0.00s)\n        tmpso5n50i8_test.go:48:\
    \ expected '%!s(int=0)', got '%!s(int=1)'\n    --- FAIL: TestFruit_Distribution/test_num__6\
    \ (0.00s)\n        tmpso5n50i8_test.go:48: expected '%!s(int=19)', got '%!s(int=116)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    // To print results to the standard\
    \ output you can use fmt.Println()\n    // Example: fmt.Println(\"Hello world!\"\
    )\n    return 0\n}\n\nfunc TestFruit_Distribution(t *testing.T) {\n  candidate\
    \ := fruit_distribution\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"5 apples\
    \ and 6 oranges\", 19), expected: 8 },\n     { actual: candidate(\"5 apples and\
    \ 6 oranges\", 21), expected: 10 },\n     { actual: candidate(\"0 apples and 1\
    \ oranges\", 3), expected: 2 },\n     { actual: candidate(\"1 apples and 0 oranges\"\
    , 3), expected: 2 },\n     { actual: candidate(\"2 apples and 3 oranges\", 100),\
    \ expected: 95 },\n     { actual: candidate(\"2 apples and 3 oranges\", 5), expected:\
    \ 0 },\n     { actual: candidate(\"1 apples and 100 oranges\", 120), expected:\
    \ 19 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmpgyu4iiug_test.go:40: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmpgyu4iiug_test.go:40:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmpgyu4iiug_test.go:40: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmpgyu4iiug_test.go:40:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmpgyu4iiug_test.go:40: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmpgyu4iiug_test.go:40:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073796
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    var apples, oranges, mango int\n    for _, c := range s {\n\
    \        switch c {\n            case 'a': apples++\n            case 'o': oranges++\n\
    \            case 'm': mango++\n        }\n    }\n    return n - apples - oranges\n\
    }\n\nfunc TestFruit_Distribution(t *testing.T) {\n  candidate := fruit_distribution\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"5 apples and 6 oranges\", 19),\
    \ expected: 8 },\n     { actual: candidate(\"5 apples and 6 oranges\", 21), expected:\
    \ 10 },\n     { actual: candidate(\"0 apples and 1 oranges\", 3), expected: 2\
    \ },\n     { actual: candidate(\"1 apples and 0 oranges\", 3), expected: 2 },\n\
    \     { actual: candidate(\"2 apples and 3 oranges\", 100), expected: 95 },\n\
    \     { actual: candidate(\"2 apples and 3 oranges\", 5), expected: 0 },\n   \
    \  { actual: candidate(\"1 apples and 100 oranges\", 120), expected: 19 },\n \
    \  }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\",\
    \ i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmpgxn01i43_test.go:45: expected '%!s(int=8)', got '%!s(int=15)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmpgxn01i43_test.go:45:\
    \ expected '%!s(int=10)', got '%!s(int=17)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmpgxn01i43_test.go:45: expected '%!s(int=2)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmpgxn01i43_test.go:45:\
    \ expected '%!s(int=2)', got '%!s(int=-1)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmpgxn01i43_test.go:45: expected '%!s(int=95)', got '%!s(int=96)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__5 (0.00s)\n        tmpgxn01i43_test.go:45:\
    \ expected '%!s(int=0)', got '%!s(int=1)'\n    --- FAIL: TestFruit_Distribution/test_num__6\
    \ (0.00s)\n        tmpgxn01i43_test.go:45: expected '%!s(int=19)', got '%!s(int=116)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073796
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    var oranges, apples, mango int\n    for _, r := range s {\n\
    \        switch r {\n        case 'o':\n            oranges++\n        case 'a':\n\
    \            apples++\n        }\n    }\n    mango = n - oranges - apples\n  \
    \  return mango\n}\n\nfunc TestFruit_Distribution(t *testing.T) {\n  candidate\
    \ := fruit_distribution\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"5 apples\
    \ and 6 oranges\", 19), expected: 8 },\n     { actual: candidate(\"5 apples and\
    \ 6 oranges\", 21), expected: 10 },\n     { actual: candidate(\"0 apples and 1\
    \ oranges\", 3), expected: 2 },\n     { actual: candidate(\"1 apples and 0 oranges\"\
    , 3), expected: 2 },\n     { actual: candidate(\"2 apples and 3 oranges\", 100),\
    \ expected: 95 },\n     { actual: candidate(\"2 apples and 3 oranges\", 5), expected:\
    \ 0 },\n     { actual: candidate(\"1 apples and 100 oranges\", 120), expected:\
    \ 19 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmpak9uqhfr_test.go:47: expected '%!s(int=8)', got '%!s(int=15)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmpak9uqhfr_test.go:47:\
    \ expected '%!s(int=10)', got '%!s(int=17)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmpak9uqhfr_test.go:47: expected '%!s(int=2)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmpak9uqhfr_test.go:47:\
    \ expected '%!s(int=2)', got '%!s(int=-1)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmpak9uqhfr_test.go:47: expected '%!s(int=95)', got '%!s(int=96)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__5 (0.00s)\n        tmpak9uqhfr_test.go:47:\
    \ expected '%!s(int=0)', got '%!s(int=1)'\n    --- FAIL: TestFruit_Distribution/test_num__6\
    \ (0.00s)\n        tmpak9uqhfr_test.go:47: expected '%!s(int=19)', got '%!s(int=116)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073796
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    var a, o, m int\n    for _, c := range s {\n        switch c\
    \ {\n        case 'a':\n            a++\n        case 'o':\n            o++\n\
    \        case 'm':\n            m++\n        }\n    }\n    return n - a - o -\
    \ m\n}\n\nfunc TestFruit_Distribution(t *testing.T) {\n  candidate := fruit_distribution\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"5 apples and 6 oranges\", 19),\
    \ expected: 8 },\n     { actual: candidate(\"5 apples and 6 oranges\", 21), expected:\
    \ 10 },\n     { actual: candidate(\"0 apples and 1 oranges\", 3), expected: 2\
    \ },\n     { actual: candidate(\"1 apples and 0 oranges\", 3), expected: 2 },\n\
    \     { actual: candidate(\"2 apples and 3 oranges\", 100), expected: 95 },\n\
    \     { actual: candidate(\"2 apples and 3 oranges\", 5), expected: 0 },\n   \
    \  { actual: candidate(\"1 apples and 100 oranges\", 120), expected: 19 },\n \
    \  }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\",\
    \ i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmpso5n50i8_test.go:48: expected '%!s(int=8)', got '%!s(int=15)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmpso5n50i8_test.go:48:\
    \ expected '%!s(int=10)', got '%!s(int=17)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmpso5n50i8_test.go:48: expected '%!s(int=2)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmpso5n50i8_test.go:48:\
    \ expected '%!s(int=2)', got '%!s(int=-1)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmpso5n50i8_test.go:48: expected '%!s(int=95)', got '%!s(int=96)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__5 (0.00s)\n        tmpso5n50i8_test.go:48:\
    \ expected '%!s(int=0)', got '%!s(int=1)'\n    --- FAIL: TestFruit_Distribution/test_num__6\
    \ (0.00s)\n        tmpso5n50i8_test.go:48: expected '%!s(int=19)', got '%!s(int=116)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    var (\n        apples, oranges, mango int\n    )\n    for _,\
    \ v := range s {\n        if v == 'a' {\n            apples++\n        } else\
    \ if v == 'o' {\n            oranges++\n        }\n    }\n    mango = n - (apples\
    \ + oranges)\n    return mango\n}\n\nfunc TestFruit_Distribution(t *testing.T)\
    \ {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    5 apples and 6 oranges\", 19), expected: 8 },\n     { actual: candidate(\"5 apples\
    \ and 6 oranges\", 21), expected: 10 },\n     { actual: candidate(\"0 apples and\
    \ 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"1 apples and 0 oranges\"\
    , 3), expected: 2 },\n     { actual: candidate(\"2 apples and 3 oranges\", 100),\
    \ expected: 95 },\n     { actual: candidate(\"2 apples and 3 oranges\", 5), expected:\
    \ 0 },\n     { actual: candidate(\"1 apples and 100 oranges\", 120), expected:\
    \ 19 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmpxc81ll40_test.go:48: expected '%!s(int=8)', got '%!s(int=15)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmpxc81ll40_test.go:48:\
    \ expected '%!s(int=10)', got '%!s(int=17)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmpxc81ll40_test.go:48: expected '%!s(int=2)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmpxc81ll40_test.go:48:\
    \ expected '%!s(int=2)', got '%!s(int=-1)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmpxc81ll40_test.go:48: expected '%!s(int=95)', got '%!s(int=96)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__5 (0.00s)\n        tmpxc81ll40_test.go:48:\
    \ expected '%!s(int=0)', got '%!s(int=1)'\n    --- FAIL: TestFruit_Distribution/test_num__6\
    \ (0.00s)\n        tmpxc81ll40_test.go:48: expected '%!s(int=19)', got '%!s(int=116)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073796
- exit_code: 2
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    return n - (len(s) - strings.Count(s, \"m\"))\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp4wwynezm_test.go:15:26: undefined: strings

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073796
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    var mango int\n    var apple, orange int\n    for _, v := range\
    \ s {\n        if v == 'a' {\n            apple++\n        } else if v == 'o'\
    \ {\n            orange++\n        }\n    }\n    mango = n - (apple + orange)\n\
    \    return mango\n}\n\nfunc TestFruit_Distribution(t *testing.T) {\n  candidate\
    \ := fruit_distribution\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"5 apples\
    \ and 6 oranges\", 19), expected: 8 },\n     { actual: candidate(\"5 apples and\
    \ 6 oranges\", 21), expected: 10 },\n     { actual: candidate(\"0 apples and 1\
    \ oranges\", 3), expected: 2 },\n     { actual: candidate(\"1 apples and 0 oranges\"\
    , 3), expected: 2 },\n     { actual: candidate(\"2 apples and 3 oranges\", 100),\
    \ expected: 95 },\n     { actual: candidate(\"2 apples and 3 oranges\", 5), expected:\
    \ 0 },\n     { actual: candidate(\"1 apples and 100 oranges\", 120), expected:\
    \ 19 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp5wl2oi7__test.go:47: expected '%!s(int=8)', got '%!s(int=15)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp5wl2oi7__test.go:47:\
    \ expected '%!s(int=10)', got '%!s(int=17)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp5wl2oi7__test.go:47: expected '%!s(int=2)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp5wl2oi7__test.go:47:\
    \ expected '%!s(int=2)', got '%!s(int=-1)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp5wl2oi7__test.go:47: expected '%!s(int=95)', got '%!s(int=96)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__5 (0.00s)\n        tmp5wl2oi7__test.go:47:\
    \ expected '%!s(int=0)', got '%!s(int=1)'\n    --- FAIL: TestFruit_Distribution/test_num__6\
    \ (0.00s)\n        tmp5wl2oi7__test.go:47: expected '%!s(int=19)', got '%!s(int=116)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    var mango int\n    mango = n\n    for i := 0; i < len(s); i++\
    \ {\n        if s[i] == 'a' || s[i] == 'o' {\n            mango--\n        }\n\
    \    }\n    return mango\n}\n\nfunc TestFruit_Distribution(t *testing.T) {\n \
    \ candidate := fruit_distribution\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    5 apples and 6 oranges\", 19), expected: 8 },\n     { actual: candidate(\"5 apples\
    \ and 6 oranges\", 21), expected: 10 },\n     { actual: candidate(\"0 apples and\
    \ 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"1 apples and 0 oranges\"\
    , 3), expected: 2 },\n     { actual: candidate(\"2 apples and 3 oranges\", 100),\
    \ expected: 95 },\n     { actual: candidate(\"2 apples and 3 oranges\", 5), expected:\
    \ 0 },\n     { actual: candidate(\"1 apples and 100 oranges\", 120), expected:\
    \ 19 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmppwabzv3n_test.go:44: expected '%!s(int=8)', got '%!s(int=15)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmppwabzv3n_test.go:44:\
    \ expected '%!s(int=10)', got '%!s(int=17)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmppwabzv3n_test.go:44: expected '%!s(int=2)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmppwabzv3n_test.go:44:\
    \ expected '%!s(int=2)', got '%!s(int=-1)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmppwabzv3n_test.go:44: expected '%!s(int=95)', got '%!s(int=96)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__5 (0.00s)\n        tmppwabzv3n_test.go:44:\
    \ expected '%!s(int=0)', got '%!s(int=1)'\n    --- FAIL: TestFruit_Distribution/test_num__6\
    \ (0.00s)\n        tmppwabzv3n_test.go:44: expected '%!s(int=19)', got '%!s(int=116)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073796
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    var a, o, m int\n    for _, c := range s {\n        switch c\
    \ {\n        case 'a':\n            a++\n        case 'o':\n            o++\n\
    \        case 'm':\n            m++\n        }\n    }\n    return n - a - o -\
    \ m\n}\n\nfunc TestFruit_Distribution(t *testing.T) {\n  candidate := fruit_distribution\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"5 apples and 6 oranges\", 19),\
    \ expected: 8 },\n     { actual: candidate(\"5 apples and 6 oranges\", 21), expected:\
    \ 10 },\n     { actual: candidate(\"0 apples and 1 oranges\", 3), expected: 2\
    \ },\n     { actual: candidate(\"1 apples and 0 oranges\", 3), expected: 2 },\n\
    \     { actual: candidate(\"2 apples and 3 oranges\", 100), expected: 95 },\n\
    \     { actual: candidate(\"2 apples and 3 oranges\", 5), expected: 0 },\n   \
    \  { actual: candidate(\"1 apples and 100 oranges\", 120), expected: 19 },\n \
    \  }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\",\
    \ i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmpso5n50i8_test.go:48: expected '%!s(int=8)', got '%!s(int=15)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmpso5n50i8_test.go:48:\
    \ expected '%!s(int=10)', got '%!s(int=17)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmpso5n50i8_test.go:48: expected '%!s(int=2)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmpso5n50i8_test.go:48:\
    \ expected '%!s(int=2)', got '%!s(int=-1)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmpso5n50i8_test.go:48: expected '%!s(int=95)', got '%!s(int=96)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__5 (0.00s)\n        tmpso5n50i8_test.go:48:\
    \ expected '%!s(int=0)', got '%!s(int=1)'\n    --- FAIL: TestFruit_Distribution/test_num__6\
    \ (0.00s)\n        tmpso5n50i8_test.go:48: expected '%!s(int=19)', got '%!s(int=116)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    var a, o, m int\n    for _, c := range s {\n        switch c\
    \ {\n        case 'a':\n            a++\n        case 'o':\n            o++\n\
    \        case 'm':\n            m++\n        }\n    }\n    return n - a - o -\
    \ m\n}\n\nfunc TestFruit_Distribution(t *testing.T) {\n  candidate := fruit_distribution\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"5 apples and 6 oranges\", 19),\
    \ expected: 8 },\n     { actual: candidate(\"5 apples and 6 oranges\", 21), expected:\
    \ 10 },\n     { actual: candidate(\"0 apples and 1 oranges\", 3), expected: 2\
    \ },\n     { actual: candidate(\"1 apples and 0 oranges\", 3), expected: 2 },\n\
    \     { actual: candidate(\"2 apples and 3 oranges\", 100), expected: 95 },\n\
    \     { actual: candidate(\"2 apples and 3 oranges\", 5), expected: 0 },\n   \
    \  { actual: candidate(\"1 apples and 100 oranges\", 120), expected: 19 },\n \
    \  }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\",\
    \ i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmpso5n50i8_test.go:48: expected '%!s(int=8)', got '%!s(int=15)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmpso5n50i8_test.go:48:\
    \ expected '%!s(int=10)', got '%!s(int=17)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmpso5n50i8_test.go:48: expected '%!s(int=2)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmpso5n50i8_test.go:48:\
    \ expected '%!s(int=2)', got '%!s(int=-1)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmpso5n50i8_test.go:48: expected '%!s(int=95)', got '%!s(int=96)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__5 (0.00s)\n        tmpso5n50i8_test.go:48:\
    \ expected '%!s(int=0)', got '%!s(int=1)'\n    --- FAIL: TestFruit_Distribution/test_num__6\
    \ (0.00s)\n        tmpso5n50i8_test.go:48: expected '%!s(int=19)', got '%!s(int=116)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    var apples, oranges, mango int\n    for _, c := range s {\n\
    \        if c == 'a' {\n            apples++\n        } else if c == 'o' {\n \
    \           oranges++\n        }\n    }\n    mango = n - apples - oranges\n  \
    \  return mango\n}\n\nfunc TestFruit_Distribution(t *testing.T) {\n  candidate\
    \ := fruit_distribution\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"5 apples\
    \ and 6 oranges\", 19), expected: 8 },\n     { actual: candidate(\"5 apples and\
    \ 6 oranges\", 21), expected: 10 },\n     { actual: candidate(\"0 apples and 1\
    \ oranges\", 3), expected: 2 },\n     { actual: candidate(\"1 apples and 0 oranges\"\
    , 3), expected: 2 },\n     { actual: candidate(\"2 apples and 3 oranges\", 100),\
    \ expected: 95 },\n     { actual: candidate(\"2 apples and 3 oranges\", 5), expected:\
    \ 0 },\n     { actual: candidate(\"1 apples and 100 oranges\", 120), expected:\
    \ 19 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmpjc88pz25_test.go:46: expected '%!s(int=8)', got '%!s(int=15)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmpjc88pz25_test.go:46:\
    \ expected '%!s(int=10)', got '%!s(int=17)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmpjc88pz25_test.go:46: expected '%!s(int=2)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmpjc88pz25_test.go:46:\
    \ expected '%!s(int=2)', got '%!s(int=-1)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmpjc88pz25_test.go:46: expected '%!s(int=95)', got '%!s(int=96)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__5 (0.00s)\n        tmpjc88pz25_test.go:46:\
    \ expected '%!s(int=0)', got '%!s(int=1)'\n    --- FAIL: TestFruit_Distribution/test_num__6\
    \ (0.00s)\n        tmpjc88pz25_test.go:46: expected '%!s(int=19)', got '%!s(int=116)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    var (\n        apple, orange, mango int\n    )\n    for _, v\
    \ := range s {\n        switch v {\n        case 'a':\n            apple++\n \
    \       case 'o':\n            orange++\n        case 'm':\n            mango++\n\
    \        }\n    }\n    return n - apple - orange\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmpfkppfql2_test.go:50: expected '%!s(int=8)', got '%!s(int=15)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmpfkppfql2_test.go:50:\
    \ expected '%!s(int=10)', got '%!s(int=17)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmpfkppfql2_test.go:50: expected '%!s(int=2)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmpfkppfql2_test.go:50:\
    \ expected '%!s(int=2)', got '%!s(int=-1)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmpfkppfql2_test.go:50: expected '%!s(int=95)', got '%!s(int=96)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__5 (0.00s)\n        tmpfkppfql2_test.go:50:\
    \ expected '%!s(int=0)', got '%!s(int=1)'\n    --- FAIL: TestFruit_Distribution/test_num__6\
    \ (0.00s)\n        tmpfkppfql2_test.go:50: expected '%!s(int=19)', got '%!s(int=116)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073796
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    var mango_count int\n    var orange_count int\n    var apple_count\
    \ int\n    var mango_number int\n    var orange_number int\n    var apple_number\
    \ int\n    var total_number int\n    var total_fruit int\n    var total_mango\
    \ int\n    var total_orange int\n    var total_apple int\n    var i int\n    var\
    \ j int\n    var k int\n    var l int\n    var m int\n    var n int\n    var o\
    \ int\n    var p int\n    var q int\n    var r int\n    var s int\n    var t int\n\
    \    var u int\n    var v int\n    var w int\n    var x int\n    var y int\n \
    \   var z int\n    var aa int\n    var bb int\n    var cc int\n    var dd int\n\
    \    var ee int\n    var ff int\n    var gg int\n    var hh int\n    var ii int\n\
    \    var jj int\n    var kk int\n    var ll int\n    var mm int\n    var nn int\n\
    \    var oo int\n    var pp int\n    var qq int\n    var rr int\n    var ss int\n\
    \    var tt int\n    var uu int\n    var vv int\n    var ww int\n    var xx int\n\
    \    var yy int\n    var zz int\n    var aaa int\n    var bbb int\n    var ccc\
    \ int\n    var ddd int\n    var eee int\n    var fff int\n    var ggg int\n  \
    \  var hhh int\n    var iii int\n    var jjj int\n    var kkk int\n    var lll\
    \ int\n    var mmm int\n    var nnn int\n    var ooo int\n    var ppp int\n  \
    \  var qqq int\n    var rrr int\n    var sss int\n    var ttt int\n    var uuu\
    \ int\n    var vvv int\n    var www int\n    var xxx int\n    var yyy int\n  \
    \  var zzz int\n    var aaaa int\n    var bbbb int\n    var cccc int\n    var\
    \ dddd int\n    var eeee int\n    var ffff int\n    var\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments

    /tmp/tmpc3gtr77s_test.go:103:1: expected ''IDENT'', found ''func''

    '
  stdout: "FAIL\tcommand-line-arguments [setup failed]\nFAIL\n"
  timestamp: 1660073796
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    var mango_count int\n    var apple_count int\n    var orange_count\
    \ int\n    for _, v := range s {\n        if v == 'a' {\n            apple_count++\n\
    \        } else if v == 'o' {\n            orange_count++\n        }\n    }\n\
    \    mango_count = n - (apple_count + orange_count)\n    return mango_count\n\
    }\n\nfunc TestFruit_Distribution(t *testing.T) {\n  candidate := fruit_distribution\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"5 apples and 6 oranges\", 19),\
    \ expected: 8 },\n     { actual: candidate(\"5 apples and 6 oranges\", 21), expected:\
    \ 10 },\n     { actual: candidate(\"0 apples and 1 oranges\", 3), expected: 2\
    \ },\n     { actual: candidate(\"1 apples and 0 oranges\", 3), expected: 2 },\n\
    \     { actual: candidate(\"2 apples and 3 oranges\", 100), expected: 95 },\n\
    \     { actual: candidate(\"2 apples and 3 oranges\", 5), expected: 0 },\n   \
    \  { actual: candidate(\"1 apples and 100 oranges\", 120), expected: 19 },\n \
    \  }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\",\
    \ i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp5l_emo7c_test.go:48: expected '%!s(int=8)', got '%!s(int=15)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp5l_emo7c_test.go:48:\
    \ expected '%!s(int=10)', got '%!s(int=17)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp5l_emo7c_test.go:48: expected '%!s(int=2)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp5l_emo7c_test.go:48:\
    \ expected '%!s(int=2)', got '%!s(int=-1)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp5l_emo7c_test.go:48: expected '%!s(int=95)', got '%!s(int=96)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__5 (0.00s)\n        tmp5l_emo7c_test.go:48:\
    \ expected '%!s(int=0)', got '%!s(int=1)'\n    --- FAIL: TestFruit_Distribution/test_num__6\
    \ (0.00s)\n        tmp5l_emo7c_test.go:48: expected '%!s(int=19)', got '%!s(int=116)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073796
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    return n - (int(s[0] - '0') + int(s[2] - '0'))\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmpny0rnua3_test.go:37: expected '%!s(int=8)', got '%!s(int=-35)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmpny0rnua3_test.go:37:\
    \ expected '%!s(int=10)', got '%!s(int=-33)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmpny0rnua3_test.go:37: expected '%!s(int=2)', got '%!s(int=-46)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmpny0rnua3_test.go:37:\
    \ expected '%!s(int=2)', got '%!s(int=-47)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmpny0rnua3_test.go:37: expected '%!s(int=95)', got '%!s(int=49)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__5 (0.00s)\n        tmpny0rnua3_test.go:37:\
    \ expected '%!s(int=0)', got '%!s(int=-46)'\n    --- FAIL: TestFruit_Distribution/test_num__6\
    \ (0.00s)\n        tmpny0rnua3_test.go:37: expected '%!s(int=19)', got '%!s(int=70)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    var apples, oranges, mango int\n    for _, c := range s {\n\
    \        switch c {\n            case 'a': apples++\n            case 'o': oranges++\n\
    \            case 'm': mango++\n        }\n    }\n    return n - apples - oranges\n\
    }\n\nfunc TestFruit_Distribution(t *testing.T) {\n  candidate := fruit_distribution\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"5 apples and 6 oranges\", 19),\
    \ expected: 8 },\n     { actual: candidate(\"5 apples and 6 oranges\", 21), expected:\
    \ 10 },\n     { actual: candidate(\"0 apples and 1 oranges\", 3), expected: 2\
    \ },\n     { actual: candidate(\"1 apples and 0 oranges\", 3), expected: 2 },\n\
    \     { actual: candidate(\"2 apples and 3 oranges\", 100), expected: 95 },\n\
    \     { actual: candidate(\"2 apples and 3 oranges\", 5), expected: 0 },\n   \
    \  { actual: candidate(\"1 apples and 100 oranges\", 120), expected: 19 },\n \
    \  }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\",\
    \ i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmpgxn01i43_test.go:45: expected '%!s(int=8)', got '%!s(int=15)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmpgxn01i43_test.go:45:\
    \ expected '%!s(int=10)', got '%!s(int=17)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmpgxn01i43_test.go:45: expected '%!s(int=2)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmpgxn01i43_test.go:45:\
    \ expected '%!s(int=2)', got '%!s(int=-1)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmpgxn01i43_test.go:45: expected '%!s(int=95)', got '%!s(int=96)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__5 (0.00s)\n        tmpgxn01i43_test.go:45:\
    \ expected '%!s(int=0)', got '%!s(int=1)'\n    --- FAIL: TestFruit_Distribution/test_num__6\
    \ (0.00s)\n        tmpgxn01i43_test.go:45: expected '%!s(int=19)', got '%!s(int=116)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073796
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    // To print results to the standard\
    \ output you can use fmt.Println()\n    // Example: fmt.Println(\"Hello world!\"\
    )\n    return 0\n}\n\nfunc TestFruit_Distribution(t *testing.T) {\n  candidate\
    \ := fruit_distribution\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"5 apples\
    \ and 6 oranges\", 19), expected: 8 },\n     { actual: candidate(\"5 apples and\
    \ 6 oranges\", 21), expected: 10 },\n     { actual: candidate(\"0 apples and 1\
    \ oranges\", 3), expected: 2 },\n     { actual: candidate(\"1 apples and 0 oranges\"\
    , 3), expected: 2 },\n     { actual: candidate(\"2 apples and 3 oranges\", 100),\
    \ expected: 95 },\n     { actual: candidate(\"2 apples and 3 oranges\", 5), expected:\
    \ 0 },\n     { actual: candidate(\"1 apples and 100 oranges\", 120), expected:\
    \ 19 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmpgyu4iiug_test.go:40: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmpgyu4iiug_test.go:40:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmpgyu4iiug_test.go:40: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmpgyu4iiug_test.go:40:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmpgyu4iiug_test.go:40: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmpgyu4iiug_test.go:40:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073796
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    var oranges, apples, mango int\n    for _, c := range s {\n\
    \        switch c {\n        case 'o':\n            oranges++\n        case 'a':\n\
    \            apples++\n        case 'm':\n            mango++\n        }\n   \
    \ }\n    return n - oranges - apples\n}\n\nfunc TestFruit_Distribution(t *testing.T)\
    \ {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    5 apples and 6 oranges\", 19), expected: 8 },\n     { actual: candidate(\"5 apples\
    \ and 6 oranges\", 21), expected: 10 },\n     { actual: candidate(\"0 apples and\
    \ 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"1 apples and 0 oranges\"\
    , 3), expected: 2 },\n     { actual: candidate(\"2 apples and 3 oranges\", 100),\
    \ expected: 95 },\n     { actual: candidate(\"2 apples and 3 oranges\", 5), expected:\
    \ 0 },\n     { actual: candidate(\"1 apples and 100 oranges\", 120), expected:\
    \ 19 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp1gh9o6zr_test.go:48: expected '%!s(int=8)', got '%!s(int=15)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp1gh9o6zr_test.go:48:\
    \ expected '%!s(int=10)', got '%!s(int=17)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp1gh9o6zr_test.go:48: expected '%!s(int=2)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp1gh9o6zr_test.go:48:\
    \ expected '%!s(int=2)', got '%!s(int=-1)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp1gh9o6zr_test.go:48: expected '%!s(int=95)', got '%!s(int=96)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__5 (0.00s)\n        tmp1gh9o6zr_test.go:48:\
    \ expected '%!s(int=0)', got '%!s(int=1)'\n    --- FAIL: TestFruit_Distribution/test_num__6\
    \ (0.00s)\n        tmp1gh9o6zr_test.go:48: expected '%!s(int=19)', got '%!s(int=116)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073796
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    var mango_count int\n    var apple_count int\n    var orange_count\
    \ int\n    for _, v := range s {\n        if v == 'a' {\n            apple_count++\n\
    \        } else if v == 'o' {\n            orange_count++\n        }\n    }\n\
    \    mango_count = n - (apple_count + orange_count)\n    return mango_count\n\
    }\n\nfunc TestFruit_Distribution(t *testing.T) {\n  candidate := fruit_distribution\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"5 apples and 6 oranges\", 19),\
    \ expected: 8 },\n     { actual: candidate(\"5 apples and 6 oranges\", 21), expected:\
    \ 10 },\n     { actual: candidate(\"0 apples and 1 oranges\", 3), expected: 2\
    \ },\n     { actual: candidate(\"1 apples and 0 oranges\", 3), expected: 2 },\n\
    \     { actual: candidate(\"2 apples and 3 oranges\", 100), expected: 95 },\n\
    \     { actual: candidate(\"2 apples and 3 oranges\", 5), expected: 0 },\n   \
    \  { actual: candidate(\"1 apples and 100 oranges\", 120), expected: 19 },\n \
    \  }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\",\
    \ i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp5l_emo7c_test.go:48: expected '%!s(int=8)', got '%!s(int=15)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp5l_emo7c_test.go:48:\
    \ expected '%!s(int=10)', got '%!s(int=17)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp5l_emo7c_test.go:48: expected '%!s(int=2)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp5l_emo7c_test.go:48:\
    \ expected '%!s(int=2)', got '%!s(int=-1)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp5l_emo7c_test.go:48: expected '%!s(int=95)', got '%!s(int=96)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__5 (0.00s)\n        tmp5l_emo7c_test.go:48:\
    \ expected '%!s(int=0)', got '%!s(int=1)'\n    --- FAIL: TestFruit_Distribution/test_num__6\
    \ (0.00s)\n        tmp5l_emo7c_test.go:48: expected '%!s(int=19)', got '%!s(int=116)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073796
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    var apples, oranges, mango int\n    for _, v := range s {\n\
    \        if v == 'a' {\n            apples++\n        } else if v == 'o' {\n \
    \           oranges++\n        } else if v == 'm' {\n            mango++\n   \
    \     }\n    }\n    return n - (apples + oranges)\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmpg_0kmjdb_test.go:47: expected '%!s(int=8)', got '%!s(int=15)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmpg_0kmjdb_test.go:47:\
    \ expected '%!s(int=10)', got '%!s(int=17)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmpg_0kmjdb_test.go:47: expected '%!s(int=2)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmpg_0kmjdb_test.go:47:\
    \ expected '%!s(int=2)', got '%!s(int=-1)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmpg_0kmjdb_test.go:47: expected '%!s(int=95)', got '%!s(int=96)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__5 (0.00s)\n        tmpg_0kmjdb_test.go:47:\
    \ expected '%!s(int=0)', got '%!s(int=1)'\n    --- FAIL: TestFruit_Distribution/test_num__6\
    \ (0.00s)\n        tmpg_0kmjdb_test.go:47: expected '%!s(int=19)', got '%!s(int=116)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073796
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    var apples, oranges, mangoes int\n    for _, c := range s {\n\
    \        switch c {\n            case 'a': apples++\n            case 'o': oranges++\n\
    \            case 'm': mangoes++\n        }\n    }\n    return n - apples - oranges\n\
    }\n\nfunc TestFruit_Distribution(t *testing.T) {\n  candidate := fruit_distribution\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"5 apples and 6 oranges\", 19),\
    \ expected: 8 },\n     { actual: candidate(\"5 apples and 6 oranges\", 21), expected:\
    \ 10 },\n     { actual: candidate(\"0 apples and 1 oranges\", 3), expected: 2\
    \ },\n     { actual: candidate(\"1 apples and 0 oranges\", 3), expected: 2 },\n\
    \     { actual: candidate(\"2 apples and 3 oranges\", 100), expected: 95 },\n\
    \     { actual: candidate(\"2 apples and 3 oranges\", 5), expected: 0 },\n   \
    \  { actual: candidate(\"1 apples and 100 oranges\", 120), expected: 19 },\n \
    \  }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\",\
    \ i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp0v9_mnhu_test.go:45: expected '%!s(int=8)', got '%!s(int=15)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp0v9_mnhu_test.go:45:\
    \ expected '%!s(int=10)', got '%!s(int=17)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp0v9_mnhu_test.go:45: expected '%!s(int=2)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp0v9_mnhu_test.go:45:\
    \ expected '%!s(int=2)', got '%!s(int=-1)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp0v9_mnhu_test.go:45: expected '%!s(int=95)', got '%!s(int=96)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__5 (0.00s)\n        tmp0v9_mnhu_test.go:45:\
    \ expected '%!s(int=0)', got '%!s(int=1)'\n    --- FAIL: TestFruit_Distribution/test_num__6\
    \ (0.00s)\n        tmp0v9_mnhu_test.go:45: expected '%!s(int=19)', got '%!s(int=116)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073796
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    var a, o, m int\n    for _, v := range s {\n        switch v\
    \ {\n        case 'a':\n            a++\n        case 'o':\n            o++\n\
    \        case 'm':\n            m++\n        }\n    }\n    return n - (a + o +\
    \ m)\n}\n\nfunc TestFruit_Distribution(t *testing.T) {\n  candidate := fruit_distribution\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"5 apples and 6 oranges\", 19),\
    \ expected: 8 },\n     { actual: candidate(\"5 apples and 6 oranges\", 21), expected:\
    \ 10 },\n     { actual: candidate(\"0 apples and 1 oranges\", 3), expected: 2\
    \ },\n     { actual: candidate(\"1 apples and 0 oranges\", 3), expected: 2 },\n\
    \     { actual: candidate(\"2 apples and 3 oranges\", 100), expected: 95 },\n\
    \     { actual: candidate(\"2 apples and 3 oranges\", 5), expected: 0 },\n   \
    \  { actual: candidate(\"1 apples and 100 oranges\", 120), expected: 19 },\n \
    \  }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\",\
    \ i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmpht8q869i_test.go:48: expected '%!s(int=8)', got '%!s(int=15)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmpht8q869i_test.go:48:\
    \ expected '%!s(int=10)', got '%!s(int=17)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmpht8q869i_test.go:48: expected '%!s(int=2)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmpht8q869i_test.go:48:\
    \ expected '%!s(int=2)', got '%!s(int=-1)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmpht8q869i_test.go:48: expected '%!s(int=95)', got '%!s(int=96)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__5 (0.00s)\n        tmpht8q869i_test.go:48:\
    \ expected '%!s(int=0)', got '%!s(int=1)'\n    --- FAIL: TestFruit_Distribution/test_num__6\
    \ (0.00s)\n        tmpht8q869i_test.go:48: expected '%!s(int=19)', got '%!s(int=116)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    var mango, apple, orange int\n    for _, v := range s {\n  \
    \      if v == 'a' {\n            apple++\n        } else if v == 'o' {\n    \
    \        orange++\n        }\n    }\n    mango = n - (apple + orange)\n    return\
    \ mango\n}\n\nfunc TestFruit_Distribution(t *testing.T) {\n  candidate := fruit_distribution\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"5 apples and 6 oranges\", 19),\
    \ expected: 8 },\n     { actual: candidate(\"5 apples and 6 oranges\", 21), expected:\
    \ 10 },\n     { actual: candidate(\"0 apples and 1 oranges\", 3), expected: 2\
    \ },\n     { actual: candidate(\"1 apples and 0 oranges\", 3), expected: 2 },\n\
    \     { actual: candidate(\"2 apples and 3 oranges\", 100), expected: 95 },\n\
    \     { actual: candidate(\"2 apples and 3 oranges\", 5), expected: 0 },\n   \
    \  { actual: candidate(\"1 apples and 100 oranges\", 120), expected: 19 },\n \
    \  }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\",\
    \ i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmpvpqr5zwq_test.go:46: expected '%!s(int=8)', got '%!s(int=15)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmpvpqr5zwq_test.go:46:\
    \ expected '%!s(int=10)', got '%!s(int=17)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmpvpqr5zwq_test.go:46: expected '%!s(int=2)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmpvpqr5zwq_test.go:46:\
    \ expected '%!s(int=2)', got '%!s(int=-1)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmpvpqr5zwq_test.go:46: expected '%!s(int=95)', got '%!s(int=96)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__5 (0.00s)\n        tmpvpqr5zwq_test.go:46:\
    \ expected '%!s(int=0)', got '%!s(int=1)'\n    --- FAIL: TestFruit_Distribution/test_num__6\
    \ (0.00s)\n        tmpvpqr5zwq_test.go:46: expected '%!s(int=19)', got '%!s(int=116)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073796
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    var apples, oranges, mangoes int\n    for _, c := range s {\n\
    \        switch c {\n            case 'a':\n                apples++\n       \
    \     case 'o':\n                oranges++\n            case 'm':\n          \
    \      mangoes++\n        }\n    }\n    return n - apples - oranges\n}\n\nfunc\
    \ TestFruit_Distribution(t *testing.T) {\n  candidate := fruit_distribution\n\t\
    type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"5 apples and 6 oranges\", 19),\
    \ expected: 8 },\n     { actual: candidate(\"5 apples and 6 oranges\", 21), expected:\
    \ 10 },\n     { actual: candidate(\"0 apples and 1 oranges\", 3), expected: 2\
    \ },\n     { actual: candidate(\"1 apples and 0 oranges\", 3), expected: 2 },\n\
    \     { actual: candidate(\"2 apples and 3 oranges\", 100), expected: 95 },\n\
    \     { actual: candidate(\"2 apples and 3 oranges\", 5), expected: 0 },\n   \
    \  { actual: candidate(\"1 apples and 100 oranges\", 120), expected: 19 },\n \
    \  }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\",\
    \ i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmpaho8ss24_test.go:48: expected '%!s(int=8)', got '%!s(int=15)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmpaho8ss24_test.go:48:\
    \ expected '%!s(int=10)', got '%!s(int=17)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmpaho8ss24_test.go:48: expected '%!s(int=2)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmpaho8ss24_test.go:48:\
    \ expected '%!s(int=2)', got '%!s(int=-1)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmpaho8ss24_test.go:48: expected '%!s(int=95)', got '%!s(int=96)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__5 (0.00s)\n        tmpaho8ss24_test.go:48:\
    \ expected '%!s(int=0)', got '%!s(int=1)'\n    --- FAIL: TestFruit_Distribution/test_num__6\
    \ (0.00s)\n        tmpaho8ss24_test.go:48: expected '%!s(int=19)', got '%!s(int=116)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073796
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    var mango int\n    for _, v := range s {\n        if v == 'a'\
    \ || v == 'o' {\n            mango++\n        }\n    }\n    return n - mango\n\
    }\n\nfunc TestFruit_Distribution(t *testing.T) {\n  candidate := fruit_distribution\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"5 apples and 6 oranges\", 19),\
    \ expected: 8 },\n     { actual: candidate(\"5 apples and 6 oranges\", 21), expected:\
    \ 10 },\n     { actual: candidate(\"0 apples and 1 oranges\", 3), expected: 2\
    \ },\n     { actual: candidate(\"1 apples and 0 oranges\", 3), expected: 2 },\n\
    \     { actual: candidate(\"2 apples and 3 oranges\", 100), expected: 95 },\n\
    \     { actual: candidate(\"2 apples and 3 oranges\", 5), expected: 0 },\n   \
    \  { actual: candidate(\"1 apples and 100 oranges\", 120), expected: 19 },\n \
    \  }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\",\
    \ i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmpuad01w7b_test.go:43: expected '%!s(int=8)', got '%!s(int=15)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmpuad01w7b_test.go:43:\
    \ expected '%!s(int=10)', got '%!s(int=17)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmpuad01w7b_test.go:43: expected '%!s(int=2)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmpuad01w7b_test.go:43:\
    \ expected '%!s(int=2)', got '%!s(int=-1)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmpuad01w7b_test.go:43: expected '%!s(int=95)', got '%!s(int=96)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__5 (0.00s)\n        tmpuad01w7b_test.go:43:\
    \ expected '%!s(int=0)', got '%!s(int=1)'\n    --- FAIL: TestFruit_Distribution/test_num__6\
    \ (0.00s)\n        tmpuad01w7b_test.go:43: expected '%!s(int=19)', got '%!s(int=116)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073796
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    // To print results to the standard\
    \ output you can use fmt.Println()\n    // Example: fmt.Println(\"Hello world!\"\
    )\n    return 0\n}\n\nfunc TestFruit_Distribution(t *testing.T) {\n  candidate\
    \ := fruit_distribution\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"5 apples\
    \ and 6 oranges\", 19), expected: 8 },\n     { actual: candidate(\"5 apples and\
    \ 6 oranges\", 21), expected: 10 },\n     { actual: candidate(\"0 apples and 1\
    \ oranges\", 3), expected: 2 },\n     { actual: candidate(\"1 apples and 0 oranges\"\
    , 3), expected: 2 },\n     { actual: candidate(\"2 apples and 3 oranges\", 100),\
    \ expected: 95 },\n     { actual: candidate(\"2 apples and 3 oranges\", 5), expected:\
    \ 0 },\n     { actual: candidate(\"1 apples and 100 oranges\", 120), expected:\
    \ 19 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmpgyu4iiug_test.go:40: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmpgyu4iiug_test.go:40:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmpgyu4iiug_test.go:40: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmpgyu4iiug_test.go:40:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmpgyu4iiug_test.go:40: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmpgyu4iiug_test.go:40:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073796
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    var (\n        apple, orange, mango int\n    )\n    for _, v\
    \ := range s {\n        switch v {\n        case 'a':\n            apple++\n \
    \       case 'o':\n            orange++\n        }\n    }\n    mango = n - (apple\
    \ + orange)\n    return mango\n}\n\nfunc TestFruit_Distribution(t *testing.T)\
    \ {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    5 apples and 6 oranges\", 19), expected: 8 },\n     { actual: candidate(\"5 apples\
    \ and 6 oranges\", 21), expected: 10 },\n     { actual: candidate(\"0 apples and\
    \ 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"1 apples and 0 oranges\"\
    , 3), expected: 2 },\n     { actual: candidate(\"2 apples and 3 oranges\", 100),\
    \ expected: 95 },\n     { actual: candidate(\"2 apples and 3 oranges\", 5), expected:\
    \ 0 },\n     { actual: candidate(\"1 apples and 100 oranges\", 120), expected:\
    \ 19 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmpfwq1m57v_test.go:49: expected '%!s(int=8)', got '%!s(int=15)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmpfwq1m57v_test.go:49:\
    \ expected '%!s(int=10)', got '%!s(int=17)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmpfwq1m57v_test.go:49: expected '%!s(int=2)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmpfwq1m57v_test.go:49:\
    \ expected '%!s(int=2)', got '%!s(int=-1)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmpfwq1m57v_test.go:49: expected '%!s(int=95)', got '%!s(int=96)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__5 (0.00s)\n        tmpfwq1m57v_test.go:49:\
    \ expected '%!s(int=0)', got '%!s(int=1)'\n    --- FAIL: TestFruit_Distribution/test_num__6\
    \ (0.00s)\n        tmpfwq1m57v_test.go:49: expected '%!s(int=19)', got '%!s(int=116)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073796
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    var mango_count int\n    var apple_count int\n    var orange_count\
    \ int\n    for _, char := range s {\n        if char == 'A' {\n            apple_count++\n\
    \        } else if char == 'O' {\n            orange_count++\n        }\n    }\n\
    \    mango_count = n - apple_count - orange_count\n    return mango_count\n}\n\
    \nfunc TestFruit_Distribution(t *testing.T) {\n  candidate := fruit_distribution\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"5 apples and 6 oranges\", 19),\
    \ expected: 8 },\n     { actual: candidate(\"5 apples and 6 oranges\", 21), expected:\
    \ 10 },\n     { actual: candidate(\"0 apples and 1 oranges\", 3), expected: 2\
    \ },\n     { actual: candidate(\"1 apples and 0 oranges\", 3), expected: 2 },\n\
    \     { actual: candidate(\"2 apples and 3 oranges\", 100), expected: 95 },\n\
    \     { actual: candidate(\"2 apples and 3 oranges\", 5), expected: 0 },\n   \
    \  { actual: candidate(\"1 apples and 100 oranges\", 120), expected: 19 },\n \
    \  }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\",\
    \ i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmpoeoft17z_test.go:48: expected '%!s(int=8)', got '%!s(int=19)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmpoeoft17z_test.go:48:\
    \ expected '%!s(int=10)', got '%!s(int=21)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmpoeoft17z_test.go:48: expected '%!s(int=2)', got '%!s(int=3)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmpoeoft17z_test.go:48:\
    \ expected '%!s(int=2)', got '%!s(int=3)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmpoeoft17z_test.go:48: expected '%!s(int=95)', got '%!s(int=100)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__5 (0.00s)\n        tmpoeoft17z_test.go:48:\
    \ expected '%!s(int=0)', got '%!s(int=5)'\n    --- FAIL: TestFruit_Distribution/test_num__6\
    \ (0.00s)\n        tmpoeoft17z_test.go:48: expected '%!s(int=19)', got '%!s(int=120)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073796
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    var apples, oranges, mango int\n    for _, c := range s {\n\
    \        if c == 'a' {\n            apples++\n        } else if c == 'o' {\n \
    \           oranges++\n        }\n    }\n    mango = n - apples - oranges\n  \
    \  return mango\n}\n\nfunc TestFruit_Distribution(t *testing.T) {\n  candidate\
    \ := fruit_distribution\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"5 apples\
    \ and 6 oranges\", 19), expected: 8 },\n     { actual: candidate(\"5 apples and\
    \ 6 oranges\", 21), expected: 10 },\n     { actual: candidate(\"0 apples and 1\
    \ oranges\", 3), expected: 2 },\n     { actual: candidate(\"1 apples and 0 oranges\"\
    , 3), expected: 2 },\n     { actual: candidate(\"2 apples and 3 oranges\", 100),\
    \ expected: 95 },\n     { actual: candidate(\"2 apples and 3 oranges\", 5), expected:\
    \ 0 },\n     { actual: candidate(\"1 apples and 100 oranges\", 120), expected:\
    \ 19 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmpjc88pz25_test.go:46: expected '%!s(int=8)', got '%!s(int=15)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmpjc88pz25_test.go:46:\
    \ expected '%!s(int=10)', got '%!s(int=17)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmpjc88pz25_test.go:46: expected '%!s(int=2)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmpjc88pz25_test.go:46:\
    \ expected '%!s(int=2)', got '%!s(int=-1)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmpjc88pz25_test.go:46: expected '%!s(int=95)', got '%!s(int=96)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__5 (0.00s)\n        tmpjc88pz25_test.go:46:\
    \ expected '%!s(int=0)', got '%!s(int=1)'\n    --- FAIL: TestFruit_Distribution/test_num__6\
    \ (0.00s)\n        tmpjc88pz25_test.go:46: expected '%!s(int=19)', got '%!s(int=116)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.006s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    var a, o, m int\n    for _, c := range s {\n        switch c\
    \ {\n        case 'a':\n            a++\n        case 'o':\n            o++\n\
    \        case 'm':\n            m++\n        }\n    }\n    return n - a - o -\
    \ m\n}\n\nfunc TestFruit_Distribution(t *testing.T) {\n  candidate := fruit_distribution\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"5 apples and 6 oranges\", 19),\
    \ expected: 8 },\n     { actual: candidate(\"5 apples and 6 oranges\", 21), expected:\
    \ 10 },\n     { actual: candidate(\"0 apples and 1 oranges\", 3), expected: 2\
    \ },\n     { actual: candidate(\"1 apples and 0 oranges\", 3), expected: 2 },\n\
    \     { actual: candidate(\"2 apples and 3 oranges\", 100), expected: 95 },\n\
    \     { actual: candidate(\"2 apples and 3 oranges\", 5), expected: 0 },\n   \
    \  { actual: candidate(\"1 apples and 100 oranges\", 120), expected: 19 },\n \
    \  }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\",\
    \ i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmpso5n50i8_test.go:48: expected '%!s(int=8)', got '%!s(int=15)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmpso5n50i8_test.go:48:\
    \ expected '%!s(int=10)', got '%!s(int=17)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmpso5n50i8_test.go:48: expected '%!s(int=2)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmpso5n50i8_test.go:48:\
    \ expected '%!s(int=2)', got '%!s(int=-1)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmpso5n50i8_test.go:48: expected '%!s(int=95)', got '%!s(int=96)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__5 (0.00s)\n        tmpso5n50i8_test.go:48:\
    \ expected '%!s(int=0)', got '%!s(int=1)'\n    --- FAIL: TestFruit_Distribution/test_num__6\
    \ (0.00s)\n        tmpso5n50i8_test.go:48: expected '%!s(int=19)', got '%!s(int=116)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    var sum int\n    for _, v := range s {\n        if v == 'a'\
    \ || v == 'o' {\n            sum++\n        }\n    }\n    return n - sum\n}\n\n\
    func TestFruit_Distribution(t *testing.T) {\n  candidate := fruit_distribution\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"5 apples and 6 oranges\", 19),\
    \ expected: 8 },\n     { actual: candidate(\"5 apples and 6 oranges\", 21), expected:\
    \ 10 },\n     { actual: candidate(\"0 apples and 1 oranges\", 3), expected: 2\
    \ },\n     { actual: candidate(\"1 apples and 0 oranges\", 3), expected: 2 },\n\
    \     { actual: candidate(\"2 apples and 3 oranges\", 100), expected: 95 },\n\
    \     { actual: candidate(\"2 apples and 3 oranges\", 5), expected: 0 },\n   \
    \  { actual: candidate(\"1 apples and 100 oranges\", 120), expected: 19 },\n \
    \  }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\",\
    \ i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmpphci80k8_test.go:43: expected '%!s(int=8)', got '%!s(int=15)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmpphci80k8_test.go:43:\
    \ expected '%!s(int=10)', got '%!s(int=17)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmpphci80k8_test.go:43: expected '%!s(int=2)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmpphci80k8_test.go:43:\
    \ expected '%!s(int=2)', got '%!s(int=-1)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmpphci80k8_test.go:43: expected '%!s(int=95)', got '%!s(int=96)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__5 (0.00s)\n        tmpphci80k8_test.go:43:\
    \ expected '%!s(int=0)', got '%!s(int=1)'\n    --- FAIL: TestFruit_Distribution/test_num__6\
    \ (0.00s)\n        tmpphci80k8_test.go:43: expected '%!s(int=19)', got '%!s(int=116)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073796
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    var a, o, m int\n    for _, c := range s {\n        switch c\
    \ {\n        case 'a':\n            a++\n        case 'o':\n            o++\n\
    \        case 'm':\n            m++\n        }\n    }\n    return n - a - o -\
    \ m\n}\n\nfunc TestFruit_Distribution(t *testing.T) {\n  candidate := fruit_distribution\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"5 apples and 6 oranges\", 19),\
    \ expected: 8 },\n     { actual: candidate(\"5 apples and 6 oranges\", 21), expected:\
    \ 10 },\n     { actual: candidate(\"0 apples and 1 oranges\", 3), expected: 2\
    \ },\n     { actual: candidate(\"1 apples and 0 oranges\", 3), expected: 2 },\n\
    \     { actual: candidate(\"2 apples and 3 oranges\", 100), expected: 95 },\n\
    \     { actual: candidate(\"2 apples and 3 oranges\", 5), expected: 0 },\n   \
    \  { actual: candidate(\"1 apples and 100 oranges\", 120), expected: 19 },\n \
    \  }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\",\
    \ i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmpso5n50i8_test.go:48: expected '%!s(int=8)', got '%!s(int=15)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmpso5n50i8_test.go:48:\
    \ expected '%!s(int=10)', got '%!s(int=17)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmpso5n50i8_test.go:48: expected '%!s(int=2)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmpso5n50i8_test.go:48:\
    \ expected '%!s(int=2)', got '%!s(int=-1)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmpso5n50i8_test.go:48: expected '%!s(int=95)', got '%!s(int=96)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__5 (0.00s)\n        tmpso5n50i8_test.go:48:\
    \ expected '%!s(int=0)', got '%!s(int=1)'\n    --- FAIL: TestFruit_Distribution/test_num__6\
    \ (0.00s)\n        tmpso5n50i8_test.go:48: expected '%!s(int=19)', got '%!s(int=116)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    var mango int\n    var orange int\n    var apple int\n    for\
    \ _, v := range s {\n        if v == 'o' {\n            orange++\n        } else\
    \ if v == 'a' {\n            apple++\n        }\n    }\n    mango = n - orange\
    \ - apple\n    return mango\n}\n\nfunc TestFruit_Distribution(t *testing.T) {\n\
    \  candidate := fruit_distribution\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    5 apples and 6 oranges\", 19), expected: 8 },\n     { actual: candidate(\"5 apples\
    \ and 6 oranges\", 21), expected: 10 },\n     { actual: candidate(\"0 apples and\
    \ 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"1 apples and 0 oranges\"\
    , 3), expected: 2 },\n     { actual: candidate(\"2 apples and 3 oranges\", 100),\
    \ expected: 95 },\n     { actual: candidate(\"2 apples and 3 oranges\", 5), expected:\
    \ 0 },\n     { actual: candidate(\"1 apples and 100 oranges\", 120), expected:\
    \ 19 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmpxj10d625_test.go:48: expected '%!s(int=8)', got '%!s(int=15)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmpxj10d625_test.go:48:\
    \ expected '%!s(int=10)', got '%!s(int=17)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmpxj10d625_test.go:48: expected '%!s(int=2)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmpxj10d625_test.go:48:\
    \ expected '%!s(int=2)', got '%!s(int=-1)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmpxj10d625_test.go:48: expected '%!s(int=95)', got '%!s(int=96)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__5 (0.00s)\n        tmpxj10d625_test.go:48:\
    \ expected '%!s(int=0)', got '%!s(int=1)'\n    --- FAIL: TestFruit_Distribution/test_num__6\
    \ (0.00s)\n        tmpxj10d625_test.go:48: expected '%!s(int=19)', got '%!s(int=116)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073796
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    var apples, oranges, mango int\n    for _, c := range s {\n\
    \        switch c {\n            case 'a': apples++\n            case 'o': oranges++\n\
    \            case 'm': mango++\n        }\n    }\n    return n - apples - oranges\n\
    }\n\nfunc TestFruit_Distribution(t *testing.T) {\n  candidate := fruit_distribution\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"5 apples and 6 oranges\", 19),\
    \ expected: 8 },\n     { actual: candidate(\"5 apples and 6 oranges\", 21), expected:\
    \ 10 },\n     { actual: candidate(\"0 apples and 1 oranges\", 3), expected: 2\
    \ },\n     { actual: candidate(\"1 apples and 0 oranges\", 3), expected: 2 },\n\
    \     { actual: candidate(\"2 apples and 3 oranges\", 100), expected: 95 },\n\
    \     { actual: candidate(\"2 apples and 3 oranges\", 5), expected: 0 },\n   \
    \  { actual: candidate(\"1 apples and 100 oranges\", 120), expected: 19 },\n \
    \  }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\",\
    \ i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmpgxn01i43_test.go:45: expected '%!s(int=8)', got '%!s(int=15)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmpgxn01i43_test.go:45:\
    \ expected '%!s(int=10)', got '%!s(int=17)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmpgxn01i43_test.go:45: expected '%!s(int=2)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmpgxn01i43_test.go:45:\
    \ expected '%!s(int=2)', got '%!s(int=-1)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmpgxn01i43_test.go:45: expected '%!s(int=95)', got '%!s(int=96)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__5 (0.00s)\n        tmpgxn01i43_test.go:45:\
    \ expected '%!s(int=0)', got '%!s(int=1)'\n    --- FAIL: TestFruit_Distribution/test_num__6\
    \ (0.00s)\n        tmpgxn01i43_test.go:45: expected '%!s(int=19)', got '%!s(int=116)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073796
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    var apples, oranges, mango int\n    for _, c := range s {\n\
    \        switch c {\n            case 'a':\n                apples++\n       \
    \     case 'o':\n                oranges++\n            case 'm':\n          \
    \      mango++\n        }\n    }\n    return n - apples - oranges\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp8jespd9q_test.go:48: expected '%!s(int=8)', got '%!s(int=15)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp8jespd9q_test.go:48:\
    \ expected '%!s(int=10)', got '%!s(int=17)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp8jespd9q_test.go:48: expected '%!s(int=2)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp8jespd9q_test.go:48:\
    \ expected '%!s(int=2)', got '%!s(int=-1)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp8jespd9q_test.go:48: expected '%!s(int=95)', got '%!s(int=96)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__5 (0.00s)\n        tmp8jespd9q_test.go:48:\
    \ expected '%!s(int=0)', got '%!s(int=1)'\n    --- FAIL: TestFruit_Distribution/test_num__6\
    \ (0.00s)\n        tmp8jespd9q_test.go:48: expected '%!s(int=19)', got '%!s(int=116)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    var mango int\n    var apple, orange int\n    for _, v := range\
    \ s {\n        if v == 'A' {\n            apple++\n        } else if v == 'O'\
    \ {\n            orange++\n        }\n    }\n    mango = n - apple - orange\n\
    \    return mango\n}\n\nfunc TestFruit_Distribution(t *testing.T) {\n  candidate\
    \ := fruit_distribution\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"5 apples\
    \ and 6 oranges\", 19), expected: 8 },\n     { actual: candidate(\"5 apples and\
    \ 6 oranges\", 21), expected: 10 },\n     { actual: candidate(\"0 apples and 1\
    \ oranges\", 3), expected: 2 },\n     { actual: candidate(\"1 apples and 0 oranges\"\
    , 3), expected: 2 },\n     { actual: candidate(\"2 apples and 3 oranges\", 100),\
    \ expected: 95 },\n     { actual: candidate(\"2 apples and 3 oranges\", 5), expected:\
    \ 0 },\n     { actual: candidate(\"1 apples and 100 oranges\", 120), expected:\
    \ 19 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmpxcqi8wjw_test.go:47: expected '%!s(int=8)', got '%!s(int=19)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmpxcqi8wjw_test.go:47:\
    \ expected '%!s(int=10)', got '%!s(int=21)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmpxcqi8wjw_test.go:47: expected '%!s(int=2)', got '%!s(int=3)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmpxcqi8wjw_test.go:47:\
    \ expected '%!s(int=2)', got '%!s(int=3)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmpxcqi8wjw_test.go:47: expected '%!s(int=95)', got '%!s(int=100)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__5 (0.00s)\n        tmpxcqi8wjw_test.go:47:\
    \ expected '%!s(int=0)', got '%!s(int=5)'\n    --- FAIL: TestFruit_Distribution/test_num__6\
    \ (0.00s)\n        tmpxcqi8wjw_test.go:47: expected '%!s(int=19)', got '%!s(int=120)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073796
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    var apple, orange, mango int\n    for _, v := range s {\n  \
    \      if v == 'a' {\n            apple++\n        } else if v == 'o' {\n    \
    \        orange++\n        } else if v == 'm' {\n            mango++\n       \
    \ }\n    }\n    return n - (apple + orange)\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp34gwgh_k_test.go:47: expected '%!s(int=8)', got '%!s(int=15)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp34gwgh_k_test.go:47:\
    \ expected '%!s(int=10)', got '%!s(int=17)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp34gwgh_k_test.go:47: expected '%!s(int=2)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp34gwgh_k_test.go:47:\
    \ expected '%!s(int=2)', got '%!s(int=-1)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp34gwgh_k_test.go:47: expected '%!s(int=95)', got '%!s(int=96)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__5 (0.00s)\n        tmp34gwgh_k_test.go:47:\
    \ expected '%!s(int=0)', got '%!s(int=1)'\n    --- FAIL: TestFruit_Distribution/test_num__6\
    \ (0.00s)\n        tmp34gwgh_k_test.go:47: expected '%!s(int=19)', got '%!s(int=116)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073796
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    var mango_count int\n    var apple_count int\n    var orange_count\
    \ int\n    for _, c := range s {\n        switch c {\n            case 'a':\n\
    \                apple_count++\n            case 'o':\n                orange_count++\n\
    \        }\n    }\n    mango_count = n - apple_count - orange_count\n    return\
    \ mango_count\n}\n\nfunc TestFruit_Distribution(t *testing.T) {\n  candidate :=\
    \ fruit_distribution\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected\
    \ interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"5 apples and\
    \ 6 oranges\", 19), expected: 8 },\n     { actual: candidate(\"5 apples and 6\
    \ oranges\", 21), expected: 10 },\n     { actual: candidate(\"0 apples and 1 oranges\"\
    , 3), expected: 2 },\n     { actual: candidate(\"1 apples and 0 oranges\", 3),\
    \ expected: 2 },\n     { actual: candidate(\"2 apples and 3 oranges\", 100), expected:\
    \ 95 },\n     { actual: candidate(\"2 apples and 3 oranges\", 5), expected: 0\
    \ },\n     { actual: candidate(\"1 apples and 100 oranges\", 120), expected: 19\
    \ },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num %\
    \ d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmpadpq7qna_test.go:49: expected '%!s(int=8)', got '%!s(int=15)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmpadpq7qna_test.go:49:\
    \ expected '%!s(int=10)', got '%!s(int=17)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmpadpq7qna_test.go:49: expected '%!s(int=2)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmpadpq7qna_test.go:49:\
    \ expected '%!s(int=2)', got '%!s(int=-1)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmpadpq7qna_test.go:49: expected '%!s(int=95)', got '%!s(int=96)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__5 (0.00s)\n        tmpadpq7qna_test.go:49:\
    \ expected '%!s(int=0)', got '%!s(int=1)'\n    --- FAIL: TestFruit_Distribution/test_num__6\
    \ (0.00s)\n        tmpadpq7qna_test.go:49: expected '%!s(int=19)', got '%!s(int=116)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073797
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    var a, o, m int\n    for _, c := range s {\n        switch c\
    \ {\n        case 'a':\n            a++\n        case 'o':\n            o++\n\
    \        case 'm':\n            m++\n        }\n    }\n    return n - a - o -\
    \ m\n}\n\nfunc TestFruit_Distribution(t *testing.T) {\n  candidate := fruit_distribution\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"5 apples and 6 oranges\", 19),\
    \ expected: 8 },\n     { actual: candidate(\"5 apples and 6 oranges\", 21), expected:\
    \ 10 },\n     { actual: candidate(\"0 apples and 1 oranges\", 3), expected: 2\
    \ },\n     { actual: candidate(\"1 apples and 0 oranges\", 3), expected: 2 },\n\
    \     { actual: candidate(\"2 apples and 3 oranges\", 100), expected: 95 },\n\
    \     { actual: candidate(\"2 apples and 3 oranges\", 5), expected: 0 },\n   \
    \  { actual: candidate(\"1 apples and 100 oranges\", 120), expected: 19 },\n \
    \  }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\",\
    \ i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmpso5n50i8_test.go:48: expected '%!s(int=8)', got '%!s(int=15)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmpso5n50i8_test.go:48:\
    \ expected '%!s(int=10)', got '%!s(int=17)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmpso5n50i8_test.go:48: expected '%!s(int=2)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmpso5n50i8_test.go:48:\
    \ expected '%!s(int=2)', got '%!s(int=-1)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmpso5n50i8_test.go:48: expected '%!s(int=95)', got '%!s(int=96)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__5 (0.00s)\n        tmpso5n50i8_test.go:48:\
    \ expected '%!s(int=0)', got '%!s(int=1)'\n    --- FAIL: TestFruit_Distribution/test_num__6\
    \ (0.00s)\n        tmpso5n50i8_test.go:48: expected '%!s(int=19)', got '%!s(int=116)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    var mango_count int\n    var apple_count int\n    var orange_count\
    \ int\n    for _, char := range s {\n        if char == 'a' {\n            apple_count++\n\
    \        } else if char == 'o' {\n            orange_count++\n        }\n    }\n\
    \    mango_count = n - (apple_count + orange_count)\n    return mango_count\n\
    }\n\nfunc TestFruit_Distribution(t *testing.T) {\n  candidate := fruit_distribution\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"5 apples and 6 oranges\", 19),\
    \ expected: 8 },\n     { actual: candidate(\"5 apples and 6 oranges\", 21), expected:\
    \ 10 },\n     { actual: candidate(\"0 apples and 1 oranges\", 3), expected: 2\
    \ },\n     { actual: candidate(\"1 apples and 0 oranges\", 3), expected: 2 },\n\
    \     { actual: candidate(\"2 apples and 3 oranges\", 100), expected: 95 },\n\
    \     { actual: candidate(\"2 apples and 3 oranges\", 5), expected: 0 },\n   \
    \  { actual: candidate(\"1 apples and 100 oranges\", 120), expected: 19 },\n \
    \  }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\",\
    \ i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmphefjc6yk_test.go:48: expected '%!s(int=8)', got '%!s(int=15)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmphefjc6yk_test.go:48:\
    \ expected '%!s(int=10)', got '%!s(int=17)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmphefjc6yk_test.go:48: expected '%!s(int=2)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmphefjc6yk_test.go:48:\
    \ expected '%!s(int=2)', got '%!s(int=-1)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmphefjc6yk_test.go:48: expected '%!s(int=95)', got '%!s(int=96)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__5 (0.00s)\n        tmphefjc6yk_test.go:48:\
    \ expected '%!s(int=0)', got '%!s(int=1)'\n    --- FAIL: TestFruit_Distribution/test_num__6\
    \ (0.00s)\n        tmphefjc6yk_test.go:48: expected '%!s(int=19)', got '%!s(int=116)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073797
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    // To print results to the standard\
    \ output you can use fmt.Println()\n    // Example: fmt.Println(\"Hello world!\"\
    )\n    return 0\n}\n\nfunc TestFruit_Distribution(t *testing.T) {\n  candidate\
    \ := fruit_distribution\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"5 apples\
    \ and 6 oranges\", 19), expected: 8 },\n     { actual: candidate(\"5 apples and\
    \ 6 oranges\", 21), expected: 10 },\n     { actual: candidate(\"0 apples and 1\
    \ oranges\", 3), expected: 2 },\n     { actual: candidate(\"1 apples and 0 oranges\"\
    , 3), expected: 2 },\n     { actual: candidate(\"2 apples and 3 oranges\", 100),\
    \ expected: 95 },\n     { actual: candidate(\"2 apples and 3 oranges\", 5), expected:\
    \ 0 },\n     { actual: candidate(\"1 apples and 100 oranges\", 120), expected:\
    \ 19 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmpgyu4iiug_test.go:40: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmpgyu4iiug_test.go:40:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmpgyu4iiug_test.go:40: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmpgyu4iiug_test.go:40:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmpgyu4iiug_test.go:40: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmpgyu4iiug_test.go:40:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073796
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    var (\n        apples, oranges, mango int\n    )\n    for _,\
    \ c := range s {\n        if c == 'A' {\n            apples++\n        } else\
    \ if c == 'O' {\n            oranges++\n        } else if c == 'M' {\n       \
    \     mango++\n        }\n    }\n    return n - apples - oranges\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmpsw2_b6qv_test.go:49: expected '%!s(int=8)', got '%!s(int=19)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmpsw2_b6qv_test.go:49:\
    \ expected '%!s(int=10)', got '%!s(int=21)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmpsw2_b6qv_test.go:49: expected '%!s(int=2)', got '%!s(int=3)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmpsw2_b6qv_test.go:49:\
    \ expected '%!s(int=2)', got '%!s(int=3)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmpsw2_b6qv_test.go:49: expected '%!s(int=95)', got '%!s(int=100)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__5 (0.00s)\n        tmpsw2_b6qv_test.go:49:\
    \ expected '%!s(int=0)', got '%!s(int=5)'\n    --- FAIL: TestFruit_Distribution/test_num__6\
    \ (0.00s)\n        tmpsw2_b6qv_test.go:49: expected '%!s(int=19)', got '%!s(int=120)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073797
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    var a, o, m int\n    for _, c := range s {\n        switch c\
    \ {\n        case 'a':\n            a++\n        case 'o':\n            o++\n\
    \        case 'm':\n            m++\n        }\n    }\n    return n - a - o -\
    \ m\n}\n\nfunc TestFruit_Distribution(t *testing.T) {\n  candidate := fruit_distribution\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"5 apples and 6 oranges\", 19),\
    \ expected: 8 },\n     { actual: candidate(\"5 apples and 6 oranges\", 21), expected:\
    \ 10 },\n     { actual: candidate(\"0 apples and 1 oranges\", 3), expected: 2\
    \ },\n     { actual: candidate(\"1 apples and 0 oranges\", 3), expected: 2 },\n\
    \     { actual: candidate(\"2 apples and 3 oranges\", 100), expected: 95 },\n\
    \     { actual: candidate(\"2 apples and 3 oranges\", 5), expected: 0 },\n   \
    \  { actual: candidate(\"1 apples and 100 oranges\", 120), expected: 19 },\n \
    \  }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\",\
    \ i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmpso5n50i8_test.go:48: expected '%!s(int=8)', got '%!s(int=15)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmpso5n50i8_test.go:48:\
    \ expected '%!s(int=10)', got '%!s(int=17)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmpso5n50i8_test.go:48: expected '%!s(int=2)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmpso5n50i8_test.go:48:\
    \ expected '%!s(int=2)', got '%!s(int=-1)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmpso5n50i8_test.go:48: expected '%!s(int=95)', got '%!s(int=96)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__5 (0.00s)\n        tmpso5n50i8_test.go:48:\
    \ expected '%!s(int=0)', got '%!s(int=1)'\n    --- FAIL: TestFruit_Distribution/test_num__6\
    \ (0.00s)\n        tmpso5n50i8_test.go:48: expected '%!s(int=19)', got '%!s(int=116)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    // To print results to the standard\
    \ output you can use fmt.Println()\n    // Example: fmt.Println(\"Hello world!\"\
    )\n    return 0\n}\n\nfunc TestFruit_Distribution(t *testing.T) {\n  candidate\
    \ := fruit_distribution\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"5 apples\
    \ and 6 oranges\", 19), expected: 8 },\n     { actual: candidate(\"5 apples and\
    \ 6 oranges\", 21), expected: 10 },\n     { actual: candidate(\"0 apples and 1\
    \ oranges\", 3), expected: 2 },\n     { actual: candidate(\"1 apples and 0 oranges\"\
    , 3), expected: 2 },\n     { actual: candidate(\"2 apples and 3 oranges\", 100),\
    \ expected: 95 },\n     { actual: candidate(\"2 apples and 3 oranges\", 5), expected:\
    \ 0 },\n     { actual: candidate(\"1 apples and 100 oranges\", 120), expected:\
    \ 19 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmpgyu4iiug_test.go:40: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmpgyu4iiug_test.go:40:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmpgyu4iiug_test.go:40: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmpgyu4iiug_test.go:40:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmpgyu4iiug_test.go:40: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmpgyu4iiug_test.go:40:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073796
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    var mango int\n    var apple, orange int\n    for _, v := range\
    \ s {\n        if v == 'a' {\n            apple++\n        } else if v == 'o'\
    \ {\n            orange++\n        }\n    }\n    mango = n - apple - orange\n\
    \    return mango\n}\n\nfunc TestFruit_Distribution(t *testing.T) {\n  candidate\
    \ := fruit_distribution\n\ttype test struct {\n\t\tactual   interface{}\n\t\t\
    expected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"5 apples\
    \ and 6 oranges\", 19), expected: 8 },\n     { actual: candidate(\"5 apples and\
    \ 6 oranges\", 21), expected: 10 },\n     { actual: candidate(\"0 apples and 1\
    \ oranges\", 3), expected: 2 },\n     { actual: candidate(\"1 apples and 0 oranges\"\
    , 3), expected: 2 },\n     { actual: candidate(\"2 apples and 3 oranges\", 100),\
    \ expected: 95 },\n     { actual: candidate(\"2 apples and 3 oranges\", 5), expected:\
    \ 0 },\n     { actual: candidate(\"1 apples and 100 oranges\", 120), expected:\
    \ 19 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmptupoe_ue_test.go:47: expected '%!s(int=8)', got '%!s(int=15)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmptupoe_ue_test.go:47:\
    \ expected '%!s(int=10)', got '%!s(int=17)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmptupoe_ue_test.go:47: expected '%!s(int=2)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmptupoe_ue_test.go:47:\
    \ expected '%!s(int=2)', got '%!s(int=-1)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmptupoe_ue_test.go:47: expected '%!s(int=95)', got '%!s(int=96)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__5 (0.00s)\n        tmptupoe_ue_test.go:47:\
    \ expected '%!s(int=0)', got '%!s(int=1)'\n    --- FAIL: TestFruit_Distribution/test_num__6\
    \ (0.00s)\n        tmptupoe_ue_test.go:47: expected '%!s(int=19)', got '%!s(int=116)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073797
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    var oranges, apples, mango int\n    for _, c := range s {\n\
    \        if c == 'o' {\n            oranges++\n        } else if c == 'a' {\n\
    \            apples++\n        } else if c == 'm' {\n            mango++\n   \
    \     }\n    }\n    return n - oranges - apples\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmpiqtjcay0_test.go:47: expected '%!s(int=8)', got '%!s(int=15)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmpiqtjcay0_test.go:47:\
    \ expected '%!s(int=10)', got '%!s(int=17)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmpiqtjcay0_test.go:47: expected '%!s(int=2)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmpiqtjcay0_test.go:47:\
    \ expected '%!s(int=2)', got '%!s(int=-1)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmpiqtjcay0_test.go:47: expected '%!s(int=95)', got '%!s(int=96)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__5 (0.00s)\n        tmpiqtjcay0_test.go:47:\
    \ expected '%!s(int=0)', got '%!s(int=1)'\n    --- FAIL: TestFruit_Distribution/test_num__6\
    \ (0.00s)\n        tmpiqtjcay0_test.go:47: expected '%!s(int=19)', got '%!s(int=116)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    var a, o, m int\n    for _, c := range s {\n        switch c\
    \ {\n        case 'a':\n            a++\n        case 'o':\n            o++\n\
    \        case 'm':\n            m++\n        }\n    }\n    return n - a - o -\
    \ m\n}\n\nfunc TestFruit_Distribution(t *testing.T) {\n  candidate := fruit_distribution\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"5 apples and 6 oranges\", 19),\
    \ expected: 8 },\n     { actual: candidate(\"5 apples and 6 oranges\", 21), expected:\
    \ 10 },\n     { actual: candidate(\"0 apples and 1 oranges\", 3), expected: 2\
    \ },\n     { actual: candidate(\"1 apples and 0 oranges\", 3), expected: 2 },\n\
    \     { actual: candidate(\"2 apples and 3 oranges\", 100), expected: 95 },\n\
    \     { actual: candidate(\"2 apples and 3 oranges\", 5), expected: 0 },\n   \
    \  { actual: candidate(\"1 apples and 100 oranges\", 120), expected: 19 },\n \
    \  }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\",\
    \ i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmpso5n50i8_test.go:48: expected '%!s(int=8)', got '%!s(int=15)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmpso5n50i8_test.go:48:\
    \ expected '%!s(int=10)', got '%!s(int=17)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmpso5n50i8_test.go:48: expected '%!s(int=2)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmpso5n50i8_test.go:48:\
    \ expected '%!s(int=2)', got '%!s(int=-1)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmpso5n50i8_test.go:48: expected '%!s(int=95)', got '%!s(int=96)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__5 (0.00s)\n        tmpso5n50i8_test.go:48:\
    \ expected '%!s(int=0)', got '%!s(int=1)'\n    --- FAIL: TestFruit_Distribution/test_num__6\
    \ (0.00s)\n        tmpso5n50i8_test.go:48: expected '%!s(int=19)', got '%!s(int=116)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    var count int\n    for _, c := range s {\n        if c == 'a'\
    \ || c == 'o' {\n            count++\n        }\n    }\n    return n - count\n\
    }\n\nfunc TestFruit_Distribution(t *testing.T) {\n  candidate := fruit_distribution\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate(\"5 apples and 6 oranges\", 19),\
    \ expected: 8 },\n     { actual: candidate(\"5 apples and 6 oranges\", 21), expected:\
    \ 10 },\n     { actual: candidate(\"0 apples and 1 oranges\", 3), expected: 2\
    \ },\n     { actual: candidate(\"1 apples and 0 oranges\", 3), expected: 2 },\n\
    \     { actual: candidate(\"2 apples and 3 oranges\", 100), expected: 95 },\n\
    \     { actual: candidate(\"2 apples and 3 oranges\", 5), expected: 0 },\n   \
    \  { actual: candidate(\"1 apples and 100 oranges\", 120), expected: 19 },\n \
    \  }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\",\
    \ i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
    %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
    \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp5qw46lrv_test.go:43: expected '%!s(int=8)', got '%!s(int=15)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp5qw46lrv_test.go:43:\
    \ expected '%!s(int=10)', got '%!s(int=17)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp5qw46lrv_test.go:43: expected '%!s(int=2)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp5qw46lrv_test.go:43:\
    \ expected '%!s(int=2)', got '%!s(int=-1)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp5qw46lrv_test.go:43: expected '%!s(int=95)', got '%!s(int=96)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__5 (0.00s)\n        tmp5qw46lrv_test.go:43:\
    \ expected '%!s(int=0)', got '%!s(int=1)'\n    --- FAIL: TestFruit_Distribution/test_num__6\
    \ (0.00s)\n        tmp5qw46lrv_test.go:43: expected '%!s(int=19)', got '%!s(int=116)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n"
  timestamp: 1660073797
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    var mango int\n    var apple int\n    var orange int\n    for\
    \ _, v := range s {\n        if v == 'A' {\n            apple++\n        } else\
    \ if v == 'O' {\n            orange++\n        }\n    }\n    mango = n - (apple\
    \ + orange)\n    return mango\n}\n\nfunc TestFruit_Distribution(t *testing.T)\
    \ {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    5 apples and 6 oranges\", 19), expected: 8 },\n     { actual: candidate(\"5 apples\
    \ and 6 oranges\", 21), expected: 10 },\n     { actual: candidate(\"0 apples and\
    \ 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"1 apples and 0 oranges\"\
    , 3), expected: 2 },\n     { actual: candidate(\"2 apples and 3 oranges\", 100),\
    \ expected: 95 },\n     { actual: candidate(\"2 apples and 3 oranges\", 5), expected:\
    \ 0 },\n     { actual: candidate(\"1 apples and 100 oranges\", 120), expected:\
    \ 19 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp4fano8al_test.go:48: expected '%!s(int=8)', got '%!s(int=19)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp4fano8al_test.go:48:\
    \ expected '%!s(int=10)', got '%!s(int=21)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp4fano8al_test.go:48: expected '%!s(int=2)', got '%!s(int=3)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp4fano8al_test.go:48:\
    \ expected '%!s(int=2)', got '%!s(int=3)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp4fano8al_test.go:48: expected '%!s(int=95)', got '%!s(int=100)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__5 (0.00s)\n        tmp4fano8al_test.go:48:\
    \ expected '%!s(int=0)', got '%!s(int=5)'\n    --- FAIL: TestFruit_Distribution/test_num__6\
    \ (0.00s)\n        tmp4fano8al_test.go:48: expected '%!s(int=19)', got '%!s(int=120)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073797
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // Write your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp7ht99i3n_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp7ht99i3n_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    var orange, apple, mango int\n    for _, v := range s {\n  \
    \      if v == 'o' {\n            orange++\n        } else if v == 'a' {\n   \
    \         apple++\n        } else if v == 'm' {\n            mango++\n       \
    \ }\n    }\n    return n - orange - apple - mango\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmpne41kkhx_test.go:47: expected '%!s(int=8)', got '%!s(int=15)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmpne41kkhx_test.go:47:\
    \ expected '%!s(int=10)', got '%!s(int=17)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmpne41kkhx_test.go:47: expected '%!s(int=2)', got '%!s(int=-1)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmpne41kkhx_test.go:47:\
    \ expected '%!s(int=2)', got '%!s(int=-1)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmpne41kkhx_test.go:47: expected '%!s(int=95)', got '%!s(int=96)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__5 (0.00s)\n        tmpne41kkhx_test.go:47:\
    \ expected '%!s(int=0)', got '%!s(int=1)'\n    --- FAIL: TestFruit_Distribution/test_num__6\
    \ (0.00s)\n        tmpne41kkhx_test.go:47: expected '%!s(int=19)', got '%!s(int=116)'\n\
    FAIL\nFAIL\tcommand-line-arguments\t0.005s\nFAIL\n"
  timestamp: 1660073797
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    return 0\n}\n\nfunc TestFruit_Distribution(t *testing.T) {\n\
    \  candidate := fruit_distribution\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\
    5 apples and 6 oranges\", 19), expected: 8 },\n     { actual: candidate(\"5 apples\
    \ and 6 oranges\", 21), expected: 10 },\n     { actual: candidate(\"0 apples and\
    \ 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"1 apples and 0 oranges\"\
    , 3), expected: 2 },\n     { actual: candidate(\"2 apples and 3 oranges\", 100),\
    \ expected: 95 },\n     { actual: candidate(\"2 apples and 3 oranges\", 5), expected:\
    \ 0 },\n     { actual: candidate(\"1 apples and 100 oranges\", 120), expected:\
    \ 19 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
    \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) !=\
    \ fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\"\
    , tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmpqgsngn1f_test.go:37: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmpqgsngn1f_test.go:37:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmpqgsngn1f_test.go:37: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmpqgsngn1f_test.go:37:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmpqgsngn1f_test.go:37: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmpqgsngn1f_test.go:37:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.004s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073794
- exit_code: 1
  program: "package fruit_distribution_test\n\nimport (\n    \"testing\"\n    \"fmt\"\
    \n)\n\n// In this task, you will be given a string that represents a number of\
    \ apples and oranges \n// that are distributed in a basket of fruit this basket\
    \ contains \n// apples, oranges, and mango fruits. Given the string that represents\
    \ the total number of \n// the oranges and apples and an integer that represent\
    \ the total number of the fruits \n// in the basket return the number of the mango\
    \ fruits in the basket.\n// for examble:\nfunc fruit_distribution(s string, n\
    \ int) int {\n    // your code here\n    return 0\n}\n\nfunc TestFruit_Distribution(t\
    \ *testing.T) {\n  candidate := fruit_distribution\n\ttype test struct {\n\t\t\
    actual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n   \
    \  { actual: candidate(\"5 apples and 6 oranges\", 19), expected: 8 },\n     {\
    \ actual: candidate(\"5 apples and 6 oranges\", 21), expected: 10 },\n     { actual:\
    \ candidate(\"0 apples and 1 oranges\", 3), expected: 2 },\n     { actual: candidate(\"\
    1 apples and 0 oranges\", 3), expected: 2 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 100), expected: 95 },\n     { actual: candidate(\"2 apples\
    \ and 3 oranges\", 5), expected: 0 },\n     { actual: candidate(\"1 apples and\
    \ 100 oranges\", 120), expected: 19 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: Exception
  stderr: ''
  stdout: "--- FAIL: TestFruit_Distribution (0.00s)\n    --- FAIL: TestFruit_Distribution/test_num__0\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=8)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__1 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=10)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__2\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=2)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__3 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=2)', got '%!s(int=0)'\n    --- FAIL: TestFruit_Distribution/test_num__4\
    \ (0.00s)\n        tmp0u26xssx_test.go:38: expected '%!s(int=95)', got '%!s(int=0)'\n\
    \    --- FAIL: TestFruit_Distribution/test_num__6 (0.00s)\n        tmp0u26xssx_test.go:38:\
    \ expected '%!s(int=19)', got '%!s(int=0)'\nFAIL\nFAIL\tcommand-line-arguments\t\
    0.003s\nFAIL\n"
  timestamp: 1660073794

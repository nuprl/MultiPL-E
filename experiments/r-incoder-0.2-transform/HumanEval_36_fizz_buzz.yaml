name: HumanEval_36_fizz_buzz
language: r
prompt: "# Return the number of times the digit 7 appears in integers less than n\
  \ which are divisible by 11 or 13.\n# >>> fizz_buzz(50)\n# 0\n# >>> fizz_buzz(78)\n\
  # 2\n# >>> fizz_buzz(79)\n# 3\nfizz_buzz <- function(n) {"
tests: "test_humaneval <- function() {\ncandidate <- fizz_buzz\n    if(!identical(candidate(50),\
  \ 0)){quit('no', 1)}\n    if(!identical(candidate(78), 2)){quit('no', 1)}\n    if(!identical(candidate(79),\
  \ 3)){quit('no', 1)}\n    if(!identical(candidate(100), 3)){quit('no', 1)}\n   \
  \ if(!identical(candidate(200), 6)){quit('no', 1)}\n    if(!identical(candidate(4000),\
  \ 192)){quit('no', 1)}\n    if(!identical(candidate(10000), 639)){quit('no', 1)}\n\
  \    if(!identical(candidate(100000), 8026)){quit('no', 1)}\n}\ntest_humaneval()"
completions: ["\n  n <- n\n  return(\n    sum(\n      ifelse(\n        n %% 11 ==\
    \ 0 & n %% 13 == 0,\n        0,\n        ifelse(\n          n %% 11 == 0 | n %%\
    \ 13 == 0,\n          1,\n          ifelse(\n            n %% 11 == 1 & n %% 13\
    \ == 0,\n            2,\n            ifelse(\n              n %% 11 == 1 | n %%\
    \ 13 == 0,\n              3,\n              ifelse(\n                n %% 11 ==\
    \ 2 & n %% 13 == 0,\n                4,\n                ifelse(\n           \
    \       n %% 11 == 2 | n %% 13 == 0,\n                  5,\n                 \
    \ ifelse(\n                    n %% 11 == 3 & n %% 13 == 0,\n                \
    \    6,\n                    ifelse(\n                      n %% 11 == 3 | n %%\
    \ 13 == 0,\n                      7,\n                      ifelse(\n        \
    \                n %% 11 == 4 & n %% 13 == 0,\n                        8,\n  \
    \                      ifelse(\n                          n %% 11 == 4 | n %%\
    \ 13 == 0,\n                          9,\n                          ifelse(\n\
    \                            n %% 11 == 5 & n %% 13 == 0,\n                  \
    \          10,\n                            ifelse(\n                        \
    \      n %% 11 == 5 | n %% 13 == 0,\n                              11,\n     \
    \                         ifelse(\n                                n %% 11 ==\
    \ 6 & n %% 13 == 0,\n                                12,\n                   \
    \             ifelse(\n                                  n %% 11 == 6 | n %% 13\
    \ == 0,\n                                  13,\n                             \
    \     ifelse(\n                                    n %% 11 == 7 & n %% 13 == 0,\n\
    \                                    14,\n                                   \
    \ ifelse(\n                                      n %% 11 == 7 | n %% 13 == 0,\n\
    \                                      15,\n                                 \
    \     ifelse(\n                                        n %% 11 == 8 & n %% 13\
    \ == 0,\n                                        16,\n                       \
    \                 ifelse(\n                                          n %% 11 ==\
    \ 8 | n %% 13 == 0,\n                                          17,\n         \
    \                                 ifelse(\n                                  \
    \          n %% 11 == 9 & n %% 13 == 0,\n                                    \
    \        18,\n                                            ifelse(\n          \
    \                                    n %% 11 == 9 | n %% 13 == 0,\n          \
    \                                    19,\n                                   \
    \           ifelse(\n                                                n %% 11 ==\
    \ 10 & n %% 13 == 0,\n                                                20,\n  \
    \                                              ifelse(\n                     \
    \                             n %% 11 == 10 | n %% 13 == 0,\n                \
    \                                  21,\n                                     \
    \             ifelse(\n                                                    n %%\
    \ 11 == 11 & n %% 13 == 0,\n                                                 \
    \   22,\n                                                    ifelse(\n       \
    \                                               n %% 11 == 11 | n %% 13 == 0,\n\
    \                                                      23,\n                 \
    \                                     ifelse(\n                              \
    \                          n %% 11 == 12 & n %% 13", "\n  n <- as.integer(n)\n\
    \  if(n %% 11 == 0 | n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 1) {\n\
    \    return(1)\n  }\n  if(n %% 13 == 1) {\n    return(2)\n  }\n  if(n %% 11 ==\
    \ 2 | n %% 13 == 2) {\n    return(3)\n  }\n  if(n %% 11 == 3 | n %% 13 == 3) {\n\
    \    return(4)\n  }\n  if(n %% 11 == 4 | n %% 13 == 4) {\n    return(5)\n  }\n\
    \  if(n %% 11 == 5 | n %% 13 == 5) {\n    return(6)\n  }\n  if(n %% 11 == 6 |\
    \ n %% 13 == 6) {\n    return(7)\n  }\n  if(n %% 11 == 7 | n %% 13 == 7) {\n \
    \   return(8)\n  }\n  if(n %% 11 == 8 | n %% 13 == 8) {\n    return(9)\n  }\n\
    \  if(n %% 11 == 9 | n %% 13 == 9) {\n    return(10)\n  }\n  if(n %% 11 == 10\
    \ | n %% 13 == 10) {\n    return(11)\n  }\n  if(n %% 11 == 11 | n %% 13 == 11)\
    \ {\n    return(12)\n  }\n  if(n %% 11 == 12 | n %% 13 == 12) {\n    return(13)\n\
    \  }\n  if(n %% 11 == 13 | n %% 13 == 13) {\n    return(14)\n  }\n}\n</cell>\n\
    <cell>", "\n  n <- as.integer(n)\n  if(n %% 11 == 0 | n %% 13 == 0) {\n    return(0)\n\
    \  }\n  if(n %% 11 != 0) {\n    return(n %% 11)\n  }\n  if(n %% 13 != 0) {\n \
    \   return(n %% 13)\n  }\n  return(n %% 11)\n}\n", "\n  n <- as.integer(n)\n \
    \ if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0) return(1)\n  if(n%%13==0)\
    \ return(2)\n  return(NA)\n}\n\nfizz_buzz(50)", "\n  n <- as.integer(n)\n  if(n%%11==0\
    \ || n%%13==0) return(0)\n  return(as.integer(n%%11) + as.integer(n%%13))\n}\n\
    </cell>\n<cell>\nfizz_buzz(50)\n</cell>\n<cell>\nfizz_buzz(78)\n</cell>\n<cell>\n\
    fizz_buzz(79)\n</cell>\n<cell>\nfizz_buzz(100)\n</cell>\n<cell>\nfizz_buzz(1000)\n\
    </cell>\n<cell>\nfizz_buzz(10000)\n</cell>\n<cell>\nfizz_buzz(100000)\n</cell>\n\
    <cell>\nfizz_buzz(1000000)\n</cell>\n<cell>\nfizz_buzz(10000000)\n</cell>\n<cell>\n\
    fizz_buzz(100000000)\n</cell>\n<cell>\nfizz_buzz(1000000000)\n</cell>\n<cell>\n\
    fizz_buzz(10000000000)\n</cell>\n<cell>\nfizz_buzz(100000000000)\n</cell>\n<cell>\n\
    fizz_buzz(1000000000000)\n</cell>\n<cell>\nfizz_buzz(10000000000000)\n</cell>\n\
    <cell>\nfizz_buzz(100000000000000)\n</cell>\n<cell>\nfizz_buzz(1000000000000000)\n\
    </cell>\n<cell>\nfizz_buzz(10000000000000000)\n</cell>\n<cell>\nfizz_buzz(100000000000000000)\n\
    </cell>\n<cell>\nfizz_buzz(1000000000000000000)\n</cell>\n<cell>\nfizz_buzz(10000000000000000000)\n\
    </cell>\n<cell>\nfizz_buzz(1000000000000000000)\n</cell>\n<cell>\nfizz_buzz(10000000000000000000)\n\
    </cell>\n<cell>\nfizz_buzz(100000000000000000000)\n</cell>\n<cell>\nfizz_buzz(1000000000000000000000)\n\
    </cell>\n<cell>\nfizz_buzz(10000000000000000000000)\n</cell>\n<", "\n  n <- as.integer(n)\n\
    \  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 &\
    \ n %% 13 != 0) {\n    return(1)\n  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n \
    \   return(2)\n  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  }\n\
    }\n</code>\n<|/ a |>\n<| c |>\nThanks for your answer. Your code works perfectly\
    \ for numbers divisible by 11 and 13, but for numbers divisible by both 11 and\
    \ 13 it returns \"2\" instead of \"3\".\n<|/ c |>\n<| c |>\nI updated my answer\
    \ to include a solution for divisible by both 11 and 13. Hope this helps!\n<|/\
    \ c |>\n<| c |>\nThanks for your answer. Your code works perfectly for numbers\
    \ divisible by 11 and 13, but for numbers divisible by both 11 and 13 it returns\
    \ \"2\" instead of \"3\".\n<|/ c |>\n<| c |>\nI updated my answer to include a\
    \ solution for divisible by both 11 and 13. Hope this helps!\n<|/ c |>\n<| a tags=r,fizzbuzz\
    \ |>\n<code>\nfizzbuzz <- function(n) {\n  if(n %% 11 == 0 & n %% 13 == 0) {\n\
    \    return(0)\n  }\n  if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n  }\n\
    \  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n  }\n  if(n %% 11 != 0 &\
    \ n %% 13 != 0) {\n    return(3)\n  }\n}\n</code>\n<|/ a dscore=3 |>\n<| a dscore=3\
    \ |>\n<code>\nfizzbuzz <- function(n) {\n  if(n %% 11 == 0 & n %% 13 == 0) {\n\
    \    return(0)\n  }\n  if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n  }\n\
    \  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n  }\n  if(n %% 11 != 0 &\
    \ n %% 13 != 0) {\n    return(3)\n  }\n}\n</code>\n<|/ a tags=r,fizzbuzz |>\n\
    <| a tags=r,fizzbuzz |>\n<code>\nfizzbuzz <- function(n) {\n  if(n %% 11 == 0\
    \ & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% ", "\n  n <- n\n  if(n %% 11\
    \ == 0) return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n - 1))\n\
    }\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2 |>\n<code>\nfizz_buzz <- function(n)\
    \ {\n  n <- n\n  if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n\
    \ - 1))\n}\n</code>\n<|/ a tags=r,recursion,fizzbuzz |>\n<| a |>\n<code>\nfizz_buzz\
    \ <- function(n) {\n  n <- n\n  if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0)\
    \ return(2)\n  return(fizz_buzz(n - 1))\n}\n</code>\n<|/ a tags=r,recursion,fizzbuzz\
    \ dscore=2 |>\n<| a tags=r,recursion,fizzbuzz |>\n<code>\nfizz_buzz <- function(n)\
    \ {\n  n <- n\n  if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n\
    \ - 1))\n}\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2 |>\n<code>\nfizz_buzz <-\
    \ function(n) {\n  n <- n\n  if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n\
    \  return(fizz_buzz(n - 1))\n}\n</code>\n<|/ a tags=r,recursion,fizzbuzz |>\n\
    <| a dscore=2 |>\n<code>\nfizz_buzz <- function(n) {\n  n <- n\n  if(n %% 11 ==\
    \ 0) return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n - 1))\n}\n\
    </code>\n<|/ a tags=r,recursion,fizzbuzz |>\n<| a tags=r,recursion,fizzbuzz |>\n\
    <code>\nfizz_buzz <- function(n) {\n  n <- n\n  if(n %% 11 == 0) return(0)\n \
    \ if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n - 1))\n}\n</code>\n<|/ a dscore=2\
    \ |>\n<| a tags=r,recursion,fizzbuzz ", "\n  n <- as.integer(n)\n  n <- ifelse(n\
    \ %% 11 == 0 | n %% 13 == 0, n, 0)\n  n <- ifelse(n %% 11 == 0, n %% 13, n %%\
    \ 11)\n  n <- ifelse(n %% 13 == 0, n %% 11, n %% 13)\n  n <- ifelse(n %% 11 ==\
    \ 0, n %% 13, n %% 11)\n  n <- ifelse(n %% 13 == 0, n %% 11, n %% 13)\n  n <-\
    \ ifelse(n %% 11 == 0, n %% 13, n %% 11)\n  n <- ifelse(n %% 13 == 0, n %% 11,\
    \ n %% 13)\n  n <- ifelse(n %% 11 == 0, n %% 13, n %% 11)\n  n <- ifelse(n %%\
    \ 13 == 0, n %% 11, n %% 13)\n  n <- ifelse(n %% 11 == 0, n %% 13, n %% 11)\n\
    \  n <- ifelse(n %% 13 == 0, n %% 11, n %% 13)\n  n <- ifelse(n %% 11 == 0, n\
    \ %% 13, n %% 11)\n  n <- ifelse(n %% 13 == 0, n %% 11, n %% 13)\n  n <- ifelse(n\
    \ %% 11 == 0, n %% 13, n %% 11)\n  n <- ifelse(n %% 13 == 0, n %% 11, n %% 13)\n\
    \  n <- ifelse(n %% 11 == 0, n %% 13, n %% 11)\n  n <- ifelse(n %% 13 == 0, n\
    \ %% 11, n %% 13)\n  n <- ifelse(n %% 11 == 0, n %% 13, n %% 11)\n  n <- ifelse(n\
    \ %% 13 == 0, n %% 11, n %% 13)\n  n <- ifelse(n %% 11 == 0, n %% 13, n %% 11)\n\
    \  n <- ifelse(n %% 13 == 0, n %% 11, n %% 13)\n  n <- ifelse(n %% 11 == 0, n\
    \ %% 13, n %% 11)\n  n <- ifelse(n %% 13 == 0, n %% 11, n %% 13)\n  n <- ifelse(n\
    \ %% 11 == 0, n %% 13, n %% 11)\n  n <- ifelse(n %% 13 == 0, n %% 11, n %% 13)\n\
    \  n <- ifelse(n %% 11 == 0, n %% 13, n %% 11)\n  n <- ifelse(n %% 13 == 0, n\
    \ %% 11, n %% 13)\n  n <- ifelse(n %% 11 == 0, n %% 13, n ", "\n  n <- as.integer(n)\n\
    \  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0) return(1)\n  if(n%%13==0)\
    \ return(2)\n  return(3)\n}\n</cell>\n<cell>\nfizz_buzz(50)\n</cell>\n<cell>\n\
    fizz_buzz(78)\n</cell>\n<cell>\nfizz_buzz(79)\n</cell>\n<text>\nThe function above\
    \ is called a predicate function. It is a function that returns either TRUE or\
    \ FALSE. Predicates are functions that return TRUE/FALSE.\n\nA predicate function\
    \ is called a predicate because it returns a boolean value that indicates whether\
    \ or not the condition is satisfied. Predicates are functions that return TRUE/FALSE.\n\
    \nA predicate function is called a predicate because it returns a boolean value\
    \ that indicates whether or not the condition is satisfied. Predicates are functions\
    \ that return TRUE/FALSE.\n\nA predicate function is called a predicate because\
    \ it returns a boolean value that indicates whether or not the condition is satisfied.\
    \ Predicates are functions that return TRUE/FALSE.\n\nA predicate function is\
    \ called a predicate because it returns a boolean value that indicates whether\
    \ or not the condition is satisfied. Predicates are functions that return TRUE/FALSE.\n\
    \nA predicate function is called a predicate because it returns a boolean value\
    \ that indicates whether or not the condition is satisfied. Predicates are functions\
    \ that return TRUE/FALSE.\n\nA predicate function is called a predicate because\
    \ it returns a boolean value that indicates whether or not the condition is satisfied.\
    \ Predicates are functions that return TRUE/FALSE.\n\nA predicate function is\
    \ called a predicate because it returns a boolean value that indicates whether\
    \ or not the condition is satisfied. Predicates are functions that return TRUE/FALSE.\n\
    \nA predicate function is called a predicate because it returns a boolean value\
    \ that indicates whether or not the condition is satisfied. Predicates are functions\
    \ that return TRUE/FALSE.\n\nA predicate function is called a predicate because\
    \ it returns a boolean value that indicates whether or not the condition is satisfied.\
    \ Predicates are functions that return TRUE/FALSE.\n\nA predicate function is\
    \ called a predicate because it returns a boolean value that indicates whether\
    \ or not the condition is satisfied. Predicates are functions that return TRUE/FALSE.\n\
    \nA predicate function is called a predicate because it returns a boolean value\
    \ that indicates whether or not the condition is satisfied. Predicates are functions\
    \ that return TRUE/FALSE.\n\nA predicate function is called a predicate because\
    \ it returns a boolean value that indicates whether or not the condition is satisfied.\
    \ Predicates are functions that return TRUE/FALSE.\n\nA predicate function is\
    \ called a predicate because it returns a boolean value that indicates whether\
    \ or not the condition is satisfied. Predicates are functions that return TRUE/FALSE.\n\
    \n", "\n  n <- as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0)\
    \ return(1)\n  if(n%%13==0) return(2)\n  return(3)\n}\n</code>\n<|/ a dscore=2\
    \ |>\n<| c |>\nThanks so much for this. I really appreciate it. I will definitely\
    \ be using this in the future. Thanks again!\n<|/ c |>\n<| a dscore=2 |>\nHere's\
    \ a solution using data.table:\n<code>\nlibrary(data.table)\nlibrary(magrittr)\n\
    \nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n  setDT(list(n = n))[, \n\
    \    list(n = n, \n         fizzbuzz = ifelse(n %% 11 == 0 & n %% 13 == 0, 0,\
    \ \n                         ifelse(n %% 11 == 0, 1,\n                       \
    \         ifelse(n %% 13 == 0, 2, 3))), \n    by = .(n)]\n}\n\nfizz_buzz(50)",
  "\n  n <- as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0) return(paste0(\"\
    Fizz\",n%%11))\n  if(n%%13==0) return(paste0(\"Buzz\",n%%13))\n  return(n)\n}\n\
    </code>\n<|/ a tags=r,fizzbuzz |>\n<| c |>\nThis does not provide an answer to\
    \ the question. To critique or request clarification from an author, leave a comment\
    \ below their post. - [From Review](/review/low-quality-posts/18490158)\n<|/ c\
    \ |>\n<| c |>\nI added an answer which does provide an answer. My answer was posted\
    \ before I saw the comment. My answer was posted because I thought it would be\
    \ helpful to others who came across this question. I don't see any problems with\
    \ my answer. Can you please explain why you think my answer does not provide an\
    \ answer?\n<|/ c |>\n<| c |>\nThe question was \"How do you count the number of\
    \ times a digit appears in an integer less than n?\" Your answer does not provide\
    \ an answer to the question. Your answer does not count the number of times a\
    \ digit appears in an integer less than n. Your answer does not count the number\
    \ of times a digit appears in an integer less than n. Your answer does not count\
    \ the number of times a digit appears in an integer less than n. Your answer does\
    \ not count the number of times a digit appears in an integer less than n. Your\
    \ answer does not count the number of times a digit appears in an integer less\
    \ than n. Your answer does not count the number of times a digit appears in an\
    \ integer less than n. Your answer does not count the number of times a digit\
    \ appears in an integer less than n. Your answer does not count the number of\
    \ times a digit appears in an integer less than n. Your answer does not count\
    \ the number of times a digit appears in an integer less than n. Your answer does\
    \ not count the number of times a digit appears in an integer less than n. Your\
    \ answer does not count the number of times a digit appears in an integer less\
    \ than n. Your answer does not count the number of times a digit appears in an\
    \ integer less than n. Your answer does not count the number of times a digit\
    \ appears in an integer less than n. Your answer does not count the number of\
    \ times a digit appears in an integer less than n. Your answer does not count\
    \ the number of times a digit appears in an integer less than n. Your answer does\
    \ not count the number of times a digit appears in an integer less than n. Your\
    \ answer does not count the number of times a digit appears in an integer less\
    \ than n. Your answer does not count the number of times a digit appears in an\
    \ integer less than n. Your answer does not count the number of times a digit\
    \ appears in ", "\n  n <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13 == 0) {\n\
    \    return(0)\n  }\n  if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n  }\n\
    \  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n  }\n  if(n %% 11 != 0 &\
    \ n %% 13 != 0) {\n    return(3)\n  }\n}\n</code>\n<|/ a dscore=2 |>\n<| a |>\n\
    <code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n  if(n %% 11 == 0 &\
    \ n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 & n %% 13 != 0) {\n \
    \   return(1)\n  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n  }\n\
    \  if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  }\n}\n</code>\n<|/ a dscore=2\
    \ tags=r,fizzbuzz |>\n<| a dscore=2 |>\n<code>\nfizz_buzz <- function(n) {\n \
    \ n <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n\
    \  if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n  }\n  if(n %% 11 != 0 &\
    \ n %% 13 == 0) {\n    return(2)\n  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n \
    \   return(3)\n  }\n}\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| a tags=r,fizzbuzz\
    \ |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n  if(n %% 11 ==\
    \ 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 & n %% 13 != 0) {\n\
    \    return(1)\n  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n  }\n\
    \  if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  }\n}\n</code>\n<|/ a dscore=1\
    \ |>\n<| a dscore=1 |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n\
    \  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 &\
    \ n %% 13 != 0) {\n    return(1)\n", "\n  n <- as.integer(n)\n  if(n %% 11 ==\
    \ 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 & n %% 13 != 0) {\n\
    \    return(1)\n  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n  }\n\
    \  if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  }\n}\n</code>\n<|/ a dscore=2\
    \ |>\n<| c |>\nThis doesn't seem to work. `fizz_buzz(50)` returns `0` instead\
    \ of `1`.\n<|/ c |>\n<| c |>\nI tested it and it works. I added a test case to\
    \ my answer. Maybe you didn't copy it correctly?\n<|/ c |>\n<| c |>\nI copied\
    \ it exactly as you wrote it. I also tried it on another computer and it still\
    \ returns `0`.\n<|/ c |>\n<| c |>\nI tested it on another computer and it works.\
    \ I added a test case to my answer. Maybe you didn't copy it correctly?\n<|/ c\
    \ |>\n<| c |>\nI copied it exactly as you wrote it. I also tried it on another\
    \ computer and it still returns `0`.\n<|/ c |>\n<| a tags=r,function |>\nHere's\
    \ a solution using ifelse():\n<code>\nfizz_buzz <- function(n) {\n  ifelse(n %%\
    \ 11 == 0 & n %% 13 == 0, 0,\n         ifelse(n %% 11 == 0 & n %% 13 != 0, 1,\n\
    \                ifelse(n %% 11 != 0 & n %% 13 == 0, 2,\n                    \
    \   ifelse(n %% 11 != 0 & n %% 13 != 0, 3, n))))\n}\n</code>\n<|/ a dscore=2 |>\n\
    <| c |>\nThis doesn't seem to work. `fizz_buzz(50)` returns `0` instead of `1`.\n\
    <|/ c |>\n<| c |>\nI tested it and it works. I added a test case to my answer.\
    \ Maybe you didn't copy it correctly?\n<|/ c |>\n<| c |>\nI copied it exactly\
    \ as you wrote it. I also tried it on another computer and it still returns `0`.\n\
    <|/ c |>\n<| c |>\nI tested it on another computer and it works. I added a test\
    \ case to my answer. Maybe you didn't copy it correctly?\n<|/ c |>\n<| ", "\n\
    \  n <- as.integer(n)\n  return(sum(as.integer(n %% 11) == 7 & as.integer(n %%\
    \ 13) == 7))\n}\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThanks, this was very helpful.\n\
    <|/ c |>\n<| a tags=r,fizzbuzz,for-loop |>\nThe other answers are great, but I\
    \ wanted to see how this could be done with base R.  I used the fact that R treats\
    \ numbers as vectors of length 1 as opposed to vectors of length 0.  \n<code>\n\
    fizz_buzz <- function(n) {\n  n <- as.integer(n)\n  return(sum(as.integer(n %%\
    \ 11) == 7 & as.integer(n %% 13) == 7))\n}\n</code>\n<|/ a dscore=2 |>\n<| a tags=r,fizzbuzz,for-loop\
    \ |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n  return(sum(as.integer(n\
    \ %% 11) == 7 & as.integer(n %% 13) == 7))\n}\n</code>\n<|/ a dscore=2 |>\n<|\
    \ a |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n  return(sum(as.integer(n\
    \ %% 11) == 7 & as.integer(n %% 13) == 7))\n}\n</code>\n<|/ a tags=r,fizzbuzz,for-loop\
    \ dscore=1 |>\n<| a tags=r,fizzbuzz,for-loop |>\n<code>\nfizz_buzz <- function(n)\
    \ {\n  n <- as.integer(n)\n  return(sum(as.integer(n %% 11) == 7 & as.integer(n\
    \ %% 13) == 7))\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=r,fizzbuzz,for-loop\
    \ |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n  return(sum(as.integer(n\
    \ %% 11) == 7 & as.integer(n %% 13) == 7))\n}\n</code>\n<|/ a dscore=1 |>\n<|\
    \ a dscore=1 |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n  return(sum(as.integer(n\
    \ %% 11) == 7 & as.integer(n %% 13) == 7))\n}\n</code>\n<|/ a tags=r,fizzbuzz,for-loop\
    \ |>\n<| a ", "\n  n <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13 == 0) {\n \
    \   return(0)\n  }\n  if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n  }\n\
    \  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n  }\n  if(n %% 11 != 0 &\
    \ n %% 13 != 0) {\n    return(3)\n  }\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1\
    \ |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n  if(n %% 11 ==\
    \ 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 & n %% 13 != 0) {\n\
    \    return(1)\n  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n  }\n\
    \  if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  }\n}\n</code>\n<|/ a tags=r,function\
    \ |>\n<| a tags=r,function |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n\
    \  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 &\
    \ n %% 13 != 0) {\n    return(1)\n  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n \
    \   return(2)\n  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  }\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a tags=r,function |>\n<code>\nfizz_buzz <- function(n)\
    \ {\n  n <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n\
    \  }\n  if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n  }\n  if(n %% 11 !=\
    \ 0 & n %% 13 == 0) {\n    return(2)\n  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n\
    \    return(3)\n  }\n}\n</code>\n<|/ a dscore=0 |>\n<| a |>\n<code>\nfizz_buzz\
    \ <- function(n) {\n  n <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13 == 0) {\n\
    \    return(0)\n  }\n  if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n  }\n\
    \  if(n %% 11 != 0 & n %% 13 == 0) {\n    return", "\n  n <- as.integer(n)\n \
    \ if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 & n\
    \ %% 13 != 0) {\n    return(1)\n  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n   \
    \ return(2)\n  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  }\n}\n\
    </code>\n<|/ a dscore=1 |>\n<| c |>\nThanks, I didn't know about `%%` operator.\
    \ I'm going to try this out and see if it works.\n<|/ c |>\n<| c |>\nI added a\
    \ solution using `%%` which I believe is more elegant.\n<|/ c |>\n<| a |>\n<code>\n\
    fizz_buzz <- function(n) {\n  n <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13\
    \ == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n\
    \  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n  }\n  if(n %% 11 !=\
    \ 0 & n %% 13 != 0) {\n    return(3)\n  }\n}\n</code>\n<|/ a tags=r,if-statement\
    \ dscore=1 |>\n<| a tags=r,if-statement |>\n<code>\nfizz_buzz <- function(n) {\n\
    \  n <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n\
    \  if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n  }\n  if(n %% 11 != 0 &\
    \ n %% 13 == 0) {\n    return(2)\n  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n \
    \   return(3)\n  }\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=r,if-statement |>\n\
    <code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n  if(n %% 11 == 0 &\
    \ n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 & n %% 13 != 0) {\n \
    \   return(1)\n  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n  }\n\
    \  if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  }\n}\n</code>\n<|/ a dscore=1\
    \ |>\n<| a dscore=1 |>\n<code>\nfi", "\n  n <- as.integer(n)\n  if(n%%11==0 &\
    \ n%%13==0) return(0)\n  if(n%%11==0) return(1)\n  if(n%%13==0) return(2)\n  return(3)\n\
    }\n</code>\n<|/ a |>\n<| c |>\nThanks so much for this! I really appreciate it.\
    \ I will definitely be using this in the future. I'm going to have to learn more\
    \ about vectorization in R. Thanks again!\n<|/ c |>\n<| a |>\n<code>\nfizz_buzz\
    \ <- function(n) {\n  n <- as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n\
    \  if(n%%11==0) return(1)\n  if(n%%13==0) return(2)\n  return(3)\n}\n</code>\n\
    <|/ a tags=r,if-statement,for-loop,function dscore=1 |>\n<| a tags=r,if-statement,for-loop,function\
    \ |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n  if(n%%11==0\
    \ & n%%13==0) return(0)\n  if(n%%11==0) return(1)\n  if(n%%13==0) return(2)\n\
    \  return(3)\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\nfizz_buzz\
    \ <- function(n) {\n  n <- as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n\
    \  if(n%%11==0) return(1)\n  if(n%%13==0) return(2)\n  return(3)\n}\n</code>\n\
    <|/ a tags=r,if-statement,for-loop,function |>\n<| a tags=r,if-statement,for-loop,function\
    \ |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n  if(n%%11==0\
    \ & n%%13==0) return(0)\n  if(n%%11==0) return(1)\n  if(n%%13==0) return(2)\n\
    \  return(3)\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=r,if-statement,for-loop,function\
    \ |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n  if(n%%11==0\
    \ & n%%13==0) return(0)\n  if(n%%11==0) return(1)", "\n  return(length(which(n\
    \ %% 11 == 0 & n %% 13 == 0))) \n}\n</cell>\n<cell>\nfizz_buzz(50)\n</cell>\n\
    <cell>\nfizz_buzz(78)\n</cell>\n<cell>\nfizz_buzz(79)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes a vector of integers and returns the sum of the\
    \ squares of the integers in the vector.\n\n\n</text>\n<cell>", "\n  n <- as.integer(n)\n\
    \  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0) return(1)\n  if(n%%13==0)\
    \ return(2)\n  return(3)\n}\n", "\n  n <- as.integer(n)\n  if(n%%11==0) return(0)\n\
    \  if(n%%13==0) return(2)\n  return(length(which(as.integer(n%%11==0)|as.integer(n%%13==0))))\n\
    }\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| a dscore=2 |>\n<code>\nfizz_buzz <- function(x)\
    \ {\n  x <- as.integer(x)\n  if(x%%11==0) return(0)\n  if(x%%13==0) return(2)\n\
    \  return(length(which(as.integer(x%%11==0)|as.integer(x%%13==0))))\n}\n</code>\n\
    <|/ a tags=r,fizzbuzz |>\n<| a tags=r,fizzbuzz |>\n<code>\nfizz_buzz <- function(x)\
    \ {\n  x <- as.integer(x)\n  if(x%%11==0) return(0)\n  if(x%%13==0) return(2)\n\
    \  return(length(which(as.integer(x%%11==0)|as.integer(x%%13==0))))\n}\n</code>\n\
    <|/ a dscore=2 |>\n<| a tags=r,fizzbuzz |>\n<code>\nfizz_buzz <- function(x) {\n\
    \  x <- as.integer(x)\n  if(x%%11==0) return(0)\n  if(x%%13==0) return(2)\n  return(length(which(as.integer(x%%11==0)|as.integer(x%%13==0))))\n\
    }\n</code>\n<|/ a dscore=2 |>\n<| a |>\n<code>\nfizz_buzz <- function(x) {\n \
    \ x <- as.integer(x)\n  if(x%%11==0) return(0)\n  if(x%%13==0) return(2)\n  return(length(which(as.integer(x%%11==0)|as.integer(x%%13==0))))\n\
    }\n</code>\n<|/ a dscore=2 tags=r,fizzbuzz |>\n<| a tags=r,fizzbuzz |>\n<code>\n\
    fizz_buzz <- function(x) {\n  x <- as.integer(x)\n  if(x%%11==0) return(0)\n \
    \ if(x%%13==0) return(2)\n  return(length(which(as.integer(x%%11==0)|as.integer(x%%13==0))))\n\
    }\n</code>\n<|/ a dscore=", "\n  n <- n\n  if(n %% 11 == 0 & n %% 13 == 0) {\n\
    \    return(0)\n  }\n  if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n  }\n\
    \  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n  }\n  if(n %% 11 != 0 &\
    \ n %% 13 != 0) {\n    return(3)\n  }\n}\n", "\n  n <- as.integer(n)\n  if(n %%\
    \ 11 == 0 & n %% 13 == 0) {\n    return(0)\n  } else if(n %% 11 == 0 & n %% 13\
    \ != 0) {\n    return(1)\n  } else if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n\
    \  } else if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  } else {\n    return(NA)\n\
    \  }\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=r,fizzbuzz,for-loop |>\n<code>\n\
    fizzbuzz <- function(x){\n  if(x%%11==0 & x%%13==0){\n    return(0)\n  }\n  if(x%%11==0\
    \ & x%%13!=0){\n    return(1)\n  }\n  if(x%%11!=0 & x%%13==0){\n    return(2)\n\
    \  }\n  if(x%%11!=0 & x%%13!=0){\n    return(3)\n  }\n  return(NA)\n}\n</code>\n\
    <|/ a dscore=1 |>\n<| a tags=r,fizzbuzz,for-loop |>\n<code>\nfizzbuzz <- function(x){\n\
    \  if(x%%11==0 & x%%13==0){\n    return(0)\n  }\n  if(x%%11==0 & x%%13!=0){\n\
    \    return(1)\n  }\n  if(x%%11!=0 & x%%13==0){\n    return(2)\n  }\n  if(x%%11!=0\
    \ & x%%13!=0){\n    return(3)\n  }\n  return(NA)\n}\n</code>\n<|/ a dscore=1 |>\n\
    <| a |>\n<code>\nfizzbuzz <- function(x){\n  if(x%%11==0 & x%%13==0){\n    return(0)\n\
    \  }\n  if(x%%11==0 & x%%13!=0){\n    return(1)\n  }\n  if(x%%11!=0 & x%%13==0){\n\
    \    return(2)\n  }\n  if(x%%11!=0 & x%%13!=0){\n    return(3)\n  }\n  return(NA)\n\
    }\n</code>\n<|/ a tags=r,fizzbuzz,for-loop dscore=0 |>\n<| a dscore=0 |>\n<code>\n\
    fizzbuzz <- function(x){\n  if(x%%11==0 & x%%13==0){\n    return(0)\n  }\n  ",
  "\n  n <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n\
    \  if(n %% 11 == 0) {\n    return(1)\n  }\n  if(n %% 13 == 0) {\n    return(2)\n\
    \  }\n  return(3)\n}\n</code>\n<|/ a tags=r |>\n<| c |>\nI like your solution\
    \ but I think it can be simplified even more. `fizz_buzz <- function(n) as.integer(n)\
    \ %% 11 == 0 & as.integer(n) %% 13 == 0`\n<|/ c |>\n<| c |>\nYes, that is a much\
    \ better solution. Thanks for pointing it out.\n<|/ c |>\n<| c |>\nI like your\
    \ solution but I think it can be simplified even more. `fizz_buzz <- function(n)\
    \ as.integer(n) %% 11 == 0 & as.integer(n) %% 13 == 0`\n<|/ c |>\n<| c |>\nI like\
    \ your solution but I think it can be simplified even more. `fizz_buzz <- function(n)\
    \ as.integer(n) %% 11 == 0 & as.integer(n) %% 13 == 0`\n<|/ c |>\n<| c |>\nI like\
    \ your solution but I think it can be simplified even more. `fizz_buzz <- function(n)\
    \ as.integer(n) %% 11 == 0 & as.integer(n) %% 13 == 0`\n<|/ c |>\n<| a tags=r\
    \ |>\nHere is a solution using dplyr and purrr:\n<code>\nlibrary(dplyr)\nlibrary(purrr)\n\
    \nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n  \n  if(n %% 11 == 0 & n\
    \ %% 13 == 0) {\n    return(0)\n  }\n  \n  if(n %% 11 == 0) {\n    return(1)\n\
    \  }\n  \n  if(n %% 13 == 0) {\n    return(2)\n  }\n  \n  return(3)\n}\n\ndf <-\
    \ data.frame(x = c(1:100))\n\ndf %>%\n  mutate(y = map(x, fizz_buzz)) %>%\n  unnest(y)\n\
    </code>\nOutput:\n<code>\n   x  y\n1  1  0\n2  2  1\n3  3  2\n4  4  3\n5  5  4\n\
    6  6  5\n7  7  6\n8  8  7\n9  9  8\n10 10 9\n11 11 10", "\n  n <- as.integer(n)\n\
    \  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 &\
    \ n %% 13 != 0) {\n    return(1)\n  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n \
    \   return(2)\n  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  }\n\
    }\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| c |>\nThis doesn't work. Try it with\
    \ `fizz_buzz(50)`.\n<|/ c |>\n<| c |>\nIt does work. Try it with `fizz_buzz(50)`.\
    \ `fizz_buzz(50)` returns `0`.\n<|/ c |>\n<| c |>\nOh, I see what you mean. Yes,\
    \ it does work. Sorry, I missed that part in the question. My bad.\n<|/ c |>\n\
    <| c |>\nNo worries. I added a version that works with `fizz_buzz(50)`.\n<|/ c\
    \ |>\n<| a dscore=1 |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n\
    \  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 &\
    \ n %% 13 != 0) {\n    return(1)\n  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n \
    \   return(2)\n  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  }\n\
    }\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| a dscore=1 |>\n<code>\nfizz_buzz <- function(n)\
    \ {\n  n <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n\
    \  }\n  if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n  }\n  if(n %% 11 !=\
    \ 0 & n %% 13 == 0) {\n    return(2)\n  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n\
    \    return(3)\n  }\n}\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| a dscore=0 |>\n\
    <code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n  if(n %% 11 == 0 &\
    \ n %% 13 == 0) {\n    return(0)\n", "\n  n <- n\n  return(\n    sum(\n      ifelse(\n\
    \        n %% 11 == 0 & n %% 13 == 0,\n        1,\n        ifelse(\n         \
    \ n %% 11 == 0 | n %% 13 == 0,\n          2,\n          ifelse(\n            n\
    \ %% 11 == 1 & n %% 13 == 1,\n            3,\n            ifelse(\n          \
    \    n %% 11 == 1 | n %% 13 == 1,\n              4,\n              ifelse(\n \
    \               n %% 11 == 2 & n %% 13 == 2,\n                5,\n           \
    \     ifelse(\n                  n %% 11 == 2 | n %% 13 == 2,\n              \
    \    6,\n                  ifelse(\n                    n %% 11 == 3 & n %% 13\
    \ == 3,\n                    7,\n                    ifelse(\n               \
    \       n %% 11 == 3 | n %% 13 == 3,\n                      8,\n             \
    \         ifelse(\n                        n %% 11 == 4 & n %% 13 == 4,\n    \
    \                    9,\n                        ifelse(\n                   \
    \       n %% 11 == 4 | n %% 13 == 4,\n                          10,\n        \
    \                  ifelse(\n                            n %% 11 == 5 & n %% 13\
    \ == 5,\n                            11,\n                            ifelse(\n\
    \                              n %% 11 == 5 | n %% 13 == 5,\n                \
    \              12,\n                              ifelse(\n                  \
    \              n %% 11 == 6 & n %% 13 == 6,\n                                13,\n\
    \                                ifelse(\n                                  n\
    \ %% 11 == 6 | n %% 13 == 6,\n                                  14,\n        \
    \                          ifelse(\n                                    n %% 11\
    \ == 7 & n %% 13 == 7,\n                                    15,\n            \
    \                        ifelse(\n                                      n %% 11\
    \ == 7 | n %% 13 == 7,\n                                      16,\n          \
    \                            ifelse(\n                                       \
    \ n %% 11 == 8 & n %% 13 == 8,\n                                        17,\n\
    \                                        ifelse(\n                           \
    \               n %% 11 == 8 | n %% 13 == 8,\n                               \
    \           18,\n                                          ifelse(\n         \
    \                                   n %% 11 == 9 & n %% 13 == 9,\n           \
    \                                 19,\n                                      \
    \      ifelse(\n                                              n %% 11 == 9 | n\
    \ %% 13 == 9,\n                                              20,\n           \
    \                                   ifelse(\n                                \
    \                n %% 11 == 10 & n %% 13 == 10,\n                            \
    \                    21,\n                                                ifelse(\n\
    \                                                  n %% 11 == 10 | n %% 13 ==\
    \ 10,\n                                                  22,\n               \
    \                                   ifelse(\n                                \
    \                    n %% 11 == 11 & n %% 13 == 11,\n                        \
    \                            23,\n                                           \
    \         ifelse(\n                                                      n %%\
    \ 11 == 11 | n %% 13 == 11,\n                                                \
    \      24,\n                                                      ifelse(\n  \
    \                                                      n %% 11 == 12 & n %% 13\
    \ == ", "\n  n <- as.integer(n)\n  if(n %% 11 == 0) return(0)\n  if(n %% 13 ==\
    \ 0) return(2)\n  return(fizz_buzz(n - 1))\n}\n</code>\n<|/ a tags=r,fizzbuzz,recursion\
    \ |>\n<| c |>\nThanks for your answer! I understand your code, but I don't understand\
    \ why you use return(fizz_buzz(n - 1))? I thought you were supposed to use return(fizz_buzz(n))?\
    \ And why do you use n <- as.integer(n) instead of n <- n?\n<|/ c |>\n<| c |>\n\
    I used `return(fizz_buzz(n - 1))` because I wanted to return the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\
    \ `return(fizz_buzz(n))` would return the number of times the digit 7 appears\
    \ in integers less than n which are divisible by 11 or 13 and greater than or\
    \ equal to 11.\n<|/ c |>\n<| c |>\nOh okay, I understand now. Thanks so much for\
    \ your help!\n<|/ c |>\n<| a tags=r,fizzbuzz,recursion |>\n<code>\nfizzbuzz <-\
    \ function(n) {\n  n <- as.integer(n)\n  if(n %% 11 == 0) return(0)\n  if(n %%\
    \ 13 == 0) return(2)\n  return(fizzbuzz(n - 1))\n}\n</code>\n<|/ a dscore=2 |>\n\
    <| a dscore=1 |>\n<code>\nfizzbuzz <- function(n) {\n  n <- as.integer(n)\n  if(n\
    \ %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizzbuzz(n - 1))\n\
    }\n</code>\n<|/ a tags=r,fizzbuzz,recursion |>\n<| a tags=r,fizzbuzz,recursion\
    \ |>\n<code>\nfizzbuzz <- function(n) {\n  n <- as.integer(n)\n  if(n %% 11 ==\
    \ 0) return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizzbuzz(n - 1))\n}\n</code>\n\
    <|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\nfizzbuzz <- function(n) {\n  n <-\
    \ as.integer(n)\n  if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0) ", "\n  n <-\
    \ as.integer(n)\n  if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n\
    \  return(fizz_buzz(n/11) + fizz_buzz(n/13))\n}\n</code>\n<|/ a |>\n<| c |>\n\
    I like your solution, however it fails for `fizz_buzz(100)` which should return\
    \ `0` but returns `1`.\n<|/ c |>\n<| c |>\nGood catch. I fixed it.\n<|/ c |>\n\
    <| a dscore=1 |>\nA recursive solution:\n<code>\nfizz_buzz <- function(n) {\n\
    \  if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n/11)\
    \ + fizz_buzz(n/13))\n}\n</code>\n<|/ a tags=r,recursion,fizzbuzz |>\n<| a tags=r,recursion,fizzbuzz\
    \ |>\n<code>\nfizz_buzz <- function(n) {\n  if(n %% 11 == 0) return(0)\n  if(n\
    \ %% 13 == 0) return(2)\n  return(fizz_buzz(n/11) + fizz_buzz(n/13))\n}\n</code>\n\
    <|/ a dscore=1 |>\n<| a tags=r,recursion,fizzbuzz |>\n<code>\nfizz_buzz <- function(n)\
    \ {\n  if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n/11)\
    \ + fizz_buzz(n/13))\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n\
    fizz_buzz <- function(n) {\n  if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n\
    \  return(fizz_buzz(n/11) + fizz_buzz(n/13))\n}\n</code>\n<|/ a tags=r,recursion,fizzbuzz\
    \ |>\n<| a dscore=1 |>\n<code>\nfizz_buzz <- function(n) {\n  if(n %% 11 == 0)\
    \ return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n/11) + fizz_buzz(n/13))\n\
    }\n</code>\n<|/ a tags=r,", "\n  n <- as.integer(n)\n  return(sum(n %% 11 == 0\
    \ & n %% 13 == 0))\n}\n", "\n  n <- as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n\
    \  if(n%%11==0) return(1)\n  if(n%%13==0) return(2)\n  return(NA)\n}\n</code>\n\
    <|/ a dscore=1 |>\n<| c |>\nThanks for your answer! I appreciate it! I do have\
    \ one question, though. Why do you use as.integer(n) instead of n? I thought that\
    \ as.integer was used to convert a character vector into a numeric vector. Thanks\
    \ again!\n<|/ c |>\n<| c |>\n`as.integer` converts a character vector into a numeric\
    \ vector. `as.numeric` converts a character vector into a numeric vector. `as.integer`\
    \ converts a character vector into a numeric vector. `as.numeric` converts a character\
    \ vector into a numeric vector. `as.integer` converts a character vector into\
    \ a numeric vector. `as.numeric` converts a character vector into a numeric vector.\
    \ `as.integer` converts a character vector into a numeric vector. `as.numeric`\
    \ converts a character vector into a numeric vector. `as.integer` converts a character\
    \ vector into a numeric vector. `as.numeric` converts a character vector into\
    \ a numeric vector. `as.integer` converts a character vector into a numeric vector.\
    \ `as.numeric` converts a character vector into a numeric vector. `as.integer`\
    \ converts a character vector into a numeric vector. `as.numeric` converts a character\
    \ vector into a numeric vector. `as.integer` converts a character vector into\
    \ a numeric vector. `as.numeric` converts a character vector into a numeric vector.\
    \ `as.integer` converts a character vector into a numeric vector. `as.numeric`\
    \ converts a character vector into a numeric vector. `as.integer` converts a character\
    \ vector into a numeric vector. `as.numeric` converts a character vector into\
    \ a numeric vector. `as.integer` converts a character vector into a numeric vector.\
    \ `as.numeric` converts a character vector into a numeric vector. `as.integer`\
    \ converts a character vector into a numeric vector. `as.numeric` converts a character\
    \ vector into a numeric vector. `as.integer` converts a character vector into\
    \ a numeric vector. `as.numeric` converts a character vector into a numeric vector.\
    \ `as.integer` converts a character vector into a numeric vector. `as.numeric`\
    \ converts a character vector into a numeric vector. `as.integer` converts a character\
    \ vector into a numeric vector. `as.numeric` converts a character vector into\
    \ a numeric vector. `as.integer` converts a character vector into a numeric vector.\
    \ `as.numeric` converts a character vector into a numeric vector. `", "\n  n <-\
    \ as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0) return(paste0(\"\
    Fizz\",n%%11))\n  if(n%%13==0) return(paste0(\"Buzz\",n%%13))\n  return(n)\n}\n\
    </code>\n<|/ a tags=r,fizzbuzz |>\n<| c |>\nI like your solution, but I wonder\
    \ why you use `as.integer` instead of `as.numeric`?\n<|/ c |>\n<| c |>\nI didn't\
    \ know about `as.integer` until you mentioned it. I just assumed that `as.integer`\
    \ would work. Thanks for pointing that out.\n<|/ c |>\n<| a dscore=2 |>\n<code>\n\
    fizzbuzz <- function(x){\n  if(x %% 11 == 0 & x %% 13 == 0){\n    return(0)\n\
    \  }\n  if(x %% 11 == 0){\n    return(paste0(\"Fizz\",x %% 11))\n  }\n  if(x %%\
    \ 13 == 0){\n    return(paste0(\"Buzz\",x %% 13))\n  }\n  return(x)\n}\n</code>\n\
    <|/ a tags=r,fizzbuzz |>\n<| a dscore=2 |>\n<code>\nfizzbuzz <- function(x){\n\
    \  if(x %% 11 == 0 & x %% 13 == 0){\n    return(0)\n  }\n  if(x %% 11 == 0){\n\
    \    return(paste0(\"Fizz\",x %% 11))\n  }\n  if(x %% 13 == 0){\n    return(paste0(\"\
    Buzz\",x %% 13))\n  }\n  return(x)\n}\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| a\
    \ tags=r,fizzbuzz |>\n<code>\nfizzbuzz <- function(x){\n  if(x %% 11 == 0 & x\
    \ %% 13 == 0){\n    return(0)\n  }\n  if(x %% 11 == 0){\n    return(paste0(\"\
    Fizz\",x %% 11))\n  }\n  if(x %% 13 == 0){\n    return(paste0(\"Buzz\",x %% 13))\n\
    \  }\n  return(x)\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\nfizzbuzz\
    \ <- function(x){\n  if(x %% 11 == 0 & x %% 13 == ", "\n  n <- as.integer(n)\n\
    \  n <- ifelse(n %% 11 == 0 | n %% 13 == 0, n, 0)\n  n <- ifelse(n %% 11 == 0,\
    \ n %% 13, n %% 11)\n  n <- ifelse(n %% 13 == 0, n %% 11, n %% 13)\n  n <- ifelse(n\
    \ %% 11 == 0 | n %% 13 == 0, n, 0)\n  n <- ifelse(n %% 11 == 0, n %% 13, n %%\
    \ 11)\n  n <- ifelse(n %% 13 == 0, n %% 11, n %% 13)\n  n <- ifelse(n %% 11 ==\
    \ 0 | n %% 13 == 0, n, 0)\n  n <- ifelse(n %% 11 == 0, n %% 13, n %% 11)\n  n\
    \ <- ifelse(n %% 13 == 0, n %% 11, n %% 13)\n  n <- ifelse(n %% 11 == 0 | n %%\
    \ 13 == 0, n, 0)\n  n <- ifelse(n %% 11 == 0, n %% 13, n %% 11)\n  n <- ifelse(n\
    \ %% 13 == 0, n %% 11, n %% 13)\n  n <- ifelse(n %% 11 == 0 | n %% 13 == 0, n,\
    \ 0)\n  n <- ifelse(n %% 11 == 0, n %% 13, n %% 11)\n  n <- ifelse(n %% 13 ==\
    \ 0, n %% 11, n %% 13)\n  n <- ifelse(n %% 11 == 0 | n %% 13 == 0, n, 0)\n  n\
    \ <- ifelse(n %% 11 == 0, n %% 13, n %% 11)\n  n <- ifelse(n %% 13 == 0, n %%\
    \ 11, n %% 13)\n  n <- ifelse(n %% 11 == 0 | n %% 13 == 0, n, 0)\n  n <- ifelse(n\
    \ %% 11 == 0, n %% 13, n %% 11)\n  n <- ifelse(n %% 13 == 0, n %% 11, n %% 13)\n\
    \  n <- ifelse(n %% 11 == 0 | n %% 13 == 0, n, 0)\n  n <- ifelse(n %% 11 == 0,\
    \ n %% 13, n %% 11)\n  n <- ifelse(n %% 13 == 0, n %% 11, n %% 13)\n  n <- ifelse(n\
    \ %% 11 == 0 | n %% 13 == 0, n, 0)\n  n <- ifelse(n %% 11 == 0, n %% 13, n %%\
    \ 11)\n  n <- ifelse(n %% 13 == 0, n %% 11, n %% 13)", "\n  n <- as.integer(n)\n\
    \  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 &\
    \ n %% 13 != 0) {\n    return(1)\n  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n \
    \   return(2)\n  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  }\n\
    }\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| a tags=r,fizzbuzz |>\n<code>\nfizzbuzz\
    \ <- function(x){\n  if(x %% 3 == 0){\n    return(\"Fizz\")\n  }\n  if(x %% 5\
    \ == 0){\n    return(\"Buzz\")\n  }\n  if(x %% 7 == 0){\n    return(\"FizzBuzz\"\
    )\n  }\n  return(x)\n}\n</code>\n<|/ a dscore=4 |>\n<| c |>\nThis doesn't work.\
    \ `x %% 3` returns `FALSE` for `x==0`.\n<|/ c |>\n<| c |>\nThis doesn't work.\
    \ `x %% 3` returns `FALSE` for `x==0`.\n<|/ c |>\n<| c |>\nThis doesn't work.\
    \ `x %% 3` returns `FALSE` for `x==0`.\n<|/ c |>\n<| c |>\nThis doesn't work.\
    \ `x %% 3` returns `FALSE` for `x==0`.\n<|/ c |>\n<| a dscore=4 |>\n<code>\nfizzbuzz\
    \ <- function(x){\n  if(x %% 3 == 0){\n    return(\"Fizz\")\n  }\n  if(x %% 5\
    \ == 0){\n    return(\"Buzz\")\n  }\n  if(x %% 7 == 0){\n    return(\"FizzBuzz\"\
    )\n  }\n  return(x)\n}\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| c |>\nThis doesn't\
    \ work. `x %% 3` returns `FALSE` for `x==0`.\n<|/ c |>\n<| c |>\nThis doesn't\
    \ work. `x %% 3` returns `FALSE` for `x==0`.\n<|/ c |>\n<| a tags=r,fizzbuzz |>\n\
    <code>\nfizzbuzz <- function(x){\n  if(x %% 3 == 0){\n    return(\"Fizz\")\n \
    \ }\n  if(x %% 5 == 0){\n    return(\"Buzz\")\n", "\n  n <- n\n  if(n %% 11 ==\
    \ 0) return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n/11) + fizz_buzz(n/13))\n\
    }\n", "\n  n <- as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0)\
    \ return(1)\n  if(n%%13==0) return(2)\n  return(3)\n}\n", "\n  return(sum(as.integer(n\
    \ %% 11) == 7 & as.integer(n %% 13) == 7))\n}\n", "\n  n <- as.integer(n)\n  if(n\
    \ %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 & n %% 13\
    \ != 0) {\n    return(1)\n  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n\
    \  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  }\n}\n", "\n  n <-\
    \ as.integer(n)\n  if(n %% 11 == 0 | n %% 13 == 0) {\n    return(0)\n  }\n  if(n\
    \ %% 11 != 0) {\n    return(n %% 11)\n  }\n  if(n %% 13 != 0) {\n    return(n\
    \ %% 13)\n  }\n  return(n %% 11)\n}\n</code>\n<|/ a dscore=2 |>\n<| c |>\nI like\
    \ your solution, although it seems like a lot of code for a simple problem. I'll\
    \ keep this in mind for future projects.\n<|/ c |>\n<| c |>\nI agree, it's not\
    \ a very elegant solution. I'm sure there's a better way to do this in R, but\
    \ I haven't found it yet.\n<|/ c |>\n<| a |>\n<code>\nfizz_buzz <- function(n)\
    \ {\n  n <- as.integer(n)\n  if(n %% 11 == 0 | n %% 13 == 0) {\n    return(0)\n\
    \  }\n  if(n %% 11 != 0) {\n    return(n %% 11)\n  }\n  if(n %% 13 != 0) {\n \
    \   return(n %% 13)\n  }\n  return(n %% 11)\n}\n</code>\n<|/ a tags=r,fizzbuzz\
    \ dscore=2 |>\n<| a tags=r,fizzbuzz |>\n<code>\nfizz_buzz <- function(n) {\n \
    \ n <- as.integer(n)\n  if(n %% 11 == 0 | n %% 13 == 0) {\n    return(0)\n  }\n\
    \  if(n %% 11 != 0) {\n    return(n %% 11)\n  }\n  if(n %% 13 != 0) {\n    return(n\
    \ %% 13)\n  }\n  return(n %% 11)\n}\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2\
    \ |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n  if(n %% 11 ==\
    \ 0 | n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 != 0) {\n    return(n\
    \ %% 11)\n  }\n  if(n %% 13 != 0) {\n    return(n %% 13)\n  }\n  return(n %% 11)\n\
    }\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| a tags=r,fizzbuzz |>\n<code>\nfizz_buzz\
    \ <- function(n) {\n  n <- as.integer(n)\n  if(n %% 11 == 0 | n %% 13 == 0) {\n\
    \    return(0)\n  }\n  if(n %% 11 != 0) {\n", "\n  n <- as.integer(n)\n  if(n\
    \ %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0) {\n   \
    \ return(1)\n  }\n  if(n %% 13 == 0) {\n    return(2)\n  }\n  return(3)\n}\n</code>\n\
    <|/ a tags=r,fizzbuzz,for-loop,if-statement |>\n<| a tags=r,fizzbuzz,for-loop,if-statement\
    \ |>\nThe answer by is great, but I thought I'd add my own solution. \n<code>\n\
    fizzbuzz <- function(x){\n  if(x %% 11 == 0 & x %% 13 == 0){\n    return(0)\n\
    \  }\n  if(x %% 11 == 0){\n    return(1)\n  }\n  if(x %% 13 == 0){\n    return(2)\n\
    \  }\n  return(3)\n}\n</code>\n<|/ a dscore=2 |>\n<| a dscore=1 |>\n<code>\nfizzbuzz\
    \ <- function(x){\n  if(x %% 11 == 0 & x %% 13 == 0){\n    return(0)\n  }\n  if(x\
    \ %% 11 == 0){\n    return(1)\n  }\n  if(x %% 13 == 0){\n    return(2)\n  }\n\
    \  return(3)\n}\n</code>\n<|/ a tags=r,fizzbuzz,for-loop,if-statement |>\n<| a\
    \ tags=r,fizzbuzz,for-loop,if-statement |>\n<code>\nfizzbuzz <- function(x){\n\
    \  if(x %% 11 == 0 & x %% 13 == 0){\n    return(0)\n  }\n  if(x %% 11 == 0){\n\
    \    return(1)\n  }\n  if(x %% 13 == 0){\n    return(2)\n  }\n  return(3)\n}\n\
    </code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\nfizzbuzz <- function(x){\n\
    \  if(x %% 11 == 0 & x %% 13 == 0){\n    return(0)\n  }\n  if(x %% 11 == 0){\n\
    \    return(1)\n  }\n  if(x %% 13 == 0){\n    return(2)\n  }\n  return(3)\n}\n\
    </code>\n<|/ a tags=r,fizzbuzz,for-loop,if-statement |>\n<| a tags=r,fizzbuzz,for-loop,if-statement\
    \ |>\n<code>\nfizzbuzz <- function(x){\n  if(x %% 11 == 0 & x %% 13 == 0){", "\n\
    \  n <- as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0) return(paste0(\"\
    Fizz\",n%%11))\n  if(n%%13==0) return(paste0(\"Buzz\",n%%13))\n  return(n)\n}\n\
    </code>\n<|/ a tags=r,fizzbuzz,for-loop |>\n<| a dscore=0 |>\n<code>\nfizzbuzz\
    \ <- function(x) {\n  if(x %% 11 == 0) return(\"Fizz\")\n  if(x %% 13 == 0) return(\"\
    Buzz\")\n  return(x)\n}\n\nfizzbuzz(1:100)\n</code>\n<|/ a tags=r,fizzbuzz,for-loop\
    \ |>\n<| a tags=r,fizzbuzz,for-loop |>\n<code>\nfizzbuzz <- function(x) {\n  if(x\
    \ %% 11 == 0) return(\"Fizz\")\n  if(x %% 13 == 0) return(\"Buzz\")\n  return(x)\n\
    }\n\nfizzbuzz(1:100)\n</code>\n<|/ a dscore=0 |>\n<| c |>\nPlease add some explanation\
    \ to your answer such that others can learn from it\n<|/ c |>\n<| c |>\nThis answer\
    \ was flagged as low-quality because of its length and content. Consider adding\
    \ some explanation as to how it solves the problem.\n<|/ c |>\n<| a dscore=0 |>\n\
    <code>\nfizzbuzz <- function(x) {\n  if(x %% 11 == 0) return(\"Fizz\")\n  if(x\
    \ %% 13 == 0) return(\"Buzz\")\n  return(x)\n}\n\nfizzbuzz(1:100)\n</code>\n<|/\
    \ a tags=r,fizzbuzz,for-loop |>\n<| c |>\nPlease add some explanation to your\
    \ answer such that others can learn from it\n<|/ c |>\n<| a dscore=0 |>\n<code>\n\
    fizzbuzz <- function(x) {\n  if(x %% 11 == 0) return(\"Fizz\")\n  if(x %% 13 ==\
    \ 0) return(\"Buzz\")\n  return(x)\n}\n\nfizzbuzz(1:100)\n</code>\n<|/ a tags=r,fizzbuzz,for-loop\
    \ |>\n<| a tags=r,fizzbuzz,for-loop |>\n<code>\nfizzbuzz <- function(x) {\n  if(x\
    \ %% 11 == 0) return(\"Fizz\")\n  ", "\n  n <- as.integer(n)\n  if(n %% 11 ==\
    \ 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 & n %% 13 != 0) {\n\
    \    return(1)\n  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n  }\n\
    \  if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  }\n}\n</code>\n<|/ a dscore=1\
    \ |>\n<| a dscore=1 |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n\
    \  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 &\
    \ n %% 13 != 0) {\n    return(1)\n  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n \
    \   return(2)\n  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  }\n\
    }\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| a dscore=1 |>\n<code>\nfizz_buzz <- function(n)\
    \ {\n  n <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n\
    \  }\n  if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n  }\n  if(n %% 11 !=\
    \ 0 & n %% 13 == 0) {\n    return(2)\n  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n\
    \    return(3)\n  }\n}\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| a tags=r,fizzbuzz\
    \ |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n  if(n %% 11 ==\
    \ 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 & n %% 13 != 0) {\n\
    \    return(1)\n  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n  }\n\
    \  if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  }\n}\n</code>\n<|/ a dscore=1\
    \ |>\n<| a dscore=1 |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n\
    \  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 &\
    \ n %% 13 != 0) {\n    return(1)\n", "\n  n <- as.integer(n)\n  if(n %% 11 ==\
    \ 0 | n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 != 0) {\n    return(fizz_buzz(n\
    \ %% 11))\n  }\n  if(n %% 13 != 0) {\n    return(fizz_buzz(n %% 13))\n  }\n  return(fizz_buzz(n\
    \ %% 11) + fizz_buzz(n %% 13))\n}\n", "\n  n <- n\n  if(n %% 11 == 0 & n %% 13\
    \ == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n\
    \  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n  }\n  if(n %% 11 !=\
    \ 0 & n %% 13 != 0) {\n    return(3)\n  }\n}\n", "\n  n <- as.integer(n)\n  if(n\
    \ %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 & n %% 13\
    \ != 0) {\n    return(1)\n  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n\
    \  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  }\n}\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a vector of integers as input and returns\
    \ a vector of the same length with each element being the number of times the\
    \ digit 7 appears in integers less than or equal to that element.\n\n\n</text>\n\
    <cell>", "\n  n <- as.integer(n)\n  return(as.integer(n %% 11) + as.integer(n\
    \ %% 13))\n}\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThanks for your answer. I am\
    \ not familiar with R and I do not understand your code. Could you please explain\
    \ it to me?\n<|/ c |>\n<| c |>\nI added some comments. Hope it helps.\n<|/ c |>\n\
    <| c |>\nThanks for your explanation. I am still not familiar with R and I do\
    \ not understand your code. Could you please explain it to me?\n<|/ c |>\n<| c\
    \ |>\nI added some comments. Hope it helps.\n<|/ c |>\n<| c |>\nThanks for your\
    \ explanation. I am still not familiar with R and I do not understand your code.\
    \ Could you please explain it to me?\n<|/ c |>\n<| a tags=r,fizzbuzz |>\n<code>\n\
    fizzbuzz <- function(x) {\n  if(x %% 11 == 0) return(\"FizzBuzz\")\n  if(x %%\
    \ 13 == 0) return(\"Fizz\")\n  if(x %% 15 == 0) return(\"Buzz\")\n  return(x)\n\
    }\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2 |>\n<code>\nfizzbuzz <- function(x){\n\
    \  if(x%%11==0){\n    return(\"FizzBuzz\")\n  }\n  if(x%%13==0){\n    return(\"\
    Fizz\")\n  }\n  if(x%%15==0){\n    return(\"Buzz\")\n  }\n  return(x)\n}\n</code>\n\
    <|/ a tags=r,fizzbuzz |>\n<| a |>\n<code>\nfizzbuzz <- function(x){\n  if(x%%11==0){\n\
    \    return(\"FizzBuzz\")\n  }\n  if(x%%13==0){\n    return(\"Fizz\")\n  }\n \
    \ if(x%%15==0){\n    return(\"Buzz\")\n  }\n  return(x)\n}\n</code>\n<|/ a dscore=1\
    \ tags=r,fizzbuzz |>\n<| a tags=r,fizzbuzz |>\n<code>\nfizzbuzz <- function(x){\n\
    \  if(x%%11==0){\n    return(\"FizzBuzz\")\n  }\n  if(x%%13==0){\n    return(\"",
  "\n  n <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\
    \ else if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n  } else if(n %% 11 !=\
    \ 0 & n %% 13 == 0) {\n    return(2)\n  } else if(n %% 11 != 0 & n %% 13 != 0)\
    \ {\n    return(3)\n  }\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThank you for\
    \ taking the time to write this up. I'm going to try it out and see how it works.\
    \ I appreciate it.\n<|/ c |>\n<| c |>\nI tested it out and it works perfectly.\
    \ Thank you so much!\n<|/ c |>\n<| a tags=r,fizzbuzz,for-loop,if-statement |>\n\
    <code>\nfizzbuzz <- function(x){\n  if(x%%11==0 & x%%13==0){\n    return(0)\n\
    \  }\n  if(x%%11==0 & x%%13!=0){\n    return(1)\n  }\n  if(x%%11!=0 & x%%13==0){\n\
    \    return(2)\n  }\n  if(x%%11!=0 & x%%13!=0){\n    return(3)\n  }\n}\n</code>\n\
    <|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\nfizzbuzz <- function(x){\n  if(x%%11==0\
    \ & x%%13==0){\n    return(0)\n  }\n  if(x%%11==0 & x%%13!=0){\n    return(1)\n\
    \  }\n  if(x%%11!=0 & x%%13==0){\n    return(2)\n  }\n  if(x%%11!=0 & x%%13!=0){\n\
    \    return(3)\n  }\n}\n</code>\n<|/ a tags=r,fizzbuzz,for-loop,if-statement |>\n\
    <| a dscore=1 |>\n<code>\nfizzbuzz <- function(x){\n  if(x%%11==0 & x%%13==0){\n\
    \    return(0)\n  }\n  if(x%%11==0 & x%%13!=0){\n    return(1)\n  }\n  if(x%%11!=0\
    \ & x%%13==0){\n    return(2)\n  }\n  if(x%%11!=0 & x%%13!=0){\n    return(3)\n\
    \  }\n}\n</code>\n<|/ a tags=r,fizzbuzz,", "\n  n <- as.integer(n)\n  if(n%%11==0\
    \ | n%%13==0) return(0)\n  if(n%%11==0) return(1)\n  if(n%%13==0) return(2)\n\
    \  return(3)\n}\n</code>\n<|/ a |>\n<| c |>\nI like your solution, but I wonder\
    \ why you chose to use `return` instead of `if`? I guess it's just a matter of\
    \ taste, but I find `return` more readable.\n<|/ c |>\n<| c |>\nI prefer `return`\
    \ over `if` because `return` returns from the function immediately, whereas `if`\
    \ only returns from the function when the condition is met. `return` also makes\
    \ it easier to read and understand.\n<|/ c |>\n<| c |>\nI agree with you. I just\
    \ find it more readable with `return` instead of `if`.\n<|/ c |>\n<| c |>\nI agree\
    \ with you too. I just find it more readable with `return` instead of `if`.\n\
    <|/ c |>\n<| c |>\nI agree with you too. I just find it more readable with `return`\
    \ instead of `if`.\n<|/ c |>\n<| a tags=r,if-statement |>\n<code>\nfizz_buzz <-\
    \ function(n) {\n  if(n%%11==0 | n%%13==0) return(0)\n  if(n%%11==0) return(1)\n\
    \  if(n%%13==0) return(2)\n  return(3)\n}\n</code>\n<|/ a dscore=5 |>\n<| c |>\n\
    I like your solution, but I wonder why you chose to use `return` instead of `if`?\
    \ I guess it's just a matter of taste, but I find `return` more readable.\n<|/\
    \ c |>\n<| c |>\nI prefer `return` over `if` because `return` returns from the\
    \ function immediately, whereas `if` only returns from the function when the condition\
    \ is met. `return` also makes it easier to read and understand.\n<|/ c |>\n<|\
    \ a tags=r,if-statement |>\n<code>\nfizz_buzz <- function(n) {\n  if(n%%11==0\
    \ | n%%13==0) return(0)\n  if(n%%11==0) return(1)\n  if(n%%13==0) return(2)\n\
    \  return(3)\n}\n</code>\n<|/ a dscore=5 |>\n<| a tags=r,if-statement |>\n", "\n\
    \  n <- as.integer(n)\n  if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n\
    \  return(length(which(n %% 7 == 0)))\n}\n</code>\n<|/ a dscore=2 |>\n<| c |>\n\
    Thanks so much! This was very helpful.\n<|/ c |>\n<| a dscore=1 |>\nHere is a\
    \ solution that uses dplyr and tidyr to do some data manipulation. \n<code>\n\
    library(dplyr)\nlibrary(tidyr)\n", "\n  n <- as.integer(n)\n  if(n %% 11 == 0\
    \ | n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 != 0) {\n    return(n %%\
    \ 11)\n  }\n  if(n %% 13 != 0) {\n    return(n %% 13)\n  }\n  return(n %% 11)\n\
    }\n", "\n  n <- as.integer(n)\n  if(n %% 11 == 0 | n %% 13 == 0) {\n    return(0)\n\
    \  }\n  return(length(which(n %% 11 == 0 & n %% 13 == 0)))\n}\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the number of times the digit 7 appears\
    \ in integers less than n which are divisible by 11 or 13. Test it on all numbers\
    \ from 1 to 1000.\n\n\n</text>\n<cell>", "\n  n <- n\n  if(n %% 11 == 0 & n %%\
    \ 13 == 0) {\n    n <- 0\n  }\n  if(n %% 11 == 0 & n %% 13 != 0) {\n    n <- 1\n\
    \  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n    n <- 2\n  }\n  if(n %% 11 != 0\
    \ & n %% 13 != 0) {\n    n <- 3\n  }\n  return(n)\n}\n</code>\n<|/ a |>\n<| c\
    \ |>\nThanks for your answer! I appreciate it! I didn't know you could use if/else\
    \ statements in R. I'm still new to R and I didn't know you could do that. Thanks\
    \ again!\n<|/ c |>\n<| c |>\nNo problem! I didn't know you could do that either.\
    \ I'm still new to R and I didn't know you could do that. Thanks again!\n<|/ c\
    \ |>\n<| a tags=r,if-statement |>\nHere's a solution using ifelse and %in%:\n\
    <code>\nfizz_buzz <- function(n) {\n  ifelse(n %in% c(11, 13), 0, ifelse(n %in%\
    \ c(7, 11), 2, ifelse(n %in% c(5, 7), 3, ifelse(n %in% c(3, 5), 4, ifelse(n %in%\
    \ c(1, 3), 5, ifelse(n %in% c(7, 5), 6, ifelse(n %in% c(5, 3), 7, ifelse(n %in%\
    \ c(3, 1), 8, ifelse(n %in% c(7, 1), 9, ifelse(n %in% c(5, 1), 10, ifelse(n %in%\
    \ c(3, 7), 11, ifelse(n %in% c(7, 7), 12, ifelse(n %in% c(5, 5), 13, ifelse(n\
    \ %in% c(3, 3), 14, ifelse(n %in% c(7, 3), 15, ifelse(n %in% c(5, 3), 16, ifelse(n\
    \ %in% c(3, 1), 17, ifelse(n %in% c(7, 1), 18, ifelse(n %in% c(5, 1), 19, ifelse(n\
    \ %in% c(3, 7), 20, ifelse(n %in% c(7, 7), 21, ifelse(n %in% c(5, 5), 22, ifelse(n\
    \ %in% c(3, 3), 23, ifelse(n %in% c(7, 3), 24, ifelse(n %in% c(5, 3), 25, ifelse(n\
    \ %in% c(3, 1), 26, ifelse", "\n  n <- as.integer(n)\n  if(n %% 11 == 0 & n %%\
    \ 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n\
    \  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n  }\n  if(n %% 11 !=\
    \ 0 & n %% 13 != 0) {\n    return(3)\n  }\n}\n\nfizz_buzz(50)\nfizz_buzz(78)\n\
    fizz_buzz(79)\nfizz_buzz(100)\nfizz_buzz(123)\nfizz_buzz(129)\nfizz_buzz(135)\n\
    fizz_buzz(136)\nfizz_buzz(137)\nfizz_buzz(141)\nfizz_buzz(142)\nfizz_buzz(143)\n\
    fizz_buzz(144)\nfizz_buzz(145)\nfizz_buzz(146)\nfizz_buzz(147)\nfizz_buzz(148)\n\
    fizz_buzz(149)\nfizz_buzz(150)\nfizz_buzz(151)\nfizz_buzz(152)\nfizz_buzz(153)\n\
    fizz_buzz(154)\nfizz_buzz(155)\nfizz_buzz(156)\nfizz_buzz(157)\nfizz_buzz(158)\n\
    fizz_buzz(159)\nfizz_buzz(160)\nfizz_buzz(161)\nfizz_buzz(162)\nfizz_buzz(163)\n\
    fizz_buzz(164)\nfizz_buzz(165)\nfizz_buzz(166)\nfizz_buzz(167)\nfizz_buzz(168)\n\
    fizz_buzz(169)\nfizz_buzz(170)\nfizz_buzz(171)\nfizz_buzz(172)\nfizz_buzz(173)\n\
    fizz_buzz(174)\nfizz_buzz(175)\nfizz_buzz(176)\nfizz_buzz(177)\nfizz_buzz(178)\n\
    fizz_buzz(", "\n  n <- as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0)\
    \ return(1)\n  if(n%%13==0) return(2)\n  return(3)\n}\n</code>\n<|/ a dscore=2\
    \ |>\n<| a dscore=1 |>\n<code>\nfizz_buzz <- function(n){\n  if(n %% 11 == 0){\n\
    \    if(n %% 13 == 0){\n      return(0)\n    }\n    return(1)\n  }\n  if(n %%\
    \ 13 == 0){\n    return(2)\n  }\n  return(3)\n}\n</code>\n<|/ a tags=r |>\n<|\
    \ a tags=r |>\n<code>\nfizz_buzz <- function(n){\n  if(n %% 11 == 0){\n    if(n\
    \ %% 13 == 0){\n      return(0)\n    }\n    return(1)\n  }\n  if(n %% 13 == 0){\n\
    \    return(2)\n  }\n  return(3)\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1\
    \ |>\n<code>\nfizz_buzz <- function(n){\n  if(n %% 11 == 0){\n    if(n %% 13 ==\
    \ 0){\n      return(0)\n    }\n    return(1)\n  }\n  if(n %% 13 == 0){\n    return(2)\n\
    \  }\n  return(3)\n}\n</code>\n<|/ a tags=r |>\n<| a dscore=1 |>\n<code>\nfizz_buzz\
    \ <- function(n){\n  if(n %% 11 == 0){\n    if(n %% 13 == 0){\n      return(0)\n\
    \    }\n    return(1)\n  }\n  if(n %% 13 == 0){\n    return(2)\n  }\n  return(3)\n\
    }\n</code>\n<|/ a tags=r |>\n<| a tags=r |>\n<code>\nfizz_buzz <- function(n){\n\
    \  if(n %% 11 == 0){\n    if(n %% 13 == 0){\n      return(0)\n    }\n    return(1)\n\
    \  }\n  if(n %% 13 == 0){\n    return(2)\n  }\n  return(3)\n}\n</code>\n<|/ a\
    \ dscore=1 |>\n<| a dscore=1 |>\n<code>\nfizz_buzz <- function(n){\n  if(n %%\
    \ 11 == 0){\n    if(n %% 13 == 0){\n      return(0)\n    }\n    return(1)\n  }\n\
    \  if(n %% 13 == 0){\n    return(2)\n", "\n  n <- as.integer(n)\n  if(n%%11==0\
    \ & n%%13==0) return(0)\n  if(n%%11==0) return(1)\n  if(n%%13==0) return(2)\n\
    \  return(3)\n}\n</cell>\n<text>\nExercise 2\nWrite a function that returns the\
    \ number of times the digit 7 appears in integers less than n which are divisible\
    \ by 11 or 13. Test your function with n = 50 and n = 78.\n\n\n</text>\n<cell>",
  "\n  n <- n\n  if(n %% 11 == 0 | n %% 13 == 0) {\n    return(0)\n  }\n  if(n %%\
    \ 11 != 0) {\n    return(fizz_buzz(n %% 11))\n  }\n  if(n %% 13 != 0) {\n    return(fizz_buzz(n\
    \ %% 13))\n  }\n  return(fizz_buzz(n %% 11) + fizz_buzz(n %% 13))\n}\n", "\n \
    \ n <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\
    \ else if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n  } else if(n %% 11 !=\
    \ 0 & n %% 13 == 0) {\n    return(2)\n  } else if(n %% 11 != 0 & n %% 13 != 0)\
    \ {\n    return(3)\n  } else {\n    return(NA)\n  }\n}\n</code>\n<|/ a tags=r,fizzbuzz\
    \ |>\n<| c |>\nThanks so much! I really appreciate it!\n<|/ c |>\n<| c |>\nNo\
    \ problem! If this answer solved your problem, please consider marking it as accepted\
    \ (click the check mark next to the answer). Thanks!\n<|/ c |>\n<| a tags=r,fizzbuzz\
    \ |>\nHere's a solution using dplyr and stringr:\n<code>\nlibrary(dplyr)\nlibrary(stringr)\n\
    \nfizzbuzz <- function(x) {\n  x <- as.integer(x)\n  if(x %% 11 == 0 & x %% 13\
    \ == 0) {\n    return(0)\n  } else if(x %% 11 == 0 & x %% 13 != 0) {\n    return(1)\n\
    \  } else if(x %% 11 != 0 & x %% 13 == 0) {\n    return(2)\n  } else if(x %% 11\
    \ != 0 & x %% 13 != 0) {\n    return(3)\n  } else {\n    return(NA)\n  }\n}\n\n\
    df <- data.frame(x = 1:100)\n\ndf %>% \n  mutate(fizzbuzz = fizzbuzz(x)) %>% \n\
    \  mutate(fizzbuzz = ifelse(is.na(fizzbuzz), x, fizzbuzz)) %>% \n  mutate(fizzbuzz\
    \ = ifelse(fizzbuzz == 0, NA, fizzbuzz)) %>% \n  mutate(fizzbuzz = ifelse(fizzbuzz\
    \ == 1, NA, fizzbuzz)) %>% \n  mutate(fizzbuzz = ifelse(fizzbuzz == 2, NA, fizzbuzz))\
    \ %>% \n  mutate(fizzbuzz = ifelse(fizzbuzz == 3, NA, fizzbuzz)) %>% \n  mutate(fizzbuzz\
    \ = ifelse(fizzbuzz == 4, NA, fizzbuzz)) %>% \n  mutate(fizzbuzz = ifelse(fizzbuzz\
    \ == 5, NA, fizzbuzz)) %>% \n  ", "\n  n <- as.integer(n)\n  if(n %% 11 == 0 |\
    \ n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 1) {\n    return(1)\n \
    \ }\n  if(n %% 13 == 1) {\n    return(2)\n  }\n  if(n %% 11 == 2) {\n    return(3)\n\
    \  }\n  if(n %% 13 == 2) {\n    return(4)\n  }\n  if(n %% 11 == 3) {\n    return(5)\n\
    \  }\n  if(n %% 13 == 3) {\n    return(6)\n  }\n  if(n %% 11 == 4) {\n    return(7)\n\
    \  }\n  if(n %% 13 == 4) {\n    return(8)\n  }\n  if(n %% 11 == 5) {\n    return(9)\n\
    \  }\n  if(n %% 13 == 5) {\n    return(10)\n  }\n  if(n %% 11 == 6) {\n    return(11)\n\
    \  }\n  if(n %% 13 == 6) {\n    return(12)\n  }\n  if(n %% 11 == 7) {\n    return(13)\n\
    \  }\n  if(n %% 13 == 7) {\n    return(14)\n  }\n  if(n %% 11 == 8) {\n    return(15)\n\
    \  }\n  if(n %% 13 == 8) {\n    return(16)\n  }\n  if(n %% 11 == 9) {\n    return(17)\n\
    \  }\n  if(n %% 13 == 9) {\n    return(18)\n  }\n  if(n %% 11 == 10) {\n    return(19)\n\
    \  }\n  if(n %% 13 == 10) {\n    return(20)\n  }\n  if(n %% 11 == 11) {\n    return(21)\n\
    \  }\n  if(n %% 13 == 11) {\n    return(22)\n  }\n  if(n %% 11 == 12) {\n    return(23)\n\
    \  }\n  if(n %% 13 == 12) {\n    return(24)\n  }\n  if(n %% 11 == 13) {\n    return(25)\n\
    \  }\n  if(n %% 13 == 13) {\n    return(26)\n  }\n  if(n %% 11 == 14) {\n    return(27)\n\
    \  }\n  if(n %% 13 == 14) {\n    return(28)\n  }\n  if(n %% 11 == 15) {\n    return(29)\n\
    \  }\n  if(n %% 13 == 15) {\n    return(30)\n  }\n  if(n %% 11 == 16) {\n    return(31)\n\
    \  }\n  if(n %% 13 == 16) {\n    return(32)\n  }\n  if(n %% 11 == 17) {\n    return(33)\n\
    \  }\n  if(n %% 13 == 17) {\n    return(34", "\n  n <- as.integer(n)\n  if(n%%11==0\
    \ & n%%13==0) return(0)\n  if(n%%11==0 & n%%13!=0) return(1)\n  if(n%%11!=0 &\
    \ n%%13==0) return(2)\n  if(n%%11!=0 & n%%13!=0) return(3)\n}\n", "\n  n <- as.integer(n)\n\
    \  if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n\
    \ - 1))\n}\n</code>\n<|/ a tags=r,recursion,fizzbuzz |>\n<| c |>\nThanks for your\
    \ answer. I'm still trying to understand how this works. I understand that `fizz_buzz(50)`\
    \ returns `0` because `50` isn't divisible by 11 or 13, but I don't understand\
    \ how `fizz_buzz(78)` returns `2` because `78` is divisible by 11 and 13. Can\
    \ you explain how this works?\n<|/ c |>\n<| c |>\nThe function works by recursively\
    \ calling itself until it reaches a base case (when `n` is less than or equal\
    \ to `11` or `13`). When `n` is less than or equal to `11`, it returns `0`. When\
    \ `n` is less than or equal to `13`, it returns `2`. When `n` is greater than\
    \ or equal to `11` or `13`, it calls itself again (by subtracting `11` or `13`\
    \ from `n`) and returns the result of the recursive call.\n<|/ c |>\n<| c |>\n\
    Thanks for your explanation. I understand it now. One last question: why do we\
    \ subtract `11` or `13` from `n`? Why not just `return(fizz_buzz(n - 11))` or\
    \ `return(fizz_buzz(n - 13))`?\n<|/ c |>\n<| c |>\nBecause `fizz_buzz(n - 11)`\
    \ would return `0` when `n` is less than or equal to `11`. `fizz_buzz(n - 13)`\
    \ would return `2` when `n` is less than or equal to `13`. `fizz_buzz(n - 11)`\
    \ would return `2` when `n` is greater than or equal to `11`. `fizz_buzz(n - 13)`\
    \ would return `0` when `n` is greater than or equal to `13`.\n<|/ c |>\n<| a\
    \ tags=r,recursion,fizzbuzz |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n\
    \  if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n\
    \ - 1))\n}\n</code>\n<|/ a dscore=3 |>\n<| a dscore=3 |>\n<code>\nfizz_bu", "\n\
    \  return(sum(grepl(\"7\", as.character(n)) & grepl(\"11\", as.character(n)) &\
    \ grepl(\"13\", as.character(n))))\n}\n</cell>\n<cell>\nfizz_buzz(50)\n</cell>\n\
    <cell>\nfizz_buzz(78)\n</cell>\n<cell>\nfizz_buzz(79)\n</cell>\n<cell>\nfizz_buzz(100)\n\
    </cell>\n<cell>\nfizz_buzz(1000)\n</cell>\n<cell>\nfizz_buzz(10000)\n</cell>\n\
    <cell>\nfizz_buzz(100000)\n</cell>\n<cell>\nfizz_buzz(1000000)\n</cell>\n<cell>\n\
    fizz_buzz(10000000)\n</cell>\n<cell>\nfizz_buzz(100000000)\n</cell>\n<cell>\n\
    fizz_buzz(1000000000)\n</cell>\n<cell>\nfizz_buzz(10000000000)\n</cell>\n<cell>\n\
    fizz_buzz(100000000000)\n</cell>\n<cell>\nfizz_buzz(1000000000000)\n</cell>\n\
    <cell>\nfizz_buzz(10000000000000)\n</cell>\n<cell>\nfizz_buzz(100000000000000)\n\
    </cell>\n<cell>\nfizz_buzz(1000000000000000)\n</cell>\n<cell>\nfizz_buzz(10000000000000000)\n\
    </cell>\n<cell>\nfizz_buzz(100000000000000000)\n</cell>\n<cell>\nfizz_buzz(1000000000000000000)\n\
    </cell>\n<cell>\nfizz_buzz(10000000000000000000)\n</cell>\n<cell>\nfizz_buzz(100000000000000000000)\n\
    </cell>\n<cell>\nfizz_buzz(1000000000000000000000)\n</cell>\n<cell>\nfizz_buzz(10000000000000000000000)\n\
    </cell>\n<cell>\nfizz_buzz(100000000000000000000000)\n</cell>\n<cell>\nfizz_buzz(1000000000000000000000000)\n\
    </cell>\n<cell>\nfi", "\n  n <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13 ==\
    \ 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n\
    \  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n  }\n  if(n %% 11 !=\
    \ 0 & n %% 13 != 0) {\n    return(3)\n  }\n}\n", "\n  n <- as.integer(n)\n  if(n%%11==0\
    \ || n%%13==0) return(0)\n  if(n%%11==0) return(paste0(\"Fizz\",n%%11))\n  if(n%%13==0)\
    \ return(paste0(\"Buzz\",n%%13))\n  return(n)\n}\n</code>\n<|/ a tags=r,fizzbuzz\
    \ |>\n<| a tags=r,fizzbuzz |>\n<code>\nfizzbuzz <- function(x) {\n  if(x %% 11\
    \ == 0) return(paste0(\"Fizz\", x %% 11))\n  if(x %% 13 == 0) return(paste0(\"\
    Buzz\", x %% 13))\n  return(x)\n}\n</code>\n<|/ a dscore=2 |>\n<| a tags=r,fizzbuzz\
    \ |>\n<code>\nfizzbuzz <- function(x) {\n  if(x %% 11 == 0) return(paste0(\"Fizz\"\
    , x %% 11))\n  if(x %% 13 == 0) return(paste0(\"Buzz\", x %% 13))\n  return(x)\n\
    }\n</code>\n<|/ a dscore=2 |>\n<| a |>\n<code>\nfizzbuzz <- function(x) {\n  if(x\
    \ %% 11 == 0) return(paste0(\"Fizz\", x %% 11))\n  if(x %% 13 == 0) return(paste0(\"\
    Buzz\", x %% 13))\n  return(x)\n}\n</code>\n<|/ a dscore=2 tags=r,fizzbuzz |>\n\
    <| a |>\n<code>\nfizzbuzz <- function(x) {\n  if(x %% 11 == 0) return(paste0(\"\
    Fizz\", x %% 11))\n  if(x %% 13 == 0) return(paste0(\"Buzz\", x %% 13))\n  return(x)\n\
    }\n</code>\n<|/ a tags=r,fizzbuzz dscore=1 |>\n<| a dscore=1 |>\n<code>\nfizzbuzz\
    \ <- function(x) {\n  if(x %% 11 == 0) return(paste0(\"Fizz\", x %% 11))\n  if(x\
    \ %% 13 == 0) return(paste0(\"Buzz\", x %% 13))\n  return(x)\n}\n</code>\n<|/\
    \ a tags=r,fizzbuzz |>\n<| a tags=r,fizzbuzz |>\n<code>\nfizzbuzz <- function(x)\
    \ {\n  if(x %% 11 == 0) return(paste", "\n  n <- as.integer(n)\n  if(n%%11==0)\
    \ return(0)\n  if(n%%13==0) return(2)\n  return(length(which(as.integer(n%%11==0)&as.integer(n%%13==0)==0)))\n\
    }\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2 |>\n<code>\nfizz_buzz <- function(n)\
    \ {\n  n <- as.integer(n)\n  if(n%%11==0) return(0)\n  if(n%%13==0) return(2)\n\
    \  return(length(which(as.integer(n%%11==0)&as.integer(n%%13==0)==0)))\n}\n</code>\n\
    <|/ a tags=r,fizzbuzz |>\n<| a tags=r,fizzbuzz |>\n<code>\nfizz_buzz <- function(n)\
    \ {\n  n <- as.integer(n)\n  if(n%%11==0) return(0)\n  if(n%%13==0) return(2)\n\
    \  return(length(which(as.integer(n%%11==0)&as.integer(n%%13==0)==0)))\n}\n</code>\n\
    <|/ a dscore=2 |>\n<| a dscore=1 |>\n<code>\nfizz_buzz <- function(n) {\n  n <-\
    \ as.integer(n)\n  if(n%%11==0) return(0)\n  if(n%%13==0) return(2)\n  return(length(which(as.integer(n%%11==0)&as.integer(n%%13==0)==0)))\n\
    }\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| a dscore=1 |>\n<code>\nfizz_buzz <- function(n)\
    \ {\n  n <- as.integer(n)\n  if(n%%11==0) return(0)\n  if(n%%13==0) return(2)\n\
    \  return(length(which(as.integer(n%%11==0)&as.integer(n%%13==0)==0)))\n}\n</code>\n\
    <|/ a tags=r,fizzbuzz |>\n<| a dscore=1 |>\n<code>\nfizz_buzz <- function(n) {\n\
    \  n <- as.integer(n)\n  if(n%%11==0) return(0)\n  if(n%%13==0) return(2)\n  return(length(which(as.integer(n%%11==0)&as.integer(n%%13==0)==0)))\n\
    }\n</code>\n<|/", "\n  n <- as.integer(n)\n  if(n %% 11 == 0) return(0)\n  if(n\
    \ %% 13 == 0) return(2)\n  return(length(which(n %% 7 == 0)) + 1)\n}\n", "\n \
    \ n <- as.integer(n)\n  if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n\
    \  return(fizz_buzz(n - 1))\n}\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| a tags=r,fizzbuzz\
    \ |>\n<code>\nfizzbuzz <- function(n) {\n  if(n %% 11 == 0) return(0)\n  if(n\
    \ %% 13 == 0) return(2)\n  return(fizzbuzz(n - 1))\n}\n\nfizzbuzz(50)\n</code>\n\
    <|/ a dscore=4 |>\n<| a |>\n<code>\nfizzbuzz <- function(n) {\n  if(n %% 11 ==\
    \ 0) return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizzbuzz(n - 1))\n}\n</code>\n\
    <|/ a tags=r,fizzbuzz dscore=4 |>\n<| a tags=r,fizzbuzz |>\n<code>\nfizzbuzz <-\
    \ function(n) {\n  if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n\
    \  return(fizzbuzz(n - 1))\n}\n</code>\n<|/ a dscore=3 |>\n<| a dscore=3 |>\n\
    <code>\nfizzbuzz <- function(n) {\n  if(n %% 11 == 0) return(0)\n  if(n %% 13\
    \ == 0) return(2)\n  return(fizzbuzz(n - 1))\n}\n</code>\n<|/ a tags=r,fizzbuzz\
    \ |>\n<| a dscore=3 |>\n<code>\nfizzbuzz <- function(n) {\n  if(n %% 11 == 0)\
    \ return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizzbuzz(n - 1))\n}\n</code>\n\
    <|/ a tags=r,fizzbuzz |>\n<| a tags=r,fizzbuzz |>\n<code>\nfizzbuzz <- function(n)\
    \ {\n  if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizzbuzz(n\
    \ - 1))\n}\n</code>\n<|/ a dscore=3 |>\n<| a tags=r,fizzbuzz |>\n<code>\nfizzbuzz\
    \ <- function(n) {\n  if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n\
    \  return(fizzbuzz(n - ", "\n  n <- as.integer(n)\n  if(n %% 11 == 0) return(0)\n\
    \  if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n - 1))\n}\n", "\n  n <- as.integer(n)\n\
    \  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0) return(1)\n  if(n%%13==0)\
    \ return(2)\n  return(3)\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=0 |>\n<code>\n\
    fizz_buzz <- function(n) {\n  n <- as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n\
    \  if(n%%11==0) return(1)\n  if(n%%13==0) return(2)\n  return(3)\n}\n</code>\n\
    <|/ a tags=r,if-statement |>\n<| c |>\nWhile this code may answer the question,\
    \ providing additional context regarding why and/or how this code answers the\
    \ question improves its long-term value.\n<|/ c |>\n<| a tags=r,if-statement |>\n\
    <code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n  if(n%%11==0 & n%%13==0)\
    \ return(0)\n  if(n%%11==0) return(1)\n  if(n%%13==0) return(2)\n  return(3)\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\nfizz_buzz <- function(n)\
    \ {\n  n <- as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0)\
    \ return(1)\n  if(n%%13==0) return(2)\n  return(3)\n}\n</code>\n<|/ a tags=r,if-statement\
    \ |>\n<| c |>\nWhile this code may answer the question, providing additional context\
    \ regarding why and/or how this code answers the question improves its long-term\
    \ value.\n<|/ c |>\n<| a tags=r,if-statement |>\n<code>\nfizz_buzz <- function(n)\
    \ {\n  n <- as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0)\
    \ return(1)\n  if(n%%13==0) return(2)\n  return(3)\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| c |>\nWhile this code may answer the question, providing additional context\
    \ regarding why and/or how this code answers the question improves its long-term\
    \ value.\n<|/ c |>\n<| a tags=r,if-statement |>\n<code>\n", "\n  n <- as.integer(n)\n\
    \  if(n %% 11 == 0 | n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 != 0) {\n\
    \    return(fizz_buzz(n %% 11))\n  }\n  if(n %% 13 != 0) {\n    return(fizz_buzz(n\
    \ %% 13))\n  }\n  return(fizz_buzz(n %% 11) + fizz_buzz(n %% 13))\n}\n</code>\n\
    <|/ a dscore=2 |>\n<| c |>\nI like your solution, but I wonder if there is a way\
    \ to do it without recursion.\n<|/ c |>\n<| c |>\nI added a solution without recursion.\n\
    <|/ c |>\n<| a dscore=2 |>\nHere's a solution without recursion:\n<code>\nfizz_buzz\
    \ <- function(n) {\n  n <- as.integer(n)\n  if(n %% 11 == 0 | n %% 13 == 0) {\n\
    \    return(0)\n  }\n  if(n %% 11 != 0) {\n    return(fizz_buzz(n %% 11))\n  }\n\
    \  if(n %% 13 != 0) {\n    return(fizz_buzz(n %% 13))\n  }\n  return(fizz_buzz(n\
    \ %% 11) + fizz_buzz(n %% 13))\n}\n</code>\n<|/ a tags=r,recursion,fizzbuzz |>\n\
    <| a |>\nHere's a solution without recursion:\n<code>\nfizz_buzz <- function(n)\
    \ {\n  n <- as.integer(n)\n  if(n %% 11 == 0 | n %% 13 == 0) {\n    return(0)\n\
    \  }\n  if(n %% 11 != 0) {\n    return(fizz_buzz(n %% 11))\n  }\n  if(n %% 13\
    \ != 0) {\n    return(fizz_buzz(n %% 13))\n  }\n  return(fizz_buzz(n %% 11) +\
    \ fizz_buzz(n %% 13))\n}\n</code>\n<|/ a dscore=2 tags=r,recursion,fizzbuzz |>\n\
    <| a tags=r,recursion,fizzbuzz |>\nHere's a solution without recursion:\n<code>\n\
    fizz_buzz <- function(n) {\n  n <- as.integer(n)\n  if(n %% 11 == 0 | n %% 13\
    \ == 0) {\n    return(0)\n  }\n  if(n %% 11 != 0) {\n    return(fizz_buzz(n %% ",
  "\n  n <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n\
    \  if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n  }\n  if(n %% 11 != 0 &\
    \ n %% 13 == 0) {\n    return(2)\n  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n \
    \   return(3)\n  }\n}\n", "\n  n <- as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n\
    \  if(n%%11==0) return(1)\n  if(n%%13==0) return(2)\n  return(3)\n}\n</code>\n\
    <|/ a tags=r,fizzbuzz |>\n<| a tags=r,fizzbuzz |>\n<code>\nfizzbuzz <- function(x)\
    \ {\n  if(x%%11==0 & x%%13==0) return(0)\n  if(x%%11==0) return(1)\n  if(x%%13==0)\
    \ return(2)\n  return(3)\n}\n</code>\n<|/ a dscore=2 |>\n<| a tags=r,fizzbuzz\
    \ |>\n<code>\nfizzbuzz <- function(x) {\n  if(x%%11==0 & x%%13==0) return(0)\n\
    \  if(x%%11==0) return(1)\n  if(x%%13==0) return(2)\n  return(3)\n}\n</code>\n\
    <|/ a dscore=2 |>\n<| a tags=r,fizzbuzz |>\n<code>\nfizzbuzz <- function(x) {\n\
    \  if(x%%11==0 & x%%13==0) return(0)\n  if(x%%11==0) return(1)\n  if(x%%13==0)\
    \ return(2)\n  return(3)\n}\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2 |>\n<code>\n\
    fizzbuzz <- function(x) {\n  if(x%%11==0 & x%%13==0) return(0)\n  if(x%%11==0)\
    \ return(1)\n  if(x%%13==0) return(2)\n  return(3)\n}\n</code>\n<|/ a tags=r,fizzbuzz\
    \ |>\n<| a tags=r,fizzbuzz |>\n<code>\nfizzbuzz <- function(x) {\n  if(x%%11==0\
    \ & x%%13==0) return(0)\n  if(x%%11==0) return(1)\n  if(x%%13==0) return(2)\n\
    \  return(3)\n}\n</code>\n<|/ a dscore=2 |>\n<| a tags=r,fizzbuzz |>\n<code>\n\
    fizzbuzz <- function(x) {\n  if(x%%11==0 & x%%13==0) return(0)\n  if(x%%11==0)\
    \ return(1)\n  if(x%%13==0) return(2)\n  return(3)\n}\n</code>\n<|/ a dscore=",
  "\n  n <- as.integer(n)\n  if(n%%11==0) return(0)\n  if(n%%13==0) return(2)\n  return(length(which(as.integer(n%%11==0)&as.integer(n%%13==0)==0)))\n\
    }\n</cell>\n<cell>\nfizz_buzz(50)\n</cell>\n<cell>\nfizz_buzz(78)\n</cell>\n<cell>\n\
    fizz_buzz(79)\n</cell>\n<text>\nThe function fizz_buzz above is very simple, but\
    \ it's also very inefficient. Let's see how we can make it more efficient.\n\n\
    \n</text>\n<text>\nThe function fizz_buzz above is very simple, but it's also\
    \ very inefficient. Let's see how we can make it more efficient.\n\n\n</text>\n\
    <text>\nThe function fizz_buzz above is very simple, but it's also very inefficient.\
    \ Let's see how we can make it more efficient.\n\n\n</text>\n<text>\nThe function\
    \ fizz_buzz above is very simple, but it's also very inefficient. Let's see how\
    \ we can make it more efficient.\n\n\n</text>\n<text>\nThe function fizz_buzz\
    \ above is very simple, but it's also very inefficient. Let's see how we can make\
    \ it more efficient.\n\n\n</text>\n<text>\nThe function fizz_buzz above is very\
    \ simple, but it's also very inefficient. Let's see how we can make it more efficient.\n\
    \n\n</text>\n<text>\nThe function fizz_buzz above is very simple, but it's also\
    \ very inefficient. Let's see how we can make it more efficient.\n\n\n</text>\n\
    <text>\nThe function fizz_buzz above is very simple, but it's also very inefficient.\
    \ Let's see how we can make it more efficient.\n\n\n</text>\n<text>\nThe function\
    \ fizz_buzz above is very simple, but it's also very inefficient. Let's see how\
    \ we can make it more efficient.\n\n\n</text>\n<text>\nThe function fizz_buzz\
    \ above is very simple, but it's also very inefficient. Let's see how we can make\
    \ it more efficient.\n\n\n</text>\n<text>\nThe function fizz_buzz above is very\
    \ simple, but it's also very inefficient. Let's see how we can make it more efficient.\n\
    \n\n</text>\n<text>\nThe function fizz_buzz above is very simple, but it's also\
    \ very inefficient. Let's see how we can make it more efficient.\n\n\n</text>\n\
    <text>\nThe function fizz_buzz above is very simple, but it's ", "\n  n <- as.integer(n)\n\
    \  n <- ifelse(n %% 11 == 0 | n %% 13 == 0, n, 0)\n  n <- ifelse(n %% 11 == 0,\
    \ n %% 11 + 1, ifelse(n %% 13 == 0, n %% 13 + 1, n))\n  n <- ifelse(n %% 11 ==\
    \ 0, n %% 11 + 1, ifelse(n %% 13 == 0, n %% 13 + 1, n))\n  n <- ifelse(n %% 11\
    \ == 0, n %% 11 + 1, ifelse(n %% 13 == 0, n %% 13 + 1, n))\n  n <- ifelse(n %%\
    \ 11 == 0, n %% 11 + 1, ifelse(n %% 13 == 0, n %% 13 + 1, n))\n  n <- ifelse(n\
    \ %% 11 == 0, n %% 11 + 1, ifelse(n %% 13 == 0, n %% 13 + 1, n))\n  n <- ifelse(n\
    \ %% 11 == 0, n %% 11 + 1, ifelse(n %% 13 == 0, n %% 13 + 1, n))\n  n <- ifelse(n\
    \ %% 11 == 0, n %% 11 + 1, ifelse(n %% 13 == 0, n %% 13 + 1, n))\n  n <- ifelse(n\
    \ %% 11 == 0, n %% 11 + 1, ifelse(n %% 13 == 0, n %% 13 + 1, n))\n  n <- ifelse(n\
    \ %% 11 == 0, n %% 11 + 1, ifelse(n %% 13 == 0, n %% 13 + 1, n))\n  n <- ifelse(n\
    \ %% 11 == 0, n %% 11 + 1, ifelse(n %% 13 == 0, n %% 13 + 1, n))\n  n <- ifelse(n\
    \ %% 11 == 0, n %% 11 + 1, ifelse(n %% 13 == 0, n %% 13 + 1, n))\n  n <- ifelse(n\
    \ %% 11 == 0, n %% 11 + 1, ifelse(n %% 13 == 0, n %% 13 + 1, n))\n  n <- ifelse(n\
    \ %% 11 == 0, n %% 11 + 1, ifelse(n %% 13 == 0, n %% 13 + 1, n))\n  n <- ifelse(n\
    \ %% 11 == 0, n %% 11 + 1, ifelse(n %% 13 == 0, n %% 13 + 1, n))\n  n <- ifelse(n\
    \ %% 11 == 0, n %% 11 + 1, ifelse(n %% 13 == 0, n %% 13 + 1, n))\n  n <- ifelse(n\
    \ %% 11 == 0, n %% 11 + 1, ifelse(n %% 13 == 0, n %% 13 + 1, n))\n  n <- ifelse(n\
    \ %% 11 == 0, n %% 11 + 1, ifelse(n ", "\n  return(sum(as.integer(n %% 11) ==\
    \ 7 & as.integer(n %% 13) == 7)/2)\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1\
    \ |>\n<code>\nfizz_buzz <- function(n) {\n  return(sum(as.integer(n %% 11) ==\
    \ 7 & as.integer(n %% 13) == 7)/2)\n}\n</code>\n<|/ a tags=r,function |>\n<| a\
    \ dscore=0 |>\n<code>\nfizz_buzz <- function(n) {\n  return(sum(as.integer(n %%\
    \ 11) == 7 & as.integer(n %% 13) == 7)/2)\n}\n</code>\n<|/ a tags=r,function |>\n\
    <| c |>\nPlease add some explanation to your answer such that others can learn\
    \ from it\n<|/ c |>\n<| a tags=r,function |>\n<code>\nfizz_buzz <- function(n)\
    \ {\n  return(sum(as.integer(n %% 11) == 7 & as.integer(n %% 13) == 7)/2)\n}\n\
    </code>\n<|/ a dscore=0 |>\n<| c |>\nPlease add some explanation to your answer\
    \ such that others can learn from it\n<|/ c |>\n<| a dscore=0 |>\n<code>\nfizz_buzz\
    \ <- function(n) {\n  return(sum(as.integer(n %% 11) == 7 & as.integer(n %% 13)\
    \ == 7)/2)\n}\n</code>\n<|/ a tags=r,function |>\n<| c |>\nPlease add some explanation\
    \ to your answer such that others can learn from it\n<|/ c |>\n<| a dscore=0 |>\n\
    <code>\nfizz_buzz <- function(n) {\n  return(sum(as.integer(n %% 11) == 7 & as.integer(n\
    \ %% 13) == 7)/2)\n}\n</code>\n<|/ a tags=r,function |>\n<| c |>\nPlease add some\
    \ explanation to your answer such that others can learn from it\n<|/ c |>\n<|\
    \ a tags=r,function |>\n<code>\nfizz_buzz <- function(n) {\n  return(sum(as.integer(n\
    \ %% 11) == 7 & as.integer(n %% 13) == 7)/2)\n}\n</code>\n<|/ a dscore=0 |>\n\
    <| c |>\nPlease add some explanation to your answer such that others can learn\
    \ from it\n<|/ c |>\n<| a tags=r,function |>\n<code>\nfizz_buzz <- function(n)\
    \ {", "\n  n <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n\
    \  }\n  if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n  }\n  if(n %% 11 !=\
    \ 0 & n %% 13 == 0) {\n    return(2)\n  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n\
    \    return(3)\n  }\n}\n</cell>\n<cell>\nfizz_buzz(50)\n</cell>\n<cell>\nfizz_buzz(78)\n\
    </cell>\n<cell>\nfizz_buzz(79)\n</cell>\n<cell>\nfizz_buzz(100)\n</cell>\n<cell>\n\
    fizz_buzz(123)\n</cell>\n<cell>\nfizz_buzz(125)\n</cell>\n<cell>\nfizz_buzz(126)\n\
    </cell>\n<cell>\nfizz_buzz(127)\n</cell>\n<cell>\nfizz_buzz(128)\n</cell>\n<cell>\n\
    fizz_buzz(129)\n</cell>\n<cell>\nfizz_buzz(130)\n</cell>\n<cell>\nfizz_buzz(131)\n\
    </cell>\n<cell>\nfizz_buzz(132)\n</cell>\n<cell>\nfizz_buzz(133)\n</cell>\n<cell>\n\
    fizz_buzz(134)\n</cell>\n<cell>\nfizz_buzz(135)\n</cell>\n<cell>\nfizz_buzz(136)\n\
    </cell>\n<cell>\nfizz_buzz(137)\n</cell>\n<cell>\nfizz_buzz(138)\n</cell>\n<cell>\n\
    fizz_buzz(139)\n</cell>\n<cell>\nfizz_buzz(140)\n</cell>\n<cell>\nfizz_buzz(141)\n\
    </cell>\n<cell>\nfizz_buzz(142)\n</cell>\n<cell>\nfizz_buzz(143)\n</cell>\n<cell>\n\
    fizz_buzz(144)\n</cell>\n<", "\n  n <- n\n  if(n %% 11 == 0) return(0)\n  if(n\
    \ %% 13 == 0) return(2)\n  return(fizz_buzz(n - 1))\n}\n</code>\n<|/ a tags=recursion,r\
    \ |>\n<| c |>\nThank you so much! I really appreciate it!\n<|/ c |>\n<| c |>\n\
    No problem! I added a little bit of explanation to the answer so you can understand\
    \ how it works. If you have any questions feel free to ask.\n<|/ c |>\n<| c |>\n\
    Thank you so much! I really appreciate it!\n<|/ c |>\n<| c |>\nNo problem! I added\
    \ a little bit of explanation to the answer so you can understand how it works.\
    \ If you have any questions feel free to ask.\n<|/ c |>\n<| a dscore=0 |>\nThe\
    \ function below will return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13. \n<code>\nfizz_buzz <- function(n)\
    \ {\n  n <- n\n  if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n\
    \ - 1))\n}\n</code>\n<|/ a tags=recursion,r |>\n<| c |>\nThank you so much! I\
    \ really appreciate it!\n<|/ c |>\n<| a dscore=0 |>\n<code>\nfizz_buzz <- function(n)\
    \ {\n  n <- n\n  if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n\
    \ - 1))\n}\n</code>\n<|/ a tags=recursion,r |>\n<| c |>\nThank you so much! I\
    \ really appreciate it!\n<|/ c |>\n<| c |>\nThank you so much! I really appreciate\
    \ it!\n<|/ c |>\n<| a dscore=0 |>\n<code>\nfizz_buzz <- function(n) {\n  n <-\
    \ n\n  if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n\
    \ - 1))\n}\n</code>\n<|/ a tags=recursion,r |>\n<| c |>\nThank you so much! I\
    \ really appreciate it!\n<|/ c |>\n<| a tags=recursion,", "\n  n <- as.integer(n)\n\
    \  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0) return(1)\n  if(n%%13==0)\
    \ return(2)\n  return(3)\n}\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| c |>\nThanks\
    \ so much for your help. I appreciate it!\n<|/ c |>\n<| a tags=r,fizzbuzz |>\n\
    <code>\nfizzbuzz <- function(n){\n  if(n %% 11 == 0){\n    return(1)\n  }\n  if(n\
    \ %% 13 == 0){\n    return(2)\n  }\n  if(n %% 17 == 0){\n    return(3)\n  }\n\
    \  if(n %% 19 == 0){\n    return(4)\n  }\n  if(n %% 23 == 0){\n    return(5)\n\
    \  }\n  if(n %% 29 == 0){\n    return(6)\n  }\n  if(n %% 31 == 0){\n    return(7)\n\
    \  }\n  if(n %% 37 == 0){\n    return(8)\n  }\n  if(n %% 43 == 0){\n    return(9)\n\
    \  }\n  if(n %% 47 == 0){\n    return(10)\n  }\n  if(n %% 53 == 0){\n    return(11)\n\
    \  }\n  if(n %% 59 == 0){\n    return(12)\n  }\n  if(n %% 67 == 0){\n    return(13)\n\
    \  }\n  if(n %% 71 == 0){\n    return(14)\n  }\n  if(n %% 79 == 0){\n    return(15)\n\
    \  }\n  if(n %% 83 == 0){\n    return(16)\n  }\n  if(n %% 89 == 0){\n    return(17)\n\
    \  }\n  if(n %% 97 == 0){\n    return(18)\n  }\n  if(n %% 101 == 0){\n    return(19)\n\
    \  }\n  if(n %% 107 == 0){\n    return(20)\n  }\n  if(n %% 113 == 0){\n    return(21)\n\
    \  }\n  if(n %% 119 == 0){\n    return(22)\n  }\n  if(n %% 125 == 0){\n    return(23)\n\
    \  }\n  if(n %% 131 == 0){\n    return(24)\n  }\n  if(n %% 137 == 0){\n    return(25)\n\
    \  }\n  if(n %% 143 == 0){\n    return(26)\n  }\n  if(n %% 149 == 0){\n    return(27",
  "\n  return(length(grep(\"7\", as.character(n), value = TRUE))/\n         length(grep(\"\
    11\", as.character(n), value = TRUE))/\n         length(grep(\"13\", as.character(n),\
    \ value = TRUE)))\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThanks so much for\
    \ your help. I really appreciate it.\n<|/ c |>\n<| a dscore=1 |>\n<code>\nfizz_buzz\
    \ <- function(n) {\n  return(length(grep(\"7\", as.character(n), value = TRUE))/\n\
    \         length(grep(\"11\", as.character(n), value = TRUE))/\n         length(grep(\"\
    13\", as.character(n), value = TRUE)))\n}\n</code>\n<|/ a tags=r |>\n<| a tags=r\
    \ |>\n<code>\nfizz_buzz <- function(n) {\n  return(length(grep(\"7\", as.character(n),\
    \ value = TRUE))/\n         length(grep(\"11\", as.character(n), value = TRUE))/\n\
    \         length(grep(\"13\", as.character(n), value = TRUE)))\n}\n</code>\n<|/\
    \ a dscore=1 |>\n<| a dscore=0 |>\n<code>\nfizz_buzz <- function(n) {\n  return(length(grep(\"\
    7\", as.character(n), value = TRUE))/\n         length(grep(\"11\", as.character(n),\
    \ value = TRUE))/\n         length(grep(\"13\", as.character(n), value = TRUE)))\n\
    }\n</code>\n<|/ a tags=r |>\n<| c |>\nPlease add some explanation to your answer\
    \ such that others can learn from it\n<|/ c |>\n<| a dscore=0 |>\n<code>\nfizz_buzz\
    \ <- function(n) {\n  return(length(grep(\"7\", as.character(n), value = TRUE))/\n\
    \         length(grep(\"11\", as.character(n), value = TRUE))/\n         length(grep(\"\
    13\", as.character(n), value = TRUE)))\n}\n</code>\n<|/ a tags=r |>\n<| c |>\n\
    Please add some explanation to your answer such that others can learn from it\n\
    <|/ c |>\n<| a |>\n<code>\nfizz_buzz <- function(n) {\n  return(length(grep(\"\
    7\", as.character(n), value = TRUE))/\n         length(grep(\"11\", as.charact",
  "\n  n <- as.integer(n)\n  if(n%%11==0 | n%%13==0) {\n    return(0)\n  }\n  if(n%%11==0)\
    \ {\n    return(1)\n  }\n  if(n%%13==0) {\n    return(2)\n  }\n  return(3)\n}\n",
  "\n  n <- as.integer(n)\n  if(n%%11==0) return(0)\n  if(n%%13==0) return(2)\n  return(length(which(as.integer(n%%11==0)==0)))\n\
    }\n</cell>\n<text>\nExercise 2\nWrite a function that returns the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13\
    \ and which are also divisible by 3 or 5.\n\n\n</text>\n<cell>", "\n  n <- as.integer(n)\n\
    \  return(sum(n %% 11 == 0 & n %% 13 == 0))\n}\n</cell>\n<text>\nNow let's test\
    \ our function by checking that it's working as expected:\n\n\n</text>\n<cell>\n\
    fizz_buzz(50)\n</cell>\n<cell>\nfizz_buzz(78)\n</cell>\n<cell>\nfizz_buzz(79)\n\
    </cell>\n<text>\nNow let's try it on a larger number:\n\n\n</text>\n<cell>\nfizz_buzz(101)\n\
    </cell>\n<text>\nAnd now a number that's not divisible by 11 or 13:\n\n\n</text>\n\
    <cell>\nfizz_buzz(102)\n</cell>\n<text>\nNow let's try it on a number that's not\
    \ divisible by 11 or 13:\n\n\n</text>\n<cell>\nfizz_buzz(103)\n</cell>\n<text>\n\
    And now a number that's not divisible by 11 or 13:\n\n\n</text>\n<cell>\nfizz_buzz(104)\n\
    </cell>\n<text>\nNow let's try it on a number that's not divisible by 11 or 13:\n\
    \n\n</text>\n<cell>\nfizz_buzz(105)\n</cell>\n<text>\nAnd now a number that's\
    \ not divisible by 11 or 13:\n\n\n</text>\n<cell>\nfizz_buzz(106)\n</cell>\n<text>\n\
    Now let's try it on a number that's not divisible by 11 or 13:\n\n\n</text>\n\
    <cell>\nfizz_buzz(107)\n</cell>\n<text>\nAnd now a number that's not divisible\
    \ by 11 or 13:\n\n\n</text>\n<cell>\nfizz_buzz(108)\n</cell>\n<text>\nNow let's\
    \ try it on a number that's not divisible by 11 or 13:\n\n\n</text>\n<cell>\n\
    fizz_buzz(109)\n</cell>\n<text>\nAnd now a number that's not divisible by 11 or\
    \ 13:\n\n\n</text>\n<cell>\nfizz_buzz(110)\n</cell>\n<text>\nNow let's try it\
    \ on a number that's not divisible by 11 or 13:\n\n\n</text>\n<cell>\nfizz_buzz(111)\n\
    </cell>\n<text>\nAnd now a number that's not divisible by 11 or 13:\n\n\n</text>\n\
    <cell>\nfizz_buzz(112)\n</cell>\n<text>", "\n  n <- n\n  return(\n    sum(\n \
    \     ifelse(\n        n %% 11 == 0 & n %% 13 == 0,\n        1,\n        ifelse(\n\
    \          n %% 11 == 0 | n %% 13 == 0,\n          2,\n          ifelse(\n   \
    \         n %% 11 == 0 & n %% 13 == 1,\n            3,\n            ifelse(\n\
    \              n %% 11 == 0 | n %% 13 == 1,\n              4,\n              ifelse(\n\
    \                n %% 11 == 0 & n %% 13 == 2,\n                5,\n          \
    \      ifelse(\n                  n %% 11 == 0 | n %% 13 == 2,\n             \
    \     6,\n                  ifelse(\n                    n %% 11 == 0 & n %% 13\
    \ == 3,\n                    7,\n                    ifelse(\n               \
    \       n %% 11 == 0 | n %% 13 == 3,\n                      8,\n             \
    \         ifelse(\n                        n %% 11 == 0 & n %% 13 == 4,\n    \
    \                    9,\n                        ifelse(\n                   \
    \       n %% 11 == 0 | n %% 13 == 4,\n                          10,\n        \
    \                  ifelse(\n                            n %% 11 == 0 & n %% 13\
    \ == 5,\n                            11,\n                            ifelse(\n\
    \                              n %% 11 == 0 | n %% 13 == 5,\n                \
    \              12,\n                              ifelse(\n                  \
    \              n %% 11 == 0 & n %% 13 == 6,\n                                13,\n\
    \                                ifelse(\n                                  n\
    \ %% 11 == 0 | n %% 13 == 6,\n                                  14,\n        \
    \                          ifelse(\n                                    n %% 11\
    \ == 0 & n %% 13 == 7,\n                                    15,\n            \
    \                        ifelse(\n                                      n %% 11\
    \ == 0 | n %% 13 == 7,\n                                      16,\n          \
    \                            ifelse(\n                                       \
    \ n %% 11 == 0 & n %% 13 == 8,\n                                        17,\n\
    \                                        ifelse(\n                           \
    \               n %% 11 == 0 | n %% 13 == 8,\n                               \
    \           18,\n                                          ifelse(\n         \
    \                                   n %% 11 == 0 & n %% 13 == 9,\n           \
    \                                 19,\n                                      \
    \      ifelse(\n                                              n %% 11 == 0 | n\
    \ %% 13 == 9,\n                                              20,\n           \
    \                                   ifelse(\n                                \
    \                n %% 11 == 0 & n %% 13 == 10,\n                             \
    \                   21,\n                                                ifelse(\n\
    \                                                  n %% 11 == 0 | n %% 13 == 10,\n\
    \                                                  22,\n                     \
    \                             ifelse(\n                                      \
    \              n %% 11 == 0 & n %% 13 == 11,\n                               \
    \                     23,\n                                                  \
    \  ifelse(\n                                                      n %% 11 == 0\
    \ | n %% 13 == 11,", "\n  n <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13 == 0)\
    \ {\n    return(0)\n  }\n  if(n %% 11 == 0) {\n    return(1)\n  }\n  if(n %% 13\
    \ == 0) {\n    return(2)\n  }\n  return(3)\n}\n", "\n  n <- as.integer(n)\n  if(n%%11==0\
    \ & n%%13==0) return(0)\n  if(n%%11==0) return(1)\n  if(n%%13==0) return(2)\n\
    \  return(3)\n}\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| a dscore=1 |>\n<code>\n\
    fizzbuzz <- function(x) {\n  if(x%%11==0 & x%%13==0) return(0)\n  if(x%%11==0)\
    \ return(1)\n  if(x%%13==0) return(2)\n  return(3)\n}\n</code>\n<|/ a tags=r,fizzbuzz\
    \ |>\n<| a dscore=1 |>\n<code>\nfizzbuzz <- function(x) {\n  if(x%%11==0 & x%%13==0)\
    \ return(0)\n  if(x%%11==0) return(1)\n  if(x%%13==0) return(2)\n  return(3)\n\
    }\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| a tags=r,fizzbuzz |>\n<code>\nfizzbuzz\
    \ <- function(x) {\n  if(x%%11==0 & x%%13==0) return(0)\n  if(x%%11==0) return(1)\n\
    \  if(x%%13==0) return(2)\n  return(3)\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1\
    \ |>\n<code>\nfizzbuzz <- function(x) {\n  if(x%%11==0 & x%%13==0) return(0)\n\
    \  if(x%%11==0) return(1)\n  if(x%%13==0) return(2)\n  return(3)\n}\n</code>\n\
    <|/ a tags=r,fizzbuzz |>\n<| a tags=r,fizzbuzz |>\n<code>\nfizzbuzz <- function(x)\
    \ {\n  if(x%%11==0 & x%%13==0) return(0)\n  if(x%%11==0) return(1)\n  if(x%%13==0)\
    \ return(2)\n  return(3)\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n\
    fizzbuzz <- function(x) {\n  if(x%%11==0 & x%%13==0) return(0)\n  if(x%%11==0)\
    \ return(1)\n  if(x%%13==0) return(2)\n  return(3)\n}\n</code>\n<|/ a tags=r,fizzbuzz",
  "\n  n <- as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0) return(1)\n\
    \  if(n%%13==0) return(2)\n  return(3)\n}\n", "\n  n <- as.integer(n)\n  if(n\
    \ %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n  return(as.integer(n %%\
    \ 11) + as.integer(n %% 13))\n}\n", "\n  n <- as.integer(n)\n  if(n %% 11 == 0\
    \ & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0) {\n    return(1)\n\
    \  }\n  if(n %% 13 == 0) {\n    return(2)\n  }\n  return(3)\n}\n</code>\n<|/ a\
    \ dscore=0 |>\n<| a dscore=0 |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n\
    \  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0) {\n\
    \    return(1)\n  }\n  if(n %% 13 == 0) {\n    return(2)\n  }\n  return(3)\n}\n\
    </code>\n<|/ a tags=r,fizzbuzz |>\n<| c |>\nWhile this code may answer the question,\
    \ providing additional context regarding how and/or why it solves the problem\
    \ would improve the answer's long-term value.\n<|/ c |>\n<| a tags=r,fizzbuzz\
    \ |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n  if(n %% 11 ==\
    \ 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0) {\n    return(1)\n\
    \  }\n  if(n %% 13 == 0) {\n    return(2)\n  }\n  return(3)\n}\n</code>\n<|/ a\
    \ dscore=0 |>\n<| a dscore=0 |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n\
    \  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0) {\n\
    \    return(1)\n  }\n  if(n %% 13 == 0) {\n    return(2)\n  }\n  return(3)\n}\n\
    </code>\n<|/ a tags=r,fizzbuzz |>\n<| a |>\n<code>\nfizz_buzz <- function(n) {\n\
    \  n <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n\
    \  if(n %% 11 == 0) {\n    return(1)\n  }\n  if(n %% 13 == 0) {\n    return(2)\n\
    \  }\n  return(3)\n}\n</code>\n<|/ a tags=r,fizzbuzz dscore=0 |>\n<| a tags=r,fizzbuzz\
    \ |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n  if(n %% 11 ==\
    \ 0 & n %% 13 == 0) {\n    return", "\n  n <- as.integer(n)\n  n <- ifelse(n %%\
    \ 11 == 0 & n %% 13 == 0, n, 0)\n  n <- ifelse(n %% 11 == 0, n %% 13, n %% 11)\n\
    \  n <- ifelse(n %% 13 == 0, n %% 11, n)\n  n <- ifelse(n %% 11 == 0 & n %% 13\
    \ == 0, n, 0)\n  n <- ifelse(n %% 11 == 0, n %% 13, n %% 11)\n  n <- ifelse(n\
    \ %% 13 == 0, n %% 11, n)\n  n <- ifelse(n %% 11 == 0 & n %% 13 == 0, n, 0)\n\
    \  n <- ifelse(n %% 11 == 0, n %% 13, n %% 11)\n  n <- ifelse(n %% 13 == 0, n\
    \ %% 11, n)\n  n <- ifelse(n %% 11 == 0 & n %% 13 == 0, n, 0)\n  n <- ifelse(n\
    \ %% 11 == 0, n %% 13, n %% 11)\n  n <- ifelse(n %% 13 == 0, n %% 11, n)\n  n\
    \ <- ifelse(n %% 11 == 0 & n %% 13 == 0, n, 0)\n  n <- ifelse(n %% 11 == 0, n\
    \ %% 13, n %% 11)\n  n <- ifelse(n %% 13 == 0, n %% 11, n)\n  n <- ifelse(n %%\
    \ 11 == 0 & n %% 13 == 0, n, 0)\n  n <- ifelse(n %% 11 == 0, n %% 13, n %% 11)\n\
    \  n <- ifelse(n %% 13 == 0, n %% 11, n)\n  n <- ifelse(n %% 11 == 0 & n %% 13\
    \ == 0, n, 0)\n  n <- ifelse(n %% 11 == 0, n %% 13, n %% 11)\n  n <- ifelse(n\
    \ %% 13 == 0, n %% 11, n)\n  n <- ifelse(n %% 11 == 0 & n %% 13 == 0, n, 0)\n\
    \  n <- ifelse(n %% 11 == 0, n %% 13, n %% 11)\n  n <- ifelse(n %% 13 == 0, n\
    \ %% 11, n)\n  n <- ifelse(n %% 11 == 0 & n %% 13 == 0, n, 0)\n  n <- ifelse(n\
    \ %% 11 == 0, n %% 13, n %% 11)\n  n <- ifelse(n %% 13 == 0, n %% 11, n)\n  n\
    \ <- ifelse(n %% 11 == 0 & n %% 13 == 0, ", "\n  n <- as.integer(n)\n  if(n %%\
    \ 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n/11) +\
    \ fizz_buzz(n/13))\n}\n\nfizz_buzz(50)", "\n  n <- as.integer(n)\n  return(sum(n\
    \ %% 11 == 0 & n %% 13 == 0))\n}\n</cell>\n<cell>\nfizz_buzz(50)\n</cell>\n<cell>\n\
    fizz_buzz(78)\n</cell>\n<cell>\nfizz_buzz(79)\n</cell>\n<text>\nExercise: Write\
    \ a function that returns the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 3 or 5.\n\n\n</text>\n<cell>", "\n  n <-\
    \ as.integer(n)\n  if(n %% 11 == 0 | n %% 13 == 0) {\n    return(0)\n  }\n  if(n\
    \ %% 11 != 0) {\n    return(fizz_buzz(n %% 11))\n  }\n  if(n %% 13 != 0) {\n \
    \   return(fizz_buzz(n %% 13))\n  }\n  return(fizz_buzz(n %% 11) + fizz_buzz(n\
    \ %% 13))\n}\n</code>\n<|/ a tags=r,fizzbuzz,recursion |>\n<| c |>\nThanks, this\
    \ was very helpful!\n<|/ c |>\n<| a dscore=2 |>\nHere's a recursive solution that\
    \ is fairly straightforward to understand:\n<code>\nfizzbuzz <- function(n) {\n\
    \  if (n %% 11 == 0 | n %% 13 == 0) {\n    return(0)\n  }\n  if (n %% 11 != 0)\
    \ {\n    return(fizzbuzz(n %% 11))\n  }\n  if (n %% 13 != 0) {\n    return(fizzbuzz(n\
    \ %% 13))\n  }\n  return(fizzbuzz(n %% 11) + fizzbuzz(n %% 13))\n}\n</code>\n\
    <|/ a tags=r,fizzbuzz,recursion |>\n<| a dscore=2 |>\nHere's a solution using\
    \ purrr:\n<code>\nlibrary(purrr)\n\nfizzbuzz <- function(n) {\n  n <- as.integer(n)\n\
    \  if(n %% 11 == 0 | n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 != 0) {\n\
    \    return(fizzbuzz(n %% 11))\n  }\n  if(n %% 13 != 0) {\n    return(fizzbuzz(n\
    \ %% 13))\n  }\n  return(fizzbuzz(n %% 11) + fizzbuzz(n %% 13))\n}\n\nfizzbuzz(50)",
  "\n  n <- as.integer(n)\n  n <- as.integer(n)\n  n <- as.integer(n)\n  n <- as.integer(n)\n\
    \  n <- as.integer(n)\n  n <- as.integer(n)\n  n <- as.integer(n)\n  n <- as.integer(n)\n\
    \  n <- as.integer(n)\n  n <- as.integer(n)\n  n <- as.integer(n)\n  n <- as.integer(n)\n\
    \  n <- as.integer(n)\n  n <- as.integer(n)\n  n <- as.integer(n)\n  n <- as.integer(n)\n\
    \  n <- as.integer(n)\n  n <- as.integer(n)\n  n <- as.integer(n)\n  n <- as.integer(n)\n\
    \  n <- as.integer(n)\n  n <- as.integer(n)\n  n <- as.integer(n)\n  n <- as.integer(n)\n\
    \  n <- as.integer(n)\n  n <- as.integer(n)\n  n <- as.integer(n)\n  n <- as.integer(n)\n\
    \  n <- as.integer(n)\n  n <- as.integer(n)\n  n <- as.integer(n)\n  n <- as.integer(n)\n\
    \  n <- as.integer(n)\n  n <- as.integer(n)\n  n <- as.integer(n)\n  n <- as.integer(n)\n\
    \  n <- as.integer(n)\n  n <- as.integer(n)\n  n <- as.integer(n)\n  n <- as.integer(n)\n\
    \  n <- as.integer(n)\n  n <- as.integer(n)\n  n <- as.integer(n)\n  n <- as.integer(n)\n\
    \  n <- as.integer(n)\n  n <- as.integer(n)\n  n <- as.integer(n)\n  n <- as.integer(n)\n\
    \  n <- as.integer(n)\n  n <- as.integer(n)\n  n <- as.integer(n)\n  n <- as.integer(n)\n\
    \  n <- as.integer(n)\n  n <- as.integer(n)\n  n <- as.integer(n)\n  n <- as.integer(n)\n\
    \  n <- as.integer(n)\n  n <- as.integer(n)\n  n <- as.integer(n)\n  n <- as.integer(n)\n\
    \  n <- as.integer(n)\n  n <- as.integer(n)\n  n <- as.integer(n)\n  n <- as.integer(n)",
  "\n  return(sum(as.integer(n %% 11) == 0 & as.integer(n %% 13) == 0))\n}\n</code>\n\
    <|/ a |>\n<| c |>\nThis doesn't work for me. `fizz_buzz(50)` returns `0` instead\
    \ of `2`.\n<|/ c |>\n<| c |>\nI tested it on R 3.2.2 on Windows and it worked\
    \ fine. Maybe you have a different version of R?\n<|/ c |>\n<| c |>\nI tested\
    \ it on R 3.2.2 on Ubuntu 14.04 and it worked fine. Maybe you have a different\
    \ version of R?\n<|/ c |>\n<| c |>\nI tested it on R 3.2.2 on Mac OS X and it\
    \ worked fine. Maybe you have a different version of R?\n<|/ c |>\n<| c |>\nI\
    \ tested it on R 3.2.2 on Ubuntu 14.04 and it worked fine. Maybe you have a different\
    \ version of R?\n<|/ c |>\n<| a dscore=2 |>\nHere's a solution that uses R's vectorized\
    \ operations:\n<code>\nfizz_buzz <- function(n) {\n  return(sum(as.integer(n %%\
    \ 11) == 0 & as.integer(n %% 13) == 0))\n}\n</code>\n<|/ a tags=r,fizzbuzz |>\n\
    <| c |>\nThis doesn't work for me. `fizz_buzz(50)` returns `0` instead of `2`.\n\
    <|/ c |>\n<| c |>\nI tested it on R 3.2.2 on Windows and it worked fine. Maybe\
    \ you have a different version of R?\n<|/ c |>\n<| c |>\nI tested it on R 3.2.2\
    \ on Ubuntu 14.04 and it worked fine. Maybe you have a different version of R?\n\
    <|/ c |>\n<| c |>\nI tested it on R 3.2.2 on Mac OS X and it worked fine. Maybe\
    \ you have a different version of R?\n<|/ c |>\n<| c |>\nI tested it on R 3.2.2\
    \ on Ubuntu 14.04 and it worked fine. Maybe you have a different version of R?\n\
    <|/ c |>\n<| a dscore=2 |>\n<code>\nfizz_buzz <- function(n) {\n  return(sum(as.integer(n\
    \ %% 11) == 0 & as.integer(n %% 13) == 0))\n}\n</code>\n<|/ a tags=r,fizzbuzz\
    \ |>\n<| c |>\nThis doesn't ", "\n  n <- as.integer(n)\n  if(n %% 11 == 0 & n\
    \ %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0) {\n    return(1)\n  }\n\
    \  if(n %% 13 == 0) {\n    return(2)\n  }\n  return(3)\n}\n", "\n  n <- n\n  if(n%%11==0\
    \ & n%%13==0) return(0)\n  if(n%%11==0) return(1)\n  if(n%%13==0) return(2)\n\
    \  return(3)\n}\n", "\n  return(length(grep(\"7\", as.character(n), value = TRUE))/\n\
    \         length(grep(\"11\", as.character(n), value = TRUE))/\n         length(grep(\"\
    13\", as.character(n), value = TRUE)))\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=r,fizzbuzz\
    \ |>\n<code>\nfizzbuzz <- function(x){\n  if(x %% 11 == 0){\n    return(paste0(\"\
    Fizz\", x))\n  }\n  if(x %% 13 == 0){\n    return(paste0(\"Buzz\", x))\n  }\n\
    \  if(x %% 15 == 0){\n    return(paste0(\"FizzBuzz\", x))\n  }\n  return(x)\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\nfizzbuzz <- function(x){\n\
    \  if(x %% 11 == 0){\n    return(paste0(\"Fizz\", x))\n  }\n  if(x %% 13 == 0){\n\
    \    return(paste0(\"Buzz\", x))\n  }\n  if(x %% 15 == 0){\n    return(paste0(\"\
    FizzBuzz\", x))\n  }\n  return(x)\n}\n</code>\n<|/ a tags=r,fizzbuzz |>\n<| a\
    \ tags=r,fizzbuzz |>\n<code>\nfizzbuzz <- function(x){\n  if(x %% 11 == 0){\n\
    \    return(paste0(\"Fizz\", x))\n  }\n  if(x %% 13 == 0){\n    return(paste0(\"\
    Buzz\", x))\n  }\n  if(x %% 15 == 0){\n    return(paste0(\"FizzBuzz\", x))\n \
    \ }\n  return(x)\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=r,fizzbuzz |>\n<code>\n\
    fizzbuzz <- function(x){\n  if(x %% 11 == 0){\n    return(paste0(\"Fizz\", x))\n\
    \  }\n  if(x %% 13 == 0){\n    return(paste0(\"Buzz\", x))\n  }\n  if(x %% 15\
    \ == 0){\n    return(paste0(\"FizzBuzz\", x))\n  }\n  return(x)\n}\n</code>\n\
    <|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\nfizzbuzz <- function(x){\n  if(x\
    \ %% 11 == 0)", "\n  n <- as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n\
    \  if(n%%11==0) return(1)\n  if(n%%13==0) return(2)\n  return(3)\n}\n", "\n  n\
    \ <- as.integer(n)\n  if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n\
    \  return(fizz_buzz(n/11) + fizz_buzz(n/13))\n}\n</code>\n<|/ a dscore=2 |>\n\
    <| c |>\nI like your solution, but I wonder if there is a way to do it without\
    \ recursion.\n<|/ c |>\n<| c |>\nI added a recursive solution which I believe\
    \ is more elegant than my recursive solution. Hope it helps.\n<|/ c |>\n<| c |>\n\
    I added a recursive solution which I believe is more elegant than my recursive\
    \ solution. Hope it helps.\n<|/ c |>\n<| a tags=r,recursion,fizzbuzz |>\n<code>\n\
    fizzbuzz <- function(x){\n  if(x %% 11 == 0) return(0)\n  if(x %% 13 == 0) return(2)\n\
    \  return(fizzbuzz(x/11) + fizzbuzz(x/13))\n}\n</code>\n<|/ a dscore=2 |>\n<|\
    \ a tags=r,recursion,fizzbuzz |>\n<code>\nfizzbuzz <- function(x){\n  if(x %%\
    \ 11 == 0) return(0)\n  if(x %% 13 == 0) return(2)\n  return(fizzbuzz(x/11) +\
    \ fizzbuzz(x/13))\n}\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2 |>\n<code>\nfizzbuzz\
    \ <- function(x){\n  if(x %% 11 == 0) return(0)\n  if(x %% 13 == 0) return(2)\n\
    \  return(fizzbuzz(x/11) + fizzbuzz(x/13))\n}\n</code>\n<|/ a tags=r,recursion,fizzbuzz\
    \ |>\n<| a dscore=2 |>\n<code>\nfizzbuzz <- function(x){\n  if(x %% 11 == 0) return(0)\n\
    \  if(x %% 13 == 0) return(2)\n  return(fizzbuzz(x/11) + fizzbuzz(x/13))\n}\n\
    </code>\n<|/ a tags=r,recursion,fizzbuzz |>\n<| a tags=r,recursion,fizzbuzz |>\n\
    <code>\nfizzbuzz <- function(x){\n  if(x %% 11 == 0) return(0)\n  if(x %% 13 ==\
    \ 0) return(2)", "\n  n <- as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n\
    \  if(n%%11==0) return(1)\n  if(n%%13==0) return(2)\n  return(3)\n}\n", "\n  n\
    \ <- as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0) return(1)\n\
    \  if(n%%13==0) return(2)\n  return(3)\n}\n", "\n  n <- as.integer(n)\n  if(n\
    \ %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 & n %% 13\
    \ != 0) {\n    return(1)\n  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n\
    \  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  }\n}\n", "\n  n <-\
    \ as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0) return(1)\n\
    \  if(n%%13==0) return(2)\n  return(3)\n}\n", "\n  n <- as.integer(n)\n  if(n\
    \ %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n -\
    \ 1))\n}\n</code>\n<|/ a tags=r,recursion,fizzbuzz |>\n<| a |>\n<code>\nfizzbuzz\
    \ <- function(n) {\n  if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n\
    \  return(fizzbuzz(n - 1))\n}\n\nfizzbuzz(50)", "\n  n <- as.integer(n)\n  if(n\
    \ %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n  return(length(which(n\
    \ %% 7 == 0)) + 1)\n}\n", "\n  n <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13\
    \ == 0) {\n    return(0)\n  } else if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n\
    \  } else if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n  } else if(n %% 11\
    \ != 0 & n %% 13 != 0) {\n    return(3)\n  } else {\n    return(NA)\n  }\n}\n\
    </cell>\n<cell>\nfizz_buzz(50)\n</cell>\n<cell>\nfizz_buzz(78)\n</cell>\n<cell>\n\
    fizz_buzz(79)\n</cell>\n<cell>\nfizz_buzz(100)\n</cell>\n<cell>\nfizz_buzz(101)\n\
    </cell>\n<cell>\nfizz_buzz(102)\n</cell>\n<cell>\nfizz_buzz(103)\n</cell>\n<cell>\n\
    fizz_buzz(104)\n</cell>\n<cell>\nfizz_buzz(105)\n</cell>\n<cell>\nfizz_buzz(106)\n\
    </cell>\n<cell>\nfizz_buzz(107)\n</cell>\n<cell>\nfizz_buzz(108)\n</cell>\n<cell>\n\
    fizz_buzz(109)\n</cell>\n<cell>\nfizz_buzz(110)\n</cell>\n<cell>\nfizz_buzz(111)\n\
    </cell>\n<cell>\nfizz_buzz(112)\n</cell>\n<cell>\nfizz_buzz(113)\n</cell>\n<cell>\n\
    fizz_buzz(114)\n</cell>\n<cell>\nfizz_buzz(115)\n</cell>\n<cell>\nfizz_buzz(116)\n\
    </cell>\n<cell>\nfizz_buzz(117)\n</cell>\n<cell>\nfizz_buzz(118)\n</cell>\n<cell>\n\
    fizz_buzz(119)\n</cell>\n<cell>\nfizz_buzz(120)\n</cell>\n<cell>\nfizz_buzz(121)\n\
    </cell", "\n  n <- n\n  if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n\
    \  return(fizz_buzz(n/11) + fizz_buzz(n/13))\n}\n</cell>\n<cell>\nfizz_buzz(50)\n\
    </cell>\n<text>\nThe fizz_buzz function above is recursive. Recursion is when\
    \ a function calls itself. In this case, the function calls itself twice for each\
    \ number divisible by 11 and 13. Let's see how this works:\n\n\n</text>\n<cell>\n\
    fizz_buzz(50)\n</cell>\n<cell>\nfizz_buzz(78)\n</cell>\n<cell>\nfizz_buzz(79)\n\
    </cell>\n<text>\nAs you can see, fizz_buzz calls itself twice for each number\
    \ divisible by 11 and 13. Let's see how this works in practice:\n\n\n</text>\n\
    <cell>\nfizz_buzz(50)\n</cell>\n<cell>\nfizz_buzz(78)\n</cell>\n<cell>\nfizz_buzz(79)\n\
    </cell>\n<cell>\nfizz_buzz(100)\n</cell>\n<cell>\nfizz_buzz(101)\n</cell>\n<cell>\n\
    fizz_buzz(102)\n</cell>\n<cell>\nfizz_buzz(103)\n</cell>\n<cell>\nfizz_buzz(104)\n\
    </cell>\n<cell>\nfizz_buzz(105)\n</cell>\n<cell>\nfizz_buzz(106)\n</cell>\n<cell>\n\
    fizz_buzz(107)\n</cell>\n<cell>\nfizz_buzz(108)\n</cell>\n<cell>\nfizz_buzz(109)\n\
    </cell>\n<cell>\nfizz_buzz(110)\n</cell>\n<cell>\nfizz_buzz(111)\n</cell>\n<cell>\n\
    fizz_buzz(112)\n</cell>\n<cell>\nfizz_buzz(113)\n</cell>\n<cell>\nfizz_buzz(114)\n\
    </cell>\n<cell>\nfi", "\n  n <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13 ==\
    \ 0) {\n    return(0)\n  }\n  if(n %% 11 == 0) {\n    return(1)\n  }\n  if(n %%\
    \ 13 == 0) {\n    return(2)\n  }\n  return(3)\n}\n</code>\n<|/ a tags=r,fizzbuzz,for-loop\
    \ |>\n<| c |>\nThank you so much! This was very helpful!\n<|/ c |>\n<| a tags=r,fizzbuzz,for-loop\
    \ |>\n<code>\nfizzbuzz <- function(n) {\n  if(n %% 11 == 0 & n %% 13 == 0) {\n\
    \    return(0)\n  }\n  if(n %% 11 == 0) {\n    return(1)\n  }\n  if(n %% 13 ==\
    \ 0) {\n    return(2)\n  }\n  return(3)\n}\n\nfizzbuzz <- function(n) {\n  if(n\
    \ %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0) {\n   \
    \ return(1)\n  }\n  if(n %% 13 == 0) {\n    return(2)\n  }\n  return(3)\n}\n\n\
    fizzbuzz <- function(n) {\n  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n\
    \  }\n  if(n %% 11 == 0) {\n    return(1)\n  }\n  if(n %% 13 == 0) {\n    return(2)\n\
    \  }\n  return(3)\n}\n\nfizzbuzz <- function(n) {\n  if(n %% 11 == 0 & n %% 13\
    \ == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0) {\n    return(1)\n  }\n  if(n\
    \ %% 13 == 0) {\n    return(2)\n  }\n  return(3)\n}\n\nfizzbuzz <- function(n)\
    \ {\n  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 ==\
    \ 0) {\n    return(1)\n  }\n  if(n %% 13 == 0) {\n    return(2)\n  }\n  return(3)\n\
    }\n\nfizzbuzz <- function(n) {\n  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n\
    \  }\n  if(n %% 11 == 0) {\n    return(1)\n  }\n  if(n %% 13 == 0) {\n    return(2)\n\
    \  }\n  return(3)\n}\n\nfizzbuzz <- function(n) {\n  if(n %% 11 == 0 & n %% 13\
    \ == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0) {\n    return(1)\n  }\n  if(n\
    \ %% 13 == 0) {\n    return(2)\n  }\n  return(3)\n}\n\nfizz", "\n  n <- as.integer(n)\n\
    \  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 &\
    \ n %% 13 != 0) {\n    return(1)\n  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n \
    \   return(2)\n  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  }\n\
    }\n</cell>\n<cell>\nfizz_buzz(50)\n</cell>\n<cell>\nfizz_buzz(78)\n</cell>\n<cell>\n\
    fizz_buzz(79)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the\
    \ number of times the digit 7 appears in integers less than n which are divisible\
    \ by 11 or 13. Test your function by calling it on integers less than 100. Test\
    \ your function by calling it on integers less than 1000.\n\n\n</text>\n<cell>",
  "\n  n <- as.integer(n)\n  if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n\
    \  return(fizz_buzz(n - 1))\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThanks so\
    \ much for this! I really appreciate it!\n<|/ c |>\n<| a dscore=1 |>\nThis can\
    \ be done with recursion:\n<code>\nfizz_buzz <- function(n) {\n  if(n %% 11 ==\
    \ 0) return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n - 1))\n}\n\
    </code>\n<|/ a tags=r,recursion,fizzbuzz |>\n<| a tags=r,recursion,fizzbuzz |>\n\
    <code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n  if(n %% 11 == 0) return(0)\n\
    \  if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n - 1))\n}\n</code>\n<|/ a dscore=1\
    \ |>\n<| a |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n  if(n\
    \ %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n -\
    \ 1))\n}\n</code>\n<|/ a dscore=1 tags=r,recursion,fizzbuzz |>\n<| a dscore=1\
    \ |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n  if(n %% 11 ==\
    \ 0) return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n - 1))\n}\n\
    </code>\n<|/ a tags=r,recursion,fizzbuzz |>\n<| a tags=r,recursion,fizzbuzz |>\n\
    <code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n  if(n %% 11 == 0) return(0)\n\
    \  if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n - 1))\n}\n</code>\n<|/ a dscore=1\
    \ |>\n<| a tags=r,recursion,fizzbuzz |>\n<code>\nfizz_buzz <- function(n) {\n\
    \  n <- as.integer(n)\n  if(n %% 11 == 0) return(0)\n  if(", "\n  n <- n\n  return(sum(n\
    \ %% 11 == 0 & n %% 13 == 0))\n}\n</cell>\n<cell>\nfizz_buzz(50)\n</cell>\n<cell>\n\
    fizz_buzz(78)\n</cell>\n<cell>\nfizz_buzz(79)\n</cell>\n<cell>\nfizz_buzz(100)\n\
    </cell>\n<cell>\nfizz_buzz(1000)\n</cell>\n<cell>\nfizz_buzz(10000)\n</cell>\n\
    <cell>\nfizz_buzz(100000)\n</cell>\n<cell>\nfizz_buzz(1000000)\n</cell>\n<cell>\n\
    fizz_buzz(10000000)\n</cell>\n<cell>\nfizz_buzz(100000000)\n</cell>\n<cell>\n\
    fizz_buzz(1000000000)\n</cell>\n<cell>\nfizz_buzz(10000000000)\n</cell>\n<cell>\n\
    fizz_buzz(100000000000)\n</cell>\n<cell>\nfizz_buzz(1000000000000)\n</cell>\n\
    <cell>\nfizz_buzz(1000000000001)\n</cell>\n<cell>\nfizz_buzz(1000000000002)\n\
    </cell>\n<cell>\nfizz_buzz(1000000000003)\n</cell>\n<cell>\nfizz_buzz(1000000000004)\n\
    </cell>\n<cell>\nfizz_buzz(1000000000005)\n</cell>\n<cell>\nfizz_buzz(1000000000006)\n\
    </cell>\n<cell>\nfizz_buzz(1000000000007)\n</cell>\n<cell>\nfizz_buzz(1000000000008)\n\
    </cell>\n<cell>\nfizz_buzz(1000000000009)\n</cell>\n<cell>\nfizz_buzz(1000000000010)\n\
    </cell>\n<cell>\nfizz_buzz(1000000000011)\n</cell>\n<cell>\nfizz_buzz(1000000000012)\n\
    </cell>\n<cell>\nfizz_buzz(1000000000013)\n</cell>\n<", "\n  n <- as.integer(n)\n\
    \  if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n\
    \ - 1))\n}\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThanks for the answer! I didn't\
    \ know about `%%` operator. I'm still learning R and I didn't know about it.\n\
    <|/ c |>\n<| c |>\nI added a recursive solution to my answer. Hope it helps.\n\
    <|/ c |>\n<| c |>\nThanks for the answer! I didn't know about `%%` operator. I'm\
    \ still learning R and I didn't know about it.\n<|/ c |>\n<| a tags=r,recursion,fizzbuzz\
    \ |>\n<code>\nfizzbuzz <- function(n) {\n  if(n %% 11 == 0) return(0)\n  if(n\
    \ %% 13 == 0) return(2)\n  return(fizzbuzz(n - 1))\n}\n</code>\n<|/ a dscore=1\
    \ |>\n<| a dscore=1 |>\n<code>\nfizzbuzz <- function(n) {\n  if(n %% 11 == 0)\
    \ return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizzbuzz(n - 1))\n}\n</code>\n\
    <|/ a tags=r,recursion,fizzbuzz |>\n<| a dscore=1 |>\n<code>\nfizzbuzz <- function(n)\
    \ {\n  if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizzbuzz(n\
    \ - 1))\n}\n</code>\n<|/ a tags=r,recursion,fizzbuzz |>\n<| a tags=r,recursion,fizzbuzz\
    \ |>\n<code>\nfizzbuzz <- function(n) {\n  if(n %% 11 == 0) return(0)\n  if(n\
    \ %% 13 == 0) return(2)\n  return(fizzbuzz(n - 1))\n}\n</code>\n<|/ a dscore=1\
    \ |>\n<| a tags=r,recursion,fizzbuzz |>\n<code>\nfizzbuzz <- function(n) {\n \
    \ if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizzbuzz(n\
    \ - 1))\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=r,recursion,fizzbuzz |>\n<code>\n\
    fizzbuzz <- function(n) {\n  if(", "\n  n <- as.integer(n)\n  if(n%%11==0 & n%%13==0)\
    \ return(0)\n  if(n%%11==0) return(1)\n  if(n%%13==0) return(2)\n  return(3)\n\
    }\n</cell>\n<text>\nNow we can test our function by comparing the results with\
    \ those from Python:\n\n\n</text>\n<cell>\nfizz_buzz(50)\n</cell>\n<cell>\nfizz_buzz(78)\n\
    </cell>\n<cell>\nfizz_buzz(79)\n</cell>\n<text>\nThe function works as expected\
    \ in R:\n\n\n</text>\n<cell>\nfizz_buzz(50)\n</cell>\n<cell>\nfizz_buzz(78)\n\
    </cell>\n<cell>\nfizz_buzz(79)\n</cell>\n<text>\nExercise: Write a function that\
    \ returns the number of times the digit 7 appears in integers less than n which\
    \ are divisible by 11 or 13. Test your function by comparing the results with\
    \ those from Python.\n\n\n</text>\n<cell>", "\n  n <- as.integer(n)\n  if(n %%\
    \ 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n - 1))\n\
    }\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThanks for your answer! I appreciate it.\
    \ I was wondering if there was a way to do this without recursion. I'm just trying\
    \ to learn how to do things in R and I wanted to see if I could do it without\
    \ recursion.\n<|/ c |>\n<| c |>\nI added a recursive solution to my answer. Hope\
    \ it helps.\n<|/ c |>\n<| c |>\nThanks for your answer! I appreciate it. I was\
    \ wondering if there was a way to do this without recursion. I'm just trying to\
    \ learn how to do things in R and I wanted to see if I could do it without recursion.\n\
    <|/ c |>\n<| c |>\nI added a recursive solution to my answer. Hope it helps.\n\
    <|/ c |>\n<| a dscore=1 |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n\
    \  if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n\
    \ - 1))\n}\n</code>\n<|/ a tags=r,recursion |>\n<| c |>\nThanks for your answer!\
    \ I appreciate it. I was wondering if there was a way to do this without recursion.\
    \ I'm just trying to learn how to do things in R and I wanted to see if I could\
    \ do it without recursion.\n<|/ c |>\n<| c |>\nI added a recursive solution to\
    \ my answer. Hope it helps.\n<|/ c |>\n<| a tags=r,recursion |>\n<code>\nfizz_buzz\
    \ <- function(n) {\n  n <- as.integer(n)\n  if(n %% 11 == 0) return(0)\n  if(n\
    \ %% 13 == 0) return(2)\n  return(fizz_buzz(n - 1))\n}\n</code>\n<|/ a dscore=1\
    \ |>\n<| c |>\nThanks for your answer! I appreciate it. I was wondering if there\
    \ was a way to do this without recursion. I'm just trying to learn how to do things\
    \ in R and I wanted to see if I could do it without recursion.\n<|/ c |>\n<| a\
    \ dscore=1 |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n  if(n\
    \ %% 11 == 0) return(0)\n  if(n ", "\n  n <- as.integer(n)\n  if(n %% 11 == 0\
    \ & n %% 13 == 0) {\n    return(0)\n  } else if(n %% 11 == 0 & n %% 13 != 0) {\n\
    \    return(1)\n  } else if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n  }\
    \ else if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  } else {\n    return(NA)\n\
    \  }\n}\n</cell>\n<cell>\nfizz_buzz(50)\n</cell>\n<cell>\nfizz_buzz(78)\n</cell>\n\
    <cell>\nfizz_buzz(79)\n</cell>\n<cell>\nfizz_buzz(100)\n</cell>\n<cell>\nfizz_buzz(101)\n\
    </cell>\n<cell>\nfizz_buzz(102)\n</cell>\n<cell>\nfizz_buzz(103)\n</cell>\n<cell>\n\
    fizz_buzz(104)\n</cell>\n<cell>\nfizz_buzz(105)\n</cell>\n<cell>\nfizz_buzz(106)\n\
    </cell>\n<cell>\nfizz_buzz(107)\n</cell>\n<cell>\nfizz_buzz(108)\n</cell>\n<cell>\n\
    fizz_buzz(109)\n</cell>\n<cell>\nfizz_buzz(110)\n</cell>\n<cell>\nfizz_buzz(111)\n\
    </cell>\n<cell>\nfizz_buzz(112)\n</cell>\n<cell>\nfizz_buzz(113)\n</cell>\n<cell>\n\
    fizz_buzz(114)\n</cell>\n<cell>\nfizz_buzz(115)\n</cell>\n<cell>\nfizz_buzz(116)\n\
    </cell>\n<cell>\nfizz_buzz(117)\n</cell>\n<cell>\nfizz_buzz(118)\n</cell>\n<cell>\n\
    fizz_buzz(119)\n</cell>\n<cell>\nfizz_buzz(120)\n</cell>\n<cell>\nfizz_buzz(121)\n\
    </cell", "\n  n <- as.integer(n)\n  if(n%%11==0 || n%%13==0) return(0)\n  return(as.integer(n%%11)\
    \ + as.integer(n%%13))\n}\n</cell>\n<cell>\nfizz_buzz(50)\n</cell>\n<cell>\nfizz_buzz(78)\n\
    </cell>\n<cell>\nfizz_buzz(79)\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that returns the number of times the digit 7 appears in integers less than n\
    \ which are divisible by 3 or 5.\n\n\n</text>\n<cell>", "\n  n <- n\n  return(\n\
    \    sum(\n      ifelse(\n        n %% 11 == 0 & n %% 13 == 0,\n        1,\n \
    \       ifelse(\n          n %% 11 == 0 | n %% 13 == 0,\n          2,\n      \
    \    ifelse(\n            n %% 11 == 1 | n %% 13 == 1,\n            3,\n     \
    \       ifelse(\n              n %% 11 == 2 | n %% 13 == 2,\n              4,\n\
    \              ifelse(\n                n %% 11 == 3 | n %% 13 == 3,\n       \
    \         5,\n                ifelse(\n                  n %% 11 == 4 | n %% 13\
    \ == 4,\n                  6,\n                  ifelse(\n                   \
    \ n %% 11 == 5 | n %% 13 == 5,\n                    7,\n                    ifelse(\n\
    \                      n %% 11 == 6 | n %% 13 == 6,\n                      8,\n\
    \                      ifelse(\n                        n %% 11 == 7 | n %% 13\
    \ == 7,\n                        9,\n                        ifelse(\n       \
    \                   n %% 11 == 8 | n %% 13 == 8,\n                          10,\n\
    \                          ifelse(\n                            n %% 11 == 9 |\
    \ n %% 13 == 9,\n                            11,\n                           \
    \ ifelse(\n                              n %% 11 == 10 | n %% 13 == 10,\n    \
    \                          12,\n                              ifelse(\n      \
    \                          n %% 11 == 11 | n %% 13 == 11,\n                  \
    \              13,\n                                ifelse(\n                \
    \                  n %% 11 == 12 | n %% 13 == 12,\n                          \
    \        14,\n                                  ifelse(\n                    \
    \                n %% 11 == 13 | n %% 13 == 13,\n                            \
    \        15,\n                                    ifelse(\n                  \
    \                    n %% 11 == 14 | n %% 13 == 14,\n                        \
    \              16,\n                                      ifelse(\n          \
    \                              n %% 11 == 15 | n %% 13 == 15,\n              \
    \                          17,\n                                        ifelse(\n\
    \                                          n %% 11 == 16 | n %% 13 == 16,\n  \
    \                                        18,\n                               \
    \           ifelse(\n                                            n %% 11 == 17\
    \ | n %% 13 == 17,\n                                            19,\n        \
    \                                    ifelse(\n                               \
    \               n %% 11 == 18 | n %% 13 == 18,\n                             \
    \                 20,\n                                              ifelse(\n\
    \                                                n %% 11 == 19 | n %% 13 == 19,\n\
    \                                                21,\n                       \
    \                         ifelse(\n                                          \
    \        n %% 11 == 20 | n %% 13 == 20,\n                                    \
    \              22,\n                                                  ifelse(\n\
    \                                                    n %% 11 == 21 | n %% 13 ==\
    \ 21,\n                                                    23,\n             \
    \                                       ifelse(\n                            \
    \                          n %% 11 == 22 | n %% 13 == 22,\n                  \
    \                                    24,\n                                   \
    \                   ifelse(\n                                                \
    \        n ", "\n  n <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13 == 0) {\n \
    \   return(0)\n  }\n  if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n  }\n\
    \  if(n %% 11 != 0 & n %% 13 == 0) {\n    return(2)\n  }\n  if(n %% 11 != 0 &\
    \ n %% 13 != 0) {\n    return(3)\n  }\n}\n\nfizz_buzz(50)\nfizz_buzz(78)\nfizz_buzz(79)\n\
    fizz_buzz(100)\nfizz_buzz(123)\nfizz_buzz(125)\nfizz_buzz(126)\nfizz_buzz(127)\n\
    fizz_buzz(130)\nfizz_buzz(131)\nfizz_buzz(132)\nfizz_buzz(133)\nfizz_buzz(134)\n\
    fizz_buzz(135)\nfizz_buzz(136)\nfizz_buzz(137)\nfizz_buzz(138)\nfizz_buzz(139)\n\
    fizz_buzz(140)\nfizz_buzz(141)\nfizz_buzz(142)\nfizz_buzz(143)\nfizz_buzz(144)\n\
    fizz_buzz(145)\nfizz_buzz(146)\nfizz_buzz(147)\nfizz_buzz(148)\nfizz_buzz(149)\n\
    fizz_buzz(150)\nfizz_buzz(151)\nfizz_buzz(152)\nfizz_buzz(153)\nfizz_buzz(154)\n\
    fizz_buzz(155)\nfizz_buzz(156)\nfizz_buzz(157)\nfizz_buzz(158)\nfizz_buzz(159)\n\
    fizz_buzz(160)\nfizz_buzz(161)\nfizz_buzz(162)\nfizz_buzz(163)\nfizz_buzz(164)\n\
    fizz_buzz(165)\nfizz_buzz(166)\nfizz_buzz(167)\nfizz_buzz(168)\nfizz_buzz(", "\n\
    \  n <- as.integer(n)\n  return(sum(n %% 11 == 0 & n %% 13 == 0))\n}\n", "\n \
    \ n <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n\
    \  if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n  }\n  if(n %% 11 != 0 &\
    \ n %% 13 == 0) {\n    return(2)\n  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n \
    \   return(3)\n  }\n}\n</cell>\n<cell>\nfizz_buzz(50)\n</cell>\n<cell>\nfizz_buzz(78)\n\
    </cell>\n<cell>\nfizz_buzz(79)\n</cell>\n<text>\nExercise: Write a function that\
    \ takes a vector of numbers and returns the number of numbers in the vector that\
    \ are divisible by 7 and are also divisible by 11.\n\n\n</text>\n<cell>", "\n\
    \  n <- as.integer(n)\n  if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n\
    \  return(fizz_buzz(n - 1))\n}\n</code>\n<|/ a tags=r,recursion,fizzbuzz |>\n\
    <| c |>\nThanks for the answer! I appreciate it!\n<|/ c |>\n<| a dscore=2 |>\n\
    <code>\nfizzbuzz <- function(x){\n  if(x %% 11 == 0){\n    return(0)\n  }\n  if(x\
    \ %% 13 == 0){\n    return(2)\n  }\n  return(fizzbuzz(x - 1))\n}\n</code>\n<|/\
    \ a tags=r,recursion,fizzbuzz |>\n<| a |>\n<code>\nfizzbuzz <- function(x){\n\
    \  if(x %% 11 == 0){\n    return(0)\n  }\n  if(x %% 13 == 0){\n    return(2)\n\
    \  }\n  return(fizzbuzz(x - 1))\n}\n</code>\n<|/ a tags=r,recursion,fizzbuzz dscore=2\
    \ |>\n<| a tags=r,recursion,fizzbuzz |>\n<code>\nfizzbuzz <- function(x){\n  if(x\
    \ %% 11 == 0){\n    return(0)\n  }\n  if(x %% 13 == 0){\n    return(2)\n  }\n\
    \  return(fizzbuzz(x - 1))\n}\n</code>\n<|/ a dscore=2 |>\n<| a |>\n<code>\nfizzbuzz\
    \ <- function(x){\n  if(x %% 11 == 0){\n    return(0)\n  }\n  if(x %% 13 == 0){\n\
    \    return(2)\n  }\n  return(fizzbuzz(x - 1))\n}\n</code>\n<|/ a tags=r,recursion,fizzbuzz\
    \ dscore=2 |>\n<| a tags=r,recursion,fizzbuzz |>\n<code>\nfizzbuzz <- function(x){\n\
    \  if(x %% 11 == 0){\n    return(0)\n  }\n  if(x %% 13 == 0){\n    return(2)\n\
    \  }\n  return(fizzbuzz(x - 1))\n}\n</code>\n<|/ a dscore=2 |>\n<| a tags=r,recursion,fizzbuzz\
    \ |>\n<code>\nfizzbuzz <- function(x){\n  if(x %% 11 == 0){\n    return(0)\n \
    \ }\n  if(x %% 13 == 0){", "\n  n <- as.integer(n)\n  if(n %% 11 == 0) return(0)\n\
    \  if(n %% 13 == 0) return(2)\n  return(fizz_buzz(n/11) + fizz_buzz(n/13))\n}\n\
    </code>\n<|/ a tags=r,recursion,fizzbuzz |>\n<| a dscore=0 |>\n<code>\nfizzbuzz\
    \ <- function(x) {\n  if(x %% 11 == 0) return(0)\n  if(x %% 13 == 0) return(2)\n\
    \  return(fizzbuzz(x/11) + fizzbuzz(x/13))\n}\n</code>\n<|/ a tags=r,recursion,fizzbuzz\
    \ |>\n<| c |>\nWhile this code may answer the question, providing additional context\
    \ regarding how and/or why it solves the problem would improve the answer's long-term\
    \ value.\n<|/ c |>\n<| a tags=r,recursion,fizzbuzz |>\n<code>\nfizzbuzz <- function(x)\
    \ {\n  if(x %% 11 == 0) return(0)\n  if(x %% 13 == 0) return(2)\n  return(fizzbuzz(x/11)\
    \ + fizzbuzz(x/13))\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=r,recursion,fizzbuzz\
    \ |>\n<code>\nfizzbuzz <- function(x){\n  if(x %% 11 == 0) return(0)\n  if(x %%\
    \ 13 == 0) return(2)\n  return(fizzbuzz(x/11) + fizzbuzz(x/13))\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nWhile this code may answer the question, providing\
    \ additional context regarding how and/or why it solves the problem would improve\
    \ the answer's long-term value.\n<|/ c |>\n<| a dscore=0 |>\n<code>\nfizzbuzz\
    \ <- function(x){\n  if(x %% 11 == 0) return(0)\n  if(x %% 13 == 0) return(2)\n\
    \  return(fizzbuzz(x/11) + fizzbuzz(x/13))\n}\n</code>\n<|/ a tags=r,recursion,fizzbuzz\
    \ |>\n<| c |>\nWhile this code may answer the question, providing additional context\
    \ regarding how and/or why it solves the problem would improve the answer's long-term\
    \ value.\n<|/ c |>\n<| a dscore=0 |>\n<code>\nfizzbuzz <- ", "\n  n <- as.integer(n)\n\
    \  if(n%%11==0) return(0)\n  if(n%%13==0) return(2)\n  return(length(which(as.integer(n%%11==0)|as.integer(n%%13==0))))\n\
    }\n", "\n  n <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n\
    \  }\n  if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n  }\n  if(n %% 11 !=\
    \ 0 & n %% 13 == 0) {\n    return(2)\n  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n\
    \    return(3)\n  }\n}\n</cell>\n<cell>\nfizz_buzz(50)\n</cell>\n<cell>\nfizz_buzz(78)\n\
    </cell>\n<cell>\nfizz_buzz(79)\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes a vector of numbers and returns the number of numbers in the vector\
    \ that are divisible by 7 and are also divisible by 3.\n\n\n</text>\n<cell>",
  "\n  n <- as.integer(n)\n  if(n%%11==0 | n%%13==0) return(0)\n  if(n%%11==0) return(1)\n\
    \  if(n%%13==0) return(2)\n  return(3)\n}\n</cell>\n<cell>\nfizz_buzz(50)\n</cell>\n\
    <cell>\nfizz_buzz(78)\n</cell>\n<cell>\nfizz_buzz(79)\n</cell>\n<text>\nExercise:\
    \ Write a function that returns the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13 and which are also divisible by\
    \ 3 or 5.\n\n\n</text>\n<cell>", "\n  n <- as.integer(n)\n  if(n%%11==0 & n%%13==0)\
    \ return(0)\n  if(n%%11==0) return(1)\n  if(n%%13==0) return(2)\n  return(3)\n\
    }\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThanks for your answer. I am still learning\
    \ R and I appreciate your help. I understand that my code was very inefficient\
    \ and that there are better ways to do it. I will try to improve my code in the\
    \ future. Thanks again!\n<|/ c |>\n<| a tags=r,fizzbuzz,for-loop |>\nThe reason\
    \ your code is not working is that you are not assigning the result of the function\
    \ to the variable fizz_buzz. \n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n\
    \  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0) return(1)\n  if(n%%13==0)\
    \ return(2)\n  return(3)\n}\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThanks for your\
    \ answer. I am still learning R and I appreciate your help. I understand that\
    \ my code was very inefficient and that there are better ways to do it. I will\
    \ try to improve my code in the future. Thanks again!\n<|/ c |>\n<| a |>\nThe\
    \ reason your code is not working is that you are not assigning the result of\
    \ the function to the variable fizz_buzz. \n<code>\nfizz_buzz <- function(n) {\n\
    \  n <- as.integer(n)\n  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0) return(1)\n\
    \  if(n%%13==0) return(2)\n  return(3)\n}\n</code>\n<|/ a dscore=1 tags=r,fizzbuzz,for-loop\
    \ |>\n<| a dscore=1 |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n\
    \  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0) return(1)\n  if(n%%13==0)\
    \ return(2)\n  return(3)\n}\n</code>\n<|/ a tags=r,fizzbuzz,for-loop |>\n<| c\
    \ |>\nThanks for your answer. I am still learning R and I appreciate your help.\
    \ I understand that my code was very inefficient and that there are better way",
  "\n  n <- n\n  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0) return(1)\n  if(n%%13==0)\
    \ return(2)\n  return(3)\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=r,fizzbuzz,for-loop\
    \ |>\n<code>\nfizzbuzz <- function(n){\n  if(n %% 11 == 0 & n %% 13 == 0) return(0)\n\
    \  if(n %% 11 == 0) return(1)\n  if(n %% 13 == 0) return(2)\n  return(3)\n}\n\
    </code>\n<|/ a dscore=1 |>\n<| a tags=r,fizzbuzz,for-loop |>\n<code>\nfizzbuzz\
    \ <- function(n){\n  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0) return(1)\n\
    \  if(n%%13==0) return(2)\n  return(3)\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=r,fizzbuzz,for-loop\
    \ |>\n<code>\nfizzbuzz <- function(n){\n  if(n%%11==0 & n%%13==0) return(0)\n\
    \  if(n%%11==0) return(1)\n  if(n%%13==0) return(2)\n  return(3)\n}\n</code>\n\
    <|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\nfizzbuzz <- function(n){\n  if(n%%11==0\
    \ & n%%13==0) return(0)\n  if(n%%11==0) return(1)\n  if(n%%13==0) return(2)\n\
    \  return(3)\n}\n</code>\n<|/ a tags=r,fizzbuzz,for-loop |>\n<| a tags=r,fizzbuzz,for-loop\
    \ |>\n<code>\nfizzbuzz <- function(n){\n  if(n%%11==0 & n%%13==0) return(0)\n\
    \  if(n%%11==0) return(1)\n  if(n%%13==0) return(2)\n  return(3)\n}\n</code>\n\
    <|/ a dscore=1 |>\n<| a tags=r,fizzbuzz,for-loop |>\n<code>\nfizzbuzz <- function(n){\n\
    \  if(n%%11==0 & n%%13==0) return(0)\n  if(n%%11==0) return(1)\n  if(n%%13==0)\
    \ return(2)\n  return", "\n  n <- as.integer(n)\n  if(n%%11==0 | n%%13==0) return(0)\n\
    \  return(as.integer(n%%11) + as.integer(n%%13))\n}\n</code>\n<|/ a dscore=2 |>\n\
    <| a dscore=2 |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n \
    \ if(n%%11==0 | n%%13==0) return(0)\n  return(as.integer(n%%11) + as.integer(n%%13))\n\
    }\n</code>\n<|/ a tags=r |>\n<| a tags=r |>\n<code>\nfizz_buzz <- function(n)\
    \ {\n  n <- as.integer(n)\n  if(n%%11==0 | n%%13==0) return(0)\n  return(as.integer(n%%11)\
    \ + as.integer(n%%13))\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=r |>\n<code>\n\
    fizz_buzz <- function(n) {\n  n <- as.integer(n)\n  if(n%%11==0 | n%%13==0) return(0)\n\
    \  return(as.integer(n%%11) + as.integer(n%%13))\n}\n</code>\n<|/ a dscore=1 |>\n\
    <| a tags=r |>\n<code>\nfizz_buzz <- function(n) {\n  n <- as.integer(n)\n  if(n%%11==0\
    \ | n%%13==0) return(0)\n  return(as.integer(n%%11) + as.integer(n%%13))\n}\n\
    </code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\nfizz_buzz <- function(n)\
    \ {\n  n <- as.integer(n)\n  if(n%%11==0 | n%%13==0) return(0)\n  return(as.integer(n%%11)\
    \ + as.integer(n%%13))\n}\n</code>\n<|/ a tags=r |>\n<| a dscore=1 |>\n<code>\n\
    fizz_buzz <- function(n) {\n  n <- as.integer(n)\n  if(n%%11==0 | n%%13==0) return(0)\n\
    \  return(as.integer(n%%11) + as.integer(n%%13))\n}\n</code>\n<|/ a tags=r |>\n\
    <| a dscore=1 |>\n<code>\nfizz_buzz <- function(n) {", "\n  n <- as.integer(n)\n\
    \  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n  }\n  if(n %% 11 == 0 &\
    \ n %% 13 != 0) {\n    return(1)\n  }\n  if(n %% 11 != 0 & n %% 13 == 0) {\n \
    \   return(2)\n  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n    return(3)\n  }\n\
    }\n", "\n  n <- as.integer(n)\n  if(n %% 11 == 0 & n %% 13 == 0) {\n    return(0)\n\
    \  }\n  if(n %% 11 == 0 & n %% 13 != 0) {\n    return(1)\n  }\n  if(n %% 11 !=\
    \ 0 & n %% 13 == 0) {\n    return(2)\n  }\n  if(n %% 11 != 0 & n %% 13 != 0) {\n\
    \    return(3)\n  }\n}\n\nfizz_buzz(50)\nfizz_buzz(78)\nfizz_buzz(79)\nfizz_buzz(100)\n\
    fizz_buzz(123)\nfizz_buzz(125)\nfizz_buzz(126)\nfizz_buzz(127)\nfizz_buzz(130)\n\
    fizz_buzz(131)\nfizz_buzz(132)\nfizz_buzz(133)\nfizz_buzz(134)\nfizz_buzz(135)\n\
    fizz_buzz(136)\nfizz_buzz(137)\nfizz_buzz(138)\nfizz_buzz(139)\nfizz_buzz(140)\n\
    fizz_buzz(141)\nfizz_buzz(142)\nfizz_buzz(143)\nfizz_buzz(144)\nfizz_buzz(145)\n\
    fizz_buzz(146)\nfizz_buzz(147)\nfizz_buzz(148)\nfizz_buzz(149)\nfizz_buzz(150)\n\
    fizz_buzz(151)\nfizz_buzz(152)\nfizz_buzz(153)\nfizz_buzz(154)\nfizz_buzz(155)\n\
    fizz_buzz(156)\nfizz_buzz(157)\nfizz_buzz(158)\nfizz_buzz(159)\nfizz_buzz(160)\n\
    fizz_buzz(161)\nfizz_buzz(162)\nfizz_buzz(163)\nfizz_buzz(164)\nfizz_buzz(165)\n\
    fizz_buzz(166)\nfizz_buzz(167)\nfizz_buzz(168)\nfizz_buzz(", "\n  n <- as.integer(n)\n\
    \  return(sum(n %% 11 == 0 & n %% 13 == 0))\n}\n</code>\n<|/ a dscore=2 |>\n<|\
    \ c |>\nI like your solution, although I do not understand why you use `as.integer`\
    \ instead of `as.numeric`?\n<|/ c |>\n<| c |>\n`as.integer` converts strings to\
    \ integers. `as.numeric` converts strings to numbers. `as.numeric(\"3.14\")` returns\
    \ `3.14`. `as.integer(\"3.14\")` returns `3`.\n<|/ c |>\n<| c |>\nI see. Thank\
    \ you for the explanation!\n<|/ c |>\n<| a tags=r,fizzbuzz,for-loop |>\nThe answer\
    \ by is great, but I thought I'd add some explanation as to why it works.\nThe\
    \ for loop is iterating over each number in the vector, which is why you see it\
    \ being printed out as 1, 2, 3, etc.\nThe %% operator is returning the remainder\
    \ of the division of the number by 11 and 13. For example, 5 %% 11 returns 0,\
    \ 5 %% 13 returns 1, and 5 %% 14 returns 2.\nThe == operator is comparing the\
    \ remainder of the division of the number by 11 and 13 to 0. If they are equal,\
    \ they are equal. If they are not, they are not equal. The remainder is then compared\
    \ to 0, and so on.\nThe function can be written as:\n<code>\nfizz_buzz <- function(n)\
    \ {\n  return(sum(n %% 11 == 0 & n %% 13 == 0))\n}\n</code>\n<|/ a dscore=2 |>\n\
    <| a dscore=1 |>\n<code>\nfizz_buzz <- function(n) {\n  return(sum(n %% 11 ==\
    \ 0 & n %% 13 == 0))\n}\n</code>\n<|/ a tags=r,fizzbuzz,for-loop |>\n<| c |>\n\
    While this code may answer the question, providing additional context regarding\
    \ how and/or why it solves the problem would improve the answer's long-term value.\n\
    <|/ c |>\n<| a dscore=1 |>\n<code>\nfizz_buzz <- function(n) {\n  return(sum(n\
    \ %% 11 == 0 & n %% 13 == 0))\n}\n</code>\n<|/ a tags=r,fizzbuzz,for-loop |>\n\
    <| c |>\nWhile this code may answer the question, providing additional context\
    \ regarding how and/or why it solves the problem would improve the answer's long-term\
    \ value.\n<|/ c |>\n<|", "\n  n <- as.integer(n)\n  return(sum(n %% 11 == 0 &\
    \ n %% 13 == 0))\n}\n</cell>\n<text>\nThe function above is called fizz_buzz and\
    \ it returns the number of times the digit 7 appears in integers less than n which\
    \ are divisible by 11 or 13. Let's test it out.\n\n\n</text>\n<cell>\nfizz_buzz(50)\n\
    </cell>\n<cell>\nfizz_buzz(78)\n</cell>\n<cell>\nfizz_buzz(79)\n</cell>\n<text>\n\
    The function above is called fizz_buzz and it returns the number of times the\
    \ digit 7 appears in integers less than n which are divisible by 11 or 13. Let's\
    \ test it out.\n\n\n</text>\n<cell>\nfizz_buzz(50)\n</cell>\n<cell>\nfizz_buzz(78)\n\
    </cell>\n<cell>\nfizz_buzz(79)\n</cell>\n<text>\nThe function above is called\
    \ fizz_buzz and it returns the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13. Let's test it out.\n\n\n</text>\n\
    <cell>\nfizz_buzz(50)\n</cell>\n<cell>\nfizz_buzz(78)\n</cell>\n<cell>\nfizz_buzz(79)\n\
    </cell>\n<text>\nThe function above is called fizz_buzz and it returns the number\
    \ of times the digit 7 appears in integers less than n which are divisible by\
    \ 11 or 13. Let's test it out.\n\n\n</text>\n<cell>\nfizz_buzz(50)\n</cell>\n\
    <cell>\nfizz_buzz(78)\n</cell>\n<cell>\nfizz_buzz(79)\n</cell>\n<text>\nThe function\
    \ above is called fizz_buzz and it returns the number of times the digit 7 appears\
    \ in integers less than n which are divisible by 11 or 13. Let's test it out.\n\
    \n\n</text>\n<cell>\nfizz_buzz(50)\n</cell>\n<cell>\nfizz_buzz(78)\n</cell>\n\
    <cell>\nfizz_buzz(79)\n</cell>\n<text>\nThe function above is called fizz_buzz\
    \ and it returns the number of times the digit 7 appears in integers less than\
    \ n ", "\n  n <- as.integer(n)\n  if(n %% 11 == 0 | n %% 13 == 0) {\n    return(0)\n\
    \  }\n  if(n %% 11 != 0) {\n    return(fizz_buzz(n %% 11))\n  }\n  if(n %% 13\
    \ != 0) {\n    return(fizz_buzz(n %% 13))\n  }\n  return(fizz_buzz(n %% 11) +\
    \ fizz_buzz(n %% 13))\n}\n</cell>\n<cell>\nfizz_buzz(50)\n</cell>\n<cell>\nfizz_buzz(78)\n\
    </cell>\n<cell>\nfizz_buzz(79)\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a vector of numbers and returns the sum of the squares of the numbers\
    \ in the vector.\n\n\n</text>\n<cell>", "\n  n <- n\n  return(\n    sum(\n   \
    \   ifelse(\n        n %% 11 == 0 & n %% 13 == 0,\n        1,\n        ifelse(\n\
    \          n %% 11 == 0 | n %% 13 == 0,\n          2,\n          ifelse(\n   \
    \         n %% 11 == 1 & n %% 13 == 1,\n            3,\n            ifelse(\n\
    \              n %% 11 == 1 | n %% 13 == 1,\n              4,\n              ifelse(\n\
    \                n %% 11 == 2 & n %% 13 == 2,\n                5,\n          \
    \      ifelse(\n                  n %% 11 == 2 | n %% 13 == 2,\n             \
    \     6,\n                  ifelse(\n                    n %% 11 == 3 & n %% 13\
    \ == 3,\n                    7,\n                    ifelse(\n               \
    \       n %% 11 == 3 | n %% 13 == 3,\n                      8,\n             \
    \         ifelse(\n                        n %% 11 == 4 & n %% 13 == 4,\n    \
    \                    9,\n                        ifelse(\n                   \
    \       n %% 11 == 4 | n %% 13 == 4,\n                          10,\n        \
    \                  ifelse(\n                            n %% 11 == 5 & n %% 13\
    \ == 5,\n                            11,\n                            ifelse(\n\
    \                              n %% 11 == 5 | n %% 13 == 5,\n                \
    \              12,\n                              ifelse(\n                  \
    \              n %% 11 == 6 & n %% 13 == 6,\n                                13,\n\
    \                                ifelse(\n                                  n\
    \ %% 11 == 6 | n %% 13 == 6,\n                                  14,\n        \
    \                          ifelse(\n                                    n %% 11\
    \ == 7 & n %% 13 == 7,\n                                    15,\n            \
    \                        ifelse(\n                                      n %% 11\
    \ == 7 | n %% 13 == 7,\n                                      16,\n          \
    \                            ifelse(\n                                       \
    \ n %% 11 == 8 & n %% 13 == 8,\n                                        17,\n\
    \                                        ifelse(\n                           \
    \               n %% 11 == 8 | n %% 13 == 8,\n                               \
    \           18,\n                                          ifelse(\n         \
    \                                   n %% 11 == 9 & n %% 13 == 9,\n           \
    \                                 19,\n                                      \
    \      ifelse(\n                                              n %% 11 == 9 | n\
    \ %% 13 == 9,\n                                              20,\n           \
    \                                   ifelse(\n                                \
    \                n %% 11 == 10 & n %% 13 == 10,\n                            \
    \                    21,\n                                                ifelse(\n\
    \                                                  n %% 11 == 10 | n %% 13 ==\
    \ 10,\n                                                  22,\n               \
    \                                   ifelse(\n                                \
    \                    n %% 11 == 11 & n %% 13 == 11,\n                        \
    \                            23,\n                                           \
    \         ifelse(\n                                                      n %%\
    \ 11 == 11 | n %% 13 == 11,\n                                                \
    \      24,\n                                                      ifelse(\n  \
    \                                                      n %% 11 == 12 & n %% 13",
  "\n  n <- as.integer(n)\n  if(n %% 11 == 0) return(0)\n  if(n %% 13 == 0) return(2)\n\
    \  return(fizz_buzz(n/11) + fizz_buzz(n/13))\n}\n</cell>\n<cell>\nfizz_buzz(50)\n\
    </cell>\n<cell>\nfizz_buzz(78)\n</cell>\n<cell>\nfizz_buzz(79)\n</cell>\n<cell>\n\
    fizz_buzz(100)\n</cell>\n<cell>\nfizz_buzz(101)\n</cell>\n<cell>\nfizz_buzz(102)\n\
    </cell>\n<cell>\nfizz_buzz(103)\n</cell>\n<cell>\nfizz_buzz(104)\n</cell>\n<cell>\n\
    fizz_buzz(105)\n</cell>\n<cell>\nfizz_buzz(106)\n</cell>\n<cell>\nfizz_buzz(107)\n\
    </cell>\n<cell>\nfizz_buzz(108)\n</cell>\n<cell>\nfizz_buzz(109)\n</cell>\n<cell>\n\
    fizz_buzz(110)\n</cell>\n<cell>\nfizz_buzz(111)\n</cell>\n<cell>\nfizz_buzz(112)\n\
    </cell>\n<cell>\nfizz_buzz(113)\n</cell>\n<cell>\nfizz_buzz(114)\n</cell>\n<cell>\n\
    fizz_buzz(115)\n</cell>\n<cell>\nfizz_buzz(116)\n</cell>\n<cell>\nfizz_buzz(117)\n\
    </cell>\n<cell>\nfizz_buzz(118)\n</cell>\n<cell>\nfizz_buzz(119)\n</cell>\n<cell>\n\
    fizz_buzz(120)\n</cell>\n<cell>\nfizz_buzz(121)\n</cell>\n<cell>\nfizz_buzz(122)\n\
    </cell>\n<cell>\nfizz_buzz(123)\n</cell>\n"]
stop_tokens:
- "\n#"
- "\n```"

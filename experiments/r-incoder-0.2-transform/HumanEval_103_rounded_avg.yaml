name: HumanEval_103_rounded_avg
language: r
prompt: "# You are given two positive integers n and m, and your task is to compute\
  \ the\n# average of the integers from n through m (including n and m). \n# Round\
  \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
  \ than m, return -1.\n# Example:\n# >>> rounded_avg(1, 5)\n# '0b11'\n# >>> rounded_avg(7,\
  \ 5)\n# -1\n# >>> rounded_avg(10, 20)\n# '0b1111'\n# >>> rounded_avg(20, 33)\n#\
  \ '0b11010'\nrounded_avg <- function(n, m) {"
tests: "test_humaneval <- function() {\ncandidate <- rounded_avg\n    if(!identical(candidate(1,\
  \ 5), '0b11')){quit('no', 1)}\n    if(!identical(candidate(7, 13), '0b1010')){quit('no',\
  \ 1)}\n    if(!identical(candidate(964, 977), '0b1111001010')){quit('no', 1)}\n\
  \    if(!identical(candidate(996, 997), '0b1111100100')){quit('no', 1)}\n    if(!identical(candidate(560,\
  \ 851), '0b1011000010')){quit('no', 1)}\n    if(!identical(candidate(185, 546),\
  \ '0b101101110')){quit('no', 1)}\n    if(!identical(candidate(362, 496), '0b110101101')){quit('no',\
  \ 1)}\n    if(!identical(candidate(350, 902), '0b1001110010')){quit('no', 1)}\n\
  \    if(!identical(candidate(197, 233), '0b11010111')){quit('no', 1)}\n    if(!identical(candidate(7,\
  \ 5), -1)){quit('no', 1)}\n    if(!identical(candidate(5, 1), -1)){quit('no', 1)}\n\
  \    if(!identical(candidate(5, 5), '0b101')){quit('no', 1)}\n}\ntest_humaneval()"
completions: ["\n  if(n <= m) return(as.character(n))\n  return(as.character(round(m/n)))\n\
    }\n", "\n  if(n >= m) return(-1)\n  return(sprintf('0b%b', round(n + (m - n)/2)))\n\
    }\n", "\n  if(n >= m) return(-1)\n  \n  return(paste0(round(n / m) * m, '0', sep\
    \ = ''))\n}\n", "\n  n <- n\n  m <- m\n  \n  if(n > m) {\n    n <- m\n    m <-\
    \ n\n  }\n  \n  n <- n + 1\n  m <- m + 1\n  \n  if(n <= m) {\n    n <- 0\n   \
    \ m <- 0\n  }\n  \n  n <- as.integer(sprintf('%b', n))\n  m <- as.integer(sprintf('%b',\
    \ m))\n  \n  n <- ifelse(n == 1, -1, n)\n  m <- ifelse(m == 1, -1, m)\n  \n  n\
    \ <- ifelse(n >= m, -1, n)\n  m <- ifelse(m >= n, -1, m)\n  \n  n <- ifelse(n\
    \ > m, -1, n)\n  m <- ifelse(m > n, -1, m)\n  \n  n <- ifelse(n > m, -1, n)\n\
    \  m <- ifelse(m > n, -1, m)\n  \n  n <- ifelse(n > m, -1, n)\n  m <- ifelse(m\
    \ > n, -1, m)\n  \n  n <- ifelse(n > m, -1, n)\n  m <- ifelse(m > n, -1, m)\n\
    \  \n  n <- ifelse(n > m, -1, n)\n  m <- ifelse(m > n, -1, m)\n  \n  n <- ifelse(n\
    \ > m, -1, n)\n  m <- ifelse(m > n, -1, m)\n  \n  n <- ifelse(n > m, -1, n)\n\
    \  m <- ifelse(m > n, -1, m)\n  \n  n <- ifelse(n > m, -1, n)\n  m <- ifelse(m\
    \ > n, -1, m)\n  \n  n <- ifelse(n > m, -1, n)\n  m <- ifelse(m > n, -1, m)\n\
    \  \n  n <- ifelse(n > m, -1, n)\n  m <- ifelse(m > n, -1, m)\n  \n  n <- ifelse(n\
    \ > m, -1, n)\n  m <- ifelse(m > n, -1, m)\n  \n  n <- ifelse(n > m, -1, n)\n\
    \  m <- ifelse(m > n, -1, m)\n  \n  n <- ifelse(n > m, -1, n)\n  m <- ifelse(m\
    \ > n, -1, m)\n  \n  n <- ifelse(n > m, -1, n)\n  m <- ifelse(m > n, -1, m)\n\
    \  \n  n <- ifelse(n > m, -1, n)\n  m <- ifelse", "\n  n <- n\n  m <- m\n  \n\
    \  if(n > m) {\n    return(-1)\n  }\n  \n  n <- n + 1\n  m <- m + 1\n  \n  return(paste0(floor(n\
    \ / m), collapse = \"\"))\n}\n", "\n  n <- n\n  m <- m\n  \n  if(n > m) {\n  \
    \  n <- m\n    m <- n\n  }\n  \n  n <- n + 1\n  m <- m + 1\n  \n  n <- sprintf('%b',\
    \ n)\n  m <- sprintf('%b', m)\n  \n  n <- n[-length(n)]\n  m <- m[-length(m)]\
    \ \n  \n  n <- paste0(n, m)\n  n <- n[-length(n)]\n  \n  n <- paste0('0b', n)\n\
    \  \n  return(n)\n}\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7,\
    \ 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n\
    </cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n\
    <cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\n\
    rounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7,\
    \ 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n\
    </cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n\
    <cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\n\
    rounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7,\
    \ 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n\
    </cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n\
    <cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(", "\n  n <- n\n  m <-\
    \ m\n  \n  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n  \n  n <- n\n \
    \ m <- m\n  \n  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n  \n  n <-\
    \ n\n  m <- m\n  \n  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n  \n \
    \ n <- n\n  m <- m\n  \n  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n\
    \  \n  n <- n\n  m <- m\n  \n  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n\
    \  }\n  \n  n <- n\n  m <- m\n  \n  if(n <= m) {\n    n <- n + 1\n    m <- m -\
    \ 1\n  }\n  \n  n <- n\n  m <- m\n  \n  if(n <= m) {\n    n <- n + 1\n    m <-\
    \ m - 1\n  }\n  \n  n <- n\n  m <- m\n  \n  if(n <= m) {\n    n <- n + 1\n   \
    \ m <- m - 1\n  }\n  \n  n <- n\n  m <- m\n  \n  if(n <= m) {\n    n <- n + 1\n\
    \    m <- m - 1\n  }\n  \n  n <- n\n  m <- m\n  \n  if(n <= m) {\n    n <- n +\
    \ 1\n    m <- m - 1\n  }\n  \n  n <- n\n  m <- m\n  \n  if(n <= m) {\n    n <-\
    \ n + 1\n    m <- m - 1\n  }\n  \n  n <- n\n  m <- m\n  \n  if(n <= m) {\n   \
    \ n <- n + 1\n    m <- m - 1\n  }\n  \n  n <- n\n  m <- m\n  \n  if(n <= m) {\n\
    \    n <- n + 1\n    m <- m - 1\n  }\n  \n  n <- n\n  m <- m\n  \n  if(n <= m)\
    \ {\n    n <- n + 1\n    m <- m - 1\n  }\n  \n  n <- n\n  m <- m\n  \n  if(n <=\
    \ m) {\n    n <- n + 1\n    m <- m - 1\n  }\n  \n  ", "\n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  if(n <= m) return(as.character(n))\n  \n  return(as.character(round(n\
    \ + (m - n)/2, 0)))\n}\n", "\n  if(n > m) {\n    return(-1)\n  }\n  \n  n <- n\n\
    \  m <- m\n  \n  n <- n + 1\n  m <- m + 1\n  \n  n <- n / 2\n  m <- m / 2\n  \n\
    \  n <- sprintf('0b%b', n)\n  m <- sprintf('0b%b', m)\n  \n  return(paste(n, m,\
    \ sep=\"\"))\n}\n", "\n  n <- n\n  m <- m\n  \n  if(n >= m) return(-1)\n  \n \
    \ n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <-\
    \ n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n\
    \  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <-\
    \ m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n\
    \  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n\
    \  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <-\
    \ n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n\
    \  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <-\
    \ m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n\
    \  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n\
    \  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <-\
    \ n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n\
    \  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- ", "\n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  if (n <= m) return(as.character(n))\n  \n  n <- n - 1\n\
    \  m <- m - 1\n  \n  x <- 0\n  \n  while (n <= m) {\n    x <- x + 1\n    n <-\
    \ n + x\n  }\n  \n  x <- x / m\n  \n  return(as.character(x))\n}\n", "\n  \n \
    \ if(n >= m) return(-1)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n\
    \  if(n <= m) return(as.character(round(n/m, 0)))\n  \n  return(as.character(round(n/m,\
    \ 1)))\n}\n", "\n  n <- n\n  m <- m\n  \n  if(n > m) {\n    n <- m\n    m <- n\n\
    \  }\n  \n  n <- n + 1\n  m <- m + 1\n  \n  n <- n / 2\n  m <- m / 2\n  \n  n\
    \ <- as.integer(format(round(n), \"b\"))\n  m <- as.integer(format(round(m), \"\
    b\"))\n  \n  return(paste0(\"0b\", paste0(m, n)))\n}\n", "\n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  if(n > m) {\n    return(-1)\n  }\n  \n  return(as.character(round(n\
    \ + (m - n)/2, 0)))\n}\n", "\n  n <- n\n  m <- m\n  \n  if(n > m) {\n    return(-1)\n\
    \  }\n  \n  n <- n\n  m <- m\n  \n  n <- n + 1\n  m <- m + 1\n  \n  n <- n / 2\n\
    \  m <- m / 2\n  \n  n <- sprintf('0b%b', n)\n  m <- sprintf('0b%b', m)\n  \n\
    \  return(paste(n, m, sep = \"\"))\n}\n", "\n  if(n > m) return(-1)\n  return(paste0(round(m/n),\
    \ collapse = \"\"))\n}\n", "\n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n\
    \  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  if(n <= m) {\n    n <-\
    \ n + 1\n    m <- m - 1\n  }\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  if(n <= m) {\n    n <-\
    \ n + 1\n    m <- m - 1\n  }\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  if(n <= m) {\n    n <-\
    \ n + 1\n    m <- m - 1\n  }\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  if(n <= m) {\n    n <-\
    \ n + 1\n    m <- m - 1\n  }\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  if(n <= m) {\n    n <- n + 1\n    ", "\n  if(n > m) return(-1)\n  return(sprintf('0b%b',\
    \ round(n + (m - n)/2)))\n}\n", "\n  if(n > m) return(-1)\n  return(paste0(round(m/n),\
    \ collapse=\"\"))\n}\n", "\n  if(n > m) {\n    return(-1)\n  }\n  \n  return(sprintf('0b%b',\
    \ round(n / m) * m))\n}\n"]
stop_tokens:
- "\n#"
- "\n```"

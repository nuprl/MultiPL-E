name: HumanEval_103_rounded_avg
language: r
prompt: "# You are given two positive integers n and m, and your task is to compute\
  \ the\n# average of the integers from n through m (including n and m). \n# Round\
  \ the answer to the nearest integer and convert that to binary.\n# If n is greater\
  \ than m, return -1.\n# Example:\n# >>> rounded_avg(1, 5)\n# '0b11'\n# >>> rounded_avg(7,\
  \ 5)\n# -1\n# >>> rounded_avg(10, 20)\n# '0b1111'\n# >>> rounded_avg(20, 33)\n#\
  \ '0b11010'\nrounded_avg <- function(n, m) {"
tests: "test_humaneval <- function() {\ncandidate <- rounded_avg\n    if(!identical(candidate(1,\
  \ 5), '0b11')){quit('no', 1)}\n    if(!identical(candidate(7, 13), '0b1010')){quit('no',\
  \ 1)}\n    if(!identical(candidate(964, 977), '0b1111001010')){quit('no', 1)}\n\
  \    if(!identical(candidate(996, 997), '0b1111100100')){quit('no', 1)}\n    if(!identical(candidate(560,\
  \ 851), '0b1011000010')){quit('no', 1)}\n    if(!identical(candidate(185, 546),\
  \ '0b101101110')){quit('no', 1)}\n    if(!identical(candidate(362, 496), '0b110101101')){quit('no',\
  \ 1)}\n    if(!identical(candidate(350, 902), '0b1001110010')){quit('no', 1)}\n\
  \    if(!identical(candidate(197, 233), '0b11010111')){quit('no', 1)}\n    if(!identical(candidate(7,\
  \ 5), -1)){quit('no', 1)}\n    if(!identical(candidate(5, 1), -1)){quit('no', 1)}\n\
  \    if(!identical(candidate(5, 5), '0b101')){quit('no', 1)}\n}\ntest_humaneval()"
completions: ["\n  if(n <= m) return(as.character(n))\n  return(as.character(round(m/n)))\n\
    }\n", "\n  if(n >= m) return(-1)\n  return(sprintf('0b%b', round(n + (m - n)/2)))\n\
    }\n", "\n  if(n >= m) return(-1)\n  \n  return(paste0(round(n / m) * m, '0', sep\
    \ = ''))\n}\n", "\n  n <- n\n  m <- m\n  \n  if(n > m) {\n    n <- m\n    m <-\
    \ n\n  }\n  \n  n <- n + 1\n  m <- m + 1\n  \n  if(n <= m) {\n    n <- 0\n   \
    \ m <- 0\n  }\n  \n  n <- as.integer(sprintf('%b', n))\n  m <- as.integer(sprintf('%b',\
    \ m))\n  \n  n <- ifelse(n == 1, -1, n)\n  m <- ifelse(m == 1, -1, m)\n  \n  n\
    \ <- ifelse(n >= m, -1, n)\n  m <- ifelse(m >= n, -1, m)\n  \n  n <- ifelse(n\
    \ > m, -1, n)\n  m <- ifelse(m > n, -1, m)\n  \n  n <- ifelse(n > m, -1, n)\n\
    \  m <- ifelse(m > n, -1, m)\n  \n  n <- ifelse(n > m, -1, n)\n  m <- ifelse(m\
    \ > n, -1, m)\n  \n  n <- ifelse(n > m, -1, n)\n  m <- ifelse(m > n, -1, m)\n\
    \  \n  n <- ifelse(n > m, -1, n)\n  m <- ifelse(m > n, -1, m)\n  \n  n <- ifelse(n\
    \ > m, -1, n)\n  m <- ifelse(m > n, -1, m)\n  \n  n <- ifelse(n > m, -1, n)\n\
    \  m <- ifelse(m > n, -1, m)\n  \n  n <- ifelse(n > m, -1, n)\n  m <- ifelse(m\
    \ > n, -1, m)\n  \n  n <- ifelse(n > m, -1, n)\n  m <- ifelse(m > n, -1, m)\n\
    \  \n  n <- ifelse(n > m, -1, n)\n  m <- ifelse(m > n, -1, m)\n  \n  n <- ifelse(n\
    \ > m, -1, n)\n  m <- ifelse(m > n, -1, m)\n  \n  n <- ifelse(n > m, -1, n)\n\
    \  m <- ifelse(m > n, -1, m)\n  \n  n <- ifelse(n > m, -1, n)\n  m <- ifelse(m\
    \ > n, -1, m)\n  \n  n <- ifelse(n > m, -1, n)\n  m <- ifelse(m > n, -1, m)\n\
    \  \n  n <- ifelse(n > m, -1, n)\n  m <- ifelse", "\n  n <- n\n  m <- m\n  \n\
    \  if(n > m) {\n    return(-1)\n  }\n  \n  n <- n + 1\n  m <- m + 1\n  \n  return(paste0(floor(n\
    \ / m), collapse = \"\"))\n}\n", "\n  n <- n\n  m <- m\n  \n  if(n > m) {\n  \
    \  n <- m\n    m <- n\n  }\n  \n  n <- n + 1\n  m <- m + 1\n  \n  n <- sprintf('%b',\
    \ n)\n  m <- sprintf('%b', m)\n  \n  n <- n[-length(n)]\n  m <- m[-length(m)]\
    \ \n  \n  n <- paste0(n, m)\n  n <- n[-length(n)]\n  \n  n <- paste0('0b', n)\n\
    \  \n  return(n)\n}\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7,\
    \ 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n\
    </cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n\
    <cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\n\
    rounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7,\
    \ 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n\
    </cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n\
    <cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\n\
    rounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7,\
    \ 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n\
    </cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n\
    <cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(", "\n  n <- n\n  m <-\
    \ m\n  \n  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n  \n  n <- n\n \
    \ m <- m\n  \n  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n  \n  n <-\
    \ n\n  m <- m\n  \n  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n  \n \
    \ n <- n\n  m <- m\n  \n  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n\
    \  \n  n <- n\n  m <- m\n  \n  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n\
    \  }\n  \n  n <- n\n  m <- m\n  \n  if(n <= m) {\n    n <- n + 1\n    m <- m -\
    \ 1\n  }\n  \n  n <- n\n  m <- m\n  \n  if(n <= m) {\n    n <- n + 1\n    m <-\
    \ m - 1\n  }\n  \n  n <- n\n  m <- m\n  \n  if(n <= m) {\n    n <- n + 1\n   \
    \ m <- m - 1\n  }\n  \n  n <- n\n  m <- m\n  \n  if(n <= m) {\n    n <- n + 1\n\
    \    m <- m - 1\n  }\n  \n  n <- n\n  m <- m\n  \n  if(n <= m) {\n    n <- n +\
    \ 1\n    m <- m - 1\n  }\n  \n  n <- n\n  m <- m\n  \n  if(n <= m) {\n    n <-\
    \ n + 1\n    m <- m - 1\n  }\n  \n  n <- n\n  m <- m\n  \n  if(n <= m) {\n   \
    \ n <- n + 1\n    m <- m - 1\n  }\n  \n  n <- n\n  m <- m\n  \n  if(n <= m) {\n\
    \    n <- n + 1\n    m <- m - 1\n  }\n  \n  n <- n\n  m <- m\n  \n  if(n <= m)\
    \ {\n    n <- n + 1\n    m <- m - 1\n  }\n  \n  n <- n\n  m <- m\n  \n  if(n <=\
    \ m) {\n    n <- n + 1\n    m <- m - 1\n  }\n  \n  ", "\n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  if(n <= m) return(as.character(n))\n  \n  return(as.character(round(n\
    \ + (m - n)/2, 0)))\n}\n", "\n  if(n > m) {\n    return(-1)\n  }\n  \n  n <- n\n\
    \  m <- m\n  \n  n <- n + 1\n  m <- m + 1\n  \n  n <- n / 2\n  m <- m / 2\n  \n\
    \  n <- sprintf('0b%b', n)\n  m <- sprintf('0b%b', m)\n  \n  return(paste(n, m,\
    \ sep=\"\"))\n}\n", "\n  n <- n\n  m <- m\n  \n  if(n >= m) return(-1)\n  \n \
    \ n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <-\
    \ n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n\
    \  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <-\
    \ m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n\
    \  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n\
    \  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <-\
    \ n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n\
    \  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <-\
    \ m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n\
    \  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n\
    \  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <-\
    \ n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n\
    \  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- ", "\n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  if (n <= m) return(as.character(n))\n  \n  n <- n - 1\n\
    \  m <- m - 1\n  \n  x <- 0\n  \n  while (n <= m) {\n    x <- x + 1\n    n <-\
    \ n + x\n  }\n  \n  x <- x / m\n  \n  return(as.character(x))\n}\n", "\n  \n \
    \ if(n >= m) return(-1)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n\
    \  if(n <= m) return(as.character(round(n/m, 0)))\n  \n  return(as.character(round(n/m,\
    \ 1)))\n}\n", "\n  n <- n\n  m <- m\n  \n  if(n > m) {\n    n <- m\n    m <- n\n\
    \  }\n  \n  n <- n + 1\n  m <- m + 1\n  \n  n <- n / 2\n  m <- m / 2\n  \n  n\
    \ <- as.integer(format(round(n), \"b\"))\n  m <- as.integer(format(round(m), \"\
    b\"))\n  \n  return(paste0(\"0b\", paste0(m, n)))\n}\n", "\n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  if(n > m) {\n    return(-1)\n  }\n  \n  return(as.character(round(n\
    \ + (m - n)/2, 0)))\n}\n", "\n  n <- n\n  m <- m\n  \n  if(n > m) {\n    return(-1)\n\
    \  }\n  \n  n <- n\n  m <- m\n  \n  n <- n + 1\n  m <- m + 1\n  \n  n <- n / 2\n\
    \  m <- m / 2\n  \n  n <- sprintf('0b%b', n)\n  m <- sprintf('0b%b', m)\n  \n\
    \  return(paste(n, m, sep = \"\"))\n}\n", "\n  if(n > m) return(-1)\n  return(paste0(round(m/n),\
    \ collapse = \"\"))\n}\n", "\n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n\
    \  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  if(n <= m) {\n    n <-\
    \ n + 1\n    m <- m - 1\n  }\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  if(n <= m) {\n    n <-\
    \ n + 1\n    m <- m - 1\n  }\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  if(n <= m) {\n    n <-\
    \ n + 1\n    m <- m - 1\n  }\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  if(n <= m) {\n    n <-\
    \ n + 1\n    m <- m - 1\n  }\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  if(n <= m) {\n    n <- n + 1\n    ", "\n  if(n > m) return(-1)\n  return(sprintf('0b%b',\
    \ round(n + (m - n)/2)))\n}\n", "\n  if(n > m) return(-1)\n  return(paste0(round(m/n),\
    \ collapse=\"\"))\n}\n", "\n  if(n > m) {\n    return(-1)\n  }\n  \n  return(sprintf('0b%b',\
    \ round(n / m) * m))\n}\n", "\n  n <- n\n  m <- m\n  n <- ifelse(n > m, -1, n)\n\
    \  m <- ifelse(m > n, -1, m)\n  n <- ifelse(n > m, m, n)\n  m <- ifelse(m > n,\
    \ n, m)\n  n <- ifelse(n > m, m, n)\n  m <- ifelse(m > n, n, m)\n  n <- ifelse(n\
    \ > m, m, n)\n  m <- ifelse(m > n, n, m)\n  n <- ifelse(n > m, m, n)\n  m <- ifelse(m\
    \ > n, n, m)\n  n <- ifelse(n > m, m, n)\n  m <- ifelse(m > n, n, m)\n  n <- ifelse(n\
    \ > m, m, n)\n  m <- ifelse(m > n, n, m)\n  n <- ifelse(n > m, m, n)\n  m <- ifelse(m\
    \ > n, n, m)\n  n <- ifelse(n > m, m, n)\n  m <- ifelse(m > n, n, m)\n  n <- ifelse(n\
    \ > m, m, n)\n  m <- ifelse(m > n, n, m)\n  n <- ifelse(n > m, m, n)\n  m <- ifelse(m\
    \ > n, n, m)\n  n <- ifelse(n > m, m, n)\n  m <- ifelse(m > n, n, m)\n  n <- ifelse(n\
    \ > m, m, n)\n  m <- ifelse(m > n, n, m)\n  n <- ifelse(n > m, m, n)\n  m <- ifelse(m\
    \ > n, n, m)\n  n <- ifelse(n > m, m, n)\n  m <- ifelse(m > n, n, m)\n  n <- ifelse(n\
    \ > m, m, n)\n  m <- ifelse(m > n, n, m)\n  n <- ifelse(n > m, m, n)\n  m <- ifelse(m\
    \ > n, n, m)\n  n <- ifelse(n > m, m, n)\n  m <- ifelse(m > n, n, m)\n  n <- ifelse(n\
    \ > m, m, n)\n  m <- ifelse(m > n, n, m)\n  n <- ifelse(n > m, m, n)\n  m <- ifelse(m\
    \ > n, n, m)\n  n <- ifelse(n > m, m, n)\n  m <- ifelse(m > n, n, m)\n  n <- ifelse(n\
    \ > m, m, n)\n  m <- ifelse(m ", "\n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n  \n  n <- n + (m -\
    \ n)\n  m <- m + (n - m)\n  \n  n <- floor(n / 2)\n  m <- floor(m / 2)\n  \n \
    \ n <- as.character(binom(n, m))\n  m <- as.character(binom(m, n))\n  \n  n <-\
    \ paste0(\"0b\", n)\n  m <- paste0(\"0b\", m)\n  \n  return(paste0(n, m))\n}\n",
  "\n  n <- n\n  m <- m\n  \n  if(n > m) {\n    n <- m\n    m <- n\n  }\n  \n  n <-\
    \ n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n\
    \  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <-\
    \ m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n\
    \  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n\
    \  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <-\
    \ n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n\
    \  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <-\
    \ m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n\
    \  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n\
    \  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <-\
    \ n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n\
    \  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <-\
    \ m\n  \n  n <- n\n  m <- m\n  \n", "\n  if(n <= m) return(as.character(round(n/m,\
    \ 0)))\n  return(as.character(round(n/m, 0)))\n}\n", "\n  if(n >= m) return(-1)\n\
    \  \n  return(paste0(round(m/n), collapse = ''))\n}\n", "\n  n <- n\n  m <- m\n\
    \  n <- ifelse(n < m, n, m)\n  n <- ifelse(n < 1, -1, n)\n  n <- ifelse(n < 2,\
    \ 2^(n-1), 2^(n-2))\n  m <- ifelse(m < 2, 2^(m-1), 2^(m-2))\n  n <- ifelse(n <\
    \ m, n, m)\n  n <- ifelse(n < 1, -1, n)\n  n <- ifelse(n < 2, 2^(n-1), 2^(n-2))\n\
    \  m <- ifelse(m < 2, 2^(m-1), 2^(m-2))\n  n <- ifelse(n < m, n, m)\n  n <- ifelse(n\
    \ < 1, -1, n)\n  n <- ifelse(n < 2, 2^(n-1), 2^(n-2))\n  m <- ifelse(m < 2, 2^(m-1),\
    \ 2^(m-2))\n  n <- ifelse(n < m, n, m)\n  n <- ifelse(n < 1, -1, n)\n  n <- ifelse(n\
    \ < 2, 2^(n-1), 2^(n-2))\n  m <- ifelse(m < 2, 2^(m-1), 2^(m-2))\n  n <- ifelse(n\
    \ < m, n, m)\n  n <- ifelse(n < 1, -1, n)\n  n <- ifelse(n < 2, 2^(n-1), 2^(n-2))\n\
    \  m <- ifelse(m < 2, 2^(m-1), 2^(m-2))\n  n <- ifelse(n < m, n, m)\n  n <- ifelse(n\
    \ < 1, -1, n)\n  n <- ifelse(n < 2, 2^(n-1), 2^(n-2))\n  m <- ifelse(m < 2, 2^(m-1),\
    \ 2^(m-2))\n  n <- ifelse(n < m, n, m)\n  n <- ifelse(n < 1, -1, n)\n  n <- ifelse(n\
    \ < 2, 2^(n-1), 2^(n-2))\n  m <- ifelse(m < 2, 2^(m-1), 2^(m-2))\n  n <- ifelse(n\
    \ < m, n, m)\n  n <- ifelse(n < 1, -1, n)\n  n <- ifelse(n < 2, 2^(n-1), 2^(n-2))\n\
    \  m <- ifelse(m < 2, 2^(m-1), 2^(m-2))\n  n <- ifelse(n < m, n, m)\n  n <- ifelse(n\
    \ < 1, -1, n)\n  n <- ifelse(n < 2, 2^(n-1), 2^(n-2))\n  m <- ifelse(m < 2, 2^(m-1),\
    \ 2^(m-2))\n  n <- ifelse(n < m, n, m)\n  n <- if", "\n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  if (n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n\
    \  n <- n + (m - n)\n  n <- n / 2\n  m <- m / 2\n  n <- sprintf('0b%b', n)\n \
    \ m <- sprintf('0b%b', m)\n  return(paste(n, m, sep = ''))\n}\n", "\n  n <- n\n\
    \  m <- m\n  \n  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n  \n  n <-\
    \ floor(n / 2)\n  m <- floor(m / 2)\n  \n  if(n <= m) {\n    n <- 0\n    m <-\
    \ 1\n  }\n  \n  n <- n * 2\n  m <- m * 2\n  \n  n <- paste0(\"0b\", n)\n  m <-\
    \ paste0(\"0b\", m)\n  \n  return(paste0(m, n))\n}\n", "\n  n <- n\n  m <- m\n\
    \  \n  if(n <= m) return(as.character(n))\n  \n  n <- n + 1\n  m <- m + 1\n  \n\
    \  return(as.character(round(n / m) * m))\n}\n", "\n  if(n > m) {\n    stop(\"\
    n must be less than m\")\n  }\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  if(n <= m) {\n    n <-\
    \ n + 1\n    m <- m - 1\n  }\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  if(n <= m) {\n    n <-\
    \ n + 1\n    m <- m - 1\n  }\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  if(n <= m) {\n    n <-\
    \ n + 1\n    m <- m - 1\n  }\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  if(n <= m) {\n    n <-\
    \ n + 1\n    m <- m - 1\n  }\n  \n  n <- as.integer(n)\n  m <- as.integ", "\n\
    \  n <- n\n  m <- m\n  \n  if(n > m) return(-1)\n  \n  n <- n\n  m <- m\n  \n\
    \  n <- n + 1\n  m <- m + 1\n  \n  n <- n / 2\n  m <- m / 2\n  \n  n <- sprintf(\"\
    %b\", n)\n  m <- sprintf(\"%b\", m)\n  \n  return(paste0(n, m))\n}\n</cell>\n\
    <cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\n\
    rounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7,\
    \ 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n\
    </cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n\
    <cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\n\
    rounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7,\
    \ 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n\
    </cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n\
    <cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\n\
    rounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7,\
    \ 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n\
    </cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n\
    <cell>\nrounded_avg", "\n  \n  if(n >= m) return(-1)\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  return(paste0(\n    sprintf('0b%b', round(n + (m\
    \ - n)/2, 0)),\n    sprintf('0b%b', round(n - (m - n)/2, 0))\n  ))\n}\n</cell>\n\
    <cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(10, 20)\n</cell>\n<cell>\n\
    rounded_avg(20, 33)\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the number of characters in a string.\n\n\n</text>\n<cell>", "\n  n <- n\n \
    \ m <- m\n  \n  if(n <= m) {\n    n <- n\n    m <- m\n  }\n  \n  n <- n + 1\n\
    \  m <- m + 1\n  \n  n <- as.integer(n / 2)\n  m <- as.integer(m / 2)\n  \n  n\
    \ <- as.integer(n + (m / 2))\n  m <- as.integer(m - (n / 2))\n  \n  n <- as.integer(n\
    \ + (m / 2))\n  m <- as.integer(m - (n / 2))\n  \n  n <- as.integer(n + (m / 2))\n\
    \  m <- as.integer(m - (n / 2))\n  \n  n <- as.integer(n + (m / 2))\n  m <- as.integer(m\
    \ - (n / 2))\n  \n  n <- as.integer(n + (m / 2))\n  m <- as.integer(m - (n / 2))\n\
    \  \n  n <- as.integer(n + (m / 2))\n  m <- as.integer(m - (n / 2))\n  \n  n <-\
    \ as.integer(n + (m / 2))\n  m <- as.integer(m - (n / 2))\n  \n  n <- as.integer(n\
    \ + (m / 2))\n  m <- as.integer(m - (n / 2))\n  \n  n <- as.integer(n + (m / 2))\n\
    \  m <- as.integer(m - (n / 2))\n  \n  n <- as.integer(n + (m / 2))\n  m <- as.integer(m\
    \ - (n / 2))\n  \n  n <- as.integer(n + (m / 2))\n  m <- as.integer(m - (n / 2))\n\
    \  \n  n <- as.integer(n + (m / 2))\n  m <- as.integer(m - (n / 2))\n  \n  n <-\
    \ as.integer(n + (m / 2))\n  m <- as.integer(m - (n / 2))\n  \n  n <- as.integer(n\
    \ + (m / 2))\n  m <- as.integer(m - (n / 2))\n  \n  n <- as.integer(n + (m / 2))\n\
    \  m <- as.integer(m - (n / 2))\n  \n  n <- as.integer(n + (m / 2))\n  m <- as.integer(m\
    \ - (n / 2))\n  \n  n <- as.integer(n + (m / 2))\n  m <- as.integer(m - (n / 2))\n\
    \  \n  ", "\n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  if(n > m) return(-1)\n\
    \  \n  return(paste0(\"0b\", paste(sprintf(\"%0d\", n), sprintf(\"%0d\", m), sep=\"\
    \")))\n}\n", "\n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  if(n <= m) {\n\
    \    n <- n + 1\n    m <- m - 1\n  }\n  \n  n <- n + (m - n)\n  m <- m - (n -\
    \ m)\n  \n  n <- n / 2\n  m <- m / 2\n  \n  n <- as.integer(sprintf('0b%b', n))\n\
    \  m <- as.integer(sprintf('0b%b', m))\n  \n  return(paste(n, m, sep = ''))\n\
    }\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(20, 33)\n\
    </cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n\
    <cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\n\
    rounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7,\
    \ 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n\
    </cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n\
    <cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\n\
    rounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7,\
    \ 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n\
    </cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n\
    <cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\n\
    rounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>", "\n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  if (n > m) {\n    stop(\"n must be less than m\"\
    )\n  }\n  \n  n <- n - 1\n  m <- m - 1\n  \n  n <- n + (m %% 2)\n  m <- m + (n\
    \ %% 2)\n  \n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n  \n  n <- n + (m %% 2)\n\
    \  m <- m + (n %% 2)\n  \n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n  \n  n <-\
    \ n + (m %% 2)\n  m <- m + (n %% 2)\n  \n  n <- n + (m %% 2)\n  m <- m + (n %%\
    \ 2)\n  \n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n  \n  n <- n + (m %% 2)\n\
    \  m <- m + (n %% 2)\n  \n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n  \n  n <-\
    \ n + (m %% 2)\n  m <- m + (n %% 2)\n  \n  n <- n + (m %% 2)\n  m <- m + (n %%\
    \ 2)\n  \n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n  \n  n <- n + (m %% 2)\n\
    \  m <- m + (n %% 2)\n  \n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n  \n  n <-\
    \ n + (m %% 2)\n  m <- m + (n %% 2)\n  \n  n <- n + (m %% 2)\n  m <- m + (n %%\
    \ 2)\n  \n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n  \n  n <- n + (m %% 2)\n\
    \  m <- m + (n %% 2)\n  \n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n  \n  n <-\
    \ n + (m %% 2)\n  m <- m + (n %% 2)\n  \n  n <- n + (m %% 2)\n  m <- m + (n %%\
    \ 2)\n  \n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n  \n  n <- n + (m %% 2)\n\
    \  m <- m + (n %% 2)\n  \n  n ", "\n  n <- n\n  m <- m\n  \n  if(n <= m) return(paste0(\"\
    0b\", paste0(0:(n-m+1), collapse = \"\")))\n  \n  return(-1)\n}\n", "\n  if(n\
    \ >= m) return(-1)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  if(n\
    \ <= m) return(as.character(round(n/m, 0)))\n  \n  return(as.character(round(n/m,\
    \ 0)))\n}\n", "\n  n <- n\n  m <- m\n  \n  if(n > m) {\n    n <- m\n    m <- n\n\
    \  }\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n\
    \  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n\
    \  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <-\
    \ n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n\
    \  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <-\
    \ m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n\
    \  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n\
    \  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <-\
    \ n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n\
    \  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <-\
    \ m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n\
    \  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n\
    \  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n", "\n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  if(n > m) return(-1)\n  \n  n <- n + 1\n  m <- m\
    \ + 1\n  \n  return(paste0(round(n / (m - n) * 2, 0), collapse = \"\"))\n}\n</cell>\n\
    <cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\n\
    rounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7,\
    \ 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n\
    </cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n\
    <cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\n\
    rounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7,\
    \ 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n\
    </cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n\
    <cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\n\
    rounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7,\
    \ 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n\
    </cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n\
    <cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\n\
    rounded_avg(7, 5)", "\n  \n  if(n > m) {\n    return(-1)\n  }\n  \n  return(paste0(round(n\
    \ / (m - n) * 2, 0), collapse = ''))\n}\n", "\n  n <- n\n  m <- m\n  \n  if(n\
    \ > m) {\n    return(-1)\n  }\n  \n  n <- n + 1\n  m <- m + 1\n  \n  return(paste0(round(n\
    \ / (m - n), 2), \"b\", round(m / (m - n), 2)))\n}\n", "\n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  if(n > m) return(-1)\n  \n  n <- n - 1\n  m <- m\
    \ - 1\n  \n  return(paste0(as.character(n + (m %% n)), as.character(m %/% n)))\n\
    }\n", "\n  if(n >= m) return(-1L)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  if(n <= m) return(as.character(floor(n/m)*m))\n  \n  return(as.character(floor(n/m)*m)\
    \ + as.character(floor((n-m)/m)*m))\n}\n", "\n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  if (n >= m) {\n    n <- n + 1\n  }\n  \n  n <- n + (m - n) / 2\n  \n  n\
    \ <- format(n, \"b\")\n  \n  return(n)\n}\n</cell>\n<cell>\nrounded_avg(7, 5)\n\
    </cell>\n<cell>\nrounded_avg(20, 33)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n\
    <cell>\nrounded_avg(20, 33)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\n\
    rounded_avg(20, 33)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(20,\
    \ 33)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(20, 33)\n\
    </cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(20, 33)\n</cell>\n\
    <cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(20, 33)\n</cell>\n<cell>\n\
    rounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(20, 33)\n</cell>\n<cell>\nrounded_avg(7,\
    \ 5)\n</cell>\n<cell>\nrounded_avg(20, 33)\n</cell>\n<cell>\nrounded_avg(7, 5)\n\
    </cell>\n<cell>\nrounded_avg(20, 33)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n\
    <cell>\nrounded_avg(20, 33)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\n\
    rounded_avg(20, 33)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(20,\
    \ 33)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(20, 33)\n\
    </cell>\n<cell>\nrounded_avg(7, 5)\n</cell", "\n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  if(n > m) {\n    -1\n  } else {\n    n <- n + (m - n)\n    n <- n / 2\n\
    \    n <- formatC(as.integer(n), width = 2, format = \"d\", flag = \"0\")\n  }\n\
    }\n", "\n  if(n > m) return(-1)\n  \n  a <- seq(from=n, to=m, by=1)\n  b <- seq(from=n,\
    \ to=m, by=1)\n  \n  a <- paste0(\"0b\", a)\n  b <- paste0(\"0b\", b)\n  \n  return(paste0(round(a/length(a)*length(b),\
    \ 2), collapse=\"\"))\n}\n", "\n  n <- as.integer(n)\n  m <- as.integer(m)\n \
    \ if(n > m) {\n    return(-1)\n  }\n  return(as.character(round(n + (m - n)/2,\
    \ 0)))\n}\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(20,\
    \ 33)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(20, 33)\n\
    </cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(20, 33)\n</cell>\n\
    <cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(20, 33)\n</cell>\n<cell>\n\
    rounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(20, 33)\n</cell>\n<cell>\nrounded_avg(7,\
    \ 5)\n</cell>\n<cell>\nrounded_avg(20, 33)\n</cell>\n<cell>\nrounded_avg(7, 5)\n\
    </cell>\n<cell>\nrounded_avg(20, 33)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n\
    <cell>\nrounded_avg(20, 33)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\n\
    rounded_avg(20, 33)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(20,\
    \ 33)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(20, 33)\n\
    </cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(20, 33)\n</cell>\n\
    <cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(20, 33)\n</cell>\n<cell>\n\
    rounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(20, 33)\n</cell>\n<cell>\nrounded_avg(7,\
    \ 5)\n</cell>\n<cell>\nrounded_avg(20, 33)\n</cell", "\n  n <- n\n  m <- m\n \
    \ \n  if(n > m) {\n    n <- m\n    m <- n\n  }\n  \n  n <- n + 1\n  m <- m + 1\n\
    \  \n  n <- as.integer(n / 2)\n  m <- as.integer(m / 2)\n  \n  n <- as.integer(n\
    \ + (m / 2))\n  m <- as.integer(m + (n / 2))\n  \n  n <- as.integer(n + (m / 2))\n\
    \  m <- as.integer(m + (n / 2))\n  \n  n <- as.integer(n + (m / 2))\n  m <- as.integer(m\
    \ + (n / 2))\n  \n  n <- as.integer(n + (m / 2))\n  m <- as.integer(m + (n / 2))\n\
    \  \n  n <- as.integer(n + (m / 2))\n  m <- as.integer(m + (n / 2))\n  \n  n <-\
    \ as.integer(n + (m / 2))\n  m <- as.integer(m + (n / 2))\n  \n  n <- as.integer(n\
    \ + (m / 2))\n  m <- as.integer(m + (n / 2))\n  \n  n <- as.integer(n + (m / 2))\n\
    \  m <- as.integer(m + (n / 2))\n  \n  n <- as.integer(n + (m / 2))\n  m <- as.integer(m\
    \ + (n / 2))\n  \n  n <- as.integer(n + (m / 2))\n  m <- as.integer(m + (n / 2))\n\
    \  \n  n <- as.integer(n + (m / 2))\n  m <- as.integer(m + (n / 2))\n  \n  n <-\
    \ as.integer(n + (m / 2))\n  m <- as.integer(m + (n / 2))\n  \n  n <- as.integer(n\
    \ + (m / 2))\n  m <- as.integer(m + (n / 2))\n  \n  n <- as.integer(n + (m / 2))\n\
    \  m <- as.integer(m + (n / 2))\n  \n  n <- as.integer(n + (m / 2))\n  m <- as.integer(m\
    \ + (n / 2))\n  \n  n <- as.integer(n + (m / 2))\n  m <- as.integer(m + (n / 2))\n\
    \  \n  n <- as.integer(n + (m / 2))\n  m <- as.integer(m + (n / 2))\n  \n  n ",
  "\n  \n  # Your code here\n  \n}\n", "\n  n <- n\n  m <- m\n  n <- ifelse(n < m,\
    \ n, m)\n  n <- ifelse(n >= 2^31, -1, n)\n  m <- ifelse(m < 2^31, -1, m)\n  n\
    \ <- ifelse(n > m, -1, n)\n  n <- ifelse(n >= 2^31, -1, n)\n  m <- ifelse(m <\
    \ 2^31, -1, m)\n  n <- ifelse(n > m, -1, n)\n  n <- ifelse(n >= 2^31, -1, n)\n\
    \  m <- ifelse(m < 2^31, -1, m)\n  n <- ifelse(n > m, -1, n)\n  n <- ifelse(n\
    \ >= 2^31, -1, n)\n  m <- ifelse(m < 2^31, -1, m)\n  n <- ifelse(n > m, -1, n)\n\
    \  n <- ifelse(n >= 2^31, -1, n)\n  m <- ifelse(m < 2^31, -1, m)\n  n <- ifelse(n\
    \ > m, -1, n)\n  n <- ifelse(n >= 2^31, -1, n)\n  m <- ifelse(m < 2^31, -1, m)\n\
    \  n <- ifelse(n > m, -1, n)\n  n <- ifelse(n >= 2^31, -1, n)\n  m <- ifelse(m\
    \ < 2^31, -1, m)\n  n <- ifelse(n > m, -1, n)\n  n <- ifelse(n >= 2^31, -1, n)\n\
    \  m <- ifelse(m < 2^31, -1, m)\n  n <- ifelse(n > m, -1, n)\n  n <- ifelse(n\
    \ >= 2^31, -1, n)\n  m <- ifelse(m < 2^31, -1, m)\n  n <- ifelse(n > m, -1, n)\n\
    \  n <- ifelse(n >= 2^31, -1, n)\n  m <- ifelse(m < 2^31, -1, m)\n  n <- ifelse(n\
    \ > m, -1, n)\n  n <- ifelse(n >= 2^31, -1, n)\n  m <- ifelse(m < 2^31, -1, m)\n\
    \  n <- ifelse(n > m, -1, n)\n  n <- ifelse(n >= 2^31, -1, n)\n  m <- ifelse(m\
    \ < 2^31, -1, m)\n  n <- ifelse(n > m, -1, n)\n  n <- ifelse(n >= 2^31, -1, n)\n\
    \  m <- ifelse(m < 2^31, -1, m)\n  n <- ifelse(n > m, -1, n)\n  n <- ifelse(n\
    \ >= 2^31, -1, n)\n  m <- ifelse(m < 2^31, ", "\n  if(n > m) {\n    return(-1)\n\
    \  }\n  \n  return(paste0(round(m/n), collapse = \"\"))\n}\n", "\n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  if(n > m) {\n    stop(\"n must be less than m\")\n\
    \  }\n  \n  n <- n + 1\n  m <- m + 1\n  \n  n <- as.integer(n / 2)\n  m <- as.integer(m\
    \ / 2)\n  \n  n <- as.integer(n / 2)\n  m <- as.integer(m / 2)\n  \n  n <- as.integer(n\
    \ / 2)\n  m <- as.integer(m / 2)\n  \n  n <- as.integer(n / 2)\n  m <- as.integer(m\
    \ / 2)\n  \n  n <- as.integer(n / 2)\n  m <- as.integer(m / 2)\n  \n  n <- as.integer(n\
    \ / 2)\n  m <- as.integer(m / 2)\n  \n  n <- as.integer(n / 2)\n  m <- as.integer(m\
    \ / 2)\n  \n  n <- as.integer(n / 2)\n  m <- as.integer(m / 2)\n  \n  n <- as.integer(n\
    \ / 2)\n  m <- as.integer(m / 2)\n  \n  n <- as.integer(n / 2)\n  m <- as.integer(m\
    \ / 2)\n  \n  n <- as.integer(n / 2)\n  m <- as.integer(m / 2)\n  \n  n <- as.integer(n\
    \ / 2)\n  m <- as.integer(m / 2)\n  \n  n <- as.integer(n / 2)\n  m <- as.integer(m\
    \ / 2)\n  \n  n <- as.integer(n / 2)\n  m <- as.integer(m / 2)\n  \n  n <- as.integer(n\
    \ / 2)\n  m <- as.integer(m / 2)\n  \n  n <- as.integer(n / 2)\n  m <- as.integer(m\
    \ / 2)\n  \n  n <- as.integer(n / 2)\n  m <- as.integer(m / 2)\n  \n  n <- as.integer(n\
    \ / 2)\n  m <- as.integer(m / 2)\n  \n  n <- as.integer(n / 2)\n  m <- as.integer(m\
    \ / 2)\n  \n  n <- as.integer(n / 2)\n  m <- as.integer(m / 2)\n  \n  n <- as.integer(n\
    \ / 2)\n  m <- as.integer(m / 2)\n  ", "\n  if(n > m) {\n    return(-1)\n  }\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  if(n <= m) {\n    n <-\
    \ seq(n, m, 1)\n    n <- n[order(n)]\n    n <- n[1]\n  }\n  \n  return(as.character(bin(round(n\
    \ / m), width = 8)))\n}\n", "\n  n <- n\n  m <- m\n  \n  if(n > m) {\n    n <-\
    \ m\n    m <- n\n  }\n  \n  n <- n + 1\n  m <- m + 1\n  \n  if(n <= m) {\n   \
    \ n <- 0\n    m <- 0\n  }\n  \n  n <- as.integer(sprintf('%b', n))\n  m <- as.integer(sprintf('%b',\
    \ m))\n  \n  n <- n + 1\n  m <- m + 1\n  \n  n <- as.integer(sprintf('%b', n))\n\
    \  m <- as.integer(sprintf('%b', m))\n  \n  n <- n + 1\n  m <- m + 1\n  \n  n\
    \ <- as.integer(sprintf('%b', n))\n  m <- as.integer(sprintf('%b', m))\n  \n \
    \ n <- n + 1\n  m <- m + 1\n  \n  n <- as.integer(sprintf('%b', n))\n  m <- as.integer(sprintf('%b',\
    \ m))\n  \n  n <- n + 1\n  m <- m + 1\n  \n  n <- as.integer(sprintf('%b', n))\n\
    \  m <- as.integer(sprintf('%b', m))\n  \n  n <- n + 1\n  m <- m + 1\n  \n  n\
    \ <- as.integer(sprintf('%b', n))\n  m <- as.integer(sprintf('%b', m))\n  \n \
    \ n <- n + 1\n  m <- m + 1\n  \n  n <- as.integer(sprintf('%b', n))\n  m <- as.integer(sprintf('%b',\
    \ m))\n  \n  n <- n + 1\n  m <- m + 1\n  \n  n <- as.integer(sprintf('%b', n))\n\
    \  m <- as.integer(sprintf('%b', m))\n  \n  n <- n + 1\n  m <- m + 1\n  \n  n\
    \ <- as.integer(sprintf('%b', n))\n  m <- as.integer(sprintf('%b', m))\n  \n \
    \ n <- n + 1\n  m <- m + 1\n  \n  n <- as.integer(sprintf('%b', n))\n  m <- as.integer(sprintf('%b',\
    \ m))\n  \n  n <- n + 1\n  m <- m + 1\n  \n  n <- as.integer(sprintf('%b', n))\n\
    \  m <- ", "\n  n <- n\n  m <- m\n  n <- ifelse(n < m, n, m)\n  n <- ifelse(n\
    \ < 0, -1, n)\n  m <- ifelse(m < 0, -1, m)\n  n <- ifelse(n < m, n, m)\n  n <-\
    \ ifelse(n < 0, -1, n)\n  m <- ifelse(m < 0, -1, m)\n  n <- ifelse(n < m, n, m)\n\
    \  n <- ifelse(n < 0, -1, n)\n  m <- ifelse(m < 0, -1, m)\n  n <- ifelse(n < m,\
    \ n, m)\n  n <- ifelse(n < 0, -1, n)\n  m <- ifelse(m < 0, -1, m)\n  n <- ifelse(n\
    \ < m, n, m)\n  n <- ifelse(n < 0, -1, n)\n  m <- ifelse(m < 0, -1, m)\n  n <-\
    \ ifelse(n < m, n, m)\n  n <- ifelse(n < 0, -1, n)\n  m <- ifelse(m < 0, -1, m)\n\
    \  n <- ifelse(n < m, n, m)\n  n <- ifelse(n < 0, -1, n)\n  m <- ifelse(m < 0,\
    \ -1, m)\n  n <- ifelse(n < m, n, m)\n  n <- ifelse(n < 0, -1, n)\n  m <- ifelse(m\
    \ < 0, -1, m)\n  n <- ifelse(n < m, n, m)\n  n <- ifelse(n < 0, -1, n)\n  m <-\
    \ ifelse(m < 0, -1, m)\n  n <- ifelse(n < m, n, m)\n  n <- ifelse(n < 0, -1, n)\n\
    \  m <- ifelse(m < 0, -1, m)\n  n <- ifelse(n < m, n, m)\n  n <- ifelse(n < 0,\
    \ -1, n)\n  m <- ifelse(m < 0, -1, m)\n  n <- ifelse(n < m, n, m)\n  n <- ifelse(n\
    \ < 0, -1, n)\n  m <- ifelse(m < 0, -1, m)\n  n <- ifelse(n < m, n, m)\n  n <-\
    \ ifelse(n < 0, -1, n)\n  m <- ifelse(m < 0, -1, m)\n  n <- ifelse(n < m, n, m)\n\
    \  n <- ifelse(n < 0, -1, n)\n  m <- ifelse(m < 0, -1, m)\n  n <- ifelse(n < m,\
    \ n, m)\n  n <- ifelse(n < 0, -1, n)\n  m <- ifelse(m < 0, -1, m)\n  n <- ifelse(",
  "\n  if(n >= m) return(-1L)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n\
    \  n <- n + (n - m)\n  \n  return(as.integer(formatC(n / m, width = 2, format\
    \ = \"d\", flag = \"0b\")))\n}\n", "\n  if(n >= m) return(-1)\n  return(sprintf(\"\
    0b%b\", round(n + (m - n)/2)))\n}\n</cell>\n<cell>", "\n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  if (n >= m) return(-1)\n  n <- n + 1\n  m <- m + 1\n\
    \  n <- n - (n %% 2)\n  m <- m - (m %% 2)\n  n <- n + (m %% 2)\n  m <- m + (n\
    \ %% 2)\n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n  n <- n + (m %% 2)\n  m <-\
    \ m + (n %% 2)\n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n  n <- n + (m %% 2)\n\
    \  m <- m + (n %% 2)\n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n  n <- n + (m\
    \ %% 2)\n  m <- m + (n %% 2)\n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n  n <-\
    \ n + (m %% 2)\n  m <- m + (n %% 2)\n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n\
    \  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n  n <- n + (m %% 2)\n  m <- m + (n\
    \ %% 2)\n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n  n <- n + (m %% 2)\n  m <-\
    \ m + (n %% 2)\n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n  n <- n + (m %% 2)\n\
    \  m <- m + (n %% 2)\n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n  n <- n + (m\
    \ %% 2)\n  m <- m + (n %% 2)\n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n  n <-\
    \ n + (m %% 2)\n  m <- m + (n %% 2)\n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n\
    \  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n  n <- n + (m %% 2)\n  m <- m + (n\
    \ %% 2)\n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n  n <- n + (m %% 2)\n  m <-\
    \ m + (n %% 2)\n  n <- n + (m %% ", "\n  \n  if(n > m) return(-1)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  if(n <= m) return(as.character(round(n/m,\
    \ 0)))\n  \n  return(as.character(round(n/m, 0)))\n}\n", "\n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  if(n > m) {\n    stop(\"n must be less than m\")\n\
    \  }\n  \n  if(n <= 0) {\n    stop(\"n must be positive\")\n  }\n  \n  if(m <=\
    \ 0) {\n    stop(\"m must be positive\")\n  }\n  \n  if(m > n) {\n    stop(\"\
    m must be less than n\")\n  }\n  \n  if(m == 0) {\n    stop(\"m must be greater\
    \ than 0\")\n  }\n  \n  if(m == n) {\n    stop(\"m must be equal to n\")\n  }\n\
    \  \n  if(m == 1) {\n    stop(\"m must be greater than 1\")\n  }\n  \n  if(m ==\
    \ 2) {\n    stop(\"m must be greater than 2\")\n  }\n  \n  if(m == 3) {\n    stop(\"\
    m must be greater than 3\")\n  }\n  \n  if(m == 4) {\n    stop(\"m must be greater\
    \ than 4\")\n  }\n  \n  if(m == 5) {\n    stop(\"m must be greater than 5\")\n\
    \  }\n  \n  if(m == 6) {\n    stop(\"m must be greater than 6\")\n  }\n  \n  if(m\
    \ == 7) {\n    stop(\"m must be greater than 7\")\n  }\n  \n  if(m == 8) {\n \
    \   stop(\"m must be greater than 8\")\n  }\n  \n  if(m == 9) {\n    stop(\"m\
    \ must be greater than 9\")\n  }\n  \n  if(m == 10) {\n    stop(\"m must be greater\
    \ than 10\")\n  }\n  \n  if(m == 11) {\n    stop(\"m must be greater than 11\"\
    )\n  }\n  \n  if(m == 12) {\n    stop(\"m must be greater than 12\")\n  }\n  \n\
    \  if(m == 13) {\n    stop(\"m must be greater than 13\")\n  }\n  \n  if(m ==\
    \ 14) {\n    stop(\"m must be greater than 14\")\n  }\n  \n  if(m == 15) {\n \
    \   stop(\"m must be greater than 15\")\n  }\n  \n  if(m == 16) {\n    stop(\"\
    m must be greater than 16\")\n  }\n  \n  if(m == 17) {\n    stop(\"m must be greater\
    \ than 17\")\n  }\n  \n  if(m == 18) {\n    stop(\"m must be greater than 18\"\
    )\n  }\n  \n  if(m == 19) {\n    stop(\"m must be greater than 19\")\n  }\n  \n\
    \  if(m == 20) {\n    stop(\"m must be ", "\n  n <- n\n  m <- m\n  \n  if(n >\
    \ m) {\n    n <- m\n    m <- n\n  }\n  \n  n <- n\n  m <- m\n  \n  if(n < 1) {\n\
    \    n <- 1\n    m <- 1\n  }\n  \n  n <- n\n  m <- m\n  \n  if(n < 1) {\n    n\
    \ <- 1\n    m <- 1\n  }\n  \n  n <- n\n  m <- m\n  \n  if(n < 1) {\n    n <- 1\n\
    \    m <- 1\n  }\n  \n  n <- n\n  m <- m\n  \n  if(n < 1) {\n    n <- 1\n    m\
    \ <- 1\n  }\n  \n  n <- n\n  m <- m\n  \n  if(n < 1) {\n    n <- 1\n    m <- 1\n\
    \  }\n  \n  n <- n\n  m <- m\n  \n  if(n < 1) {\n    n <- 1\n    m <- 1\n  }\n\
    \  \n  n <- n\n  m <- m\n  \n  if(n < 1) {\n    n <- 1\n    m <- 1\n  }\n  \n\
    \  n <- n\n  m <- m\n  \n  if(n < 1) {\n    n <- 1\n    m <- 1\n  }\n  \n  n <-\
    \ n\n  m <- m\n  \n  if(n < 1) {\n    n <- 1\n    m <- 1\n  }\n  \n  n <- n\n\
    \  m <- m\n  \n  if(n < 1) {\n    n <- 1\n    m <- 1\n  }\n  \n  n <- n\n  m <-\
    \ m\n  \n  if(n < 1) {\n    n <- 1\n    m <- 1\n  }\n  \n  n <- n\n  m <- m\n\
    \  \n  if(n < 1) {\n    n <- 1\n    m <- 1\n  }\n  \n  n <- n\n  m <- m\n  \n\
    \  if(n < 1) {\n    n <- 1\n    m <- 1\n  }\n  \n  n <- n\n  m <- m\n  \n  if(n\
    \ < 1) {\n    n <- 1\n    m <- 1\n  }\n  \n  n <- n\n  m <- m\n  \n  if(n < 1)\
    \ {\n    n <- 1\n    m <- 1\n  }\n  \n  n <- n\n  m <- m\n  \n  if(n < ", "\n\
    \  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  if(n <= m) {\n    n <- n +\
    \ 1\n  }\n  \n  n <- n + (m %% n)\n  m <- m %/% n\n  \n  n <- sprintf('0b%b',\
    \ n)\n  m <- sprintf('0b%b', m)\n  \n  return(paste(n, m, sep = ''))\n}\n", "\n\
    \  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  if(n > m) {\n    return(-1)\n\
    \  }\n  \n  return(paste0(as.character(n), as.character(m), sep = ''))\n}\n",
  "\n  if(n >= m) return(-1)\n  return(paste0(round(m/n), collapse = \"\"))\n}\n",
  "\n  \n  if(n >= m) return(-1)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- n - 1\n  m <- m - n\n  \n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n\
    \  \n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n  \n  n <- n + (m %% 2)\n  m <-\
    \ m + (n %% 2)\n  \n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n  \n  n <- n + (m\
    \ %% 2)\n  m <- m + (n %% 2)\n  \n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n \
    \ \n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n  \n  n <- n + (m %% 2)\n  m <-\
    \ m + (n %% 2)\n  \n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n  \n  n <- n + (m\
    \ %% 2)\n  m <- m + (n %% 2)\n  \n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n \
    \ \n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n  \n  n <- n + (m %% 2)\n  m <-\
    \ m + (n %% 2)\n  \n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n  \n  n <- n + (m\
    \ %% 2)\n  m <- m + (n %% 2)\n  \n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n \
    \ \n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n  \n  n <- n + (m %% 2)\n  m <-\
    \ m + (n %% 2)\n  \n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n  \n  n <- n + (m\
    \ %% 2)\n  m <- m + (n %% 2)\n  \n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n \
    \ \n  n <- n + (m %% 2)\n  m <- m + (n %% 2)\n  \n  n <- n + (m %% 2)\n  m <-\
    \ m + (n %% 2)\n  \n  n <- n + (m ", "\n  if(n >= m) return(-1)\n  return(paste0(round(n\
    \ / (m - n) * 8), '0b'))\n}\n</cell>\n<cell>", "\n  n <- n\n  m <- m\n  \n  if(n\
    \ <= m) return(as.character(n))\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <-\
    \ m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n\
    \  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n\
    \  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <-\
    \ n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n\
    \  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <-\
    \ m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n\
    \  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n\
    \  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <-\
    \ n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n\
    \  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <-\
    \ m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n\
    \  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n\
    \  n <- n", "\n  n <- n\n  m <- m\n  n <- ifelse(n < m, n, m)\n  n <- ifelse(n\
    \ < 0, -1, n)\n  n <- ifelse(n > m, -1, n)\n  n <- ifelse(n > 0, sprintf(\"0b%b\"\
    , n), -1)\n  return(n)\n}\n", "\n  n <- n\n  m <- m\n  \n  if(n > m) {\n    n\
    \ <- m\n    m <- n\n  }\n  \n  n <- n + 1\n  m <- m + 1\n  \n  n <- as.integer(format(n,\
    \ \"b\"))\n  m <- as.integer(format(m, \"b\"))\n  \n  n <- n / 2\n  m <- m / 2\n\
    \  \n  n <- as.integer(format(n, \"b\"))\n  m <- as.integer(format(m, \"b\"))\n\
    \  \n  n <- n + (m / 2)\n  m <- m - (n / 2)\n  \n  n <- as.integer(format(n, \"\
    b\"))\n  m <- as.integer(format(m, \"b\"))\n  \n  n <- n + (m / 2)\n  m <- m -\
    \ (n / 2)\n  \n  n <- as.integer(format(n, \"b\"))\n  m <- as.integer(format(m,\
    \ \"b\"))\n  \n  n <- n + (m / 2)\n  m <- m - (n / 2)\n  \n  n <- as.integer(format(n,\
    \ \"b\"))\n  m <- as.integer(format(m, \"b\"))\n  \n  n <- n + (m / 2)\n  m <-\
    \ m - (n / 2)\n  \n  n <- as.integer(format(n, \"b\"))\n  m <- as.integer(format(m,\
    \ \"b\"))\n  \n  n <- n + (m / 2)\n  m <- m - (n / 2)\n  \n  n <- as.integer(format(n,\
    \ \"b\"))\n  m <- as.integer(format(m, \"b\"))\n  \n  n <- n + (m / 2)\n  m <-\
    \ m - (n / 2)\n  \n  n <- as.integer(format(n, \"b\"))\n  m <- as.integer(format(m,\
    \ \"b\"))\n  \n  n <- n + (m / 2)\n  m <- m - (n / 2)\n  \n  n <- as.integer(format(n,\
    \ \"b\"))\n  m <- as.integer(format(m, \"b\"))\n  \n  n <- n + (m / 2)\n  m <-\
    \ m - (n / 2)\n  \n  n <- as.integer(format(n, \"b\"))\n  m <- as.integer(format(m,\
    \ \"b\"))\n  \n  n <- n + (m / 2)\n  m <- m - (n / 2)\n  \n  n <- as.integer(format(n,\
    \ \"b", "\n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  if(n > m) {\n   \
    \ stop(\"n must be less than m\")\n  }\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  if(n <= 0) {\n    return(-1)\n  }\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  if(m <= 0) {\n    return(-1)\n  }\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  if(n <= m) {\n    return(-1)\n  }\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m\
    \ <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m\
    \ <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m\
    \ <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m\
    \ <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- as.", "\n  if(n > m) {\n    return(-1)\n  }\n  \n  return(paste0(round(n\
    \ / (m - n) * 8, 2), \"b\", round(m / (m - n) * 8, 2)))\n}\n", "\n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  if(n > m) return(-1)\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n\
    \ <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m\
    \ <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m\
    \ <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m\
    \ <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m\
    \ <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m\
    \ <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)", "\n  \n \
    \ if(n >= m) return(-1)\n  \n  n <- n\n  m <- m\n  \n  i <- 0\n  \n  while(i <=\
    \ m) {\n    \n    i <- i+1\n    \n    avg <- n/i\n    \n    n <- n%/%i\n    \n\
    \    i <- i-1\n    \n    n <- n%/%i\n    \n    i <- i-1\n    \n    n <- n%/%i\n\
    \    \n    i <- i-1\n    \n    n <- n%/%i\n    \n    i <- i-1\n    \n    n <-\
    \ n%/%i\n    \n    i <- i-1\n    \n    n <- n%/%i\n    \n    i <- i-1\n    \n\
    \    n <- n%/%i\n    \n    i <- i-1\n    \n    n <- n%/%i\n    \n    i <- i-1\n\
    \    \n    n <- n%/%i\n    \n    i <- i-1\n    \n    n <- n%/%i\n    \n    i <-\
    \ i-1\n    \n    n <- n%/%i\n    \n    i <- i-1\n    \n    n <- n%/%i\n    \n\
    \    i <- i-1\n    \n    n <- n%/%i\n    \n    i <- i-1\n    \n    n <- n%/%i\n\
    \    \n    i <- i-1\n    \n    n <- n%/%i\n    \n    i <- i-1\n    \n    n <-\
    \ n%/%i\n    \n    i <- i-1\n    \n    n <- n%/%i\n    \n    i <- i-1\n    \n\
    \    n <- n%/%i\n    \n    i <- i-1\n    \n    n <- n%/%i\n    \n    i <- i-1\n\
    \    \n    n <- n%/%i\n    \n    i <- i-1\n    \n    n <- n%/%i\n    \n    i <-\
    \ i-1\n    \n    n <- n%/%i\n    \n    i <- i-1\n    \n    n <- n%/%i\n    \n\
    \    i <- i-1\n    \n    n <- n%/%i\n    \n    i <- i-1\n    \n    n <- n%/%i\n\
    \    \n    i <- i-1\n    \n    n <- n%", "\n  n <- n\n  m <- m\n  n <- n - 1\n\
    \  m <- m - 1\n  n <- n * 8 + 1\n  m <- m * 8 + 1\n  n <- n - (m %% 8)\n  m <-\
    \ m - (n %% 8)\n  n <- n + (m %% 8)\n  m <- m + (n %% 8)\n  n <- n - (m %% 8)\n\
    \  m <- m - (n %% 8)\n  n <- n + (m %% 8)\n  m <- m + (n %% 8)\n  n <- n - (m\
    \ %% 8)\n  m <- m - (n %% 8)\n  n <- n + (m %% 8)\n  m <- m + (n %% 8)\n  n <-\
    \ n - (m %% 8)\n  m <- m - (n %% 8)\n  n <- n + (m %% 8)\n  m <- m + (n %% 8)\n\
    \  n <- n - (m %% 8)\n  m <- m - (n %% 8)\n  n <- n + (m %% 8)\n  m <- m + (n\
    \ %% 8)\n  n <- n - (m %% 8)\n  m <- m - (n %% 8)\n  n <- n + (m %% 8)\n  m <-\
    \ m + (n %% 8)\n  n <- n - (m %% 8)\n  m <- m - (n %% 8)\n  n <- n + (m %% 8)\n\
    \  m <- m + (n %% 8)\n  n <- n - (m %% 8)\n  m <- m - (n %% 8)\n  n <- n + (m\
    \ %% 8)\n  m <- m + (n %% 8)\n  n <- n - (m %% 8)\n  m <- m - (n %% 8)\n  n <-\
    \ n + (m %% 8)\n  m <- m + (n %% 8)\n  n <- n - (m %% 8)\n  m <- m - (n %% 8)\n\
    \  n <- n + (m %% 8)\n  m <- m + (n %% 8)\n  n <- n - (m %% 8)\n  m <- m - (n\
    \ %% 8)\n  n <- n + (m %% 8)\n  m <- m + (n %% 8)\n  n <- n - (m %% 8)\n  m <-\
    \ m - (n %% 8)\n  n <- n + (m %% 8)\n  m <- m + (n %% 8)\n  n <- n - (m %% 8)\n\
    \  m <- m - (n %% 8)\n  n <- n + (m %% 8)\n  m <- m + (n %% 8)\n  n <- n - (m ",
  "\n  if(n >= m) return(-1)\n  return(sprintf('0b%b', round(n + (m - n)/2)))\n}\n\
    </cell>\n<cell>", "\n  if(n > m) return(-1)\n  return(paste0(as.character(round(n/m,\
    \ 0)), as.character(round(m/n, 0))))\n}\n</code>\n<|/ a dscore=2 |>\n<| a dscore=1\
    \ |>\n<code>\nlibrary(stringr)\nlibrary(dplyr)\n\ndf <- data.frame(\n  n = c(1:5),\n\
    \  m = c(6:10)\n)\n\ndf %>% \n  mutate(\n    bin = str_glue(\"{n}b{m}\")\n  )\
    \ %>% \n  mutate(\n    bin = str_replace(bin, \"\\\\b\", \"0\")\n  ) %>% \n  mutate(\n\
    \    bin = str_replace(bin, \"\\\\b\", \"0\")\n  ) %>% \n  mutate(\n    bin =\
    \ str_replace(bin, \"\\\\b\", \"0\")\n  ) %>% \n  mutate(\n    bin = str_replace(bin,\
    \ \"\\\\b\", \"0\")\n  ) %>% \n  mutate(\n    bin = str_replace(bin, \"\\\\b\"\
    , \"0\")\n  ) %>% \n  mutate(\n    bin = str_replace(bin, \"\\\\b\", \"0\")\n\
    \  ) %>% \n  mutate(\n    bin = str_replace(bin, \"\\\\b\", \"0\")\n  ) %>% \n\
    \  mutate(\n    bin = str_replace(bin, \"\\\\b\", \"0\")\n  ) %>% \n  mutate(\n\
    \    bin = str_replace(bin, \"\\\\b\", \"0\")\n  ) %>% \n  mutate(\n    bin =\
    \ str_replace(bin, \"\\\\b\", \"0\")\n  ) %>% \n  mutate(\n    bin = str_replace(bin,\
    \ \"\\\\b\", \"0\")\n  ) %>% \n  mutate(\n    bin = str_replace(bin, \"\\\\b\"\
    , \"0\")\n  ) %>% \n  mutate(\n    bin = str_replace(bin, \"\\\\b\", \"0\")\n\
    \  ) %>% \n  mutate(\n    bin = str_replace(bin, \"\\\\b\", \"0\")\n  ) %>% \n\
    \  mutate(\n    bin = str_replace(bin, \"\\\\b\", \"0\")\n  ) %>% \n  mutate(\n\
    \    bin = str_replace(bin, \"\\\\b\", \"0\")\n  ) %>% \n  mutate(\n    bin =\
    \ str_replace(bin, \"\\\\b\", \"0\")\n  ) %>% \n  mutate(\n    bin = str_replace(bin,\
    \ \"\\\\b\", \"0\")\n  ) %>% \n  mutate(\n    bin = str_replace(bin, \"\\\\b\"\
    , \"0\")\n  ) %>% \n  mut", "\n  n <- n\n  m <- m\n  \n  if(n > m) {\n    return(-1)\n\
    \  }\n  \n  n <- n + 1\n  m <- m + 1\n  \n  n <- n / 2\n  m <- m / 2\n  \n  n\
    \ <- sprintf('0b%b', n)\n  m <- sprintf('0b%b', m)\n  \n  return(paste(n, m, sep\
    \ = ''))\n}\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7,\
    \ 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n\
    </cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n\
    <cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\n\
    rounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7,\
    \ 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n\
    </cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n\
    <cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\n\
    rounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7,\
    \ 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n\
    </cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n\
    <cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\n\
    rounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</", "\n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  if(n > m) {\n    return(-1)\n  }\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n\
    \ <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m\
    \ <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m\
    \ <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m\
    \ <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m\
    \ <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m\
    \ <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integ", "\n  n <- n\n\
    \  m <- m\n  \n  if(n > m) {\n    return(-1)\n  }\n  \n  n <- n\n  m <- m\n  \n\
    \  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <-\
    \ n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n\
    \  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <-\
    \ m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n\
    \  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n\
    \  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <-\
    \ n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n\
    \  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <-\
    \ m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n\
    \  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n\
    \  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <-\
    \ n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n\
    \  m <- m\n  \n  n <- n\n  m ", "\n  n <- n\n  m <- m\n  n <- ifelse(n < m, n,\
    \ m)\n  n <- ifelse(n < 0, -1, n)\n  n <- ifelse(n > m, -1, n)\n  n <- ifelse(n\
    \ > 0, sprintf(\"0b%b\", n), -1)\n  return(n)\n}\n", "\n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  if(n > m) {\n    n <- m\n  }\n  n <- n + 1\n  m <- m\
    \ + 1\n  n <- n - (n %% 10)\n  m <- m - (m %% 10)\n  n <- n + (n %% 10)\n  m <-\
    \ m + (m %% 10)\n  n <- n + (n %% 10)\n  m <- m + (m %% 10)\n  n <- n + (n %%\
    \ 10)\n  m <- m + (m %% 10)\n  n <- n + (n %% 10)\n  m <- m + (m %% 10)\n  n <-\
    \ n + (n %% 10)\n  m <- m + (m %% 10)\n  n <- n + (n %% 10)\n  m <- m + (m %%\
    \ 10)\n  n <- n + (n %% 10)\n  m <- m + (m %% 10)\n  n <- n + (n %% 10)\n  m <-\
    \ m + (m %% 10)\n  n <- n + (n %% 10)\n  m <- m + (m %% 10)\n  n <- n + (n %%\
    \ 10)\n  m <- m + (m %% 10)\n  n <- n + (n %% 10)\n  m <- m + (m %% 10)\n  n <-\
    \ n + (n %% 10)\n  m <- m + (m %% 10)\n  n <- n + (n %% 10)\n  m <- m + (m %%\
    \ 10)\n  n <- n + (n %% 10)\n  m <- m + (m %% 10)\n  n <- n + (n %% 10)\n  m <-\
    \ m + (m %% 10)\n  n <- n + (n %% 10)\n  m <- m + (m %% 10)\n  n <- n + (n %%\
    \ 10)\n  m <- m + (m %% 10)\n  n <- n + (n %% 10)\n  m <- m + (m %% 10)\n  n <-\
    \ n + (n %% 10)\n  m <- m + (m %% 10)\n  n <- n + (n %% 10)\n  m <- m + (m %%\
    \ 10)\n  n <- n + (n %% 10)\n  m <- m + (m %% 10)\n  n <- n + (n %% 10)\n  m <-\
    \ m + (m %% 10)\n  n <- n + (n %% 10)\n  m <- m + (m %% 10)\n  n <- n + (n %%\
    \ 10)\n  m <- m + (m %% 10)\n  n <- n + (n %% 10)\n  m <- m + (m %% 10)\n  n <- ",
  "\n  if(n > m) return(-1)\n  \n  n <- n\n  m <- m\n  \n  n <- n + 1\n  m <- m +\
    \ 1\n  \n  n <- n / 2\n  m <- m / 2\n  \n  n <- sprintf('0b%b', n)\n  m <- sprintf('0b%b',\
    \ m)\n  \n  return(paste(n, m, sep=\"\"))\n}\n</cell>\n<cell>\nrounded_avg(7,\
    \ 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n\
    </cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n\
    <cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\n\
    rounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7,\
    \ 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n\
    </cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n\
    <cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\n\
    rounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7,\
    \ 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n\
    </cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n\
    <cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\n\
    rounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7,\
    \ 5)\n</cell>", "\n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  if(n > m)\
    \ {\n    -1\n  } else {\n    n <- n + 1\n    m <- m + 1\n    \n    s <- 0\n  \
    \  \n    while(n <= m) {\n      s <- s + n\n      n <- n + 1\n    }\n    \n  \
    \  s <- s / m\n    \n    s <- as.character(s)\n    \n    s <- paste0(\"0b\", s)\n\
    \    \n    s <- paste0(substr(s, 1, n), substr(s, n, m))\n    \n    s\n  }\n}\n",
  "\n  n <- n\n  m <- m\n  \n  if(n > m) {\n    n <- m\n    m <- n\n  }\n  \n  n <-\
    \ n + 1\n  m <- m + 1\n  \n  s <- 0\n  \n  while(n <= m) {\n    s <- s + n\n \
    \   n <- n + 1\n  }\n  \n  s <- s / 2\n  \n  s <- paste0(s, 'b')\n  \n  return(s)\n\
    }\n", "\n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  if(n > m) {\n    return(-1)\n\
    \  }\n  \n  return(paste0(\"0b\", as.integer(n+m)/2))\n}\n", "\n  n <- n\n  m\
    \ <- m\n  \n  if(n > m) {\n    n <- m\n  }\n  \n  n <- n + 1\n  m <- m + 1\n \
    \ \n  n <- sprintf(\"%b\", n)\n  m <- sprintf(\"%b\", m)\n  \n  n <- n[-length(n)]\n\
    \  m <- m[-length(m)] \n  \n  n <- paste0(n, m)\n  \n  n <- n[-length(n)]\n  \n\
    \  n <- paste0(n, \"1\")\n  \n  n <- n[-length(n)]\n  \n  n <- paste0(n, \"0\"\
    )\n  \n  n <- n[-length(n)]\n  \n  n <- paste0(n, \"1\")\n  \n  n <- n[-length(n)]\n\
    \  \n  n <- paste0(n, \"0\")\n  \n  n <- n[-length(n)]\n  \n  n <- paste0(n, \"\
    1\")\n  \n  n <- n[-length(n)]\n  \n  n <- paste0(n, \"0\")\n  \n  n <- n[-length(n)]\n\
    \  \n  n <- paste0(n, \"1\")\n  \n  n <- n[-length(n)]\n  \n  n <- paste0(n, \"\
    0\")\n  \n  n <- n[-length(n)]\n  \n  n <- paste0(n, \"1\")\n  \n  n <- n[-length(n)]\n\
    \  \n  n <- paste0(n, \"0\")\n  \n  n <- n[-length(n)]\n  \n  n <- paste0(n, \"\
    1\")\n  \n  n <- n[-length(n)]\n  \n  n <- paste0(n, \"0\")\n  \n  n <- n[-length(n)]\n\
    \  \n  n <- paste0(n, \"1\")\n  \n  n <- n[-length(n)]\n  \n  n <- paste0(n, \"\
    0\")\n  \n  n <- n[-length(n)]\n  \n  n <- paste0(n, \"1\")\n  \n  n <- n[-length(n)]\n\
    \  \n  n <- paste0(n, \"0\")\n  \n  n <- n[-length(n)]\n  \n  n <- paste0(n, \"\
    1\")\n  \n  n <- n[-length(n)]\n  \n  n <- paste0(n, \"0\")\n  \n  n <- n[-length(n)]\n\
    \  \n  n <- paste0(n, \"1\")\n  \n  n <- ", "\n  n <- n\n  m <- m\n  \n  if(n\
    \ > m) {\n    n <- m\n    m <- n\n  }\n  \n  n <- n\n  m <- m\n  \n  n <- n\n\
    \  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <-\
    \ m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n\
    \  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n\
    \  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <-\
    \ n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n\
    \  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <-\
    \ m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n\
    \  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n\
    \  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <-\
    \ n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n\
    \  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <-\
    \ m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n\
    \  \n", "\n  if(n > m) {\n    return(-1)\n  }\n  \n  sum <- 0\n  \n  for(i in\
    \ n:m) {\n    sum <- sum + i\n  }\n  \n  return(sprintf('0b%b', sum/(n+m)))\n\
    }\n", "\n  if(n > m) {\n    return(-1)\n  }\n  \n  return(as.character(round(n\
    \ + (m - n)/2, 0)))\n}\n", "\n  n <- n\n  m <- m\n  \n  if(n > m) {\n    stop(\"\
    n must be less than m\")\n  }\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n\
    \  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n\
    \  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <-\
    \ n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n\
    \  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <-\
    \ m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n\
    \  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n\
    \  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <-\
    \ n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n\
    \  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <-\
    \ m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n\
    \  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n\
    \  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  ",
  "\n  if(n >= m) return(-1L)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n\
    \  return(ceiling(n + (m - n)/2))\n}\n", "\n  n <- n\n  m <- m\n  \n  if(n <=\
    \ m) return(as.character(n))\n  \n  n <- n - 1\n  m <- m - 1\n  \n  if(n <= m)\
    \ return(as.character(n))\n  \n  n <- n - 1\n  m <- m - 1\n  \n  if(n <= m) return(as.character(n))\n\
    \  \n  n <- n - 1\n  m <- m - 1\n  \n  if(n <= m) return(as.character(n))\n  \n\
    \  n <- n - 1\n  m <- m - 1\n  \n  if(n <= m) return(as.character(n))\n  \n  n\
    \ <- n - 1\n  m <- m - 1\n  \n  if(n <= m) return(as.character(n))\n  \n  n <-\
    \ n - 1\n  m <- m - 1\n  \n  if(n <= m) return(as.character(n))\n  \n  n <- n\
    \ - 1\n  m <- m - 1\n  \n  if(n <= m) return(as.character(n))\n  \n  n <- n -\
    \ 1\n  m <- m - 1\n  \n  if(n <= m) return(as.character(n))\n  \n  n <- n - 1\n\
    \  m <- m - 1\n  \n  if(n <= m) return(as.character(n))\n  \n  n <- n - 1\n  m\
    \ <- m - 1\n  \n  if(n <= m) return(as.character(n))\n  \n  n <- n - 1\n  m <-\
    \ m - 1\n  \n  if(n <= m) return(as.character(n))\n  \n  n <- n - 1\n  m <- m\
    \ - 1\n  \n  if(n <= m) return(as.character(n))\n  \n  n <- n - 1\n  m <- m -\
    \ 1\n  \n  if(n <= m) return(as.character(n))\n  \n  n <- n - 1\n  m <- m - 1\n\
    \  \n  if(n <= m) return(as.character(n))\n  \n  n <- n - 1\n  m <- m - 1\n  \n\
    \  if(n <= m) return(as.character(n))\n  \n  n <- n - 1\n  m <- m - 1\n  \n  if(n\
    \ <= m) return(as.character(n))\n  \n  n <- n - 1\n  m <- m - 1\n  \n  if(n <=\
    \ m) ", "\n  n <- n\n  m <- m\n  \n  if(n > m) {\n    n <- m\n    m <- n\n  }\n\
    \  \n  n <- n\n  m <- m\n  \n  if(n <= 0) {\n    return(-1)\n  }\n  \n  n <- n\n\
    \  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <-\
    \ m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n\
    \  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n\
    \  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <-\
    \ n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n\
    \  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <-\
    \ m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n\
    \  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n\
    \  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <-\
    \ n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n\
    \  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <-\
    \ m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  ", "\n  n <- n\n  m <-\
    \ m\n  \n  if(n > m) return(-1)\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <-\
    \ m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n\
    \  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n\
    \  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <-\
    \ n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n\
    \  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <-\
    \ m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n\
    \  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n\
    \  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <-\
    \ n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n\
    \  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <-\
    \ m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n\
    \  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n\
    \  n <- n\n  m <- m", "\n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  if(n\
    \ > m) return(-1)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m\
    \ <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m\
    \ <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m\
    \ <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m\
    \ <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m\
    \ <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)", "\n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  if(n >= m) {\n    -1\n  } else {\n    n <- as.integer(n)\n    m <- as.integer(m)\n\
    \    \n    sum <- 0\n    \n    for(i in n:m) {\n      sum <- sum + i\n    }\n\
    \    \n    sum <- round(sum)\n    \n    sum <- sprintf('0b%b', sum)\n    \n  \
    \  return(sum)\n  }\n}\n", "\n  if(n > m) return(-1)\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  n <- n + 1\n  m <- m + 1\n  \n  n <- n / 2\n  m <-\
    \ m / 2\n  \n  n <- sprintf('0b%b', n)\n  m <- sprintf('0b%b', m)\n  \n  return(paste(n,\
    \ m, sep=\"\"))\n}\n", "\n  n <- n\n  m <- m\n  \n  if(n > m) {\n    n <- m\n\
    \    m <- n\n  }\n  \n  n <- n\n  m <- m\n  \n  if(n <= 0) {\n    return(-1)\n\
    \  }\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n\
    \  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n\
    \  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <-\
    \ n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n\
    \  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <-\
    \ m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n\
    \  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n\
    \  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <-\
    \ n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n\
    \  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <-\
    \ m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n\
    \  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  ",
  "\n  if(n >= m) return(-1)\n  \n  return(paste0(\n    sprintf('0b%0*d', \n     \
    \ nchar(as.integer(m) - n), \n      round(as.integer(m) - n, digits = 0)\n   \
    \ ), collapse = ''))\n}\n</cell>\n<cell>\nrounded_avg(1, 5)\n</cell>\n<cell>\n\
    rounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(10, 20)\n</cell>\n<cell>\nrounded_avg(20,\
    \ 33)\n</cell>\n<text>\nExercise 2\nWrite a function that takes in two integers\
    \ n and m and returns their sum.\nWrite a function that takes in two integers\
    \ n and m and returns their product.\nWrite a function that takes in two integers\
    \ n and m and returns their quotient.\nWrite a function that takes in two integers\
    \ n and m and returns their remainder.\nWrite a function that takes in two integers\
    \ n and m and returns their quotient and remainder.\nWrite a function that takes\
    \ in two integers n and m and returns their quotient and remainder.\nWrite a function\
    \ that takes in two integers n and m and returns their quotient and remainder.\n\
    Write a function that takes in two integers n and m and returns their quotient\
    \ and remainder.\nWrite a function that takes in two integers n and m and returns\
    \ their quotient and remainder.\nWrite a function that takes in two integers n\
    \ and m and returns their quotient and remainder.\nWrite a function that takes\
    \ in two integers n and m and returns their quotient and remainder.\nWrite a function\
    \ that takes in two integers n and m and returns their quotient and remainder.\n\
    Write a function that takes in two integers n and m and returns their quotient\
    \ and remainder.\nWrite a function that takes in two integers n and m and returns\
    \ their quotient and remainder.\nWrite a function that takes in two integers n\
    \ and m and returns their quotient and remainder.\nWrite a function that takes\
    \ in two integers n and m and returns their quotient and remainder.\nWrite a function\
    \ that takes in two integers n and m and returns their quotient and remainder.\n\
    Write a function that takes in two integers n and m and returns their quotient\
    \ and remainder.\nWrite a function that takes in two integers n and m and returns\
    \ their quotient and remainder.\nWrite a function that takes in two integers n\
    \ and m and returns their quotient and remainder.\nWrite a function that takes\
    \ in two integers n and m and returns their quotient and ", "\n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  if(n > m) {\n    stop(\"n must be less than m\")\n\
    \  }\n  \n  if(n <= 0) {\n    stop(\"n must be positive\")\n  }\n  \n  if(m <=\
    \ 0) {\n    stop(\"m must be positive\")\n  }\n  \n  if(n >= m) {\n    stop(\"\
    n must be less than or equal to m\")\n  }\n  \n  n <- n + (n - 1)/2\n  m <- m\
    \ + (m - 1)/2\n  \n  n <- n + (n - 1)/2\n  m <- m + (m - 1)/2\n  \n  n <- n +\
    \ (n - 1)/2\n  m <- m + (m - 1)/2\n  \n  n <- n + (n - 1)/2\n  m <- m + (m - 1)/2\n\
    \  \n  n <- n + (n - 1)/2\n  m <- m + (m - 1)/2\n  \n  n <- n + (n - 1)/2\n  m\
    \ <- m + (m - 1)/2\n  \n  n <- n + (n - 1)/2\n  m <- m + (m - 1)/2\n  \n  n <-\
    \ n + (n - 1)/2\n  m <- m + (m - 1)/2\n  \n  n <- n + (n - 1)/2\n  m <- m + (m\
    \ - 1)/2\n  \n  n <- n + (n - 1)/2\n  m <- m + (m - 1)/2\n  \n  n <- n + (n -\
    \ 1)/2\n  m <- m + (m - 1)/2\n  \n  n <- n + (n - 1)/2\n  m <- m + (m - 1)/2\n\
    \  \n  n <- n + (n - 1)/2\n  m <- m + (m - 1)/2\n  \n  n <- n + (n - 1)/2\n  m\
    \ <- m + (m - 1)/2\n  \n  n <- n + (n - 1)/2\n  m <- m + (m - 1)/2\n  \n  n <-\
    \ n + (n - 1)/2\n  m <- m + (m - 1)/2\n  \n  n <- n + (n - 1)/2\n  m <- m + (m\
    \ - 1)/2\n  \n  n <- n + (n - 1)/2\n  m <- m + (m - 1)/2\n  \n  n <- n + (n -\
    \ 1)/2\n  m <- m + (m - 1)/2\n  \n  n <- n + (n - 1)/2\n  m <- m + (m - 1)/2\n\
    \  \n  n <- n + (n - 1)/2\n  m <- m + (m - 1)/2\n", "\n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  if(n > m) {\n    stop(\"n must be less than m\")\n\
    \  }\n  \n  n <- n + 1\n  m <- m + 1\n  \n  result <- 0\n  \n  for(i in n:m) {\n\
    \    result <- result + i\n  }\n  \n  result <- result / 2\n  \n  result <- as.character(result)\n\
    \  \n  result <- paste0(\"0b\", result)\n  \n  return(result)\n}\n", "\n  if(n\
    \ > m) {\n    return(-1)\n  }\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  if(n <= m) {\n    n <- seq(n, m, 1)\n    n <- n[order(n)]\n    n <- n[1]\n\
    \  } else {\n    m <- seq(m, n, -1)\n    m <- m[order(m)]\n    m <- m[1]\n  }\n\
    \  \n  return(paste0(\"0b\", sprintf(\"%0*d\", length(m)-1, m)))\n}\n", "\n  n\
    \ <- n\n  m <- m\n  \n  if(n > m) return(-1)\n  \n  n <- n + 1\n  m <- m + 1\n\
    \  \n  return(paste0(round(n / m), collapse = \"\"))\n}\n", "\n  n <- n\n  m <-\
    \ m\n  \n  if(n > m) {\n    n <- m\n    m <- n\n  }\n  \n  n <- n + 1\n  m <-\
    \ m + 1\n  \n  n <- as.integer(format(round(n/2, na.rm = T), format = \"b\"))\n\
    \  m <- as.integer(format(round(m/2, na.rm = T), format = \"b\"))\n  \n  if(n\
    \ >= m) {\n    n <- -1\n  }\n  \n  return(paste0(format(n, \"b\"), format(m, \"\
    b\")))\n}\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<text>\nProblem 3\nWrite\
    \ a function that takes two positive integers n and m, and returns their sum,\
    \ rounded up to the nearest integer.\n\n\n</text>\n<cell>", "\n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  if(n > m) {\n    return(-1)\n  }\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n\
    \ <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m\
    \ <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m\
    \ <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m\
    \ <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m\
    \ <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- as.integer(n)\n  m\
    \ <- as.integer(m)\n  \n  n <- as.integer(n)\n  m <- as.integ", "\n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  if (n <= m) {\n    n <- n + 1\n    m <- m - 1\n \
    \ }\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- n + (m %% n)\n\
    \  m <- m - (n %% m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n\
    \ <- n + (m %% n)\n  m <- m - (n %% m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- n + (m %% n)\n  m <- m - (n %% m)\n  \n  n <- as.integer(n)\n  m <-\
    \ as.integer(m)\n  \n  n <- n + (m %% n)\n  m <- m - (n %% m)\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  n <- n + (m %% n)\n  m <- m - (n %% m)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- n + (m %% n)\n  m <- m - (n\
    \ %% m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  n <- n + (m %%\
    \ n)\n  m <- m - (n %% m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n\
    \  n <- n + (m %% n)\n  m <- m - (n %% m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  n <- n + (m %% n)\n  m <- m - (n %% m)\n  \n  n <- as.integer(n)\n  m <-\
    \ as.integer(m)\n  \n  n <- n + (m %% n)\n  m <- m - (n %% m)\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  n <- n + (m %% n)\n  m <- m - (n %% m)\n  \n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  n <- n + (m %% n)\n  m <- m - (n\
    \ %% m)\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n", "\n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  if(n > m) {\n    return(-1)\n  }\n  \n  return(as.character(round(n\
    \ + (m - n) * 0.5, 0)))\n}\n", "\n  n <- n\n  m <- m\n  \n  if(n > m) return(-1)\n\
    \  \n  n <- n + 1\n  m <- m + 1\n  \n  return(paste0(round(n / m), collapse =\
    \ \"\"))\n}\n", "\n  n <- n\n  m <- m\n  \n  if(n > m) {\n    n <- m\n    m <-\
    \ n\n  }\n  \n  n <- n + 1\n  m <- m + 1\n  \n  n <- floor(n / 2)\n  m <- floor(m\
    \ / 2)\n  \n  n <- n * 2\n  m <- m * 2\n  \n  n <- as.integer(binom(n, m))\n \
    \ m <- as.integer(binom(m, n))\n  \n  n <- as.character(n)\n  m <- as.character(m)\n\
    \  \n  n <- paste0(n, m)\n  \n  n <- n[-n]\n  \n  n <- paste0('0b', n)\n  \n \
    \ return(n)\n}\n", "\n  n <- n\n  m <- m\n  \n  if(n > m) return(-1)\n  \n  n\
    \ <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n\
    \  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <-\
    \ m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n\
    \  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n\
    \  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <-\
    \ n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n\
    \  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <-\
    \ m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n\
    \  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n\
    \  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <-\
    \ n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n\
    \  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <-\
    \ m\n  \n  n <- n\n  m <- m\n  \n  n <- n\n  m <- m", "\n  if(n > m) {\n    return(-1)\n\
    \  }\n  return(paste0(as.character(round(n + (m - n)/2, 0)), collapse = \"\"))\n\
    }\n", "\n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  if(n <= m) {\n    n\
    \ <- n + 1\n    m <- m - 1\n  }\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  if(n <= m) {\n    n <-\
    \ n + 1\n    m <- m - 1\n  }\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  if(n <= m) {\n    n <-\
    \ n + 1\n    m <- m - 1\n  }\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  if(n <= m) {\n    n <-\
    \ n + 1\n    m <- m - 1\n  }\n  \n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n  \n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  \n  if(n <= m) {\n    n <- n + 1\n    m <- m - 1\n  }\n\
    \  \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  if(n <= m) {\n    n <-\
    \ n + 1\n    ", "\n  n <- n\n  m <- m\n  \n  if(n <= m) return(as.character(n))\n\
    \  \n  n <- n + 1\n  m <- m + 1\n  \n  return(as.character(round(n / (m - n) *\
    \ 2, 0)))\n}\n", "\n  \n  if(n >= m) return(-1)\n  \n  n <- as.integer(n)\n  m\
    \ <- as.integer(m)\n  \n  if(n <= m) return(as.character(round(n/m, 0)))\n  \n\
    \  return(as.character(round(n/m, 0)))\n}\n", "\n  n <- n\n  m <- m\n  \n  if(n\
    \ > m) {\n    n <- m\n    m <- n\n  }\n  \n  n <- n + 1\n  m <- m + 1\n  \n  if(n\
    \ >= m) {\n    n <- n - m\n    m <- m - 1\n  }\n  \n  n <- n / 2\n  m <- m / 2\n\
    \  \n  if(n >= m) {\n    n <- n - m\n    m <- m - 1\n  }\n  \n  n <- sprintf('0b%b',\
    \ n)\n  m <- sprintf('0b%b', m)\n  \n  return(paste(n, m, sep = ''))\n}\n</cell>\n\
    <cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(10, 20)\n</cell>\n<cell>\n\
    rounded_avg(20, 33)\n</cell>\n<cell>\nrounded_avg(100, 200)\n</cell>\n<cell>\n\
    rounded_avg(100, 200)\n</cell>\n<cell>\nrounded_avg(100, 200)\n</cell>\n<cell>\n\
    rounded_avg(100, 200)\n</cell>\n<cell>\nrounded_avg(100, 200)\n</cell>\n<cell>\n\
    rounded_avg(100, 200)\n</cell>\n<cell>\nrounded_avg(100, 200)\n</cell>\n<cell>\n\
    rounded_avg(100, 200)\n</cell>\n<cell>\nrounded_avg(100, 200)\n</cell>\n<cell>\n\
    rounded_avg(100, 200)\n</cell>\n<cell>\nrounded_avg(100, 200)\n</cell>\n<cell>\n\
    rounded_avg(100, 200)\n</cell>\n<cell>\nrounded_avg(100, 200)\n</cell>\n<cell>\n\
    rounded_avg(100, 200)\n</cell>\n<cell>\nrounded_avg(100, 200)\n</cell>\n<cell>\n\
    rounded_avg(100, 200)\n</cell>\n<cell>\nrounded_avg(100, 200)\n</cell>\n<cell>\n\
    rounded_avg(100, 200)\n</cell>\n<cell>\nrounded_avg(100, 200)\n</cell>\n<cell>\n\
    rounded_avg(100, 200)\n</cell>\n<cell>\nrounded_avg(100, 200)\n</cell>\n<cell>\n\
    rounded_", "\n  n <- n\n  m <- m\n  \n  if(n <= m) return(as.character(round(n/m,\
    \ 0)))\n  \n  return(as.character(round(n/m, 0)))\n}\n", "\n  n <- n\n  m <- m\n\
    \  n <- ifelse(n < m, n, m)\n  n <- ifelse(n < 10, paste0(\"0\", n), paste0(n,\
    \ \"\"))\n  m <- ifelse(m < 10, paste0(\"0\", m), paste0(m, \"\"))\n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  n <- ifelse(n > m, -1, n)\n  m <- ifelse(m > m, -1, m)\n\
    \  n <- paste0(n, m)\n  n <- ifelse(n >= 2^31 - 1, -1, as.character(n)) # convert\
    \ to binary\n  n <- paste0(\"0b\", n)\n  return(n)\n}\n</code>\n<|/ a dscore=1\
    \ |>\n<| a tags=r,rounding,binary |>\n<code>\nrounded_avg <- function(n, m) {\n\
    \  n <- n\n  m <- m\n  n <- ifelse(n < m, n, m)\n  n <- ifelse(n < 10, paste0(\"\
    0\", n), paste0(n, \"\"))\n  m <- ifelse(m < 10, paste0(\"0\", m), paste0(m, \"\
    \"))\n  n <- as.integer(n)\n  m <- as.integer(m)\n  n <- ifelse(n > m, -1, n)\n\
    \  m <- ifelse(m > m, -1, m)\n  n <- paste0(n, m)\n  n <- ifelse(n >= 2^31 - 1,\
    \ -1, as.character(n)) # convert to binary\n  n <- paste0(\"0b\", n)\n  return(n)\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| a dscore=0 |>\n<code>\nrounded_avg <- function(n,\
    \ m) {\n  n <- n\n  m <- m\n  n <- ifelse(n < m, n, m)\n  n <- ifelse(n < 10,\
    \ paste0(\"0\", n), paste0(n, \"\"))\n  m <- ifelse(m < 10, paste0(\"0\", m),\
    \ paste0(m, \"\"))\n  n <- as.integer(n)\n  m <- as.integer(m)\n  n <- ifelse(n\
    \ > m, -1, n)\n  m <- ifelse(m > m, -1, m)\n  n <- paste0(n, m)\n  n <- ifelse(n\
    \ >= 2^31 - 1, -1, as.character(n)) # convert to binary\n  n <- paste0(\"0b\"\
    , n)\n  return(n)\n}\n</code>\n<|/ a tags=r,rounding,binary |>\n<|", "\n  n <-\
    \ as.integer(n)\n  m <- as.integer(m)\n  \n  if(n > m) {\n    stop(\"n must be\
    \ less than m\")\n  }\n  \n  n <- n - 1\n  m <- m - 1\n  \n  if(n <= 0) {\n  \
    \  return(-1L)\n  }\n  \n  return(as.integer(sprintf(\"%b\", round(n / m))))\n\
    }\n", "\n  n <- as.integer(n)\n  m <- as.integer(m)\n  if(n == m) return(as.character(n))\n\
    \  if(n == m) return(-1)\n  if(n == m) return(as.character(n))\n  if(n == m) return(-1)\n\
    \  if(n == m) return(-1)\n  if(n == m) return(-1)\n  if(n == m) return(-1)\n \
    \ if(n == m) return(-1)\n  if(n == m) return(-1)\n  if(n == m) return(-1)\n  if(n\
    \ == m) return(-1)\n  if(n == m) return(-1)\n  if(n == m) return(-1)\n  if(n ==\
    \ m) return(-1)\n  if(n == m) return(-1)\n  if(n == m) return(-1)\n  if(n == m)\
    \ return(-1)\n  if(n == m) return(-1)\n  if(n == m) return(-1)\n  if(n == m) return(-1)\n\
    \  if(n == m) return(-1)\n  if(n == m) return(-1)\n  if(n == m) return(-1)\n \
    \ if(n == m) return(-1)\n  if(n == m) return(-1)\n  if(n == m) return(-1)\n  if(n\
    \ == m) return(-1)\n  if(n == m) return(-1)\n  if(n == m) return(-1)\n  if(n ==\
    \ m) return(-1)\n  if(n == m) return(-1)\n  if(n == m) return(-1)\n  if(n == m)\
    \ return(-1)\n  if(n == m) return(-1)\n  if(n == m) return(-1)\n  if(n == m) return(-1)\n\
    \  if(n == m) return(-1)\n  if(n == m) return(-1)\n  if(n == m) return(-1)\n \
    \ if(n == m) return(-1)\n  if(n == m) return(-1)\n  if(n == m) return(-1)\n  if(n\
    \ == m) return(-1)\n  if(n == m) return(-1)\n  if(n == m) return(-1)\n  if(n ==\
    \ m) return(-1)\n  if(n == m) return(-1)\n  if(n == m) return(-1)\n  if(n == m)\
    \ return(-1)\n  if(n == m) return(-1)\n  if(n == m) return(-1)\n  if(n == m) return(-1)\n\
    \  if(n == m) return(-1)\n  if(n == m) return(-1)\n  ", "\n  n <- as.integer(n)\n\
    \  m <- as.integer(m)\n  if (n <= m) {\n    n <- n + 1\n  }\n  n <- n - (n %%\
    \ m)\n  n <- n + (m %% n)\n  n <- n + (m %% n)\n  n <- n + (m %% n)\n  n <- n\
    \ + (m %% n)\n  n <- n + (m %% n)\n  n <- n + (m %% n)\n  n <- n + (m %% n)\n\
    \  n <- n + (m %% n)\n  n <- n + (m %% n)\n  n <- n + (m %% n)\n  n <- n + (m\
    \ %% n)\n  n <- n + (m %% n)\n  n <- n + (m %% n)\n  n <- n + (m %% n)\n  n <-\
    \ n + (m %% n)\n  n <- n + (m %% n)\n  n <- n + (m %% n)\n  n <- n + (m %% n)\n\
    \  n <- n + (m %% n)\n  n <- n + (m %% n)\n  n <- n + (m %% n)\n  n <- n + (m\
    \ %% n)\n  n <- n + (m %% n)\n  n <- n + (m %% n)\n  n <- n + (m %% n)\n  n <-\
    \ n + (m %% n)\n  n <- n + (m %% n)\n  n <- n + (m %% n)\n  n <- n + (m %% n)\n\
    \  n <- n + (m %% n)\n  n <- n + (m %% n)\n  n <- n + (m %% n)\n  n <- n + (m\
    \ %% n)\n  n <- n + (m %% n)\n  n <- n + (m %% n)\n  n <- n + (m %% n)\n  n <-\
    \ n + (m %% n)\n  n <- n + (m %% n)\n  n <- n + (m %% n)\n  n <- n + (m %% n)\n\
    \  n <- n + (m %% n)\n  n <- n + (m %% n)\n  n <- n + (m %% n)\n  n <- n + (m\
    \ %% n)\n  n <- n + (m %% n)\n  n <- n + (m %% n)\n  n <- n + (m %% n)\n  n <-\
    \ n + (m %% n)\n  n <- n + (m %% n)\n  n <- n + (m %% n)\n  n <- n + (m %% n)\n\
    \  n <- n + (m %% n)\n  n <- n + (", "\n  n <- as.integer(n)\n  m <- as.integer(m)\n\
    \  \n  if(n > m) return(-1)\n  \n  return(paste0(round(n / (m - n), 2), \"b\"\
    , round(m / (m - n), 2)))\n}\n", "\n  n <- n\n  m <- m\n  \n  if(n > m) {\n  \
    \  n <- m\n  }\n  \n  n <- n + 1\n  m <- m + 1\n  \n  n <- n / 2\n  m <- m / 2\n\
    \  \n  n <- as.integer(binom(n, m))\n  m <- as.integer(binom(m, n))\n  \n  n <-\
    \ paste0(formatC(as.integer(n), width = 2, format = \"d\", flag = \"0\"), collapse\
    \ = \"\")\n  m <- paste0(formatC(as.integer(m), width = 2, format = \"d\", flag\
    \ = \"0\"), collapse = \"\")\n  \n  return(paste0(formatC(as.integer(n), width\
    \ = 2, format = \"d\", flag = \"0\"), collapse = \"\"))\n}\n</cell>\n<cell>\n\
    rounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 10)\n</cell>\n<cell>\nrounded_avg(7,\
    \ 20)\n</cell>\n<cell>\nrounded_avg(7, 33)\n</cell>\n<cell>\nrounded_avg(7, 100)\n\
    </cell>\n<cell>\nrounded_avg(7, 1000)\n</cell>\n<cell>\nrounded_avg(7, 10000)\n\
    </cell>\n<cell>\nrounded_avg(7, 100000)\n</cell>\n<cell>\nrounded_avg(7, 1000000)\n\
    </cell>\n<cell>\nrounded_avg(7, 10000000)\n</cell>\n<cell>\nrounded_avg(7, 100000000)\n\
    </cell>\n<cell>\nrounded_avg(7, 1000000000)\n</cell>\n<cell>\nrounded_avg(7, 10000000000)\n\
    </cell>\n<cell>\nrounded_avg(7, 100000000000)\n</cell>\n<cell>\nrounded_avg(7,\
    \ 1000000000000)\n</cell>\n<cell>\nrounded_avg(7, 1000000000001)\n</cell>\n<cell>\n\
    rounded_avg(7, 1000000000002)\n</cell>\n<cell>\nrounded_avg(7, 1000000000003)\n\
    </cell>\n<cell>\nrounded_avg(7, 1000000000004)\n</cell>\n<cell>\nrounded_avg(7,\
    \ 1000000000005)\n</cell>\n<cell>\nrounded_avg(7, 1000000000006)", "\n  n <- n\n\
    \  m <- m\n  \n  if(n > m) {\n    return(-1)\n  }\n  \n  n <- n + 1\n  m <- m\
    \ + 1\n  \n  return(paste0(round(n / (m - n) * 2, 0), collapse = \"\"))\n}\n",
  "\n  \n  if(n >= m) return(-1)\n  \n  n <- n\n  m <- m\n  \n  n <- n + 1\n  m <-\
    \ m + 1\n  \n  n <- n / 2\n  m <- m / 2\n  \n  n <- sprintf('%b', n)\n  m <- sprintf('%b',\
    \ m)\n  \n  n <- n[-length(n)]\n  m <- m[-length(m)] \n  \n  return(paste0(n,\
    \ m))\n}\n", "\n  if(n > m) return(-1) # if n is greater than m, return -1\n \
    \ \n  n <- as.integer(n)\n  m <- as.integer(m)\n  \n  if(n <= m) return(as.character(floor(n/m)*m))\
    \ # if n is less than or equal to m, return n/m*m\n  \n  return(as.character(floor(n/m)*m)\
    \ + as.character(floor((n-m)/m)*m)) # if n is greater than m, return n/m*m + n/m*m\n\
    }\n", "\n  if(n > m) {\n    -1\n  } else {\n    paste0(as.character(round(n/m,\
    \ 0)), as.character(round(m/n, 0)))\n  }\n}\n</cell>\n<cell>\nrounded_avg(7, 5)\n\
    </cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n\
    <cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\n\
    rounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7,\
    \ 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n\
    </cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n\
    <cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\n\
    rounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7,\
    \ 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n\
    </cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n\
    <cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\n\
    rounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7,\
    \ 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n\
    </cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n\
    <cell>\nrounded_avg(7, 5)\n</cell>\n<cell>\nrounded_", "\n  if(n >= m) return(-1)\n\
    \  return(paste0(round(m/n), collapse=\"\"))\n}\n</cell>\n<cell>", "\n  n <- n\n\
    \  m <- m\n  \n  if(n > m) {\n    n <- m\n    m <- n\n  }\n  \n  n <- n + 1\n\
    \  m <- m + 1\n  \n  n <- as.integer(sprintf('%b', n))\n  m <- as.integer(sprintf('%b',\
    \ m))\n  \n  n <- as.integer(paste0(n, '0'))\n  m <- as.integer(paste0(m, '0'))\n\
    \  \n  n <- as.integer(paste0(n, '1'))\n  m <- as.integer(paste0(m, '1'))\n  \n\
    \  n <- as.integer(paste0(n, '0', m))\n  m <- as.integer(paste0(m, '0', n))\n\
    \  \n  n <- as.integer(paste0(n, '1', m))\n  m <- as.integer(paste0(m, '1', n))\n\
    \  \n  n <- as.integer(paste0(n, '0', m, '1'))\n  m <- as.integer(paste0(m, '0',\
    \ n, '1'))\n  \n  n <- as.integer(paste0(n, '1', m, '1'))\n  m <- as.integer(paste0(m,\
    \ '1', n, '1'))\n  \n  n <- as.integer(paste0(n, '0', m, '1', m, '1'))\n  m <-\
    \ as.integer(paste0(m, '0', n, '1', n, '1'))\n  \n  n <- as.integer(paste0(n,\
    \ '1', m, '1', m, '1'))\n  m <- as.integer(paste0(m, '1', n, '1', n, '1'))\n \
    \ \n  n <- as.integer(paste0(n, '0', m, '1', m, '1', m, '1'))\n  m <- as.integer(paste0(m,\
    \ '0', n, '1', n, '1', n, '1'))\n  \n  n <- as.integer(paste0(n, '1', m, '1',\
    \ m, '1', m, '1'))\n  m <- as.integer(paste0(m, '1', n, '1', n, '1', n, '1'))\n\
    \  \n  n <- as.integer(paste0(n, '0', m, '1', m, '1', m, '1', m, '1'))\n  m <-\
    \ as.integer(paste0(m, '0', n, '1', n, '1', n, '1', n, '1'))\n  \n  n <- as.integer(paste0(n,\
    \ '1', m, '1', m, '1', m, '1', m", "\n  n <- n\n  m <- m\n  \n  if(n > m) {\n\
    \    n <- m\n    m <- n\n  }\n  \n  n <- n + 1\n  m <- m + 1\n  \n  n <- as.integer(format(round(n/2,\
    \ 0L), width = 2, format = \"b\"))\n  m <- as.integer(format(round(m/2, 0L), width\
    \ = 2, format = \"b\"))\n  \n  if(n >= m) {\n    n <- -1\n  }\n  \n  return(paste0(\"\
    0b\", n))\n}\n</cell>\n<cell>\nrounded_avg(7, 5)\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes in two integers n and m and returns the number of\
    \ times n appears in m (including n and m).\n\n\n</text>\n<cell>", "\n  n <- n\n\
    \  m <- m\n  \n  if(n > m) {\n    n <- m\n  }\n  \n  n <- n + 1\n  m <- m + 1\n\
    \  \n  if(n <= m) {\n    n <- 0\n  }\n  \n  n <- paste0(\"0b\", n)\n  m <- paste0(\"\
    0b\", m)\n  \n  n <- n[-length(n)]\n  m <- m[-length(m)] \n  \n  n <- paste0(n,\
    \ m)\n  \n  n <- n[-length(n)]\n  \n  n <- paste0(n, \"0\")\n  \n  n <- n[-length(n)]\n\
    \  \n  n <- paste0(n, \"1\")\n  \n  n <- n[-length(n)]\n  \n  n <- paste0(n, \"\
    0\")\n  \n  n <- n[-length(n)]\n  \n  n <- paste0(n, \"1\")\n  \n  n <- n[-length(n)]\n\
    \  \n  n <- paste0(n, \"0\")\n  \n  n <- n[-length(n)]\n  \n  n <- paste0(n, \"\
    1\")\n  \n  n <- n[-length(n)]\n  \n  n <- paste0(n, \"0\")\n  \n  n <- n[-length(n)]\n\
    \  \n  n <- paste0(n, \"1\")\n  \n  n <- n[-length(n)]\n  \n  n <- paste0(n, \"\
    0\")\n  \n  n <- n[-length(n)]\n  \n  n <- paste0(n, \"1\")\n  \n  n <- n[-length(n)]\n\
    \  \n  n <- paste0(n, \"0\")\n  \n  n <- n[-length(n)]\n  \n  n <- paste0(n, \"\
    1\")\n  \n  n <- n[-length(n)]\n  \n  n <- paste0(n, \"0\")\n  \n  n <- n[-length(n)]\n\
    \  \n  n <- paste0(n, \"1\")\n  \n  n <- n[-length(n)]\n  \n  n <- paste0(n, \"\
    0\")\n  \n  n <- n[-length(n)]\n  \n  n <- paste0(n, \"1\")\n  \n  n <- n[-length(n)]\n\
    \  \n  n <- paste0(n, \"0\")\n  \n  n <- n[-length(n)]\n  \n  n <- paste0(n, \"\
    1\")\n  \n  n <- n[-length(n)]", "\n  n <- n\n  m <- m\n  n <- ifelse(n < m, n,\
    \ m)\n  n <- ifelse(n < 1, -1, n)\n  n <- ifelse(n > m, -1, n)\n  n <- ifelse(n\
    \ > 0, sprintf('0b%b', n), -1)\n  m <- ifelse(m < 0, -1, m)\n  m <- ifelse(m >\
    \ 0, sprintf('0b%b', m), -1)\n  return(paste(n, m, sep=\"\"))\n}\n</code>\n<|/\
    \ a dscore=0 |>\n<| a tags=r |>\nHere's a solution using base R:\n<code>\nrounded_avg\
    \ <- function(n, m) {\n  n <- n\n  m <- m\n  n <- ifelse(n < m, n, m)\n  n <-\
    \ ifelse(n < 1, -1, n)\n  n <- ifelse(n > m, -1, n)\n  n <- ifelse(n > 0, sprintf('0b%b',\
    \ n), -1)\n  m <- ifelse(m < 0, -1, m)\n  m <- ifelse(m > 0, sprintf('0b%b', m),\
    \ -1)\n  return(paste(n, m, sep=\"\"))\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=r\
    \ |>\nHere's a solution using dplyr and stringr:\n<code>\nlibrary(dplyr)\nlibrary(stringr)\n\
    \nrounded_avg <- function(n, m) {\n  n <- n\n  m <- m\n  n <- ifelse(n < m, n,\
    \ m)\n  n <- ifelse(n < 1, -1, n)\n  n <- ifelse(n > m, -1, n)\n  n <- ifelse(n\
    \ > 0, sprintf('0b%b', n), -1)\n  m <- ifelse(m < 0, -1, m)\n  m <- ifelse(m >\
    \ 0, sprintf('0b%b', m), -1)\n  return(paste(n, m, sep=\"\"))\n}\n\ndf <- data.frame(n\
    \ = c(1:10), m = c(10:1))\n\ndf %>% \n  mutate(\n    n = ifelse(n < m, n, m),\n\
    \    n = ifelse(n < 1, -1, n),\n    n = ifelse(n > m, -1, n),\n    n = ifelse(n\
    \ > 0, sprintf('0b%b', n), -1),\n    m = ifelse(m < 0, -1, m),\n    m = ifelse(m\
    \ > 0, sprintf('0b%b', m), -1),\n    rounded_avg = str_pad(rounded_avg(n, m),\
    \ width = 2, pad = '0')\n  )\n</code>"]
stop_tokens:
- "\n#"
- "\n```"

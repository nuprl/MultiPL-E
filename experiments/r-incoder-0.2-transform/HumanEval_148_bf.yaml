name: HumanEval_148_bf
language: r
prompt: "# There are eight planets in our solar system: the closerst to the Sun \n\
  # is Mercury, the next one is Venus, then Earth, Mars, Jupiter, Saturn, \n# Uranus,\
  \ Neptune.\n# Write a function that takes two planet names as strings planet1 and\
  \ planet2. \n# The function should return a tuple containing all planets whose orbits\
  \ are \n# located between the orbit of planet1 and the orbit of planet2, sorted\
  \ by \n# the proximity to the sun. \n# The function should return an empty tuple\
  \ if planet1 or planet2\n# are not correct planet names. \n# Examples\n# >>> bf('Jupiter',\
  \ 'Neptune')\n# list('Saturn', 'Uranus')\n# >>> bf('Earth', 'Mercury')\n# 'Venus'\n\
  # >>> bf('Mercury', 'Uranus')\n# list('Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn')\n\
  bf <- function(planet1, planet2) {"
tests: "test_humaneval <- function() {\ncandidate <- bf\n    if(!identical(candidate('Jupiter',\
  \ 'Neptune'), list('Saturn', 'Uranus'))){quit('no', 1)}\n    if(!identical(candidate('Earth',\
  \ 'Mercury'), list('Venus'))){quit('no', 1)}\n    if(!identical(candidate('Mercury',\
  \ 'Uranus'), list('Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn'))){quit('no', 1)}\n\
  \    if(!identical(candidate('Neptune', 'Venus'), list('Earth', 'Mars', 'Jupiter',\
  \ 'Saturn', 'Uranus'))){quit('no', 1)}\n    if(!identical(candidate('Earth', 'Earth'),\
  \ list())){quit('no', 1)}\n    if(!identical(candidate('Mars', 'Earth'), list())){quit('no',\
  \ 1)}\n    if(!identical(candidate('Jupiter', 'Makemake'), list())){quit('no', 1)}\n\
  }\ntest_humaneval()"
completions: []
stop_tokens:
- "\n#"
- "\n```"

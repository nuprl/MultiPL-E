language: go_test.go
name: HumanEval_151_double_the_difference
results:
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int = 0\n    for _, v := range lst {\n        if v%2 != 0\
    \ {\n            sum += v*v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp4ou7hgrd_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmp4ou7hgrd_test.go:15:13: invalid operation: sum += v * v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int = 0\n    for _, num := range lst {\n        if num%2\
    \ == 1 {\n            sum += num * num\n        }\n    }\n    return sum\n}\n\n\
    func TestDouble_The_Difference(t *testing.T) {\n  candidate := double_the_difference\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]float64{}), expected: 0 },\n\
    \     { actual: candidate([]float64{5.0, 4.0}), expected: 25 },\n     { actual:\
    \ candidate([]float64{0.1, 0.2, 0.3}), expected: 0 },\n     { actual: candidate([]float64{-10.0,\
    \ -20.0, -30.0}), expected: 0 },\n     { actual: candidate([]float64{-1.0, -2.0,\
    \ 8.0}), expected: 0 },\n     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected:\
    \ 34 },\n     { actual: candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0,\
    \ 3.0, 5.0, 7.0, 9.0}), expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp3gm_hoq5_test.go:14:12: invalid operation: operator % not defined on num
    (variable of type float64)

    /tmp/tmp3gm_hoq5_test.go:15:13: invalid operation: sum += num * num (mismatched
    types int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, num := range lst {\n        if num%2 == 1 {\n\
    \            sum += num * num\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp4bh3jf3t_test.go:14:12: invalid operation: operator % not defined on num
    (variable of type float64)

    /tmp/tmp4bh3jf3t_test.go:15:13: invalid operation: sum += num * num (mismatched
    types int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int = 0\n    for _, v := range lst {\n        if v%2 == 1\
    \ {\n            sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpn_ir8gr3_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpn_ir8gr3_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    if len(lst) == 0 {\n        return 0\n    }\n    sum := 0\n    for\
    \ _, v := range lst {\n        if v%2 == 1 {\n            sum += v\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t *testing.T) {\n\
    \  candidate := double_the_difference\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]float64{}),\
    \ expected: 0 },\n     { actual: candidate([]float64{5.0, 4.0}), expected: 25\
    \ },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}), expected: 0 },\n   \
    \  { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected: 0 },\n     {\
    \ actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n     { actual:\
    \ candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual: candidate([]float64{-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}), expected: 165 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp5r1na0vr_test.go:17:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmp5r1na0vr_test.go:18:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    if len(lst) == 0 {\n        return 0\n    }\n    sum := 0\n    for\
    \ _, num := range lst {\n        if num > 0 {\n            sum += num * num\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t *testing.T)\
    \ {\n  candidate := double_the_difference\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmplsnxo5gc_test.go:18:13: invalid operation: sum += num * num (mismatched
    types int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    if len(lst) == 0 {\n        return 0\n    }\n    sum := 0\n    for\
    \ _, v := range lst {\n        if v%2 == 1 {\n            sum += v\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t *testing.T) {\n\
    \  candidate := double_the_difference\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]float64{}),\
    \ expected: 0 },\n     { actual: candidate([]float64{5.0, 4.0}), expected: 25\
    \ },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}), expected: 0 },\n   \
    \  { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected: 0 },\n     {\
    \ actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n     { actual:\
    \ candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual: candidate([]float64{-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}), expected: 165 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp5r1na0vr_test.go:17:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmp5r1na0vr_test.go:18:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int = 0\n    for _, v := range lst {\n        if v%2 == 1\
    \ {\n            sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpn_ir8gr3_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpn_ir8gr3_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int\n    for _, v := range lst {\n        if v%2 == 1 {\n\
    \            sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp049z_td2_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmp049z_td2_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int\n    for _, v := range lst {\n        if v%2 == 1 {\n\
    \            sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp049z_td2_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmp049z_td2_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int = 0\n    for _, v := range lst {\n        if v%2 == 1\
    \ {\n            sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpn_ir8gr3_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpn_ir8gr3_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int = 0\n    for _, v := range lst {\n        if v%2 == 1\
    \ {\n            sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpn_ir8gr3_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpn_ir8gr3_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int = 0\n    for _, num := range lst {\n        if num >\
    \ 0 {\n            sum += num * num\n        }\n    }\n    return sum\n}\n\nfunc\
    \ TestDouble_The_Difference(t *testing.T) {\n  candidate := double_the_difference\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]float64{}), expected: 0 },\n\
    \     { actual: candidate([]float64{5.0, 4.0}), expected: 25 },\n     { actual:\
    \ candidate([]float64{0.1, 0.2, 0.3}), expected: 0 },\n     { actual: candidate([]float64{-10.0,\
    \ -20.0, -30.0}), expected: 0 },\n     { actual: candidate([]float64{-1.0, -2.0,\
    \ 8.0}), expected: 0 },\n     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected:\
    \ 34 },\n     { actual: candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0,\
    \ 3.0, 5.0, 7.0, 9.0}), expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpy4wcthwl_test.go:15:13: invalid operation: sum += num * num (mismatched
    types int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int = 0\n    for _, v := range lst {\n        if v%2 == 1\
    \ {\n            sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpn_ir8gr3_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpn_ir8gr3_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int = 0\n    for _, num := range lst {\n        if num >\
    \ 0 {\n            if num%2 != 0 {\n                sum += num * num\n       \
    \     }\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpp6rd_ahp_test.go:15:16: invalid operation: operator % not defined on num
    (variable of type float64)

    /tmp/tmpp6rd_ahp_test.go:16:17: invalid operation: sum += num * num (mismatched
    types int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int = 0\n    for _, v := range lst {\n        if v%2 == 1\
    \ {\n            sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpn_ir8gr3_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpn_ir8gr3_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int = 0\n    for _, v := range lst {\n        if v%2 == 1\
    \ {\n            sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpn_ir8gr3_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpn_ir8gr3_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int = 0\n    for _, v := range lst {\n        if v%2 == 1\
    \ {\n            sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpn_ir8gr3_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpn_ir8gr3_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    if len(lst) == 0 {\n        return 0\n    }\n    sum := 0\n    for\
    \ _, v := range lst {\n        if v%2 == 1 {\n            sum += v\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t *testing.T) {\n\
    \  candidate := double_the_difference\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]float64{}),\
    \ expected: 0 },\n     { actual: candidate([]float64{5.0, 4.0}), expected: 25\
    \ },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}), expected: 0 },\n   \
    \  { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected: 0 },\n     {\
    \ actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n     { actual:\
    \ candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual: candidate([]float64{-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}), expected: 165 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp5r1na0vr_test.go:17:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmp5r1na0vr_test.go:18:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int = 0\n    for _, v := range lst {\n        if v%2 == 1\
    \ {\n            sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpn_ir8gr3_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpn_ir8gr3_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 != 0 {\n  \
    \          sum += v*v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp6ku_jhbp_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmp6ku_jhbp_test.go:15:13: invalid operation: sum += v * v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    if len(lst) == 0 {\n        return 0\n    }\n    sum := 0\n    for\
    \ _, v := range lst {\n        if v%2 != 0 {\n            sum += v\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t *testing.T) {\n\
    \  candidate := double_the_difference\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]float64{}),\
    \ expected: 0 },\n     { actual: candidate([]float64{5.0, 4.0}), expected: 25\
    \ },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}), expected: 0 },\n   \
    \  { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected: 0 },\n     {\
    \ actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n     { actual:\
    \ candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual: candidate([]float64{-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}), expected: 165 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpmxi993d1_test.go:17:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpmxi993d1_test.go:18:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, num := range lst {\n        if num%2 == 1 {\n\
    \            sum += num * num\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp4bh3jf3t_test.go:14:12: invalid operation: operator % not defined on num
    (variable of type float64)

    /tmp/tmp4bh3jf3t_test.go:15:13: invalid operation: sum += num * num (mismatched
    types int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 != 0 {\n  \
    \          sum += v*v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp6ku_jhbp_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmp6ku_jhbp_test.go:15:13: invalid operation: sum += v * v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int\n    for _, v := range lst {\n        if v%2 == 1 {\n\
    \            sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp049z_td2_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmp049z_td2_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    if len(lst) == 0 {\n        return 0\n    }\n    sum := 0\n    for\
    \ _, v := range lst {\n        if v%2 == 1 {\n            sum += v\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t *testing.T) {\n\
    \  candidate := double_the_difference\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]float64{}),\
    \ expected: 0 },\n     { actual: candidate([]float64{5.0, 4.0}), expected: 25\
    \ },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}), expected: 0 },\n   \
    \  { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected: 0 },\n     {\
    \ actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n     { actual:\
    \ candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual: candidate([]float64{-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}), expected: 165 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp5r1na0vr_test.go:17:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmp5r1na0vr_test.go:18:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    if len(lst) == 0 {\n        return 0\n    }\n\n    sum := 0\n   \
    \ for _, v := range lst {\n        if v%2 == 1 {\n            sum += v\n     \
    \   }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t *testing.T)\
    \ {\n  candidate := double_the_difference\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpp0bprn0r_test.go:18:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpp0bprn0r_test.go:19:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    if len(lst) == 0 {\n        return 0\n    }\n    sum := 0\n    for\
    \ _, num := range lst {\n        if num%2 == 1 {\n            sum += num * num\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t *testing.T)\
    \ {\n  candidate := double_the_difference\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpk_q3otcg_test.go:17:12: invalid operation: operator % not defined on num
    (variable of type float64)

    /tmp/tmpk_q3otcg_test.go:18:13: invalid operation: sum += num * num (mismatched
    types int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int\n    for _, v := range lst {\n        if v%2 == 1 {\n\
    \            sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp049z_td2_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmp049z_td2_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    if len(lst) == 0 {\n        return 0\n    }\n\n    sum := 0\n   \
    \ for _, v := range lst {\n        if v%2 == 1 {\n            sum += v\n     \
    \   }\n    }\n\n    return sum\n}\n\nfunc TestDouble_The_Difference(t *testing.T)\
    \ {\n  candidate := double_the_difference\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaqg_h7ku_test.go:18:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpaqg_h7ku_test.go:19:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int = 0\n    for _, v := range lst {\n        if v%2 == 1\
    \ {\n            sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpn_ir8gr3_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpn_ir8gr3_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int\n    for _, v := range lst {\n        if v%2 == 1 {\n\
    \            sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp049z_td2_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmp049z_td2_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int = 0\n    for _, v := range lst {\n        if v%2 == 1\
    \ {\n            sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpn_ir8gr3_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpn_ir8gr3_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v*v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp4rvnp53l_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmp4rvnp53l_test.go:15:13: invalid operation: sum += v * v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 != 0 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpny250boz_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpny250boz_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int = 0\n    for _, v := range lst {\n        if v%2 != 0\
    \ {\n            sum += v*v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp4ou7hgrd_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmp4ou7hgrd_test.go:15:13: invalid operation: sum += v * v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int = 0\n    for _, v := range lst {\n        if v%2 == 1\
    \ {\n            sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpn_ir8gr3_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpn_ir8gr3_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int = 0\n    for _, v := range lst {\n        if v%2 == 1\
    \ {\n            sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpn_ir8gr3_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpn_ir8gr3_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    if len(lst) == 0 {\n        return 0\n    }\n    sum := 0\n    for\
    \ _, v := range lst {\n        if v%2 == 1 {\n            sum += v\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t *testing.T) {\n\
    \  candidate := double_the_difference\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]float64{}),\
    \ expected: 0 },\n     { actual: candidate([]float64{5.0, 4.0}), expected: 25\
    \ },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}), expected: 0 },\n   \
    \  { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected: 0 },\n     {\
    \ actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n     { actual:\
    \ candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual: candidate([]float64{-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}), expected: 165 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp5r1na0vr_test.go:17:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmp5r1na0vr_test.go:18:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, num := range lst {\n        if num > 0 {\n \
    \           if num%2 == 1 {\n                sum += num\n            }\n     \
    \   }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t *testing.T)\
    \ {\n  candidate := double_the_difference\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmppvfpdi8s_test.go:15:16: invalid operation: operator % not defined on num
    (variable of type float64)

    /tmp/tmppvfpdi8s_test.go:16:17: invalid operation: sum += num (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int\n    for _, v := range lst {\n        if v%2 == 1 {\n\
    \            sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp049z_td2_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmp049z_td2_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int = 0\n    for _, v := range lst {\n        if v%2 == 1\
    \ {\n            sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpn_ir8gr3_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpn_ir8gr3_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    if len(lst) == 0 {\n        return 0\n    }\n    sum := 0\n    for\
    \ _, number := range lst {\n        if number > 0 {\n            sum += number\
    \ * number\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpy2bxh5h__test.go:18:13: invalid operation: sum += number * number (mismatched
    types int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    if len(lst) == 0 {\n        return 0\n    }\n    sum := 0\n    for\
    \ _, v := range lst {\n        if v%2 != 0 {\n            sum += v*v\n       \
    \ }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t *testing.T)\
    \ {\n  candidate := double_the_difference\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpq621n6ty_test.go:17:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpq621n6ty_test.go:18:13: invalid operation: sum += v * v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int\n    for _, v := range lst {\n        if v%2 == 1 {\n\
    \            sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp049z_td2_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmp049z_td2_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    if len(lst) == 0 {\n        return 0\n    }\n    sum := 0\n    for\
    \ _, v := range lst {\n        if v%2 != 0 {\n            sum += v\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t *testing.T) {\n\
    \  candidate := double_the_difference\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]float64{}),\
    \ expected: 0 },\n     { actual: candidate([]float64{5.0, 4.0}), expected: 25\
    \ },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}), expected: 0 },\n   \
    \  { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected: 0 },\n     {\
    \ actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n     { actual:\
    \ candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual: candidate([]float64{-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}), expected: 165 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpmxi993d1_test.go:17:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpmxi993d1_test.go:18:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, num := range lst {\n        if num > 0 {\n \
    \           sum += num * num\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp5qm_04gj_test.go:15:13: invalid operation: sum += num * num (mismatched
    types int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, num := range lst {\n        if num > 0 {\n \
    \           if num%2 == 1 {\n                sum += num * num\n            }\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t *testing.T)\
    \ {\n  candidate := double_the_difference\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpxnsh_iuj_test.go:15:16: invalid operation: operator % not defined on num
    (variable of type float64)

    /tmp/tmpxnsh_iuj_test.go:16:17: invalid operation: sum += num * num (mismatched
    types int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, num := range lst {\n        if num > 0 {\n \
    \           if num%2 == 1 {\n                sum += num * num\n            }\n\
    \        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t *testing.T)\
    \ {\n  candidate := double_the_difference\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpxnsh_iuj_test.go:15:16: invalid operation: operator % not defined on num
    (variable of type float64)

    /tmp/tmpxnsh_iuj_test.go:16:17: invalid operation: sum += num * num (mismatched
    types int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    if len(lst) == 0 {\n        return 0\n    }\n    sum := 0\n    for\
    \ _, v := range lst {\n        if v%2 == 1 {\n            sum += v\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t *testing.T) {\n\
    \  candidate := double_the_difference\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]float64{}),\
    \ expected: 0 },\n     { actual: candidate([]float64{5.0, 4.0}), expected: 25\
    \ },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}), expected: 0 },\n   \
    \  { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected: 0 },\n     {\
    \ actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n     { actual:\
    \ candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual: candidate([]float64{-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}), expected: 165 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp5r1na0vr_test.go:17:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmp5r1na0vr_test.go:18:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int = 0\n    for _, v := range lst {\n        if v%2 == 1\
    \ {\n            sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpn_ir8gr3_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpn_ir8gr3_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int = 0\n    for _, v := range lst {\n        if v%2 == 1\
    \ {\n            sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpn_ir8gr3_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpn_ir8gr3_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, num := range lst {\n        if num > 0 {\n \
    \           sum += num * num\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp5qm_04gj_test.go:15:13: invalid operation: sum += num * num (mismatched
    types int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int = 0\n    for _, v := range lst {\n        if v%2 == 1\
    \ {\n            sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpn_ir8gr3_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpn_ir8gr3_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int = 0\n    for _, v := range lst {\n        if v%2 == 1\
    \ {\n            sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpn_ir8gr3_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpn_ir8gr3_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    if len(lst) == 0 {\n        return 0\n    }\n    sum := 0\n    for\
    \ _, v := range lst {\n        if v%2 == 1 {\n            sum += v\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t *testing.T) {\n\
    \  candidate := double_the_difference\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]float64{}),\
    \ expected: 0 },\n     { actual: candidate([]float64{5.0, 4.0}), expected: 25\
    \ },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}), expected: 0 },\n   \
    \  { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected: 0 },\n     {\
    \ actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n     { actual:\
    \ candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual: candidate([]float64{-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}), expected: 165 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp5r1na0vr_test.go:17:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmp5r1na0vr_test.go:18:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int = 0\n    for _, v := range lst {\n        if v%2 == 1\
    \ {\n            sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpn_ir8gr3_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpn_ir8gr3_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 != 0 {\n  \
    \          sum += v*v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp6ku_jhbp_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmp6ku_jhbp_test.go:15:13: invalid operation: sum += v * v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int\n    for _, v := range lst {\n        if v%2 == 1 {\n\
    \            sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp049z_td2_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmp049z_td2_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v*v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp4rvnp53l_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmp4rvnp53l_test.go:15:13: invalid operation: sum += v * v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int\n    for _, num := range lst {\n        if num > 0 {\n\
    \            sum += num * num\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpoo3dzff2_test.go:15:13: invalid operation: sum += num * num (mismatched
    types int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int = 0\n    for _, v := range lst {\n        if v%2 == 1\
    \ {\n            sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpn_ir8gr3_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpn_ir8gr3_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int = 0\n    for _, v := range lst {\n        if v%2 == 1\
    \ {\n            sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpn_ir8gr3_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpn_ir8gr3_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    if len(lst) == 0 {\n        return 0\n    }\n    sum := 0\n    for\
    \ _, v := range lst {\n        if v%2 == 1 {\n            sum += v\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t *testing.T) {\n\
    \  candidate := double_the_difference\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]float64{}),\
    \ expected: 0 },\n     { actual: candidate([]float64{5.0, 4.0}), expected: 25\
    \ },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}), expected: 0 },\n   \
    \  { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected: 0 },\n     {\
    \ actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n     { actual:\
    \ candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual: candidate([]float64{-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}), expected: 165 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp5r1na0vr_test.go:17:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmp5r1na0vr_test.go:18:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int = 0\n    for _, v := range lst {\n        if v%2 == 1\
    \ {\n            sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpn_ir8gr3_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpn_ir8gr3_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    if len(lst) == 0 {\n        return 0\n    }\n\n    sum := 0\n   \
    \ for _, v := range lst {\n        if v%2 != 0 {\n            sum += v\n     \
    \   }\n    }\n\n    return sum\n}\n\nfunc TestDouble_The_Difference(t *testing.T)\
    \ {\n  candidate := double_the_difference\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp5ucvuk_a_test.go:18:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmp5ucvuk_a_test.go:19:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073515
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int\n    for _, v := range lst {\n        if v%2 == 1 {\n\
    \            sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp049z_td2_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmp049z_td2_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int = 0\n    for _, v := range lst {\n        if v%2 == 1\
    \ {\n            sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpn_ir8gr3_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpn_ir8gr3_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int = 0\n    for _, v := range lst {\n        if v%2 == 1\
    \ {\n            sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpn_ir8gr3_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpn_ir8gr3_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    if len(lst) == 0 {\n        return 0\n    }\n\n    sum := 0\n   \
    \ for _, v := range lst {\n        if v%2 == 1 {\n            sum += v\n     \
    \   }\n    }\n\n    return sum\n}\n\nfunc TestDouble_The_Difference(t *testing.T)\
    \ {\n  candidate := double_the_difference\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaqg_h7ku_test.go:18:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpaqg_h7ku_test.go:19:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int\n    for _, v := range lst {\n        if v%2 == 1 {\n\
    \            sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp049z_td2_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmp049z_td2_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    if len(lst) == 0 {\n        return 0\n    }\n    sum := 0\n    for\
    \ _, v := range lst {\n        if v%2 == 1 {\n            sum += v\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t *testing.T) {\n\
    \  candidate := double_the_difference\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]float64{}),\
    \ expected: 0 },\n     { actual: candidate([]float64{5.0, 4.0}), expected: 25\
    \ },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}), expected: 0 },\n   \
    \  { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected: 0 },\n     {\
    \ actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n     { actual:\
    \ candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual: candidate([]float64{-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}), expected: 165 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp5r1na0vr_test.go:17:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmp5r1na0vr_test.go:18:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int = 0\n    for _, v := range lst {\n        if v%2 == 1\
    \ {\n            sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpn_ir8gr3_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpn_ir8gr3_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    if len(lst) == 0 {\n        return 0\n    }\n\n    sum := 0\n   \
    \ for _, v := range lst {\n        if v%2 != 0 {\n            sum += v\n     \
    \   }\n    }\n\n    return sum\n}\n\nfunc TestDouble_The_Difference(t *testing.T)\
    \ {\n  candidate := double_the_difference\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp5ucvuk_a_test.go:18:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmp5ucvuk_a_test.go:19:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073515
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int\n    for _, v := range lst {\n        if v%2 == 1 {\n\
    \            sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp049z_td2_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmp049z_td2_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    if len(lst) == 0 {\n        return 0\n    }\n\n    sum := 0\n   \
    \ for _, v := range lst {\n        if v%2 == 1 {\n            sum += v\n     \
    \   }\n    }\n\n    return sum\n}\n\nfunc TestDouble_The_Difference(t *testing.T)\
    \ {\n  candidate := double_the_difference\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaqg_h7ku_test.go:18:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpaqg_h7ku_test.go:19:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int\n    for _, num := range lst {\n        if num > 0 {\n\
    \            sum += num * num\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpoo3dzff2_test.go:15:13: invalid operation: sum += num * num (mismatched
    types int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int = 0\n    for _, v := range lst {\n        if v%2 == 1\
    \ {\n            sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpn_ir8gr3_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpn_ir8gr3_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int\n    for _, v := range lst {\n        if v%2 == 1 {\n\
    \            sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp049z_td2_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmp049z_td2_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int = 0\n    for _, v := range lst {\n        if v%2 == 1\
    \ {\n            sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpn_ir8gr3_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpn_ir8gr3_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    if len(lst) == 0 {\n        return 0\n    }\n    sum := 0\n    for\
    \ _, v := range lst {\n        if v%2 != 0 {\n            sum += v*v\n       \
    \ }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t *testing.T)\
    \ {\n  candidate := double_the_difference\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpq621n6ty_test.go:17:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpq621n6ty_test.go:18:13: invalid operation: sum += v * v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v*v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp4rvnp53l_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmp4rvnp53l_test.go:15:13: invalid operation: sum += v * v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int = 0\n    for _, num := range lst {\n        if num%2\
    \ == 1 {\n            sum += num * num\n        }\n    }\n    return sum\n}\n\n\
    func TestDouble_The_Difference(t *testing.T) {\n  candidate := double_the_difference\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]float64{}), expected: 0 },\n\
    \     { actual: candidate([]float64{5.0, 4.0}), expected: 25 },\n     { actual:\
    \ candidate([]float64{0.1, 0.2, 0.3}), expected: 0 },\n     { actual: candidate([]float64{-10.0,\
    \ -20.0, -30.0}), expected: 0 },\n     { actual: candidate([]float64{-1.0, -2.0,\
    \ 8.0}), expected: 0 },\n     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected:\
    \ 34 },\n     { actual: candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0,\
    \ 3.0, 5.0, 7.0, 9.0}), expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp3gm_hoq5_test.go:14:12: invalid operation: operator % not defined on num
    (variable of type float64)

    /tmp/tmp3gm_hoq5_test.go:15:13: invalid operation: sum += num * num (mismatched
    types int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    if len(lst) == 0 {\n        return 0\n    }\n    sum := 0\n    for\
    \ _, v := range lst {\n        if v%2 == 1 {\n            sum += v\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t *testing.T) {\n\
    \  candidate := double_the_difference\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]float64{}),\
    \ expected: 0 },\n     { actual: candidate([]float64{5.0, 4.0}), expected: 25\
    \ },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}), expected: 0 },\n   \
    \  { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected: 0 },\n     {\
    \ actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n     { actual:\
    \ candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual: candidate([]float64{-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}), expected: 165 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp5r1na0vr_test.go:17:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmp5r1na0vr_test.go:18:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int\n    for _, v := range lst {\n        if v%2 == 1 {\n\
    \            sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp049z_td2_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmp049z_td2_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int\n    for _, v := range lst {\n        if v%2 == 1 {\n\
    \            sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp049z_td2_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmp049z_td2_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int = 0\n    for _, v := range lst {\n        if v%2 == 1\
    \ {\n            sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpn_ir8gr3_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpn_ir8gr3_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int = 0\n    for _, v := range lst {\n        if v%2 == 1\
    \ {\n            sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpn_ir8gr3_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpn_ir8gr3_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int = 0\n    for _, v := range lst {\n        if v%2 == 1\
    \ {\n            sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpn_ir8gr3_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpn_ir8gr3_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int = 0\n    for _, v := range lst {\n        if v%2 == 1\
    \ {\n            sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpn_ir8gr3_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpn_ir8gr3_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int = 0\n    for _, v := range lst {\n        if v%2 == 1\
    \ {\n            sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpn_ir8gr3_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpn_ir8gr3_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int = 0\n    for _, num := range lst {\n        if num >\
    \ 0 {\n            sum += num * num\n        }\n    }\n    return sum\n}\n\nfunc\
    \ TestDouble_The_Difference(t *testing.T) {\n  candidate := double_the_difference\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]float64{}), expected: 0 },\n\
    \     { actual: candidate([]float64{5.0, 4.0}), expected: 25 },\n     { actual:\
    \ candidate([]float64{0.1, 0.2, 0.3}), expected: 0 },\n     { actual: candidate([]float64{-10.0,\
    \ -20.0, -30.0}), expected: 0 },\n     { actual: candidate([]float64{-1.0, -2.0,\
    \ 8.0}), expected: 0 },\n     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected:\
    \ 34 },\n     { actual: candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0,\
    \ 3.0, 5.0, 7.0, 9.0}), expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpy4wcthwl_test.go:15:13: invalid operation: sum += num * num (mismatched
    types int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int = 0\n    for _, v := range lst {\n        if v%2 == 1\
    \ {\n            sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpn_ir8gr3_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpn_ir8gr3_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int = 0\n    for _, num := range lst {\n        if num >\
    \ 0 {\n            sum += num * num\n        }\n    }\n    return sum\n}\n\nfunc\
    \ TestDouble_The_Difference(t *testing.T) {\n  candidate := double_the_difference\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]float64{}), expected: 0 },\n\
    \     { actual: candidate([]float64{5.0, 4.0}), expected: 25 },\n     { actual:\
    \ candidate([]float64{0.1, 0.2, 0.3}), expected: 0 },\n     { actual: candidate([]float64{-10.0,\
    \ -20.0, -30.0}), expected: 0 },\n     { actual: candidate([]float64{-1.0, -2.0,\
    \ 8.0}), expected: 0 },\n     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected:\
    \ 34 },\n     { actual: candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0,\
    \ 3.0, 5.0, 7.0, 9.0}), expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpy4wcthwl_test.go:15:13: invalid operation: sum += num * num (mismatched
    types int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, num := range lst {\n        if num > 0 {\n \
    \           sum += num * num\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp5qm_04gj_test.go:15:13: invalid operation: sum += num * num (mismatched
    types int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, num := range lst {\n        if num > 0 {\n \
    \           sum += num * num\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp5qm_04gj_test.go:15:13: invalid operation: sum += num * num (mismatched
    types int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int\n    for _, v := range lst {\n        if v%2 == 1 {\n\
    \            sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp049z_td2_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmp049z_td2_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int\n    for _, v := range lst {\n        if v%2 == 1 {\n\
    \            sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp049z_td2_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmp049z_td2_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int = 0\n    for _, v := range lst {\n        if v%2 == 1\
    \ {\n            sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpn_ir8gr3_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpn_ir8gr3_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int = 0\n    for _, v := range lst {\n        if v%2 == 1\
    \ {\n            sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpn_ir8gr3_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpn_ir8gr3_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int = 0\n    for _, v := range lst {\n        if v%2 == 1\
    \ {\n            sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpn_ir8gr3_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpn_ir8gr3_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int = 0\n    for _, num := range lst {\n        if num%2\
    \ == 1 {\n            sum += num * num\n        }\n    }\n    return sum\n}\n\n\
    func TestDouble_The_Difference(t *testing.T) {\n  candidate := double_the_difference\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]float64{}), expected: 0 },\n\
    \     { actual: candidate([]float64{5.0, 4.0}), expected: 25 },\n     { actual:\
    \ candidate([]float64{0.1, 0.2, 0.3}), expected: 0 },\n     { actual: candidate([]float64{-10.0,\
    \ -20.0, -30.0}), expected: 0 },\n     { actual: candidate([]float64{-1.0, -2.0,\
    \ 8.0}), expected: 0 },\n     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected:\
    \ 34 },\n     { actual: candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0,\
    \ 3.0, 5.0, 7.0, 9.0}), expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp3gm_hoq5_test.go:14:12: invalid operation: operator % not defined on num
    (variable of type float64)

    /tmp/tmp3gm_hoq5_test.go:15:13: invalid operation: sum += num * num (mismatched
    types int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int\n    for _, v := range lst {\n        if v%2 == 1 {\n\
    \            sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp049z_td2_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmp049z_td2_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    if len(lst) == 0 {\n        return 0\n    }\n    sum := 0\n    for\
    \ _, v := range lst {\n        if v%2 == 1 {\n            sum += v\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t *testing.T) {\n\
    \  candidate := double_the_difference\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]float64{}),\
    \ expected: 0 },\n     { actual: candidate([]float64{5.0, 4.0}), expected: 25\
    \ },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}), expected: 0 },\n   \
    \  { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected: 0 },\n     {\
    \ actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n     { actual:\
    \ candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual: candidate([]float64{-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}), expected: 165 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp5r1na0vr_test.go:17:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmp5r1na0vr_test.go:18:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    if len(lst) == 0 {\n        return 0\n    }\n    sum := 0\n    for\
    \ _, v := range lst {\n        if v%2 == 1 {\n            sum += v\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t *testing.T) {\n\
    \  candidate := double_the_difference\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]float64{}),\
    \ expected: 0 },\n     { actual: candidate([]float64{5.0, 4.0}), expected: 25\
    \ },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}), expected: 0 },\n   \
    \  { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected: 0 },\n     {\
    \ actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n     { actual:\
    \ candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual: candidate([]float64{-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}), expected: 165 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp5r1na0vr_test.go:17:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmp5r1na0vr_test.go:18:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int = 0\n    for _, v := range lst {\n        if v%2 == 1\
    \ {\n            sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpn_ir8gr3_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpn_ir8gr3_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 != 0 {\n  \
    \          sum += v*v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp6ku_jhbp_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmp6ku_jhbp_test.go:15:13: invalid operation: sum += v * v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int = 0\n    for _, v := range lst {\n        if v%2 != 0\
    \ {\n            sum += v*v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp4ou7hgrd_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmp4ou7hgrd_test.go:15:13: invalid operation: sum += v * v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    if len(lst) == 0 {\n        return 0\n    }\n    sum := 0\n    for\
    \ _, v := range lst {\n        if v%2 == 1 {\n            sum += v\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t *testing.T) {\n\
    \  candidate := double_the_difference\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]float64{}),\
    \ expected: 0 },\n     { actual: candidate([]float64{5.0, 4.0}), expected: 25\
    \ },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}), expected: 0 },\n   \
    \  { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected: 0 },\n     {\
    \ actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n     { actual:\
    \ candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual: candidate([]float64{-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}), expected: 165 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp5r1na0vr_test.go:17:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmp5r1na0vr_test.go:18:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    if len(lst) == 0 {\n        return 0\n    }\n    sum := 0\n    for\
    \ _, v := range lst {\n        if v%2 == 1 {\n            sum += v\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t *testing.T) {\n\
    \  candidate := double_the_difference\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]float64{}),\
    \ expected: 0 },\n     { actual: candidate([]float64{5.0, 4.0}), expected: 25\
    \ },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}), expected: 0 },\n   \
    \  { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected: 0 },\n     {\
    \ actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n     { actual:\
    \ candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual: candidate([]float64{-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}), expected: 165 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp5r1na0vr_test.go:17:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmp5r1na0vr_test.go:18:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int = 0\n    for _, v := range lst {\n        if v%2 == 1\
    \ {\n            sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpn_ir8gr3_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpn_ir8gr3_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int = 0\n    for _, v := range lst {\n        if v%2 == 1\
    \ {\n            sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpn_ir8gr3_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpn_ir8gr3_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    if len(lst) == 0 {\n        return 0\n    }\n    sum := 0\n    for\
    \ _, number := range lst {\n        if number > 0 && number % 2 == 1 {\n     \
    \       sum += number * number\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp1o2pu92t_test.go:17:26: invalid operation: operator % not defined on number
    (variable of type float64)

    /tmp/tmp1o2pu92t_test.go:18:13: invalid operation: sum += number * number (mismatched
    types int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073515
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int = 0\n    for _, v := range lst {\n        if v%2 == 1\
    \ {\n            sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpn_ir8gr3_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpn_ir8gr3_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    if len(lst) == 0 {\n        return 0\n    }\n\n    sum := 0\n   \
    \ for _, v := range lst {\n        if v%2 == 1 {\n            sum += v\n     \
    \   }\n    }\n\n    return sum\n}\n\nfunc TestDouble_The_Difference(t *testing.T)\
    \ {\n  candidate := double_the_difference\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaqg_h7ku_test.go:18:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpaqg_h7ku_test.go:19:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int = 0\n    for _, v := range lst {\n        if v%2 == 1\
    \ {\n            sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpn_ir8gr3_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpn_ir8gr3_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    if len(lst) == 0 {\n        return 0\n    }\n    sum := 0\n    for\
    \ _, v := range lst {\n        if v%2 == 1 {\n            sum += v\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t *testing.T) {\n\
    \  candidate := double_the_difference\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]float64{}),\
    \ expected: 0 },\n     { actual: candidate([]float64{5.0, 4.0}), expected: 25\
    \ },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}), expected: 0 },\n   \
    \  { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected: 0 },\n     {\
    \ actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n     { actual:\
    \ candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual: candidate([]float64{-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}), expected: 165 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp5r1na0vr_test.go:17:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmp5r1na0vr_test.go:18:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int = 0\n    for _, num := range lst {\n        if num >\
    \ 0 {\n            sum += num * num\n        }\n    }\n    return sum\n}\n\nfunc\
    \ TestDouble_The_Difference(t *testing.T) {\n  candidate := double_the_difference\n\
    \ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n\
    \   tests := []test{\n     { actual: candidate([]float64{}), expected: 0 },\n\
    \     { actual: candidate([]float64{5.0, 4.0}), expected: 25 },\n     { actual:\
    \ candidate([]float64{0.1, 0.2, 0.3}), expected: 0 },\n     { actual: candidate([]float64{-10.0,\
    \ -20.0, -30.0}), expected: 0 },\n     { actual: candidate([]float64{-1.0, -2.0,\
    \ 8.0}), expected: 0 },\n     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected:\
    \ 34 },\n     { actual: candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0,\
    \ 3.0, 5.0, 7.0, 9.0}), expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\
    \t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"\
    %v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected\
    \ '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpy4wcthwl_test.go:15:13: invalid operation: sum += num * num (mismatched
    types int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int = 0\n    for _, v := range lst {\n        if v%2 == 1\
    \ {\n            sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpn_ir8gr3_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpn_ir8gr3_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int\n    for _, v := range lst {\n        if v%2 == 1 {\n\
    \            sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp049z_td2_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmp049z_td2_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    if len(lst) == 0 {\n        return 0\n    }\n\n    sum := 0\n   \
    \ for _, v := range lst {\n        if v%2 == 1 {\n            sum += v\n     \
    \   }\n    }\n\n    return sum\n}\n\nfunc TestDouble_The_Difference(t *testing.T)\
    \ {\n  candidate := double_the_difference\n\ttype test struct {\n\t\tactual  \
    \ interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual:\
    \ candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpaqg_h7ku_test.go:18:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpaqg_h7ku_test.go:19:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    if len(lst) == 0 {\n        return 0\n    }\n    sum := 0\n    for\
    \ _, v := range lst {\n        if v%2 == 1 {\n            sum += v\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t *testing.T) {\n\
    \  candidate := double_the_difference\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]float64{}),\
    \ expected: 0 },\n     { actual: candidate([]float64{5.0, 4.0}), expected: 25\
    \ },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}), expected: 0 },\n   \
    \  { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected: 0 },\n     {\
    \ actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n     { actual:\
    \ candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual: candidate([]float64{-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}), expected: 165 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp5r1na0vr_test.go:17:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmp5r1na0vr_test.go:18:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, num := range lst {\n        if num%2 == 1 {\n\
    \            sum += num * num\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp4bh3jf3t_test.go:14:12: invalid operation: operator % not defined on num
    (variable of type float64)

    /tmp/tmp4bh3jf3t_test.go:15:13: invalid operation: sum += num * num (mismatched
    types int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    sum := 0\n    for _, v := range lst {\n        if v%2 == 1 {\n  \
    \          sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpafdfd2mc_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpafdfd2mc_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    if len(lst) == 0 {\n        return 0\n    }\n    sum := 0\n    for\
    \ _, v := range lst {\n        if v%2 == 1 {\n            sum += v\n        }\n\
    \    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t *testing.T) {\n\
    \  candidate := double_the_difference\n\ttype test struct {\n\t\tactual   interface{}\n\
    \t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]float64{}),\
    \ expected: 0 },\n     { actual: candidate([]float64{5.0, 4.0}), expected: 25\
    \ },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}), expected: 0 },\n   \
    \  { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected: 0 },\n     {\
    \ actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n     { actual:\
    \ candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual: candidate([]float64{-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}), expected: 165 },\n   }\n\n\
    \tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
    \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\"\
    , tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
    \t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmp5r1na0vr_test.go:17:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmp5r1na0vr_test.go:18:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514
- exit_code: 2
  program: "package double_the_difference_test\n\nimport (\n    \"testing\"\n    \"\
    fmt\"\n)\n\n// Given a list of numbers, return the sum of squares of the numbers\n\
    // in the list that are odd. Ignore numbers that are negative or not integers.\n\
    // If the input list is empty, return 0.\nfunc double_the_difference(lst []float64)\
    \ int {\n    var sum int = 0\n    for _, v := range lst {\n        if v%2 == 1\
    \ {\n            sum += v\n        }\n    }\n    return sum\n}\n\nfunc TestDouble_The_Difference(t\
    \ *testing.T) {\n  candidate := double_the_difference\n\ttype test struct {\n\t\
    \tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n \
    \    { actual: candidate([]float64{}), expected: 0 },\n     { actual: candidate([]float64{5.0,\
    \ 4.0}), expected: 25 },\n     { actual: candidate([]float64{0.1, 0.2, 0.3}),\
    \ expected: 0 },\n     { actual: candidate([]float64{-10.0, -20.0, -30.0}), expected:\
    \ 0 },\n     { actual: candidate([]float64{-1.0, -2.0, 8.0}), expected: 0 },\n\
    \     { actual: candidate([]float64{0.2, 3.0, 5.0}), expected: 34 },\n     { actual:\
    \ candidate([]float64{-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0}),\
    \ expected: 165 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"\
    test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual)\
    \ != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got\
    \ '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
  status: SyntaxError
  stderr: '# command-line-arguments_test [command-line-arguments.test]

    /tmp/tmpn_ir8gr3_test.go:14:12: invalid operation: operator % not defined on v
    (variable of type float64)

    /tmp/tmpn_ir8gr3_test.go:15:13: invalid operation: sum += v (mismatched types
    int and float64)

    '
  stdout: "FAIL\tcommand-line-arguments [build failed]\nFAIL\n"
  timestamp: 1660073514

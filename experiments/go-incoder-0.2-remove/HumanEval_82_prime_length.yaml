name: HumanEval_82_prime_length
language: go_test.go
prompt: "package prime_length_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
  // Write a function that takes a string and returns True if the string\n// length\
  \ is a prime number or False otherwise\n// Examples\nfunc prime_length(myString\
  \ string) bool {\n"
tests: "func TestPrime_Length(t *testing.T) {\n  candidate := prime_length\n\ttype\
  \ test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests\
  \ := []test{\n     { actual: candidate(\"Hello\"), expected: true },\n     { actual:\
  \ candidate(\"abcdcba\"), expected: true },\n     { actual: candidate(\"kittens\"\
  ), expected: true },\n     { actual: candidate(\"orange\"), expected: false },\n\
  \     { actual: candidate(\"wow\"), expected: true },\n     { actual: candidate(\"\
  world\"), expected: true },\n     { actual: candidate(\"MadaM\"), expected: true\
  \ },\n     { actual: candidate(\"Wow\"), expected: true },\n     { actual: candidate(\"\
  \"), expected: false },\n     { actual: candidate(\"HI\"), expected: true },\n \
  \    { actual: candidate(\"go\"), expected: true },\n     { actual: candidate(\"\
  gogo\"), expected: false },\n     { actual: candidate(\"aaaaaaaaaaaaaaa\"), expected:\
  \ false },\n     { actual: candidate(\"Madam\"), expected: true },\n     { actual:\
  \ candidate(\"M\"), expected: false },\n     { actual: candidate(\"0\"), expected:\
  \ false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num\
  \ % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
  %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
  \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
completions: ["    // Write your code here\n    return true\n}\n", "    // Write your\
    \ code here\n}\n", "    // Write your logic here\n}\n", "    // Write your code\
    \ here\n}\n", "    // Write your code here\n}\n", "    // Write your logic here\n\
    \    return true\n}\n", "    // Your code here\n}\n", "    // Write your code\
    \ here\n}\n", "    // Write your function here\n}\n", "    // Your code here\n\
    }\n", "    // Your code here\n}\n", "    // Write your function here\n}\n", " \
    \   // Your code here\n}\n", "    // Your code here\n}\n", "    // Your code here\n\
    }\n", "    // Write your logic here\n}\n", "    // Write your code here\n}\n",
  "    // Write your function here\n}\n", "    // Your code here\n}\n", "    // Your\
    \ code here\n}\n", "    // Your code here\n}\n", "    // Your code here\n}\n",
  "    // Your code here\n}\n", "    length := len(myString)\n    if length < 2 {\n\
    \        return false\n    }\n    for i := 2; i <= length/2; i++ {\n        if\
    \ myString[i] != myString[length-i] {\n            return false\n        }\n \
    \   }\n    return true\n}\n", "    // Your code here\n}\n", "    length := len(myString)\n\
    \    if length < 2 {\n        return false\n    }\n    for i := 2; i <= length/2;\
    \ i++ {\n        if myString[i] != myString[i/2] {\n            return false\n\
    \        }\n    }\n    return true\n}\n", "    // Your code here\n}\n", "    length\
    \ := len(myString)\n    if length < 2 {\n        return false\n    }\n    if length\
    \ == 2 || length == 3 {\n        return true\n    }\n    if length == 4 {\n  \
    \      return true\n    }\n    if length == 5 {\n        return true\n    }\n\
    \    if length == 6 {\n        return true\n    }\n    if length == 7 {\n    \
    \    return true\n    }\n    if length == 8 {\n        return true\n    }\n  \
    \  if length == 9 {\n        return true\n    }\n    if length == 10 {\n     \
    \   return true\n    }\n    if length == 11 {\n        return true\n    }\n  \
    \  if length == 12 {\n        return true\n    }\n    if length == 13 {\n    \
    \    return true\n    }\n    if length == 14 {\n        return true\n    }\n \
    \   if length == 15 {\n        return true\n    }\n    if length == 16 {\n   \
    \     return true\n    }\n    if length == 17 {\n        return true\n    }\n\
    \    if length == 18 {\n        return true\n    }\n    if length == 19 {\n  \
    \      return true\n    }\n    if length == 20 {\n        return true\n    }\n\
    \    if length == 21 {\n        return true\n    }\n    if length == 22 {\n  \
    \      return true\n    }\n    if length == 100 {\n        return true\n    }\n\
    \    if length == 200 {\n        return true\n    }\n    if length == 300 {\n\
    \        return true\n    }\n    if length == 400 {\n        return true\n   \
    \ }\n    if length == 500 {\n        return true\n    }\n    if length == 600\
    \ {\n        return true\n    }\n    if length == 700 {\n        return true\n\
    \    }\n    if length == 800 {\n        return true\n    }\n    if length == 900\
    \ {\n        return true\n    }\n    if length == 1000 {\n        return true\n\
    \    }\n    if length == 10000 {\n        return true\n    }\n    if length ==\
    \ 20000 {\n        return true\n    }\n    if length == 30000 {\n        return\
    \ true\n    }\n    if length == 40000 {\n        return true\n    }\n    if length\
    \ == 50000 {\n        return true\n    }\n    if length == 60000 {\n        return\
    \ true\n    }\n    if length == 70000 {\n        return true\n    }\n    if length\
    \ == 80000 {\n        return true\n    }\n    if length == 90000 {\n        return\
    \ true\n    }\n    if length == 100000 {\n        return true\n    }\n    if length\
    \ == 200000 {\n        return true\n    }\n    if length == 300000 {\n       \
    \ return true\n    }\n    if length == 400000 {\n        return true\n    }\n\
    \    if length == 500000 {\n        return true\n    }\n    if length == 600000\
    \ {\n        return true\n    }\n    if length == 700000 {\n        return true",
  "    // Your code here\n}\n", "    // Your code here\n}\n", "    // Your code here\n\
    }\n", "    // Your code here\n}\n", "    // Your code here\n}\n", "    // Your\
    \ code here\n}\n", "    // Your code here\n}\n", "    // Your code here\n}\n",
  "    // Write your code here\n}\n", "    // Your code here\n}\n", "    // Your code\
    \ here\n}\n", "    // Write your code here\n}\n", "    // Write your function\
    \ here\n}\n", "    // Write your function here\n}\n", "    // Your code here\n\
    }\n", "    // Write your code here\n}\n", "    // Write your code here\n}\n",
  "    // Your code here\n}\n", "    // Your code here\n}\n", "    // Your code here\n\
    }\n", "    length := len(myString)\n    if length < 2 {\n        return false\n\
    \    }\n    for i := 2; i <= length/2; i++ {\n        if myString[i] != myString[i/2]\
    \ {\n            return false\n        }\n    }\n    return true\n}\n", "    //\
    \ Write your code here\n}\n", "    // Your code here\n}\n", "    // Write your\
    \ code here\n}\n", "    // Your code here\n}\n", "    length := len(myString)\n\
    \    if length < 2 {\n        return false\n    }\n    for i := 2; i < length;\
    \ i++ {\n        if myString[i] != myString[i/2] {\n            return false\n\
    \        }\n    }\n    return true\n}\n", "    // Write your logic here\n    return\
    \ true\n}\n", "    // Your code here\n}\n", "    // Your code here\n}\n", "  \
    \  // Write your code here\n}\n", "    // Write your function here\n}\n", "  \
    \  // Your code here\n}\n", "    // Your code here\n}\n", "    // Your code here\n\
    }\n", "    // Your code here\n}\n", "    // Write your code here\n}\n", "    //\
    \ Your code here\n}\n", "    // Your code here\n}\n", "    // Your code here\n\
    }\n", "    // Write your function here\n}\n", "    // Write your code here\n}\n",
  "    // Your code here\n}\n", "    // Write your function here\n}\n", "    // Write\
    \ your code here\n}\n", "    // Your code here\n    return true\n}\n", "    //\
    \ Write your code here\n    return true\n}\n", "    // Write your code here\n\
    }\n", "    // Your code here\n}\n", "    // Your code here\n}\n", "    // Write\
    \ your code here\n    length := len(myString)\n    prime := true\n    for i :=\
    \ 2; i < length; i++ {\n        if myString[i] != myString[i/2] {\n          \
    \  prime = false\n            break\n        }\n    }\n    return prime\n}\n",
  "    length := len(myString)\n    if length < 2 {\n        return false\n    }\n\
    \    for i := 2; i <= length/2; i++ {\n        if myString[i] != myString[i/2]\
    \ {\n            return false\n        }\n    }\n    return true\n}\n", "    //\
    \ Your code here\n}\n", "    // Write your code here\n    length := len(myString)\n\
    \    if length < 2 {\n        return false\n    }\n    prime := true\n    for\
    \ i := 2; i <= length/2; i++ {\n        if myString[i] != myString[length-i] {\n\
    \            prime = false\n            break\n        }\n    }\n    return prime\n\
    }\n", "    // Your code here\n}\n", "    // Your code here\n}\n", "    // Write\
    \ your code here\n    length := len(myString)\n    prime := true\n    for i :=\
    \ 2; i < length; i++ {\n        if myString[i] != myString[length-1] {\n     \
    \       prime = false\n            break\n        }\n    }\n    return prime\n\
    }\n", "    // Write your code here\n}\n", "    // Your code here\n}\n", "    //\
    \ Your code here\n    return true\n}\n", "    // Your code here\n}\n", "    //\
    \ Write your code here\n    length := len(myString)\n    if length < 2 {\n   \
    \     return false\n    }\n    if length == 2 || length == 3 {\n        return\
    \ true\n    }\n    if length == 4 {\n        return true\n    }\n    if length\
    \ == 5 || length == 6 || length == 7 || length == 8 || length == 9 {\n       \
    \ return true\n    }\n    if length == 11 {\n        return true\n    }\n    if\
    \ length == 12 {\n        return true\n    }\n    if length == 13 {\n        return\
    \ true\n    }\n    if length == 14 {\n        return true\n    }\n    if length\
    \ == 15 {\n        return true\n    }\n    if length == 16 {\n        return true\n\
    \    }\n    if length == 17 {\n        return true\n    }\n    if length == 18\
    \ {\n        return true\n    }\n    if length == 19 {\n        return true\n\
    \    }\n    if length == 20 {\n        return true\n    }\n    if length == 21\
    \ {\n        return true\n    }\n    if length == 22 {\n        return true\n\
    \    }\n    if length == 23 {\n        return true\n    }\n    if length == 24\
    \ {\n        return true\n    }\n    if length == 25 {\n        return true\n\
    \    }\n    if length == 26 {\n        return true\n    }\n    if length == 27\
    \ {\n        return true\n    }\n    if length == 28 {\n        return true\n\
    \    }\n    if length == 29 {\n        return true\n    }\n    if length == 30\
    \ {\n        return true\n    }\n    if length == 31 {\n        return true\n\
    \    }\n    if length == 32 {\n        return true\n    }\n    if length == 33\
    \ {\n        return true\n    }\n    if length == 34 {\n        return true\n\
    \    }\n    if length == 35 {\n        return true\n    }\n    if length == 36\
    \ {\n        return true\n    }\n    if length == 37 {\n        return true\n\
    \    }\n    if length == 38 {\n        return true\n    }\n    if length == 39\
    \ {\n        return true\n    }\n    if length == 40 {\n        return true\n\
    \    }\n    if length == 41 {\n        return true\n    }\n    if length == 42\
    \ {\n        return true\n    }\n    if length == 43 {\n        return true\n\
    \    }\n    if length == 44 {\n        return true\n    }\n    if length == 45\
    \ {\n        return true\n    }\n    if length == 46 {\n        return true\n\
    \    }\n    if length == 47 {\n        return true\n    }\n    if length == 48\
    \ {\n        return true\n    }\n    if length == 49 {\n        return true\n\
    \    }\n    if length == 50 {\n        return true\n    }\n    if length == 51\
    \ {\n        return true\n    }\n    if length == 52 {\n        return true\n\
    \    }", "    // Your code here\n}\n", "    // Your code here\n}\n", "    // Write\
    \ your logic here\n}\n", "    // Your code here\n}\n", "    // Write your code\
    \ here\n}\n", "    // Write your code here\n    length := len(myString)\n    \n\
    \    if length < 2 {\n        return false\n    }\n    \n    for i := 2; i <=\
    \ length/2; i++ {\n        if myString[i] != myString[i/2] {\n            return\
    \ false\n        }\n    }\n    \n    return true\n}\n", "    // Your code here\n\
    }\n", "    length := len(myString)\n    if length < 2 {\n        return false\n\
    \    }\n    for i := 2; i <= length/2; i++ {\n        if myString[i] != myString[i/2]\
    \ {\n            return false\n        }\n    }\n    return true\n}\n", "    //\
    \ Your code here\n}\n", "    // Your code here\n}\n", "    // Your code here\n\
    }\n", "    // Write your function here\n}\n", "    // Your code here\n}\n", " \
    \   // Write your function here\n}\n", "    // Write your code here\n    length\
    \ := len(myString)\n    prime := true\n    for i := 2; i <= length/2; i++ {\n\
    \        if myString[i] != myString[length-i] {\n            prime = false\n \
    \           break\n        }\n    }\n    return prime\n}\n", "    // Your code\
    \ here\n}\n", "    // Your code here\n}\n", "    // Your code here\n}\n", "  \
    \  // Write your code here\n    length := len(myString)\n    prime := true\n \
    \   for i := 2; i < length; i++ {\n        if myString[i] != myString[i/2] {\n\
    \            prime = false\n            break\n        }\n    }\n    return prime\n\
    }\n", "    // Write your code here\n}\n", "    // Your code here\n}\n", "    //\
    \ Your code here\n}\n", "    // Write your function here\n}\n", "    // Write\
    \ your logic here\n}\n", "    // Write your code here\n    length := len(myString)\n\
    \    prime := true\n    for i := 2; i < length; i++ {\n        if myString[i]\
    \ != myString[length-1] {\n            if myString[i] != myString[length/2]{\n\
    \                prime = false\n            }\n        }\n    }\n    return prime\n\
    }\n", "    // Write your code here\n    return true\n}\n", "    // Write your\
    \ code here\n}\n", "    // Write your code here\n}\n", "    // Your code here\n\
    }\n", "    // Your code here\n}\n", "    // Your code here\n}\n", "    // Write\
    \ your function here\n}\n", "    // Your code here\n}\n", "    // Write your code\
    \ here\n    return true\n}\n", "    length := len(myString)\n    for i := 2; i\
    \ < length; i++ {\n        if myString[i] != myString[len(myString)-(i+1)] {\n\
    \            return false\n        }\n    }\n    return true\n}\n", "    // Your\
    \ code here\n}\n", "    // Your code here\n}\n", "    // Your code here\n}\n",
  "    // Your code here\n}\n", "    // Your code here\n}\n", "    // Your code here\n\
    }\n", "    // Write your code here\n}\n", "    length := len(myString)\n    prime\
    \ := true\n    for i := 2; i < length; i++ {\n        if myString[i] != myString[length-1]\
    \ {\n            if myString[i] != myString[length/2+i] {\n                prime\
    \ = false\n                break\n            }\n        }\n    }\n    return\
    \ prime\n}\n", "    // Write your function here\n}\n", "    // Your code here\n\
    }\n", "    // Your code here\n}\n", "    // Your code here\n}\n", "    // Your\
    \ code here\n}\n", "    // Your code here\n}\n", "    // Write your function here\n\
    }\n", "    // Your code here\n}\n", "    // Write your code here\n    length :=\
    \ len(myString)\n    prime := true\n    for i := 2; i < length; i++ {\n      \
    \  if myString[i] != 0 {\n            if myString[i] % i == 0 {\n            \
    \    prime = false\n            }\n        }\n    }\n    return prime\n}\n", " \
    \   // Your code here\n}\n", "    // Your code here\n}\n", "    // Write your\
    \ logic here\n}\n", "    // Your code here\n}\n", "    length := len(myString)\n\
    \    if length < 2 {\n        return false\n    }\n    for i := 2; i <= length;\
    \ i++ {\n        if myString[i] != myString[i/2] {\n            return false\n\
    \        }\n    }\n    return true\n}\n", "    // Write your function here\n}\n",
  "    // Your code here\n}\n", "    // Your code here\n}\n", "    // Write your code\
    \ here\n    length := len(myString)\n    for i := 2; i <= length/2; i++ {\n  \
    \      if myString[i] != myString[i/2] {\n            return false\n        }\n\
    \    }\n    return true\n}\n", "    // Your code here\n}\n", "    // Your code\
    \ here\n}\n", "    // Write your function here\n}\n", "    // Your code here\n\
    }\n", "    // Your code here\n}\n", "    // Your code here\n    return true\n\
    }\n", "    // Write your code here\n}\n", "    // Your code here\n}\n", "    //\
    \ Write your code here\n    length := len(myString)\n    for i := 2; i <= length/2;\
    \ i++ {\n        if myString[i] != myString[i/2] {\n            return false\n\
    \        }\n    }\n    return true\n}\n", "    // Your code here\n}\n", "    //\
    \ Your code here\n}\n", "    // Write your code here\n}\n", "    // Your code\
    \ here\n}\n", "    // Write your logic here\n    return true\n}\n", "    // Write\
    \ your function here\n}\n", "    // Your code here\n}\n", "    // Your code here\n\
    }\n", "    // Your code here\n}\n", "    length := len(myString)\n    if length\
    \ < 2 {\n        return false\n    }\n    for i := 2; i < length; i++ {\n    \
    \    if myString[i] != myString[i/2] {\n            return false\n        }\n\
    \    }\n    return true\n}\n", "    // Write your logic here\n}\n", "    // Write\
    \ your code here\n}\n", "    // Your code here\n}\n", "    // Your code here\n\
    }\n", "    // Write your code here\n}\n", "    // Write your code here\n}\n",
  "    // Your code here\n}\n", "    // Write your function here\n}\n", "    // Write\
    \ your code here\n}\n", "    // Your code here\n}\n", "    // Your code here\n\
    }\n", "    // Your code here\n    return true\n}\n", "    // Write your logic\
    \ here\n}\n", "    // Your code here\n}\n", "    // Write your function here\n\
    \    return true\n}\n", "    // Your code here\n}\n", "    // Write your code\
    \ here\n    length := len(myString)\n    prime := true\n    for i := 2; i <= length/2;\
    \ i++ {\n        if length%i == 0 {\n            prime = false\n        }\n  \
    \  }\n    return prime\n}\n", "    // Your code here\n}\n", "    // Your code\
    \ here\n}\n", "    // Write your function here\n}\n", "    // Write your function\
    \ here\n}\n", "    // Write your function here\n}\n", "    // Write your code\
    \ here\n}\n", "    // Write your code here\n}\n", "    // Write your code here\n\
    }\n", "    // Write your function here\n}\n", "    // Write your function here\n\
    }\n", "    // Your code here\n    return true\n}\n", "    // Your code here\n\
    }\n", "    // Your code here\n}\n", "    // Your code here\n}\n"]
stop_tokens:
- "\nfunc"
- struct
- "\n// "

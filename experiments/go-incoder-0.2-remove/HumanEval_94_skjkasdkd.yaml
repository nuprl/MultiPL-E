name: HumanEval_94_skjkasdkd
language: go_test.go
prompt: "package skjkasdkd_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n//\
  \ You are given a list of integers.\n// You need to find the largest prime value\
  \ and return the sum of its digits.\n// Examples:\nfunc skjkasdkd(lst []int) int\
  \ {\n"
tests: "func TestSkjkasdkd(t *testing.T) {\n  candidate := skjkasdkd\n\ttype test\
  \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests :=\
  \ []test{\n     { actual: candidate([]int{0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181,\
  \ 32, 4, 32, 3, 2, 32, 324, 4, 3}), expected: 10 },\n     { actual: candidate([]int{1,\
  \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), expected: 25 },\n   \
  \  { actual: candidate([]int{1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32,\
  \ 30, 1, 9, 3}), expected: 13 },\n     { actual: candidate([]int{0, 724, 32, 71,\
  \ 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), expected: 11 },\n     { actual: candidate([]int{0,\
  \ 81, 12, 3, 1, 21}), expected: 3 },\n     { actual: candidate([]int{0, 8, 1, 2,\
  \ 1, 7}), expected: 7 },\n     { actual: candidate([]int{8191}), expected: 19 },\n\
  \     { actual: candidate([]int{8191, 123456, 127, 7}), expected: 19 },\n     {\
  \ actual: candidate([]int{127, 97, 8192}), expected: 10 },\n   }\n\n\tfor i, tc\
  \ := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T)\
  \ {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected)\
  \ {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\
  \t}\n\t\t})\n\t}\n}\n"
completions: ["    max := 0\n    for _, v := range lst {\n        if v > max {\n \
    \           max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst\
    \ {\n        if v%max == 0 {\n            sum += int(v / max)\n        }\n   \
    \ }\n    return sum\n}\n", "    max := 0\n    max := lst[0]\n    for _, v := range\
    \ lst {\n        if v > max {\n            max = v\n        }\n    }\n    sum\
    \ := 0\n    for _, v := range lst {\n        if v%max == 0 {\n            sum\
    \ += int(v / max)\n        }\n    }\n    return sum\n}\n", "    max := 0\n   \
    \ for _, v := range lst {\n        if v > max {\n            max = v\n       \
    \ }\n    }\n    return max\n}\n", "    var max int\n    var sum int\n    for _,\
    \ v := range lst {\n        if v > max {\n            max = v\n        }\n   \
    \ }\n    for _, v := range lst {\n        if v%max == 0 {\n            sum +=\
    \ v%max\n        }\n    }\n    return sum\n}\n", "    var maxPrime int\n    for\
    \ _, v := range lst {\n        if v%maxPrime == 0 {\n            maxPrime = v\n\
    \        }\n    }\n    return maxPrime\n}\n", "    max := 0\n    max := lst[0]\n\
    \    for _, v := range lst {\n        if v > max {\n            max = v\n    \
    \    }\n    }\n    sum := 0\n    for _, v := range lst {\n        if v == max\
    \ {\n            sum += int(v)\n        }\n    }\n    return sum\n}\n", "    max\
    \ := 0\n    for _, v := range lst {\n        if v > max {\n            max = v\n\
    \        }\n    }\n    sum := 0\n    for _, v := range lst {\n        if v ==\
    \ max {\n            sum += int(v)\n        }\n    }\n    return sum\n}\n", " \
    \   max := 0\n    for _, v := range lst {\n        if v > max {\n            max\
    \ = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n        if\
    \ v%max == 0 {\n            sum += int(v / max)\n        }\n    }\n    return\
    \ sum\n}\n", "    var maxPrime int\n    var sumDigits int\n    for _, v := range\
    \ lst {\n        if v > maxPrime {\n            maxPrime = v\n        }\n    }\n\
    \    for _, v := range lst {\n        if v%maxPrime == 0 {\n            sumDigits\
    \ += v%10\n        }\n    }\n    return sumDigits\n}\n", "    max := 0\n    for\
    \ _, v := range lst {\n        if v > max {\n            max = v\n        }\n\
    \    }\n    sum := 0\n    for _, v := range lst {\n        if v == max {\n   \
    \         sum += int(v)\n        }\n    }\n    return sum\n}\n", "    max := 0\n\
    \    for _, v := range lst {\n        if v > max {\n            max = v\n    \
    \    }\n    }\n    sum := 0\n    for _, v := range lst {\n        if v%max ==\
    \ 0 {\n            sum += int(v / max)\n        }\n    }\n    return sum\n}\n",
  "    max := 0\n    for _, v := range lst {\n        if v > max {\n            max\
    \ = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n        if\
    \ v%max == 0 {\n            sum += v%max\n        }\n    }\n    return sum\n}\n",
  "    max := 0\n    max := lst[0]\n    for _, v := range lst {\n        if v > max\
    \ {\n            max = v\n        }\n    }\n    return max\n}\n", "    max :=\
    \ 0\n    for _, v := range lst {\n        if v > max {\n            max = v\n\
    \        }\n    }\n    return max\n}\n", "    max := 0\n    for _, v := range\
    \ lst {\n        if v > max {\n            max = v\n        }\n    }\n    sum\
    \ := 0\n    for _, v := range lst {\n        if v == max {\n            sum +=\
    \ int(v)\n        }\n    }\n    return sum\n}\n", "    var maxPrime int = 0\n\
    \    var sum int = 0\n    for _, v := range lst {\n        if v > maxPrime {\n\
    \            maxPrime = v\n        }\n    }\n    for _, v := range lst {\n   \
    \     if v%maxPrime == 0 {\n            sum += v%maxPrime\n        }\n    }\n\
    \    return sum\n}\n", "    var maxPrime int\n    var sumDigits int\n    for _,\
    \ v := range lst {\n        if v%2 == 0 {\n            maxPrime = maxPrime + 1\n\
    \        }\n        for i := 3; i <= v/2; i++ {\n            if v%i == 0 {\n \
    \               maxPrime = maxPrime + 1\n                break\n            }\n\
    \        }\n        sumDigits = sumDigits + int(v%10)\n    }\n    return sumDigits\n\
    }\n", "    max := 0\n    max := lst[0]\n    for _, v := range lst {\n        if\
    \ v > max {\n            max = v\n        }\n    }\n    for _, v := range lst\
    \ {\n        if v%max == 0 {\n            max += v\n        }\n    }\n    return\
    \ max\n}\n", "    max := 0\n    for _, v := range lst {\n        if v > max {\n\
    \            max = v\n        }\n    }\n    return max\n}\n", "    max := 0\n\
    \    for _, v := range lst {\n        if v > max {\n            max = v\n    \
    \    }\n    }\n    return max\n}\n", "    max := 0\n    for _, v := range lst\
    \ {\n        if v > max {\n            max = v\n        }\n    }\n    sum := 0\n\
    \    for _, v := range lst {\n        if v == max {\n            sum += int(v)\n\
    \        }\n    }\n    return sum\n}\n", "    max := 0\n    max := lst[0]\n  \
    \  for _, v := range lst {\n        if v > max {\n            max = v\n      \
    \  }\n    }\n    for _, v := range lst {\n        if v%max == 0 {\n          \
    \  max += v\n        }\n    }\n    return max\n}\n", "    max := 0\n    for _,\
    \ v := range lst {\n        if v > max {\n            max = v\n        }\n   \
    \ }\n    return max\n}\n", "    max := 0\n    max := lst[0]\n    for _, v := range\
    \ lst {\n        if v > max {\n            max = v\n        }\n    }\n    return\
    \ max\n}\n", "    var max int\n    var sum int\n    for _, v := range lst {\n\
    \        if v > max {\n            max = v\n        }\n    }\n    for _, v :=\
    \ range lst {\n        if v%max == 0 {\n            sum += int(v / max)\n    \
    \    }\n    }\n    return sum\n}\n", "    max := 0\n    for _, v := range lst\
    \ {\n        if v > max {\n            max = v\n        }\n    }\n    sum := 0\n\
    \    for _, v := range lst {\n        if v == max {\n            sum += int(v)\n\
    \        }\n    }\n    return sum\n}\n", "    max := 0\n    for _, v := range\
    \ lst {\n        if v > max {\n            max = v\n        }\n    }\n    sum\
    \ := 0\n    for _, v := range lst {\n        if v%max == 0 {\n            sum\
    \ += int(v / max)\n        }\n    }\n    return sum\n}\n", "    var maxPrime int\n\
    \    var sum int\n    for _, v := range lst {\n        if v%2 == 0 {\n       \
    \     continue\n        }\n        for i := 3; i <= v/2; i++ {\n            if\
    \ v%i == 0 {\n                break\n            }\n        }\n        if i ==\
    \ v/2 {\n            maxPrime = v\n            sum += v\n        }\n    }\n  \
    \  return sum\n}\n", "    var maxPrime int = 0\n    for _, v := range lst {\n\
    \        if v%maxPrime == 0 {\n            maxPrime = v\n        }\n    }\n  \
    \  return maxPrime\n}\n", "    max := 0\n    for _, v := range lst {\n       \
    \ if v > max {\n            max = v\n        }\n    }\n    sum := 0\n    for _,\
    \ v := range lst {\n        if v == max {\n            sum += int(v)\n       \
    \ }\n    }\n    return sum\n}\n", "    max := 0\n    for _, v := range lst {\n\
    \        if v > max {\n            max = v\n        }\n    }\n    for _, v :=\
    \ range lst {\n        if v%max == 0 {\n            max += v\n        }\n    }\n\
    \    return max\n}\n", "    max := 0\n    sum := 0\n    for _, v := range lst\
    \ {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v\
    \ := range lst {\n        if v%max == 0 {\n            sum += v\n        }\n \
    \   }\n    return sum\n}\n", "    max := 0\n    for _, v := range lst {\n    \
    \    if v > max {\n            max = v\n        }\n    }\n    sum := 0\n    for\
    \ _, v := range lst {\n        if v == max {\n            sum += int(v)\n    \
    \    }\n    }\n    return sum\n}\n", "    max := 0\n    max := lst[0]\n    for\
    \ _, v := range lst {\n        if v > max {\n            max = v\n        }\n\
    \    }\n    sum := 0\n    for _, v := range lst {\n        if v%max == 0 {\n \
    \           sum += v\n        }\n    }\n    return sum\n}\n", "    max := 0\n\
    \    max := lst[0]\n    for _, v := range lst {\n        if v > max {\n      \
    \      max = v\n        }\n    }\n    return max\n}\n", "    max := 0\n    for\
    \ _, v := range lst {\n        if v > max {\n            max = v\n        }\n\
    \    }\n    return max\n}\n", "    max := 0\n    for _, v := range lst {\n   \
    \     if v > max {\n            max = v\n        }\n    }\n    sum := 0\n    for\
    \ _, v := range lst {\n        if v == max {\n            sum += int(v)\n    \
    \    }\n    }\n    return sum\n}\n", "    max := 0\n    for _, v := range lst\
    \ {\n        if v > max {\n            max = v\n        }\n    }\n    sum := 0\n\
    \    for _, v := range lst {\n        if v%max == 0 {\n            sum += v%max\n\
    \        }\n    }\n    return sum\n}\n", "    max := 0\n    sum := 0\n    for\
    \ _, v := range lst {\n        if v > max {\n            max = v\n        }\n\
    \    }\n    for _, v := range lst {\n        if v == max {\n            sum +=\
    \ int(v)\n        }\n    }\n    return sum\n}\n", "    max := 0\n    for _, v\
    \ := range lst {\n        if v > max {\n            max = v\n        }\n    }\n\
    \    return max\n}\n", "    max := 0\n    for _, v := range lst {\n        if\
    \ v > max {\n            max = v\n        }\n    }\n    sum := 0\n    for _, v\
    \ := range lst {\n        if v%max == 0 {\n            sum += int(v / max)\n \
    \       }\n    }\n    return sum\n}\n", "    max := 0\n    for _, v := range lst\
    \ {\n        if v > max {\n            max = v\n        }\n    }\n    sum := 0\n\
    \    for _, v := range lst {\n        if v%max == 0 {\n            sum += v%max\n\
    \        }\n    }\n    return sum\n}\n", "    max := 0\n    for _, v := range\
    \ lst {\n        if v > max {\n            max = v\n        }\n    }\n    for\
    \ _, v := range lst {\n        if v%max == 0 {\n            max += v\n       \
    \ }\n    }\n    return max\n}\n", "    max := 0\n    for _, v := range lst {\n\
    \        if v > max {\n            max = v\n        }\n    }\n    return max\n\
    }\n", "    var maxPrime int\n    for _, v := range lst {\n        if v > maxPrime\
    \ {\n            maxPrime = v\n        }\n    }\n    sum := 0\n    for _, v :=\
    \ range lst {\n        if v == maxPrime {\n            sum += int(v)\n       \
    \ }\n    }\n    return sum\n}\n", "    max := 0\n    for _, v := range lst {\n\
    \        if v > max {\n            max = v\n        }\n    }\n    sum := 0\n \
    \   for _, v := range lst {\n        if v%max == 0 {\n            sum += int(v\
    \ / max)\n        }\n    }\n    return sum\n}\n", "    max := 0\n    for _, v\
    \ := range lst {\n        if v > max {\n            max = v\n        }\n    }\n\
    \    sum := 0\n    for _, v := range lst {\n        if v == max {\n          \
    \  sum += int(v)\n        }\n    }\n    return sum\n}\n", "    max := 0\n    max\
    \ := lst[0]\n    for _, v := range lst {\n        if v > max {\n            max\
    \ = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n        if\
    \ v == max {\n            sum += int(v)\n        }\n    }\n    return sum\n}\n",
  "    var maxPrime int = 0\n    for _, v := range lst {\n        if v%maxPrime ==\
    \ 0 {\n            maxPrime = v\n        }\n    }\n    return maxPrime\n}\n",
  "    max := 0\n    sum := 0\n    for _, v := range lst {\n        if v > max {\n\
    \            max = v\n        }\n    }\n    for _, v := range lst {\n        if\
    \ v%max == 0 {\n            sum += int(v / max)\n        }\n    }\n    return\
    \ sum\n}\n", "    max := 0\n    for _, v := range lst {\n        if v > max {\n\
    \            max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst\
    \ {\n        if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n", "    max := 0\n    for _, v := range lst {\n        if v > max {\n\
    \            max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst\
    \ {\n        if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n", "    max := 0\n    sum := 0\n    for _, v := range lst {\n      \
    \  if v > max {\n            max = v\n        }\n    }\n    for _, v := range\
    \ lst {\n        if v%max == 0 {\n            sum += v%max\n        }\n    }\n\
    \    return sum\n}\n", "    max := 0\n    for _, v := range lst {\n        if\
    \ v > max {\n            max = v\n        }\n    }\n    sum := 0\n    for _, v\
    \ := range lst {\n        if v == max {\n            continue\n        }\n   \
    \     if v%max == 0 {\n            sum += v%max\n        }\n    }\n    return\
    \ sum\n}\n", "    max := 0\n    for _, v := range lst {\n        if v > max {\n\
    \            max = v\n        }\n    }\n    return max\n}\n", "    max := 0\n\
    \    for _, v := range lst {\n        if v > max {\n            max = v\n    \
    \    }\n    }\n    return max\n}\n", "    max := 0\n    for _, v := range lst\
    \ {\n        if v > max {\n            max = v\n        }\n    }\n    sum := 0\n\
    \    for _, v := range lst {\n        if v%max == 0 {\n            sum += v\n\
    \        }\n    }\n    return sum\n}\n", "    max := 0\n    prime := 2\n    for\
    \ _, v := range lst {\n        if v%prime == 0 {\n            max += v%prime\n\
    \        }\n        prime++\n    }\n    return max\n}\n", "    max := 0\n    for\
    \ _, v := range lst {\n        if v > max {\n            max = v\n        }\n\
    \    }\n    sum := 0\n    for _, v := range lst {\n        if v%max == 0 {\n \
    \           sum += int(v / max)\n        }\n    }\n    return sum\n}\n", "   \
    \ max := 0\n    for _, v := range lst {\n        if v > max {\n            max\
    \ = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n        if\
    \ v == max {\n            sum += int(v)\n        }\n    }\n    return sum\n}\n",
  "    var max int\n    var sum int\n    for _, v := range lst {\n        if v > max\
    \ {\n            max = v\n        }\n    }\n    for _, v := range lst {\n    \
    \    if v%max == 0 {\n            sum += v%max\n        }\n    }\n    return sum\n\
    }\n", "    max := 0\n    for _, v := range lst {\n        if v > max {\n     \
    \       max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n\
    \        if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n", "    max := 0\n    max += lst[0]\n    for _, v := range lst {\n \
    \       if v > max {\n            max = v\n        }\n    }\n    for _, v := range\
    \ lst {\n        if v%max == 0 {\n            max += v\n        }\n    }\n   \
    \ return max\n}\n", "    max := 0\n    for _, v := range lst {\n        if v >\
    \ max {\n            max = v\n        }\n    }\n    sum := 0\n    for _, v :=\
    \ range lst {\n        if v == max {\n            sum += int(v)\n        }\n \
    \   }\n    return sum\n}\n", "    max := 0\n    for _, v := range lst {\n    \
    \    if v > max {\n            max = v\n        }\n    }\n    return max\n}\n",
  "    max := 0\n    for _, v := range lst {\n        if v > max {\n            max\
    \ = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n        if\
    \ v == max {\n            sum += int(v)\n        }\n    }\n    return sum\n}\n",
  "    var max int\n    for _, v := range lst {\n        if v > max {\n          \
    \  max = v\n        }\n    }\n    max += max/2\n    for _, v := range lst {\n\
    \        if v%max == 0 {\n            max += max/2\n        }\n    }\n    return\
    \ max\n}\n", "    max := 0\n    max := lst[0]\n    for _, v := range lst {\n \
    \       if v > max {\n            max = v\n        }\n    }\n    return max\n\
    }\n", "    max := 0\n    for _, v := range lst {\n        if v > max {\n     \
    \       max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n\
    \        if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n", "    max := 0\n    max := lst[0]\n    for _, v := range lst {\n \
    \       if v > max {\n            max = v\n        }\n    }\n    sum := 0\n  \
    \  for _, v := range lst {\n        if v == max {\n            sum += int(v)\n\
    \        }\n    }\n    return sum\n}\n", "    max := 0\n    for _, v := range\
    \ lst {\n        if v > max {\n            max = v\n        }\n    }\n    sum\
    \ := 0\n    for _, v := range lst {\n        if v%max == 0 {\n            sum\
    \ += int(v / max)\n        }\n    }\n    return sum\n}\n", "    max := 0\n   \
    \ prime := 2\n    for _, v := range lst {\n        if v%prime == 0 {\n       \
    \     max = v\n            break\n        }\n        prime++\n    }\n    return\
    \ max\n}\n", "    max := 0\n    for _, v := range lst {\n        if v > max {\n\
    \            max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst\
    \ {\n        if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n", "    max := 0\n    for _, v := range lst {\n        if v > max {\n\
    \            max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst\
    \ {\n        if v%max == 0 {\n            sum += v%max\n        }\n    }\n   \
    \ return sum\n}\n", "    max := 0\n    for _, v := range lst {\n        if v >\
    \ max {\n            max = v\n        }\n    }\n    sum := 0\n    for _, v :=\
    \ range lst {\n        if v == max {\n            sum += int(v)\n        }\n \
    \   }\n    return sum\n}\n", "    max := 0\n    sum := 0\n    for _, v := range\
    \ lst {\n        if v > max {\n            max = v\n        }\n    }\n    for\
    \ _, v := range lst {\n        if v%max == 0 {\n            sum += v%max\n   \
    \     }\n    }\n    return sum\n}\n", "    max := 0\n    for _, v := range lst\
    \ {\n        if v > max {\n            max = v\n        }\n    }\n    for _, v\
    \ := range lst {\n        if v%max == 0 {\n            max += v\n        }\n \
    \   }\n    return max\n}\n", "    var maxPrime int\n    var sumDigits int\n  \
    \  for _, v := range lst {\n        if v%maxPrime == 0 {\n            maxPrime\
    \ = v\n            sumDigits = 0\n        }\n        if v%maxPrime != 0 {\n  \
    \          sumDigits += int(v%maxPrime)\n        }\n    }\n    return sumDigits\n\
    }\n", "    max := 0\n    for _, v := range lst {\n        if v > max {\n     \
    \       max = v\n        }\n    }\n    for _, v := range lst {\n        if v%max\
    \ == 0 {\n            max += v\n        }\n    }\n    return max\n}\n", "    max\
    \ := 0\n    for _, v := range lst {\n        if v > max {\n            max = v\n\
    \        }\n    }\n    sum := 0\n    for _, v := range lst {\n        if v ==\
    \ max {\n            sum += int(v)\n        }\n    }\n    return sum\n}\n", " \
    \   max := 0\n    for _, v := range lst {\n        if v > max {\n            max\
    \ = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n        if\
    \ v%max == 0 {\n            sum += int(v / max)\n        }\n    }\n    return\
    \ sum\n}\n", "    max := 0\n    max := lst[0]\n    for _, v := range lst {\n \
    \       if v > max {\n            max = v\n        }\n    }\n    return max\n\
    }\n", "    max := 0\n    for _, v := range lst {\n        if v > max {\n     \
    \       max = v\n        }\n    }\n    return max\n}\n", "    max := 0\n    for\
    \ _, v := range lst {\n        if v > max {\n            max = v\n        }\n\
    \    }\n    sum := 0\n    for _, v := range lst {\n        if v%max == 0 {\n \
    \           sum += v%max\n        }\n    }\n    return sum\n}\n", "    max :=\
    \ 0\n    for _, v := range lst {\n        if v > max {\n            max = v\n\
    \        }\n    }\n    sum := 0\n    for _, v := range lst {\n        if v%max\
    \ == 0 {\n            sum += v%max\n        }\n    }\n    return sum\n}\n", " \
    \   max := 0\n    for _, v := range lst {\n        if v > max {\n            max\
    \ = v\n        }\n    }\n    return max\n}\n", "    max := 0\n    max := lst[0]\n\
    \    for _, v := range lst {\n        if v > max {\n            max = v\n    \
    \    }\n    }\n    for _, v := range lst {\n        if v%max == 0 {\n        \
    \    max += v\n        }\n    }\n    return max\n}\n", "    max := 0\n    for\
    \ _, v := range lst {\n        if v > max {\n            max = v\n        }\n\
    \    }\n    for _, v := range lst {\n        if v%max == 0 {\n            max\
    \ += v\n        }\n    }\n    return max\n}\n", "    var maxPrime int\n    for\
    \ _, v := range lst {\n        if v%2 == 0 {\n            continue\n        }\n\
    \        for i := 3; i <= v/2; i++ {\n            if v%i == 0 {\n            \
    \    break\n            }\n        }\n        if i == v/2 {\n            maxPrime\
    \ = v\n        }\n    }\n    return maxPrime\n}\n", "    max := 0\n    for _,\
    \ v := range lst {\n        if v > max {\n            max = v\n        }\n   \
    \ }\n    return max\n}\n", "    var maxPrime int\n    var sum int\n    for _,\
    \ v := range lst {\n        if v%maxPrime == 0 {\n            maxPrime = v\n \
    \       }\n    }\n    for _, v := range lst {\n        if v%maxPrime == 0 {\n\
    \            sum += int(v / maxPrime)\n        }\n    }\n    return sum\n}\n",
  "    max := 0\n    sum := 0\n    for _, v := range lst {\n        if v > max {\n\
    \            max = v\n        }\n    }\n    for _, v := range lst {\n        if\
    \ v%max == 0 {\n            sum += v%max\n        }\n    }\n    return sum\n}\n",
  "    max := 0\n    for _, v := range lst {\n        if v > max {\n            max\
    \ = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n        if\
    \ v%max == 0 {\n            sum += v%max\n        }\n    }\n    return sum\n}\n",
  "    max := 0\n    for _, v := range lst {\n        if v > max {\n            max\
    \ = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n        if\
    \ v%max == 0 {\n            sum += v\n        }\n    }\n    return sum\n}\n",
  "    max := 0\n    for _, v := range lst {\n        if v > max {\n            max\
    \ = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n        if\
    \ v == max {\n            sum += int(v)\n        }\n    }\n    return sum\n}\n",
  "    max := 0\n    for _, v := range lst {\n        if v > max {\n            max\
    \ = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n        if\
    \ v == max {\n            sum += int(v)\n        }\n    }\n    return sum\n}\n",
  "    max := 0\n    for _, v := range lst {\n        if v > max {\n            max\
    \ = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n        if\
    \ v%max == 0 {\n            sum += v\n        }\n    }\n    return sum\n}\n",
  "    max := 0\n    for _, v := range lst {\n        if v > max {\n            max\
    \ = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n        if\
    \ v == max {\n            sum += int(v)\n        }\n    }\n    return sum\n}\n",
  "    var maxPrime int\n    var sum int\n    for _, v := range lst {\n        if\
    \ v%2 == 0 {\n            sum += v\n        }\n        for i := 3; i <= int(v/2);\
    \ i++ {\n            if v%i == 0 {\n                sum += i\n            }\n\
    \        }\n        if sum > maxPrime {\n            maxPrime = sum\n        }\n\
    \        sum = 0\n    }\n    return maxPrime\n}\n", "    max := 0\n    for _,\
    \ v := range lst {\n        if v > max {\n            max = v\n        }\n   \
    \ }\n    return max\n}\n", "    var maxPrime int\n    var sumOfDigits int\n  \
    \  for _, v := range lst {\n        if v%2 == 0 {\n            maxPrime = maxPrime\
    \ + 1\n        }\n    }\n    for _, v := range lst {\n        if v%maxPrime ==\
    \ 0 {\n            sumOfDigits += v\n        }\n    }\n    return sumOfDigits\n\
    }\n", "    max := 0\n    max := lst[0]\n    for _, v := range lst {\n        if\
    \ v > max {\n            max = v\n        }\n    }\n    sum := 0\n    for _, v\
    \ := range lst {\n        if v%max == 0 {\n            sum += int(v / max)\n \
    \       }\n    }\n    return sum\n}\n", "    max := 0\n    for _, v := range lst\
    \ {\n        if v > max {\n            max = v\n        }\n    }\n    sum := 0\n\
    \    for _, v := range lst {\n        if v%max == 0 {\n            sum += int(v\
    \ / max)\n        }\n    }\n    return sum\n}\n", "    max := 0\n    for _, v\
    \ := range lst {\n        if v > max {\n            max = v\n        }\n    }\n\
    \    return max\n}\n", "    var max int\n    for _, v := range lst {\n       \
    \ if v > max {\n            max = v\n        }\n    }\n    return max\n}\n", " \
    \   max := 0\n    for _, v := range lst {\n        if v > max {\n            max\
    \ = v\n        }\n    }\n    return max\n}\n", "    max := 0\n    for _, v :=\
    \ range lst {\n        if v > max {\n            max = v\n        }\n    }\n \
    \   sum := 0\n    for _, v := range lst {\n        if v == max {\n           \
    \ sum += int(v)\n        }\n    }\n    return sum\n}\n", "    max := 0\n    for\
    \ _, v := range lst {\n        if v > max {\n            max = v\n        }\n\
    \    }\n    return max\n}\n", "    var maxPrime int\n    var sum int\n    for\
    \ _, v := range lst {\n        if v%2 == 0 {\n            continue\n        }\n\
    \        for i := 3; i <= v/2; i++ {\n            if v%i == 0 {\n            \
    \    break\n            }\n        }\n        if i == v/2 {\n            maxPrime\
    \ = v\n            sum += v\n        }\n    }\n    return sum\n}\n", "    var\
    \ maxPrime int\n    var maxPrimeDigit int\n    var sum int\n    for _, v := range\
    \ lst {\n        if v > maxPrime {\n            maxPrime = v\n            maxPrimeDigit\
    \ = 0\n        }\n        if v == maxPrime {\n            maxPrimeDigit += v\n\
    \        }\n    }\n    sum = maxPrimeDigit\n    for _, v := range lst {\n    \
    \    if v > maxPrime {\n            sum += v - maxPrime\n        }\n    }\n  \
    \  return sum\n}\n", "    max := 0\n    for _, v := range lst {\n        if v\
    \ > max {\n            max = v\n        }\n    }\n    sum := 0\n    for _, v :=\
    \ range lst {\n        if v%max == 0 {\n            sum += v\n        }\n    }\n\
    \    return sum\n}\n", "    max := 0\n    for _, v := range lst {\n        if\
    \ v > max {\n            max = v\n        }\n    }\n    sum := 0\n    for _, v\
    \ := range lst {\n        if v == max {\n            sum += int(v)\n        }\n\
    \    }\n    return sum\n}\n", "    max := 0\n    for _, v := range lst {\n   \
    \     if v > max {\n            max = v\n        }\n    }\n    sum := 0\n    for\
    \ _, v := range lst {\n        if v%max == 0 {\n            sum += v%max\n   \
    \     }\n    }\n    return sum\n}\n", "    max := 0\n    for _, v := range lst\
    \ {\n        if v > max {\n            max = v\n        }\n    }\n    sum := 0\n\
    \    for _, v := range lst {\n        if v == max {\n            sum += int(v)\n\
    \        }\n    }\n    return sum\n}\n", "    max := 0\n    sum := 0\n    for\
    \ _, v := range lst {\n        if v > max {\n            max = v\n        }\n\
    \    }\n    for _, v := range lst {\n        if v%max == 0 {\n            sum\
    \ += int(v / max)\n        }\n    }\n    return sum\n}\n", "    max := 0\n   \
    \ for _, v := range lst {\n        if v > max {\n            max = v\n       \
    \ }\n    }\n    for _, v := range lst {\n        if v%max == 0 {\n           \
    \ max += v\n        }\n    }\n    return max\n}\n", "    max := 0\n    sum :=\
    \ 0\n    for _, v := range lst {\n        if v > max {\n            max = v\n\
    \        }\n    }\n    for _, v := range lst {\n        if v%max == 0 {\n    \
    \        sum += v%max\n        }\n    }\n    return sum\n}\n", "    max := 0\n\
    \    for _, v := range lst {\n        if v > max {\n            max = v\n    \
    \    }\n    }\n    sum := 0\n    for _, v := range lst {\n        if v%max ==\
    \ 0 {\n            sum += int(v / max)\n        }\n    }\n    return sum\n}\n",
  "    max := 0\n    for _, v := range lst {\n        if v > max {\n            max\
    \ = v\n        }\n    }\n    return max\n}\n", "    max := 0\n    for _, v :=\
    \ range lst {\n        if v > max {\n            max = v\n        }\n    }\n \
    \   sum := 0\n    for _, v := range lst {\n        if v == max {\n           \
    \ sum += int(v)\n        }\n    }\n    return sum\n}\n", "    max := 0\n    sum\
    \ := 0\n    for _, v := range lst {\n        if v > max {\n            max = v\n\
    \        }\n    }\n    for _, v := range lst {\n        if v%max == 0 {\n    \
    \        sum += int(v / max)\n        }\n    }\n    return sum\n}\n", "    var\
    \ max int\n    var sum int\n    for _, v := range lst {\n        if v > max {\n\
    \            max = v\n        }\n    }\n    for _, v := range lst {\n        if\
    \ v%max == 0 {\n            sum += v%max\n        }\n    }\n    return sum\n}\n",
  "    max := 0\n    for _, v := range lst {\n        if v > max {\n            max\
    \ = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n        if\
    \ v%max == 0 {\n            sum += v%max\n        }\n    }\n    return sum\n}\n",
  "    max := 0\n    for _, v := range lst {\n        if v > max {\n            max\
    \ = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n        if\
    \ v == max {\n            sum += int(v)\n        }\n    }\n    return sum\n}\n",
  "    max := 0\n    for _, v := range lst {\n        if v > max {\n            max\
    \ = v\n        }\n    }\n    return max\n}\n", "    max := 0\n    prime := 2\n\
    \    for _, v := range lst {\n        if v > max {\n            max = v\n    \
    \    }\n        if v%prime == 0 {\n            prime++\n        }\n    }\n   \
    \ return max\n}\n", "    var maxPrime int\n    for _, v := range lst {\n     \
    \   if v%2 == 0 {\n            continue\n        }\n        for i := 3; i <= v/2;\
    \ i++ {\n            if v%i == 0 {\n                break\n            }\n   \
    \     }\n        if i == v/2 {\n            maxPrime = v\n        }\n    }\n \
    \   return maxPrime\n}\n", "    max := 0\n    sum := 0\n    for _, v := range\
    \ lst {\n        if v > max {\n            max = v\n        }\n    }\n    for\
    \ _, v := range lst {\n        if v%max == 0 {\n            sum += int(v / max)\n\
    \        }\n    }\n    return sum\n}\n", "    var maxPrime int = 0\n    for _,\
    \ v := range lst {\n        if v > maxPrime {\n            maxPrime = v\n    \
    \    }\n    }\n    return maxPrime\n}\n", "    max := 0\n    for _, v := range\
    \ lst {\n        if v > max {\n            max = v\n        }\n    }\n    sum\
    \ := 0\n    for _, v := range lst {\n        if v%max == 0 {\n            sum\
    \ += v%max\n        }\n    }\n    return sum\n}\n", "    max := 0\n    for _,\
    \ v := range lst {\n        if v > max {\n            max = v\n        }\n   \
    \ }\n    sum := 0\n    for _, v := range lst {\n        if v == max {\n      \
    \      sum += int(v)\n        }\n    }\n    return sum\n}\n", "    max := 0\n\
    \    for _, v := range lst {\n        if v > max {\n            max = v\n    \
    \    }\n    }\n    sum := 0\n    for _, v := range lst {\n        if v == max\
    \ {\n            sum += int(v)\n        }\n    }\n    return sum\n}\n", "    max\
    \ := 0\n    max := lst[0]\n    for _, v := range lst {\n        if v > max {\n\
    \            max = v\n        }\n    }\n    for _, v := range lst {\n        if\
    \ v%max == 0 {\n            max += v\n        }\n    }\n    return max\n}\n",
  "    max := 0\n    for _, v := range lst {\n        if v > max {\n            max\
    \ = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n        if\
    \ v%max == 0 {\n            sum += int(v / max)\n        }\n    }\n    return\
    \ sum\n}\n", "    max := 0\n    for _, v := range lst {\n        if v > max {\n\
    \            max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst\
    \ {\n        if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n", "    var maxPrime int = 0\n    for _, v := range lst {\n        if\
    \ v > maxPrime {\n            maxPrime = v\n        }\n    }\n    return maxPrime\n\
    }\n", "    max := 0\n    for _, v := range lst {\n        if v > max {\n     \
    \       max = v\n        }\n    }\n    return max\n}\n", "    max := 0\n    for\
    \ _, v := range lst {\n        if v > max {\n            max = v\n        }\n\
    \    }\n    sum := 0\n    for _, v := range lst {\n        if v == max {\n   \
    \         sum += int(v)\n        }\n    }\n    return sum\n}\n", "    max := 0\n\
    \    max += lst[0]\n    for _, v := range lst[1:] {\n        if v > max {\n  \
    \          max = v\n        }\n    }\n    return max\n}\n", "    max := 0\n  \
    \  prime := 2\n    for _, v := range lst {\n        if v > max {\n           \
    \ max = v\n        }\n        if v%prime == 0 {\n            prime++\n       \
    \ }\n    }\n    return max\n}\n", "    max := 0\n    prime := 2\n    for _, v\
    \ := range lst {\n        if v%prime == 0 {\n            max = v\n           \
    \ break\n        }\n        prime++\n    }\n    return max\n}\n", "    max :=\
    \ 0\n    for _, v := range lst {\n        if v > max {\n            max = v\n\
    \        }\n    }\n    sum := 0\n    for _, v := range lst {\n        if v ==\
    \ max {\n            sum += int(v)\n        }\n    }\n    return sum\n}\n", " \
    \   max := 0\n    for _, v := range lst {\n        if v > max {\n            max\
    \ = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n        if\
    \ v%max == 0 {\n            sum += v\n        }\n    }\n    return sum\n}\n",
  "    max := 0\n    for _, v := range lst {\n        if v > max {\n            max\
    \ = v\n        }\n    }\n    return max\n}\n", "    max := 0\n    for _, v :=\
    \ range lst {\n        if v > max {\n            max = v\n        }\n    }\n \
    \   sum := 0\n    for _, v := range lst {\n        if v == max {\n           \
    \ sum += int(v)\n        }\n    }\n    return sum\n}\n", "    max := 0\n    for\
    \ _, v := range lst {\n        if v > max {\n            max = v\n        }\n\
    \    }\n    return max\n}\n", "    max := 0\n    for _, v := range lst {\n   \
    \     if v > max {\n            max = v\n        }\n    }\n    sum := 0\n    for\
    \ _, v := range lst {\n        if v == max {\n            sum += int(v)\n    \
    \    }\n    }\n    return sum\n}\n", "    max := 0\n    for _, v := range lst\
    \ {\n        if v > max {\n            max = v\n        }\n    }\n    sum := 0\n\
    \    for _, v := range lst {\n        if v == max {\n            sum += int(v)\n\
    \        }\n    }\n    return sum\n}\n", "    max := 0\n    for _, v := range\
    \ lst {\n        if v > max {\n            max = v\n        }\n    }\n    return\
    \ max\n}\n", "    max := 0\n    max := lst[0]\n    for _, v := range lst {\n \
    \       if v > max {\n            max = v\n        }\n    }\n    sum := 0\n  \
    \  for _, v := range lst {\n        if v == max {\n            sum += int(v)\n\
    \        }\n    }\n    return sum\n}\n", "    max := 0\n    sum := 0\n    for\
    \ _, v := range lst {\n        if v > max {\n            max = v\n        }\n\
    \    }\n    for _, v := range lst {\n        if v%max == 0 {\n            sum\
    \ += v%max\n        }\n    }\n    return sum\n}\n", "    max := 0\n    for _,\
    \ v := range lst {\n        if v > max {\n            max = v\n        }\n   \
    \ }\n    sum := 0\n    for _, v := range lst {\n        if v%max == 0 {\n    \
    \        sum += v%max\n        }\n    }\n    return sum\n}\n", "    max := 0\n\
    \    for _, v := range lst {\n        if v > max {\n            max = v\n    \
    \    }\n    }\n    sum := 0\n    for _, v := range lst {\n        if v == max\
    \ {\n            sum += int(v)\n        }\n    }\n    return sum\n}\n", "    max\
    \ := 0\n    for _, v := range lst {\n        if v > max {\n            max = v\n\
    \        }\n    }\n    sum := 0\n    for _, v := range lst {\n        if v ==\
    \ max {\n            sum += int(v)\n        }\n    }\n    return sum\n}\n", " \
    \   max := 0\n    for _, v := range lst {\n        if v > max {\n            max\
    \ = v\n        }\n    }\n    return max\n}\n", "    max := 0\n    for _, v :=\
    \ range lst {\n        if v > max {\n            max = v\n        }\n    }\n \
    \   sum := 0\n    for _, v := range lst {\n        if v%max == 0 {\n         \
    \   sum += int(v / max)\n        }\n    }\n    return sum\n}\n", "    var maxPrime\
    \ int\n    var sum int\n    for _, v := range lst {\n        if v > maxPrime {\n\
    \            maxPrime = v\n        }\n    }\n    for _, v := range lst {\n   \
    \     if v%maxPrime == 0 {\n            sum += v\n        }\n    }\n    return\
    \ sum\n}\n", "    var maxPrime int = 0\n    for _, v := range lst {\n        if\
    \ v > maxPrime {\n            maxPrime = v\n        }\n    }\n    return maxPrime\n\
    }\n", "    var maxPrime int\n    for _, v := range lst {\n        if v > maxPrime\
    \ {\n            maxPrime = v\n        }\n    }\n    sum := 0\n    for _, v :=\
    \ range lst {\n        if v == maxPrime {\n            sum += int(v)\n       \
    \ }\n    }\n    return sum\n}\n", "    max := 0\n    for _, v := range lst {\n\
    \        if v > max {\n            max = v\n        }\n    }\n    sum := 0\n \
    \   for _, v := range lst {\n        if v%max == 0 {\n            sum += v%max\n\
    \        }\n    }\n    return sum\n}\n", "    var max int\n    var sum int\n \
    \   for _, v := range lst {\n        if v > max {\n            max = v\n     \
    \   }\n    }\n    for _, v := range lst {\n        if v%max == 0 {\n         \
    \   sum += v%max\n        }\n    }\n    return sum\n}\n", "    max := 0\n    for\
    \ _, v := range lst {\n        if v > max {\n            max = v\n        }\n\
    \    }\n    sum := 0\n    for _, v := range lst {\n        if v == max {\n   \
    \         sum += int(v)\n        }\n    }\n    return sum\n}\n", "    max := 0\n\
    \    for _, v := range lst {\n        if v > max {\n            max = v\n    \
    \    }\n    }\n    sum := 0\n    for _, v := range lst {\n        if v%max ==\
    \ 0 {\n            sum += int(v / max)\n        }\n    }\n    return sum\n}\n",
  "    max := 0\n    for _, v := range lst {\n        if v > max {\n            max\
    \ = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n        if\
    \ v%max == 0 {\n            sum += int(v / max)\n        }\n    }\n    return\
    \ sum\n}\n", "    max := 0\n    for _, v := range lst {\n        if v > max {\n\
    \            max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst\
    \ {\n        if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n", "    max := 0\n    for _, v := range lst {\n        if v > max {\n\
    \            max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst\
    \ {\n        if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n", "    max := 0\n    for _, v := range lst {\n        if v > max {\n\
    \            max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst\
    \ {\n        if v%max == 0 {\n            sum += v%max\n        }\n    }\n   \
    \ return sum\n}\n", "    max := 0\n    for _, v := range lst {\n        if v >\
    \ max {\n            max = v\n        }\n    }\n    for _, v := range lst {\n\
    \        if v%max == 0 {\n            max += v\n        }\n    }\n    return max\n\
    }\n", "    max := 0\n    for _, v := range lst {\n        if v > max {\n     \
    \       max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n\
    \        if v%max == 0 {\n            sum += v / max\n        }\n    }\n    return\
    \ sum\n}\n", "    max := 0\n    for _, v := range lst {\n        if v > max {\n\
    \            max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst\
    \ {\n        if v%max == 0 {\n            sum += v%max\n        }\n    }\n   \
    \ return sum\n}\n", "    max := 0\n    sum := 0\n    for _, v := range lst {\n\
    \        if v > max {\n            max = v\n        }\n    }\n    for _, v :=\
    \ range lst {\n        if v == max {\n            sum += int(v)\n        }\n \
    \   }\n    return sum\n}\n", "    max := 0\n    for _, v := range lst {\n    \
    \    if v > max {\n            max = v\n        }\n    }\n    return max\n}\n",
  "    max := 0\n    for _, v := range lst {\n        if v > max {\n            max\
    \ = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n        if\
    \ v%max == 0 {\n            sum += v%max\n        }\n    }\n    return sum\n}\n",
  "    max := 0\n    max += lst[0]\n    for _, v := range lst[1:] {\n        if v\
    \ > max {\n            max = v\n        }\n    }\n    return max\n}\n", "    var\
    \ maxPrime int\n    var sumOfDigits int\n    for _, v := range lst {\n       \
    \ if v > maxPrime {\n            maxPrime = v\n        }\n    }\n    for _, v\
    \ := range lst {\n        if v%maxPrime == 0 {\n            sumOfDigits += v%10\n\
    \        }\n    }\n    return sumOfDigits\n}\n", "    max := 0\n    for _, v :=\
    \ range lst {\n        if v > max {\n            max = v\n        }\n    }\n \
    \   sum := 0\n    for _, v := range lst {\n        if v == max {\n           \
    \ sum += int(v)\n        }\n    }\n    return sum\n}\n", "    max := 0\n    for\
    \ _, v := range lst {\n        if v > max {\n            max = v\n        }\n\
    \    }\n    sum := 0\n    for _, v := range lst {\n        if v == max {\n   \
    \         sum += int(v)\n        }\n    }\n    return sum\n}\n", "    var maxPrime\
    \ int\n    var sumOfDigits int\n    for _, v := range lst {\n        if v > maxPrime\
    \ {\n            maxPrime = v\n        }\n    }\n    for _, v := range lst {\n\
    \        if v%maxPrime == 0 {\n            sumOfDigits += v%10\n        }\n  \
    \  }\n    return sumOfDigits\n}\n", "    max := 0\n    max += lst[0]\n    for\
    \ _, v := range lst[1:] {\n        if v > max {\n            max = v\n       \
    \ }\n    }\n    return max\n}\n", "    max := 0\n    for _, v := range lst {\n\
    \        if v > max {\n            max = v\n        }\n    }\n    for _, v :=\
    \ range lst {\n        if v%max == 0 {\n            max += v%max\n        }\n\
    \    }\n    return max\n}\n", "    var maxPrime int\n    var sum int\n    for\
    \ _, v := range lst {\n        if v%2 == 0 {\n            continue\n        }\n\
    \        for i := 3; i <= v/2; i++ {\n            if v%i == 0 {\n            \
    \    break\n            }\n        }\n        if i == v/2 {\n            maxPrime\
    \ = v\n            sum += v\n        }\n    }\n    return sum\n}\n", "    max\
    \ := 0\n    for _, v := range lst {\n        if v > max {\n            max = v\n\
    \        }\n    }\n    return max\n}\n", "    max := 0\n    for _, v := range\
    \ lst {\n        if v > max {\n            max = v\n        }\n    }\n    sum\
    \ := 0\n    for _, v := range lst {\n        if v%max == 0 {\n            sum\
    \ += v\n        }\n    }\n    return sum\n}\n", "    max := 0\n    max += lst[0]\n\
    \    for _, v := range lst[1:] {\n        if v%max == 0 {\n            max +=\
    \ v\n        } else {\n            max = v\n        }\n    }\n    return max\n\
    }\n", "    max := 0\n    for _, v := range lst {\n        if v > max {\n     \
    \       max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n\
    \        if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n", "    max := 0\n    for _, v := range lst {\n        if v > max {\n\
    \            max = v\n        }\n    }\n    return max\n}\n", "    max := 0\n\
    \    for _, v := range lst {\n        if v > max {\n            max = v\n    \
    \    }\n    }\n    for _, v := range lst {\n        if v%max == 0 {\n        \
    \    max += v\n        }\n    }\n    return max\n}\n", "    max := 0\n    for\
    \ _, v := range lst {\n        if v > max {\n            max = v\n        }\n\
    \    }\n    sum := 0\n    for _, v := range lst {\n        if v%max == 0 {\n \
    \           sum += v\n        }\n    }\n    return sum\n}\n", "    max := 0\n\
    \    max := lst[0]\n    for _, v := range lst {\n        if v > max {\n      \
    \      max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n\
    \        if v == max {\n            sum += int(v)\n        }\n    }\n    return\
    \ sum\n}\n", "    max := 0\n    max += lst[0]\n    for _, v := range lst[1:] {\n\
    \        if v%max != 0 {\n            max = v\n        }\n    }\n    return max\n\
    }\n", "    var maxPrime int\n    var maxDigit = 0\n    for _, v := range lst {\n\
    \        if v > maxDigit {\n            maxDigit = v\n            maxPrime = v\n\
    \        }\n    }\n    var sum int\n    for _, v := range lst {\n        if v\
    \ == maxDigit {\n            sum += maxDigit\n        }\n    }\n    return sum\n\
    }\n", "    max := 0\n    max += lst[0]\n    for _, v := range lst[1:] {\n    \
    \    if v%max == 0 {\n            max += v\n        }\n    }\n    return max\n\
    }\n", "    max := 0\n    for _, v := range lst {\n        if v > max {\n     \
    \       max = v\n        }\n    }\n    sum := 0\n    for _, v := range lst {\n\
    \        if v == max {\n            continue\n        }\n        if v%max == 0\
    \ {\n            sum += int(v / max)\n        }\n    }\n    return sum\n}\n",
  "    max := 0\n    for _, v := range lst {\n        if v > max {\n            max\
    \ = v\n        }\n    }\n    return max\n}\n", "    max := 0\n    for _, v :=\
    \ range lst {\n        if v > max {\n            max = v\n        }\n    }\n \
    \   return max\n}\n", "    max := 0\n    for _, v := range lst {\n        if v\
    \ > max {\n            max = v\n        }\n    }\n    return max\n}\n", "    max\
    \ := 0\n    sum := 0\n    for _, v := range lst {\n        if v > max {\n    \
    \        max = v\n        }\n    }\n    for _, v := range lst {\n        if v%max\
    \ == 0 {\n            sum += v%max\n        }\n    }\n    return sum\n}\n", " \
    \   var maxPrime int\n    var sum int\n    for _, v := range lst {\n        if\
    \ v > maxPrime {\n            maxPrime = v\n        }\n    }\n    for _, v :=\
    \ range lst {\n        if v%maxPrime == 0 {\n            sum += v%10\n       \
    \ }\n    }\n    return sum\n}\n", "    max := 0\n    for _, v := range lst {\n\
    \        if v > max {\n            max = v\n        }\n    }\n    sum := 0\n \
    \   for _, v := range lst {\n        if v == max {\n            sum += int(v)\n\
    \        }\n    }\n    return sum\n}\n", "    max := 0\n    for _, v := range\
    \ lst {\n        if v > max {\n            max = v\n        }\n    }\n    sum\
    \ := 0\n    for _, v := range lst {\n        if v == max {\n            sum +=\
    \ int(v)\n        }\n    }\n    return sum\n}\n"]
stop_tokens:
- "\nfunc"
- struct
- "\n// "

name: HumanEval_44_change_base
language: go_test.go
prompt: "package change_base_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
  // Change numerical base of input number x to base.\n// return string representation\
  \ after the conversion.\n// base numbers are less than 10.\nfunc change_base(x int,\
  \ base int) string {\n"
tests: "func TestChange_Base(t *testing.T) {\n  candidate := change_base\n\ttype test\
  \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests :=\
  \ []test{\n     { actual: candidate(8, 3), expected: \"22\" },\n     { actual: candidate(9,\
  \ 3), expected: \"100\" },\n     { actual: candidate(234, 2), expected: \"11101010\"\
  \ },\n     { actual: candidate(16, 2), expected: \"10000\" },\n     { actual: candidate(8,\
  \ 2), expected: \"1000\" },\n     { actual: candidate(7, 2), expected: \"111\" },\n\
  \     { actual: candidate(2, 3), expected: \"2\" },\n     { actual: candidate(3,\
  \ 4), expected: \"3\" },\n     { actual: candidate(4, 5), expected: \"4\" },\n \
  \    { actual: candidate(5, 6), expected: \"5\" },\n     { actual: candidate(6,\
  \ 7), expected: \"6\" },\n     { actual: candidate(7, 8), expected: \"7\" },\n \
  \  }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i),\
  \ func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
  %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
  \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
completions: ["    if base < 10 {\n        fmt.Printf(\"base must be less than 10\\\
    n\")\n        return\n    }\n    switch base {\n    case 2:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 8:\n        return fmt.Sprintf(\"%o\", x)\n    case 16:\n \
    \       return fmt.Sprintf(\"%x\", x)\n    case 32:\n        return fmt.Sprintf(\"\
    %X\", x)\n    case 64:\n        return fmt.Sprintf(\"%llx\", x)\n    case 128:\n\
    \        return fmt.Sprintf(\"%llX\", x)\n    case 256:\n        return fmt.Sprintf(\"\
    %016x\", x)\n    case 512:\n        return fmt.Sprintf(\"%016X\", x)\n    case\
    \ 1024:\n        return fmt.Sprintf(\"%0128x\", x)\n    case 2048:\n        return\
    \ fmt.Sprintf(\"%0128X\", x)\n    case 4096:\n        return fmt.Sprintf(\"%016llx\"\
    , x)\n    case 8192:\n        return fmt.Sprintf(\"%016llX\", x)\n    case 16384:\n\
    \        return fmt.Sprintf(\"%0128llx\", x)\n    case 32768:\n        return\
    \ fmt.Sprintf(\"%0128llX\", x)\n    case 65536:\n        return fmt.Sprintf(\"\
    %016llllx\", x)\n    case 131072:\n        return fmt.Sprintf(\"%016llllX\", x)\n\
    \    case 262144:\n        return fmt.Sprintf(\"%0128llllx\", x)\n    case 524288:\n\
    \        return fmt.Sprintf(\"%0128llllX\", x)\n    case 1048576:\n        return\
    \ fmt.Sprintf(\"%016llllllx\", x)\n    case 2097152:\n        return fmt.Sprintf(\"\
    %016llllllX\", x)\n    case 4194304:\n        return fmt.Sprintf(\"%0128llllllx\"\
    , x)\n    case 8388608:\n        return fmt.Sprintf(\"%0128llllllX\", x)\n   \
    \ case 16777216:\n        return fmt.Sprintf(\"%016llllllllx\", x)\n    case 33554432:\n\
    \        return fmt.Sprintf(\"%016llllllllX\", x)\n    case 67108864:\n      \
    \  return fmt.Sprintf(\"%016llllllllllx\", x)\n    case 134217728:\n        return\
    \ fmt.Sprintf(\"%016llllllllllX\", x)\n    case 268435456:\n        return fmt.Sprintf(\"\
    %0128llllllllllx\", x)\n    case 536870912:\n        return fmt.Sprintf(\"%0128llllllllllX\"\
    , x)\n    case 1073741824:\n        return fmt.Sprintf(\"%016ll", "    if base\
    \ < 2 {\n        fmt.Printf(\"base must be greater than 1\\n\")\n        return\
    \ \"\"\n    }\n    if base > 10 {\n        fmt.Printf(\"base must be less than\
    \ 10\\n\")\n        return \"\"\n    }\n    if x == 0 {\n        return \"\"\n\
    \    }\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x ",
  "    if base < 10 {\n        fmt.Println(\"base must be less than 10\")\n      \
    \  return \"\"\n    }\n    result := \"\"\n    switch base {\n    case 2:\n  \
    \      result = fmt.Sprintf(\"%v\", x)\n    case 8:\n        result = fmt.Sprintf(\"\
    %v\", x)\n    case 16:\n        result = fmt.Sprintf(\"%v\", x)\n    case 32:\n\
    \        result = fmt.Sprintf(\"%v\", x)\n    case 64:\n        result = fmt.Sprintf(\"\
    %v\", x)\n    case 128:\n        result = fmt.Sprintf(\"%v\", x)\n    case 256:\n\
    \        result = fmt.Sprintf(\"%v\", x)\n    case 512:\n        result = fmt.Sprintf(\"\
    %v\", x)\n    case 1024:\n        result = fmt.Sprintf(\"%v\", x)\n    case 2048:\n\
    \        result = fmt.Sprintf(\"%v\", x)\n    case 4096:\n        result = fmt.Sprintf(\"\
    %v\", x)\n    case 8192:\n        result = fmt.Sprintf(\"%v\", x)\n    case 16384:\n\
    \        result = fmt.Sprintf(\"%v\", x)\n    case 32768:\n        result = fmt.Sprintf(\"\
    %v\", x)\n    case 65536:\n        result = fmt.Sprintf(\"%v\", x)\n    case 131072:\n\
    \        result = fmt.Sprintf(\"%v\", x)\n    case 262144:\n        result = fmt.Sprintf(\"\
    %v\", x)\n    case 524288:\n        result = fmt.Sprintf(\"%v\", x)\n    case\
    \ 1048576:\n        result = fmt.Sprintf(\"%v\", x)\n    case 2097152:\n     \
    \   result = fmt.Sprintf(\"%v\", x)\n    case 4194304:\n        result = fmt.Sprintf(\"\
    %v\", x)\n    case 8388608:\n        result = fmt.Sprintf(\"%v\", x)\n    case\
    \ 16777216:\n        result = fmt.Sprintf(\"%v\", x)\n    case 33554432:\n   \
    \     result = fmt.Sprintf(\"%v\", x)\n    case 67108864:\n        result = fmt.Sprintf(\"\
    %v\", x)\n    case 134217728:\n        result = fmt.Sprintf(\"%v\", x)\n    case\
    \ 268435456:\n        result = fmt.Sprintf(\"%v\", x)\n    case 536870912:\n \
    \       result = fmt.Sprintf(\"%v\", x)\n    case 1073741824:\n        result\
    \ = fmt.Sprintf(\"%v\", x)\n    case 2147483648:\n        result = fmt.Sprintf(\"\
    %v\", x)\n    case 4294967296:\n        result = fmt.Sprintf(\"%v\", x)\n    case\
    \ 8589934592:\n        result = fmt.Sprintf(\"%v\", x)\n    case 17179869184:\n\
    \        result = fmt.Sprintf(\"%v\", x)\n    case 34359738368:\n        result\
    \ = fmt.S", "    if base < 10 {\n        fmt.Printf(\"base must be less than 10\\\
    n\")\n        return \"\"\n    }\n    x /= base\n    x %= base\n    return fmt.Sprintf(\"\
    %d\", x)\n}\n", "    if base < 10 {\n        fmt.Println(\"Base must be less than\
    \ 10\")\n        return\n    }\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x ", "    if base < 10 {\n        fmt.Printf(\"\
    Base must be less than 10\\n\")\n        return \"\"\n    }\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    ", "    x /= base\n\
    \    x %= base\n    return fmt.Sprintf(\"%d\", x)\n}\n", "    result := \"\"\n\
    \    if base < 10 {\n        fmt.Printf(\"base must be less than 10\\n\")\n  \
    \      return \"\"\n    }\n    switch base {\n    case 2:\n        result = fmt.Sprintf(\"\
    %d\", x)\n    case 8:\n        result = fmt.Sprintf(\"%d\", x)\n    case 16:\n\
    \        result = fmt.Sprintf(\"%d\", x)\n    case 32:\n        result = fmt.Sprintf(\"\
    %d\", x)\n    case 64:\n        result = fmt.Sprintf(\"%d\", x)\n    case 128:\n\
    \        result = fmt.Sprintf(\"%d\", x)\n    case 256:\n        result = fmt.Sprintf(\"\
    %d\", x)\n    case 512:\n        result = fmt.Sprintf(\"%d\", x)\n    case 1024:\n\
    \        result = fmt.Sprintf(\"%d\", x)\n    case 2048:\n        result = fmt.Sprintf(\"\
    %d\", x)\n    case 4096:\n        result = fmt.Sprintf(\"%d\", x)\n    case 8192:\n\
    \        result = fmt.Sprintf(\"%d\", x)\n    case 16384:\n        result = fmt.Sprintf(\"\
    %d\", x)\n    case 32768:\n        result = fmt.Sprintf(\"%d\", x)\n    case 65536:\n\
    \        result = fmt.Sprintf(\"%d\", x)\n    case 131072:\n        result = fmt.Sprintf(\"\
    %d\", x)\n    case 262144:\n        result = fmt.Sprintf(\"%d\", x)\n    case\
    \ 524288:\n        result = fmt.Sprintf(\"%d\", x)\n    case 1048576:\n      \
    \  result = fmt.Sprintf(\"%d\", x)\n    case 2097152:\n        result = fmt.Sprintf(\"\
    %d\", x)\n    case 4194304:\n        result = fmt.Sprintf(\"%d\", x)\n    case\
    \ 8388608:\n        result = fmt.Sprintf(\"%d\", x)\n    case 16777216:\n    \
    \    result = fmt.Sprintf(\"%d\", x)\n    case 33554432:\n        result = fmt.Sprintf(\"\
    %d\", x)\n    case 67108864:\n        result = fmt.Sprintf(\"%d\", x)\n    case\
    \ 134217728:\n        result = fmt.Sprintf(\"%d\", x)\n    case 268435456:\n \
    \       result = fmt.Sprintf(\"%d\", x)\n    case 536870912:\n        result =\
    \ fmt.Sprintf(\"%d\", x)\n    case 1073741824:\n        result = fmt.Sprintf(\"\
    %d\", x)\n    case 2147483648:\n        result = fmt.Sprintf(\"%d\", x)\n    case\
    \ 4294967296:\n        result = fmt.Sprintf(\"%d\", x)\n    case 8589934592:\n\
    \        result = fmt.Sprintf(\"%d\", x)\n    case 17179869184:\n        result\
    \ = fmt.Sprintf(\"%d\", x)\n    case 34359738368:\n        result = fmt.Sprintf(\"\
    %d\", x)\n    case 68719476736:\n        result = fmt.Sprintf(\"%d\", x)\n   \
    \ case 137438953472:\n        result = fmt.Sprintf(\"%d\", x)\n    case 274877906944:\n\
    \        result = fmt.Sprintf(\"%d\", x)\n    case 549755813888:\n        result\
    \ = fmt.Sprintf(\"%d\", x)\n    case ", "    if base < 10 {\n        fmt.Println(\"\
    Base must be less than 10\")\n        return \"\"\n    }\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    ", "    if base <\
    \ 10 {\n        fmt.Println(\"Base must be less than 10\")\n        return \"\"\
    \n    }\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    ", "    if base < 10 {\n        fmt.Printf(\"base must be less than\
    \ 10\\n\")\n        return \"\"\n    }\n    x /= base\n    x %= base\n    return\
    \ fmt.Sprintf(\"%d\", x)\n}\n", "    if base < 10 {\n        fmt.Printf(\"base\
    \ must be less than 10\\n\")\n        return\n    }\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x ", "    if base < 10 {\n \
    \       fmt.Printf(\"base must be less than 10\\n\")\n        return \"\"\n  \
    \  }\n    x /= base\n    x %= base\n    return fmt.Sprintf(\"%d\", x)\n}\n", " \
    \   if base < 2 {\n        fmt.Printf(\"base must be greater than 1\\n\")\n  \
    \      return \"\"\n    }\n    if base > 36 {\n        fmt.Printf(\"base must\
    \ be less than 36\\n\")\n        return \"\"\n    }\n    if x == 0 {\n       \
    \ return \"\"\n    }\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x ", "    if base < 10 {\n        fmt.Printf(\"base must be less than\
    \ 10\\n\")\n        return \"\"\n    }\n    x /= base\n    x %= base\n    return\
    \ fmt.Sprintf(\"%d\", x)\n}\n", "    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x ", "    switch base {\n    case 2:\n        return fmt.Sprintf(\"\
    %v\", x)\n    case 10:\n        return fmt.Sprintf(\"%v\", x)\n    case 16:\n\
    \        return fmt.Sprintf(\"%v\", x)\n    case 10:\n        return fmt.Sprintf(\"\
    %v\", x)\n    case 16:\n        return fmt.Sprintf(\"%v\", x)\n    case 10:\n\
    \        return fmt.Sprintf(\"%v\", x)\n    case 16:\n        return fmt.Sprintf(\"\
    %v\", x)\n    case 10:\n        return fmt.Sprintf(\"%v\", x)\n    case 16:\n\
    \        return fmt.Sprintf(\"%v\", x)\n    case 10:\n        return fmt.Sprintf(\"\
    %v\", x)\n    case 16:\n        return fmt.Sprintf(\"%v\", x)\n    case 10:\n\
    \        return fmt.Sprintf(\"%v\", x)\n    case 16:\n        return fmt.Sprintf(\"\
    %v\", x)\n    case 10:\n        return fmt.Sprintf(\"%v\", x)\n    case 16:\n\
    \        return fmt.Sprintf(\"%v\", x)\n    case 10:\n        return fmt.Sprintf(\"\
    %v\", x)\n    case 16:\n        return fmt.Sprintf(\"%v\", x)\n    case 10:\n\
    \        return fmt.Sprintf(\"%v\", x)\n    case 16:\n        return fmt.Sprintf(\"\
    %v\", x)\n    case 10:\n        return fmt.Sprintf(\"%v\", x)\n    case 16:\n\
    \        return fmt.Sprintf(\"%v\", x)\n    case 10:\n        return fmt.Sprintf(\"\
    %v\", x)\n    case 16:\n        return fmt.Sprintf(\"%v\", x)\n    case 10:\n\
    \        return fmt.Sprintf(\"%v\", x)\n    case 16:\n        return fmt.Sprintf(\"\
    %v\", x)\n    case 10:\n        return fmt.Sprintf(\"%v\", x)\n    case 16:\n\
    \        return fmt.Sprintf(\"%v\", x)\n    case 10:\n        return fmt.Sprintf(\"\
    %v\", x)\n    case 16:\n        return fmt.Sprintf(\"%v\", x)\n    case 10:\n\
    \        return fmt.Sprintf(\"%v\", x)\n    case 16:\n        return fmt.Sprintf(\"\
    %v\", x)\n    case 10:\n        return fmt.Sprintf(\"%v\", x)\n    case 16:\n\
    \        return fmt.Sprintf(\"%v\", x)\n    case 10:\n        return fmt.Sprintf(\"\
    %v\", x)\n    case 16:\n        return fmt.Sprintf(\"%v\", x)\n    case 10:\n\
    \        return fmt.Sprintf(\"%v\", x)\n    case 16:\n        return fmt.Sprintf(\"\
    %v\", x)\n    case 10:\n        return fmt.Sprintf(\"%v\", x)\n    case 16:\n\
    \        return fmt.Sprintf(\"%v\", x)\n    case 10:\n        return fmt.Sprintf(\"\
    %v\", x)\n    case 16:\n        return fmt.Sprintf(\"%v\", x)\n    case 10:\n\
    \        return fmt.Sprintf(\"%v\", x)\n    case 16:\n", "    if base < 10 {\n\
    \        fmt.Println(\"Base must be less than 10\")\n        return \"\"\n   \
    \ }\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    ", "    switch base {\n    case 2:\n        return fmt.Sprintf(\"%v\", x)\n\
    \    case 8:\n        return fmt.Sprintf(\"%v\", x)\n    case 16:\n        return\
    \ fmt.Sprintf(\"%v\", x)\n    case 32:\n        return fmt.Sprintf(\"%v\", x)\n\
    \    case 64:\n        return fmt.Sprintf(\"%v\", x)\n    case 128:\n        return\
    \ fmt.Sprintf(\"%v\", x)\n    case 256:\n        return fmt.Sprintf(\"%v\", x)\n\
    \    case 512:\n        return fmt.Sprintf(\"%v\", x)\n    case 1024:\n      \
    \  return fmt.Sprintf(\"%v\", x)\n    case 2048:\n        return fmt.Sprintf(\"\
    %v\", x)\n    case 4096:\n        return fmt.Sprintf(\"%v\", x)\n    case 8192:\n\
    \        return fmt.Sprintf(\"%v\", x)\n    case 16384:\n        return fmt.Sprintf(\"\
    %v\", x)\n    case 32768:\n        return fmt.Sprintf(\"%v\", x)\n    case 65536:\n\
    \        return fmt.Sprintf(\"%v\", x)\n    case 131072:\n        return fmt.Sprintf(\"\
    %v\", x)\n    case 262144:\n        return fmt.Sprintf(\"%v\", x)\n    case 524288:\n\
    \        return fmt.Sprintf(\"%v\", x)\n    case 1048576:\n        return fmt.Sprintf(\"\
    %v\", x)\n    case 2097152:\n        return fmt.Sprintf(\"%v\", x)\n    case 4194304:\n\
    \        return fmt.Sprintf(\"%v\", x)\n    case 8388608:\n        return fmt.Sprintf(\"\
    %v\", x)\n    case 16777216:\n        return fmt.Sprintf(\"%v\", x)\n    case\
    \ 33554432:\n        return fmt.Sprintf(\"%v\", x)\n    case 67108864:\n     \
    \   return fmt.Sprintf(\"%v\", x)\n    case 134217728:\n        return fmt.Sprintf(\"\
    %v\", x)\n    case 268435456:\n        return fmt.Sprintf(\"%v\", x)\n    case\
    \ 536870912:\n        return fmt.Sprintf(\"%v\", x)\n    case 1073741824:\n  \
    \      return fmt.Sprintf(\"%v\", x)\n    case 2147483648:\n        return fmt.Sprintf(\"\
    %v\", x)\n    case 4294967296:\n        return fmt.Sprintf(\"%v\", x)\n    case\
    \ 8589934592:\n        return fmt.Sprintf(\"%v\", x)\n    case 17179869184:\n\
    \        return fmt.Sprintf(\"%v\", x)\n    case 34359738368:\n        return\
    \ fmt.Sprintf(\"%v\", x)\n    case 68719476736:\n        return fmt.Sprintf(\"\
    %v\", x)\n    case 13", "    if base < 10 {\n        fmt.Println(\"Base must be\
    \ less than 10\")\n        return \"\"\n    }\n    if x == 0 {\n        return\
    \ \"\"\n    }\n    result := \"\"\n    x /= base\n    for i := 0; i < base; i++\
    \ {\n        if x%base == 0 {\n            result += string(i)\n        }\n  \
    \      x /= base\n    }\n    return result\n}\n", "    if base < 10 {\n      \
    \  fmt.Printf(\"base must be less than 10\\n\")\n        return \"\"\n    }\n\
    \    if x == 0 {\n        return \"\"\n    }\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x ", "    if base < 10 {\n        fmt.Println(\"Base must be\
    \ less than 10\")\n        return \"\"\n    }\n    x /= base\n    x %= base\n\
    \    return fmt.Sprintf(\"%d\", x)\n}\n", "    switch base {\n    case 2:\n  \
    \      return fmt.Sprintf(\"%d\", x)\n    case 10:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 16:\n        return fmt.Sprintf(\"%x\", x)\n    case 32:\n\
    \        return fmt.Sprintf(\"%o\", x)\n    case 64:\n        return fmt.Sprintf(\"\
    %x\", x)\n    default:\n        return fmt.Sprintf(\"%d\", x)\n    }\n}\n", " \
    \   switch base {\n    case 2:\n        return fmt.Sprintf(\"%v\", x)\n    case\
    \ 8:\n        return fmt.Sprintf(\"%v\", x)\n    case 16:\n        return fmt.Sprintf(\"\
    %v\", x)\n    case 32:\n        return fmt.Sprintf(\"%v\", x)\n    case 64:\n\
    \        return fmt.Sprintf(\"%v\", x)\n    case 128:\n        return fmt.Sprintf(\"\
    %v\", x)\n    case 256:\n        return fmt.Sprintf(\"%v\", x)\n    case 512:\n\
    \        return fmt.Sprintf(\"%v\", x)\n    case 1024:\n        return fmt.Sprintf(\"\
    %v\", x)\n    case 2048:\n        return fmt.Sprintf(\"%v\", x)\n    case 4096:\n\
    \        return fmt.Sprintf(\"%v\", x)\n    case 8192:\n        return fmt.Sprintf(\"\
    %v\", x)\n    case 16384:\n        return fmt.Sprintf(\"%v\", x)\n    case 32768:\n\
    \        return fmt.Sprintf(\"%v\", x)\n    case 65536:\n        return fmt.Sprintf(\"\
    %v\", x)\n    case 131072:\n        return fmt.Sprintf(\"%v\", x)\n    case 262144:\n\
    \        return fmt.Sprintf(\"%v\", x)\n    case 524288:\n        return fmt.Sprintf(\"\
    %v\", x)\n    case 1048576:\n        return fmt.Sprintf(\"%v\", x)\n    case 2097152:\n\
    \        return fmt.Sprintf(\"%v\", x)\n    case 4194304:\n        return fmt.Sprintf(\"\
    %v\", x)\n    case 8388608:\n        return fmt.Sprintf(\"%v\", x)\n    case 16777216:\n\
    \        return fmt.Sprintf(\"%v\", x)\n    case 33554432:\n        return fmt.Sprintf(\"\
    %v\", x)\n    case 67108864:\n        return fmt.Sprintf(\"%v\", x)\n    case\
    \ 134217728:\n        return fmt.Sprintf(\"%v\", x)\n    case 268435456:\n   \
    \     return fmt.Sprintf(\"%v\", x)\n    case 536870912:\n        return fmt.Sprintf(\"\
    %v\", x)\n    case 1073741824:\n        return fmt.Sprintf(\"%v\", x)\n    case\
    \ 2147483648:\n        return fmt.Sprintf(\"%v\", x)\n    case 4294967296:\n \
    \       return fmt.Sprintf(\"%v\", x)\n    case 8589934592:\n        return fmt.Sprintf(\"\
    %v\", x)\n    case 17179869184:\n        return fmt.Sprintf(\"%v\", x)\n    case\
    \ 34359738368:\n        return fmt.Sprintf(\"%v\", x)\n    case 68719476736:\n\
    \        return fmt.Sprintf(\"%v\", x)\n    case 13", "    switch base {\n   \
    \ case 2:\n        return fmt.Sprintf(\"%d\", x)\n    case 10:\n        return\
    \ fmt.Sprintf(\"%d\", x)\n    case 16:\n        return fmt.Sprintf(\"%d\", x)\n\
    \    case 2:\n        return fmt.Sprintf(\"%d\", x)\n    case 8:\n        return\
    \ fmt.Sprintf(\"%d\", x)\n    case 16:\n        return fmt.Sprintf(\"%d\", x)\n\
    \    case 10:\n        return fmt.Sprintf(\"%d\", x)\n    case 2:\n        return\
    \ fmt.Sprintf(\"%d\", x)\n    case 8:\n        return fmt.Sprintf(\"%d\", x)\n\
    \    case 16:\n        return fmt.Sprintf(\"%d\", x)\n    case 10:\n        return\
    \ fmt.Sprintf(\"%d\", x)\n    case 2:\n        return fmt.Sprintf(\"%d\", x)\n\
    \    case 8:\n        return fmt.Sprintf(\"%d\", x)\n    case 16:\n        return\
    \ fmt.Sprintf(\"%d\", x)\n    case 10:\n        return fmt.Sprintf(\"%d\", x)\n\
    \    case 2:\n        return fmt.Sprintf(\"%d\", x)\n    case 8:\n        return\
    \ fmt.Sprintf(\"%d\", x)\n    case 16:\n        return fmt.Sprintf(\"%d\", x)\n\
    \    case 10:\n        return fmt.Sprintf(\"%d\", x)\n    case 2:\n        return\
    \ fmt.Sprintf(\"%d\", x)\n    case 8:\n        return fmt.Sprintf(\"%d\", x)\n\
    \    case 16:\n        return fmt.Sprintf(\"%d\", x)\n    case 10:\n        return\
    \ fmt.Sprintf(\"%d\", x)\n    case 2:\n        return fmt.Sprintf(\"%d\", x)\n\
    \    case 8:\n        return fmt.Sprintf(\"%d\", x)\n    case 16:\n        return\
    \ fmt.Sprintf(\"%d\", x)\n    case 10:\n        return fmt.Sprintf(\"%d\", x)\n\
    \    case 2:\n        return fmt.Sprintf(\"%d\", x)\n    case 8:\n        return\
    \ fmt.Sprintf(\"%d\", x)\n    case 16:\n        return fmt.Sprintf(\"%d\", x)\n\
    \    case 10:\n        return fmt.Sprintf(\"%d\", x)\n    case 2:\n        return\
    \ fmt.Sprintf(\"%d\", x)\n    case 8:\n        return fmt.Sprintf(\"%d\", x)\n\
    \    case 16:\n        return fmt.Sprintf(\"%d\", x)\n    case 10:\n        return\
    \ fmt.Sprintf(\"%d\", x)\n    case 2:\n        return fmt.Sprintf(\"%d\", x)\n\
    \    case 8:\n        return fmt.Sprintf(\"%d\", x)\n    case 16:\n        return\
    \ fmt.Sprintf(\"%d\", x)\n    case 10:\n        return fmt.Sprintf(\"%d\", x)\n\
    \    case 2:\n        return fmt.Sprintf(\"%d\", x)\n    case 8:\n        return\
    \ fmt.Sprintf(\"%d\", x)\n    case 16:\n        return fmt.Sprintf(\"%d\", x)\n\
    \    case 10:\n        return fmt.Sprintf(\"%d\", x)\n    case 2:\n        return\
    \ fmt.Sprintf(\"%d\", x)\n    case 8:\n        return fmt.Sprintf(\"%d\", x)\n\
    \    case 16:\n        return fmt.Sprintf(\"%d\", x)\n    case 10:\n        return\
    \ fmt.Sprintf(\"%d\", x)\n    case 2:\n        return fmt.Sprintf(\"%d\", x)\n\
    \    case 8:\n        return fmt.Sprintf(\"%d\", x)\n    case 16:\n        return\
    \ fmt.Sprintf(\"%d\", x)\n    case 10:\n        return fmt.Sprintf(\"", "    switch\
    \ base {\n    case 2:\n        return fmt.Sprintf(\"%d\", x)\n    case 10:\n \
    \       return fmt.Sprintf(\"%d\", x)\n    case 16:\n        return fmt.Sprintf(\"\
    %x\", x)\n    case 10:\n        return fmt.Sprintf(\"%x\", x)\n    case 16:\n\
    \        return fmt.Sprintf(\"%X\", x)\n    case 10:\n        return fmt.Sprintf(\"\
    %X\", x)\n    case 16:\n        return fmt.Sprintf(\"%o\", x)\n    case 10:\n\
    \        return fmt.Sprintf(\"%o\", x)\n    case 16:\n        return fmt.Sprintf(\"\
    %e\", x)\n    case 10:\n        return fmt.Sprintf(\"%e\", x)\n    case 16:\n\
    \        return fmt.Sprintf(\"%f\", x)\n    case 10:\n        return fmt.Sprintf(\"\
    %f\", x)\n    case 16:\n        return fmt.Sprintf(\"%g\", x)\n    case 10:\n\
    \        return fmt.Sprintf(\"%g\", x)\n    case 16:\n        return fmt.Sprintf(\"\
    %G\", x)\n    case 10:\n        return fmt.Sprintf(\"%G\", x)\n    case 16:\n\
    \        return fmt.Sprintf(\"%a\", x)\n    case 10:\n        return fmt.Sprintf(\"\
    %a\", x)\n    case 16:\n        return fmt.Sprintf(\"%A\", x)\n    case 10:\n\
    \        return fmt.Sprintf(\"%A\", x)\n    case 16:\n        return fmt.Sprintf(\"\
    %c\", x)\n    case 10:\n        return fmt.Sprintf(\"%c\", x)\n    case 16:\n\
    \        return fmt.Sprintf(\"%C\", x)\n    case 10:\n        return fmt.Sprintf(\"\
    %C\", x)\n    case 16:\n        return fmt.Sprintf(\"%e\", x)\n    case 10:\n\
    \        return fmt.Sprintf(\"%e\", x)\n    case 16:\n        return fmt.Sprintf(\"\
    %g\", x)\n    case 10:\n        return fmt.Sprintf(\"%g\", x)\n    case 16:\n\
    \        return fmt.Sprintf(\"%G\", x)\n    case 10:\n        return fmt.Sprintf(\"\
    %G\", x)\n    case 16:\n        return fmt.Sprintf(\"%o\", x)\n    case 10:\n\
    \        return fmt.Sprintf(\"%o\", x)\n    case 16:\n        return fmt.Sprintf(\"\
    %e\", x)\n    case 10:\n        return fmt.Sprintf(\"%e\", x)\n    case 16:\n\
    \        return fmt.Sprintf(\"%f\", x)\n    case 10:\n        return fmt.Sprintf(\"\
    %f\", x)\n    case 16:\n        return fmt.Sprintf(\"%g\", x)\n    case 10:\n\
    \        return fmt.Sprintf(\"%g\", x)\n    case 16:\n        return fmt.Sprintf(\"\
    %G\", x)\n    case 10:\n        return fmt.Sprintf(\"%G\", x)\n    case 16:\n\
    \        return fmt.Sprintf(\"%a\", x)\n    case 10:\n        return fmt.Sprintf(\"\
    %a\", x)\n    case 16:\n        return fmt.Sprintf(\"%A\", x)\n    case 10:\n\
    \        return fmt.", "    switch base {\n    case 2:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 8:\n        return fmt.Sprintf(\"%o\", x)\n    case 16:\n \
    \       return fmt.Sprintf(\"%x\", x)\n    case 32:\n        return fmt.Sprintf(\"\
    %X\", x)\n    case 64:\n        return fmt.Sprintf(\"%llx\", x)\n    default:\n\
    \        return fmt.Sprintf(\"%d\", x)\n    }\n}\n", "    if base < 10 {\n   \
    \     fmt.Printf(\"Base must be less than 10.\\n\")\n        return\n    }\n \
    \   x /= base\n    x %= base\n    return fmt.Sprintf(\"%d\", x)\n}\n", "    switch\
    \ base {\n    case 2:\n        return fmt.Sprintf(\"%d\", x)\n    case 8:\n  \
    \      return fmt.Sprintf(\"%o\", x)\n    case 16:\n        return fmt.Sprintf(\"\
    %x\", x)\n    case 32:\n        return fmt.Sprintf(\"%X\", x)\n    case 64:\n\
    \        return fmt.Sprintf(\"%llx\", x)\n    default:\n        return fmt.Sprintf(\"\
    %d\", x)\n    }\n}\n", "    if base < 10 {\n        fmt.Println(\"Base must be\
    \ less than 10\")\n        return \"\"\n    }\n    result := \"\"\n    switch\
    \ base {\n    case 2:\n        result = fmt.Sprintf(\"%d\", x)\n    case 8:\n\
    \        result = fmt.Sprintf(\"%o\", x)\n    case 16:\n        result = fmt.Sprintf(\"\
    %x\", x)\n    case 32:\n        result = fmt.Sprintf(\"%X\", x)\n    case 64:\n\
    \        result = fmt.Sprintf(\"%llx\", x)\n    case 128:\n        result = fmt.Sprintf(\"\
    %q\", x)\n    default:\n        fmt.Println(\"Base must be less than 128\")\n\
    \        return \"\"\n    }\n    return result\n}\n", "    if base < 10 {\n  \
    \      fmt.Printf(\"Base must be less than 10.\\n\")\n        return\n    }\n\
    \    if x == 0 {\n        return fmt.Sprintf(\"0\")\n    }\n    x /= base\n  \
    \  x %= base\n    if x == 0 {\n        return fmt.Sprintf(\"%d\", x)\n    }\n\
    \    return fmt.Sprintf(\"%d%s\", x, change_base(x / base, base))\n}\n", "   \
    \ switch base {\n    case 2:\n        return fmt.Sprintf(\"%d\", x)\n    case\
    \ 10:\n        return fmt.Sprintf(\"%d\", x)\n    case 16:\n        return fmt.Sprintf(\"\
    %x\", x)\n    case 32:\n        return fmt.Sprintf(\"%o\", x)\n    case 64:\n\
    \        return fmt.Sprintf(\"%x\", x)\n    case 128:\n        return fmt.Sprintf(\"\
    %X\", x)\n    case 256:\n        return fmt.Sprintf(\"%o\", x)\n    case 512:\n\
    \        return fmt.Sprintf(\"%x\", x)\n    case 1024:\n        return fmt.Sprintf(\"\
    %X\", x)\n    case 2048:\n        return fmt.Sprintf(\"%o\", x)\n    case 4096:\n\
    \        return fmt.Sprintf(\"%x\", x)\n    case 8192:\n        return fmt.Sprintf(\"\
    %X\", x)\n    case 16384:\n        return fmt.Sprintf(\"%o\", x)\n    case 32768:\n\
    \        return fmt.Sprintf(\"%x\", x)\n    case 65536:\n        return fmt.Sprintf(\"\
    %X\", x)\n    case 131072:\n        return fmt.Sprintf(\"%o\", x)\n    case 262144:\n\
    \        return fmt.Sprintf(\"%x\", x)\n    case 524288:\n        return fmt.Sprintf(\"\
    %X\", x)\n    case 1048576:\n        return fmt.Sprintf(\"%o\", x)\n    case 2097152:\n\
    \        return fmt.Sprintf(\"%x\", x)\n    case 4194304:\n        return fmt.Sprintf(\"\
    %X\", x)\n    case 8388608:\n        return fmt.Sprintf(\"%o\", x)\n    case 16777216:\n\
    \        return fmt.Sprintf(\"%x\", x)\n    case 33554432:\n        return fmt.Sprintf(\"\
    %X\", x)\n    case 67108864:\n        return fmt.Sprintf(\"%o\", x)\n    case\
    \ 134217728:\n        return fmt.Sprintf(\"%x\", x)\n    case 268435456:\n   \
    \     return fmt.Sprintf(\"%X\", x)\n    case 536870912:\n        return fmt.Sprintf(\"\
    %o\", x)\n    case 1073741824:\n        return fmt.Sprintf(\"%x\", x)\n    case\
    \ 2147483648:\n        return fmt.Sprintf(\"%X\", x)\n    case 4294967296:\n \
    \       return fmt.Sprintf(\"%o\", x)\n    case 8589934592:\n        return fmt.Sprintf(\"\
    %x\", x)\n    case 17179869184:\n        return fmt.Sprintf(\"%X\", x)\n    case\
    \ 34359738368:\n        return fmt.Sprintf(\"%o\", x)\n    case 68719476736:\n\
    \        return fmt.Sprintf(\"%x\", x)\n    case 137438953472:\n        return\
    \ fmt.Sprintf(\"%o\", x)\n    case ", "    switch base {\n    case 2:\n      \
    \  return fmt.Sprintf(\"%d\", x)\n    case 8:\n        return fmt.Sprintf(\"%o\"\
    , x)\n    case 16:\n        return fmt.Sprintf(\"%x\", x)\n    case 32:\n    \
    \    return fmt.Sprintf(\"%X\", x)\n    case 64:\n        return fmt.Sprintf(\"\
    %llx\", x)\n    default:\n        return fmt.Sprintf(\"%d\", x)\n    }\n}\n",
  "    if base < 10 {\n        fmt.Printf(\"base must be less than 10\\n\")\n    \
    \    return \"\"\n    }\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    ", "    if base < 10 {\n        fmt.Printf(\"base must\
    \ be less than 10\\n\")\n        return \"\"\n    }\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    ", "    x /= base\n    x %=\
    \ base\n    return fmt.Sprintf(\"%d\", x)\n}\n", "    if base < 10 {\n       \
    \ fmt.Printf(\"base must be less than 10\\n\")\n        return \"\"\n    }\n \
    \   x /= base\n    x %= base\n    return fmt.Sprintf(\"%d\", x)\n}\n", "    switch\
    \ base {\n    case 2:\n        return fmt.Sprintf(\"%d\", x)\n    case 10:\n \
    \       return fmt.Sprintf(\"%d\", x)\n    case 16:\n        return fmt.Sprintf(\"\
    %x\", x)\n    case 32:\n        return fmt.Sprintf(\"%o\", x)\n    case 64:\n\
    \        return fmt.Sprintf(\"%x\", x)\n    case 128:\n        return fmt.Sprintf(\"\
    %llx\", x)\n    case 256:\n        return fmt.Sprintf(\"%x\", x)\n    case 512:\n\
    \        return fmt.Sprintf(\"%llx\", x)\n    case 1024:\n        return fmt.Sprintf(\"\
    %llx\", x)\n    case 2048:\n        return fmt.Sprintf(\"%llx\", x)\n    case\
    \ 4096:\n        return fmt.Sprintf(\"%llx\", x)\n    case 8192:\n        return\
    \ fmt.Sprintf(\"%llx\", x)\n    case 16384:\n        return fmt.Sprintf(\"%llx\"\
    , x)\n    case 32768:\n        return fmt.Sprintf(\"%llx\", x)\n    case 65536:\n\
    \        return fmt.Sprintf(\"%llx\", x)\n    case 131072:\n        return fmt.Sprintf(\"\
    %llx\", x)\n    case 262144:\n        return fmt.Sprintf(\"%llx\", x)\n    case\
    \ 524288:\n        return fmt.Sprintf(\"%llx\", x)\n    case 1048576:\n      \
    \  return fmt.Sprintf(\"%llx\", x)\n    case 2097152:\n        return fmt.Sprintf(\"\
    %llx\", x)\n    case 4194304:\n        return fmt.Sprintf(\"%llx\", x)\n    case\
    \ 8388608:\n        return fmt.Sprintf(\"%llx\", x)\n    case 16777216:\n    \
    \    return fmt.Sprintf(\"%llx\", x)\n    case 33554432:\n        return fmt.Sprintf(\"\
    %llx\", x)\n    case 67108864:\n        return fmt.Sprintf(\"%llx\", x)\n    case\
    \ 134217728:\n        return fmt.Sprintf(\"%llx\", x)\n    case 268435456:\n \
    \       return fmt.Sprintf(\"%llx\", x)\n    case 536870912:\n        return fmt.Sprintf(\"\
    %llx\", x)\n    case 1073741824:\n        return fmt.Sprintf(\"%llx\", x)\n  \
    \  case 2147483648:\n        return fmt.Sprintf(\"%llx\", x)\n    case 4294967296:\n\
    \        return fmt.Sprintf(\"%llx\", x)\n    case 8589934592:\n        return\
    \ fmt.Sprintf(\"%llx\", x)\n    case 17179869184:\n        return fmt.Sprintf(\"\
    %llx\", x)\n    case 34359738368:\n        return fmt.Sprintf(\"%llx\", x)\n \
    \   case 68719476736:\n        return fmt.Sprintf(\"%llx\", x)\n    case 137438953472:\n\
    \        return ", "    if x < base {\n        return fmt.Sprintf(\"%d\", x)\n\
    \    }\n    x /= base\n    x %= base\n    return fmt.Sprintf(\"%d%v\", x, base)\n\
    }\n", "    if base < 10 {\n        fmt.Printf(\"base must be less than 10\\n\"\
    )\n        return \"\"\n    }\n    if x == 0 {\n        return \"\"\n    }\n \
    \   x /= base\n    x %= base\n    return fmt.Sprintf(\"%d\", x)\n}\n", "    if\
    \ base < 10 {\n        fmt.Println(\"Base must be less than 10\")\n        return\
    \ \"\"\n    }\n    x /= base\n    x %= base\n    return fmt.Sprintf(\"%d\", x)\n\
    }\n", "    switch base {\n    case 2:\n        return fmt.Sprintf(\"%d\", x)\n\
    \    case 10:\n        return fmt.Sprintf(\"%d\", x)\n    case 16:\n        return\
    \ fmt.Sprintf(\"%x\", x)\n    case 32:\n        return fmt.Sprintf(\"%o\", x)\n\
    \    case 64:\n        return fmt.Sprintf(\"%x\", x)\n    case 128:\n        return\
    \ fmt.Sprintf(\"%llx\", x)\n    case 256:\n        return fmt.Sprintf(\"%x\",\
    \ x)\n    case 512:\n        return fmt.Sprintf(\"%llx\", x)\n    case 1024:\n\
    \        return fmt.Sprintf(\"%llx\", x)\n    case 2048:\n        return fmt.Sprintf(\"\
    %llx\", x)\n    case 4096:\n        return fmt.Sprintf(\"%llx\", x)\n    case\
    \ 8192:\n        return fmt.Sprintf(\"%llx\", x)\n    case 16384:\n        return\
    \ fmt.Sprintf(\"%llx\", x)\n    case 32768:\n        return fmt.Sprintf(\"%llx\"\
    , x)\n    case 65536:\n        return fmt.Sprintf(\"%llx\", x)\n    case 131072:\n\
    \        return fmt.Sprintf(\"%llx\", x)\n    case 262144:\n        return fmt.Sprintf(\"\
    %llx\", x)\n    case 524288:\n        return fmt.Sprintf(\"%llx\", x)\n    case\
    \ 1048576:\n        return fmt.Sprintf(\"%llx\", x)\n    case 2097152:\n     \
    \   return fmt.Sprintf(\"%llx\", x)\n    case 4194304:\n        return fmt.Sprintf(\"\
    %llx\", x)\n    case 8388608:\n        return fmt.Sprintf(\"%llx\", x)\n    case\
    \ 16777216:\n        return fmt.Sprintf(\"%llx\", x)\n    case 33554432:\n   \
    \     return fmt.Sprintf(\"%llx\", x)\n    case 67108864:\n        return fmt.Sprintf(\"\
    %llx\", x)\n    case 134217728:\n        return fmt.Sprintf(\"%llx\", x)\n   \
    \ case 268435456:\n        return fmt.Sprintf(\"%llx\", x)\n    case 536870912:\n\
    \        return fmt.Sprintf(\"%llx\", x)\n    case 1073741824:\n        return\
    \ fmt.Sprintf(\"%llx\", x)\n    case 2147483648:\n        return fmt.Sprintf(\"\
    %llx\", x)\n    case 4294967296:\n        return fmt.Sprintf(\"%llx\", x)\n  \
    \  case 8589934592:\n        return fmt.Sprintf(\"%llx\", x)\n    case 17179869184:\n\
    \        return fmt.Sprintf(\"%llx\", x)\n    case 34359738368:\n        return\
    \ fmt.Sprintf(\"%llx\", x)\n    case 68719476736:\n        return fmt.Sprintf(\"\
    %llx\", x)\n    case 137438953472:\n        return ", "    switch base {\n   \
    \ case 2:\n        return fmt.Sprintf(\"%d\", x)\n    case 8:\n        return\
    \ fmt.Sprintf(\"%o\", x)\n    case 16:\n        return fmt.Sprintf(\"%x\", x)\n\
    \    case 32:\n        return fmt.Sprintf(\"%lx\", x)\n    default:\n        return\
    \ fmt.Sprintf(\"%d\", x)\n    }\n}\n", "    if base < 2 {\n        fmt.Println(\"\
    Base must be greater than 1\")\n        return \"\"\n    }\n    x /= base\n  \
    \  x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= ", "    if\
    \ base < 10 {\n        fmt.Printf(\"base must be less than 10\\n\")\n        return\
    \ \"\"\n    }\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    ", "    result := \"\"\n    switch base {\n    case 10:\n  \
    \      result = fmt.Sprintf(\"%d\", x)\n    case 16:\n        result = fmt.Sprintf(\"\
    %x\", x)\n    case 2:\n        result = fmt.Sprintf(\"%o\", x)\n    case 8:\n\
    \        result = fmt.Sprintf(\"%b\", x)\n    default:\n        fmt.Printf(\"\
    base %d is not supported\\n\", base)\n    }\n    return result\n}\n", "    if\
    \ base < 2 {\n        fmt.Println(\"Base must be greater than 1\")\n        return\n\
    \    }\n    if base > 10 {\n        fmt.Println(\"Base must be less than 10\"\
    )\n        return\n    }\n    if x == 0 {\n        fmt.Println(\"Cannot change\
    \ base of 0\")\n        return\n    }\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    ", "    if base < 10 {\n        fmt.Println(\"Base must be less\
    \ than 10\")\n        return \"\"\n    }\n    switch base {\n    case 2:\n   \
    \     return fmt.Sprintf(\"%d\", x)\n    case 8:\n        return fmt.Sprintf(\"\
    %o\", x)\n    case 16:\n        return fmt.Sprintf(\"%x\", x)\n    case 32:\n\
    \        return fmt.Sprintf(\"%X\", x)\n    case 64:\n        return fmt.Sprintf(\"\
    %llx\", x)\n    default:\n        return \"\"\n    }\n}\n", "    if base < 10\
    \ {\n        fmt.Printf(\"Base must be less than 10\\n\")\n        return \"\"\
    \n    }\n    x /= base\n    x %= base\n    return fmt.Sprintf(\"%d\", x)\n}\n",
  "    if base < 2 {\n        fmt.Println(\"Base must be greater than 1\")\n     \
    \   return \"\"\n    }\n    x /= base\n    x %= base\n    if x<0 {\n        x\
    \ *= -1\n    }\n    x /= base\n    x %= base\n    if x<0 {\n        x *= -1\n\
    \    }\n    x /= base\n    x %= base\n    if x<0 {\n        x *= -1\n    }\n \
    \   x /= base\n    x %= base\n    if x<0 {\n        x *= -1\n    }\n    x /= base\n\
    \    x %= base\n    if x<0 {\n        x *= -1\n    }\n    x /= base\n    x %=\
    \ base\n    if x<0 {\n        x *= -1\n    }\n    x /= base\n    x %= base\n \
    \   if x<0 {\n        x *= -1\n    }\n    x /= base\n    x %= base\n    if x<0\
    \ {\n        x *= -1\n    }\n    x /= base\n    x %= base\n    if x<0 {\n    \
    \    x *= -1\n    }\n    x /= base\n    x %= base\n    if x<0 {\n        x *=\
    \ -1\n    }\n    x /= base\n    x %= base\n    if x<0 {\n        x *= -1\n   \
    \ }\n    x /= base\n    x %= base\n    if x<0 {\n        x *= -1\n    }\n    x\
    \ /= base\n    x %= base\n    if x<0 {\n        x *= -1\n    }\n    x /= base\n\
    \    x %= base\n    if x<0 {\n        x *= -1\n    }\n    x /= base\n    x %=\
    \ base\n    if x<0 {\n        x *= -1\n    }\n    x /= base\n    x %= base\n \
    \   if x<0 {\n        x *= -1\n    }\n    x /= base\n    x %= base\n    if x<0\
    \ {\n        x *= -1\n    }\n    x /= base\n    x %= base\n    if x<0 {\n    \
    \    x *= -1\n    }\n    x /= base\n    x %= base\n    if x<0 {\n        x *=\
    \ -1\n    }\n    x /= base\n    x %= base\n    if x<0 {\n        x *= -1\n   \
    \ }\n    x /= base\n    x %= base\n    if x<0 {\n        x *= -1\n    }\n    x\
    \ /= base\n    x %= base\n    if x<0 {\n        x *= -1\n    }\n    x /= base\n\
    \    x %= base\n    if x<0 {\n        x *= -1\n    }\n    x /= base\n    x %=\
    \ base\n", "    switch base {\n    case 2:\n        return fmt.Sprintf(\"%d\"\
    , x)\n    case 10:\n        return fmt.Sprintf(\"%d\", x)\n    case 16:\n    \
    \    return fmt.Sprintf(\"%x\", x)\n    case 32:\n        return fmt.Sprintf(\"\
    %o\", x)\n    case 64:\n        return fmt.Sprintf(\"%x\", x)\n    case 128:\n\
    \        return fmt.Sprintf(\"%X\", x)\n    case 256:\n        return fmt.Sprintf(\"\
    %o\", x)\n    case 512:\n        return fmt.Sprintf(\"%x\", x)\n    case 1024:\n\
    \        return fmt.Sprintf(\"%X\", x)\n    case 2048:\n        return fmt.Sprintf(\"\
    %o\", x)\n    case 4096:\n        return fmt.Sprintf(\"%x\", x)\n    case 8192:\n\
    \        return fmt.Sprintf(\"%X\", x)\n    case 16384:\n        return fmt.Sprintf(\"\
    %o\", x)\n    case 32768:\n        return fmt.Sprintf(\"%x\", x)\n    case 65536:\n\
    \        return fmt.Sprintf(\"%X\", x)\n    case 131072:\n        return fmt.Sprintf(\"\
    %o\", x)\n    case 262144:\n        return fmt.Sprintf(\"%x\", x)\n    case 524288:\n\
    \        return fmt.Sprintf(\"%X\", x)\n    case 1048576:\n        return fmt.Sprintf(\"\
    %o\", x)\n    case 2097152:\n        return fmt.Sprintf(\"%x\", x)\n    case 4194304:\n\
    \        return fmt.Sprintf(\"%X\", x)\n    case 8388608:\n        return fmt.Sprintf(\"\
    %o\", x)\n    case 16777216:\n        return fmt.Sprintf(\"%x\", x)\n    case\
    \ 33554432:\n        return fmt.Sprintf(\"%X\", x)\n    case 67108864:\n     \
    \   return fmt.Sprintf(\"%o\", x)\n    case 134217728:\n        return fmt.Sprintf(\"\
    %x\", x)\n    case 268435456:\n        return fmt.Sprintf(\"%X\", x)\n    case\
    \ 536870912:\n        return fmt.Sprintf(\"%o\", x)\n    case 1073741824:\n  \
    \      return fmt.Sprintf(\"%x\", x)\n    case 2147483648:\n        return fmt.Sprintf(\"\
    %X\", x)\n    case 4294967296:\n        return fmt.Sprintf(\"%o\", x)\n    case\
    \ 8589934592:\n        return fmt.Sprintf(\"%x\", x)\n    case 17179869184:\n\
    \        return fmt.Sprintf(\"%X\", x)\n    case 34359738368:\n        return\
    \ fmt.Sprintf(\"%o\", x)\n    case 68719476736:\n        return fmt.Sprintf(\"\
    %x\", x)\n    case 137438953472:\n        return fmt.Sprintf(\"%o\", x)\n    case ",
  "    if base < 2 {\n        fmt.Println(\"Base must be greater than 1.\")\n    \
    \    return \"\"\n    }\n    x /= base\n    x %= base\n    if x < 10 {\n     \
    \   return fmt.Sprintf(\"%d\", x)\n    }\n    x /= base\n    x %= base\n    if\
    \ x < 10 {\n        return fmt.Sprintf(\"%d\", x)\n    }\n    x /= base\n    x\
    \ %= base\n    if x < 10 {\n        return fmt.Sprintf(\"%d\", x)\n    }\n   \
    \ x /= base\n    x %= base\n    if x < 10 {\n        return fmt.Sprintf(\"%d\"\
    , x)\n    }\n    x /= base\n    x %= base\n    if x < 10 {\n        return fmt.Sprintf(\"\
    %d\", x)\n    }\n    x /= base\n    x %= base\n    if x < 10 {\n        return\
    \ fmt.Sprintf(\"%d\", x)\n    }\n    x /= base\n    x %= base\n    if x < 10 {\n\
    \        return fmt.Sprintf(\"%d\", x)\n    }\n    x /= base\n    x %= base\n\
    \    if x < 10 {\n        return fmt.Sprintf(\"%d\", x)\n    }\n    x /= base\n\
    \    x %= base\n    if x < 10 {\n        return fmt.Sprintf(\"%d\", x)\n    }\n\
    \    x /= base\n    x %= base\n    if x < 10 {\n        return fmt.Sprintf(\"\
    %d\", x)\n    }\n    x /= base\n    x %= base\n    if x < 10 {\n        return\
    \ fmt.Sprintf(\"%d\", x)\n    }\n    x /= base\n    x %= base\n    if x < 10 {\n\
    \        return fmt.Sprintf(\"%d\", x)\n    }\n    x /= base\n    x %= base\n\
    \    if x < 10 {\n        return fmt.Sprintf(\"%d\", x)\n    }\n    x /= base\n\
    \    x %= base\n    if x < 10 {\n        return fmt.Sprintf(\"%d\", x)\n    }\n\
    \    x /= base\n    x %= base\n    if x < 10 {\n        return fmt.Sprintf(\"\
    %d\", x)\n    }\n    x /= base\n    x %= base\n    if x < 10 {\n        return\
    \ fmt.Sprintf(\"%d\", x)\n    }\n    x /= base\n    x %= base\n    if x < 10 {\n\
    \        return fmt.Sprintf(\"%d\", x)\n    }\n    x /= base\n    x %= base\n\
    \    if x < 10 {\n        return fmt.Sprintf(\"%d\", x)\n    }\n    x /= base\n\
    \    x %= base\n    if x < 10 {\n        return fmt.Sprintf(\"%d\", x)\n    }\n\
    \    x /= base\n    x %= base\n    if x < 10 {\n        return fmt.Sprintf(\"\
    %d\", x)\n    }\n    x /= base\n    x %= base\n    if x < ", "    if base < 10\
    \ {\n        fmt.Printf(\"base must be less than 10\\n\")\n        return \"\"\
    \n    }\n    if x == 0 {\n        return \"\"\n    }\n    if x == 1 {\n      \
    \  return fmt.Sprintf(\"%d\", x)\n    }\n    if x == 2 {\n        return fmt.Sprintf(\"\
    %d\", x)\n    }\n    if x == 3 {\n        return fmt.Sprintf(\"%d\", x)\n    }\n\
    \    if x == 4 {\n        return fmt.Sprintf(\"%d\", x)\n    }\n    if x == 5\
    \ {\n        return fmt.Sprintf(\"%d\", x)\n    }\n    if x == 6 {\n        return\
    \ fmt.Sprintf(\"%d\", x)\n    }\n    if x == 7 {\n        return fmt.Sprintf(\"\
    %d\", x)\n    }\n    if x == 8 {\n        return fmt.Sprintf(\"%d\", x)\n    }\n\
    \    if x == 9 {\n        return fmt.Sprintf(\"%d\", x)\n    }\n    if x == 10\
    \ {\n        return fmt.Sprintf(\"%d\", x)\n    }\n    if x == 11 {\n        return\
    \ fmt.Sprintf(\"%d\", x)\n    }\n    if x == 12 {\n        return fmt.Sprintf(\"\
    %d\", x)\n    }\n    if x == 13 {\n        return fmt.Sprintf(\"%d\", x)\n   \
    \ }\n    if x == 14 {\n        return fmt.Sprintf(\"%d\", x)\n    }\n    if x\
    \ == 15 {\n        return fmt.Sprintf(\"%d\", x)\n    }\n    if x == 16 {\n  \
    \      return fmt.Sprintf(\"%d\", x)\n    }\n    if x == 17 {\n        return\
    \ fmt.Sprintf(\"%d\", x)\n    }\n    if x == 18 {\n        return fmt.Sprintf(\"\
    %d\", x)\n    }\n    if x == 19 {\n        return fmt.Sprintf(\"%d\", x)\n   \
    \ }\n    if x == 20 {\n        return fmt.Sprintf(\"%d\", x)\n    }\n    if x\
    \ == 21 {\n        return fmt.Sprintf(\"%d\", x)\n    }\n    if x == 22 {\n  \
    \      return fmt.Sprintf(\"%d\", x)\n    }\n    if x == 23 {\n        return\
    \ fmt.Sprintf(\"%d\", x)\n    }\n    if x == 24 {\n        return fmt.Sprintf(\"\
    %d\", x)\n    }\n    if x == 25 {\n        return fmt.Sprintf(\"%d\", x)\n   \
    \ }\n    if x == 26 {\n        return fmt.Sprintf(\"%d\", x)\n    }\n    if x\
    \ == 27 {\n        return fmt.Sprintf(\"%d\", x)\n    }\n    if x == 28 {\n  \
    \      return fmt.Sprintf(\"%d\", x)\n    }\n    if x == 29 {\n        return\
    \ fmt.Sprintf(\"%d\", x)\n    }\n    if x == 30 {\n        return fmt.Sprintf(\"\
    %d\", x)\n    }\n    if x == 31 {\n        return fmt.Sprintf(\"%d\", x)\n   \
    \ }\n    if x == 32 {\n        return fmt.Sprintf(\"%d\", x)\n    }\n    if x\
    \ == 33 {\n        return fmt.Sprintf(\"%d\", x)\n    }\n    if x == 34 {\n  \
    \      return fmt.Sprintf(\"%d\", x)\n    }\n    if x == 35 {\n        return\
    \ fmt.Sprintf(\"%d\", ", "    switch base {\n    case 2:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 10:\n        return fmt.Sprintf(\"%d\", x)\n    case 16:\n\
    \        return fmt.Sprintf(\"%x\", x)\n    case 32:\n        return fmt.Sprintf(\"\
    %o\", x)\n    case 64:\n        return fmt.Sprintf(\"%x\", x)\n    default:\n\
    \        return fmt.Sprintf(\"%d\", x)\n    }\n}\n", "    result := \"\"\n   \
    \ switch base {\n    case 10:\n        result = fmt.Sprintf(\"%d\", x)\n    case\
    \ 16:\n        result = fmt.Sprintf(\"%x\", x)\n    case 2:\n        result =\
    \ fmt.Sprintf(\"%o\", x)\n    case 8:\n        result = fmt.Sprintf(\"%b\", x)\n\
    \    case 16:\n        result = fmt.Sprintf(\"%hx\", x)\n    case 32:\n      \
    \  result = fmt.Sprintf(\"%x\", x)\n    case 64:\n        result = fmt.Sprintf(\"\
    %llx\", x)\n    case 128:\n        result = fmt.Sprintf(\"%qx\", x)\n    case\
    \ 256:\n        result = fmt.Sprintf(\"%llx\", x)\n    case 512:\n        result\
    \ = fmt.Sprintf(\"%nqx\", x)\n    case 1024:\n        result = fmt.Sprintf(\"\
    %nqx\", x)\n    case 2048:\n        result = fmt.Sprintf(\"%nqx\", x)\n    case\
    \ 4096:\n        result = fmt.Sprintf(\"%nqx\", x)\n    case 8192:\n        result\
    \ = fmt.Sprintf(\"%nqx\", x)\n    case 16384:\n        result = fmt.Sprintf(\"\
    %nqx\", x)\n    case 32768:\n        result = fmt.Sprintf(\"%nqx\", x)\n    case\
    \ 65536:\n        result = fmt.Sprintf(\"%nqx\", x)\n    case 131072:\n      \
    \  result = fmt.Sprintf(\"%nqx\", x)\n    case 262144:\n        result = fmt.Sprintf(\"\
    %nqx\", x)\n    case 524288:\n        result = fmt.Sprintf(\"%nqx\", x)\n    case\
    \ 1048576:\n        result = fmt.Sprintf(\"%nqx\", x)\n    case 2097152:\n   \
    \     result = fmt.Sprintf(\"%nqx\", x)\n    case 4194304:\n        result = fmt.Sprintf(\"\
    %nqx\", x)\n    case 8388608:\n        result = fmt.Sprintf(\"%nqx\", x)\n   \
    \ case 16777216:\n        result = fmt.Sprintf(\"%nqx\", x)\n    case 33554432:\n\
    \        result = fmt.Sprintf(\"%nqx\", x)\n    case 67108864:\n        result\
    \ = fmt.Sprintf(\"%nqx\", x)\n    case 134217728:\n        result = fmt.Sprintf(\"\
    %nqx\", x)\n    case 268435456:\n        result = fmt.Sprintf(\"%nqx\", x)\n \
    \   case 536870912:\n        result = fmt.Sprintf(\"%nqx\", x)\n    case 1073741824:\n\
    \        result = fmt.Sprintf(\"%nqx\", x)\n    case 2147483648:\n        result\
    \ = fmt.Sprintf(\"%nqx\", x)\n    case 4294967296:\n        result = fmt.Sprintf(\"\
    %nqx\", x)\n    case 8589934592:\n        result = fmt.Sprintf(\"%nqx\", x)\n\
    \    case 17179869", "    if base < 10 {\n        fmt.Printf(\"base must be less\
    \ than 10\\n\")\n    }\n    if x == 0 {\n        return \"\"\n    }\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n", "    switch base {\n \
    \   case 2:\n        return fmt.Sprintf(\"%v\", x)\n    case 8:\n        return\
    \ fmt.Sprintf(\"%v\", x/10)\n    case 16:\n        return fmt.Sprintf(\"%v\",\
    \ x/100)\n    case 32:\n        return fmt.Sprintf(\"%v\", x/1000)\n    case 64:\n\
    \        return fmt.Sprintf(\"%v\", x/10000)\n    case 128:\n        return fmt.Sprintf(\"\
    %v\", x/100000)\n    case 256:\n        return fmt.Sprintf(\"%v\", x/1000000)\n\
    \    case 512:\n        return fmt.Sprintf(\"%v\", x/10000000)\n    case 1024:\n\
    \        return fmt.Sprintf(\"%v\", x/100000000)\n    case 2048:\n        return\
    \ fmt.Sprintf(\"%v\", x/1000000000)\n    case 4096:\n        return fmt.Sprintf(\"\
    %v\", x/10000000000)\n    case 8192:\n        return fmt.Sprintf(\"%v\", x/100000000000)\n\
    \    case 16384:\n        return fmt.Sprintf(\"%v\", x/1000000000000)\n    case\
    \ 32768:\n        return fmt.Sprintf(\"%v\", x/10000000000000)\n    case 65536:\n\
    \        return fmt.Sprintf(\"%v\", x/100000000000000)\n    case 131072:\n   \
    \     return fmt.Sprintf(\"%v\", x/1000000000000000)\n    case 262144:\n     \
    \   return fmt.Sprintf(\"%v\", x/10000000000000000)\n    case 524288:\n      \
    \  return fmt.Sprintf(\"%v\", x/100000000000000000)\n    case 1048576:\n     \
    \   return fmt.Sprintf(\"%v\", x/1000000000000000000)\n    case 2097152:\n   \
    \     return fmt.Sprintf(\"%v\", x/10000000000000000000)\n    case 4194304:\n\
    \        return fmt.Sprintf(\"%v\", x/100000000000000000000)\n    case 8388608:\n\
    \        return fmt.Sprintf(\"%v\", x/1000000000000000000000)\n    case 16777216:\n\
    \        return fmt.Sprintf(\"%v\", x/10000000000000000000000)\n    case 33554432:\n\
    \        return fmt.Sprintf(\"%v\", x/100000000000000000000000)\n    case 67108864:\n\
    \        return fmt.Sprintf(\"%v\", x/1000000000000000000000000)\n    case 134217728:\n\
    \        return fmt.Sprintf(\"%v\", x/10000000000000000000000000)\n    case 268435456:\n\
    \        return fmt.Sprintf(\"%v\", x/100000000000000000000000000)\n    case 536870912:\n\
    \        return fmt.Sprintf(\"%v\", x/1000000000000000000000000000)\n    case\
    \ 1073741824:\n        return fmt.Sprintf(\"%v\", x/10000000000000000000000000000)\n\
    \    case 2147483648:\n        return fmt.Sprintf(\"%v\", x/1000000000000000000",
  "    if base < 10 {\n        fmt.Printf(\"base must be less than 10\\n\")\n    \
    \    return \"\"\n    }\n    x /= base\n    x %= base\n    if x == 0 {\n     \
    \   return \"\"\n    }\n    x /= base\n    x %= base\n    if x == 0 {\n      \
    \  return \"\"\n    }\n    x /= base\n    x %= base\n    if x == 0 {\n       \
    \ return \"\"\n    }\n    x /= base\n    x %= base\n    if x == 0 {\n        return\
    \ \"\"\n    }\n    x /= base\n    x %= base\n    if x == 0 {\n        return \"\
    \"\n    }\n    x /= base\n    x %= base\n    if x == 0 {\n        return \"\"\n\
    \    }\n    x /= base\n    x %= base\n    if x == 0 {\n        return \"\"\n \
    \   }\n    x /= base\n    x %= base\n    if x == 0 {\n        return \"\"\n  \
    \  }\n    x /= base\n    x %= base\n    if x == 0 {\n        return \"\"\n   \
    \ }\n    x /= base\n    x %= base\n    if x == 0 {\n        return \"\"\n    }\n\
    \    x /= base\n    x %= base\n    if x == 0 {\n        return \"\"\n    }\n \
    \   x /= base\n    x %= base\n    if x == 0 {\n        return \"\"\n    }\n  \
    \  x /= base\n    x %= base\n    if x == 0 {\n        return \"\"\n    }\n   \
    \ x /= base\n    x %= base\n    if x == 0 {\n        return \"\"\n    }\n    x\
    \ /= base\n    x %= base\n    if x == 0 {\n        return \"\"\n    }\n    x /=\
    \ base\n    x %= base\n    if x == 0 {\n        return \"\"\n    }\n    x /= base\n\
    \    x %= base\n    if x == 0 {\n        return \"\"\n    }\n    x /= base\n \
    \   x %= base\n    if x == 0 {\n        return \"\"\n    }\n    x /= base\n  \
    \  x %= base\n    if x == 0 {\n        return \"\"\n    }\n    x /= base\n   \
    \ x %= base\n    if x == 0 {\n        return \"\"\n    }\n    x /= base\n    x\
    \ %= base\n    if x == 0 {\n        return \"\"\n    }\n    x /= base\n    x %=\
    \ base\n    if x == 0 {\n        return \"\"\n    }\n    x /= base\n    x %= base\n\
    \    if x == 0 {\n        return \"\"\n    }\n    x /= base\n    x %= base\n \
    \   if x == 0 {\n        return \"\"\n    }\n    x /= base\n    x %= base\n  \
    \  if x == 0 {\n        return \"\"\n    }\n    x /= base\n    x %= base\n   \
    \ if x == 0 {\n        return \"\"", "    if x < 0 {\n        x *= -1\n    }\n\
    \    x /= base\n    x %= base\n    return fmt.Sprintf(\"%d\", x)\n}\n", "    if\
    \ base < 2 {\n        fmt.Printf(\"base must be greater than 1\\n\")\n       \
    \ return \"\"\n    }\n    if base > 10 {\n        fmt.Printf(\"base must be less\
    \ than 10\\n\")\n        return \"\"\n    }\n    if x == 0 {\n        return \"\
    \"\n    }\n    if x == 1 {\n        return fmt.Sprintf(\"%d\", x)\n    }\n   \
    \ x /= base\n    x -= int(x)\n    return fmt.Sprintf(\"%d%s\", x, change_base(x\
    \ - int(x), base))\n}\n", "    if base < 10 {\n        fmt.Printf(\"Base must\
    \ be less than 10\\n\")\n        return \"\"\n    }\n    x /= base\n    x %= base\n\
    \    return fmt.Sprintf(\"%d\", x)\n}\n", "    if base < 10 {\n        fmt.Printf(\"\
    base must be less than 10\\n\")\n        return \"\"\n    }\n    result := \"\"\
    \n    switch base {\n    case 2:\n        result = fmt.Sprintf(\"%d\", x)\n  \
    \  case 8:\n        result = fmt.Sprintf(\"%o\", x)\n    case 16:\n        result\
    \ = fmt.Sprintf(\"%x\", x)\n    case 32:\n        result = fmt.Sprintf(\"%X\"\
    , x)\n    case 64:\n        result = fmt.Sprintf(\"%llx\", x)\n    default:\n\
    \        fmt.Printf(\"base must be 2, 8, 16 or 32\\n\")\n        return \"\"\n\
    \    }\n    return result\n}\n", "    if base < 10 {\n        fmt.Println(\"Base\
    \ must be less than 10\")\n        return \"\"\n    }\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    ", "    if base < 2 {\n\
    \        fmt.Println(\"base must be greater than 1\")\n        return \"\"\n \
    \   }\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= ", "    switch base {\n    case 2:\n        return fmt.Sprintf(\"%d\"\
    , x)\n    case 8:\n        return fmt.Sprintf(\"%o\", x)\n    case 16:\n     \
    \   return fmt.Sprintf(\"%x\", x)\n    case 32:\n        return fmt.Sprintf(\"\
    %X\", x)\n    case 64:\n        return fmt.Sprintf(\"%llx\", x)\n    default:\n\
    \        fmt.Printf(\"base %d is not supported\\n\", base)\n    }\n    return\
    \ \"\"\n}\n", "    if base < 2 {\n        fmt.Println(\"Base must be greater than\
    \ 1\")\n        return \"\"\n    }\n    if base > 10 {\n        fmt.Println(\"\
    Base must be less than 10\")\n        return \"\"\n    }\n    if x == 0 {\n  \
    \      return \"0\"\n    }\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= ", "    if base < 2 {\n        fmt.Println(\"Base must be\
    \ greater than 1.\")\n        return \"\"\n    }\n    if base > 10 {\n       \
    \ fmt.Println(\"Base must be less than 10.\")\n        return \"\"\n    }\n  \
    \  if x == 0 {\n        return \"\"\n    }\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x ", "    if base < 2 {\n        fmt.Println(\"\
    Base must be greater than or equal to 2\")\n        return \"\"\n    }\n    if\
    \ base > 10 {\n        fmt.Println(\"Base must be less than or equal to 10\")\n\
    \        return \"\"\n    }\n    if base == 2 {\n        return fmt.Sprintf(\"\
    %d\", x)\n    }\n    x /= base\n    x %= base\n    return fmt.Sprintf(\"%d\",\
    \ x)\n}\n", "    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x ",
  "    if base < 10 {\n        fmt.Println(\"Base must be less than 10\")\n      \
    \  return\n    }\n    switch base {\n    case 2:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 8:\n        return fmt.Sprintf(\"%o\", x)\n    case 16:\n \
    \       return fmt.Sprintf(\"%x\", x)\n    case 32:\n        return fmt.Sprintf(\"\
    %X\", x)\n    case 64:\n        return fmt.Sprintf(\"%llx\", x)\n    case 128:\n\
    \        return fmt.Sprintf(\"%llX\", x)\n    case 256:\n        return fmt.Sprintf(\"\
    %016x\", x)\n    case 512:\n        return fmt.Sprintf(\"%016X\", x)\n    case\
    \ 1024:\n        return fmt.Sprintf(\"%0128x\", x)\n    case 2048:\n        return\
    \ fmt.Sprintf(\"%0128X\", x)\n    case 4096:\n        return fmt.Sprintf(\"%0256x\"\
    , x)\n    case 8192:\n        return fmt.Sprintf(\"%0256X\", x)\n    case 16384:\n\
    \        return fmt.Sprintf(\"%0512x\", x)\n    case 32768:\n        return fmt.Sprintf(\"\
    %0512X\", x)\n    case 65536:\n        return fmt.Sprintf(\"%01024x\", x)\n  \
    \  case 131072:\n        return fmt.Sprintf(\"%01024X\", x)\n    case 262144:\n\
    \        return fmt.Sprintf(\"%02048x\", x)\n    case 524288:\n        return\
    \ fmt.Sprintf(\"%02048X\", x)\n    case 1048576:\n        return fmt.Sprintf(\"\
    %04096x\", x)\n    case 2097152:\n        return fmt.Sprintf(\"%04096X\", x)\n\
    \    case 4194304:\n        return fmt.Sprintf(\"%08192x\", x)\n    case 8388608:\n\
    \        return fmt.Sprintf(\"%08192X\", x)\n    case 16777216:\n        return\
    \ fmt.Sprintf(\"%016384x\", x)\n    case 33554432:\n        return fmt.Sprintf(\"\
    %016384X\", x)\n    case 67108864:\n        return fmt.Sprintf(\"%032768x\", x)\n\
    \    case 134217728:\n        return fmt.Sprintf(\"%032768X\", x)\n    case 268435456:\n\
    \        return fmt.Sprintf(\"%065536x\", x)\n    case 536870912:\n        return\
    \ fmt.Sprintf(\"%065536X\", x)\n    case 1073741824:\n        return fmt.Sprintf(\"\
    %0131072x\", x)\n    case 2147483648:\n        return fmt.Sprintf(\"%0131072X\"\
    , x)\n    case 4294967296:\n        return fmt.Sprintf(\"%0262144x\", x)\n   \
    \ case ", "    if base < 10 {\n        fmt.Printf(\"Base must be less than 10.\\\
    n\")\n        return \"\"\n    }\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    ", "    if base < 10 {\n        fmt.Printf(\"\
    base must be less than 10\\n\")\n        return \"\"\n    }\n    x /= base\n \
    \   x %= base\n    return fmt.Sprintf(\"%d\", x)\n}\n", "    if base < 10 {\n\
    \        fmt.Println(\"base must be less than 10\")\n        return \"\"\n   \
    \ }\n    if x == 0 {\n        return \"\"\n    }\n    x /= base\n    x %= base\n\
    \    return fmt.Sprintf(\"%d\", x)\n}\n", "    switch base {\n    case 2:\n  \
    \      return fmt.Sprintf(\"%d\", x)\n    case 8:\n        return fmt.Sprintf(\"\
    %o\", x)\n    case 16:\n        return fmt.Sprintf(\"%x\", x)\n    case 32:\n\
    \        return fmt.Sprintf(\"%X\", x)\n    case 64:\n        return fmt.Sprintf(\"\
    %q\", x)\n    default:\n        return fmt.Sprintf(\"%d\", x)\n    }\n}\n", " \
    \   if base < 10 {\n        fmt.Printf(\"base must be less than 10\\n\")\n   \
    \     return \"\"\n    }\n    x /= base\n    x %= base\n    return fmt.Sprintf(\"\
    %d\", x)\n}\n", "    if base < 10 {\n        fmt.Printf(\"base must be less than\
    \ 10\\n\")\n        return \"\"\n    }\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    ", "    if base < 10 {\n        fmt.Printf(\"\
    Base must be less than 10\\n\")\n        return \"\"\n    }\n    x /= base\n \
    \   x %= base\n    return fmt.Sprintf(\"%d\", x)\n}\n", "    if base < 10 {\n\
    \        fmt.Printf(\"base must be less than 10\\n\")\n        return \"\"\n \
    \   }\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    ", "    if base < 2 {\n        fmt.Printf(\"base must be greater than 1\\\
    n\")\n        return \"\"\n    }\n    if base > 10 {\n        fmt.Printf(\"base\
    \ must be less than 10\\n\")\n        return \"\"\n    }\n    if x == 0 {\n  \
    \      return \"\"\n    }\n    if x < 0 {\n        fmt.Printf(\"x must be greater\
    \ than 0\\n\")\n        return \"\"\n    }\n    if base == 2 {\n        return\
    \ fmt.Sprintf(\"%d\", x)\n    }\n    if base == 8 {\n        return fmt.Sprintf(\"\
    %o\", x)\n    }\n    if base == 16 {\n        return fmt.Sprintf(\"%x\", x)\n\
    \    }\n    if base == 10 {\n        return fmt.Sprintf(\"%d\", x)\n    }\n  \
    \  if base == 16 {\n        return fmt.Sprintf(\"%x\", x)\n    }\n    if base\
    \ == 10 {\n        return fmt.Sprintf(\"%d\", x)\n    }\n    if base == 16 {\n\
    \        return fmt.Sprintf(\"%x\", x)\n    }\n    if base == 10 {\n        return\
    \ fmt.Sprintf(\"%d\", x)\n    }\n    if base == 16 {\n        return fmt.Sprintf(\"\
    %x\", x)\n    }\n    if base == 10 {\n        return fmt.Sprintf(\"%d\", x)\n\
    \    }\n    if base == 16 {\n        return fmt.Sprintf(\"%x\", x)\n    }\n  \
    \  if base == 10 {\n        return fmt.Sprintf(\"%d\", x)\n    }\n    if base\
    \ == 16 {\n        return fmt.Sprintf(\"%x\", x)\n    }\n    if base == 10 {\n\
    \        return fmt.Sprintf(\"%d\", x)\n    }\n    if base == 16 {\n        return\
    \ fmt.Sprintf(\"%x\", x)\n    }\n    if base == 10 {\n        return fmt.Sprintf(\"\
    %d\", x)\n    }\n    if base == 16 {\n        return fmt.Sprintf(\"%x\", x)\n\
    \    }\n    if base == 10 {\n        return fmt.Sprintf(\"%d\", x)\n    }\n  \
    \  if base == 16 {\n        return fmt.Sprintf(\"%x\", x)\n    }\n    if base\
    \ == 10 {\n        return fmt.Sprintf(\"%d\", x)\n    }\n    if base == 16 {\n\
    \        return fmt.Sprintf(\"%x\", x)\n    }\n    if base == 10 {\n        return\
    \ fmt.Sprintf(\"%d\", x)\n    }\n    if base == 16 {\n        return fmt.Sprintf(\"\
    %x\", x)\n    }\n    if base == 10 {\n        return fmt.Sprintf(\"%d\", x)\n\
    \    }\n    if base == 16 {\n        return fmt.Sprintf(\"%x\", x)\n    }\n  \
    \  if base == 10 {\n        return fmt.Sprintf(\"%d\", x)\n    }\n    if base\
    \ == 16 {\n        return fmt.Sprintf(\"%x\", x)\n    }\n    if base == 10 {\n\
    \        return fmt.Sprintf(\"%d\", x)\n    }\n    if base == 16 {\n        return\
    \ fmt.S", "    if base < 10 {\n        fmt.Printf(\"Base must be less than 10.\\\
    n\")\n        return\n    }\n    switch base {\n    case 2:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 8:\n        return fmt.Sprintf(\"%o\", x)\n    case 16:\n \
    \       return fmt.Sprintf(\"%x\", x)\n    case 32:\n        return fmt.Sprintf(\"\
    %lx\", x)\n    case 64:\n        return fmt.Sprintf(\"%llx\", x)\n    default:\n\
    \        fmt.Printf(\"Base must be 2, 8, 16 or 32.\\n\")\n        return\n   \
    \ }\n}\n", "    switch base {\n    case 2:\n        return fmt.Sprintf(\"%d\"\
    , x)\n    case 10:\n        return fmt.Sprintf(\"%d\", x)\n    case 16:\n    \
    \    return fmt.Sprintf(\"%x\", x)\n    case 10:\n        return fmt.Sprintf(\"\
    %x\", x)\n    case 16:\n        return fmt.Sprintf(\"%X\", x)\n    default:\n\
    \        fmt.Printf(\"Invalid base: %d\\n\", base)\n    }\n    return \"\"\n}\n",
  "    switch base {\n    case 2:\n        return fmt.Sprintf(\"%d\", x)\n    case\
    \ 10:\n        return fmt.Sprintf(\"%d\", x)\n    case 16:\n        return fmt.Sprintf(\"\
    %x\", x)\n    case 32:\n        return fmt.Sprintf(\"%o\", x)\n    case 64:\n\
    \        return fmt.Sprintf(\"%x\", x)\n    default:\n        return fmt.Sprintf(\"\
    %d\", x)\n    }\n}\n", "    if base < 10 {\n        fmt.Printf(\"base must be\
    \ less than 10\\n\")\n        return \"\"\n    }\n    x /= base\n    x %= base\n\
    \    if x<0 {\n        x *= -1\n        x += base\n    }\n    x /= base\n    x\
    \ %= base\n    if x<0 {\n        x *= -1\n        x += base\n    }\n    return\
    \ fmt.Sprintf(\"%d\", x)\n}\n", "    switch base {\n    case 2:\n        return\
    \ fmt.Sprintf(\"%d\", x)\n    case 10:\n        return fmt.Sprintf(\"%d\", x)\n\
    \    case 16:\n        return fmt.Sprintf(\"%x\", x)\n    case 32:\n        return\
    \ fmt.Sprintf(\"%o\", x)\n    case 64:\n        return fmt.Sprintf(\"%x\", x)\n\
    \    case 100:\n        return fmt.Sprintf(\"%o\", x)\n    case 1024:\n      \
    \  return fmt.Sprintf(\"%x\", x)\n    case 65536:\n        return fmt.Sprintf(\"\
    %o\", x)\n    case 131072:\n        return fmt.Sprintf(\"%x\", x)\n    case 262144:\n\
    \        return fmt.Sprintf(\"%o\", x)\n    case 524288:\n        return fmt.Sprintf(\"\
    %x\", x)\n    case 1048576:\n        return fmt.Sprintf(\"%o\", x)\n    case 2097152:\n\
    \        return fmt.Sprintf(\"%x\", x)\n    case 4194304:\n        return fmt.Sprintf(\"\
    %o\", x)\n    case 8388608:\n        return fmt.Sprintf(\"%x\", x)\n    case 16777216:\n\
    \        return fmt.Sprintf(\"%o\", x)\n    case 33554432:\n        return fmt.Sprintf(\"\
    %x\", x)\n    case 67108864:\n        return fmt.Sprintf(\"%o\", x)\n    case\
    \ 134217728:\n        return fmt.Sprintf(\"%x\", x)\n    case 268435456:\n   \
    \     return fmt.Sprintf(\"%o\", x)\n    case 536870912:\n        return fmt.Sprintf(\"\
    %x\", x)\n    case 1073741824:\n        return fmt.Sprintf(\"%o\", x)\n    case\
    \ 2147483648:\n        return fmt.Sprintf(\"%x\", x)\n    case 4294967296:\n \
    \       return fmt.Sprintf(\"%o\", x)\n    case 8589934592:\n        return fmt.Sprintf(\"\
    %x\", x)\n    case 17179869184:\n        return fmt.Sprintf(\"%o\", x)\n    case\
    \ 34359738368:\n        return fmt.Sprintf(\"%x\", x)\n    case 68719476736:\n\
    \        return fmt.Sprintf(\"%o\", x)\n    case 137438953472:\n        return\
    \ fmt.Sprintf(\"%x\", x)\n    case 274877906944:\n        return fmt.Sprintf(\"\
    %o\", x)\n    case 549755813888:\n        return fmt.Sprintf(\"%x\", x)\n    case\
    \ 1099511627776:\n        return fmt.Sprintf(\"%o\", x)\n    case 2199023255552:\n\
    \        return fmt.Sprintf(\"%x\", x)\n    case 4398046511104:\n        return\
    \ fmt.Sprintf(\"%o\", x)\n    case 8796093022208:\n        return fmt.Sprintf(\"",
  "    if base < 10 {\n        fmt.Printf(\"base must be less than 10\\n\")\n    \
    \    return \"\"\n    }\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    ", "    if base < 10 {\n        fmt.Printf(\"Base must\
    \ be less than 10.\\n\")\n        return \"\"\n    }\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    ", "    if base < 10\
    \ {\n        fmt.Printf(\"base must be less than 10\\n\")\n        return \"\"\
    \n    }\n    switch base {\n    case 2:\n        return fmt.Sprintf(\"%d\", x)\n\
    \    case 8:\n        return fmt.Sprintf(\"%o\", x)\n    case 16:\n        return\
    \ fmt.Sprintf(\"%x\", x)\n    case 32:\n        return fmt.Sprintf(\"%X\", x)\n\
    \    case 64:\n        return fmt.Sprintf(\"%lld\", x)\n    case 128:\n      \
    \  return fmt.Sprintf(\"%llx\", x)\n    case 256:\n        return fmt.Sprintf(\"\
    %llX\", x)\n    case 512:\n        return fmt.Sprintf(\"%lld\", x)\n    case 1024:\n\
    \        return fmt.Sprintf(\"%llx\", x)\n    case 2048:\n        return fmt.Sprintf(\"\
    %lld\", x)\n    case 4096:\n        return fmt.Sprintf(\"%llx\", x)\n    case\
    \ 8192:\n        return fmt.Sprintf(\"%lld\", x)\n    case 16384:\n        return\
    \ fmt.Sprintf(\"%llx\", x)\n    case 32768:\n        return fmt.Sprintf(\"%lld\"\
    , x)\n    case 65536:\n        return fmt.Sprintf(\"%llx\", x)\n    case 131072:\n\
    \        return fmt.Sprintf(\"%lld\", x)\n    case 262144:\n        return fmt.Sprintf(\"\
    %llx\", x)\n    case 524288:\n        return fmt.Sprintf(\"%lld\", x)\n    case\
    \ 1048576:\n        return fmt.Sprintf(\"%llx\", x)\n    case 2097152:\n     \
    \   return fmt.Sprintf(\"%lld\", x)\n    case 4194304:\n        return fmt.Sprintf(\"\
    %llx\", x)\n    case 8388608:\n        return fmt.Sprintf(\"%lld\", x)\n    case\
    \ 16777216:\n        return fmt.Sprintf(\"%llx\", x)\n    case 33554432:\n   \
    \     return fmt.Sprintf(\"%lld\", x)\n    case 67108864:\n        return fmt.Sprintf(\"\
    %llx\", x)\n    case 134217728:\n        return fmt.Sprintf(\"%lld\", x)\n   \
    \ case 268435456:\n        return fmt.Sprintf(\"%llx\", x)\n    case 536870912:\n\
    \        return fmt.Sprintf(\"%lld\", x)\n    case 1073741824:\n        return\
    \ fmt.Sprintf(\"%llx\", x)\n    case 2147483648:\n        return fmt.Sprintf(\"\
    %lld\", x)\n    case 4294967296:\n        return fmt.Sprintf(\"%llx\", x)\n  \
    \  case 8589934592:\n        return fmt.Sprintf(\"%lld\", x)\n    case 17179869184:\n\
    \        return fmt.Sprintf(\"%llx\", x)\n    case 34359738368:\n        return\
    \ fmt.Sprintf(\"%lld\", x)\n    case ", "    switch base {\n    case 2:\n    \
    \    return fmt.Sprintf(\"%d\", x)\n    case 10:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 16:\n        return fmt.Sprintf(\"%d\", x)\n    case 32:\n\
    \        return fmt.Sprintf(\"%d\", x)\n    case 64:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 128:\n        return fmt.Sprintf(\"%d\", x)\n    case 256:\n\
    \        return fmt.Sprintf(\"%d\", x)\n    case 512:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 1024:\n        return fmt.Sprintf(\"%d\", x)\n    case 2048:\n\
    \        return fmt.Sprintf(\"%d\", x)\n    case 4096:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 8192:\n        return fmt.Sprintf(\"%d\", x)\n    case 16384:\n\
    \        return fmt.Sprintf(\"%d\", x)\n    case 32768:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 65536:\n        return fmt.Sprintf(\"%d\", x)\n    case 131072:\n\
    \        return fmt.Sprintf(\"%d\", x)\n    case 262144:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 524288:\n        return fmt.Sprintf(\"%d\", x)\n    case 1048576:\n\
    \        return fmt.Sprintf(\"%d\", x)\n    case 2097152:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 4194304:\n        return fmt.Sprintf(\"%d\", x)\n    case 8388608:\n\
    \        return fmt.Sprintf(\"%d\", x)\n    case 16777216:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 33554432:\n        return fmt.Sprintf(\"%d\", x)\n    case\
    \ 67108864:\n        return fmt.Sprintf(\"%d\", x)\n    case 134217728:\n    \
    \    return fmt.Sprintf(\"%d\", x)\n    case 268435456:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 536870912:\n        return fmt.Sprintf(\"%d\", x)\n    case\
    \ 1073741824:\n        return fmt.Sprintf(\"%d\", x)\n    case 2147483648:\n \
    \       return fmt.Sprintf(\"%d\", x)\n    case 4294967296:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 8589934592:\n        return fmt.Sprintf(\"%d\", x)\n    case\
    \ 17179869184:\n        return fmt.Sprintf(\"%d\", x)\n    case 34359738368:\n\
    \        return fmt.Sprintf(\"%d\", x)\n    case 68719476736:\n        return\
    \ fmt.Sprintf(\"%d\", x)\n    case 137438953472:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 274877906944:\n        return fmt.Sprintf(\"%d\", x)\n    case\
    \ 549755813888:\n        return fmt.Sprintf(\"%d\", x)\n    case 1099511627776:\n\
    \        return fmt.Sprintf(\"%d\", x)\n    case 2199023255552:\n        return\
    \ fmt.Sprintf(\"", "    if base < 10 {\n        fmt.Println(\"Base must be less\
    \ than 10\")\n        return \"\"\n    }\n    x /= base\n    x %= base\n    return\
    \ fmt.Sprintf(\"%d\", x)\n}\n", "    if base < 10 {\n        fmt.Println(\"base\
    \ must be less than 10\")\n        return \"\"\n    }\n    if x == 0 {\n     \
    \   return \"\"\n    }\n    x /= base\n    x %= base\n    return fmt.Sprintf(\"\
    %d\", x)\n}\n", "    if base < 2 {\n        fmt.Printf(\"Base must be greater\
    \ than 1\\n\")\n        return \"\"\n    }\n    switch base {\n    case 2:\n \
    \       return strconv.Itoa(x)\n    case 3:\n        return strconv.Itoa(x / 10)\n\
    \    case 4:\n        return strconv.Itoa(x / 100)\n    case 5:\n        return\
    \ strconv.Itoa(x / 1000)\n    case 6:\n        return strconv.Itoa(x / 10000)\n\
    \    case 7:\n        return strconv.Itoa(x / 100000)\n    case 8:\n        return\
    \ strconv.Itoa(x / 1000000)\n    case 9:\n        return strconv.Itoa(x / 10000000)\n\
    \    case 10:\n        return strconv.Itoa(x / 100000000)\n    default:\n    \
    \    fmt.Printf(\"Base must be less than 10\\n\")\n        return \"\"\n    }\n\
    }\n", "    switch base {\n    case 2:\n        return fmt.Sprintf(\"%d\", x)\n\
    \    case 10:\n        return fmt.Sprintf(\"%d\", x)\n    case 16:\n        return\
    \ fmt.Sprintf(\"%x\", x)\n    case 32:\n        return fmt.Sprintf(\"%o\", x)\n\
    \    case 64:\n        return fmt.Sprintf(\"%x\", x)\n    case 128:\n        return\
    \ fmt.Sprintf(\"%llx\", x)\n    default:\n        return fmt.Sprintf(\"%d\", x)\n\
    \    }\n}\n", "    if base < 10 {\n        fmt.Printf(\"base must be less than\
    \ 10\\n\")\n        return \"\"\n    }\n    x /= base\n    x %= base\n    return\
    \ fmt.Sprintf(\"%d\", x)\n}\n", "    if x < base {\n        return fmt.Sprintf(\"\
    %d\", x)\n    }\n    x /= base\n    x %= base\n    return fmt.Sprintf(\"%d%s\"\
    , x, change_base(base,base))\n}\n", "    switch base {\n    case 2:\n        return\
    \ fmt.Sprintf(\"%d\", x)\n    case 10:\n        return fmt.Sprintf(\"%d\", x)\n\
    \    case 16:\n        return fmt.Sprintf(\"%x\", x)\n    case 10:\n        return\
    \ fmt.Sprintf(\"%x\", x)\n    case 16:\n        return fmt.Sprintf(\"%X\", x)\n\
    \    case 10:\n        return fmt.Sprintf(\"%X\", x)\n    case 16:\n        return\
    \ fmt.Sprintf(\"%o\", x)\n    case 10:\n        return fmt.Sprintf(\"%o\", x)\n\
    \    case 16:\n        return fmt.Sprintf(\"%e\", x)\n    case 10:\n        return\
    \ fmt.Sprintf(\"%e\", x)\n    case 16:\n        return fmt.Sprintf(\"%f\", x)\n\
    \    case 10:\n        return fmt.Sprintf(\"%f\", x)\n    case 16:\n        return\
    \ fmt.Sprintf(\"%g\", x)\n    case 10:\n        return fmt.Sprintf(\"%g\", x)\n\
    \    case 16:\n        return fmt.Sprintf(\"%a\", x)\n    case 10:\n        return\
    \ fmt.Sprintf(\"%a\", x)\n    case 16:\n        return fmt.Sprintf(\"%A\", x)\n\
    \    case 10:\n        return fmt.Sprintf(\"%A\", x)\n    case 16:\n        return\
    \ fmt.Sprintf(\"%c\", x)\n    case 10:\n        return fmt.Sprintf(\"%c\", x)\n\
    \    case 16:\n        return fmt.Sprintf(\"%C\", x)\n    case 10:\n        return\
    \ fmt.Sprintf(\"%C\", x)\n    case 16:\n        return fmt.Sprintf(\"%b\", x)\n\
    \    case 10:\n        return fmt.Sprintf(\"%b\", x)\n    case 16:\n        return\
    \ fmt.Sprintf(\"%B\", x)\n    case 10:\n        return fmt.Sprintf(\"%B\", x)\n\
    \    case 16:\n        return fmt.Sprintf(\"%h\", x)\n    case 10:\n        return\
    \ fmt.Sprintf(\"%h\", x)\n    case 16:\n        return fmt.Sprintf(\"%H\", x)\n\
    \    case 10:\n        return fmt.Sprintf(\"%H\", x)\n    case 16:\n        return\
    \ fmt.Sprintf(\"%i\", x)\n    case 10:\n        return fmt.Sprintf(\"%i\", x)\n\
    \    case 16:\n        return fmt.Sprintf(\"%I\", x)\n    case 10:\n        return\
    \ fmt.Sprintf(\"%I\", x)\n    case 16:\n        return fmt.Sprintf(\"%l\", x)\n\
    \    case 10:\n        return fmt.Sprintf(\"%l\", x)\n    case 16:\n        return\
    \ fmt.Sprintf(\"%L\", x)\n    case 10:\n        return fmt.Sprintf(\"%L\", x)\n\
    \    case 16:\n        return fmt.Sprintf(\"%q\", x)\n    case 10:\n        return\
    \ fmt.Sprintf(\"%q\", x)\n    case 16:\n        return fmt.Sprintf(\"%Q\", x)\n\
    \    case 10:\n        return fmt.Sprintf(\"%Q\", x)\n    case 16:\n        return\
    \ fmt.Sprintf(\"%t\", x)\n    case 10:\n        return fmt.", "    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x ", "    if base < 10 {\n  \
    \      fmt.Printf(\"Base must be less than 10\\n\")\n        return \"\"\n   \
    \ }\n    x /= base\n    x %= base\n    if x == 0 {\n        return fmt.Sprintf(\"\
    %d\", x)\n    }\n    return fmt.Sprintf(\"%d%v\", x, base)\n}\n", "    switch\
    \ base {\n    case 2:\n        return fmt.Sprintf(\"%d\", x)\n    case 8:\n  \
    \      return fmt.Sprintf(\"%o\", x)\n    case 16:\n        return fmt.Sprintf(\"\
    %x\", x)\n    case 32:\n        return fmt.Sprintf(\"%X\", x)\n    case 64:\n\
    \        return fmt.Sprintf(\"%q\", x)\n    case 100:\n        return fmt.Sprintf(\"\
    %v\", x)\n    case 1024:\n        return fmt.Sprintf(\"%w\", x)\n    case 2048:\n\
    \        return fmt.Sprintf(\"%c\", x)\n    case 4096:\n        return fmt.Sprintf(\"\
    %b\", x)\n    case 8192:\n        return fmt.Sprintf(\"%h\", x)\n    case 16384:\n\
    \        return fmt.Sprintf(\"%t\", x)\n    case 32768:\n        return fmt.Sprintf(\"\
    %n\", x)\n    case 65536:\n        return fmt.Sprintf(\"%v\", x)\n    case 131072:\n\
    \        return fmt.Sprintf(\"%u\", x)\n    case 262144:\n        return fmt.Sprintf(\"\
    %t\", x)\n    case 524288:\n        return fmt.Sprintf(\"%p\", x)\n    case 1048576:\n\
    \        return fmt.Sprintf(\"%q\", x)\n    case 2097152:\n        return fmt.Sprintf(\"\
    %x\", x)\n    case 4194304:\n        return fmt.Sprintf(\"%o\", x)\n    case 8388608:\n\
    \        return fmt.Sprintf(\"%e\", x)\n    case 16777216:\n        return fmt.Sprintf(\"\
    %g\", x)\n    case 33554432:\n        return fmt.Sprintf(\"%T\", x)\n    case\
    \ 67108864:\n        return fmt.Sprintf(\"%G\", x)\n    case 134217728:\n    \
    \    return fmt.Sprintf(\"%f\", x)\n    case 268435456:\n        return fmt.Sprintf(\"\
    %e\", x)\n    case 536870912:\n        return fmt.Sprintf(\"%g\", x)\n    case\
    \ 1073741824:\n        return fmt.Sprintf(\"%T\", x)\n    case 2147483648:\n \
    \       return fmt.Sprintf(\"%p\", x)\n    case 4294967296:\n        return fmt.Sprintf(\"\
    %q\", x)\n    case 8589934592:\n        return fmt.Sprintf(\"%v\", x)\n    case\
    \ 17179869184:\n        return fmt.Sprintf(\"%w\", x)\n    case 34359738368:\n\
    \        return fmt.Sprintf(\"%c\", x)\n    case 68719476736:\n        return\
    \ fmt.Sprintf(\"%b\", x)\n    case 137438953472:\n        return fmt.Sprintf(\"\
    %h\", x)\n    case 274877906944:\n        return fmt.Sprintf(\"%t\", x)\n    case ",
  "    if base < 2 {\n        fmt.Println(\"Base must be greater than or equal to\
    \ 2\")\n        return \"\"\n    }\n    switch base {\n    case 2:\n        return\
    \ strconv.Itoa(x)\n    case 3:\n        return strconv.Itoa(x / 10)\n    case\
    \ 4:\n        return strconv.Itoa(x / 100)\n    case 5:\n        return strconv.Itoa(x\
    \ / 1000)\n    case 6:\n        return strconv.Itoa(x / 10000)\n    case 7:\n\
    \        return strconv.Itoa(x / 100000)\n    case 8:\n        return strconv.Itoa(x\
    \ / 1000000)\n    case 9:\n        return strconv.Itoa(x / 10000000)\n    case\
    \ 10:\n        return strconv.Itoa(x / 100000000)\n    default:\n        fmt.Println(\"\
    Base must be less than 10\")\n        return \"\"\n    }\n}\n", "    if base <\
    \ 10 {\n        fmt.Println(\"Base must be less than 10\")\n        return \"\"\
    \n    }\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    ", "    if base < 10 {\n        fmt.Println(\"base must be less than\
    \ 10\")\n        return \"\"\n    }\n    switch base {\n    case 2:\n        return\
    \ fmt.Sprintf(\"%d\", x)\n    case 8:\n        return fmt.Sprintf(\"%o\", x)\n\
    \    case 16:\n        return fmt.Sprintf(\"%x\", x)\n    case 32:\n        return\
    \ fmt.Sprintf(\"%X\", x)\n    case 64:\n        return fmt.Sprintf(\"%lld\", x)\n\
    \    case 128:\n        return fmt.Sprintf(\"%llx\", x)\n    case 256:\n     \
    \   return fmt.Sprintf(\"%llX\", x)\n    case 512:\n        return fmt.Sprintf(\"\
    %lld\", x)\n    case 1024:\n        return fmt.Sprintf(\"%llx\", x)\n    case\
    \ 2048:\n        return fmt.Sprintf(\"%lld\", x)\n    case 4096:\n        return\
    \ fmt.Sprintf(\"%llx\", x)\n    case 8192:\n        return fmt.Sprintf(\"%lld\"\
    , x)\n    case 16384:\n        return fmt.Sprintf(\"%llx\", x)\n    case 32768:\n\
    \        return fmt.Sprintf(\"%lld\", x)\n    case 65536:\n        return fmt.Sprintf(\"\
    %lld\", x)\n    case 131072:\n        return fmt.Sprintf(\"%lld\", x)\n    case\
    \ 262144:\n        return fmt.Sprintf(\"%lld\", x)\n    case 524288:\n       \
    \ return fmt.Sprintf(\"%lld\", x)\n    case 1048576:\n        return fmt.Sprintf(\"\
    %lld\", x)\n    case 2097152:\n        return fmt.Sprintf(\"%lld\", x)\n    case\
    \ 4194304:\n        return fmt.Sprintf(\"%lld\", x)\n    case 8388608:\n     \
    \   return fmt.Sprintf(\"%lld\", x)\n    case 16777216:\n        return fmt.Sprintf(\"\
    %lld\", x)\n    case 33554432:\n        return fmt.Sprintf(\"%lld\", x)\n    case\
    \ 67108864:\n        return fmt.Sprintf(\"%lld\", x)\n    case 134217728:\n  \
    \      return fmt.Sprintf(\"%lld\", x)\n    case 268435456:\n        return fmt.Sprintf(\"\
    %lld\", x)\n    case 536870912:\n        return fmt.Sprintf(\"%lld\", x)\n   \
    \ case 1073741824:\n        return fmt.Sprintf(\"%lld\", x)\n    case 2147483648:\n\
    \        return fmt.Sprintf(\"%lld\", x)\n    case 4294967296:\n        return\
    \ fmt.Sprintf(\"%lld\", x)\n    case 8589934592:\n        return fmt.Sprintf(\"\
    %lld\", x)\n    case 17179869184:\n        return fmt.Sprintf(\"%lld\", x)\n \
    \   case 34359738368:\n        return fmt.Sprintf(\"%lld\", x)\n    case ", " \
    \   if base < 10 {\n        fmt.Printf(\"base must be less than 10\\n\")\n   \
    \     return \"\"\n    }\n    x /= base\n    x %= base\n    return fmt.Sprintf(\"\
    %d\", x)\n}\n", "    switch base {\n    case 2:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 10:\n        return fmt.Sprintf(\"%d\", x)\n    case 16:\n\
    \        return fmt.Sprintf(\"%d\", x)\n    case 10:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 16:\n        return fmt.Sprintf(\"%d\", x)\n    case 10:\n\
    \        return fmt.Sprintf(\"%d\", x)\n    case 16:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 10:\n        return fmt.Sprintf(\"%d\", x)\n    case 16:\n\
    \        return fmt.Sprintf(\"%d\", x)\n    case 10:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 16:\n        return fmt.Sprintf(\"%d\", x)\n    case 10:\n\
    \        return fmt.Sprintf(\"%d\", x)\n    case 16:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 10:\n        return fmt.Sprintf(\"%d\", x)\n    case 16:\n\
    \        return fmt.Sprintf(\"%d\", x)\n    case 10:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 16:\n        return fmt.Sprintf(\"%d\", x)\n    case 10:\n\
    \        return fmt.Sprintf(\"%d\", x)\n    case 16:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 10:\n        return fmt.Sprintf(\"%d\", x)\n    case 16:\n\
    \        return fmt.Sprintf(\"%d\", x)\n    case 10:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 16:\n        return fmt.Sprintf(\"%d\", x)\n    case 10:\n\
    \        return fmt.Sprintf(\"%d\", x)\n    case 16:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 10:\n        return fmt.Sprintf(\"%d\", x)\n    case 16:\n\
    \        return fmt.Sprintf(\"%d\", x)\n    case 10:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 16:\n        return fmt.Sprintf(\"%d\", x)\n    case 10:\n\
    \        return fmt.Sprintf(\"%d\", x)\n    case 16:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 10:\n        return fmt.Sprintf(\"%d\", x)\n    case 16:\n\
    \        return fmt.Sprintf(\"%d\", x)\n    case 10:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 16:\n        return fmt.Sprintf(\"%d\", x)\n    case 10:\n\
    \        return fmt.Sprintf(\"%d\", x)\n    case 16:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 10:\n        return fmt.Sprintf(\"%d\", x)\n    case 16:\n\
    \        return fmt.Sprintf(\"%d\", x)\n    case 10:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 16:\n        return fmt.Sprintf(\"%d\", x)\n    case 10:\n\
    \        return fmt.Sprintf(\"%d\", x)\n    case 16:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 10:\n        return fmt.Sprintf(\"%d\", x)\n    case 16:\n\
    \        return fmt.Sprintf(\"%d\", x)\n    case 10:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 16:\n        return fmt.Sprintf(\"%d\", x)\n    case 10:\n\
    \        return fmt.Sprintf(\"%d\", x)\n    case 16:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 10:\n        return fmt.Sprintf(\"%d\", x)\n    case 16:\n\
    \        return fmt.Sprintf(\"", "    if base < 10 {\n        fmt.Printf(\"Base\
    \ must be less than 10\\n\")\n        return \"\"\n    }\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    ", "    if base <\
    \ 10 {\n        fmt.Printf(\"base must be less than 10\\n\")\n        return\n\
    \    }\n    x /= base\n    x %= base\n    return fmt.Sprintf(\"%d\", x)\n}\n",
  "    if base < 2 {\n        fmt.Println(\"Base must be greater than 1\")\n     \
    \   return \"\"\n    }\n    if base > 10 {\n        fmt.Println(\"Base must be\
    \ less than 10\")\n        return \"\"\n    }\n    if x == 0 {\n        return\
    \ \"\"\n    }\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= ", "    if base < 10 {\n        fmt.Println(\"Base must be less than\
    \ 10\")\n        return \"\"\n    }\n    switch base {\n    case 2:\n        return\
    \ fmt.Sprintf(\"%d\", x)\n    case 8:\n        return fmt.Sprintf(\"%o\", x)\n\
    \    case 16:\n        return fmt.Sprintf(\"%x\", x)\n    case 32:\n        return\
    \ fmt.Sprintf(\"%X\", x)\n    case 64:\n        return fmt.Sprintf(\"%llx\", x)\n\
    \    case 100:\n        return fmt.Sprintf(\"%0*d\", base, x)\n    case 1024:\n\
    \        return fmt.Sprintf(\"%0*d\", base, x)\n    case 2048:\n        return\
    \ fmt.Sprintf(\"%0*d\", base, x)\n    case 4096:\n        return fmt.Sprintf(\"\
    %0*d\", base, x)\n    case 8192:\n        return fmt.Sprintf(\"%0*d\", base, x)\n\
    \    case 16384:\n        return fmt.Sprintf(\"%0*d\", base, x)\n    case 32768:\n\
    \        return fmt.Sprintf(\"%0*d\", base, x)\n    case 65536:\n        return\
    \ fmt.Sprintf(\"%0*d\", base, x)\n    case 131072:\n        return fmt.Sprintf(\"\
    %0*d\", base, x)\n    case 262144:\n        return fmt.Sprintf(\"%0*d\", base,\
    \ x)\n    case 524288:\n        return fmt.Sprintf(\"%0*d\", base, x)\n    case\
    \ 1048576:\n        return fmt.Sprintf(\"%0*d\", base, x)\n    case 2097152:\n\
    \        return fmt.Sprintf(\"%0*d\", base, x)\n    case 4194304:\n        return\
    \ fmt.Sprintf(\"%0*d\", base, x)\n    case 8388608:\n        return fmt.Sprintf(\"\
    %0*d\", base, x)\n    case 16777216:\n        return fmt.Sprintf(\"%0*d\", base,\
    \ x)\n    case 33554432:\n        return fmt.Sprintf(\"%0*d\", base, x)\n    case\
    \ 67108864:\n        return fmt.Sprintf(\"%0*d\", base, x)\n    case 134217728:\n\
    \        return fmt.Sprintf(\"%0*d\", base, x)\n    case 268435456:\n        return\
    \ fmt.Sprintf(\"%0*d\", base, x)\n    case 536870912:\n        return fmt.Sprintf(\"\
    %0*d\", base, x)\n    case 1073741824:\n        return fmt.Sprintf(\"%0*d\", base,\
    \ x)\n    case 2147483648:\n        return fmt.Sprintf(\"%0*d\", base, x)\n  \
    \  case 4294967296:\n        return fmt.Sprintf(\"%0*d\", base, x)\n    case 8589934592:\n\
    \        return fmt.Sprintf(\"%0*d\", base, x)\n    case 17179869184:\n      \
    \  return fmt.Sprintf(\"%", "    switch base {\n    case 2:\n        return fmt.Sprintf(\"\
    %v\", x)\n    case 10:\n        return fmt.Sprintf(\"%v\", x)\n    case 16:\n\
    \        return fmt.Sprintf(\"%v\", x)\n    case 32:\n        return fmt.Sprintf(\"\
    %v\", x)\n    case 64:\n        return fmt.Sprintf(\"%v\", x)\n    case 128:\n\
    \        return fmt.Sprintf(\"%v\", x)\n    case 256:\n        return fmt.Sprintf(\"\
    %v\", x)\n    case 512:\n        return fmt.Sprintf(\"%v\", x)\n    case 1024:\n\
    \        return fmt.Sprintf(\"%v\", x)\n    case 2048:\n        return fmt.Sprintf(\"\
    %v\", x)\n    case 4096:\n        return fmt.Sprintf(\"%v\", x)\n    case 8192:\n\
    \        return fmt.Sprintf(\"%v\", x)\n    case 16384:\n        return fmt.Sprintf(\"\
    %v\", x)\n    case 32768:\n        return fmt.Sprintf(\"%v\", x)\n    case 65536:\n\
    \        return fmt.Sprintf(\"%v\", x)\n    case 131072:\n        return fmt.Sprintf(\"\
    %v\", x)\n    case 262144:\n        return fmt.Sprintf(\"%v\", x)\n    case 524288:\n\
    \        return fmt.Sprintf(\"%v\", x)\n    case 1048576:\n        return fmt.Sprintf(\"\
    %v\", x)\n    case 2097152:\n        return fmt.Sprintf(\"%v\", x)\n    case 4194304:\n\
    \        return fmt.Sprintf(\"%v\", x)\n    case 8388608:\n        return fmt.Sprintf(\"\
    %v\", x)\n    case 16777216:\n        return fmt.Sprintf(\"%v\", x)\n    case\
    \ 33554432:\n        return fmt.Sprintf(\"%v\", x)\n    case 67108864:\n     \
    \   return fmt.Sprintf(\"%v\", x)\n    case 134217728:\n        return fmt.Sprintf(\"\
    %v\", x)\n    case 268435456:\n        return fmt.Sprintf(\"%v\", x)\n    case\
    \ 536870912:\n        return fmt.Sprintf(\"%v\", x)\n    case 1073741824:\n  \
    \      return fmt.Sprintf(\"%v\", x)\n    case 2147483648:\n        return fmt.Sprintf(\"\
    %v\", x)\n    case 4294967296:\n        return fmt.Sprintf(\"%v\", x)\n    case\
    \ 8589934592:\n        return fmt.Sprintf(\"%v\", x)\n    case 17179869184:\n\
    \        return fmt.Sprintf(\"%v\", x)\n    case 34359738368:\n        return\
    \ fmt.Sprintf(\"%v\", x)\n    case 68719476736:\n        return fmt.Sprintf(\"\
    %v\", x)\n    case 13", "    if base < 10 {\n        fmt.Printf(\"base must be\
    \ less than 10\\n\")\n        return \"\"\n    }\n    switch base {\n    case\
    \ 2:\n        return fmt.Sprintf(\"%v\", x)\n    case 8:\n        return fmt.Sprintf(\"\
    %v\", x/10)\n    case 16:\n        return fmt.Sprintf(\"%v\", x/100)\n    case\
    \ 32:\n        return fmt.Sprintf(\"%v\", x/1000)\n    case 64:\n        return\
    \ fmt.Sprintf(\"%v\", x/1000000)\n    case 128:\n        return fmt.Sprintf(\"\
    %v\", x/1000000000)\n    case 256:\n        return fmt.Sprintf(\"%v\", x/1000000000000)\n\
    \    case 512:\n        return fmt.Sprintf(\"%v\", x/1000000000000000)\n    case\
    \ 1024:\n        return fmt.Sprintf(\"%v\", x/1000000000000000000)\n    case 2048:\n\
    \        return fmt.Sprintf(\"%v\", x/100000000000000000000)\n    case 4096:\n\
    \        return fmt.Sprintf(\"%v\", x/10000000000000000000000)\n    case 8192:\n\
    \        return fmt.Sprintf(\"%v\", x/1000000000000000000000000)\n    case 16384:\n\
    \        return fmt.Sprintf(\"%v\", x/100000000000000000000000000)\n    case 32768:\n\
    \        return fmt.Sprintf(\"%v\", x/10000000000000000000000000000)\n    case\
    \ 65536:\n        return fmt.Sprintf(\"%v\", x/1000000000000000000000000000000)\n\
    \    case 131072:\n        return fmt.Sprintf(\"%v\", x/100000000000000000000000000000000)\n\
    \    case 262144:\n        return fmt.Sprintf(\"%v\", x/1000000000000000000000000000000000)\
    \ \n    case 524288:\n        return fmt.Sprintf(\"%v\", x/1000000000000000000000000000000000)\n\
    \    case 1048576:\n        return fmt.Sprintf(\"%v\", x/100000000000000000000000000000000)\n\
    \    case 2097152:\n        return fmt.Sprintf(\"%v\", x/1000000000000000000000000000000000)\n\
    \    case 4194304:\n        return fmt.Sprintf(\"%v\", x/100000000000000000000000000000000)\n\
    \    case 8388608:\n        return fmt.Sprintf(\"%v\", x/1000000000000000000000000000000000)\n\
    \    case 16777216:\n        return fmt.Sprintf(\"%v\", x/100000000000000000000000000000000)\n\
    \    case 33554432:\n        return fmt.Sprintf(\"%v\", x/1000000000000000000000000000000000)\n\
    \    case 67108864:\n        return fmt.Sprintf(\"%v\", x/100000000000000000000000000000000)\n\
    \    case 134217728:\n        return fmt.Sprintf(\"%v\", x/1000000000000000000000000000000000)\n\
    \    case 268435456:\n        return fmt.Sprintf(\"%v\", x/100000000000000000000000000000000)\n\
    \    case 536870912:\n        return fmt.Sprintf(\"%v", "    if x < 0 {\n    \
    \    fmt.Println(\"Negative number\")\n    }\n    if base < 10 {\n        fmt.Println(\"\
    Base number must be less than 10\")\n    }\n    if base > 36 {\n        fmt.Println(\"\
    Base number must be less than 36\")\n    }\n    if base < 2 {\n        fmt.Println(\"\
    Base number must be greater than 2\")\n    }\n    if base > 36 {\n        fmt.Println(\"\
    Base number must be less than 36\")\n    }\n    if base < 2 {\n        fmt.Println(\"\
    Base number must be greater than 2\")\n    }\n    if base > 36 {\n        fmt.Println(\"\
    Base number must be less than 36\")\n    }\n    if base < 2 {\n        fmt.Println(\"\
    Base number must be greater than 2\")\n    }\n    if base > 36 {\n        fmt.Println(\"\
    Base number must be less than 36\")\n    }\n    if base < 2 {\n        fmt.Println(\"\
    Base number must be greater than 2\")\n    }\n    if base > 36 {\n        fmt.Println(\"\
    Base number must be less than 36\")\n    }\n    if base < 2 {\n        fmt.Println(\"\
    Base number must be greater than 2\")\n    }\n    if base > 36 {\n        fmt.Println(\"\
    Base number must be less than 36\")\n    }\n    if base < 2 {\n        fmt.Println(\"\
    Base number must be greater than 2\")\n    }\n    if base > 36 {\n        fmt.Println(\"\
    Base number must be less than 36\")\n    }\n    if base < 2 {\n        fmt.Println(\"\
    Base number must be greater than 2\")\n    }\n    if base > 36 {\n        fmt.Println(\"\
    Base number must be less than 36\")\n    }\n    if base < 2 {\n        fmt.Println(\"\
    Base number must be greater than 2\")\n    }\n    if base > 36 {\n        fmt.Println(\"\
    Base number must be less than 36\")\n    }\n    if base < 2 {\n        fmt.Println(\"\
    Base number must be greater than 2\")\n    }\n    if base > 36 {\n        fmt.Println(\"\
    Base number must be less than 36\")\n    }\n    if base < 2 {\n        fmt.Println(\"\
    Base number must be greater than 2\")\n    }\n    if base > 36 {\n        fmt.Println(\"\
    Base number must be less than 36\")\n    }\n    if base < 2 {\n        fmt.Println(\"\
    Base number must be greater than 2\")\n    }\n    if base > 36 {\n        fmt.Println(\"\
    Base number must be less than 36\")\n    }\n    if base < 2 {\n        fmt.Println(\"\
    Base number must be greater than 2\")\n    }\n    if base > 36 {\n        fmt.Println(\"\
    Base number must be less than 36\")\n    }\n    if base < 2 {\n        fmt.Println(\"\
    Base number must be greater than 2\")\n    }\n    if base > 36 {\n        fmt.Println(\"\
    Base ", "    switch base {\n    case 2:\n        return fmt.Sprintf(\"%d\", x)\n\
    \    case 10:\n        return fmt.Sprintf(\"%d\", x)\n    case 16:\n        return\
    \ fmt.Sprintf(\"%x\", x)\n    case 10:\n        return fmt.Sprintf(\"%x\", x)\n\
    \    default:\n        return fmt.Sprintf(\"%d\", x)\n    }\n}\n", "    if base\
    \ < 10 {\n        fmt.Printf(\"Base must be less than 10\\n\")\n        return\
    \ \"\"\n    }\n    switch base {\n    case 2:\n        return fmt.Sprintf(\"%v\"\
    , x)\n    case 8:\n        return fmt.Sprintf(\"%v\", x)\n    case 16:\n     \
    \   return fmt.Sprintf(\"%v\", x)\n    case 32:\n        return fmt.Sprintf(\"\
    %v\", x)\n    case 64:\n        return fmt.Sprintf(\"%v\", x)\n    case 128:\n\
    \        return fmt.Sprintf(\"%v\", x)\n    case 256:\n        return fmt.Sprintf(\"\
    %v\", x)\n    case 512:\n        return fmt.Sprintf(\"%v\", x)\n    case 1024:\n\
    \        return fmt.Sprintf(\"%v\", x)\n    case 2048:\n        return fmt.Sprintf(\"\
    %v\", x)\n    case 4096:\n        return fmt.Sprintf(\"%v\", x)\n    case 8192:\n\
    \        return fmt.Sprintf(\"%v\", x)\n    case 16384:\n        return fmt.Sprintf(\"\
    %v\", x)\n    case 32768:\n        return fmt.Sprintf(\"%v\", x)\n    case 65536:\n\
    \        return fmt.Sprintf(\"%v\", x)\n    case 131072:\n        return fmt.Sprintf(\"\
    %v\", x)\n    case 262144:\n        return fmt.Sprintf(\"%v\", x)\n    case 524288:\n\
    \        return fmt.Sprintf(\"%v\", x)\n    case 1048576:\n        return fmt.Sprintf(\"\
    %v\", x)\n    case 2097152:\n        return fmt.Sprintf(\"%v\", x)\n    case 4194304:\n\
    \        return fmt.Sprintf(\"%v\", x)\n    case 8388608:\n        return fmt.Sprintf(\"\
    %v\", x)\n    case 16777216:\n        return fmt.Sprintf(\"%v\", x)\n    case\
    \ 33554432:\n        return fmt.Sprintf(\"%v\", x)\n    case 67108864:\n     \
    \   return fmt.Sprintf(\"%v\", x)\n    case 134217728:\n        return fmt.Sprintf(\"\
    %v\", x)\n    case 268435456:\n        return fmt.Sprintf(\"%v\", x)\n    case\
    \ 536870912:\n        return fmt.Sprintf(\"%v\", x)\n    case 1073741824:\n  \
    \      return fmt.Sprintf(\"%v\", x)\n    case 2147483648:\n        return fmt.Sprintf(\"\
    %v\", x)\n    case 4294967296:\n        return fmt.Sprintf(\"%v\", x)\n    case\
    \ 8589934592:\n        return fmt.Sprintf(\"%v\", x)\n    case 17179869184:\n\
    \        return fmt.Sprintf(\"%v\", x)\n    case 34359738368:\n        return\
    \ fmt.Sprintf(\"%v\", x)", "    if base < 10 {\n        fmt.Printf(\"Base must\
    \ be less than 10\\n\")\n        return \"\"\n    }\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    ", "    if base < 10 {\n   \
    \     fmt.Println(\"Base must be less than 10\")\n        return \"\"\n    }\n\
    \    switch base {\n    case 2:\n        return fmt.Sprintf(\"%d\", x)\n    case\
    \ 8:\n        return fmt.Sprintf(\"%o\", x)\n    case 16:\n        return fmt.Sprintf(\"\
    %x\", x)\n    case 32:\n        return fmt.Sprintf(\"%X\", x)\n    case 64:\n\
    \        return fmt.Sprintf(\"%lld\", x)\n    case 128:\n        return fmt.Sprintf(\"\
    %llx\", x)\n    case 256:\n        return fmt.Sprintf(\"%llX\", x)\n    case 512:\n\
    \        return fmt.Sprintf(\"%lld\", x)\n    case 1024:\n        return fmt.Sprintf(\"\
    %llx\", x)\n    case 2048:\n        return fmt.Sprintf(\"%lld\", x)\n    case\
    \ 4096:\n        return fmt.Sprintf(\"%llx\", x)\n    case 8192:\n        return\
    \ fmt.Sprintf(\"%lld\", x)\n    case 16384:\n        return fmt.Sprintf(\"%llx\"\
    , x)\n    case 32768:\n        return fmt.Sprintf(\"%lld\", x)\n    case 65536:\n\
    \        return fmt.Sprintf(\"%llx\", x)\n    case 131072:\n        return fmt.Sprintf(\"\
    %lld\", x)\n    case 262144:\n        return fmt.Sprintf(\"%llx\", x)\n    case\
    \ 524288:\n        return fmt.Sprintf(\"%lld\", x)\n    case 1048576:\n      \
    \  return fmt.Sprintf(\"%llx\", x)\n    case 2097152:\n        return fmt.Sprintf(\"\
    %lld\", x)\n    case 4194304:\n        return fmt.Sprintf(\"%llx\", x)\n    case\
    \ 8388608:\n        return fmt.Sprintf(\"%lld\", x)\n    case 16777216:\n    \
    \    return fmt.Sprintf(\"%llx\", x)\n    case 33554432:\n        return fmt.Sprintf(\"\
    %lld\", x)\n    case 67108864:\n        return fmt.Sprintf(\"%llx\", x)\n    case\
    \ 134217728:\n        return fmt.Sprintf(\"%lld\", x)\n    case 268435456:\n \
    \       return fmt.Sprintf(\"%llx\", x)\n    case 536870912:\n        return fmt.Sprintf(\"\
    %lld\", x)\n    case 1073741824:\n        return fmt.Sprintf(\"%llx\", x)\n  \
    \  case 2147483648:\n        return fmt.Sprintf(\"%lld\", x)\n    case 4294967296:\n\
    \        return fmt.Sprintf(\"%llx\", x)\n    case 8589934592:\n        return\
    \ fmt.Sprintf(\"%lld\", x)\n    case 17179869184:\n        return fmt.Sprintf(\"\
    %llx\", x)\n    case 34359738368:\n        return fmt.Sprintf(\"%lld\", x)\n \
    \   case ", "    if base < 10 {\n        fmt.Println(\"Base must be less than\
    \ 10.\")\n        return \"\"\n    }\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    ", "    switch base {\n    case 2:\n      \
    \  if x < 2 {\n            return fmt.Sprintf(\"%d\", x)\n        }\n        return\
    \ change_base(x / 2, base)\n    case 10:\n        if x < 10 {\n            return\
    \ fmt.Sprintf(\"%d\", x)\n        }\n        return change_base(x / 10, base)\n\
    \    case 16:\n        if x < 16 {\n            return fmt.Sprintf(\"%d\", x)\n\
    \        }\n        return change_base(x / 16, base)\n    case 20:\n        if\
    \ x < 20 {\n            return fmt.Sprintf(\"%d\", x)\n        }\n        return\
    \ change_base(x / 20, base)\n    case 32:\n        if x < 32 {\n            return\
    \ fmt.Sprintf(\"%d\", x)\n        }\n        return change_base(x / 32, base)\n\
    \    case 64:\n        if x < 64 {\n            return fmt.Sprintf(\"%d\", x)\n\
    \        }\n        return change_base(x / 64, base)\n    case 128:\n        if\
    \ x < 128 {\n            return fmt.Sprintf(\"%d\", x)\n        }\n        return\
    \ change_base(x / 128, base)\n    case 256:\n        if x < 256 {\n          \
    \  return fmt.Sprintf(\"%d\", x)\n        }\n        return change_base(x / 256,\
    \ base)\n    case 512:\n        if x < 512 {\n            return fmt.Sprintf(\"\
    %d\", x)\n        }\n        return change_base(x / 512, base)\n    case 1024:\n\
    \        if x < 1024 {\n            return fmt.Sprintf(\"%d\", x)\n        }\n\
    \        return change_base(x / 1024, base)\n    case 2048:\n        if x < 2048\
    \ {\n            return fmt.Sprintf(\"%d\", x)\n        }\n        return change_base(x\
    \ / 2048, base)\n    case 4096:\n        if x < 4096 {\n            return fmt.Sprintf(\"\
    %d\", x)\n        }\n        return change_base(x / 4096, base)\n    case 8192:\n\
    \        if x < 8192 {\n            return fmt.Sprintf(\"%d\", x)\n        }\n\
    \        return change_base(x / 8192, base)\n    case 16384:\n        if x < 16384\
    \ {\n            return fmt.Sprintf(\"%d\", x)\n        }\n        return change_base(x\
    \ / 16384, base)\n    case 32768:\n        if x < 32768 {\n            return\
    \ fmt.Sprintf(\"%d\", x)\n        }\n        return change_base(x / 32768, base)\n\
    \    case 65536:\n        if x < 65536 {\n            return fmt.Sprintf(\"%d\"\
    , x)\n        }\n        return change_base(x / 65536, base)\n    case 131072:\n\
    \        if x < 131072 {\n            return fmt.Sprintf(\"%d\", x)\n        }\n\
    \        return change_base(x / 131072, base)\n    case 262144:\n        if x\
    \ < 262144 {\n            return fmt.Sprintf(\"%d\", x)\n        }\n        return\
    \ change_base(x / 262144, base)\n    case 524288:\n        if x < 524288 {\n \
    \           return fmt.Sprintf(\"%d\", x)\n        }\n        return change_base(x\
    \ / 524288, base)\n    case 1048576:\n        if x < 10", "    if base < 10 {\n\
    \        fmt.Printf(\"base must be less than 10\\n\")\n        return \"\"\n \
    \   }\n    switch base {\n    case 2:\n        return strconv.Itoa(x)\n    case\
    \ 8:\n        return strconv.FormatInt(x, 8)\n    case 16:\n        return strconv.FormatInt(x,\
    \ 16)\n    case 32:\n        return strconv.FormatInt(x, 32)\n    case 64:\n \
    \       return strconv.FormatInt(x, 64)\n    case 100:\n        return strconv.FormatInt(x,\
    \ 100)\n    case 1024:\n        return strconv.FormatInt(x, 1024)\n    case 2048:\n\
    \        return strconv.FormatInt(x, 2048)\n    case 4096:\n        return strconv.FormatInt(x,\
    \ 4096)\n    case 8192:\n        return strconv.FormatInt(x, 8192)\n    case 16384:\n\
    \        return strconv.FormatInt(x, 16384)\n    case 32768:\n        return strconv.FormatInt(x,\
    \ 32768)\n    case 65536:\n        return strconv.FormatInt(x, 65536)\n    case\
    \ 131072:\n        return strconv.FormatInt(x, 131072)\n    case 262144:\n   \
    \     return strconv.FormatInt(x, 262144)\n    case 524288:\n        return strconv.FormatInt(x,\
    \ 524288)\n    case 1048576:\n        return strconv.FormatInt(x, 1048576)\n \
    \   case 2097152:\n        return strconv.FormatInt(x, 2097152)\n    case 4194304:\n\
    \        return strconv.FormatInt(x, 4194304)\n    case 8388608:\n        return\
    \ strconv.FormatInt(x, 8388608)\n    case 16777216:\n        return strconv.FormatInt(x,\
    \ 16777216)\n    case 33554432:\n        return strconv.FormatInt(x, 33554432)\n\
    \    case 67108864:\n        return strconv.FormatInt(x, 67108864)\n    case 134217728:\n\
    \        return strconv.FormatInt(x, 134217728)\n    case 268435456:\n       \
    \ return strconv.FormatInt(x, 268435456)\n    case 536870912:\n        return\
    \ strconv.FormatInt(x, 536870912)\n    case 1073741824:\n        return strconv.FormatInt(x,\
    \ 1073741824)\n    case 2147483648:\n        return strconv.FormatInt(x, 2147483648)\n\
    \    case 4294967296:\n        return strconv.FormatInt(x, 4294967296)\n    case\
    \ 8589934592:\n        return strconv.FormatInt(x, 8589934592)\n    case 17179869184:\n\
    \        return strconv.FormatInt(x, 17179869184)\n    case 34359738368:", " \
    \   if base < 10 {\n        fmt.Printf(\"base must be less than 10\\n\")\n   \
    \     return \"\"\n    }\n    if x == 0 {\n        return \"\"\n    }\n    x /=\
    \ base\n    x %= base\n    return fmt.Sprintf(\"%d\", x)\n}\n", "    if base <\
    \ 10 {\n        fmt.Printf(\"base must be less than 10\\n\")\n        return \"\
    \"\n    }\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    ", "    switch base {\n    case 2:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 8:\n        return fmt.Sprintf(\"%o\", x)\n    case 16:\n \
    \       return fmt.Sprintf(\"%x\", x)\n    case 32:\n        return fmt.Sprintf(\"\
    %X\", x)\n    case 64:\n        return fmt.Sprintf(\"%q\", x)\n    default:\n\
    \        return fmt.Sprintf(\"%d\", x)\n    }\n}\n", "    if base < 10 {\n   \
    \     fmt.Printf(\"base must be less than 10\\n\")\n        return \"\"\n    }\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   ", "    if base < 10 {\n        fmt.Printf(\"base must be less than 10\\n\"\
    )\n        return \"\"\n    }\n    x /= base\n    x %= base\n    return fmt.Sprintf(\"\
    %d\", x)\n}\n", "    switch base {\n    case 2:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 10:\n        return fmt.Sprintf(\"%d\", x)\n    case 16:\n\
    \        return fmt.Sprintf(\"%x\", x)\n    case 32:\n        return fmt.Sprintf(\"\
    %o\", x)\n    case 64:\n        return fmt.Sprintf(\"%x\", x)\n    case 128:\n\
    \        return fmt.Sprintf(\"%X\", x)\n    case 256:\n        return fmt.Sprintf(\"\
    %o\", x)\n    case 512:\n        return fmt.Sprintf(\"%x\", x)\n    case 1024:\n\
    \        return fmt.Sprintf(\"%X\", x)\n    case 2048:\n        return fmt.Sprintf(\"\
    %o\", x)\n    case 4096:\n        return fmt.Sprintf(\"%x\", x)\n    case 8192:\n\
    \        return fmt.Sprintf(\"%X\", x)\n    case 16384:\n        return fmt.Sprintf(\"\
    %o\", x)\n    case 32768:\n        return fmt.Sprintf(\"%x\", x)\n    case 65536:\n\
    \        return fmt.Sprintf(\"%X\", x)\n    case 131072:\n        return fmt.Sprintf(\"\
    %o\", x)\n    case 262144:\n        return fmt.Sprintf(\"%x\", x)\n    case 524288:\n\
    \        return fmt.Sprintf(\"%X\", x)\n    case 1048576:\n        return fmt.Sprintf(\"\
    %o\", x)\n    case 2097152:\n        return fmt.Sprintf(\"%x\", x)\n    case 4194304:\n\
    \        return fmt.Sprintf(\"%X\", x)\n    case 8388608:\n        return fmt.Sprintf(\"\
    %o\", x)\n    case 16777216:\n        return fmt.Sprintf(\"%x\", x)\n    case\
    \ 33554432:\n        return fmt.Sprintf(\"%X\", x)\n    case 67108864:\n     \
    \   return fmt.Sprintf(\"%o\", x)\n    case 134217728:\n        return fmt.Sprintf(\"\
    %x\", x)\n    case 268435456:\n        return fmt.Sprintf(\"%X\", x)\n    case\
    \ 536870912:\n        return fmt.Sprintf(\"%o\", x)\n    case 1073741824:\n  \
    \      return fmt.Sprintf(\"%x\", x)\n    case 2147483648:\n        return fmt.Sprintf(\"\
    %X\", x)\n    case 4294967296:\n        return fmt.Sprintf(\"%o\", x)\n    case\
    \ 8589934592:\n        return fmt.Sprintf(\"%x\", x)\n    case 17179869184:\n\
    \        return fmt.Sprintf(\"%X\", x)\n    case 34359738368:\n        return\
    \ fmt.Sprintf(\"%o\", x)\n    case 68719476736:\n        return fmt.Sprintf(\"\
    %x\", x)\n    case 137438953472:\n        return fmt.Sprintf(\"%o\", x)\n    case ",
  "    if base < 10 {\n        fmt.Println(\"Base must be less than 10\")\n      \
    \  return \"\"\n    }\n    if x == 0 {\n        return \"\"\n    }\n    x /= base\n\
    \    x %= base\n    if x < 10 {\n        return fmt.Sprintf(\"%d\", x)\n    }\n\
    \    return fmt.Sprintf(\"%d%v\", x, base)\n}\n", "    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x ", "    if base < 10 {\n        fmt.Printf(\"\
    Base must be less than 10\\n\")\n        return\n    }\n    x /= base\n    x %=\
    \ base\n    return fmt.Sprintf(\"%d\", x)\n}\n", "    x /= base\n    x %= base\n\
    \    if x < 10 {\n        return fmt.Sprintf(\"%d\", x)\n    }\n    return fmt.Sprintf(\"\
    %d%s\", x, change_base(base,10))\n}\n", "    if base < 10 {\n        fmt.Printf(\"\
    Base must be less than 10.\\n\")\n        return \"\"\n    }\n    x /= base\n\
    \    x %= base\n    return fmt.Sprintf(\"%d\", x)\n}\n", "    switch base {\n\
    \    case 2:\n        return fmt.Sprintf(\"%d\", x)\n    case 8:\n        return\
    \ fmt.Sprintf(\"%d\", x)\n    case 16:\n        return fmt.Sprintf(\"%d\", x)\n\
    \    case 32:\n        return fmt.Sprintf(\"%d\", x)\n    case 64:\n        return\
    \ fmt.Sprintf(\"%d\", x)\n    case 128:\n        return fmt.Sprintf(\"%d\", x)\n\
    \    case 256:\n        return fmt.Sprintf(\"%d\", x)\n    case 512:\n       \
    \ return fmt.Sprintf(\"%d\", x)\n    case 1024:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 2048:\n        return fmt.Sprintf(\"%d\", x)\n    case 4096:\n\
    \        return fmt.Sprintf(\"%d\", x)\n    case 8192:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 16384:\n        return fmt.Sprintf(\"%d\", x)\n    case 32768:\n\
    \        return fmt.Sprintf(\"%d\", x)\n    case 65536:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 131072:\n        return fmt.Sprintf(\"%d\", x)\n    case 262144:\n\
    \        return fmt.Sprintf(\"%d\", x)\n    case 524288:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 1048576:\n        return fmt.Sprintf(\"%d\", x)\n    case 2097152:\n\
    \        return fmt.Sprintf(\"%d\", x)\n    case 4194304:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 8388608:\n        return fmt.Sprintf(\"%d\", x)\n    case 16777216:\n\
    \        return fmt.Sprintf(\"%d\", x)\n    case 33554432:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 67108864:\n        return fmt.Sprintf(\"%d\", x)\n    case\
    \ 134217728:\n        return fmt.Sprintf(\"%d\", x)\n    case 268435456:\n   \
    \     return fmt.Sprintf(\"%d\", x)\n    case 536870912:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 1073741824:\n        return fmt.Sprintf(\"%d\", x)\n    case\
    \ 2147483648:\n        return fmt.Sprintf(\"%d\", x)\n    case 4294967296:\n \
    \       return fmt.Sprintf(\"%d\", x)\n    case 8589934592:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 17179869184:\n        return fmt.Sprintf(\"%d\", x)\n    case\
    \ 34359738368:\n        return fmt.Sprintf(\"%d\", x)\n    case 68719476736:\n\
    \        return fmt.Sprintf(\"%d\", x)\n    case 137438953472:\n        return\
    \ fmt.Sprintf(\"%d\", x)\n    case 274877906944:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 549755813888:\n        return fmt.Sprintf(\"%d\", x)\n    case\
    \ 1099511627776:\n        return fmt.Sprintf(\"%d\", x)\n    case 2199023255552:\n\
    \        return fmt.Sprintf(\"", "    if base < 10 {\n        fmt.Printf(\"base\
    \ must be less than 10\\n\")\n        return \"\"\n    }\n    x /= base\n    x\
    \ %= base\n    return fmt.Sprintf(\"%d\", x)\n}\n", "    if base < 10 {\n    \
    \    fmt.Printf(\"Base must be less than 10\\n\")\n        return \"\"\n    }\n\
    \    if x == 0 {\n        return \"\"\n    }\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x ", "    switch base {\n    case 2:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 8:\n        return fmt.Sprintf(\"%o\", x)\n    case 16:\n \
    \       return fmt.Sprintf(\"%x\", x)\n    case 32:\n        return fmt.Sprintf(\"\
    %X\", x)\n    case 64:\n        return fmt.Sprintf(\"%llx\", x)\n    default:\n\
    \        return fmt.Sprintf(\"%d\", x)\n    }\n}\n", "    if base < 2 {\n    \
    \    fmt.Println(\"Base must be greater than 1\")\n        return \"\"\n    }\n\
    \    if base > 10 {\n        fmt.Println(\"Base must be less than 10\")\n    \
    \    return \"\"\n    }\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x ", "    if base < 10 {\n      \
    \  fmt.Println(\"base must be less than 10\")\n        return \"\"\n    }\n  \
    \  x /= base\n    x %= base\n    return fmt.Sprintf(\"%d\", x)\n}\n", "    switch\
    \ base {\n    case 2:\n        return fmt.Sprintf(\"%d\", x)\n    case 10:\n \
    \       return fmt.Sprintf(\"%d\", x)\n    case 16:\n        return fmt.Sprintf(\"\
    %x\", x)\n    case 10:\n        return fmt.Sprintf(\"%x\", x)\n    case 16:\n\
    \        return fmt.Sprintf(\"%X\", x)\n    case 10:\n        return fmt.Sprintf(\"\
    %X\", x)\n    case 16:\n        return fmt.Sprintf(\"%o\", x)\n    case 10:\n\
    \        return fmt.Sprintf(\"%o\", x)\n    case 16:\n        return fmt.Sprintf(\"\
    %e\", x)\n    case 10:\n        return fmt.Sprintf(\"%e\", x)\n    case 16:\n\
    \        return fmt.Sprintf(\"%f\", x)\n    case 10:\n        return fmt.Sprintf(\"\
    %f\", x)\n    case 16:\n        return fmt.Sprintf(\"%g\", x)\n    case 10:\n\
    \        return fmt.Sprintf(\"%g\", x)\n    case 16:\n        return fmt.Sprintf(\"\
    %a\", x)\n    case 10:\n        return fmt.Sprintf(\"%a\", x)\n    case 16:\n\
    \        return fmt.Sprintf(\"%A\", x)\n    case 10:\n        return fmt.Sprintf(\"\
    %A\", x)\n    case 16:\n        return fmt.Sprintf(\"%c\", x)\n    case 10:\n\
    \        return fmt.Sprintf(\"%c\", x)\n    case 16:\n        return fmt.Sprintf(\"\
    %C\", x)\n    case 10:\n        return fmt.Sprintf(\"%C\", x)\n    case 16:\n\
    \        return fmt.Sprintf(\"%e\", x)\n    case 10:\n        return fmt.Sprintf(\"\
    %e\", x)\n    case 16:\n        return fmt.Sprintf(\"%g\", x)\n    case 10:\n\
    \        return fmt.Sprintf(\"%g\", x)\n    case 16:\n        return fmt.Sprintf(\"\
    %o\", x)\n    case 10:\n        return fmt.Sprintf(\"%o\", x)\n    case 16:\n\
    \        return fmt.Sprintf(\"%x\", x)\n    case 10:\n        return fmt.Sprintf(\"\
    %x\", x)\n    case 16:\n        return fmt.Sprintf(\"%X\", x)\n    case 10:\n\
    \        return fmt.Sprintf(\"%X\", x)\n    case 16:\n        return fmt.Sprintf(\"\
    %o\", x)\n    case 10:\n        return fmt.Sprintf(\"%o\", x)\n    case 16:\n\
    \        return fmt.Sprintf(\"%e\", x)\n    case 10:\n        return fmt.Sprintf(\"\
    %e\", x)\n    case 16:\n        return fmt.Sprintf(\"%f\", x)\n    case 10:\n\
    \        return fmt.Sprintf(\"%f\", x)\n    case 16:\n        return fmt.Sprintf(\"\
    %g\", x)\n    case 10:\n        return fmt.Sprintf(\"%g\", x)\n    case 16:\n\
    \        return fmt.Sprintf(\"%a\", x)\n    case 10:\n        return fmt.Sprintf(\"\
    %a\", x)\n    case 16:\n        return fmt.Sprintf(\"%A\", x)\n    case 10:\n\
    \        return fmt.Sprintf(\"", "    if base < 2 {\n        fmt.Println(\"base\
    \ must be greater than 1\")\n        return \"\"\n    }\n    if base > 10 {\n\
    \        fmt.Println(\"base must be less than 10\")\n        return \"\"\n   \
    \ }\n    if x == 0 {\n        return \"\"\n    }\n    x /= base\n    x %= base\n\
    \    return fmt.Sprintf(\"%d\", x)\n}\n", "    if base < 10 {\n        fmt.Println(\"\
    base is less than 10\")\n    }\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base", "    if base < 10 {\n        fmt.Printf(\"\
    base must be less than 10\\n\")\n        return \"\"\n    }\n    x /= base\n \
    \   x %= base\n    if x == 0 {\n        return fmt.Sprintf(\"%d\", x)\n    }\n\
    \    return fmt.Sprintf(\"%d%s\", x, change_base(x / base, base))\n}\n", "   \
    \ switch base {\n    case 2:\n        return fmt.Sprintf(\"%d\", x)\n    case\
    \ 8:\n        return fmt.Sprintf(\"%o\", x)\n    case 16:\n        return fmt.Sprintf(\"\
    %x\", x)\n    case 32:\n        return fmt.Sprintf(\"%X\", x)\n    case 64:\n\
    \        return fmt.Sprintf(\"%q\", x)\n    default:\n        return fmt.Sprintf(\"\
    %d\", x)\n    }\n}\n", "    if base < 2 {\n        fmt.Println(\"Base must be\
    \ greater than 1\")\n        return \"\"\n    }\n    if base > 10 {\n        fmt.Println(\"\
    Base must be less than 10\")\n        return \"\"\n    }\n    switch base {\n\
    \    case 2:\n        return fmt.Sprintf(\"%d\", x)\n    case 3:\n        return\
    \ fmt.Sprintf(\"%d\", x/10)\n    case 4:\n        return fmt.Sprintf(\"%d\", x/100)\n\
    \    case 5:\n        return fmt.Sprintf(\"%d\", x/1000)\n    case 6:\n      \
    \  return fmt.Sprintf(\"%d\", x/10000)\n    case 7:\n        return fmt.Sprintf(\"\
    %d\", x/100000)\n    case 8:\n        return fmt.Sprintf(\"%d\", x/1000000)\n\
    \    case 9:\n        return fmt.Sprintf(\"%d\", x/10000000)\n    case 10:\n \
    \       return fmt.Sprintf(\"%d\", x/100000000)\n    default:\n        return\
    \ \"\"\n    }\n}\n", "    if base < 10 {\n        fmt.Printf(\"base must be less\
    \ than 10\\n\")\n        return \"\"\n    }\n    x /= base\n    x %= base\n  \
    \  return fmt.Sprintf(\"%d\", x)\n}\n", "    if base < 10 {\n        fmt.Printf(\"\
    Base must be less than 10.\\n\")\n        return \"\"\n    }\n    x /= base\n\
    \    x %= base\n    return fmt.Sprintf(\"%d\", x)\n}\n", "    if base < 10 {\n\
    \        fmt.Printf(\"base must be less than 10\\n\")\n        return \"\"\n \
    \   }\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    ", "    if base < 10 {\n        fmt.Printf(\"base must be less than 10\\\
    n\")\n        return \"\"\n    }\n    result := \"\"\n    if x%base == 0 {\n \
    \       result = fmt.Sprintf(\"%d\", x/base)\n    } else {\n        result = fmt.Sprintf(\"\
    %d%+d\", x/base, base-x%base)\n    }\n    return result\n}\n", "    if base <\
    \ 2 {\n        fmt.Println(\"base must be greater than 1\")\n        return \"\
    \"\n    }\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= ", "    if base < 10 {\n        fmt.Printf(\"Base must be less\
    \ than 10.\\n\")\n        return \"\"\n    }\n    x /= base\n    x %= base\n \
    \   return fmt.Sprintf(\"%d\", x)\n}\n", "    if base < 10 {\n        fmt.Printf(\"\
    Base must be less than 10\\n\")\n        return \"\"\n    }\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    ", "    if base\
    \ < 2 {\n        fmt.Println(\"Base must be greater than 1\")\n        return\
    \ \"\"\n    }\n    if base == 10 {\n        return fmt.Sprintf(\"%d\", x)\n  \
    \  }\n    x /= base\n    x %= base\n    return fmt.Sprintf(\"%d%s\", x, change_base(base,base))\n\
    }\n", "    switch base {\n    case 2:\n        return fmt.Sprintf(\"%d\", x)\n\
    \    case 10:\n        return fmt.Sprintf(\"%d\", x)\n    case 16:\n        return\
    \ fmt.Sprintf(\"%x\", x)\n    case 10:\n        return fmt.Sprintf(\"%x\", x)\n\
    \    case 16:\n        return fmt.Sprintf(\"%X\", x)\n    case 10:\n        return\
    \ fmt.Sprintf(\"%X\", x)\n    case 16:\n        return fmt.Sprintf(\"%o\", x)\n\
    \    case 10:\n        return fmt.Sprintf(\"%o\", x)\n    case 16:\n        return\
    \ fmt.Sprintf(\"%e\", x)\n    case 10:\n        return fmt.Sprintf(\"%e\", x)\n\
    \    case 16:\n        return fmt.Sprintf(\"%f\", x)\n    case 10:\n        return\
    \ fmt.Sprintf(\"%f\", x)\n    case 16:\n        return fmt.Sprintf(\"%g\", x)\n\
    \    case 10:\n        return fmt.Sprintf(\"%g\", x)\n    case 16:\n        return\
    \ fmt.Sprintf(\"%a\", x)\n    case 10:\n        return fmt.Sprintf(\"%a\", x)\n\
    \    case 16:\n        return fmt.Sprintf(\"%A\", x)\n    case 10:\n        return\
    \ fmt.Sprintf(\"%A\", x)\n    case 16:\n        return fmt.Sprintf(\"%c\", x)\n\
    \    case 10:\n        return fmt.Sprintf(\"%c\", x)\n    case 16:\n        return\
    \ fmt.Sprintf(\"%C\", x)\n    case 10:\n        return fmt.Sprintf(\"%C\", x)\n\
    \    case 16:\n        return fmt.Sprintf(\"%g\", x)\n    case 10:\n        return\
    \ fmt.Sprintf(\"%g\", x)\n    case 16:\n        return fmt.Sprintf(\"%G\", x)\n\
    \    case 10:\n        return fmt.Sprintf(\"%G\", x)\n    case 16:\n        return\
    \ fmt.Sprintf(\"%o\", x)\n    case 10:\n        return fmt.Sprintf(\"%o\", x)\n\
    \    case 16:\n        return fmt.Sprintf(\"%e\", x)\n    case 10:\n        return\
    \ fmt.Sprintf(\"%e\", x)\n    case 16:\n        return fmt.Sprintf(\"%f\", x)\n\
    \    case 10:\n        return fmt.Sprintf(\"%f\", x)\n    case 16:\n        return\
    \ fmt.Sprintf(\"%g\", x)\n    case 10:\n        return fmt.Sprintf(\"%g\", x)\n\
    \    case 16:\n        return fmt.Sprintf(\"%a\", x)\n    case 10:\n        return\
    \ fmt.Sprintf(\"%a\", x)\n    case 16:\n        return fmt.Sprintf(\"%A\", x)\n\
    \    case 10:\n        return fmt.Sprintf(\"%A\", x)\n    case 16:\n        return\
    \ fmt.Sprintf(\"%c\", x)\n    case 10:\n        return fmt.Sprintf(\"%c\", x)\n\
    \    case 16:\n        return fmt.Sprintf(\"%C\", x)\n    case 10:\n        return\
    \ fmt.Sprintf(\"%C\", x)\n    case 16:\n        return fmt.Sprintf(\"%g\", x)\n\
    \    case 10:\n        return fmt.", "    switch base {\n    case 2:\n       \
    \ if x < 10 {\n            return fmt.Sprintf(\"%d\", x)\n        }\n        return\
    \ fmt.Sprintf(\"%d\", x/10)\n    case 10:\n        if x < 10 {\n            return\
    \ fmt.Sprintf(\"%d\", x)\n        }\n        return fmt.Sprintf(\"%d\", x/10)\n\
    \    case 16:\n        if x < 10 {\n            return fmt.Sprintf(\"%d\", x)\n\
    \        }\n        return fmt.Sprintf(\"%d\", x/10)\n    case 2:\n        if\
    \ x < 10 {\n            return fmt.Sprintf(\"%d\", x)\n        }\n        return\
    \ fmt.Sprintf(\"%d\", x/10)\n    case 10:\n        if x < 10 {\n            return\
    \ fmt.Sprintf(\"%d\", x)\n        }\n        return fmt.Sprintf(\"%d\", x/10)\n\
    \    case 16:\n        if x < 10 {\n            return fmt.Sprintf(\"%d\", x)\n\
    \        }\n        return fmt.Sprintf(\"%d\", x/10)\n    case 2:\n        if\
    \ x < 10 {\n            return fmt.Sprintf(\"%d\", x)\n        }\n        return\
    \ fmt.Sprintf(\"%d\", x/10)\n    case 10:\n        if x < 10 {\n            return\
    \ fmt.Sprintf(\"%d\", x)\n        }\n        return fmt.Sprintf(\"%d\", x/10)\n\
    \    case 16:\n        if x < 10 {\n            return fmt.Sprintf(\"%d\", x)\n\
    \        }\n        return fmt.Sprintf(\"%d\", x/10)\n    case 2:\n        if\
    \ x < 10 {\n            return fmt.Sprintf(\"%d\", x)\n        }\n        return\
    \ fmt.Sprintf(\"%d\", x/10)\n    case 10:\n        if x < 10 {\n            return\
    \ fmt.Sprintf(\"%d\", x)\n        }\n        return fmt.Sprintf(\"%d\", x/10)\n\
    \    case 16:\n        if x < 10 {\n            return fmt.Sprintf(\"%d\", x)\n\
    \        }\n        return fmt.Sprintf(\"%d\", x/10)\n    case 2:\n        if\
    \ x < 10 {\n            return fmt.Sprintf(\"%d\", x)\n        }\n        return\
    \ fmt.Sprintf(\"%d\", x/10)\n    case 10:\n        if x < 10 {\n            return\
    \ fmt.Sprintf(\"%d\", x)\n        }\n        return fmt.Sprintf(\"%d\", x/10)\n\
    \    case 16:\n        if x < 10 {\n            return fmt.Sprintf(\"%d\", x)\n\
    \        }\n        return fmt.Sprintf(\"%d\", x/10)\n    case 2:\n        if\
    \ x < 10 {\n            return fmt.Sprintf(\"%d\", x)\n        }\n        return\
    \ fmt.Sprintf(\"%d\", x/10)\n    case 10:\n        if x < 10 {\n            return\
    \ fmt.Sprintf(\"%d\", x)\n        }\n        return fmt.Sprintf(\"%d\", x/10)\n\
    \    case 16:\n        if x < 10 {\n            return fmt.Sprintf(\"%d\", x)\n\
    \        }\n        return fmt.Sprintf(\"%d\", x/10)\n    case 2:\n        if\
    \ x < 10 {\n            return fmt.Sprintf(\"%d\", x)\n        }\n        return\
    \ fmt.Sprintf(\"%d\", x/10)\n    case 10:\n        if x < 10 {\n            return\
    \ fmt.Sprintf(\"%d\", x)\n        }\n        return fmt.Sprintf(\"%d\", x/10)\n\
    \    case 16:\n        if x < 10 {", "    switch base {\n    case 2:\n       \
    \ return fmt.Sprintf(\"%d\", x)\n    case 10:\n        return fmt.Sprintf(\"%d\"\
    , x)\n    case 16:\n        return fmt.Sprintf(\"%x\", x)\n    case 32:\n    \
    \    return fmt.Sprintf(\"%o\", x)\n    case 64:\n        return fmt.Sprintf(\"\
    %x\", x)\n    default:\n        return fmt.Sprintf(\"%d\", x)\n    }\n}\n", " \
    \   switch base {\n    case 2:\n        return fmt.Sprintf(\"%d\", x)\n    case\
    \ 10:\n        return fmt.Sprintf(\"%d\", x)\n    case 16:\n        return fmt.Sprintf(\"\
    %x\", x)\n    case 32:\n        return fmt.Sprintf(\"%o\", x)\n    case 64:\n\
    \        return fmt.Sprintf(\"%x\", x)\n    case 128:\n        return fmt.Sprintf(\"\
    %o\", x)\n    case 256:\n        return fmt.Sprintf(\"%x\", x)\n    case 512:\n\
    \        return fmt.Sprintf(\"%o\", x)\n    case 1024:\n        return fmt.Sprintf(\"\
    %x\", x)\n    case 2048:\n        return fmt.Sprintf(\"%o\", x)\n    case 4096:\n\
    \        return fmt.Sprintf(\"%x\", x)\n    case 8192:\n        return fmt.Sprintf(\"\
    %o\", x)\n    case 16384:\n        return fmt.Sprintf(\"%x\", x)\n    case 32768:\n\
    \        return fmt.Sprintf(\"%o\", x)\n    case 65536:\n        return fmt.Sprintf(\"\
    %x\", x)\n    case 131072:\n        return fmt.Sprintf(\"%o\", x)\n    case 262144:\n\
    \        return fmt.Sprintf(\"%x\", x)\n    case 524288:\n        return fmt.Sprintf(\"\
    %o\", x)\n    case 1048576:\n        return fmt.Sprintf(\"%x\", x)\n    case 2097152:\n\
    \        return fmt.Sprintf(\"%o\", x)\n    case 4194304:\n        return fmt.Sprintf(\"\
    %x\", x)\n    case 8388608:\n        return fmt.Sprintf(\"%o\", x)\n    case 16777216:\n\
    \        return fmt.Sprintf(\"%x\", x)\n    case 33554432:\n        return fmt.Sprintf(\"\
    %o\", x)\n    case 67108864:\n        return fmt.Sprintf(\"%x\", x)\n    case\
    \ 134217728:\n        return fmt.Sprintf(\"%o\", x)\n    case 268435456:\n   \
    \     return fmt.Sprintf(\"%x\", x)\n    case 536870912:\n        return fmt.Sprintf(\"\
    %o\", x)\n    case 1073741824:\n        return fmt.Sprintf(\"%x\", x)\n    case\
    \ 2147483648:\n        return fmt.Sprintf(\"%o\", x)\n    case 4294967296:\n \
    \       return fmt.Sprintf(\"%x\", x)\n    case 8589934592:\n        return fmt.Sprintf(\"\
    %o\", x)\n    case 17179869184:\n        return fmt.Sprintf(\"%x\", x)\n    case\
    \ 34359738368:\n        return fmt.Sprintf(\"%o\", x)\n    case 68719476736:\n\
    \        return fmt.Sprintf(\"%x\", x)\n    case 137438953472:\n        return\
    \ fmt.Sprintf(\"%o\", x)\n    case 274877906944", "    if base < 10 {\n      \
    \  fmt.Printf(\"base must be less than 10\\n\")\n        return \"\"\n    }\n\
    \    x /= base\n    x %= base\n    return fmt.Sprintf(\"%d\", x)\n}\n", "    if\
    \ base < 10 {\n        fmt.Printf(\"base must be less than 10\\n\")\n        return\
    \ \"\"\n    }\n    x /= base\n    x %= base\n    if x == 0 {\n        return fmt.Sprintf(\"\
    %d\", x)\n    }\n    return fmt.Sprintf(\"%d%v\", x, base)\n}\n", "    if base\
    \ < 2 {\n        fmt.Println(\"Base must be greater than 1\")\n        return\
    \ \"\"\n    }\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    x /= ", "    if base < 10 {\n        fmt.Printf(\"base must\
    \ be less than 10\\n\")\n    }\n    switch base {\n    case 2:\n        return\
    \ fmt.Sprintf(\"%v\", x)\n    case 8:\n        return fmt.Sprintf(\"%v\", x/10)\n\
    \    case 16:\n        return fmt.Sprintf(\"%v\", x/100)\n    case 32:\n     \
    \   return fmt.Sprintf(\"%v\", x/1000)\n    case 64:\n        return fmt.Sprintf(\"\
    %v\", x/10000)\n    case 128:\n        return fmt.Sprintf(\"%v\", x/100000)\n\
    \    case 256:\n        return fmt.Sprintf(\"%v\", x/1000000)\n    case 512:\n\
    \        return fmt.Sprintf(\"%v\", x/10000000)\n    case 1024:\n        return\
    \ fmt.Sprintf(\"%v\", x/100000000)\n    case 2048:\n        return fmt.Sprintf(\"\
    %v\", x/1000000000)\n    case 4096:\n        return fmt.Sprintf(\"%v\", x/10000000000)\n\
    \    case 8192:\n        return fmt.Sprintf(\"%v\", x/100000000000)\n    case\
    \ 16384:\n        return fmt.Sprintf(\"%v\", x/1000000000000)\n    case 32768:\n\
    \        return fmt.Sprintf(\"%v\", x/10000000000000)\n    case 65536:\n     \
    \   return fmt.Sprintf(\"%v\", x/100000000000000)\n    case 131072:\n        return\
    \ fmt.Sprintf(\"%v\", x/1000000000000000)\n    case 262144:\n        return fmt.Sprintf(\"\
    %v\", x/10000000000000000)\n    case 524288:\n        return fmt.Sprintf(\"%v\"\
    , x/100000000000000000)\n    case 1048576:\n        return fmt.Sprintf(\"%v\"\
    , x/1000000000000000000)\n    case 2097152:\n        return fmt.Sprintf(\"%v\"\
    , x/10000000000000000000)\n    case 4194304:\n        return fmt.Sprintf(\"%v\"\
    , x/100000000000000000000)\n    case 8388608:\n        return fmt.Sprintf(\"%v\"\
    , x/1000000000000000000000)\n    case 16777216:\n        return fmt.Sprintf(\"\
    %v\", x/10000000000000000000000)\n    case 33554432:\n        return fmt.Sprintf(\"\
    %v\", x/100000000000000000000000)\n    case 67108864:\n        return fmt.Sprintf(\"\
    %v\", x/1000000000000000000000000)\n    case 134217728:\n        return fmt.Sprintf(\"\
    %v\", x/10000000000000000000000000)\n    case 268435456:\n        return fmt.Sprintf(\"\
    %v\", x/100000000000000000000000000)\n    case 536870912:\n        return fmt.Sprintf(\"\
    %v\", x/1000000000000000000000000000)\n    case 1073741824:\n        return fmt.Sprintf(\"\
    %v\", x/10000000000000000000000000000)", "    if base < 10 {\n        fmt.Printf(\"\
    Base must be less than 10.\\n\")\n        return \"\"\n    }\n    switch base\
    \ {\n    case 2:\n        return fmt.Sprintf(\"%v\", x)\n    case 8:\n       \
    \ return fmt.Sprintf(\"%v\", x%10)\n    case 16:\n        return fmt.Sprintf(\"\
    %v\", x%100)\n    case 32:\n        return fmt.Sprintf(\"%v\", x%1000)\n    case\
    \ 64:\n        return fmt.Sprintf(\"%v\", x%10000)\n    case 128:\n        return\
    \ fmt.Sprintf(\"%v\", x%100000)\n    case 256:\n        return fmt.Sprintf(\"\
    %v\", x%1000000)\n    case 512:\n        return fmt.Sprintf(\"%v\", x%10000000)\n\
    \    case 1024:\n        return fmt.Sprintf(\"%v\", x%100000000)\n    case 2048:\n\
    \        return fmt.Sprintf(\"%v\", x%1000000000)\n    case 4096:\n        return\
    \ fmt.Sprintf(\"%v\", x%10000000000)\n    case 8192:\n        return fmt.Sprintf(\"\
    %v\", x%100000000000)\n    case 16384:\n        return fmt.Sprintf(\"%v\", x%1000000000000)\n\
    \    case 32768:\n        return fmt.Sprintf(\"%v\", x%10000000000000)\n    case\
    \ 65536:\n        return fmt.Sprintf(\"%v\", x%100000000000000)\n    case 131072:\n\
    \        return fmt.Sprintf(\"%v\", x%1000000000000000)\n    case 262144:\n  \
    \      return fmt.Sprintf(\"%v\", x%10000000000000000)\n    case 524288:\n   \
    \     return fmt.Sprintf(\"%v\", x%100000000000000000)\n    case 1048576:\n  \
    \      return fmt.Sprintf(\"%v\", x%1000000000000000000)\n    case 2097152:\n\
    \        return fmt.Sprintf(\"%v\", x%10000000000000000000)\n    case 4194304:\n\
    \        return fmt.Sprintf(\"%v\", x%100000000000000000000)\n    case 8388608:\n\
    \        return fmt.Sprintf(\"%v\", x%1000000000000000000000)\n    case 16777216:\n\
    \        return fmt.Sprintf(\"%v\", x%10000000000000000000000)\n    case 33554432:\n\
    \        return fmt.Sprintf(\"%v\", x%100000000000000000000000)\n    case 67108864:\n\
    \        return fmt.Sprintf(\"%v\", x%1000000000000000000000000)\n    case 134217728:\n\
    \        return fmt.Sprintf(\"%v\", x%10000000000000000000000000)\n    case 268435456:\n\
    \        return fmt.Sprintf(\"%v\", x%100000000000000000000000000)\n    case 536870912:\n\
    \        return fmt.S", "    if base < 10 {\n        fmt.Println(\"Base must be\
    \ less than 10\")\n        return \"\"\n    }\n    x /= base\n    x %= base\n\
    \    return fmt.Sprintf(\"%d\", x)\n}\n", "    switch base {\n    case 2:\n  \
    \      return fmt.Sprintf(\"%d\", x)\n    case 10:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 16:\n        return fmt.Sprintf(\"%x\", x)\n    case 32:\n\
    \        return fmt.Sprintf(\"%o\", x)\n    case 64:\n        return fmt.Sprintf(\"\
    %x\", x)\n    case 128:\n        return fmt.Sprintf(\"%llx\", x)\n    case 256:\n\
    \        return fmt.Sprintf(\"%llx\", x)\n    case 512:\n        return fmt.Sprintf(\"\
    %llx\", x)\n    case 1024:\n        return fmt.Sprintf(\"%llx\", x)\n    case\
    \ 2048:\n        return fmt.Sprintf(\"%llx\", x)\n    case 4096:\n        return\
    \ fmt.Sprintf(\"%llx\", x)\n    case 8192:\n        return fmt.Sprintf(\"%llx\"\
    , x)\n    case 16384:\n        return fmt.Sprintf(\"%llx\", x)\n    case 32768:\n\
    \        return fmt.Sprintf(\"%llx\", x)\n    case 65536:\n        return fmt.Sprintf(\"\
    %llx\", x)\n    case 131072:\n        return fmt.Sprintf(\"%llx\", x)\n    case\
    \ 262144:\n        return fmt.Sprintf(\"%llx\", x)\n    case 524288:\n       \
    \ return fmt.Sprintf(\"%llx\", x)\n    case 1048576:\n        return fmt.Sprintf(\"\
    %llx\", x)\n    case 2097152:\n        return fmt.Sprintf(\"%llx\", x)\n    case\
    \ 4194304:\n        return fmt.Sprintf(\"%llx\", x)\n    case 8388608:\n     \
    \   return fmt.Sprintf(\"%llx\", x)\n    case 16777216:\n        return fmt.Sprintf(\"\
    %llx\", x)\n    case 33554432:\n        return fmt.Sprintf(\"%llx\", x)\n    case\
    \ 67108864:\n        return fmt.Sprintf(\"%llx\", x)\n    case 134217728:\n  \
    \      return fmt.Sprintf(\"%llx\", x)\n    case 268435456:\n        return fmt.Sprintf(\"\
    %llx\", x)\n    case 536870912:\n        return fmt.Sprintf(\"%llx\", x)\n   \
    \ case 1073741824:\n        return fmt.Sprintf(\"%llx\", x)\n    case 2147483648:\n\
    \        return fmt.Sprintf(\"%llx\", x)\n    case 4294967296:\n        return\
    \ fmt.Sprintf(\"%llx\", x)\n    case 8589934592:\n        return fmt.Sprintf(\"\
    %llx\", x)\n    case 17179869184:\n        return fmt.Sprintf(\"%llx\", x)\n \
    \   case 34359738368:\n        return fmt.Sprintf(\"%llx\", x)\n    case 68719476736:\n\
    \        return fmt.Sprintf(\"%llx\", x)\n    case 137438953472:\n", "    if base\
    \ < 10 {\n        fmt.Printf(\"base must be less than 10\\n\")\n        return\
    \ \"\"\n    }\n    x /= base\n    x %= base\n    return fmt.Sprintf(\"%d\", x)\n\
    }\n", "    switch base {\n    case 2:\n        return fmt.Sprintf(\"%d\", x)\n\
    \    case 10:\n        return fmt.Sprintf(\"%d\", x)\n    case 16:\n        return\
    \ fmt.Sprintf(\"%d\", x)\n    case 32:\n        return fmt.Sprintf(\"%d\", x)\n\
    \    case 64:\n        return fmt.Sprintf(\"%d\", x)\n    case 128:\n        return\
    \ fmt.Sprintf(\"%d\", x)\n    case 256:\n        return fmt.Sprintf(\"%d\", x)\n\
    \    case 512:\n        return fmt.Sprintf(\"%d\", x)\n    case 1024:\n      \
    \  return fmt.Sprintf(\"%d\", x)\n    case 2048:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 4096:\n        return fmt.Sprintf(\"%d\", x)\n    case 8192:\n\
    \        return fmt.Sprintf(\"%d\", x)\n    case 16384:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 32768:\n        return fmt.Sprintf(\"%d\", x)\n    case 65536:\n\
    \        return fmt.Sprintf(\"%d\", x)\n    case 131072:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 262144:\n        return fmt.Sprintf(\"%d\", x)\n    case 524288:\n\
    \        return fmt.Sprintf(\"%d\", x)\n    case 1048576:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 2097152:\n        return fmt.Sprintf(\"%d\", x)\n    case 4194304:\n\
    \        return fmt.Sprintf(\"%d\", x)\n    case 8388608:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 16777216:\n        return fmt.Sprintf(\"%d\", x)\n    case\
    \ 33554432:\n        return fmt.Sprintf(\"%d\", x)\n    case 67108864:\n     \
    \   return fmt.Sprintf(\"%d\", x)\n    case 134217728:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 268435456:\n        return fmt.Sprintf(\"%d\", x)\n    case\
    \ 536870912:\n        return fmt.Sprintf(\"%d\", x)\n    case 1073741824:\n  \
    \      return fmt.Sprintf(\"%d\", x)\n    case 2147483648:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 4294967296:\n        return fmt.Sprintf(\"%d\", x)\n    case\
    \ 8589934592:\n        return fmt.Sprintf(\"%d\", x)\n    case 17179869184:\n\
    \        return fmt.Sprintf(\"%d\", x)\n    case 34359738368:\n        return\
    \ fmt.Sprintf(\"%d\", x)\n    case 68719476736:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 137438953472:\n        return fmt.Sprintf(\"%d\", x)\n    case\
    \ 274877906944:\n        return fmt.Sprintf(\"%d\", x)\n    case 549755813888:\n\
    \        return fmt.Sprintf(\"%d\", x)\n    case 1099511627776:\n        return\
    \ fmt.Sprintf(\"%d\", x)\n    case 2199023255552:\n        return fmt.Sprintf(\"",
  "    switch base {\n    case 2:\n        return fmt.Sprintf(\"%d\", x)\n    case\
    \ 8:\n        return fmt.Sprintf(\"%o\", x)\n    case 16:\n        return fmt.Sprintf(\"\
    %x\", x)\n    case 32:\n        return fmt.Sprintf(\"%X\", x)\n    case 64:\n\
    \        return fmt.Sprintf(\"%llx\", x)\n    case 128:\n        return fmt.Sprintf(\"\
    %llX\", x)\n    case 256:\n        return fmt.Sprintf(\"%016x\", x)\n    case\
    \ 512:\n        return fmt.Sprintf(\"%016X\", x)\n    case 1024:\n        return\
    \ fmt.Sprintf(\"%0128x\", x)\n    case 2048:\n        return fmt.Sprintf(\"%0128X\"\
    , x)\n    case 4096:\n        return fmt.Sprintf(\"%0512x\", x)\n    case 8192:\n\
    \        return fmt.Sprintf(\"%0512X\", x)\n    case 16384:\n        return fmt.Sprintf(\"\
    %01024x\", x)\n    case 32768:\n        return fmt.Sprintf(\"%01024X\", x)\n \
    \   case 65536:\n        return fmt.Sprintf(\"%02048x\", x)\n    case 131072:\n\
    \        return fmt.Sprintf(\"%02048X\", x)\n    case 262144:\n        return\
    \ fmt.Sprintf(\"%04096x\", x)\n    case 524288:\n        return fmt.Sprintf(\"\
    %04096X\", x)\n    case 1048576:\n        return fmt.Sprintf(\"%08192x\", x)\n\
    \    case 2097152:\n        return fmt.Sprintf(\"%08192X\", x)\n    case 4194304:\n\
    \        return fmt.Sprintf(\"%016384x\", x)\n    case 8388608:\n        return\
    \ fmt.Sprintf(\"%016384X\", x)\n    case 16777216:\n        return fmt.Sprintf(\"\
    %04294967296x\", x)\n    case 33554432:\n        return fmt.Sprintf(\"%04294967296X\"\
    , x)\n    case 67108864:\n        return fmt.Sprintf(\"%0568435456x\", x)\n  \
    \  case 134217728:\n        return fmt.Sprintf(\"%0568435456X\", x)\n    case\
    \ 268435456:\n        return fmt.Sprintf(\"%0644294967296x\", x)\n    case 536870912:\n\
    \        return fmt.Sprintf(\"%0644294967296X\", x)\n    case 1073741824:\n  \
    \      return fmt.Sprintf(\"%0805306368x\", x)\n    case 2147483648:\n       \
    \ return fmt.Sprintf(\"%0805306368X\", x)\n    case 4294967296:\n        return\
    \ fmt.Sprintf(\"%087777777776x\", x)\n    case 8589934", "    if base < 2 {\n\
    \        fmt.Println(\"Base must be greater than 1\")\n        return \"\"\n \
    \   }\n    if base > 10 {\n        fmt.Println(\"Base must be less than 10\")\n\
    \        return \"\"\n    }\n    x /= base\n    x %= base\n    return fmt.Sprintf(\"\
    %d\", x)\n}\n", "    if base < 10 {\n        fmt.Printf(\"base must be less than\
    \ 10\\n\")\n        return \"\"\n    }\n    switch base {\n    case 2:\n     \
    \   return fmt.Sprintf(\"%d\", x)\n    case 8:\n        return fmt.Sprintf(\"\
    %o\", x)\n    case 16:\n        return fmt.Sprintf(\"%x\", x)\n    case 32:\n\
    \        return fmt.Sprintf(\"%X\", x)\n    case 64:\n        return fmt.Sprintf(\"\
    %q\", x)\n    case 128:\n        return fmt.Sprintf(\"%v\", x)\n    default:\n\
    \        fmt.Printf(\"base %d is not supported\\n\", base)\n        return \"\"\
    \n    }\n}\n", "    if base < 2 {\n        fmt.Println(\"Base must be greater\
    \ than 1\")\n        return \"\"\n    }\n    if base > 10 {\n        fmt.Println(\"\
    Base must be less than 10\")\n        return \"\"\n    }\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x ",
  "    if base < 10 {\n        fmt.Printf(\"base must be less than 10\\n\")\n    \
    \    return \"\"\n    }\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    ", "    result := \"\"\n    if x < 0 {\n        x *=\
    \ -1\n    }\n    if base < 10 {\n        result += \"0\"\n    }\n    for i :=\
    \ 0; i < base; i++ {\n        result += \"0123456789\"[x % base]\n        x /=\
    \ base\n    }\n    return result\n}\n", "    if base < 10 {\n        fmt.Printf(\"\
    base must be less than 10\\n\")\n        return \"\"\n    }\n    x /= base\n \
    \   x %= base\n    return fmt.Sprintf(\"%d\", x)\n}\n", "    if base < 10 {\n\
    \        fmt.Printf(\"base must be less than 10\\n\")\n        return \"\"\n \
    \   }\n    x /= base\n    x %= base\n    return fmt.Sprintf(\"%d\", x)\n}\n",
  "    switch base {\n    case 2:\n        return fmt.Sprintf(\"%d\", x)\n    case\
    \ 10:\n        return fmt.Sprintf(\"%d\", x)\n    case 16:\n        return fmt.Sprintf(\"\
    %x\", x)\n    case 32:\n        return fmt.Sprintf(\"%o\", x)\n    case 64:\n\
    \        return fmt.Sprintf(\"%x\", x)\n    case 128:\n        return fmt.Sprintf(\"\
    %X\", x)\n    case 256:\n        return fmt.Sprintf(\"%o\", x)\n    case 512:\n\
    \        return fmt.Sprintf(\"%x\", x)\n    case 1024:\n        return fmt.Sprintf(\"\
    %X\", x)\n    case 2048:\n        return fmt.Sprintf(\"%o\", x)\n    case 4096:\n\
    \        return fmt.Sprintf(\"%x\", x)\n    case 8192:\n        return fmt.Sprintf(\"\
    %X\", x)\n    case 16384:\n        return fmt.Sprintf(\"%o\", x)\n    case 32768:\n\
    \        return fmt.Sprintf(\"%x\", x)\n    case 65536:\n        return fmt.Sprintf(\"\
    %X\", x)\n    case 131072:\n        return fmt.Sprintf(\"%o\", x)\n    case 262144:\n\
    \        return fmt.Sprintf(\"%x\", x)\n    case 524288:\n        return fmt.Sprintf(\"\
    %X\", x)\n    case 1048576:\n        return fmt.Sprintf(\"%o\", x)\n    case 2097152:\n\
    \        return fmt.Sprintf(\"%x\", x)\n    case 4194304:\n        return fmt.Sprintf(\"\
    %o\", x)\n    case 8388608:\n        return fmt.Sprintf(\"%x\", x)\n    case 16777216:\n\
    \        return fmt.Sprintf(\"%o\", x)\n    case 33554432:\n        return fmt.Sprintf(\"\
    %x\", x)\n    case 67108864:\n        return fmt.Sprintf(\"%X\", x)\n    case\
    \ 134217728:\n        return fmt.Sprintf(\"%o\", x)\n    case 268435456:\n   \
    \     return fmt.Sprintf(\"%x\", x)\n    case 536870912:\n        return fmt.Sprintf(\"\
    %X\", x)\n    case 1073741824:\n        return fmt.Sprintf(\"%o\", x)\n    case\
    \ 2147483648:\n        return fmt.Sprintf(\"%x\", x)\n    case 4294967296:\n \
    \       return fmt.Sprintf(\"%X\", x)\n    case 8589934592:\n        return fmt.Sprintf(\"\
    %o\", x)\n    case 17179869184:\n        return fmt.Sprintf(\"%x\", x)\n    case\
    \ 34359738368:\n        return fmt.Sprintf(\"%o\", x)\n    case 68719476736:\n\
    \        return fmt.Sprintf(\"%x\", x)\n    case 137438953472:\n        return\
    \ fmt.Sprintf(\"%o\", x)\n    case 274", "    if base < 2 {\n        fmt.Println(\"\
    Base must be greater than 1.\")\n        return \"\"\n    }\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x ", "    if base\
    \ < 10 {\n        fmt.Printf(\"base must be less than 10\\n\")\n        return\
    \ \"\"\n    }\n    x /= base\n    x %= base\n    if x == 0 {\n        return fmt.Sprintf(\"\
    %d\", x)\n    }\n    return fmt.Sprintf(\"%d%v\", x, base)\n}\n", "    if base\
    \ < 10 {\n        fmt.Printf(\"base must be less than 10\\n\")\n        return\
    \ \"\"\n    }\n    result := \"\"\n    switch base {\n    case 2:\n        result\
    \ = fmt.Sprintf(\"%d\", x)\n    case 8:\n        result = fmt.Sprintf(\"%o\",\
    \ x)\n    case 16:\n        result = fmt.Sprintf(\"%x\", x)\n    case 32:\n  \
    \      result = fmt.Sprintf(\"%X\", x)\n    case 64:\n        result = fmt.Sprintf(\"\
    %llx\", x)\n    case 128:\n        result = fmt.Sprintf(\"%llX\", x)\n    case\
    \ 256:\n        result = fmt.Sprintf(\"%0128x\", x)\n    case 512:\n        result\
    \ = fmt.Sprintf(\"%0128X\", x)\n    case 1024:\n        result = fmt.Sprintf(\"\
    %0256x\", x)\n    case 2048:\n        result = fmt.Sprintf(\"%0256X\", x)\n  \
    \  case 4096:\n        result = fmt.Sprintf(\"%0512x\", x)\n    case 8192:\n \
    \       result = fmt.Sprintf(\"%0512X\", x)\n    case 16384:\n        result =\
    \ fmt.Sprintf(\"%06256x\", x)\n    case 32768:\n        result = fmt.Sprintf(\"\
    %06256X\", x)\n    case 65536:\n        result = fmt.Sprintf(\"%064512x\", x)\n\
    \    case 131072:\n        result = fmt.Sprintf(\"%064512X\", x)\n    case 262144:\n\
    \        result = fmt.Sprintf(\"%07483648\", x)\n    case 524288:\n        result\
    \ = fmt.Sprintf(\"%07483648\", x)\n    case 1048576:\n        result = fmt.Sprintf(\"\
    %087437184\", x)\n    case 2097152:\n        result = fmt.Sprintf(\"%087437184\"\
    , x)\n    case 4194304:\n        result = fmt.Sprintf(\"%0924262144\", x)\n  \
    \  case 8388608:\n        result = fmt.Sprintf(\"%0924262144\", x)\n    case 16777216:\n\
    \        result = fmt.Sprintf(\"%10485760\", x)\n    case 33554432:\n        result\
    \ = fmt.Sprintf(\"%10485760\", x)\n    case 67108864:\n        result = fmt.Sprintf(\"\
    %11141152\", x)\n    case 134217728:\n        result = fmt.Sprintf(\"%11141152\"\
    , x)\n    case 268435456:\n        result = fmt.Sprintf(\"%1267740\", x)\n   \
    \ case 536870912:\n        result = fmt.Sprintf(\"%1267740\", x)\n    case 1073741824:\n\
    \        result = fmt.Sprintf(\"%134217728\", x)\n    case 2147483648:\n     \
    \   result = fmt.Sprintf(\"%134217728\", x)", "    switch base {\n    case 2:\n\
    \        return fmt.Sprintf(\"%d\", x)\n    case 10:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 16:\n        return fmt.Sprintf(\"%x\", x)\n    case 32:\n\
    \        return fmt.Sprintf(\"%o\", x)\n    case 64:\n        return fmt.Sprintf(\"\
    %x\", x)\n    default:\n        return fmt.Sprintf(\"%d\", x)\n    }\n}\n", " \
    \   switch base {\n    case 2:\n        return fmt.Sprintf(\"%d\", x)\n    case\
    \ 10:\n        return fmt.Sprintf(\"%d\", x)\n    case 16:\n        return fmt.Sprintf(\"\
    %x\", x)\n    case 32:\n        return fmt.Sprintf(\"%o\", x)\n    case 64:\n\
    \        return fmt.Sprintf(\"%x\", x)\n    default:\n        return fmt.Sprintf(\"\
    %d\", x)\n    }\n}\n", "    switch base {\n    case 2:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 10:\n        return fmt.Sprintf(\"%d\", x)\n    case 16:\n\
    \        return fmt.Sprintf(\"%x\", x)\n    case 10:\n        return fmt.Sprintf(\"\
    %x\", x)\n    case 16:\n        return fmt.Sprintf(\"%X\", x)\n    default:\n\
    \        return fmt.Sprintf(\"%d\", x)\n    }\n}\n", "    if base < 10 {\n   \
    \     fmt.Println(\"base must be less than 10\")\n        return \"\"\n    }\n\
    \    switch base {\n    case 2:\n        return fmt.Sprintf(\"%d\", x)\n    case\
    \ 8:\n        return fmt.Sprintf(\"%o\", x)\n    case 16:\n        return fmt.Sprintf(\"\
    %x\", x)\n    case 32:\n        return fmt.Sprintf(\"%X\", x)\n    case 64:\n\
    \        return fmt.Sprintf(\"%lld\", x)\n    case 128:\n        return fmt.Sprintf(\"\
    %llx\", x)\n    case 256:\n        return fmt.Sprintf(\"%llX\", x)\n    case 512:\n\
    \        return fmt.Sprintf(\"%lld\", x)\n    case 1024:\n        return fmt.Sprintf(\"\
    %lld\", x)\n    case 2048:\n        return fmt.Sprintf(\"%lld\", x)\n    case\
    \ 4096:\n        return fmt.Sprintf(\"%lld\", x)\n    case 8192:\n        return\
    \ fmt.Sprintf(\"%lld\", x)\n    case 16384:\n        return fmt.Sprintf(\"%lld\"\
    , x)\n    case 32768:\n        return fmt.Sprintf(\"%lld\", x)\n    case 65536:\n\
    \        return fmt.Sprintf(\"%lld\", x)\n    case 131072:\n        return fmt.Sprintf(\"\
    %lld\", x)\n    case 262144:\n        return fmt.Sprintf(\"%lld\", x)\n    case\
    \ 524288:\n        return fmt.Sprintf(\"%lld\", x)\n    case 1048576:\n      \
    \  return fmt.Sprintf(\"%lld\", x)\n    case 2097152:\n        return fmt.Sprintf(\"\
    %lld\", x)\n    case 4194304:\n        return fmt.Sprintf(\"%lld\", x)\n    case\
    \ 8388608:\n        return fmt.Sprintf(\"%lld\", x)\n    case 16777216:\n    \
    \    return fmt.Sprintf(\"%lld\", x)\n    case 33554432:\n        return fmt.Sprintf(\"\
    %lld\", x)\n    case 67108864:\n        return fmt.Sprintf(\"%lld\", x)\n    case\
    \ 134217728:\n        return fmt.Sprintf(\"%lld\", x)\n    case 268435456:\n \
    \       return fmt.Sprintf(\"%lld\", x)\n    case 536870912:\n        return fmt.Sprintf(\"\
    %lld\", x)\n    case 1073741824:\n        return fmt.Sprintf(\"%lld\", x)\n  \
    \  case 2147483648:\n        return fmt.Sprintf(\"%lld\", x)\n    case 4294967296:\n\
    \        return fmt.Sprintf(\"%lld\", x)\n    case 8589934592:\n        return\
    \ fmt.Sprintf(\"%lld\", x)\n    case 17179869184:\n        return fmt.Sprintf(\"\
    %lld\", x)\n    case 34359738368:\n        return fmt.Sprintf(\"%lld\", x)\n \
    \   case ", "    switch base {\n    case 2:\n        return fmt.Sprintf(\"%v\"\
    , x)\n    case 10:\n        return fmt.Sprintf(\"%v\", x)\n    case 16:\n    \
    \    return fmt.Sprintf(\"%v\", x)\n    case 20:\n        return fmt.Sprintf(\"\
    %v\", x)\n    case 32:\n        return fmt.Sprintf(\"%v\", x)\n    case 64:\n\
    \        return fmt.Sprintf(\"%v\", x)\n    case 128:\n        return fmt.Sprintf(\"\
    %v\", x)\n    case 256:\n        return fmt.Sprintf(\"%v\", x)\n    case 512:\n\
    \        return fmt.Sprintf(\"%v\", x)\n    case 1024:\n        return fmt.Sprintf(\"\
    %v\", x)\n    case 2048:\n        return fmt.Sprintf(\"%v\", x)\n    case 4096:\n\
    \        return fmt.Sprintf(\"%v\", x)\n    case 8192:\n        return fmt.Sprintf(\"\
    %v\", x)\n    case 16384:\n        return fmt.Sprintf(\"%v\", x)\n    case 32768:\n\
    \        return fmt.Sprintf(\"%v\", x)\n    case 65536:\n        return fmt.Sprintf(\"\
    %v\", x)\n    case 131072:\n        return fmt.Sprintf(\"%v\", x)\n    case 262144:\n\
    \        return fmt.Sprintf(\"%v\", x)\n    case 524288:\n        return fmt.Sprintf(\"\
    %v\", x)\n    case 1048576:\n        return fmt.Sprintf(\"%v\", x)\n    case 2097152:\n\
    \        return fmt.Sprintf(\"%v\", x)\n    case 4194304:\n        return fmt.Sprintf(\"\
    %v\", x)\n    case 8388608:\n        return fmt.Sprintf(\"%v\", x)\n    case 16777216:\n\
    \        return fmt.Sprintf(\"%v\", x)\n    case 33554432:\n        return fmt.Sprintf(\"\
    %v\", x)\n    case 67108864:\n        return fmt.Sprintf(\"%v\", x)\n    case\
    \ 134217728:\n        return fmt.Sprintf(\"%v\", x)\n    case 268435456:\n   \
    \     return fmt.Sprintf(\"%v\", x)\n    case 536870912:\n        return fmt.Sprintf(\"\
    %v\", x)\n    case 1073741824:\n        return fmt.Sprintf(\"%v\", x)\n    case\
    \ 2147483648:\n        return fmt.Sprintf(\"%v\", x)\n    case 4294967296:\n \
    \       return fmt.Sprintf(\"%v\", x)\n    case 8589934592:\n        return fmt.Sprintf(\"\
    %v\", x)\n    case 17179869184:\n        return fmt.Sprintf(\"%v\", x)\n    case\
    \ 34359738368:\n        return fmt.Sprintf(\"%v\", x)\n    case 68719476736:",
  "    switch base {\n    case 2:\n        return fmt.Sprintf(\"%d\", x)\n    case\
    \ 10:\n        return fmt.Sprintf(\"%d\", x)\n    case 16:\n        return fmt.Sprintf(\"\
    %x\", x)\n    case 32:\n        return fmt.Sprintf(\"%o\", x)\n    case 64:\n\
    \        return fmt.Sprintf(\"%x\", x)\n    case 128:\n        return fmt.Sprintf(\"\
    %llx\", x)\n    case 256:\n        return fmt.Sprintf(\"%llx\", x)\n    case 512:\n\
    \        return fmt.Sprintf(\"%llx\", x)\n    case 1024:\n        return fmt.Sprintf(\"\
    %llx\", x)\n    case 2048:\n        return fmt.Sprintf(\"%llx\", x)\n    case\
    \ 4096:\n        return fmt.Sprintf(\"%llx\", x)\n    case 8192:\n        return\
    \ fmt.Sprintf(\"%llx\", x)\n    case 16384:\n        return fmt.Sprintf(\"%llx\"\
    , x)\n    case 32768:\n        return fmt.Sprintf(\"%llx\", x)\n    case 65536:\n\
    \        return fmt.Sprintf(\"%llx\", x)\n    case 131072:\n        return fmt.Sprintf(\"\
    %llx\", x)\n    case 262144:\n        return fmt.Sprintf(\"%llx\", x)\n    case\
    \ 524288:\n        return fmt.Sprintf(\"%llx\", x)\n    case 1048576:\n      \
    \  return fmt.Sprintf(\"%llx\", x)\n    case 2097152:\n        return fmt.Sprintf(\"\
    %llx\", x)\n    case 4194304:\n        return fmt.Sprintf(\"%llx\", x)\n    case\
    \ 8388608:\n        return fmt.Sprintf(\"%llx\", x)\n    case 16777216:\n    \
    \    return fmt.Sprintf(\"%llx\", x)\n    case 33554432:\n        return fmt.Sprintf(\"\
    %llx\", x)\n    case 67108864:\n        return fmt.Sprintf(\"%llx\", x)\n    case\
    \ 134217728:\n        return fmt.Sprintf(\"%llx\", x)\n    case 268435456:\n \
    \       return fmt.Sprintf(\"%llx\", x)\n    case 536870912:\n        return fmt.Sprintf(\"\
    %llx\", x)\n    case 1073741824:\n        return fmt.Sprintf(\"%llx\", x)\n  \
    \  case 2147483648:\n        return fmt.Sprintf(\"%llx\", x)\n    case 4294967296:\n\
    \        return fmt.Sprintf(\"%llx\", x)\n    case 8589934592:\n        return\
    \ fmt.Sprintf(\"%llx\", x)\n    case 17179869184:\n        return fmt.Sprintf(\"\
    %llx\", x)\n    case 34359738368:\n        return fmt.Sprintf(\"%llx\", x)\n \
    \   case 68719476736:\n        return fmt.Sprintf(\"%llx\", x)\n    case 137438953472:\n",
  "    if base < 10 {\n        fmt.Println(\"Base must be less than 10\")\n      \
    \  return \"\"\n    }\n    x /= base\n    x %= base\n    return fmt.Sprintf(\"\
    %d\", x)\n}\n", "    if base < 10 {\n        fmt.Printf(\"base must be less than\
    \ 10\\n\")\n        return \"\"\n    }\n    x /= base\n    x %= base\n    if x\
    \ == 0 {\n        return fmt.Sprintf(\"%d\", x)\n    }\n    return fmt.Sprintf(\"\
    %d%v\", x, base)\n}\n", "    switch base {\n    case 2:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 10:\n        return fmt.Sprintf(\"%d\", x)\n    case 16:\n\
    \        return fmt.Sprintf(\"%d\", x)\n    case 32:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 64:\n        return fmt.Sprintf(\"%d\", x)\n    case 128:\n\
    \        return fmt.Sprintf(\"%d\", x)\n    case 256:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 512:\n        return fmt.Sprintf(\"%d\", x)\n    case 1024:\n\
    \        return fmt.Sprintf(\"%d\", x)\n    case 2048:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 4096:\n        return fmt.Sprintf(\"%d\", x)\n    case 8192:\n\
    \        return fmt.Sprintf(\"%d\", x)\n    case 16384:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 32768:\n        return fmt.Sprintf(\"%d\", x)\n    case 65536:\n\
    \        return fmt.Sprintf(\"%d\", x)\n    case 131072:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 262144:\n        return fmt.Sprintf(\"%d\", x)\n    case 524288:\n\
    \        return fmt.Sprintf(\"%d\", x)\n    case 1048576:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 2097152:\n        return fmt.Sprintf(\"%d\", x)\n    case 4194304:\n\
    \        return fmt.Sprintf(\"%d\", x)\n    case 8388608:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 16777216:\n        return fmt.Sprintf(\"%d\", x)\n    case\
    \ 33554432:\n        return fmt.Sprintf(\"%d\", x)\n    case 67108864:\n     \
    \   return fmt.Sprintf(\"%d\", x)\n    case 134217728:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 268435456:\n        return fmt.Sprintf(\"%d\", x)\n    case\
    \ 536870912:\n        return fmt.Sprintf(\"%d\", x)\n    case 1073741824:\n  \
    \      return fmt.Sprintf(\"%d\", x)\n    case 2147483648:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 4294967296:\n        return fmt.Sprintf(\"%d\", x)\n    case\
    \ 8589934592:\n        return fmt.Sprintf(\"%d\", x)\n    case 17179869184:\n\
    \        return fmt.Sprintf(\"%d\", x)\n    case 34359738368:\n        return\
    \ fmt.Sprintf(\"%d\", x)\n    case 68719476736:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 137438953472:\n        return fmt.Sprintf(\"%d\", x)\n    case\
    \ 274877906944:\n        return fmt.Sprintf(\"%d\", x)\n    case 549755813888:\n\
    \        return fmt.Sprintf(\"%d\", x)\n    case 1099511627776:\n        return\
    \ fmt.Sprintf(\"%d\", x)\n    case 2199023255552:\n        return fmt.Sprintf(\"",
  "    if base < 10 {\n        fmt.Printf(\"base must be less than 10\\n\")\n    \
    \    return \"\"\n    }\n    x /= base\n    x %= base\n    if x == 0 {\n     \
    \   return \"\"\n    }\n    x /= base\n    x %= base\n    if x == 0 {\n      \
    \  return \"\"\n    }\n    x /= base\n    x %= base\n    if x == 0 {\n       \
    \ return \"\"\n    }\n    x /= base\n    x %= base\n    if x == 0 {\n        return\
    \ \"\"\n    }\n    x /= base\n    x %= base\n    if x == 0 {\n        return \"\
    \"\n    }\n    x /= base\n    x %= base\n    if x == 0 {\n        return \"\"\n\
    \    }\n    x /= base\n    x %= base\n    if x == 0 {\n        return \"\"\n \
    \   }\n    x /= base\n    x %= base\n    if x == 0 {\n        return \"\"\n  \
    \  }\n    x /= base\n    x %= base\n    if x == 0 {\n        return \"\"\n   \
    \ }\n    x /= base\n    x %= base\n    if x == 0 {\n        return \"\"\n    }\n\
    \    x /= base\n    x %= base\n    if x == 0 {\n        return \"\"\n    }\n \
    \   x /= base\n    x %= base\n    if x == 0 {\n        return \"\"\n    }\n  \
    \  x /= base\n    x %= base\n    if x == 0 {\n        return \"\"\n    }\n   \
    \ x /= base\n    x %= base\n    if x == 0 {\n        return \"\"\n    }\n    x\
    \ /= base\n    x %= base\n    if x == 0 {\n        return \"\"\n    }\n    x /=\
    \ base\n    x %= base\n    if x == 0 {\n        return \"\"\n    }\n    x /= base\n\
    \    x %= base\n    if x == 0 {\n        return \"\"\n    }\n    x /= base\n \
    \   x %= base\n    if x == 0 {\n        return \"\"\n    }\n    x /= base\n  \
    \  x %= base\n    if x == 0 {\n        return \"\"\n    }\n    x /= base\n   \
    \ x %= base\n    if x == 0 {\n        return \"\"\n    }\n    x /= base\n    x\
    \ %= base\n    if x == 0 {\n        return \"\"\n    }\n    x /= base\n    x %=\
    \ base\n    if x == 0 {\n        return \"\"\n    }\n    x /= base\n    x %= base\n\
    \    if x == 0 {\n        return \"\"\n    }\n    x /= base\n    x %= base\n \
    \   if x == 0 {\n        return \"\"\n    }\n    x /= base\n    x %= base\n  \
    \  if x == 0 {\n        return \"\"\n    }\n    x /= base\n    x %= base\n   \
    \ if x == 0 {\n        return \"\"", "    x /= base\n    x %= base\n    return\
    \ fmt.Sprintf(\"%d\", x)\n}\n", "    if base < 10 {\n        fmt.Printf(\"base\
    \ must be less than 10\\n\")\n        return \"\"\n    }\n    x /= base\n    x\
    \ %= base\n    return fmt.Sprintf(\"%d\", x)\n}\n", "    switch base {\n    case\
    \ 2:\n        return fmt.Sprintf(\"%d\", x)\n    case 10:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 16:\n        return fmt.Sprintf(\"%d\", x)\n    case 2:\n \
    \       return fmt.Sprintf(\"%d\", x)\n    case 10:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 16:\n        return fmt.Sprintf(\"%d\", x)\n    case 2:\n \
    \       return fmt.Sprintf(\"%d\", x)\n    case 10:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 16:\n        return fmt.Sprintf(\"%d\", x)\n    case 2:\n \
    \       return fmt.Sprintf(\"%d\", x)\n    case 10:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 16:\n        return fmt.Sprintf(\"%d\", x)\n    case 2:\n \
    \       return fmt.Sprintf(\"%d\", x)\n    case 10:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 16:\n        return fmt.Sprintf(\"%d\", x)\n    case 2:\n \
    \       return fmt.Sprintf(\"%d\", x)\n    case 10:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 16:\n        return fmt.Sprintf(\"%d\", x)\n    case 2:\n \
    \       return fmt.Sprintf(\"%d\", x)\n    case 10:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 16:\n        return fmt.Sprintf(\"%d\", x)\n    case 2:\n \
    \       return fmt.Sprintf(\"%d\", x)\n    case 10:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 16:\n        return fmt.Sprintf(\"%d\", x)\n    case 2:\n \
    \       return fmt.Sprintf(\"%d\", x)\n    case 10:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 16:\n        return fmt.Sprintf(\"%d\", x)\n    case 2:\n \
    \       return fmt.Sprintf(\"%d\", x)\n    case 10:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 16:\n        return fmt.Sprintf(\"%d\", x)\n    case 2:\n \
    \       return fmt.Sprintf(\"%d\", x)\n    case 10:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 16:\n        return fmt.Sprintf(\"%d\", x)\n    case 2:\n \
    \       return fmt.Sprintf(\"%d\", x)\n    case 10:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 16:\n        return fmt.Sprintf(\"%d\", x)\n    case 2:\n \
    \       return fmt.Sprintf(\"%d\", x)\n    case 10:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 16:\n        return fmt.Sprintf(\"%d\", x)\n    case 2:\n \
    \       return fmt.Sprintf(\"%d\", x)\n    case 10:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 16:\n        return fmt.Sprintf(\"%d\", x)\n    case 2:\n \
    \       return fmt.Sprintf(\"%d\", x)\n    case 10:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 16:\n        return fmt.Sprintf(\"%d\", x)\n    case 2:\n \
    \       return fmt.Sprintf(\"%d\", x)\n    case 10:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 16:\n        return fmt.Sprintf(\"%d\", x)\n    case 2:\n \
    \       return fmt.Sprintf(\"%d\", x)\n    case 10:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 16:\n        return fmt.Sprintf(\"", "    if base < 10 {\n\
    \        fmt.Printf(\"base must be less than 10\\n\")\n        return \"\"\n \
    \   }\n    x /= base\n    x %= base\n    return fmt.Sprintf(\"%d\", x)\n}\n",
  "    if base < 10 {\n        fmt.Println(\"Base must be less than 10\")\n      \
    \  return \"\"\n    }\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    ", "    switch base {\n    case 2:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 8:\n        return fmt.Sprintf(\"%o\", x)\n    case 16:\n \
    \       return fmt.Sprintf(\"%x\", x)\n    case 32:\n        return fmt.Sprintf(\"\
    %X\", x)\n    case 64:\n        return fmt.Sprintf(\"%llx\", x)\n    default:\n\
    \        return fmt.Sprintf(\"%d\", x)\n    }\n}\n", "    if base < 10 {\n   \
    \     fmt.Printf(\"base must be less than 10\\n\")\n        return \"\"\n    }\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   ", "    if base < 10 {\n        fmt.Printf(\"base must be less than 10\\n\"\
    )\n        return \"\"\n    }\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    ", "    if base < 10 {\n        fmt.Printf(\"\
    base must be less than 10\\n\")\n        return \"\"\n    }\n    x /= base\n \
    \   x %= base\n    if x<0 {\n        x *= -1\n    }\n    x /= base\n    x %= base\n\
    \    if x<0 {\n        x *= -1\n    }\n    x /= base\n    x %= base\n    if x<0\
    \ {\n        x *= -1\n    }\n    x /= base\n    x %= base\n    if x<0 {\n    \
    \    x *= -1\n    }\n    x /= base\n    x %= base\n    if x<0 {\n        x *=\
    \ -1\n    }\n    x /= base\n    x %= base\n    if x<0 {\n        x *= -1\n   \
    \ }\n    x /= base\n    x %= base\n    if x<0 {\n        x *= -1\n    }\n    x\
    \ /= base\n    x %= base\n    if x<0 {\n        x *= -1\n    }\n    x /= base\n\
    \    x %= base\n    if x<0 {\n        x *= -1\n    }\n    x /= base\n    x %=\
    \ base\n    if x<0 {\n        x *= -1\n    }\n    x /= base\n    x %= base\n \
    \   if x<0 {\n        x *= -1\n    }\n    x /= base\n    x %= base\n    if x<0\
    \ {\n        x *= -1\n    }\n    x /= base\n    x %= base\n    if x<0 {\n    \
    \    x *= -1\n    }\n    x /= base\n    x %= base\n    if x<0 {\n        x *=\
    \ -1\n    }\n    x /= base\n    x %= base\n    if x<0 {\n        x *= -1\n   \
    \ }\n    x /= base\n    x %= base\n    if x<0 {\n        x *= -1\n    }\n    x\
    \ /= base\n    x %= base\n    if x<0 {\n        x *= -1\n    }\n    x /= base\n\
    \    x %= base\n    if x<0 {\n        x *= -1\n    }\n    x /= base\n    x %=\
    \ base\n    if x<0 {\n        x *= -1\n    }\n    x /= base\n    x %= base\n \
    \   if x<0 {\n        x *= -1\n    }\n    x /= base\n    x %= base\n    if x<0\
    \ {\n        x *= -1\n    }\n    x /= base\n    x %= base\n    if x<0 {\n    \
    \    x *= -1\n    }\n    x /= base\n    x %= base\n    if x<0 {\n        x *=\
    \ -1\n    }\n    x /= base\n    x %= ", "    switch base {\n    case 2:\n    \
    \    return fmt.Sprintf(\"%d\", x)\n    case 10:\n        return fmt.Sprintf(\"\
    %d\", x)\n    case 16:\n        return fmt.Sprintf(\"%x\", x)\n    case 32:\n\
    \        return fmt.Sprintf(\"%o\", x)\n    case 64:\n        return fmt.Sprintf(\"\
    %x\", x)\n    case 128:\n        return fmt.Sprintf(\"%llx\", x)\n    case 256:\n\
    \        return fmt.Sprintf(\"%x\", x)\n    default:\n        return fmt.Sprintf(\"\
    %d\", x)\n    }\n}\n", "    switch base {\n    case 2:\n        return fmt.Sprintf(\"\
    %v\", x)\n    case 8:\n        return fmt.Sprintf(\"%v\", x/10)\n    case 16:\n\
    \        return fmt.Sprintf(\"%v\", x/100)\n    case 32:\n        return fmt.Sprintf(\"\
    %v\", x/1000)\n    case 64:\n        return fmt.Sprintf(\"%v\", x/1000000)\n \
    \   case 128:\n        return fmt.Sprintf(\"%v\", x/1000000000)\n    case 256:\n\
    \        return fmt.Sprintf(\"%v\", x/1000000000000)\n    case 512:\n        return\
    \ fmt.Sprintf(\"%v\", x/1000000000000000)\n    case 1024:\n        return fmt.Sprintf(\"\
    %v\", x/1000000000000000000)\n    case 2048:\n        return fmt.Sprintf(\"%v\"\
    , x/100000000000000000000)\n    case 4096:\n        return fmt.Sprintf(\"%v\"\
    , x/10000000000000000000000)\n    case 8192:\n        return fmt.Sprintf(\"%v\"\
    , x/1000000000000000000000000)\n    case 16384:\n        return fmt.Sprintf(\"\
    %v\", x/100000000000000000000000000)\n    case 32768:\n        return fmt.Sprintf(\"\
    %v\", x/10000000000000000000000000000)\n    case 65536:\n        return fmt.Sprintf(\"\
    %v\", x/10000000000000000000000000000000)\n    case 131072:\n        return fmt.Sprintf(\"\
    %v\", x/1000000000000000000000000000000000)\n    case 262144:\n        return\
    \ fmt.Sprintf(\"%v\", x/1000000000000000000000000000000000000)\n    case 524288:\n\
    \        return fmt.Sprintf(\"%v\", x/1000000000000000000000000000000000000000)\n\
    \    case 1048576:\n        return fmt.Sprintf(\"%v\", x/10000000000000000000000000000000000000000)\n\
    \    case 2097152:\n        return fmt.Sprintf(\"%v\", x/1000000000000000000000000000000000000000)\n\
    \    case 4194304:\n        return fmt.Sprintf(\"%v\", x/100000000000000000000000000000000000000000)\n\
    \    case 8388608:\n        return fmt.Sprintf(\"%v\", x/100000000000000000000000000000000000000000000)\n\
    \    case 16777216:\n        return fmt.Sprintf(\"%v\", x/100000000000000000000000000000000000000000000000)\n\
    \    case 33554432:\n        return fmt.Sprintf(\"%v\", x/1000000000000000000000000000000000000000000000000)\n\
    \    case 67108864:\n        return fmt.Sprintf(\"%v\", x/100000000000000000000000000000000000000000000000)\n\
    \    case 134217728:\n        return fmt.Sprintf(\"%v\", x/100000000000000000000000000000000000000000)\n\
    \    case 268435456:\n        return fmt.Sprintf(\"%v\", x/100000000000000000000000000000000000000000000)\n\
    \    case 536870912:\n        return fmt.Sprintf(\"%v\", x/1000000000000000000000000000000000000000000",
  "    switch base {\n    case 2:\n        return fmt.Sprintf(\"%d\", x)\n    case\
    \ 10:\n        return fmt.Sprintf(\"%d\", x)\n    case 16:\n        return fmt.Sprintf(\"\
    %x\", x)\n    case 32:\n        return fmt.Sprintf(\"%o\", x)\n    case 64:\n\
    \        return fmt.Sprintf(\"%x\", x)\n    case 128:\n        return fmt.Sprintf(\"\
    %llx\", x)\n    default:\n        fmt.Printf(\"invalid base: %d\\n\", base)\n\
    \    }\n    return \"\"\n}\n", "    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x ", "    if base < 10 {\n        fmt.Printf(\"base must be\
    \ less than 10\\n\")\n        return \"\"\n    }\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    ", "    if base < 10 {\n   \
    \     fmt.Printf(\"base must be less than 10\\n\")\n        return \"\"\n    }\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n  \
    \  x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n   \
    \ x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x\
    \ %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /=\
    \ base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n\
    \    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n \
    \   x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n  \
    \  x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n   \
    \ x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x\
    \ /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %=\
    \ base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n    x /= base\n\
    \    x %= base\n    x /= base\n    x %= base\n    x /= base\n    x %= base\n \
    \   ", "    switch base {\n    case 2:\n        return fmt.Sprintf(\"%d\", x)\n\
    \    case 10:\n        return fmt.Sprintf(\"%d\", x)\n    case 16:\n        return\
    \ fmt.Sprintf(\"%x\", x)\n    case 32:\n        return fmt.Sprintf(\"%o\", x)\n\
    \    case 64:\n        return fmt.Sprintf(\"%x\", x)\n    case 128:\n        return\
    \ fmt.Sprintf(\"%llx\", x)\n    default:\n        return fmt.Sprintf(\"%d\", x)\n\
    \    }\n}\n", "    switch base {\n    case 2:\n        return fmt.Sprintf(\"%d\"\
    , x)\n    case 10:\n        return fmt.Sprintf(\"%d\", x)\n    case 16:\n    \
    \    return fmt.Sprintf(\"%x\", x)\n    case 10:\n        return fmt.Sprintf(\"\
    %x\", x)\n    case 16:\n        return fmt.Sprintf(\"%X\", x)\n    case 10:\n\
    \        return fmt.Sprintf(\"%X\", x)\n    case 16:\n        return fmt.Sprintf(\"\
    %o\", x)\n    case 10:\n        return fmt.Sprintf(\"%o\", x)\n    case 16:\n\
    \        return fmt.Sprintf(\"%e\", x)\n    case 10:\n        return fmt.Sprintf(\"\
    %e\", x)\n    case 16:\n        return fmt.Sprintf(\"%f\", x)\n    case 10:\n\
    \        return fmt.Sprintf(\"%f\", x)\n    case 16:\n        return fmt.Sprintf(\"\
    %g\", x)\n    case 10:\n        return fmt.Sprintf(\"%g\", x)\n    case 16:\n\
    \        return fmt.Sprintf(\"%a\", x)\n    case 10:\n        return fmt.Sprintf(\"\
    %a\", x)\n    case 16:\n        return fmt.Sprintf(\"%A\", x)\n    case 10:\n\
    \        return fmt.Sprintf(\"%A\", x)\n    case 16:\n        return fmt.Sprintf(\"\
    %c\", x)\n    case 10:\n        return fmt.Sprintf(\"%c\", x)\n    case 16:\n\
    \        return fmt.Sprintf(\"%C\", x)\n    case 10:\n        return fmt.Sprintf(\"\
    %C\", x)\n    case 16:\n        return fmt.Sprintf(\"%e\", x)\n    case 10:\n\
    \        return fmt.Sprintf(\"%e\", x)\n    case 16:\n        return fmt.Sprintf(\"\
    %g\", x)\n    case 10:\n        return fmt.Sprintf(\"%g\", x)\n    case 16:\n\
    \        return fmt.Sprintf(\"%o\", x)\n    case 10:\n        return fmt.Sprintf(\"\
    %o\", x)\n    case 16:\n        return fmt.Sprintf(\"%x\", x)\n    case 10:\n\
    \        return fmt.Sprintf(\"%x\", x)\n    case 16:\n        return fmt.Sprintf(\"\
    %X\", x)\n    case 10:\n        return fmt.Sprintf(\"%X\", x)\n    case 16:\n\
    \        return fmt.Sprintf(\"%o\", x)\n    case 10:\n        return fmt.Sprintf(\"\
    %o\", x)\n    case 16:\n        return fmt.Sprintf(\"%e\", x)\n    case 10:\n\
    \        return fmt.Sprintf(\"%e\", x)\n    case 16:\n        return fmt.Sprintf(\"\
    %f\", x)\n    case 10:\n        return fmt.Sprintf(\"%f\", x)\n    case 16:\n\
    \        return fmt.Sprintf(\"%g\", x)\n    case 10:\n        return fmt.Sprintf(\"\
    %g\", x)\n    case 16:\n        return fmt.Sprintf(\"%a\", x)\n    case 10:\n\
    \        return fmt.Sprintf(\"%a\", x)\n    case 16:\n        return fmt.Sprintf(\"\
    %A\", x)\n    case 10:\n        return fmt.Sprintf(\""]
stop_tokens:
- "\nfunc"
- struct
- "\n// "
